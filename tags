!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A9SCU	src/dev/arm/RealView.py	/^class A9SCU(BasicPioDevice):$/;"	c
A9SCU	src/dev/arm/a9scu.cc	/^A9SCU::A9SCU(Params *p)$/;"	f	class:A9SCU
A9SCU	src/dev/arm/a9scu.hh	/^class A9SCU : public BasicPioDevice$/;"	c
AArch64Bit	src/arch/arm/types.hh	/^            AArch64Bit = (1 << 2)$/;"	e	enum:ArmISA::PCState::FlagBits
ACBit	src/arch/x86/regs/misc.hh	/^        ACBit = 1 << 18,$/;"	e	enum:X86ISA::RFLAGBit
ACPI	src/arch/x86/bios/acpi.hh	/^namespace ACPI$/;"	n	namespace:X86ISA
ACTIVATE_PER_TFAW	src/mem/ruby/system/RubyMemoryControl.hh	/^#define ACTIVATE_PER_TFAW /;"	d
ACTIVE_	src/mem/ruby/network/garnet/NetworkHeader.hh	/^enum VC_state_type {IDLE_, VC_AB_, ACTIVE_, NUM_VC_STATE_TYPE_};$/;"	e	enum:VC_state_type
ACT_CMD_COMPLETE	src/dev/ide_disk.hh	/^    ACT_CMD_COMPLETE,$/;"	e	enum:DevAction
ACT_CMD_ERROR	src/dev/ide_disk.hh	/^    ACT_CMD_ERROR,$/;"	e	enum:DevAction
ACT_CMD_WRITE	src/dev/ide_disk.hh	/^    ACT_CMD_WRITE,$/;"	e	enum:DevAction
ACT_DATA_READY	src/dev/ide_disk.hh	/^    ACT_DATA_READY,$/;"	e	enum:DevAction
ACT_DATA_READ_BYTE	src/dev/ide_disk.hh	/^    ACT_DATA_READ_BYTE,$/;"	e	enum:DevAction
ACT_DATA_READ_SHORT	src/dev/ide_disk.hh	/^    ACT_DATA_READ_SHORT,$/;"	e	enum:DevAction
ACT_DATA_WRITE_BYTE	src/dev/ide_disk.hh	/^    ACT_DATA_WRITE_BYTE,$/;"	e	enum:DevAction
ACT_DATA_WRITE_SHORT	src/dev/ide_disk.hh	/^    ACT_DATA_WRITE_SHORT,$/;"	e	enum:DevAction
ACT_DMA_DONE	src/dev/ide_disk.hh	/^    ACT_DMA_DONE,$/;"	e	enum:DevAction
ACT_DMA_READY	src/dev/ide_disk.hh	/^    ACT_DMA_READY,$/;"	e	enum:DevAction
ACT_NONE	src/dev/ide_disk.hh	/^    ACT_NONE = 0,$/;"	e	enum:DevAction
ACT_SELECT_WRITE	src/dev/ide_disk.hh	/^    ACT_SELECT_WRITE,$/;"	e	enum:DevAction
ACT_SRST_CLEAR	src/dev/ide_disk.hh	/^    ACT_SRST_CLEAR$/;"	e	enum:DevAction
ACT_SRST_SET	src/dev/ide_disk.hh	/^    ACT_SRST_SET,$/;"	e	enum:DevAction
ACT_STAT_READ	src/dev/ide_disk.hh	/^    ACT_STAT_READ,$/;"	e	enum:DevAction
ADDRESS_WIDTH	src/mem/ruby/common/Address.hh	/^const uint32_t ADDRESS_WIDTH = 64; \/\/ address width in bytes$/;"	v
ADD_FIELD16	src/dev/copy_engine_defs.hh	/^#define ADD_FIELD16(/;"	d
ADD_FIELD32	src/dev/copy_engine_defs.hh	/^#define ADD_FIELD32(/;"	d
ADD_FIELD32	src/dev/i8254xGBe_defs.hh	/^#define ADD_FIELD32(/;"	d
ADD_FIELD64	src/dev/copy_engine_defs.hh	/^#define ADD_FIELD64(/;"	d
ADD_FIELD64	src/dev/i8254xGBe_defs.hh	/^#define ADD_FIELD64(/;"	d
ADD_FIELD8	src/dev/copy_engine_defs.hh	/^#define ADD_FIELD8(/;"	d
AFBit	src/arch/x86/regs/misc.hh	/^        AFBit = 1 << 4,$/;"	e	enum:X86ISA::CondFlagBit
AGEN	src/cpu/inorder/pipeline_traits.5stage.hh	/^       AGEN,$/;"	e	enum:ThePipeline::ResourceList
AGEN	src/cpu/inorder/pipeline_traits.9stage.hh	/^       AGEN,$/;"	e	enum:ThePipeline::ResourceList
AGEN	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^       AGEN,$/;"	e	enum:ThePipeline::ResourceList
AGEN	src/cpu/inorder/pipeline_traits.hh	/^       AGEN,$/;"	e	enum:ThePipeline::ResourceId
AGENUnit	src/cpu/inorder/resources/agen_unit.cc	/^AGENUnit::AGENUnit(std::string res_name, int res_id, int res_width,$/;"	f	class:AGENUnit
AGENUnit	src/cpu/inorder/resources/agen_unit.hh	/^class AGENUnit : public Resource {$/;"	c
ALPHA_ACCESS_VERSION	src/dev/alpha/access.h	/^#define ALPHA_ACCESS_VERSION /;"	d
ALPHA_K0SEG_BASE	src/dev/alpha/tsunamireg.h	/^#define ALPHA_K0SEG_BASE /;"	d
ALPHA_K0SEG_BASE	src/dev/mips/maltareg.h	/^#define ALPHA_K0SEG_BASE /;"	d
ALTMODE	src/mem/request.hh	/^    static const FlagsType ALTMODE                     = 0x00000800;$/;"	m	class:Request
ALTSTAT_OFFSET	src/dev/ide_disk.hh	/^#define ALTSTAT_OFFSET /;"	d
ALT_MODE_AM	src/arch/alpha/ev5.hh	/^inline uint64_t ALT_MODE_AM(uint64_t reg) { return reg >> 3 & 0x3; }$/;"	f	namespace:AlphaISA
AMBA_CEL_ID0	src/dev/arm/amba_device.hh	/^    static const int AMBA_CEL_ID0 = 0xFF0;$/;"	m	class:AmbaDevice
AMBA_CEL_ID1	src/dev/arm/amba_device.hh	/^    static const int AMBA_CEL_ID1 = 0xFF4;$/;"	m	class:AmbaDevice
AMBA_CEL_ID2	src/dev/arm/amba_device.hh	/^    static const int AMBA_CEL_ID2 = 0xFF8;$/;"	m	class:AmbaDevice
AMBA_CEL_ID3	src/dev/arm/amba_device.hh	/^    static const int AMBA_CEL_ID3 = 0xFFC;$/;"	m	class:AmbaDevice
AMBA_ID	src/dev/arm/hdlcd.hh	/^    static const uint64_t AMBA_ID       = ULL(0xb105f00d00141000);$/;"	m	class:HDLcd
AMBA_ID	src/dev/arm/pl011.hh	/^    static const uint64_t AMBA_ID = ULL(0xb105f00d00341011);$/;"	m	class:Pl011
AMBA_ID	src/dev/arm/pl111.hh	/^    static const uint64_t AMBA_ID       = ULL(0xb105f00d00141111);$/;"	m	class:Pl111
AMBA_PER_ID0	src/dev/arm/amba_device.hh	/^    static const int AMBA_PER_ID0 = 0xFE0;$/;"	m	class:AmbaDevice
AMBA_PER_ID1	src/dev/arm/amba_device.hh	/^    static const int AMBA_PER_ID1 = 0xFE4;$/;"	m	class:AmbaDevice
AMBA_PER_ID2	src/dev/arm/amba_device.hh	/^    static const int AMBA_PER_ID2 = 0xFE8;$/;"	m	class:AmbaDevice
AMBA_PER_ID3	src/dev/arm/amba_device.hh	/^    static const int AMBA_PER_ID3 = 0xFEC;$/;"	m	class:AmbaDevice
AND	src/mem/ruby/common/NetDest.cc	/^NetDest::AND(const NetDest& andNetDest) const$/;"	f	class:NetDest
AND	src/mem/ruby/common/Set.cc	/^Set::AND(const Set& andSet) const$/;"	f	class:Set
ANNOTE_NONE	src/arch/alpha/types.hh	/^    ANNOTE_NONE = 0,$/;"	e	enum:AlphaISA::annotes
ANNOTE_NONE	src/arch/mips/isa_traits.hh	/^const int ANNOTE_NONE = 0;$/;"	m	namespace:MipsISA
AO	src/arch/x86/decoder_tables.cc	/^    const uint8_t AO = AddressSizeOverride;$/;"	m	namespace:X86ISA	file:
AOUT_LDPGSZ	src/arch/alpha/aout_machdep.h	/^#define AOUT_LDPGSZ /;"	d
APICVersion	src/dev/x86/i82094aa.hh	/^    static const uint8_t APICVersion = 0x14;$/;"	m	class:X86ISA::I82094AA
APIC_ARBITRATION_PRIORITY	src/arch/x86/regs/apic.hh	/^        APIC_ARBITRATION_PRIORITY,$/;"	e	enum:X86ISA::ApicRegIndex
APIC_CURRENT_COUNT	src/arch/x86/regs/apic.hh	/^        APIC_CURRENT_COUNT,$/;"	e	enum:X86ISA::ApicRegIndex
APIC_DESTINATION_FORMAT	src/arch/x86/regs/apic.hh	/^        APIC_DESTINATION_FORMAT,$/;"	e	enum:X86ISA::ApicRegIndex
APIC_DIVIDE_CONFIGURATION	src/arch/x86/regs/apic.hh	/^        APIC_DIVIDE_CONFIGURATION,$/;"	e	enum:X86ISA::ApicRegIndex
APIC_EOI	src/arch/x86/regs/apic.hh	/^        APIC_EOI,$/;"	e	enum:X86ISA::ApicRegIndex
APIC_ERROR_STATUS	src/arch/x86/regs/apic.hh	/^        APIC_ERROR_STATUS = APIC_INTERRUPT_REQUEST_BASE + 16,$/;"	e	enum:X86ISA::ApicRegIndex
APIC_ID	src/arch/x86/regs/apic.hh	/^        APIC_ID,$/;"	e	enum:X86ISA::ApicRegIndex
APIC_INITIAL_COUNT	src/arch/x86/regs/apic.hh	/^        APIC_INITIAL_COUNT,$/;"	e	enum:X86ISA::ApicRegIndex
APIC_INTERNAL_STATE	src/arch/x86/regs/apic.hh	/^        APIC_INTERNAL_STATE,$/;"	e	enum:X86ISA::ApicRegIndex
APIC_INTERRUPT_COMMAND_HIGH	src/arch/x86/regs/apic.hh	/^        APIC_INTERRUPT_COMMAND_HIGH,$/;"	e	enum:X86ISA::ApicRegIndex
APIC_INTERRUPT_COMMAND_LOW	src/arch/x86/regs/apic.hh	/^        APIC_INTERRUPT_COMMAND_LOW,$/;"	e	enum:X86ISA::ApicRegIndex
APIC_INTERRUPT_REQUEST	src/arch/x86/regs/apic.hh	/^    APIC_INTERRUPT_REQUEST(int index)$/;"	f	namespace:X86ISA
APIC_INTERRUPT_REQUEST_BASE	src/arch/x86/regs/apic.hh	/^        APIC_INTERRUPT_REQUEST_BASE = APIC_TRIGGER_MODE_BASE + 16,$/;"	e	enum:X86ISA::ApicRegIndex
APIC_IN_SERVICE	src/arch/x86/regs/apic.hh	/^    APIC_IN_SERVICE(int index)$/;"	f	namespace:X86ISA
APIC_IN_SERVICE_BASE	src/arch/x86/regs/apic.hh	/^        APIC_IN_SERVICE_BASE,$/;"	e	enum:X86ISA::ApicRegIndex
APIC_LOGICAL_DESTINATION	src/arch/x86/regs/apic.hh	/^        APIC_LOGICAL_DESTINATION,$/;"	e	enum:X86ISA::ApicRegIndex
APIC_LVT_ERROR	src/arch/x86/regs/apic.hh	/^        APIC_LVT_ERROR,$/;"	e	enum:X86ISA::ApicRegIndex
APIC_LVT_LINT0	src/arch/x86/regs/apic.hh	/^        APIC_LVT_LINT0,$/;"	e	enum:X86ISA::ApicRegIndex
APIC_LVT_LINT1	src/arch/x86/regs/apic.hh	/^        APIC_LVT_LINT1,$/;"	e	enum:X86ISA::ApicRegIndex
APIC_LVT_PERFORMANCE_MONITORING_COUNTERS	src/arch/x86/regs/apic.hh	/^        APIC_LVT_PERFORMANCE_MONITORING_COUNTERS,$/;"	e	enum:X86ISA::ApicRegIndex
APIC_LVT_THERMAL_SENSOR	src/arch/x86/regs/apic.hh	/^        APIC_LVT_THERMAL_SENSOR,$/;"	e	enum:X86ISA::ApicRegIndex
APIC_LVT_TIMER	src/arch/x86/regs/apic.hh	/^        APIC_LVT_TIMER,$/;"	e	enum:X86ISA::ApicRegIndex
APIC_PROCESSOR_PRIORITY	src/arch/x86/regs/apic.hh	/^        APIC_PROCESSOR_PRIORITY,$/;"	e	enum:X86ISA::ApicRegIndex
APIC_SPURIOUS_INTERRUPT_VECTOR	src/arch/x86/regs/apic.hh	/^        APIC_SPURIOUS_INTERRUPT_VECTOR,$/;"	e	enum:X86ISA::ApicRegIndex
APIC_TASK_PRIORITY	src/arch/x86/regs/apic.hh	/^        APIC_TASK_PRIORITY,$/;"	e	enum:X86ISA::ApicRegIndex
APIC_TRIGGER_MODE	src/arch/x86/regs/apic.hh	/^    APIC_TRIGGER_MODE(int index)$/;"	f	namespace:X86ISA
APIC_TRIGGER_MODE_BASE	src/arch/x86/regs/apic.hh	/^        APIC_TRIGGER_MODE_BASE = APIC_IN_SERVICE_BASE + 16,$/;"	e	enum:X86ISA::ApicRegIndex
APIC_VERSION	src/arch/x86/regs/apic.hh	/^        APIC_VERSION,$/;"	e	enum:X86ISA::ApicRegIndex
APMInfo	src/arch/x86/cpuid.cc	/^        APMInfo,$/;"	e	enum:X86ISA::ExtendedCpuidFunctions	file:
APPLY_DREG	src/cpu/kvm/x86_cpu.cc	/^#define APPLY_DREG(/;"	d	file:
APPLY_DREG	src/cpu/kvm/x86_cpu.cc	/^#undef APPLY_DREG$/;"	d	file:
APPLY_DTABLE	src/cpu/kvm/x86_cpu.cc	/^#define APPLY_DTABLE(/;"	d	file:
APPLY_DTABLE	src/cpu/kvm/x86_cpu.cc	/^#undef APPLY_DTABLE$/;"	d	file:
APPLY_IREG	src/cpu/kvm/x86_cpu.cc	/^#define APPLY_IREG(/;"	d	file:
APPLY_IREG	src/cpu/kvm/x86_cpu.cc	/^#undef APPLY_IREG$/;"	d	file:
APPLY_SEGMENT	src/cpu/kvm/x86_cpu.cc	/^#define APPLY_SEGMENT(/;"	d	file:
APPLY_SEGMENT	src/cpu/kvm/x86_cpu.cc	/^#undef APPLY_SEGMENT$/;"	d	file:
APPLY_SREG	src/cpu/kvm/x86_cpu.cc	/^#define APPLY_SREG(/;"	d	file:
APPLY_SREG	src/cpu/kvm/x86_cpu.cc	/^#undef APPLY_SREG$/;"	d	file:
AR	src/arch/arm/faults.hh	/^        AR     \/\/ DataAbort: Acquire\/Release semantics$/;"	e	enum:ArmISA::ArmFault::AnnotationIDs
ARCH_BITS	src/mem/request.hh	/^    static const FlagsType ARCH_BITS                   = 0x000000FF;$/;"	m	class:Request
ARRAY_DATA	src/mem/packet.hh	/^    static const FlagsType ARRAY_DATA             = 0x00004000;$/;"	m	class:Packet
ASI	src/arch/sparc/asi.hh	/^enum ASI {$/;"	g	namespace:SparcISA
ASI_AIUP	src/arch/sparc/asi.hh	/^    ASI_AIUP = 0x10,$/;"	e	enum:SparcISA::ASI
ASI_AIUP_L	src/arch/sparc/asi.hh	/^    ASI_AIUP_L = 0x18,$/;"	e	enum:SparcISA::ASI
ASI_AIUS	src/arch/sparc/asi.hh	/^    ASI_AIUS = 0x11,$/;"	e	enum:SparcISA::ASI
ASI_AIUS_L	src/arch/sparc/asi.hh	/^    ASI_AIUS_L = 0x19,$/;"	e	enum:SparcISA::ASI
ASI_AS_IF_USER_PRIMARY	src/arch/sparc/asi.hh	/^    ASI_AS_IF_USER_PRIMARY = ASI_AIUP,$/;"	e	enum:SparcISA::ASI
ASI_AS_IF_USER_PRIMARY_LITTLE	src/arch/sparc/asi.hh	/^    ASI_AS_IF_USER_PRIMARY_LITTLE = ASI_AIUP_L,$/;"	e	enum:SparcISA::ASI
ASI_AS_IF_USER_SECONDARY	src/arch/sparc/asi.hh	/^    ASI_AS_IF_USER_SECONDARY = ASI_AIUS,$/;"	e	enum:SparcISA::ASI
ASI_AS_IF_USER_SECONDARY_LITTLE	src/arch/sparc/asi.hh	/^    ASI_AS_IF_USER_SECONDARY_LITTLE = ASI_AIUS_L,$/;"	e	enum:SparcISA::ASI
ASI_BLK_AIUP	src/arch/sparc/asi.hh	/^    ASI_BLK_AIUP = 0x16,$/;"	e	enum:SparcISA::ASI
ASI_BLK_AIUP_L	src/arch/sparc/asi.hh	/^    ASI_BLK_AIUP_L = 0x1E,$/;"	e	enum:SparcISA::ASI
ASI_BLK_AIUS	src/arch/sparc/asi.hh	/^    ASI_BLK_AIUS = 0x17,$/;"	e	enum:SparcISA::ASI
ASI_BLK_AIUS_L	src/arch/sparc/asi.hh	/^    ASI_BLK_AIUS_L = 0x1F,$/;"	e	enum:SparcISA::ASI
ASI_BLK_P	src/arch/sparc/asi.hh	/^    ASI_BLK_P = 0xF0,$/;"	e	enum:SparcISA::ASI
ASI_BLK_PL	src/arch/sparc/asi.hh	/^    ASI_BLK_PL = 0xF8,$/;"	e	enum:SparcISA::ASI
ASI_BLK_S	src/arch/sparc/asi.hh	/^    ASI_BLK_S = 0xF1,$/;"	e	enum:SparcISA::ASI
ASI_BLK_SL	src/arch/sparc/asi.hh	/^    ASI_BLK_SL = 0xF9,$/;"	e	enum:SparcISA::ASI
ASI_BLOCK_AS_IF_USER_PRIMARY	src/arch/sparc/asi.hh	/^    ASI_BLOCK_AS_IF_USER_PRIMARY = ASI_BLK_AIUP,$/;"	e	enum:SparcISA::ASI
ASI_BLOCK_AS_IF_USER_PRIMARY_LITTLE	src/arch/sparc/asi.hh	/^    ASI_BLOCK_AS_IF_USER_PRIMARY_LITTLE = ASI_BLK_AIUP_L,$/;"	e	enum:SparcISA::ASI
ASI_BLOCK_AS_IF_USER_SECONDARY	src/arch/sparc/asi.hh	/^    ASI_BLOCK_AS_IF_USER_SECONDARY = ASI_BLK_AIUS,$/;"	e	enum:SparcISA::ASI
ASI_BLOCK_AS_IF_USER_SECONDARY_LITTLE	src/arch/sparc/asi.hh	/^    ASI_BLOCK_AS_IF_USER_SECONDARY_LITTLE = ASI_BLK_AIUS_L,$/;"	e	enum:SparcISA::ASI
ASI_BLOCK_PRIMARY	src/arch/sparc/asi.hh	/^    ASI_BLOCK_PRIMARY = ASI_BLK_P,$/;"	e	enum:SparcISA::ASI
ASI_BLOCK_PRIMARY_LITTLE	src/arch/sparc/asi.hh	/^    ASI_BLOCK_PRIMARY_LITTLE = ASI_BLK_PL,$/;"	e	enum:SparcISA::ASI
ASI_BLOCK_SECONDARY	src/arch/sparc/asi.hh	/^    ASI_BLOCK_SECONDARY = ASI_BLK_S,$/;"	e	enum:SparcISA::ASI
ASI_BLOCK_SECONDARY_LITTLE	src/arch/sparc/asi.hh	/^    ASI_BLOCK_SECONDARY_LITTLE = ASI_BLK_SL,$/;"	e	enum:SparcISA::ASI
ASI_CMT_PER_STRAND	src/arch/sparc/asi.hh	/^    ASI_CMT_PER_STRAND = 0x63,$/;"	e	enum:SparcISA::ASI
ASI_CMT_SHARED	src/arch/sparc/asi.hh	/^    ASI_CMT_SHARED = 0x41,$/;"	e	enum:SparcISA::ASI
ASI_DCACHE_DATA	src/arch/sparc/asi.hh	/^    ASI_DCACHE_DATA = 0x46,$/;"	e	enum:SparcISA::ASI
ASI_DCACHE_TAG	src/arch/sparc/asi.hh	/^    ASI_DCACHE_TAG = 0x47,$/;"	e	enum:SparcISA::ASI
ASI_DMMU	src/arch/sparc/asi.hh	/^    ASI_DMMU = 0x58,$/;"	e	enum:SparcISA::ASI
ASI_DMMU_CTXT_NONZERO_CONFIG	src/arch/sparc/asi.hh	/^    ASI_DMMU_CTXT_NONZERO_CONFIG = 0x3B,$/;"	e	enum:SparcISA::ASI
ASI_DMMU_CTXT_NONZERO_TSB_BASE_PS0	src/arch/sparc/asi.hh	/^    ASI_DMMU_CTXT_NONZERO_TSB_BASE_PS0 = 0x39,$/;"	e	enum:SparcISA::ASI
ASI_DMMU_CTXT_NONZERO_TSB_BASE_PS1	src/arch/sparc/asi.hh	/^    ASI_DMMU_CTXT_NONZERO_TSB_BASE_PS1 = 0x3A,$/;"	e	enum:SparcISA::ASI
ASI_DMMU_CTXT_ZERO_CONFIG	src/arch/sparc/asi.hh	/^    ASI_DMMU_CTXT_ZERO_CONFIG = 0x33,$/;"	e	enum:SparcISA::ASI
ASI_DMMU_CTXT_ZERO_TSB_BASE_PS0	src/arch/sparc/asi.hh	/^    ASI_DMMU_CTXT_ZERO_TSB_BASE_PS0 = 0x31,$/;"	e	enum:SparcISA::ASI
ASI_DMMU_CTXT_ZERO_TSB_BASE_PS1	src/arch/sparc/asi.hh	/^    ASI_DMMU_CTXT_ZERO_TSB_BASE_PS1 = 0x32,$/;"	e	enum:SparcISA::ASI
ASI_DMMU_DEMAP	src/arch/sparc/asi.hh	/^    ASI_DMMU_DEMAP = 0x5F,$/;"	e	enum:SparcISA::ASI
ASI_DMMU_TSB_DIRECT_PTR_REG	src/arch/sparc/asi.hh	/^    ASI_DMMU_TSB_DIRECT_PTR_REG = 0x5B,$/;"	e	enum:SparcISA::ASI
ASI_DMMU_TSB_PS0_PTR_REG	src/arch/sparc/asi.hh	/^    ASI_DMMU_TSB_PS0_PTR_REG = 0x59,$/;"	e	enum:SparcISA::ASI
ASI_DMMU_TSB_PS1_PTR_REG	src/arch/sparc/asi.hh	/^    ASI_DMMU_TSB_PS1_PTR_REG = 0x5A,$/;"	e	enum:SparcISA::ASI
ASI_DTLB_DATA_ACCESS_REG	src/arch/sparc/asi.hh	/^    ASI_DTLB_DATA_ACCESS_REG = 0x5D,$/;"	e	enum:SparcISA::ASI
ASI_DTLB_DATA_IN_REG	src/arch/sparc/asi.hh	/^    ASI_DTLB_DATA_IN_REG = 0x5C,$/;"	e	enum:SparcISA::ASI
ASI_DTLB_TAG_READ_REG	src/arch/sparc/asi.hh	/^    ASI_DTLB_TAG_READ_REG = 0x5E,$/;"	e	enum:SparcISA::ASI
ASI_ECACHE_TAG_DATA	src/arch/sparc/asi.hh	/^    ASI_ECACHE_TAG_DATA = 0x4E,$/;"	e	enum:SparcISA::ASI
ASI_FL16_P	src/arch/sparc/asi.hh	/^    ASI_FL16_P = 0xD2,$/;"	e	enum:SparcISA::ASI
ASI_FL16_PL	src/arch/sparc/asi.hh	/^    ASI_FL16_PL = 0xDA,$/;"	e	enum:SparcISA::ASI
ASI_FL16_PRIMARY	src/arch/sparc/asi.hh	/^    ASI_FL16_PRIMARY = ASI_FL16_P,$/;"	e	enum:SparcISA::ASI
ASI_FL16_PRIMARY_LITTLE	src/arch/sparc/asi.hh	/^    ASI_FL16_PRIMARY_LITTLE = ASI_FL16_PL,$/;"	e	enum:SparcISA::ASI
ASI_FL16_S	src/arch/sparc/asi.hh	/^    ASI_FL16_S = 0xD3,$/;"	e	enum:SparcISA::ASI
ASI_FL16_SECONDARY	src/arch/sparc/asi.hh	/^    ASI_FL16_SECONDARY = ASI_FL16_S,$/;"	e	enum:SparcISA::ASI
ASI_FL16_SECONDARY_LITTLE	src/arch/sparc/asi.hh	/^    ASI_FL16_SECONDARY_LITTLE = ASI_FL16_SL,$/;"	e	enum:SparcISA::ASI
ASI_FL16_SL	src/arch/sparc/asi.hh	/^    ASI_FL16_SL = 0xDB,$/;"	e	enum:SparcISA::ASI
ASI_FL8_P	src/arch/sparc/asi.hh	/^    ASI_FL8_P = 0xD0,$/;"	e	enum:SparcISA::ASI
ASI_FL8_PL	src/arch/sparc/asi.hh	/^    ASI_FL8_PL = 0xD8,$/;"	e	enum:SparcISA::ASI
ASI_FL8_PRIMARY	src/arch/sparc/asi.hh	/^    ASI_FL8_PRIMARY = ASI_FL8_P,$/;"	e	enum:SparcISA::ASI
ASI_FL8_PRIMARY_LITTLE	src/arch/sparc/asi.hh	/^    ASI_FL8_PRIMARY_LITTLE = ASI_FL8_PL,$/;"	e	enum:SparcISA::ASI
ASI_FL8_S	src/arch/sparc/asi.hh	/^    ASI_FL8_S = 0xD1,$/;"	e	enum:SparcISA::ASI
ASI_FL8_SECONDARY	src/arch/sparc/asi.hh	/^    ASI_FL8_SECONDARY = ASI_FL8_S,$/;"	e	enum:SparcISA::ASI
ASI_FL8_SECONDARY_LITTLE	src/arch/sparc/asi.hh	/^    ASI_FL8_SECONDARY_LITTLE = ASI_FL8_SL,$/;"	e	enum:SparcISA::ASI
ASI_FL8_SL	src/arch/sparc/asi.hh	/^    ASI_FL8_SL = 0xD9,$/;"	e	enum:SparcISA::ASI
ASI_HYP_SCRATCHPAD	src/arch/sparc/asi.hh	/^    ASI_HYP_SCRATCHPAD = 0x4F,$/;"	e	enum:SparcISA::ASI
ASI_ICACHE_INSTR	src/arch/sparc/asi.hh	/^    ASI_ICACHE_INSTR = 0x66,$/;"	e	enum:SparcISA::ASI
ASI_ICACHE_TAG	src/arch/sparc/asi.hh	/^    ASI_ICACHE_TAG = 0x67,$/;"	e	enum:SparcISA::ASI
ASI_IMMU	src/arch/sparc/asi.hh	/^    ASI_IMMU = 0x50,$/;"	e	enum:SparcISA::ASI
ASI_IMMU_CTXT_NONZERO_CONFIG	src/arch/sparc/asi.hh	/^    ASI_IMMU_CTXT_NONZERO_CONFIG = 0x3F,$/;"	e	enum:SparcISA::ASI
ASI_IMMU_CTXT_NONZERO_TSB_BASE_PS0	src/arch/sparc/asi.hh	/^    ASI_IMMU_CTXT_NONZERO_TSB_BASE_PS0 = 0x3D,$/;"	e	enum:SparcISA::ASI
ASI_IMMU_CTXT_NONZERO_TSB_BASE_PS1	src/arch/sparc/asi.hh	/^    ASI_IMMU_CTXT_NONZERO_TSB_BASE_PS1 = 0x3E,$/;"	e	enum:SparcISA::ASI
ASI_IMMU_CTXT_ZERO_CONFIG	src/arch/sparc/asi.hh	/^    ASI_IMMU_CTXT_ZERO_CONFIG = 0x37,$/;"	e	enum:SparcISA::ASI
ASI_IMMU_CTXT_ZERO_TSB_BASE_PS0	src/arch/sparc/asi.hh	/^    ASI_IMMU_CTXT_ZERO_TSB_BASE_PS0 = 0x35,$/;"	e	enum:SparcISA::ASI
ASI_IMMU_CTXT_ZERO_TSB_BASE_PS1	src/arch/sparc/asi.hh	/^    ASI_IMMU_CTXT_ZERO_TSB_BASE_PS1 = 0x36,$/;"	e	enum:SparcISA::ASI
ASI_IMMU_DEMAP	src/arch/sparc/asi.hh	/^    ASI_IMMU_DEMAP = 0x57,$/;"	e	enum:SparcISA::ASI
ASI_IMMU_TSB_PS0_PTR_REG	src/arch/sparc/asi.hh	/^    ASI_IMMU_TSB_PS0_PTR_REG = 0x51,$/;"	e	enum:SparcISA::ASI
ASI_IMMU_TSB_PS1_PTR_REG	src/arch/sparc/asi.hh	/^    ASI_IMMU_TSB_PS1_PTR_REG = 0x52,$/;"	e	enum:SparcISA::ASI
ASI_IMPLICIT	src/arch/sparc/asi.hh	/^    ASI_IMPLICIT = 0x00,$/;"	e	enum:SparcISA::ASI
ASI_INST_MASK_REG	src/arch/sparc/asi.hh	/^    ASI_INST_MASK_REG = 0x42,$/;"	e	enum:SparcISA::ASI
ASI_INTR_DISPATCH_STATUS	src/arch/sparc/asi.hh	/^    ASI_INTR_DISPATCH_STATUS = 0x48,$/;"	e	enum:SparcISA::ASI
ASI_INTR_RECEIVE	src/arch/sparc/asi.hh	/^    ASI_INTR_RECEIVE = 0x49,$/;"	e	enum:SparcISA::ASI
ASI_ITLB_DATA_ACCESS_REG	src/arch/sparc/asi.hh	/^    ASI_ITLB_DATA_ACCESS_REG = 0x55,$/;"	e	enum:SparcISA::ASI
ASI_ITLB_DATA_IN_REG	src/arch/sparc/asi.hh	/^    ASI_ITLB_DATA_IN_REG = 0x54,$/;"	e	enum:SparcISA::ASI
ASI_ITLB_TAG_READ_REG	src/arch/sparc/asi.hh	/^    ASI_ITLB_TAG_READ_REG = 0x56,$/;"	e	enum:SparcISA::ASI
ASI_LDTX_AIUP	src/arch/sparc/asi.hh	/^    ASI_LDTX_AIUP = 0x22,$/;"	e	enum:SparcISA::ASI
ASI_LDTX_AIUP_L	src/arch/sparc/asi.hh	/^    ASI_LDTX_AIUP_L = 0x2A,$/;"	e	enum:SparcISA::ASI
ASI_LDTX_AIUS	src/arch/sparc/asi.hh	/^    ASI_LDTX_AIUS = 0x23,$/;"	e	enum:SparcISA::ASI
ASI_LDTX_AIUS_L	src/arch/sparc/asi.hh	/^    ASI_LDTX_AIUS_L = 0x2B,$/;"	e	enum:SparcISA::ASI
ASI_LDTX_N	src/arch/sparc/asi.hh	/^    ASI_LDTX_N = 0x27,$/;"	e	enum:SparcISA::ASI
ASI_LDTX_NL	src/arch/sparc/asi.hh	/^    ASI_LDTX_NL = 0x2F,$/;"	e	enum:SparcISA::ASI
ASI_LDTX_P	src/arch/sparc/asi.hh	/^    ASI_LDTX_P = 0xE2,$/;"	e	enum:SparcISA::ASI
ASI_LDTX_PL	src/arch/sparc/asi.hh	/^    ASI_LDTX_PL = 0xEA,$/;"	e	enum:SparcISA::ASI
ASI_LDTX_REAL	src/arch/sparc/asi.hh	/^    ASI_LDTX_REAL = ASI_QUAD_LDD_REAL,$/;"	e	enum:SparcISA::ASI
ASI_LDTX_REAL_L	src/arch/sparc/asi.hh	/^    ASI_LDTX_REAL_L = 0x2E,$/;"	e	enum:SparcISA::ASI
ASI_LDTX_S	src/arch/sparc/asi.hh	/^    ASI_LDTX_S = 0xE3,$/;"	e	enum:SparcISA::ASI
ASI_LDTX_SL	src/arch/sparc/asi.hh	/^    ASI_LDTX_SL = 0xEB,$/;"	e	enum:SparcISA::ASI
ASI_LD_TWINX_AS_IF_USER_PRIMARY	src/arch/sparc/asi.hh	/^    ASI_LD_TWINX_AS_IF_USER_PRIMARY = ASI_LDTX_AIUP,$/;"	e	enum:SparcISA::ASI
ASI_LD_TWINX_AS_IF_USER_SECONDARY	src/arch/sparc/asi.hh	/^    ASI_LD_TWINX_AS_IF_USER_SECONDARY = ASI_LDTX_AIUS,$/;"	e	enum:SparcISA::ASI
ASI_LD_TWINX_AS_IF_USER_SECONDARY_LITTLE	src/arch/sparc/asi.hh	/^    ASI_LD_TWINX_AS_IF_USER_SECONDARY_LITTLE = ASI_LDTX_AIUS_L,$/;"	e	enum:SparcISA::ASI
ASI_LD_TWINX_NUCLEUS	src/arch/sparc/asi.hh	/^    ASI_LD_TWINX_NUCLEUS = ASI_LDTX_N,$/;"	e	enum:SparcISA::ASI
ASI_LD_TWINX_NUCLEUS_LITTLE	src/arch/sparc/asi.hh	/^    ASI_LD_TWINX_NUCLEUS_LITTLE = ASI_LDTX_NL,$/;"	e	enum:SparcISA::ASI
ASI_LD_TWINX_PRIMARY	src/arch/sparc/asi.hh	/^    ASI_LD_TWINX_PRIMARY = ASI_LDTX_P,$/;"	e	enum:SparcISA::ASI
ASI_LD_TWINX_PRIMARY_LITTLE	src/arch/sparc/asi.hh	/^    ASI_LD_TWINX_PRIMARY_LITTLE = ASI_LDTX_PL,$/;"	e	enum:SparcISA::ASI
ASI_LD_TWINX_REAL_LITTLE	src/arch/sparc/asi.hh	/^    ASI_LD_TWINX_REAL_LITTLE = ASI_LDTX_REAL_L,$/;"	e	enum:SparcISA::ASI
ASI_LD_TWINX_SECONDARY	src/arch/sparc/asi.hh	/^    ASI_LD_TWINX_SECONDARY = ASI_LDTX_S,$/;"	e	enum:SparcISA::ASI
ASI_LD_TWINX_SECONDARY_LITTLE	src/arch/sparc/asi.hh	/^    ASI_LD_TWINX_SECONDARY_LITTLE = ASI_LDTX_SL,$/;"	e	enum:SparcISA::ASI
ASI_LSU_CONTROL_REG	src/arch/sparc/asi.hh	/^    ASI_LSU_CONTROL_REG = 0x45,$/;"	e	enum:SparcISA::ASI
ASI_LSU_DIAG_REG	src/arch/sparc/asi.hh	/^    ASI_LSU_DIAG_REG = 0x42,$/;"	e	enum:SparcISA::ASI
ASI_LTX_L	src/arch/sparc/asi.hh	/^    ASI_LTX_L = 0x2C,$/;"	e	enum:SparcISA::ASI
ASI_MMU	src/arch/sparc/asi.hh	/^    ASI_MMU = 0x21,$/;"	e	enum:SparcISA::ASI
ASI_N	src/arch/sparc/asi.hh	/^    ASI_N = 0x4,$/;"	e	enum:SparcISA::ASI
ASI_NL	src/arch/sparc/asi.hh	/^    ASI_NL = 0xC,$/;"	e	enum:SparcISA::ASI
ASI_NUCLEUS	src/arch/sparc/asi.hh	/^    ASI_NUCLEUS = 0x4,$/;"	e	enum:SparcISA::ASI
ASI_NUCLEUS_LITTLE	src/arch/sparc/asi.hh	/^    ASI_NUCLEUS_LITTLE = ASI_NL,$/;"	e	enum:SparcISA::ASI
ASI_P	src/arch/sparc/asi.hh	/^    ASI_P = 0x80,$/;"	e	enum:SparcISA::ASI
ASI_PL	src/arch/sparc/asi.hh	/^    ASI_PL = 0x88,$/;"	e	enum:SparcISA::ASI
ASI_PNF	src/arch/sparc/asi.hh	/^    ASI_PNF = 0x82,$/;"	e	enum:SparcISA::ASI
ASI_PNFL	src/arch/sparc/asi.hh	/^    ASI_PNFL = 0x8A,$/;"	e	enum:SparcISA::ASI
ASI_PRIMARY	src/arch/sparc/asi.hh	/^    ASI_PRIMARY = ASI_P,$/;"	e	enum:SparcISA::ASI
ASI_PRIMARY_LITTLE	src/arch/sparc/asi.hh	/^    ASI_PRIMARY_LITTLE = ASI_PL,$/;"	e	enum:SparcISA::ASI
ASI_PRIMARY_NO_FAULT	src/arch/sparc/asi.hh	/^    ASI_PRIMARY_NO_FAULT = ASI_PNF,$/;"	e	enum:SparcISA::ASI
ASI_PRIMARY_NO_FAULT_LITTLE	src/arch/sparc/asi.hh	/^    ASI_PRIMARY_NO_FAULT_LITTLE = ASI_PNFL,$/;"	e	enum:SparcISA::ASI
ASI_PST16_P	src/arch/sparc/asi.hh	/^    ASI_PST16_P = 0xC2,$/;"	e	enum:SparcISA::ASI
ASI_PST16_PL	src/arch/sparc/asi.hh	/^    ASI_PST16_PL = 0xCA,$/;"	e	enum:SparcISA::ASI
ASI_PST16_PRIMARY	src/arch/sparc/asi.hh	/^    ASI_PST16_PRIMARY = ASI_PST16_P,$/;"	e	enum:SparcISA::ASI
ASI_PST16_PRIMARY_LITTLE	src/arch/sparc/asi.hh	/^    ASI_PST16_PRIMARY_LITTLE = ASI_PST16_PL,$/;"	e	enum:SparcISA::ASI
ASI_PST16_S	src/arch/sparc/asi.hh	/^    ASI_PST16_S = 0xC3,$/;"	e	enum:SparcISA::ASI
ASI_PST16_SECONDARY	src/arch/sparc/asi.hh	/^    ASI_PST16_SECONDARY = ASI_PST16_S,$/;"	e	enum:SparcISA::ASI
ASI_PST16_SECONDARY_LITTLE	src/arch/sparc/asi.hh	/^    ASI_PST16_SECONDARY_LITTLE = ASI_PST16_SL,$/;"	e	enum:SparcISA::ASI
ASI_PST16_SL	src/arch/sparc/asi.hh	/^    ASI_PST16_SL = 0xCB,$/;"	e	enum:SparcISA::ASI
ASI_PST32_P	src/arch/sparc/asi.hh	/^    ASI_PST32_P = 0xC4,$/;"	e	enum:SparcISA::ASI
ASI_PST32_PL	src/arch/sparc/asi.hh	/^    ASI_PST32_PL = 0xCC,$/;"	e	enum:SparcISA::ASI
ASI_PST32_PRIMARY	src/arch/sparc/asi.hh	/^    ASI_PST32_PRIMARY = ASI_PST32_P,$/;"	e	enum:SparcISA::ASI
ASI_PST32_PRIMARY_LITTLE	src/arch/sparc/asi.hh	/^    ASI_PST32_PRIMARY_LITTLE = ASI_PST32_PL,$/;"	e	enum:SparcISA::ASI
ASI_PST32_S	src/arch/sparc/asi.hh	/^    ASI_PST32_S = 0xC5,$/;"	e	enum:SparcISA::ASI
ASI_PST32_SECONDARY	src/arch/sparc/asi.hh	/^    ASI_PST32_SECONDARY = ASI_PST32_S,$/;"	e	enum:SparcISA::ASI
ASI_PST32_SECONDARY_LITTLE	src/arch/sparc/asi.hh	/^    ASI_PST32_SECONDARY_LITTLE = ASI_PST32_SL,$/;"	e	enum:SparcISA::ASI
ASI_PST32_SL	src/arch/sparc/asi.hh	/^    ASI_PST32_SL = 0xCD,$/;"	e	enum:SparcISA::ASI
ASI_PST8_P	src/arch/sparc/asi.hh	/^    ASI_PST8_P = 0xC0,$/;"	e	enum:SparcISA::ASI
ASI_PST8_PL	src/arch/sparc/asi.hh	/^    ASI_PST8_PL = 0xC8,$/;"	e	enum:SparcISA::ASI
ASI_PST8_PRIMARY	src/arch/sparc/asi.hh	/^    ASI_PST8_PRIMARY = ASI_PST8_P,$/;"	e	enum:SparcISA::ASI
ASI_PST8_PRIMARY_LITTLE	src/arch/sparc/asi.hh	/^    ASI_PST8_PRIMARY_LITTLE = ASI_PST8_PL,$/;"	e	enum:SparcISA::ASI
ASI_PST8_S	src/arch/sparc/asi.hh	/^    ASI_PST8_S = 0xC1,$/;"	e	enum:SparcISA::ASI
ASI_PST8_SECONDARY	src/arch/sparc/asi.hh	/^    ASI_PST8_SECONDARY = ASI_PST8_S,$/;"	e	enum:SparcISA::ASI
ASI_PST8_SECONDARY_LITTLE	src/arch/sparc/asi.hh	/^    ASI_PST8_SECONDARY_LITTLE = ASI_PST8_SL,$/;"	e	enum:SparcISA::ASI
ASI_PST8_SL	src/arch/sparc/asi.hh	/^    ASI_PST8_SL = 0xC9,$/;"	e	enum:SparcISA::ASI
ASI_QUAD_LDD	src/arch/sparc/asi.hh	/^    ASI_QUAD_LDD = 0x24,$/;"	e	enum:SparcISA::ASI
ASI_QUAD_LDD_REAL	src/arch/sparc/asi.hh	/^    ASI_QUAD_LDD_REAL = 0x26,$/;"	e	enum:SparcISA::ASI
ASI_QUEUE	src/arch/sparc/asi.hh	/^    ASI_QUEUE = 0x25,$/;"	e	enum:SparcISA::ASI
ASI_REAL	src/arch/sparc/asi.hh	/^    ASI_REAL = 0x14,$/;"	e	enum:SparcISA::ASI
ASI_REAL_IO	src/arch/sparc/asi.hh	/^    ASI_REAL_IO = 0x15,$/;"	e	enum:SparcISA::ASI
ASI_REAL_IO_L	src/arch/sparc/asi.hh	/^    ASI_REAL_IO_L = 0x1D,$/;"	e	enum:SparcISA::ASI
ASI_REAL_IO_LITTLE	src/arch/sparc/asi.hh	/^    ASI_REAL_IO_LITTLE = ASI_REAL_IO_L,$/;"	e	enum:SparcISA::ASI
ASI_REAL_L	src/arch/sparc/asi.hh	/^    ASI_REAL_L = 0x1C,$/;"	e	enum:SparcISA::ASI
ASI_REAL_LITTLE	src/arch/sparc/asi.hh	/^    ASI_REAL_LITTLE = ASI_REAL_L,$/;"	e	enum:SparcISA::ASI
ASI_S	src/arch/sparc/asi.hh	/^    ASI_S = 0x81,$/;"	e	enum:SparcISA::ASI
ASI_SCRATCHPAD	src/arch/sparc/asi.hh	/^    ASI_SCRATCHPAD = 0x20,$/;"	e	enum:SparcISA::ASI
ASI_SECONDARY	src/arch/sparc/asi.hh	/^    ASI_SECONDARY = ASI_S,$/;"	e	enum:SparcISA::ASI
ASI_SECONDARY_LITTLE	src/arch/sparc/asi.hh	/^    ASI_SECONDARY_LITTLE = ASI_SL,$/;"	e	enum:SparcISA::ASI
ASI_SECONDARY_NO_FAULT	src/arch/sparc/asi.hh	/^    ASI_SECONDARY_NO_FAULT = ASI_SNF,$/;"	e	enum:SparcISA::ASI
ASI_SECONDARY_NO_FAULT_LITTLE	src/arch/sparc/asi.hh	/^    ASI_SECONDARY_NO_FAULT_LITTLE = ASI_SNFL,$/;"	e	enum:SparcISA::ASI
ASI_SL	src/arch/sparc/asi.hh	/^    ASI_SL = 0x89,$/;"	e	enum:SparcISA::ASI
ASI_SNF	src/arch/sparc/asi.hh	/^    ASI_SNF = 0x83,$/;"	e	enum:SparcISA::ASI
ASI_SNFL	src/arch/sparc/asi.hh	/^    ASI_SNFL = 0x8B,$/;"	e	enum:SparcISA::ASI
ASI_SPARC_BIST_CONTROL	src/arch/sparc/asi.hh	/^    ASI_SPARC_BIST_CONTROL = 0x42,$/;"	e	enum:SparcISA::ASI
ASI_SPARC_ERROR_ADDRESS_REG	src/arch/sparc/asi.hh	/^    ASI_SPARC_ERROR_ADDRESS_REG = 0x4D,$/;"	e	enum:SparcISA::ASI
ASI_SPARC_ERROR_EN_REG	src/arch/sparc/asi.hh	/^    ASI_SPARC_ERROR_EN_REG = 0x4B,$/;"	e	enum:SparcISA::ASI
ASI_SPARC_ERROR_STATUS_REG	src/arch/sparc/asi.hh	/^    ASI_SPARC_ERROR_STATUS_REG = 0x4C,$/;"	e	enum:SparcISA::ASI
ASI_STBI_AIUP_L	src/arch/sparc/asi.hh	/^    ASI_STBI_AIUP_L = ASI_LDTX_AIUP_L,$/;"	e	enum:SparcISA::ASI
ASI_STBI_AIUS_L	src/arch/sparc/asi.hh	/^    ASI_STBI_AIUS_L = ASI_LDTX_AIUS_L,$/;"	e	enum:SparcISA::ASI
ASI_STBI_N	src/arch/sparc/asi.hh	/^    ASI_STBI_N = ASI_LDTX_N,$/;"	e	enum:SparcISA::ASI
ASI_STM_CTL_REG	src/arch/sparc/asi.hh	/^    ASI_STM_CTL_REG = 0x44,$/;"	e	enum:SparcISA::ASI
ASI_STREAM_MA	src/arch/sparc/asi.hh	/^    ASI_STREAM_MA = 0x40,$/;"	e	enum:SparcISA::ASI
ASI_ST_BLKINIT_AS_IF_USER_PRIMARY_LITTLE	src/arch/sparc/asi.hh	/^    ASI_ST_BLKINIT_AS_IF_USER_PRIMARY_LITTLE = ASI_LDTX_AIUP_L,$/;"	e	enum:SparcISA::ASI
ASI_ST_BLKINIT_AS_IF_USER_SECONDARY_LITTLE	src/arch/sparc/asi.hh	/^    ASI_ST_BLKINIT_AS_IF_USER_SECONDARY_LITTLE = ASI_LDTX_AIUS_L,$/;"	e	enum:SparcISA::ASI
ASI_ST_BLKINIT_NUCLEUS	src/arch/sparc/asi.hh	/^    ASI_ST_BLKINIT_NUCLEUS = ASI_LDTX_N,$/;"	e	enum:SparcISA::ASI
ASI_SWVR_INTR_RECEIVE	src/arch/sparc/asi.hh	/^    ASI_SWVR_INTR_RECEIVE = 0x72,$/;"	e	enum:SparcISA::ASI
ASI_SWVR_UDB_INTR_R	src/arch/sparc/asi.hh	/^    ASI_SWVR_UDB_INTR_R = 0x74,$/;"	e	enum:SparcISA::ASI
ASI_SWVR_UDB_INTR_W	src/arch/sparc/asi.hh	/^    ASI_SWVR_UDB_INTR_W = 0x73,$/;"	e	enum:SparcISA::ASI
ASI_TLB_INVALIDATE_ALL	src/arch/sparc/asi.hh	/^    ASI_TLB_INVALIDATE_ALL = 0x60,$/;"	e	enum:SparcISA::ASI
ASI_TWINX_AS_IF_USER_PRIMARY_LITTLE	src/arch/sparc/asi.hh	/^    ASI_TWINX_AS_IF_USER_PRIMARY_LITTLE = ASI_LDTX_AIUP_L,$/;"	e	enum:SparcISA::ASI
ASI_TWINX_LITTLE	src/arch/sparc/asi.hh	/^    ASI_TWINX_LITTLE = ASI_LTX_L,$/;"	e	enum:SparcISA::ASI
ASI_UPA_CONFIG_REGISTER	src/arch/sparc/asi.hh	/^    ASI_UPA_CONFIG_REGISTER = 0x4A,$/;"	e	enum:SparcISA::ASI
ASR	src/arch/arm/types.hh	/^        ASR,$/;"	e	enum:ArmISA::ArmShiftType
AST	src/mem/slicc/ast/AST.py	/^class AST(PairContainer):$/;"	c
AST	src/mem/slicc/ast/DeclAST.py	/^from slicc.ast.AST import AST$/;"	i
AST	src/mem/slicc/ast/DeclListAST.py	/^from slicc.ast.AST import AST$/;"	i
AST	src/mem/slicc/ast/ExprAST.py	/^from slicc.ast.AST import AST$/;"	i
AST	src/mem/slicc/ast/FormalParamAST.py	/^from slicc.ast.AST import AST$/;"	i
AST	src/mem/slicc/ast/PairAST.py	/^from slicc.ast.AST import AST$/;"	i
AST	src/mem/slicc/ast/PairListAST.py	/^from slicc.ast.AST import AST$/;"	i
AST	src/mem/slicc/ast/StatementAST.py	/^from slicc.ast.AST import AST$/;"	i
AST	src/mem/slicc/ast/StatementListAST.py	/^from slicc.ast.AST import AST$/;"	i
AST	src/mem/slicc/ast/TypeAST.py	/^from slicc.ast.AST import AST$/;"	i
AST	src/mem/slicc/ast/TypeFieldAST.py	/^from slicc.ast.AST import AST$/;"	i
ATAPI_CAP_ATA_RST	src/dev/ide_atareg.h	/^#define ATAPI_CAP_ATA_RST	/;"	d
ATAPI_CAP_CMD_QUEUE	src/dev/ide_atareg.h	/^#define ATAPI_CAP_CMD_QUEUE	/;"	d
ATAPI_CAP_INTERL_DMA	src/dev/ide_atareg.h	/^#define ATAPI_CAP_INTERL_DMA	/;"	d
ATAPI_CAP_OVERLP	src/dev/ide_atareg.h	/^#define ATAPI_CAP_OVERLP	/;"	d
ATAPI_CFA_MAX_MASK	src/dev/ide_atareg.h	/^#define ATAPI_CFA_MAX_MASK /;"	d
ATAPI_CFA_MODE1_DIS	src/dev/ide_atareg.h	/^#define ATAPI_CFA_MODE1_DIS /;"	d
ATAPI_CFA_MODE1_REQ	src/dev/ide_atareg.h	/^#define ATAPI_CFA_MODE1_REQ /;"	d
ATAPI_CFA_WORD160	src/dev/ide_atareg.h	/^#define ATAPI_CFA_WORD160 /;"	d
ATAPI_CFG_ACCEL_DRQ	src/dev/ide_atareg.h	/^#define ATAPI_CFG_ACCEL_DRQ	/;"	d
ATAPI_CFG_CMD_12	src/dev/ide_atareg.h	/^#define ATAPI_CFG_CMD_12	/;"	d
ATAPI_CFG_CMD_16	src/dev/ide_atareg.h	/^#define ATAPI_CFG_CMD_16	/;"	d
ATAPI_CFG_CMD_MASK	src/dev/ide_atareg.h	/^#define ATAPI_CFG_CMD_MASK	/;"	d
ATAPI_CFG_DRQ_MASK	src/dev/ide_atareg.h	/^#define ATAPI_CFG_DRQ_MASK	/;"	d
ATAPI_CFG_IRQ_DRQ	src/dev/ide_atareg.h	/^#define ATAPI_CFG_IRQ_DRQ	/;"	d
ATAPI_CFG_REMOV	src/dev/ide_atareg.h	/^#define ATAPI_CFG_REMOV	/;"	d
ATAPI_CFG_STD_DRQ	src/dev/ide_atareg.h	/^#define ATAPI_CFG_STD_DRQ	/;"	d
ATAPI_CFG_TYPE	src/dev/ide_atareg.h	/^#define ATAPI_CFG_TYPE(/;"	d
ATAPI_CFG_TYPE_CDROM	src/dev/ide_atareg.h	/^#define ATAPI_CFG_TYPE_CDROM	/;"	d
ATAPI_CFG_TYPE_DIRECT	src/dev/ide_atareg.h	/^#define ATAPI_CFG_TYPE_DIRECT	/;"	d
ATAPI_CFG_TYPE_MASK	src/dev/ide_atareg.h	/^#define ATAPI_CFG_TYPE_MASK	/;"	d
ATAPI_CFG_TYPE_NODEVICE	src/dev/ide_atareg.h	/^#define ATAPI_CFG_TYPE_NODEVICE	/;"	d
ATAPI_CFG_TYPE_OPTICAL	src/dev/ide_atareg.h	/^#define ATAPI_CFG_TYPE_OPTICAL	/;"	d
ATAPI_CFG_TYPE_SEQUENTIAL	src/dev/ide_atareg.h	/^#define ATAPI_CFG_TYPE_SEQUENTIAL	/;"	d
ATAPI_CHECK_POWER_MODE	src/dev/ide_wdcreg.h	/^#define ATAPI_CHECK_POWER_MODE	/;"	d
ATAPI_CMD2_48AD	src/dev/ide_atareg.h	/^#define ATAPI_CMD2_48AD	/;"	d
ATAPI_CMD2_AAM	src/dev/ide_atareg.h	/^#define ATAPI_CMD2_AAM	/;"	d
ATAPI_CMD2_DCO	src/dev/ide_atareg.h	/^#define ATAPI_CMD2_DCO	/;"	d
ATAPI_CMD2_FC	src/dev/ide_atareg.h	/^#define ATAPI_CMD2_FC	/;"	d
ATAPI_CMD2_FCE	src/dev/ide_atareg.h	/^#define ATAPI_CMD2_FCE	/;"	d
ATAPI_CMD2_PUIS	src/dev/ide_atareg.h	/^#define ATAPI_CMD2_PUIS	/;"	d
ATAPI_CMD2_SF	src/dev/ide_atareg.h	/^#define ATAPI_CMD2_SF	/;"	d
ATAPI_CMD2_SM	src/dev/ide_atareg.h	/^#define ATAPI_CMD2_SM	/;"	d
ATAPI_CMDE_MSER	src/dev/ide_atareg.h	/^#define ATAPI_CMDE_MSER	/;"	d
ATAPI_CMDE_SLOG	src/dev/ide_atareg.h	/^#define ATAPI_CMDE_SLOG	/;"	d
ATAPI_CMDE_TEST	src/dev/ide_atareg.h	/^#define ATAPI_CMDE_TEST	/;"	d
ATAPI_DEVICE_RESET	src/dev/ide_wdcreg.h	/^#define ATAPI_DEVICE_RESET	/;"	d
ATAPI_EXEC_DRIVE_DIAGS	src/dev/ide_wdcreg.h	/^#define ATAPI_EXEC_DRIVE_DIAGS	/;"	d
ATAPI_IDENTIFY_DEVICE	src/dev/ide_wdcreg.h	/^#define ATAPI_IDENTIFY_DEVICE	/;"	d
ATAPI_IDLE_IMMEDIATE	src/dev/ide_wdcreg.h	/^#define ATAPI_IDLE_IMMEDIATE	/;"	d
ATAPI_NOP	src/dev/ide_wdcreg.h	/^#define ATAPI_NOP	/;"	d
ATAPI_PKT_CMD	src/dev/ide_wdcreg.h	/^#define ATAPI_PKT_CMD	/;"	d
ATAPI_PKT_CMD_FTRE_DMA	src/dev/ide_wdcreg.h	/^#define ATAPI_PKT_CMD_FTRE_DMA	/;"	d
ATAPI_PKT_CMD_FTRE_OVL	src/dev/ide_wdcreg.h	/^#define ATAPI_PKT_CMD_FTRE_OVL	/;"	d
ATAPI_SETMAX	src/dev/ide_wdcreg.h	/^#define ATAPI_SETMAX	/;"	d
ATAPI_SETMAXEXT	src/dev/ide_wdcreg.h	/^#define ATAPI_SETMAXEXT	/;"	d
ATAPI_SLEEP	src/dev/ide_wdcreg.h	/^#define ATAPI_SLEEP	/;"	d
ATAPI_SMART	src/dev/ide_wdcreg.h	/^#define ATAPI_SMART	/;"	d
ATAPI_SOFT_RESET	src/dev/ide_wdcreg.h	/^#define ATAPI_SOFT_RESET	/;"	d
ATAPI_STANDBY_IMMEDIATE	src/dev/ide_wdcreg.h	/^#define ATAPI_STANDBY_IMMEDIATE	/;"	d
ATAPI_WRITEEXT	src/dev/ide_wdcreg.h	/^#define ATAPI_WRITEEXT	/;"	d
ATAPI_WRITEMULTIEXT	src/dev/ide_wdcreg.h	/^#define ATAPI_WRITEMULTIEXT	/;"	d
ATA_BYTE_ORDER	src/dev/ide_atareg.h	/^#define ATA_BYTE_ORDER /;"	d
ATA_BYTE_ORDER	src/dev/ide_atareg.h	/^#undef ATA_BYTE_ORDER$/;"	d
ATA_CAP_STBY	src/dev/ide_atareg.h	/^#define ATA_CAP_STBY	/;"	d
ATA_CFG_FIXED	src/dev/ide_atareg.h	/^#define ATA_CFG_FIXED	/;"	d
ATA_CFG_REMOVABLE	src/dev/ide_atareg.h	/^#define ATA_CFG_REMOVABLE	/;"	d
ATA_CMD2_APM	src/dev/ide_atareg.h	/^#define ATA_CMD2_APM	/;"	d
ATA_CMD2_CFA	src/dev/ide_atareg.h	/^#define ATA_CMD2_CFA	/;"	d
ATA_CMD2_RWQ	src/dev/ide_atareg.h	/^#define ATA_CMD2_RWQ	/;"	d
ATA_HWRES_CBLID	src/dev/ide_atareg.h	/^#define ATA_HWRES_CBLID /;"	d
ATA_HWRES_D0_CSEL	src/dev/ide_atareg.h	/^#define ATA_HWRES_D0_CSEL /;"	d
ATA_HWRES_D0_DASP	src/dev/ide_atareg.h	/^#define ATA_HWRES_D0_DASP /;"	d
ATA_HWRES_D0_DIAG	src/dev/ide_atareg.h	/^#define ATA_HWRES_D0_DIAG /;"	d
ATA_HWRES_D0_JUMP	src/dev/ide_atareg.h	/^#define ATA_HWRES_D0_JUMP /;"	d
ATA_HWRES_D0_PDIAG	src/dev/ide_atareg.h	/^#define ATA_HWRES_D0_PDIAG /;"	d
ATA_HWRES_D0_SEL	src/dev/ide_atareg.h	/^#define ATA_HWRES_D0_SEL /;"	d
ATA_HWRES_D1_CSEL	src/dev/ide_atareg.h	/^#define ATA_HWRES_D1_CSEL /;"	d
ATA_HWRES_D1_JUMP	src/dev/ide_atareg.h	/^#define ATA_HWRES_D1_JUMP /;"	d
ATA_HWRES_D1_PDIAG	src/dev/ide_atareg.h	/^#define ATA_HWRES_D1_PDIAG /;"	d
ATA_PCI_DMA	src/dev/mips/maltareg.h	/^#define ATA_PCI_DMA /;"	d
ATA_PCI_DMA2	src/dev/mips/maltareg.h	/^#define ATA_PCI_DMA2 /;"	d
ATA_PCI_DMA3	src/dev/mips/maltareg.h	/^#define ATA_PCI_DMA3 /;"	d
ATA_PCI_DMA4	src/dev/mips/maltareg.h	/^#define ATA_PCI_DMA4 /;"	d
ATA_PCI_DMA5	src/dev/mips/maltareg.h	/^#define ATA_PCI_DMA5 /;"	d
ATA_PCI_DMA6	src/dev/mips/maltareg.h	/^#define ATA_PCI_DMA6 /;"	d
ATA_PCI_DMA7	src/dev/mips/maltareg.h	/^#define ATA_PCI_DMA7 /;"	d
ATable	src/base/loader/symtab.hh	/^    typedef std::map<Addr, std::string> ATable;$/;"	t	class:SymbolTable
AUXU	src/base/loader/coff_sym.h	/^} AUXU, *pAUXU;$/;"	t	typeref:union:__anon44
AXI_PORT_WIDTH	src/dev/arm/hdlcd.hh	/^    static const size_t AXI_PORT_WIDTH = 8;$/;"	m	class:HDLcd
AbortFault	src/arch/arm/faults.hh	/^    AbortFault(Addr _faultAddr, bool _write, TlbEntry::DomainType _domain, uint8_t _source,$/;"	f	class:ArmISA::AbortFault
AbortFault	src/arch/arm/faults.hh	/^class AbortFault : public ArmFaultVals<T>$/;"	c	namespace:ArmISA
AbstractBloomFilter	src/mem/ruby/filters/AbstractBloomFilter.hh	/^class AbstractBloomFilter$/;"	c
AbstractCacheEntry	src/mem/ruby/slicc_interface/AbstractCacheEntry.cc	/^AbstractCacheEntry::AbstractCacheEntry()$/;"	f	class:AbstractCacheEntry
AbstractCacheEntry	src/mem/ruby/slicc_interface/AbstractCacheEntry.hh	/^class AbstractCacheEntry : public AbstractEntry$/;"	c
AbstractController	src/mem/ruby/slicc_interface/AbstractController.cc	/^AbstractController::AbstractController(const Params *p)$/;"	f	class:AbstractController
AbstractController	src/mem/ruby/slicc_interface/AbstractController.hh	/^class AbstractController : public ClockedObject, public Consumer$/;"	c
AbstractEntry	src/mem/ruby/slicc_interface/AbstractEntry.cc	/^AbstractEntry::AbstractEntry()$/;"	f	class:AbstractEntry
AbstractEntry	src/mem/ruby/slicc_interface/AbstractEntry.hh	/^class AbstractEntry$/;"	c
AbstractMemory	src/mem/AbstractMemory.py	/^class AbstractMemory(MemObject):$/;"	c
AbstractMemory	src/mem/abstract_mem.cc	/^AbstractMemory::AbstractMemory(const Params *p) :$/;"	f	class:AbstractMemory
AbstractMemory	src/mem/abstract_mem.hh	/^class AbstractMemory : public MemObject$/;"	c
AbstractReplacementPolicy	src/mem/ruby/system/AbstractReplacementPolicy.hh	/^AbstractReplacementPolicy::AbstractReplacementPolicy(Index num_sets,$/;"	f	class:AbstractReplacementPolicy
AbstractReplacementPolicy	src/mem/ruby/system/AbstractReplacementPolicy.hh	/^class AbstractReplacementPolicy$/;"	c
Access	src/dev/alpha/backdoor.hh	/^    struct Access : public AlphaAccess$/;"	s	class:AlphaBackdoor
AccessFlagLL	src/arch/arm/faults.hh	/^        AccessFlagLL = TranslationLL + 4,$/;"	e	enum:ArmISA::ArmFault::FaultSource
AccessRecord	src/mem/ruby/system/BankedArray.hh	/^        AccessRecord() : idx(0), startAccess(0), endAccess(0) {}$/;"	f	class:BankedArray::AccessRecord
AccessRecord	src/mem/ruby/system/BankedArray.hh	/^    class AccessRecord$/;"	c	class:BankedArray
AccessTraceForAddress	src/mem/ruby/profiler/AccessTraceForAddress.hh	/^    AccessTraceForAddress()$/;"	f	class:AccessTraceForAddress
AccessTraceForAddress	src/mem/ruby/profiler/AccessTraceForAddress.hh	/^class AccessTraceForAddress$/;"	c
Ack	src/dev/ps2.hh	/^    Ack             = 0xfa,$/;"	e	enum:Ps2::__anon82
AckCtl	src/dev/arm/vgic.hh	/^    Bitfield<2> AckCtl;$/;"	m	class:VGic
Action	src/mem/slicc/ast/ActionDeclAST.py	/^from slicc.symbols import Action, Type, Var$/;"	i
Action	src/mem/slicc/symbols/Action.py	/^class Action(Symbol):$/;"	c
Action	src/mem/slicc/symbols/__init__.py	/^from slicc.symbols.Action import Action$/;"	i
ActionDeclAST	src/mem/slicc/ast/ActionDeclAST.py	/^class ActionDeclAST(DeclAST):$/;"	c
ActivateNextReadyThread	src/cpu/inorder/cpu.hh	/^        ActivateNextReadyThread,$/;"	e	enum:InOrderCPU::CPUEventType
ActivateNextReadyThread_Pri	src/cpu/inorder/cpu.hh	/^        ActivateNextReadyThread_Pri    = Event::CPU_Tick_Pri + 10$/;"	e	enum:InOrderCPU::CPUEventPri
ActivateThread	src/cpu/inorder/cpu.hh	/^        ActivateThread,$/;"	e	enum:InOrderCPU::CPUEventType
ActivateThreadEvent	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::ActivateThreadEvent::ActivateThreadEvent()$/;"	f	class:FullO3CPU::ActivateThreadEvent
ActivateThreadEvent	src/cpu/o3/cpu.hh	/^    class ActivateThreadEvent : public Event$/;"	c	class:FullO3CPU
Active	src/cpu/inorder/pipeline_stage.hh	/^        Active,$/;"	e	enum:PipelineStage::StageStatus
Active	src/cpu/o3/commit.hh	/^        Active,$/;"	e	enum:DefaultCommit::CommitStatus
Active	src/cpu/o3/decode.hh	/^        Active,$/;"	e	enum:DefaultDecode::DecodeStatus
Active	src/cpu/o3/fetch.hh	/^        Active,$/;"	e	enum:DefaultFetch::FetchStatus
Active	src/cpu/o3/iew.hh	/^        Active,$/;"	e	enum:DefaultIEW::Status
Active	src/cpu/o3/rename.hh	/^        Active,$/;"	e	enum:DefaultRename::RenameStatus
Active	src/cpu/thread_context.hh	/^        Active,$/;"	e	enum:ThreadContext::Status
ActivityRecorder	src/cpu/activity.cc	/^ActivityRecorder::ActivityRecorder(const string &name, int num_stages,$/;"	f	class:ActivityRecorder
ActivityRecorder	src/cpu/activity.hh	/^class ActivityRecorder$/;"	c
Addr	src/base/types.hh	/^typedef uint64_t Addr;$/;"	t
Addr	src/python/m5/params.py	/^class Addr(CheckedInt):$/;"	c
AddrCacheMap	src/arch/x86/decoder.hh	/^    typedef m5::hash_map<CacheKey, DecodePages *> AddrCacheMap;$/;"	t	class:X86ISA::Decoder
AddrMap	src/cpu/decode_cache.hh	/^    AddrMap()$/;"	f	class:DecodeCache::AddrMap
AddrMap	src/cpu/decode_cache.hh	/^class AddrMap$/;"	c	namespace:DecodeCache
AddrMap	src/mem/DRAMCtrl.py	/^class AddrMap(Enum): vals = ['RoRaBaChCo', 'RoRaBaCoCh', 'RoCoRaBaCh']$/;"	c
AddrMapper	src/mem/AddrMapper.py	/^class AddrMapper(MemObject):$/;"	c
AddrMapper	src/mem/addr_mapper.cc	/^AddrMapper::AddrMapper(const AddrMapperParams* p)$/;"	f	class:AddrMapper
AddrMapper	src/mem/addr_mapper.hh	/^class AddrMapper : public MemObject$/;"	c
AddrMapperSenderState	src/mem/addr_mapper.hh	/^        AddrMapperSenderState(Addr _origAddr) : origAddr(_origAddr)$/;"	f	class:AddrMapper::AddrMapperSenderState
AddrMapperSenderState	src/mem/addr_mapper.hh	/^    class AddrMapperSenderState : public Packet::SenderState$/;"	c	class:AddrMapper
AddrMd_Offset	src/arch/arm/insts/macromem.hh	/^        AddrMd_Offset,$/;"	e	enum:ArmISA::PairMemOp::AddrMode
AddrMd_Offset	src/arch/arm/insts/mem.hh	/^        AddrMd_Offset,$/;"	e	enum:ArmISA::Memory::AddrMode
AddrMd_Offset	src/arch/arm/insts/mem64.hh	/^        AddrMd_Offset,$/;"	e	enum:ArmISA::Memory64::AddrMode
AddrMd_PostIndex	src/arch/arm/insts/macromem.hh	/^        AddrMd_PostIndex$/;"	e	enum:ArmISA::PairMemOp::AddrMode
AddrMd_PostIndex	src/arch/arm/insts/mem.hh	/^        AddrMd_PostIndex$/;"	e	enum:ArmISA::Memory::AddrMode
AddrMd_PostIndex	src/arch/arm/insts/mem64.hh	/^        AddrMd_PostIndex$/;"	e	enum:ArmISA::Memory64::AddrMode
AddrMd_PreIndex	src/arch/arm/insts/macromem.hh	/^        AddrMd_PreIndex,$/;"	e	enum:ArmISA::PairMemOp::AddrMode
AddrMd_PreIndex	src/arch/arm/insts/mem.hh	/^        AddrMd_PreIndex,$/;"	e	enum:ArmISA::Memory::AddrMode
AddrMd_PreIndex	src/arch/arm/insts/mem64.hh	/^        AddrMd_PreIndex,$/;"	e	enum:ArmISA::Memory64::AddrMode
AddrMode	src/arch/arm/insts/macromem.hh	/^    enum AddrMode {$/;"	g	class:ArmISA::PairMemOp
AddrMode	src/arch/arm/insts/mem.hh	/^    enum AddrMode {$/;"	g	class:ArmISA::Memory
AddrMode	src/arch/arm/insts/mem.hh	/^    enum AddrMode {$/;"	g	class:ArmISA::RfeOp
AddrMode	src/arch/arm/insts/mem.hh	/^    enum AddrMode {$/;"	g	class:ArmISA::SrsOp
AddrMode	src/arch/arm/insts/mem64.hh	/^    enum AddrMode {$/;"	g	class:ArmISA::Memory64
AddrRange	src/base/addr_range.hh	/^    AddrRange()$/;"	f	class:AddrRange
AddrRange	src/base/addr_range.hh	/^    AddrRange(Addr _start, Addr _end)$/;"	f	class:AddrRange
AddrRange	src/base/addr_range.hh	/^    AddrRange(Addr _start, Addr _end, uint8_t _intlv_high_bit,$/;"	f	class:AddrRange
AddrRange	src/base/addr_range.hh	/^    AddrRange(const std::vector<AddrRange>& ranges)$/;"	f	class:AddrRange
AddrRange	src/base/addr_range.hh	/^class AddrRange$/;"	c
AddrRange	src/python/m5/params.py	/^        from m5.internal.range import AddrRange$/;"	i
AddrRange	src/python/m5/params.py	/^class AddrRange(ParamValue):$/;"	c
AddrRangeConstIter	src/mem/port.hh	/^typedef std::list<AddrRange>::const_iterator AddrRangeConstIter;$/;"	t
AddrRangeIter	src/mem/port.hh	/^typedef std::list<AddrRange>::iterator AddrRangeIter;$/;"	t
AddrRangeList	src/mem/port.hh	/^typedef std::list<AddrRange> AddrRangeList;$/;"	t
AddrRangeMap	src/base/addr_range_map.hh	/^class AddrRangeMap$/;"	c
AddrShiftAmount	src/arch/mips/pagetable.hh	/^    int AddrShiftAmount;$/;"	m	struct:MipsISA::PTE
AddrShiftAmount	src/arch/power/pagetable.hh	/^    int AddrShiftAmount;$/;"	m	struct:PowerISA::PTE
AddrSizeFlagBit	src/arch/x86/insts/microldstop.hh	/^        AddrSizeFlagBit = 2,$/;"	e	enum:X86ISA::FlagBit
AddrSpaceMapping	src/arch/x86/bios/intelmp.cc	/^X86ISA::IntelMP::AddrSpaceMapping::AddrSpaceMapping(Params * p) :$/;"	f	class:X86ISA::IntelMP::AddrSpaceMapping
AddrSpaceMapping	src/arch/x86/bios/intelmp.hh	/^class AddrSpaceMapping : public ExtConfigEntry$/;"	c	namespace:X86ISA::IntelMP
Addr_Mask	src/mem/abstract_mem.hh	/^    static const Addr Addr_Mask = 0xf;$/;"	m	class:LockedAddr
Addr_a	src/arch/mips/linux/aligned.hh	/^#define Addr_a /;"	d
Addr_a	src/arch/mips/linux/aligned.hh	/^typedef Addr Addr_a __attribute__ ((aligned (8))) ;$/;"	t
Address	src/mem/ruby/common/Address.cc	/^Address::Address(const Address& obj)$/;"	f	class:Address
Address	src/mem/ruby/common/Address.hh	/^    Address()$/;"	f	class:Address
Address	src/mem/ruby/common/Address.hh	/^    Address(physical_address_t address)$/;"	f	class:Address
Address	src/mem/ruby/common/Address.hh	/^class Address$/;"	c
AddressErrorFault	src/arch/mips/faults.hh	/^    AddressErrorFault(Addr _vaddr, bool _store) :$/;"	f	class:MipsISA::AddressErrorFault
AddressErrorFault	src/arch/mips/faults.hh	/^class AddressErrorFault : public AddressFault<AddressErrorFault>$/;"	c	namespace:MipsISA
AddressFault	src/arch/mips/faults.hh	/^    AddressFault(Addr _vaddr, bool _store) : vaddr(_vaddr), store(_store)$/;"	f	class:MipsISA::AddressFault
AddressFault	src/arch/mips/faults.hh	/^class AddressFault : public MipsFault<T>$/;"	c	namespace:MipsISA
AddressFetch	src/dev/copy_engine.hh	/^            AddressFetch,$/;"	e	enum:CopyEngine::CopyEngineChannel::ChannelState
AddressMap	src/mem/ruby/profiler/AddressProfiler.cc	/^typedef AddressProfiler::AddressMap AddressMap;$/;"	t	file:
AddressMap	src/mem/ruby/profiler/AddressProfiler.hh	/^    typedef m5::hash_map<Address, AccessTraceForAddress> AddressMap;$/;"	t	class:AddressProfiler
AddressMap	src/mem/ruby/system/PersistentTable.hh	/^    typedef m5::hash_map<Address, PersistentTableEntry> AddressMap;$/;"	t	class:PersistentTable
AddressMap	src/mem/ruby/system/TimerTable.hh	/^    typedef std::map<Address, Cycles> AddressMap;$/;"	t	class:TimerTable
AddressProfiler	src/mem/ruby/profiler/AddressProfiler.cc	/^AddressProfiler::AddressProfiler(int num_of_sequencers)$/;"	f	class:AddressProfiler
AddressProfiler	src/mem/ruby/profiler/AddressProfiler.hh	/^class AddressProfiler$/;"	c
AddressSizeLL	src/arch/arm/faults.hh	/^        AddressSizeLL,  \/\/ AArch64 only$/;"	e	enum:ArmISA::ArmFault::FaultSource
AddressSizeOverride	src/arch/x86/types.hh	/^        AddressSizeOverride,$/;"	e	enum:X86ISA::Prefixes
Aggressive	src/cpu/o3/commit.hh	/^        Aggressive,$/;"	e	enum:DefaultCommit::CommitPolicy
AlignByte	src/arch/arm/tlb.hh	/^        AlignByte = 0x0,$/;"	e	enum:ArmISA::TLB::ArmFlags
AlignDoubleWord	src/arch/arm/tlb.hh	/^        AlignDoubleWord = 0x3,$/;"	e	enum:ArmISA::TLB::ArmFlags
AlignHalfWord	src/arch/arm/tlb.hh	/^        AlignHalfWord = 0x1,$/;"	e	enum:ArmISA::TLB::ArmFlags
AlignOctWord	src/arch/arm/tlb.hh	/^        AlignOctWord = 0x5,$/;"	e	enum:ArmISA::TLB::ArmFlags
AlignQuadWord	src/arch/arm/tlb.hh	/^        AlignQuadWord = 0x4,$/;"	e	enum:ArmISA::TLB::ArmFlags
AlignWord	src/arch/arm/tlb.hh	/^        AlignWord = 0x2,$/;"	e	enum:ArmISA::TLB::ArmFlags
AlignmentCheck	src/arch/x86/faults.hh	/^        AlignmentCheck() :$/;"	f	class:X86ISA::AlignmentCheck
AlignmentCheck	src/arch/x86/faults.hh	/^    class AlignmentCheck : public X86Fault$/;"	c	namespace:X86ISA
AlignmentFault	src/arch/alpha/faults.hh	/^class AlignmentFault : public AlphaFault$/;"	c	namespace:AlphaISA
AlignmentFault	src/arch/arm/faults.hh	/^        AlignmentFault = 0,$/;"	e	enum:ArmISA::ArmFault::FaultSource
AlignmentFault	src/arch/power/faults.hh	/^    AlignmentFault()$/;"	f	class:PowerISA::AlignmentFault
AlignmentFault	src/arch/power/faults.hh	/^class AlignmentFault : public PowerFault$/;"	c	namespace:PowerISA
AlignmentMask	src/arch/arm/tlb.hh	/^        AlignmentMask = 0x7,$/;"	e	enum:ArmISA::TLB::ArmFlags
All	src/base/debug.cc	/^Flag *const All = &theAllFlags;$/;"	m	namespace:Debug	file:
AllFlags	src/base/debug.cc	/^    AllFlags()$/;"	f	struct:Debug::AllFlags
AllFlags	src/base/debug.cc	/^struct AllFlags : public Flag$/;"	s	namespace:Debug	file:
AllFlags	src/python/m5/debug.py	/^class AllFlags(DictMixin):$/;"	c
AllKeysToMake	src/dev/x86/i8042.hh	/^        AllKeysToMake = 0xF9,$/;"	e	enum:X86ISA::PS2Keyboard::Command
AllKeysToMakeRelease	src/dev/x86/i8042.hh	/^        AllKeysToMakeRelease = 0xF8,$/;"	e	enum:X86ISA::PS2Keyboard::Command
AllKeysToTypematic	src/dev/x86/i8042.hh	/^        AllKeysToTypematic = 0xF7,$/;"	e	enum:X86ISA::PS2Keyboard::Command
AllKeysToTypematicMakeRelease	src/dev/x86/i8042.hh	/^        AllKeysToTypematicMakeRelease = 0xFA,$/;"	e	enum:X86ISA::PS2Keyboard::Command
AllMemory	src/python/m5/params.py	/^AllMemory = AddrRange(0, MaxAddr)$/;"	v
AllProxy	src/python/m5/proxy.py	/^class AllProxy(BaseProxy):$/;"	c
AllocType	src/mem/se_translating_port_proxy.hh	/^    enum AllocType {$/;"	g	class:SETranslatingPortProxy
AllowUnaligned	src/arch/arm/tlb.hh	/^        AllowUnaligned = 0x8,$/;"	e	enum:ArmISA::TLB::ArmFlags
Alpha	src/base/loader/object_file.hh	/^        Alpha,$/;"	e	enum:ObjectFile::Arch
AlphaAccess	src/dev/alpha/access.h	/^struct AlphaAccess$/;"	s
AlphaBackdoor	src/dev/alpha/AlphaBackdoor.py	/^class AlphaBackdoor(BasicPioDevice):$/;"	c
AlphaBackdoor	src/dev/alpha/Tsunami.py	/^from AlphaBackdoor import AlphaBackdoor$/;"	i
AlphaBackdoor	src/dev/alpha/backdoor.cc	/^AlphaBackdoor::AlphaBackdoor(const Params *p)$/;"	f	class:AlphaBackdoor
AlphaBackdoor	src/dev/alpha/backdoor.hh	/^class AlphaBackdoor : public BasicPioDevice$/;"	c
AlphaDTB	src/arch/alpha/AlphaTLB.py	/^class AlphaDTB(AlphaTLB):$/;"	c
AlphaDTB	src/cpu/BaseCPU.py	/^    from AlphaTLB import AlphaDTB, AlphaITB$/;"	i
AlphaFault	src/arch/alpha/faults.hh	/^class AlphaFault : public FaultBase$/;"	c	namespace:AlphaISA
AlphaISA	src/arch/alpha/AlphaISA.py	/^class AlphaISA(SimObject):$/;"	c
AlphaISA	src/arch/alpha/decoder.cc	/^namespace AlphaISA$/;"	n	file:
AlphaISA	src/arch/alpha/decoder.hh	/^namespace AlphaISA$/;"	n
AlphaISA	src/arch/alpha/ev5.cc	/^namespace AlphaISA {$/;"	n	file:
AlphaISA	src/arch/alpha/ev5.hh	/^namespace AlphaISA {$/;"	n
AlphaISA	src/arch/alpha/faults.cc	/^namespace AlphaISA {$/;"	n	file:
AlphaISA	src/arch/alpha/faults.hh	/^namespace AlphaISA {$/;"	n
AlphaISA	src/arch/alpha/interrupts.hh	/^namespace AlphaISA {$/;"	n
AlphaISA	src/arch/alpha/ipr.cc	/^namespace AlphaISA {$/;"	n	file:
AlphaISA	src/arch/alpha/ipr.hh	/^namespace AlphaISA {$/;"	n
AlphaISA	src/arch/alpha/isa.cc	/^namespace AlphaISA$/;"	n	file:
AlphaISA	src/arch/alpha/isa.hh	/^namespace AlphaISA$/;"	n
AlphaISA	src/arch/alpha/isa_traits.hh	/^namespace AlphaISA {$/;"	n
AlphaISA	src/arch/alpha/kernel_stats.cc	/^namespace AlphaISA {$/;"	n	file:
AlphaISA	src/arch/alpha/kernel_stats.hh	/^namespace AlphaISA {$/;"	n
AlphaISA	src/arch/alpha/linux/process.hh	/^namespace AlphaISA  {$/;"	n
AlphaISA	src/arch/alpha/locked_mem.hh	/^namespace AlphaISA {$/;"	n
AlphaISA	src/arch/alpha/microcode_rom.hh	/^namespace AlphaISA$/;"	n
AlphaISA	src/arch/alpha/mmapped_ipr.hh	/^namespace AlphaISA {$/;"	n
AlphaISA	src/arch/alpha/mt.hh	/^namespace AlphaISA$/;"	n
AlphaISA	src/arch/alpha/pagetable.cc	/^namespace AlphaISA {$/;"	n	file:
AlphaISA	src/arch/alpha/pagetable.hh	/^namespace AlphaISA {$/;"	n
AlphaISA	src/arch/alpha/registers.hh	/^namespace AlphaISA {$/;"	n
AlphaISA	src/arch/alpha/regredir.cc	/^namespace AlphaISA {$/;"	n	file:
AlphaISA	src/arch/alpha/regredir.hh	/^namespace AlphaISA {$/;"	n
AlphaISA	src/arch/alpha/remote_gdb.hh	/^namespace AlphaISA {$/;"	n
AlphaISA	src/arch/alpha/stacktrace.cc	/^namespace AlphaISA {$/;"	n	file:
AlphaISA	src/arch/alpha/stacktrace.hh	/^namespace AlphaISA {$/;"	n
AlphaISA	src/arch/alpha/tlb.cc	/^namespace AlphaISA {$/;"	n	file:
AlphaISA	src/arch/alpha/tlb.hh	/^namespace AlphaISA {$/;"	n
AlphaISA	src/arch/alpha/tru64/process.hh	/^namespace AlphaISA {$/;"	n
AlphaISA	src/arch/alpha/types.hh	/^namespace AlphaISA {$/;"	n
AlphaISA	src/arch/alpha/utility.cc	/^namespace AlphaISA {$/;"	n	file:
AlphaISA	src/arch/alpha/utility.hh	/^namespace AlphaISA {$/;"	n
AlphaISA	src/arch/alpha/vtophys.cc	/^namespace AlphaISA {$/;"	n	file:
AlphaISA	src/arch/alpha/vtophys.hh	/^namespace AlphaISA {$/;"	n
AlphaISA	src/cpu/BaseCPU.py	/^    from AlphaISA import AlphaISA$/;"	i
AlphaITB	src/arch/alpha/AlphaTLB.py	/^class AlphaITB(AlphaTLB):$/;"	c
AlphaITB	src/cpu/BaseCPU.py	/^    from AlphaTLB import AlphaDTB, AlphaITB$/;"	i
AlphaInterrupts	src/arch/alpha/AlphaInterrupts.py	/^class AlphaInterrupts(SimObject):$/;"	c
AlphaInterrupts	src/cpu/BaseCPU.py	/^    from AlphaInterrupts import AlphaInterrupts$/;"	i
AlphaLinux	src/arch/alpha/linux/linux.hh	/^class AlphaLinux : public Linux$/;"	c
AlphaLinuxProcess	src/arch/alpha/linux/process.cc	/^AlphaLinuxProcess::AlphaLinuxProcess(LiveProcessParams * params,$/;"	f	class:AlphaLinuxProcess
AlphaLinuxProcess	src/arch/alpha/linux/process.hh	/^class AlphaLinuxProcess : public AlphaLiveProcess$/;"	c	namespace:AlphaISA
AlphaLiveProcess	src/arch/alpha/process.cc	/^AlphaLiveProcess::AlphaLiveProcess(LiveProcessParams *params,$/;"	f	class:AlphaLiveProcess
AlphaLiveProcess	src/arch/alpha/process.hh	/^class AlphaLiveProcess : public LiveProcess$/;"	c
AlphaSystem	src/arch/alpha/AlphaSystem.py	/^class AlphaSystem(System):$/;"	c
AlphaSystem	src/arch/alpha/system.cc	/^AlphaSystem::AlphaSystem(Params *p)$/;"	f	class:AlphaSystem
AlphaSystem	src/arch/alpha/system.hh	/^class AlphaSystem : public System$/;"	c
AlphaTLB	src/arch/alpha/AlphaTLB.py	/^class AlphaTLB(BaseTLB):$/;"	c
AlphaTru64	src/arch/alpha/tru64/tru64.hh	/^class AlphaTru64 : public Tru64$/;"	c
AlphaTru64Process	src/arch/alpha/tru64/process.cc	/^AlphaTru64Process::AlphaTru64Process(LiveProcessParams *params,$/;"	f	class:AlphaTru64Process
AlphaTru64Process	src/arch/alpha/tru64/process.hh	/^class AlphaTru64Process : public AlphaLiveProcess$/;"	c	namespace:AlphaISA
AlternateScanCodes	src/dev/x86/i8042.hh	/^        AlternateScanCodes = 0xF0,$/;"	e	enum:X86ISA::PS2Keyboard::Command
Always	src/mem/se_translating_port_proxy.hh	/^        Always,$/;"	e	enum:SETranslatingPortProxy::AllocType
AmbaDevice	src/dev/arm/amba_device.hh	/^class AmbaDevice$/;"	c
AmbaDmaDevice	src/dev/arm/RealView.py	/^class AmbaDmaDevice(DmaDevice):$/;"	c
AmbaDmaDevice	src/dev/arm/amba_device.cc	/^AmbaDmaDevice::AmbaDmaDevice(const Params *p)$/;"	f	class:AmbaDmaDevice
AmbaDmaDevice	src/dev/arm/amba_device.hh	/^class AmbaDmaDevice : public DmaDevice, public AmbaDevice$/;"	c
AmbaFake	src/dev/arm/RealView.py	/^class AmbaFake(AmbaPioDevice):$/;"	c
AmbaFake	src/dev/arm/amba_fake.cc	/^AmbaFake::AmbaFake(const Params *p)$/;"	f	class:AmbaFake
AmbaFake	src/dev/arm/amba_fake.hh	/^class AmbaFake : public AmbaPioDevice$/;"	c
AmbaIntDevice	src/dev/arm/RealView.py	/^class AmbaIntDevice(AmbaPioDevice):$/;"	c
AmbaIntDevice	src/dev/arm/amba_device.cc	/^AmbaIntDevice::AmbaIntDevice(const Params *p, Addr pio_size)$/;"	f	class:AmbaIntDevice
AmbaIntDevice	src/dev/arm/amba_device.hh	/^class AmbaIntDevice : public AmbaPioDevice$/;"	c
AmbaPioDevice	src/dev/arm/RealView.py	/^class AmbaPioDevice(BasicPioDevice):$/;"	c
AmbaPioDevice	src/dev/arm/amba_device.cc	/^AmbaPioDevice::AmbaPioDevice(const Params *p, Addr pio_size)$/;"	f	class:AmbaPioDevice
AmbaPioDevice	src/dev/arm/amba_device.hh	/^class AmbaPioDevice : public BasicPioDevice, public AmbaDevice$/;"	c
AmbaVendor	src/dev/arm/amba_device.cc	/^const uint64_t AmbaVendor = ULL(0xb105f00d00000000);$/;"	v
AmpModel	src/mem/ruby/network/orion/Buffer/AmpUnit.hh	/^    enum AmpModel$/;"	g	class:AmpUnit
AmpUnit	src/mem/ruby/network/orion/Buffer/AmpUnit.cc	/^AmpUnit::AmpUnit($/;"	f	class:AmpUnit
AmpUnit	src/mem/ruby/network/orion/Buffer/AmpUnit.hh	/^class AmpUnit$/;"	c
AnnDataPtr	src/base/cp_annotate.hh	/^    typedef RefCountingPtr<AnnotateData> AnnDataPtr;$/;"	t	class:CPA
AnnotateData	src/base/cp_annotate.hh	/^    struct AnnotateData : public RefCounted {$/;"	s	class:CPA
AnnotateDumpCallback	src/base/cp_annotate.cc	/^    AnnotateDumpCallback(CPA *_cpa)$/;"	f	class:AnnotateDumpCallback
AnnotateDumpCallback	src/base/cp_annotate.cc	/^class AnnotateDumpCallback : public Callback$/;"	c	file:
AnnotateHeader	src/base/cp_annotate.hh	/^    struct AnnotateHeader {$/;"	s	class:CPA
AnnotateList	src/base/cp_annotate.hh	/^    typedef std::list<AnnDataPtr> AnnotateList;$/;"	t	class:CPA
AnnotationIDs	src/arch/arm/faults.hh	/^    enum AnnotationIDs$/;"	g	class:ArmISA::ArmFault
Any	src/base/varargs.hh	/^    Any(const T &arg) : argument(arg) {}$/;"	f	struct:VarArgs::Any
Any	src/base/varargs.hh	/^    Any(const T *arg) : argument(arg) {}$/;"	f	struct:VarArgs::Any
Any	src/base/varargs.hh	/^struct Any : public Base<RECV>$/;"	s	namespace:VarArgs
Any	src/base/varargs.hh	/^struct Any<T *, RECV> : public Base<RECV>$/;"	s	namespace:VarArgs
AnyProxy	src/python/m5/proxy.py	/^class AnyProxy(BaseProxy):$/;"	c
AnyReg	src/arch/alpha/registers.hh	/^union AnyReg$/;"	u	namespace:AlphaISA
AnyReg	src/arch/arm/registers.hh	/^} AnyReg;$/;"	t	namespace:ArmISA	typeref:union:ArmISA::__anon12
AnyReg	src/arch/mips/registers.hh	/^} AnyReg;$/;"	t	namespace:MipsISA	typeref:union:MipsISA::__anon21
AnyReg	src/arch/power/registers.hh	/^} AnyReg;$/;"	t	namespace:PowerISA	typeref:union:PowerISA::__anon24
AnyReg	src/arch/sparc/registers.hh	/^} AnyReg;$/;"	t	namespace:SparcISA	typeref:union:SparcISA::__anon29
AnyReg	src/arch/x86/registers.hh	/^} AnyReg;$/;"	t	namespace:X86ISA	typeref:union:X86ISA::__anon35
AoutObject	src/base/loader/aout_object.cc	/^AoutObject::AoutObject(const string &_filename, int _fd,$/;"	f	class:AoutObject
AoutObject	src/base/loader/aout_object.hh	/^class AoutObject : public ObjectFile$/;"	c
ApicList	src/dev/x86/intdev.hh	/^typedef std::list<int> ApicList;$/;"	t	namespace:X86ISA
ApicRegIndex	src/arch/x86/regs/apic.hh	/^    enum ApicRegIndex$/;"	g	namespace:X86ISA
ApicTimerEvent	src/arch/x86/interrupts.hh	/^        ApicTimerEvent(Interrupts *_localApic) :$/;"	f	class:X86ISA::Interrupts::ApicTimerEvent
ApicTimerEvent	src/arch/x86/interrupts.hh	/^    class ApicTimerEvent : public Event$/;"	c	class:X86ISA::Interrupts
Arbiter	src/mem/ruby/network/orion/Allocator/Arbiter.cc	/^Arbiter::Arbiter(const ArbiterModel arb_model_,$/;"	f	class:Arbiter
Arbiter	src/mem/ruby/network/orion/Allocator/Arbiter.hh	/^class Arbiter$/;"	c
ArbiterModel	src/mem/ruby/network/orion/Allocator/Arbiter.hh	/^    enum ArbiterModel$/;"	g	class:Arbiter
Arch	src/base/loader/object_file.hh	/^    enum Arch {$/;"	g	class:ObjectFile
ArchFlagsType	src/mem/request.hh	/^    typedef uint8_t ArchFlagsType;$/;"	t	class:Request
ArchTimer	src/dev/arm/generic_timer.hh	/^        ArchTimer()$/;"	f	class:GenericTimer::ArchTimer
ArchTimer	src/dev/arm/generic_timer.hh	/^    class ArchTimer$/;"	c	class:GenericTimer
Argument	src/base/varargs.hh	/^    Argument() { }$/;"	f	struct:VarArgs::Argument
Argument	src/base/varargs.hh	/^    Argument(const Null &null) { }$/;"	f	struct:VarArgs::Argument
Argument	src/base/varargs.hh	/^    Argument(const T& arg) : Base(new Any<T, RECV>(arg)) { }$/;"	f	struct:VarArgs::Argument
Argument	src/base/varargs.hh	/^    Argument(const T* arg) : Base(new Any<T *, RECV>(arg)) { }$/;"	f	struct:VarArgs::Argument
Argument	src/base/varargs.hh	/^    typedef VarArgs::Argument<RECV> Argument;$/;"	t	class:VarArgs::List
Argument	src/base/varargs.hh	/^struct Argument : public RefCountingPtr<Base<RECV> >$/;"	s	namespace:VarArgs
ArgumentReg	src/arch/x86/process.cc	/^static const int ArgumentReg[] = {$/;"	v	file:
ArgumentReg0	src/arch/arm/registers.hh	/^const int ArgumentReg0 = 0;$/;"	m	namespace:ArmISA
ArgumentReg0	src/arch/power/registers.hh	/^const int ArgumentReg0 = 3;$/;"	m	namespace:PowerISA
ArgumentReg1	src/arch/arm/registers.hh	/^const int ArgumentReg1 = 1;$/;"	m	namespace:ArmISA
ArgumentReg1	src/arch/power/registers.hh	/^const int ArgumentReg1 = 4;$/;"	m	namespace:PowerISA
ArgumentReg2	src/arch/arm/registers.hh	/^const int ArgumentReg2 = 2;$/;"	m	namespace:ArmISA
ArgumentReg2	src/arch/power/registers.hh	/^const int ArgumentReg2 = 5;$/;"	m	namespace:PowerISA
ArgumentReg3	src/arch/arm/registers.hh	/^const int ArgumentReg3 = 3;$/;"	m	namespace:ArmISA
ArgumentReg3	src/arch/power/registers.hh	/^const int ArgumentReg3 = 6;$/;"	m	namespace:PowerISA
ArgumentReg32	src/arch/x86/process.cc	/^static const int ArgumentReg32[] = {$/;"	v	file:
ArgumentReg4	src/arch/power/registers.hh	/^const int ArgumentReg4 = 7;$/;"	m	namespace:PowerISA
Arguments	src/sim/arguments.hh	/^    Arguments(ThreadContext *ctx, int n = 0)$/;"	f	class:Arguments
Arguments	src/sim/arguments.hh	/^    Arguments(const Arguments &args)$/;"	f	class:Arguments
Arguments	src/sim/arguments.hh	/^class Arguments$/;"	c
ArithmeticFault	src/arch/alpha/faults.hh	/^class ArithmeticFault : public AlphaFault$/;"	c	namespace:AlphaISA
Arm	src/base/loader/object_file.hh	/^        Arm,$/;"	e	enum:ObjectFile::Arch
Arm64	src/base/loader/object_file.hh	/^        Arm64,$/;"	e	enum:ObjectFile::Arch
ArmExtendType	src/arch/arm/types.hh	/^    enum ArmExtendType {$/;"	g	namespace:ArmISA
ArmFault	src/arch/arm/faults.hh	/^    ArmFault(ExtMachInst _machInst = 0, uint32_t _iss = 0) :$/;"	f	class:ArmISA::ArmFault
ArmFault	src/arch/arm/faults.hh	/^class ArmFault : public FaultBase$/;"	c	namespace:ArmISA
ArmFaultVals	src/arch/arm/faults.hh	/^    ArmFaultVals<T>(ExtMachInst _machInst = 0, uint32_t _iss = 0) :$/;"	f	class:ArmISA::ArmFaultVals
ArmFaultVals	src/arch/arm/faults.hh	/^class ArmFaultVals : public ArmFault$/;"	c	namespace:ArmISA
ArmFlags	src/arch/arm/tlb.hh	/^    enum ArmFlags {$/;"	g	class:ArmISA::TLB
ArmISA	src/arch/arm/ArmISA.py	/^class ArmISA(SimObject):$/;"	c
ArmISA	src/arch/arm/decoder.cc	/^namespace ArmISA$/;"	n	file:
ArmISA	src/arch/arm/decoder.hh	/^namespace ArmISA$/;"	n
ArmISA	src/arch/arm/faults.cc	/^namespace ArmISA$/;"	n	file:
ArmISA	src/arch/arm/faults.hh	/^namespace ArmISA$/;"	n
ArmISA	src/arch/arm/insts/branch.hh	/^namespace ArmISA$/;"	n
ArmISA	src/arch/arm/insts/branch64.cc	/^namespace ArmISA$/;"	n	file:
ArmISA	src/arch/arm/insts/branch64.hh	/^namespace ArmISA$/;"	n
ArmISA	src/arch/arm/insts/data64.cc	/^namespace ArmISA$/;"	n	file:
ArmISA	src/arch/arm/insts/data64.hh	/^namespace ArmISA$/;"	n
ArmISA	src/arch/arm/insts/fplib.cc	/^namespace ArmISA$/;"	n	file:
ArmISA	src/arch/arm/insts/fplib.hh	/^namespace ArmISA$/;"	n
ArmISA	src/arch/arm/insts/macromem.cc	/^namespace ArmISA$/;"	n	file:
ArmISA	src/arch/arm/insts/macromem.hh	/^namespace ArmISA$/;"	n
ArmISA	src/arch/arm/insts/mem.cc	/^namespace ArmISA$/;"	n	file:
ArmISA	src/arch/arm/insts/mem.hh	/^namespace ArmISA$/;"	n
ArmISA	src/arch/arm/insts/mem64.cc	/^namespace ArmISA$/;"	n	file:
ArmISA	src/arch/arm/insts/mem64.hh	/^namespace ArmISA$/;"	n
ArmISA	src/arch/arm/insts/mult.hh	/^namespace ArmISA$/;"	n
ArmISA	src/arch/arm/insts/neon64_mem.hh	/^namespace ArmISA$/;"	n
ArmISA	src/arch/arm/insts/pred_inst.cc	/^namespace ArmISA$/;"	n	file:
ArmISA	src/arch/arm/insts/pred_inst.hh	/^namespace ArmISA$/;"	n
ArmISA	src/arch/arm/insts/static_inst.cc	/^namespace ArmISA$/;"	n	file:
ArmISA	src/arch/arm/insts/static_inst.hh	/^namespace ArmISA$/;"	n
ArmISA	src/arch/arm/insts/vfp.cc	/^namespace ArmISA$/;"	n	file:
ArmISA	src/arch/arm/insts/vfp.hh	/^namespace ArmISA$/;"	n
ArmISA	src/arch/arm/interrupts.hh	/^namespace ArmISA$/;"	n
ArmISA	src/arch/arm/intregs.hh	/^namespace ArmISA$/;"	n
ArmISA	src/arch/arm/isa.cc	/^namespace ArmISA$/;"	n	file:
ArmISA	src/arch/arm/isa.hh	/^namespace ArmISA$/;"	n
ArmISA	src/arch/arm/isa_traits.hh	/^namespace ArmISA$/;"	n
ArmISA	src/arch/arm/kernel_stats.hh	/^namespace ArmISA {$/;"	n
ArmISA	src/arch/arm/locked_mem.hh	/^namespace ArmISA$/;"	n
ArmISA	src/arch/arm/microcode_rom.hh	/^namespace ArmISA$/;"	n
ArmISA	src/arch/arm/miscregs.cc	/^namespace ArmISA$/;"	n	file:
ArmISA	src/arch/arm/miscregs.hh	/^namespace ArmISA$/;"	n
ArmISA	src/arch/arm/mmapped_ipr.hh	/^namespace ArmISA$/;"	n
ArmISA	src/arch/arm/pagetable.hh	/^namespace ArmISA {$/;"	n
ArmISA	src/arch/arm/registers.hh	/^namespace ArmISA {$/;"	n
ArmISA	src/arch/arm/remote_gdb.hh	/^namespace ArmISA$/;"	n
ArmISA	src/arch/arm/stacktrace.cc	/^namespace ArmISA$/;"	n	file:
ArmISA	src/arch/arm/stacktrace.hh	/^namespace ArmISA$/;"	n
ArmISA	src/arch/arm/stage2_lookup.hh	/^namespace ArmISA {$/;"	n
ArmISA	src/arch/arm/stage2_mmu.hh	/^namespace ArmISA {$/;"	n
ArmISA	src/arch/arm/table_walker.hh	/^namespace ArmISA {$/;"	n
ArmISA	src/arch/arm/tlb.hh	/^namespace ArmISA {$/;"	n
ArmISA	src/arch/arm/types.hh	/^namespace ArmISA$/;"	n
ArmISA	src/arch/arm/utility.cc	/^namespace ArmISA {$/;"	n	file:
ArmISA	src/arch/arm/utility.hh	/^namespace ArmISA {$/;"	n
ArmISA	src/arch/arm/vtophys.hh	/^namespace ArmISA {$/;"	n
ArmISA	src/cpu/BaseCPU.py	/^    from ArmISA import ArmISA$/;"	i
ArmInterrupts	src/arch/arm/ArmInterrupts.py	/^class ArmInterrupts(SimObject):$/;"	c
ArmInterrupts	src/cpu/BaseCPU.py	/^    from ArmInterrupts import ArmInterrupts$/;"	i
ArmKvmCPU	src/cpu/kvm/ArmKvmCPU.py	/^class ArmKvmCPU(BaseKvmCPU):$/;"	c
ArmKvmCPU	src/cpu/kvm/arm_cpu.cc	/^ArmKvmCPU::ArmKvmCPU(ArmKvmCPUParams *params)$/;"	f	class:ArmKvmCPU
ArmKvmCPU	src/cpu/kvm/arm_cpu.hh	/^class ArmKvmCPU : public BaseKvmCPU$/;"	c
ArmLinux32	src/arch/arm/linux/linux.hh	/^class ArmLinux32 : public Linux$/;"	c
ArmLinux64	src/arch/arm/linux/linux.hh	/^class ArmLinux64 : public Linux$/;"	c
ArmLinuxProcess32	src/arch/arm/linux/process.cc	/^ArmLinuxProcess32::ArmLinuxProcess32(LiveProcessParams * params,$/;"	f	class:ArmLinuxProcess32
ArmLinuxProcess32	src/arch/arm/linux/process.hh	/^class ArmLinuxProcess32 : public ArmLiveProcess32, public ArmLinuxProcessBits$/;"	c
ArmLinuxProcess64	src/arch/arm/linux/process.cc	/^ArmLinuxProcess64::ArmLinuxProcess64(LiveProcessParams * params,$/;"	f	class:ArmLinuxProcess64
ArmLinuxProcess64	src/arch/arm/linux/process.hh	/^class ArmLinuxProcess64 : public ArmLiveProcess64, public ArmLinuxProcessBits$/;"	c
ArmLinuxProcessBits	src/arch/arm/linux/process.hh	/^class ArmLinuxProcessBits$/;"	c
ArmLiveProcess	src/arch/arm/process.cc	/^ArmLiveProcess::ArmLiveProcess(LiveProcessParams *params, ObjectFile *objFile,$/;"	f	class:ArmLiveProcess
ArmLiveProcess	src/arch/arm/process.hh	/^class ArmLiveProcess : public LiveProcess$/;"	c
ArmLiveProcess32	src/arch/arm/process.cc	/^ArmLiveProcess32::ArmLiveProcess32(LiveProcessParams *params,$/;"	f	class:ArmLiveProcess32
ArmLiveProcess32	src/arch/arm/process.hh	/^class ArmLiveProcess32 : public ArmLiveProcess$/;"	c
ArmLiveProcess64	src/arch/arm/process.cc	/^ArmLiveProcess64::ArmLiveProcess64(LiveProcessParams *params,$/;"	f	class:ArmLiveProcess64
ArmLiveProcess64	src/arch/arm/process.hh	/^class ArmLiveProcess64 : public ArmLiveProcess$/;"	c
ArmMachineType	src/arch/arm/ArmSystem.py	/^class ArmMachineType(Enum):$/;"	c
ArmNativeTrace	src/arch/arm/ArmNativeTrace.py	/^class ArmNativeTrace(NativeTrace):$/;"	c
ArmNativeTrace	src/arch/arm/nativetrace.hh	/^    ArmNativeTrace(const Params *p) :$/;"	f	class:Trace::ArmNativeTrace
ArmNativeTrace	src/arch/arm/nativetrace.hh	/^class ArmNativeTrace : public NativeTrace$/;"	c	namespace:Trace
ArmSev	src/arch/arm/faults.hh	/^    ArmSev () {}$/;"	f	class:ArmISA::ArmSev
ArmSev	src/arch/arm/faults.hh	/^class ArmSev : public ArmFaultVals<ArmSev>$/;"	c	namespace:ArmISA
ArmShiftType	src/arch/arm/types.hh	/^    enum ArmShiftType {$/;"	g	namespace:ArmISA
ArmStage2DMMU	src/arch/arm/ArmTLB.py	/^class ArmStage2DMMU(ArmStage2MMU):$/;"	c
ArmStage2DMMU	src/cpu/BaseCPU.py	/^    from ArmTLB import ArmTLB, ArmStage2IMMU, ArmStage2DMMU$/;"	i
ArmStage2IMMU	src/arch/arm/ArmTLB.py	/^class ArmStage2IMMU(ArmStage2MMU):$/;"	c
ArmStage2IMMU	src/cpu/BaseCPU.py	/^    from ArmTLB import ArmTLB, ArmStage2IMMU, ArmStage2DMMU$/;"	i
ArmStage2MMU	src/arch/arm/ArmTLB.py	/^class ArmStage2MMU(SimObject):$/;"	c
ArmStage2TLB	src/arch/arm/ArmTLB.py	/^class ArmStage2TLB(ArmTLB):$/;"	c
ArmStage2TableWalker	src/arch/arm/ArmTLB.py	/^class ArmStage2TableWalker(ArmTableWalker):$/;"	c
ArmStaticInst	src/arch/arm/insts/static_inst.hh	/^    ArmStaticInst(const char *mnem, ExtMachInst _machInst,$/;"	f	class:ArmISA::ArmStaticInst
ArmStaticInst	src/arch/arm/insts/static_inst.hh	/^class ArmStaticInst : public StaticInst$/;"	c	namespace:ArmISA
ArmSystem	src/arch/arm/ArmSystem.py	/^class ArmSystem(System):$/;"	c
ArmSystem	src/arch/arm/system.cc	/^ArmSystem::ArmSystem(Params *p)$/;"	f	class:ArmSystem
ArmSystem	src/arch/arm/system.hh	/^class ArmSystem : public System$/;"	c
ArmTLB	src/arch/arm/ArmTLB.py	/^class ArmTLB(SimObject):$/;"	c
ArmTLB	src/cpu/BaseCPU.py	/^    from ArmTLB import ArmTLB, ArmStage2IMMU, ArmStage2DMMU$/;"	i
ArmTLB	src/cpu/o3/O3CPU.py	/^            from ArmTLB import ArmTLB$/;"	i
ArmTLB	src/cpu/simple/BaseSimpleCPU.py	/^            from ArmTLB import ArmTLB$/;"	i
ArmTableWalker	src/arch/arm/ArmTLB.py	/^class ArmTableWalker(MemObject):$/;"	c
ArmTranslationType	src/arch/arm/tlb.hh	/^    enum ArmTranslationType {$/;"	g	class:ArmISA::TLB
AsnMask	src/arch/alpha/ev5.hh	/^const uint64_t AsnMask = ULL(0xff);$/;"	m	namespace:AlphaISA
AssemblerReg	src/arch/mips/registers.hh	/^const int AssemblerReg = 1;$/;"	m	namespace:MipsISA
AssignNextPC	src/cpu/inorder/resources/fetch_seq_unit.hh	/^        AssignNextPC,$/;"	e	enum:FetchSeqUnit::Command
AssignStatementAST	src/mem/slicc/ast/AssignStatementAST.py	/^class AssignStatementAST(StatementAST):$/;"	c
AsynchPtyErrOnMemoryAccess	src/arch/arm/faults.hh	/^        AsynchPtyErrOnMemoryAccess,$/;"	e	enum:ArmISA::ArmFault::FaultSource
AsynchronousExternalAbort	src/arch/arm/faults.hh	/^        AsynchronousExternalAbort,$/;"	e	enum:ArmISA::ArmFault::FaultSource
AtCommit	src/cpu/base_dyn_inst.hh	/^        AtCommit,                \/\/\/ Instruction has reached commit$/;"	e	enum:BaseDynInst::Status
AtCommit	src/cpu/inorder/inorder_dyn_inst.hh	/^        AtCommit,                \/\/\/ Instruction has reached commit$/;"	e	enum:InOrderDynInst::Status
AtagCmdline	src/arch/arm/linux/atag.hh	/^    AtagCmdline()$/;"	f	class:AtagCmdline
AtagCmdline	src/arch/arm/linux/atag.hh	/^class AtagCmdline : public AtagHeader$/;"	c
AtagCore	src/arch/arm/linux/atag.hh	/^    AtagCore()$/;"	f	class:AtagCore
AtagCore	src/arch/arm/linux/atag.hh	/^class AtagCore : public AtagHeader$/;"	c
AtagHeader	src/arch/arm/linux/atag.hh	/^    AtagHeader(uint32_t s)$/;"	f	class:AtagHeader
AtagHeader	src/arch/arm/linux/atag.hh	/^class AtagHeader$/;"	c
AtagMem	src/arch/arm/linux/atag.hh	/^    AtagMem()$/;"	f	class:AtagMem
AtagMem	src/arch/arm/linux/atag.hh	/^class AtagMem : public AtagHeader$/;"	c
AtagNone	src/arch/arm/linux/atag.hh	/^    AtagNone()$/;"	f	class:AtagNone
AtagNone	src/arch/arm/linux/atag.hh	/^class AtagNone : public AtagHeader$/;"	c
AtagRev	src/arch/arm/linux/atag.hh	/^    AtagRev()$/;"	f	class:AtagRev
AtagRev	src/arch/arm/linux/atag.hh	/^class AtagRev : public AtagHeader$/;"	c
AtagSerial	src/arch/arm/linux/atag.hh	/^    AtagSerial()$/;"	f	class:AtagSerial
AtagSerial	src/arch/arm/linux/atag.hh	/^class AtagSerial : public AtagHeader$/;"	c
AtomicCPUDPort	src/cpu/simple/atomic.hh	/^        AtomicCPUDPort(const std::string &_name, BaseSimpleCPU* _cpu)$/;"	f	class:AtomicSimpleCPU::AtomicCPUDPort
AtomicCPUDPort	src/cpu/simple/atomic.hh	/^    class AtomicCPUDPort : public AtomicCPUPort$/;"	c	class:AtomicSimpleCPU
AtomicCPUPort	src/cpu/simple/atomic.hh	/^        AtomicCPUPort(const std::string &_name, BaseSimpleCPU* _cpu)$/;"	f	class:AtomicSimpleCPU::AtomicCPUPort
AtomicCPUPort	src/cpu/simple/atomic.hh	/^    class AtomicCPUPort : public MasterPort$/;"	c	class:AtomicSimpleCPU
AtomicSimpleCPU	src/cpu/simple/AtomicSimpleCPU.py	/^class AtomicSimpleCPU(BaseSimpleCPU):$/;"	c
AtomicSimpleCPU	src/cpu/simple/atomic.cc	/^AtomicSimpleCPU::AtomicSimpleCPU(AtomicSimpleCPUParams *p)$/;"	f	class:AtomicSimpleCPU
AtomicSimpleCPU	src/cpu/simple/atomic.hh	/^class AtomicSimpleCPU : public BaseSimpleCPU$/;"	c
AtomicToIo	src/arch/sparc/tlb.hh	/^        AtomicToIo = 0x4,$/;"	e	enum:SparcISA::TLB::FaultTypes
AttrProxy	src/python/m5/proxy.py	/^class AttrProxy(BaseProxy):$/;"	c
Attribute	src/mem/packet.hh	/^    enum Attribute$/;"	g	class:MemCmd
AuthInvalid	src/base/vnc/vncserver.hh	/^    const static uint32_t AuthInvalid = 0;$/;"	m	class:VncServer
AuthNone	src/base/vnc/vncserver.hh	/^    const static uint32_t AuthNone    = 1;$/;"	m	class:VncServer
AutoDelete	src/sim/eventq.hh	/^    static const FlagsType AutoDelete    = 0x0004; \/\/ delete after dispatch$/;"	m	class:EventBase
AutoSerialize	src/sim/eventq.hh	/^    static const FlagsType AutoSerialize = 0x0008; \/\/ must be serialized$/;"	m	class:EventBase
AuxVector	src/sim/process.cc	/^AuxVector<IntType>::AuxVector(IntType type, IntType val)$/;"	f	class:AuxVector
AuxVector	src/sim/process.hh	/^    AuxVector()$/;"	f	struct:AuxVector
AuxVector	src/sim/process.hh	/^struct AuxVector$/;"	s
AuxiliaryVectorType	src/sim/process.hh	/^    enum AuxiliaryVectorType {$/;"	g	class:LiveProcess
Average	src/base/statistics.hh	/^class Average : public ScalarBase<Average, AvgStor>$/;"	c	namespace:Stats
AverageDeviation	src/base/statistics.hh	/^    AverageDeviation()$/;"	f	class:Stats::AverageDeviation
AverageDeviation	src/base/statistics.hh	/^class AverageDeviation : public DistBase<AverageDeviation, AvgSampleStor>$/;"	c	namespace:Stats
AverageVector	src/base/statistics.hh	/^class AverageVector : public VectorBase<AverageVector, AvgStor>$/;"	c	namespace:Stats
AvgSampleStor	src/base/statistics.hh	/^    AvgSampleStor(Info *info)$/;"	f	class:Stats::AvgSampleStor
AvgSampleStor	src/base/statistics.hh	/^class AvgSampleStor$/;"	c	namespace:Stats
AvgStor	src/base/statistics.hh	/^    AvgStor(Info *info)$/;"	f	class:Stats::AvgStor
AvgStor	src/base/statistics.hh	/^class AvgStor$/;"	c	namespace:Stats
BAR0	src/dev/Ethernet.py	/^    BAR0 = 0x00000000$/;"	v	class:IGbE
BAR0	src/dev/Ethernet.py	/^    BAR0 = 0x00000000$/;"	v	class:Sinic
BAR0	src/dev/Ethernet.py	/^    BAR0 = 0x00000001$/;"	v	class:NSGigE
BAR0	src/dev/Ide.py	/^    BAR0 = 0x00000001$/;"	v	class:IdeController
BAR0	src/dev/Pci.py	/^    BAR0 = Param.UInt32(0x00, "Base Address Register 0")$/;"	v	class:PciDevice
BAR0LegacyIO	src/dev/Pci.py	/^    BAR0LegacyIO = Param.Bool(False, "Whether BAR0 is hardwired legacy IO")$/;"	v	class:PciDevice
BAR0Size	src/dev/CopyEngine.py	/^    BAR0Size = '1kB'$/;"	v	class:CopyEngine
BAR0Size	src/dev/Ethernet.py	/^    BAR0Size = '128kB'$/;"	v	class:IGbE
BAR0Size	src/dev/Ethernet.py	/^    BAR0Size = '256B'$/;"	v	class:NSGigE
BAR0Size	src/dev/Ethernet.py	/^    BAR0Size = '64kB'$/;"	v	class:Sinic
BAR0Size	src/dev/Ide.py	/^    BAR0Size = '8B'$/;"	v	class:IdeController
BAR0Size	src/dev/Pci.py	/^    BAR0Size = Param.MemorySize32('0B', "Base Address Register 0 Size")$/;"	v	class:PciDevice
BAR1	src/dev/Ethernet.py	/^    BAR1 = 0x00000000$/;"	v	class:IGbE
BAR1	src/dev/Ethernet.py	/^    BAR1 = 0x00000000$/;"	v	class:NSGigE
BAR1	src/dev/Ethernet.py	/^    BAR1 = 0x00000000$/;"	v	class:Sinic
BAR1	src/dev/Ide.py	/^    BAR1 = 0x00000001$/;"	v	class:IdeController
BAR1	src/dev/Pci.py	/^    BAR1 = Param.UInt32(0x00, "Base Address Register 1")$/;"	v	class:PciDevice
BAR1LegacyIO	src/dev/Pci.py	/^    BAR1LegacyIO = Param.Bool(False, "Whether BAR1 is hardwired legacy IO")$/;"	v	class:PciDevice
BAR1Size	src/dev/Ethernet.py	/^    BAR1Size = '4kB'$/;"	v	class:NSGigE
BAR1Size	src/dev/Ide.py	/^    BAR1Size = '4B'$/;"	v	class:IdeController
BAR1Size	src/dev/Pci.py	/^    BAR1Size = Param.MemorySize32('0B', "Base Address Register 1 Size")$/;"	v	class:PciDevice
BAR2	src/dev/Ethernet.py	/^    BAR2 = 0x00000000$/;"	v	class:IGbE
BAR2	src/dev/Ethernet.py	/^    BAR2 = 0x00000000$/;"	v	class:NSGigE
BAR2	src/dev/Ethernet.py	/^    BAR2 = 0x00000000$/;"	v	class:Sinic
BAR2	src/dev/Ide.py	/^    BAR2 = 0x00000001$/;"	v	class:IdeController
BAR2	src/dev/Pci.py	/^    BAR2 = Param.UInt32(0x00, "Base Address Register 2")$/;"	v	class:PciDevice
BAR2LegacyIO	src/dev/Pci.py	/^    BAR2LegacyIO = Param.Bool(False, "Whether BAR2 is hardwired legacy IO")$/;"	v	class:PciDevice
BAR2Size	src/dev/Ide.py	/^    BAR2Size = '8B'$/;"	v	class:IdeController
BAR2Size	src/dev/Pci.py	/^    BAR2Size = Param.MemorySize32('0B', "Base Address Register 2 Size")$/;"	v	class:PciDevice
BAR3	src/dev/Ethernet.py	/^    BAR3 = 0x00000000$/;"	v	class:IGbE
BAR3	src/dev/Ethernet.py	/^    BAR3 = 0x00000000$/;"	v	class:NSGigE
BAR3	src/dev/Ethernet.py	/^    BAR3 = 0x00000000$/;"	v	class:Sinic
BAR3	src/dev/Ide.py	/^    BAR3 = 0x00000001$/;"	v	class:IdeController
BAR3	src/dev/Pci.py	/^    BAR3 = Param.UInt32(0x00, "Base Address Register 3")$/;"	v	class:PciDevice
BAR3LegacyIO	src/dev/Pci.py	/^    BAR3LegacyIO = Param.Bool(False, "Whether BAR3 is hardwired legacy IO")$/;"	v	class:PciDevice
BAR3Size	src/dev/Ide.py	/^    BAR3Size = '4B'$/;"	v	class:IdeController
BAR3Size	src/dev/Pci.py	/^    BAR3Size = Param.MemorySize32('0B', "Base Address Register 3 Size")$/;"	v	class:PciDevice
BAR4	src/dev/Ethernet.py	/^    BAR4 = 0x00000000$/;"	v	class:IGbE
BAR4	src/dev/Ethernet.py	/^    BAR4 = 0x00000000$/;"	v	class:NSGigE
BAR4	src/dev/Ethernet.py	/^    BAR4 = 0x00000000$/;"	v	class:Sinic
BAR4	src/dev/Ide.py	/^    BAR4 = 0x00000001$/;"	v	class:IdeController
BAR4	src/dev/Pci.py	/^    BAR4 = Param.UInt32(0x00, "Base Address Register 4")$/;"	v	class:PciDevice
BAR4LegacyIO	src/dev/Pci.py	/^    BAR4LegacyIO = Param.Bool(False, "Whether BAR4 is hardwired legacy IO")$/;"	v	class:PciDevice
BAR4Size	src/dev/Ide.py	/^    BAR4Size = '16B'$/;"	v	class:IdeController
BAR4Size	src/dev/Pci.py	/^    BAR4Size = Param.MemorySize32('0B', "Base Address Register 4 Size")$/;"	v	class:PciDevice
BAR5	src/dev/Ethernet.py	/^    BAR5 = 0x00000000$/;"	v	class:IGbE
BAR5	src/dev/Ethernet.py	/^    BAR5 = 0x00000000$/;"	v	class:NSGigE
BAR5	src/dev/Ethernet.py	/^    BAR5 = 0x00000000$/;"	v	class:Sinic
BAR5	src/dev/Ide.py	/^    BAR5 = 0x00000001$/;"	v	class:IdeController
BAR5	src/dev/Pci.py	/^    BAR5 = Param.UInt32(0x00, "Base Address Register 5")$/;"	v	class:PciDevice
BAR5LegacyIO	src/dev/Pci.py	/^    BAR5LegacyIO = Param.Bool(False, "Whether BAR5 is hardwired legacy IO")$/;"	v	class:PciDevice
BAR5Size	src/dev/Pci.py	/^    BAR5Size = Param.MemorySize32('0B', "Base Address Register 5 Size")$/;"	v	class:PciDevice
BARAddrs	src/dev/pcidev.hh	/^    Addr BARAddrs[6];$/;"	m	class:PciDevice
BARSize	src/dev/pcidev.hh	/^    uint32_t BARSize[6];$/;"	m	class:PciDevice
BAR_IO_MASK	src/dev/pcidev.hh	/^#define BAR_IO_MASK /;"	d
BAR_IO_SPACE	src/dev/pcidev.hh	/^#define BAR_IO_SPACE(/;"	d
BAR_IO_SPACE_BIT	src/dev/pcidev.hh	/^#define BAR_IO_SPACE_BIT /;"	d
BAR_MEM_MASK	src/dev/pcidev.hh	/^#define BAR_MEM_MASK /;"	d
BAR_NUMBER	src/dev/pcidev.hh	/^#define BAR_NUMBER(/;"	d
BASELINE_TEMPERATURE_CELCIUS	src/mem/ruby/network/fault_model/FaultModel.hh	/^#define BASELINE_TEMPERATURE_CELCIUS /;"	d
BBInfo	src/cpu/simple/atomic.hh	/^    struct BBInfo {$/;"	s	class:AtomicSimpleCPU
BEBlocked	src/cpu/ozone/front_end.hh	/^        BEBlocked$/;"	e	enum:FrontEnd::Status
BGLoad	src/dev/arm/timer_sp804.hh	/^            BGLoad     = 0x18,$/;"	e	enum:Sp804::Timer::__anon69
BIST	src/dev/Pci.py	/^    BIST = Param.UInt8(0, "Built In Self Test")$/;"	v	class:PciDevice
BMICommand	src/dev/ide_ctrl.cc	/^    BMICommand = 0x0,$/;"	e	enum:BMIRegOffset	file:
BMIDescTablePtr	src/dev/ide_ctrl.cc	/^    BMIDescTablePtr = 0x4$/;"	e	enum:BMIRegOffset	file:
BMIRegOffset	src/dev/ide_ctrl.cc	/^enum BMIRegOffset {$/;"	g	file:
BMIRegs	src/dev/ide_ctrl.hh	/^        struct BMIRegs$/;"	s	struct:IdeController::Channel
BMIStatus	src/dev/ide_ctrl.cc	/^    BMIStatus = 0x2,$/;"	e	enum:BMIRegOffset	file:
BODY_	src/mem/ruby/network/garnet/NetworkHeader.hh	/^enum flit_type {HEAD_, BODY_, TAIL_, HEAD_TAIL_, NUM_FLIT_TYPE_};$/;"	e	enum:flit_type
BPHistory	src/cpu/pred/tournament.hh	/^        BPHistory()$/;"	f	struct:TournamentBP::BPHistory
BPHistory	src/cpu/pred/tournament.hh	/^    struct BPHistory {$/;"	s	class:TournamentBP
BPred	src/cpu/inorder/pipeline_traits.5stage.hh	/^       BPred,$/;"	e	enum:ThePipeline::ResourceList
BPred	src/cpu/inorder/pipeline_traits.9stage.hh	/^       BPred,$/;"	e	enum:ThePipeline::ResourceList
BPred	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^       BPred,$/;"	e	enum:ThePipeline::ResourceList
BPred	src/cpu/inorder/pipeline_traits.hh	/^       BPred,$/;"	e	enum:ThePipeline::ResourceId
BPredInfo	src/cpu/ozone/null_predictor.hh	/^        BPredInfo()$/;"	f	struct:NullPredictor::BPredInfo
BPredInfo	src/cpu/ozone/null_predictor.hh	/^        BPredInfo(const Addr &pc, const Addr &next_pc)$/;"	f	struct:NullPredictor::BPredInfo
BPredInfo	src/cpu/ozone/null_predictor.hh	/^    struct BPredInfo {$/;"	s	class:NullPredictor
BPredUnit	src/cpu/pred/bpred_unit.hh	/^class BPredUnit : public SimObject$/;"	c
BPredUnit	src/cpu/pred/bpred_unit_impl.hh	/^BPredUnit::BPredUnit(const Params *params)$/;"	f	class:BPredUnit
BRAR	src/dev/ns_gige_reg.h	/^    BRAR =              0x50,$/;"	e	enum:DeviceRegisterAddress
BRDR	src/dev/ns_gige_reg.h	/^    BRDR =              0x54,$/;"	e	enum:DeviceRegisterAddress
BROADCAST_SCALING	src/mem/ruby/network/simple/Throttle.cc	/^const int BROADCAST_SCALING = 1;$/;"	v
BTB	src/cpu/pred/bpred_unit.hh	/^    DefaultBTB BTB;$/;"	m	class:BPredUnit
BTBCorrect	src/cpu/pred/bpred_unit.hh	/^    Stats::Scalar BTBCorrect;$/;"	m	class:BPredUnit
BTBEntries	src/cpu/ozone/OzoneCPU.py	/^    BTBEntries = Param.Unsigned("Number of BTB entries")$/;"	v	class:DerivOzoneCPU
BTBEntries	src/cpu/ozone/SimpleOzoneCPU.py	/^    BTBEntries = Param.Unsigned("Number of BTB entries")$/;"	v	class:SimpleOzoneCPU
BTBEntries	src/cpu/ozone/simple_params.hh	/^    unsigned BTBEntries;$/;"	m	class:SimpleParams
BTBEntries	src/cpu/pred/BranchPredictor.py	/^    BTBEntries = Param.Unsigned(4096, "Number of BTB entries")$/;"	v	class:BranchPredictor
BTBEntry	src/cpu/pred/btb.hh	/^        BTBEntry()$/;"	f	struct:DefaultBTB::BTBEntry
BTBEntry	src/cpu/pred/btb.hh	/^    struct BTBEntry$/;"	s	class:DefaultBTB
BTBHitPct	src/cpu/pred/bpred_unit.hh	/^    Stats::Formula BTBHitPct;$/;"	m	class:BPredUnit
BTBHits	src/cpu/pred/bpred_unit.hh	/^    Stats::Scalar BTBHits;$/;"	m	class:BPredUnit
BTBLookup	src/cpu/pred/bpred_unit.hh	/^    TheISA::PCState BTBLookup(Addr instPC)$/;"	f	class:BPredUnit
BTBLookups	src/cpu/pred/bpred_unit.hh	/^    Stats::Scalar BTBLookups;$/;"	m	class:BPredUnit
BTBTagSize	src/cpu/ozone/OzoneCPU.py	/^    BTBTagSize = Param.Unsigned("Size of the BTB tags, in bits")$/;"	v	class:DerivOzoneCPU
BTBTagSize	src/cpu/ozone/SimpleOzoneCPU.py	/^    BTBTagSize = Param.Unsigned("Size of the BTB tags, in bits")$/;"	v	class:SimpleOzoneCPU
BTBTagSize	src/cpu/ozone/simple_params.hh	/^    unsigned BTBTagSize;$/;"	m	class:SimpleParams
BTBTagSize	src/cpu/pred/BranchPredictor.py	/^    BTBTagSize = Param.Unsigned(16, "Size of the BTB tags, in bits")$/;"	v	class:BranchPredictor
BTBUpdate	src/cpu/pred/bpred_unit.hh	/^    void BTBUpdate(Addr instPC, const TheISA::PCState &target)$/;"	f	class:BPredUnit
BTBValid	src/cpu/pred/bpred_unit.hh	/^    bool BTBValid(Addr instPC)$/;"	f	class:BPredUnit
BUF_REG	src/mem/ruby/network/orion/Buffer/Buffer.hh	/^      BUF_REG$/;"	e	enum:Buffer::BufferModel
BUF_SRAM	src/mem/ruby/network/orion/Buffer/Buffer.hh	/^      BUF_SRAM,$/;"	e	enum:Buffer::BufferModel
BUS	src/python/m5/util/dot_writer.py	/^    BUS = 2$/;"	v	class:NodeType
BUSY	src/mem/bus.hh	/^        enum State { IDLE, BUSY, RETRY };$/;"	e	enum:BaseBus::Layer::State
BUS_OPTIONS_RESETV	src/dev/arm/hdlcd.hh	/^    static const size_t BUS_OPTIONS_RESETV = 0x408;$/;"	m	class:HDLcd
BY	src/arch/x86/decoder_tables.cc	/^        BY = ByteImm,$/;"	e	enum:X86ISA::SizeType	file:
BackEnd	src/cpu/ozone/back_end.hh	/^class BackEnd$/;"	c
BackEnd	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::BackEnd(Params *params)$/;"	f	class:BackEnd
BackEnd	src/cpu/ozone/cpu.hh	/^    typedef typename Impl::BackEnd BackEnd;$/;"	t	class:OzoneCPU
BackEnd	src/cpu/ozone/front_end.hh	/^    typedef typename Impl::BackEnd BackEnd;$/;"	t	class:FrontEnd
BackEnd	src/cpu/ozone/lsq_unit.hh	/^    typedef typename Impl::BackEnd BackEnd;$/;"	t	class:OzoneLSQ
BackEnd	src/cpu/ozone/lw_lsq.hh	/^    typedef typename Impl::BackEnd BackEnd;$/;"	t	class:OzoneLWLSQ
BackEnd	src/cpu/ozone/ozone_impl.hh	/^    typedef LWBackEnd<OzoneImpl> BackEnd;$/;"	t	struct:OzoneImpl
BackEnd	src/cpu/ozone/simple_impl.hh	/^    typedef InorderBackEnd<SimpleImpl> BackEnd;$/;"	t	struct:SimpleImpl
BackEndStartStage	src/cpu/inorder/pipeline_traits.5stage.hh	/^    const unsigned BackEndStartStage = 2;$/;"	m	namespace:ThePipeline
BackEndStartStage	src/cpu/inorder/pipeline_traits.9stage.hh	/^    const unsigned BackEndStartStage = 3;$/;"	m	namespace:ThePipeline
BackEndStartStage	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^    const unsigned BackEndStartStage = 3;$/;"	m	namespace:ThePipeline
BackEndStartStage	src/cpu/inorder/pipeline_traits.hh	/^    const unsigned BackEndStartStage = 2;$/;"	m	namespace:ThePipeline
BadAddr	src/dev/Device.py	/^class BadAddr(IsaFake):$/;"	c
BadAddr	src/dev/alpha/Tsunami.py	/^from Device import BasicPioDevice, IsaFake, BadAddr$/;"	i
BadAddr	src/dev/arm/RealView.py	/^from Device import BasicPioDevice, PioDevice, IsaFake, BadAddr, DmaDevice$/;"	i
BadAddr	src/dev/sparc/T1000.py	/^from Device import BasicPioDevice, PioDevice, IsaFake, BadAddr$/;"	i
BadAddrEvent	src/kern/tru64/tru64_events.hh	/^    BadAddrEvent(PCEventQueue *q, const std::string &desc, Addr addr)$/;"	f	class:BadAddrEvent
BadAddrEvent	src/kern/tru64/tru64_events.hh	/^class BadAddrEvent : public SkipFuncEvent$/;"	c
BadAddressError	src/mem/packet.hh	/^        BadAddressError,   \/\/ memory address invalid$/;"	e	enum:MemCmd::Command
BadDevice	src/dev/BadDevice.py	/^class BadDevice(BasicPioDevice):$/;"	c
BadDevice	src/dev/alpha/Tsunami.py	/^from BadDevice import BadDevice$/;"	i
BadDevice	src/dev/baddev.cc	/^BadDevice::BadDevice(Params *p)$/;"	f	class:BadDevice
BadDevice	src/dev/baddev.hh	/^class BadDevice : public BasicPioDevice$/;"	c
BadDevice	src/dev/mips/Malta.py	/^from BadDevice import BadDevice$/;"	i
Bah	src/arch/micro_asm_test.py	/^class Bah(object):$/;"	c
Bah_Tweaked	src/arch/micro_asm_test.py	/^class Bah_Tweaked(object):$/;"	c
Bank	src/mem/dram_ctrl.hh	/^        Bank() :$/;"	f	class:DRAMCtrl::Bank
Bank	src/mem/dram_ctrl.hh	/^    class Bank$/;"	c	class:DRAMCtrl
BankType	src/arch/mips/isa.hh	/^        enum BankType {$/;"	g	class:MipsISA::ISA
BankedArray	src/mem/ruby/system/BankedArray.cc	/^BankedArray::BankedArray(unsigned int banks, Cycles accessLatency,$/;"	f	class:BankedArray
BankedArray	src/mem/ruby/system/BankedArray.hh	/^class BankedArray$/;"	c
BareIronMipsSystem	src/arch/mips/MipsSystem.py	/^class BareIronMipsSystem(MipsSystem):$/;"	c
BareIronMipsSystem	src/arch/mips/bare_iron/system.cc	/^BareIronMipsSystem::BareIronMipsSystem(Params *p)$/;"	f	class:BareIronMipsSystem
BareIronMipsSystem	src/arch/mips/bare_iron/system.hh	/^class BareIronMipsSystem : public MipsSystem$/;"	c
Barrier	src/base/barrier.hh	/^    Barrier(unsigned _numWaiting)$/;"	f	class:Barrier
Barrier	src/base/barrier.hh	/^class Barrier$/;"	c
BarrierEvent	src/sim/global_event.hh	/^        BarrierEvent(Base *global_event, Priority p, Flags f)$/;"	f	class:GlobalEvent::BarrierEvent
BarrierEvent	src/sim/global_event.hh	/^        BarrierEvent(Base *global_event, Priority p, Flags f)$/;"	f	class:GlobalSyncEvent::BarrierEvent
BarrierEvent	src/sim/global_event.hh	/^        BarrierEvent(BaseGlobalEvent *global_event, Priority p, Flags f)$/;"	f	class:BaseGlobalEvent::BarrierEvent
BarrierEvent	src/sim/global_event.hh	/^    class BarrierEvent : public Base::BarrierEvent$/;"	c	class:GlobalEvent
BarrierEvent	src/sim/global_event.hh	/^    class BarrierEvent : public Base::BarrierEvent$/;"	c	class:GlobalSyncEvent
BarrierEvent	src/sim/global_event.hh	/^    class BarrierEvent : public Event$/;"	c	class:BaseGlobalEvent
Base	src/arch/arm/types.hh	/^        typedef GenericISA::UPCState<MachInst> Base;$/;"	t	class:ArmISA::PCState
Base	src/arch/generic/types.hh	/^    typedef DelaySlotPCState<MachInst> Base;$/;"	t	class:GenericISA::DelaySlotUPCState
Base	src/arch/generic/types.hh	/^    typedef PCStateBase Base;$/;"	t	class:GenericISA::SimplePCState
Base	src/arch/generic/types.hh	/^    typedef SimplePCState<MachInst> Base;$/;"	t	class:GenericISA::DelaySlotPCState
Base	src/arch/generic/types.hh	/^    typedef SimplePCState<MachInst> Base;$/;"	t	class:GenericISA::UPCState
Base	src/arch/null/types.hh	/^        typedef GenericISA::UPCState<MachInst> Base;$/;"	t	class:NullISA::PCState
Base	src/arch/x86/types.hh	/^        typedef GenericISA::UPCState<MachInst> Base;$/;"	t	class:X86ISA::PCState
Base	src/base/varargs.hh	/^    typedef RefCountingPtr<VarArgs::Base<RECV> > Base;$/;"	t	struct:VarArgs::Argument
Base	src/base/varargs.hh	/^struct Base : public RefCounted$/;"	s	namespace:VarArgs
Base	src/dev/sinic.cc	/^Base::Base(const Params *p)$/;"	f	class:Sinic::Base
Base	src/dev/sinic.hh	/^class Base : public EtherDevBase$/;"	c	namespace:Sinic
Base	src/sim/global_event.hh	/^    typedef BaseGlobalEventTemplate<GlobalEvent> Base;$/;"	t	class:GlobalEvent
Base	src/sim/global_event.hh	/^    typedef BaseGlobalEventTemplate<GlobalSyncEvent> Base;$/;"	t	class:GlobalSyncEvent
BaseBufferArg	src/sim/syscall_emul.hh	/^    BaseBufferArg(Addr _addr, int _size) : addr(_addr), size(_size)$/;"	f	class:BaseBufferArg
BaseBufferArg	src/sim/syscall_emul.hh	/^class BaseBufferArg {$/;"	c
BaseBus	src/mem/Bus.py	/^class BaseBus(MemObject):$/;"	c
BaseBus	src/mem/bus.cc	/^BaseBus::BaseBus(const BaseBusParams *p)$/;"	f	class:BaseBus
BaseBus	src/mem/bus.hh	/^class BaseBus : public MemObject$/;"	c
BaseCPU	src/arch/mips/MipsCPU.py	/^from BaseCPU import BaseCPU$/;"	i
BaseCPU	src/arch/null/cpu_dummy.hh	/^class BaseCPU$/;"	c
BaseCPU	src/cpu/BaseCPU.py	/^class BaseCPU(MemObject):$/;"	c
BaseCPU	src/cpu/CheckerCPU.py	/^from BaseCPU import BaseCPU$/;"	i
BaseCPU	src/cpu/base.cc	/^BaseCPU::BaseCPU(Params *p, bool is_checker)$/;"	f	class:BaseCPU
BaseCPU	src/cpu/base.hh	/^class BaseCPU : public MemObject$/;"	c
BaseCPU	src/cpu/inorder/InOrderCPU.py	/^from BaseCPU import BaseCPU$/;"	i
BaseCPU	src/cpu/kvm/BaseKvmCPU.py	/^from BaseCPU import BaseCPU$/;"	i
BaseCPU	src/cpu/o3/O3CPU.py	/^from BaseCPU import BaseCPU$/;"	i
BaseCPU	src/cpu/ozone/OzoneCPU.py	/^from BaseCPU import BaseCPU$/;"	i
BaseCPU	src/cpu/ozone/OzoneChecker.py	/^from BaseCPU import BaseCPU$/;"	i
BaseCPU	src/cpu/ozone/SimpleOzoneCPU.py	/^from BaseCPU import BaseCPU$/;"	i
BaseCPU	src/cpu/simple/BaseSimpleCPU.py	/^from BaseCPU import BaseCPU$/;"	i
BaseCache	src/mem/cache/BaseCache.py	/^class BaseCache(MemObject):$/;"	c
BaseCache	src/mem/cache/base.cc	/^BaseCache::BaseCache(const Params *p)$/;"	f	class:BaseCache
BaseCache	src/mem/cache/base.hh	/^class BaseCache : public MemObject$/;"	c
BaseConfigEntry	src/arch/x86/bios/intelmp.cc	/^X86ISA::IntelMP::BaseConfigEntry::BaseConfigEntry(Params * p, uint8_t _type) :$/;"	f	class:X86ISA::IntelMP::BaseConfigEntry
BaseConfigEntry	src/arch/x86/bios/intelmp.hh	/^class BaseConfigEntry : public SimObject$/;"	c	namespace:X86ISA::IntelMP
BaseDynInst	src/cpu/base_dyn_inst.hh	/^class BaseDynInst : public RefCounted$/;"	c
BaseDynInst	src/cpu/base_dyn_inst_impl.hh	/^BaseDynInst<Impl>::BaseDynInst(StaticInstPtr _staticInst,$/;"	f	class:BaseDynInst
BaseDynInstPtr	src/cpu/base_dyn_inst.hh	/^    typedef RefCountingPtr<BaseDynInst<Impl> > BaseDynInstPtr;$/;"	t	class:BaseDynInst
BaseGarnetNetwork	src/mem/ruby/network/garnet/BaseGarnetNetwork.cc	/^BaseGarnetNetwork::BaseGarnetNetwork(const Params *p)$/;"	f	class:BaseGarnetNetwork
BaseGarnetNetwork	src/mem/ruby/network/garnet/BaseGarnetNetwork.hh	/^class BaseGarnetNetwork : public Network $/;"	c
BaseGarnetNetwork	src/mem/ruby/network/garnet/BaseGarnetNetwork.py	/^class BaseGarnetNetwork(RubyNetwork):$/;"	c
BaseGarnetNetwork	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.py	/^from BaseGarnetNetwork import BaseGarnetNetwork$/;"	i
BaseGarnetNetwork	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.py	/^from BaseGarnetNetwork import BaseGarnetNetwork$/;"	i
BaseGen	src/cpu/testers/traffic_gen/generators.cc	/^BaseGen::BaseGen(const std::string& _name, MasterID master_id, Tick _duration)$/;"	f	class:BaseGen
BaseGen	src/cpu/testers/traffic_gen/generators.hh	/^class BaseGen$/;"	c
BaseGic	src/dev/arm/Gic.py	/^class BaseGic(PioDevice):$/;"	c
BaseGic	src/dev/arm/base_gic.cc	/^BaseGic::BaseGic(const Params *p)$/;"	f	class:BaseGic
BaseGic	src/dev/arm/base_gic.hh	/^class BaseGic :  public PioDevice$/;"	c
BaseGlobalEvent	src/sim/global_event.cc	/^BaseGlobalEvent::BaseGlobalEvent(Priority p, Flags f)$/;"	f	class:BaseGlobalEvent
BaseGlobalEvent	src/sim/global_event.hh	/^class BaseGlobalEvent : public EventBase$/;"	c
BaseGlobalEventTemplate	src/sim/global_event.hh	/^    BaseGlobalEventTemplate(Priority p, Flags f)$/;"	f	class:BaseGlobalEventTemplate
BaseGlobalEventTemplate	src/sim/global_event.hh	/^class BaseGlobalEventTemplate : public BaseGlobalEvent$/;"	c
BaseKvmCPU	src/cpu/kvm/ArmKvmCPU.py	/^from BaseKvmCPU import BaseKvmCPU$/;"	i
BaseKvmCPU	src/cpu/kvm/BaseKvmCPU.py	/^class BaseKvmCPU(BaseCPU):$/;"	c
BaseKvmCPU	src/cpu/kvm/X86KvmCPU.py	/^from BaseKvmCPU import BaseKvmCPU$/;"	i
BaseKvmCPU	src/cpu/kvm/base.cc	/^BaseKvmCPU::BaseKvmCPU(BaseKvmCPUParams *params)$/;"	f	class:BaseKvmCPU
BaseKvmCPU	src/cpu/kvm/base.hh	/^class BaseKvmCPU : public BaseCPU$/;"	c
BaseKvmTimer	src/cpu/kvm/timer.hh	/^    BaseKvmTimer(int signo, float hostFactor, Tick hostFreq)$/;"	f	class:BaseKvmTimer
BaseKvmTimer	src/cpu/kvm/timer.hh	/^class BaseKvmTimer$/;"	c
BaseMasterPort	src/mem/port.cc	/^BaseMasterPort::BaseMasterPort(const std::string& name, MemObject* owner,$/;"	f	class:BaseMasterPort
BaseMasterPort	src/mem/port.hh	/^class BaseMasterPort : public Port$/;"	c
BaseMipsCPU	src/arch/mips/MipsCPU.py	/^class BaseMipsCPU(BaseCPU)$/;"	c
BaseO3CPU	src/cpu/o3/cpu.cc	/^BaseO3CPU::BaseO3CPU(BaseCPUParams *params)$/;"	f	class:BaseO3CPU
BaseO3CPU	src/cpu/o3/cpu.hh	/^class BaseO3CPU : public BaseCPU$/;"	c
BaseO3DynInst	src/cpu/o3/dyn_inst.hh	/^class BaseO3DynInst : public BaseDynInst<Impl>$/;"	c
BaseO3DynInst	src/cpu/o3/dyn_inst_impl.hh	/^BaseO3DynInst<Impl>::BaseO3DynInst(StaticInstPtr _staticInst,$/;"	f	class:BaseO3DynInst
BaseO3DynInst	src/cpu/o3/dyn_inst_impl.hh	/^BaseO3DynInst<Impl>::BaseO3DynInst(StaticInstPtr staticInst,$/;"	f	class:BaseO3DynInst
BasePrefetcher	src/mem/cache/BaseCache.py	/^from Prefetcher import BasePrefetcher$/;"	i
BasePrefetcher	src/mem/cache/prefetch/Prefetcher.py	/^class BasePrefetcher(ClockedObject):$/;"	c
BasePrefetcher	src/mem/cache/prefetch/base.cc	/^BasePrefetcher::BasePrefetcher(const Params *p)$/;"	f	class:BasePrefetcher
BasePrefetcher	src/mem/cache/prefetch/base.hh	/^class BasePrefetcher : public ClockedObject$/;"	c
BaseProxy	src/python/m5/proxy.py	/^class BaseProxy(object):$/;"	c
BaseRemoteGDB	src/arch/null/remote_gdb.hh	/^class BaseRemoteGDB$/;"	c
BaseRemoteGDB	src/base/remote_gdb.cc	/^BaseRemoteGDB::BaseRemoteGDB(System *_system, ThreadContext *c, size_t cacheSize)$/;"	f	class:BaseRemoteGDB
BaseRemoteGDB	src/base/remote_gdb.hh	/^class BaseRemoteGDB$/;"	c
BaseSimpleCPU	src/cpu/simple/AtomicSimpleCPU.py	/^from BaseSimpleCPU import BaseSimpleCPU$/;"	i
BaseSimpleCPU	src/cpu/simple/BaseSimpleCPU.py	/^class BaseSimpleCPU(BaseCPU):$/;"	c
BaseSimpleCPU	src/cpu/simple/TimingSimpleCPU.py	/^from BaseSimpleCPU import BaseSimpleCPU$/;"	i
BaseSimpleCPU	src/cpu/simple/base.cc	/^BaseSimpleCPU::BaseSimpleCPU(BaseSimpleCPUParams *p)$/;"	f	class:BaseSimpleCPU
BaseSimpleCPU	src/cpu/simple/base.hh	/^class BaseSimpleCPU : public BaseCPU$/;"	c
BaseSlavePort	src/mem/port.cc	/^BaseSlavePort::BaseSlavePort(const std::string& name, MemObject* owner,$/;"	f	class:BaseSlavePort
BaseSlavePort	src/mem/port.hh	/^class BaseSlavePort : public Port$/;"	c
BaseTLB	src/arch/alpha/AlphaTLB.py	/^from BaseTLB import BaseTLB$/;"	i
BaseTLB	src/arch/mips/MipsTLB.py	/^from BaseTLB import BaseTLB$/;"	i
BaseTLB	src/arch/sparc/SparcTLB.py	/^from BaseTLB import BaseTLB$/;"	i
BaseTLB	src/arch/x86/X86TLB.py	/^from BaseTLB import BaseTLB$/;"	i
BaseTLB	src/sim/BaseTLB.py	/^class BaseTLB(SimObject):$/;"	c
BaseTLB	src/sim/tlb.hh	/^    BaseTLB(const Params *p)$/;"	f	class:BaseTLB
BaseTLB	src/sim/tlb.hh	/^class BaseTLB : public SimObject$/;"	c
BaseTags	src/mem/cache/tags/Tags.py	/^class BaseTags(ClockedObject):$/;"	c
BaseTags	src/mem/cache/tags/base.cc	/^BaseTags::BaseTags(const Params *p)$/;"	f	class:BaseTags
BaseTags	src/mem/cache/tags/base.hh	/^class BaseTags : public ClockedObject$/;"	c
BaseTagsCallback	src/mem/cache/tags/base.hh	/^    BaseTagsCallback(BaseTags *t) : tags(t) {}$/;"	f	class:BaseTagsCallback
BaseTagsCallback	src/mem/cache/tags/base.hh	/^class BaseTagsCallback : public Callback$/;"	c
BaseTagsDumpCallback	src/mem/cache/tags/base.hh	/^    BaseTagsDumpCallback(BaseTags *t) : tags(t) {}$/;"	f	class:BaseTagsDumpCallback
BaseTagsDumpCallback	src/mem/cache/tags/base.hh	/^class BaseTagsDumpCallback : public Callback$/;"	c
BasicBlockRange	src/cpu/simple/atomic.hh	/^typedef std::pair<Addr, Addr> BasicBlockRange;$/;"	t
BasicDecodeCache	src/arch/generic/decode_cache.hh	/^class BasicDecodeCache$/;"	c	namespace:GenericISA
BasicExtLink	src/mem/ruby/network/BasicLink.cc	/^BasicExtLink::BasicExtLink(const Params *p)$/;"	f	class:BasicExtLink
BasicExtLink	src/mem/ruby/network/BasicLink.hh	/^class BasicExtLink : public BasicLink$/;"	c
BasicExtLink	src/mem/ruby/network/BasicLink.py	/^class BasicExtLink(BasicLink):$/;"	c
BasicExtLink	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.py	/^from BasicLink import BasicIntLink, BasicExtLink$/;"	i
BasicExtLink	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.py	/^from BasicLink import BasicIntLink, BasicExtLink$/;"	i
BasicExtLink	src/mem/ruby/network/simple/SimpleLink.py	/^from BasicLink import BasicIntLink, BasicExtLink$/;"	i
BasicIntLink	src/mem/ruby/network/BasicLink.cc	/^BasicIntLink::BasicIntLink(const Params *p)$/;"	f	class:BasicIntLink
BasicIntLink	src/mem/ruby/network/BasicLink.hh	/^class BasicIntLink : public BasicLink$/;"	c
BasicIntLink	src/mem/ruby/network/BasicLink.py	/^class BasicIntLink(BasicLink):$/;"	c
BasicIntLink	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.py	/^from BasicLink import BasicIntLink, BasicExtLink$/;"	i
BasicIntLink	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.py	/^from BasicLink import BasicIntLink, BasicExtLink$/;"	i
BasicIntLink	src/mem/ruby/network/simple/SimpleLink.py	/^from BasicLink import BasicIntLink, BasicExtLink$/;"	i
BasicLink	src/mem/ruby/network/BasicLink.cc	/^BasicLink::BasicLink(const Params *p)$/;"	f	class:BasicLink
BasicLink	src/mem/ruby/network/BasicLink.hh	/^class BasicLink : public SimObject$/;"	c
BasicLink	src/mem/ruby/network/BasicLink.py	/^class BasicLink(SimObject):$/;"	c
BasicLink	src/mem/ruby/network/Network.py	/^from BasicLink import BasicLink$/;"	i
BasicPioDevice	src/arch/x86/X86LocalApic.py	/^from Device import BasicPioDevice$/;"	i
BasicPioDevice	src/dev/BadDevice.py	/^from Device import BasicPioDevice$/;"	i
BasicPioDevice	src/dev/Device.py	/^class BasicPioDevice(PioDevice):$/;"	c
BasicPioDevice	src/dev/Pci.py	/^from Device import BasicPioDevice, DmaDevice, PioDevice$/;"	i
BasicPioDevice	src/dev/Uart.py	/^from Device import BasicPioDevice$/;"	i
BasicPioDevice	src/dev/alpha/AlphaBackdoor.py	/^from Device import BasicPioDevice$/;"	i
BasicPioDevice	src/dev/alpha/Tsunami.py	/^from Device import BasicPioDevice, IsaFake, BadAddr$/;"	i
BasicPioDevice	src/dev/arm/RealView.py	/^from Device import BasicPioDevice, PioDevice, IsaFake, BadAddr, DmaDevice$/;"	i
BasicPioDevice	src/dev/io_device.cc	/^BasicPioDevice::BasicPioDevice(const Params *p, Addr size)$/;"	f	class:BasicPioDevice
BasicPioDevice	src/dev/io_device.hh	/^class BasicPioDevice : public PioDevice$/;"	c
BasicPioDevice	src/dev/mips/Malta.py	/^from Device import BasicPioDevice$/;"	i
BasicPioDevice	src/dev/sparc/T1000.py	/^from Device import BasicPioDevice, PioDevice, IsaFake, BadAddr$/;"	i
BasicPioDevice	src/dev/x86/Cmos.py	/^from Device import BasicPioDevice$/;"	i
BasicPioDevice	src/dev/x86/I8042.py	/^from Device import BasicPioDevice$/;"	i
BasicPioDevice	src/dev/x86/I82094AA.py	/^from Device import BasicPioDevice$/;"	i
BasicPioDevice	src/dev/x86/I8237.py	/^from Device import BasicPioDevice$/;"	i
BasicPioDevice	src/dev/x86/I8254.py	/^from Device import BasicPioDevice$/;"	i
BasicPioDevice	src/dev/x86/I8259.py	/^from Device import BasicPioDevice$/;"	i
BasicPioDevice	src/dev/x86/PcSpeaker.py	/^from Device import BasicPioDevice$/;"	i
BasicRouter	src/mem/ruby/network/BasicRouter.cc	/^BasicRouter::BasicRouter(const Params *p)$/;"	f	class:BasicRouter
BasicRouter	src/mem/ruby/network/BasicRouter.hh	/^class BasicRouter : public ClockedObject$/;"	c
BasicRouter	src/mem/ruby/network/BasicRouter.py	/^class BasicRouter(ClockedObject):$/;"	c
BasicRouter	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.py	/^from BasicRouter import BasicRouter$/;"	i
BasicRouter	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.py	/^from BasicRouter import BasicRouter$/;"	i
BasicRouter	src/mem/ruby/network/simple/SimpleNetwork.py	/^from BasicRouter import BasicRouter$/;"	i
BatSuccessful	src/dev/x86/i8042.cc	/^const uint8_t BatSuccessful = 0xaa;$/;"	v
BigEndianByteOrder	src/sim/byteswap.hh	/^enum ByteOrder {BigEndianByteOrder, LittleEndianByteOrder};$/;"	e	enum:ByteOrder
BigEndianGuest	src/arch/power/isa_traits.hh	/^namespace BigEndianGuest {}$/;"	n
BigEndianGuest	src/arch/sparc/isa_traits.hh	/^namespace BigEndianGuest {}$/;"	n
BigEndianGuest	src/sim/byteswap.hh	/^namespace BigEndianGuest$/;"	n
BigFpMemImmOp	src/arch/arm/insts/macromem.cc	/^BigFpMemImmOp::BigFpMemImmOp(const char *mnem, ExtMachInst machInst,$/;"	f	class:ArmISA::BigFpMemImmOp
BigFpMemImmOp	src/arch/arm/insts/macromem.hh	/^class BigFpMemImmOp : public PredMacroOp$/;"	c	namespace:ArmISA
BigFpMemLitOp	src/arch/arm/insts/macromem.cc	/^BigFpMemLitOp::BigFpMemLitOp(const char *mnem, ExtMachInst machInst,$/;"	f	class:ArmISA::BigFpMemLitOp
BigFpMemLitOp	src/arch/arm/insts/macromem.hh	/^class BigFpMemLitOp : public PredMacroOp$/;"	c	namespace:ArmISA
BigFpMemPostOp	src/arch/arm/insts/macromem.cc	/^BigFpMemPostOp::BigFpMemPostOp(const char *mnem, ExtMachInst machInst,$/;"	f	class:ArmISA::BigFpMemPostOp
BigFpMemPostOp	src/arch/arm/insts/macromem.hh	/^class BigFpMemPostOp : public PredMacroOp$/;"	c	namespace:ArmISA
BigFpMemPreOp	src/arch/arm/insts/macromem.cc	/^BigFpMemPreOp::BigFpMemPreOp(const char *mnem, ExtMachInst machInst,$/;"	f	class:ArmISA::BigFpMemPreOp
BigFpMemPreOp	src/arch/arm/insts/macromem.hh	/^class BigFpMemPreOp : public PredMacroOp$/;"	c	namespace:ArmISA
BigFpMemRegOp	src/arch/arm/insts/macromem.cc	/^BigFpMemRegOp::BigFpMemRegOp(const char *mnem, ExtMachInst machInst,$/;"	f	class:ArmISA::BigFpMemRegOp
BigFpMemRegOp	src/arch/arm/insts/macromem.hh	/^class BigFpMemRegOp : public PredMacroOp$/;"	c	namespace:ArmISA
BinaryNode	src/base/statistics.hh	/^    BinaryNode(NodePtr &a, NodePtr &b) : l(a), r(b) {}$/;"	f	class:Stats::BinaryNode
BinaryNode	src/base/statistics.hh	/^class BinaryNode : public Node$/;"	c	namespace:Stats
BiosInformation	src/arch/x86/bios/smbios.cc	/^X86ISA::SMBios::BiosInformation::BiosInformation(Params * p) :$/;"	f	class:X86ISA::SMBios::BiosInformation
BiosInformation	src/arch/x86/bios/smbios.hh	/^class BiosInformation : public SMBiosStructure$/;"	c	namespace:X86ISA::SMBios
BitCount	src/base/bitmap.hh	/^        uint16_t BitCount;$/;"	m	struct:Bitmap::Info
BitUnion	src/base/bitunion.hh	/^#define BitUnion(/;"	d
BitUnion16	src/base/bitunion.hh	/^#define BitUnion16(/;"	d
BitUnion32	src/base/bitunion.hh	/^#define BitUnion32(/;"	d
BitUnion64	src/base/bitunion.hh	/^#define BitUnion64(/;"	d
BitUnion8	src/base/bitunion.hh	/^#define BitUnion8(/;"	d
BitUnionOperators	src/base/bitunion.hh	/^        BitUnionOperators() {}$/;"	f	class:BitfieldBackend::BitUnionOperators
BitUnionOperators	src/base/bitunion.hh	/^        BitUnionOperators(Type const & _data)$/;"	f	class:BitfieldBackend::BitUnionOperators
BitUnionOperators	src/base/bitunion.hh	/^    class BitUnionOperators : public Base$/;"	c	namespace:BitfieldBackend
Bitfield	src/base/bitunion.hh	/^        class Bitfield : public BitfieldBase<Type>$/;"	c	class:BitfieldBackend::RegularBitfieldTypes
BitfieldBackend	src/base/bitunion.hh	/^namespace BitfieldBackend$/;"	n
BitfieldBase	src/base/bitunion.hh	/^    class BitfieldBase$/;"	c	namespace:BitfieldBackend
BitfieldRO	src/base/bitunion.hh	/^        class BitfieldRO : public Bitfield<first, last>$/;"	c	class:BitfieldBackend::RegularBitfieldTypes
BitfieldTypes	src/base/bitunion.hh	/^    class BitfieldTypes : public RegularBitfieldTypes<Type>,$/;"	c	namespace:BitfieldBackend
BitfieldWO	src/base/bitunion.hh	/^        class BitfieldWO : public Bitfield<first, last>$/;"	c	class:BitfieldBackend::RegularBitfieldTypes
BitlineModel	src/mem/ruby/network/orion/Buffer/BitlineUnit.hh	/^    enum BitlineModel$/;"	g	class:BitlineUnit
BitlineUnit	src/mem/ruby/network/orion/Buffer/BitlineUnit.cc	/^BitlineUnit::BitlineUnit($/;"	f	class:BitlineUnit
BitlineUnit	src/mem/ruby/network/orion/Buffer/BitlineUnit.hh	/^class BitlineUnit$/;"	c
Bitmap	src/base/bitmap.cc	/^Bitmap::Bitmap(VideoConvert::Mode _mode, uint16_t w, uint16_t h, uint8_t *d)$/;"	f	class:Bitmap
Bitmap	src/base/bitmap.hh	/^class  Bitmap$/;"	c
BlkDirty	src/mem/cache/blk.hh	/^    BlkDirty =          0x08,$/;"	e	enum:CacheBlkStatusBits
BlkHWPrefetched	src/mem/cache/blk.hh	/^    BlkHWPrefetched =   0x20,$/;"	e	enum:CacheBlkStatusBits
BlkList	src/mem/cache/cache.hh	/^    typedef typename TagStore::BlkList BlkList;$/;"	t	class:Cache
BlkList	src/mem/cache/tags/fa_lru.hh	/^    typedef std::list<FALRUBlk*> BlkList;$/;"	t	class:FALRU
BlkList	src/mem/cache/tags/lru.hh	/^    typedef std::list<BlkType*> BlkList;$/;"	t	class:LRU
BlkReadable	src/mem/cache/blk.hh	/^    BlkReadable =       0x04,$/;"	e	enum:CacheBlkStatusBits
BlkReferenced	src/mem/cache/blk.hh	/^    BlkReferenced =     0x10,$/;"	e	enum:CacheBlkStatusBits
BlkSecure	src/mem/cache/blk.hh	/^    BlkSecure =         0x40$/;"	e	enum:CacheBlkStatusBits
BlkType	src/mem/cache/cache.hh	/^    typedef typename TagStore::BlkType BlkType;$/;"	t	class:Cache
BlkType	src/mem/cache/tags/fa_lru.hh	/^    typedef FALRUBlk BlkType;$/;"	t	class:FALRU
BlkType	src/mem/cache/tags/lru.hh	/^    typedef CacheBlk BlkType;$/;"	t	class:LRU
BlkValid	src/mem/cache/blk.hh	/^    BlkValid =          0x01,$/;"	e	enum:CacheBlkStatusBits
BlkWritable	src/mem/cache/blk.hh	/^    BlkWritable =       0x02,$/;"	e	enum:CacheBlkStatusBits
Block	src/arch/arm/table_walker.hh	/^            Block,$/;"	e	enum:ArmISA::TableWalker::LongDescriptor::EntryType
Block	src/arch/micro_asm.py	/^class Block(object):$/;"	c
BlockBloomFilter	src/mem/ruby/filters/BlockBloomFilter.cc	/^BlockBloomFilter::BlockBloomFilter(string str)$/;"	f	class:BlockBloomFilter
BlockBloomFilter	src/mem/ruby/filters/BlockBloomFilter.hh	/^class BlockBloomFilter : public AbstractBloomFilter$/;"	c
Blocked	src/cpu/inorder/cpu.hh	/^        Blocked,$/;"	e	enum:InOrderCPU::Status
Blocked	src/cpu/inorder/pipeline_stage.hh	/^        Blocked,$/;"	e	enum:PipelineStage::ThreadStatus
Blocked	src/cpu/o3/cpu.hh	/^        Blocked,$/;"	e	enum:FullO3CPU::Status
Blocked	src/cpu/o3/decode.hh	/^        Blocked,$/;"	e	enum:DefaultDecode::ThreadStatus
Blocked	src/cpu/o3/fetch.hh	/^        Blocked,$/;"	e	enum:DefaultFetch::ThreadStatus
Blocked	src/cpu/o3/iew.hh	/^        Blocked,$/;"	e	enum:DefaultIEW::StageStatus
Blocked	src/cpu/o3/rename.hh	/^        Blocked,$/;"	e	enum:DefaultRename::ThreadStatus
Blocked	src/cpu/ozone/back_end.hh	/^        Blocked$/;"	e	enum:BackEnd::Status
Blocked	src/cpu/ozone/inorder_back_end.hh	/^        Blocked$/;"	e	enum:InorderBackEnd::Status
Blocked	src/cpu/ozone/lw_back_end.hh	/^        Blocked,$/;"	e	enum:LWBackEnd::Status
BlockedCause	src/mem/cache/base.hh	/^    enum BlockedCause {$/;"	g	class:BaseCache
Blocked_NoMSHRs	src/mem/cache/base.hh	/^        Blocked_NoMSHRs = MSHRQueue_MSHRs,$/;"	e	enum:BaseCache::BlockedCause
Blocked_NoTargets	src/mem/cache/base.hh	/^        Blocked_NoTargets,$/;"	e	enum:BaseCache::BlockedCause
Blocked_NoWBBuffers	src/mem/cache/base.hh	/^        Blocked_NoWBBuffers = MSHRQueue_WriteBuffer,$/;"	e	enum:BaseCache::BlockedCause
BlockingInst	src/cpu/base_dyn_inst.hh	/^        BlockingInst,            \/\/\/ Is a blocking instruction$/;"	e	enum:BaseDynInst::Status
BlockingInst	src/cpu/inorder/inorder_dyn_inst.hh	/^        BlockingInst,            \/\/\/ Is a blocking instruction$/;"	e	enum:InOrderDynInst::Status
Blue_Select	src/dev/arm/hdlcd.hh	/^        Blue_Select      = 0x024C };$/;"	e	enum:HDLcd::RegisterOffset
Bool	src/python/m5/params.py	/^class Bool(ParamValue):$/;"	c
Bootcs	src/dev/arm/rv_ctrl.hh	/^        Bootcs     = 0x58,$/;"	e	enum:RealViewCtrl::__anon67
BoundRange	src/arch/x86/faults.hh	/^        BoundRange() :$/;"	f	class:X86ISA::BoundRange
BoundRange	src/arch/x86/faults.hh	/^    class BoundRange : public X86Fault$/;"	c	namespace:X86ISA
Branch	src/cpu/o3/fetch.hh	/^        Branch,$/;"	e	enum:DefaultFetch::FetchPriority
BranchCond	src/arch/power/insts/branch.hh	/^    BranchCond(const char *mnem, MachInst _machInst, OpClass __opClass)$/;"	f	class:PowerISA::BranchCond
BranchCond	src/arch/power/insts/branch.hh	/^class BranchCond : public PCDependentDisassembly$/;"	c	namespace:PowerISA
BranchEret64	src/arch/arm/insts/branch64.hh	/^    BranchEret64(const char *mnem, ExtMachInst _machInst, OpClass __opClass) :$/;"	f	class:ArmISA::BranchEret64
BranchEret64	src/arch/arm/insts/branch64.hh	/^class BranchEret64 : public ArmStaticInst$/;"	c	namespace:ArmISA
BranchImm	src/arch/arm/insts/branch.hh	/^    BranchImm(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::BranchImm
BranchImm	src/arch/arm/insts/branch.hh	/^class BranchImm : public PredOp$/;"	c	namespace:ArmISA
BranchImm64	src/arch/arm/insts/branch64.hh	/^    BranchImm64(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::BranchImm64
BranchImm64	src/arch/arm/insts/branch64.hh	/^class BranchImm64 : public ArmStaticInst$/;"	c	namespace:ArmISA
BranchImmCond	src/arch/arm/insts/branch.hh	/^    BranchImmCond(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::BranchImmCond
BranchImmCond	src/arch/arm/insts/branch.hh	/^class BranchImmCond : public BranchImm$/;"	c	namespace:ArmISA
BranchImmCond64	src/arch/arm/insts/branch64.hh	/^    BranchImmCond64(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::BranchImmCond64
BranchImmCond64	src/arch/arm/insts/branch64.hh	/^class BranchImmCond64 : public BranchImm64$/;"	c	namespace:ArmISA
BranchImmImmReg64	src/arch/arm/insts/branch64.hh	/^    BranchImmImmReg64(const char *mnem, ExtMachInst _machInst,$/;"	f	class:ArmISA::BranchImmImmReg64
BranchImmImmReg64	src/arch/arm/insts/branch64.hh	/^class BranchImmImmReg64 : public ArmStaticInst$/;"	c	namespace:ArmISA
BranchImmReg	src/arch/arm/insts/branch.hh	/^    BranchImmReg(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::BranchImmReg
BranchImmReg	src/arch/arm/insts/branch.hh	/^class BranchImmReg : public PredOp$/;"	c	namespace:ArmISA
BranchImmReg64	src/arch/arm/insts/branch64.hh	/^    BranchImmReg64(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::BranchImmReg64
BranchImmReg64	src/arch/arm/insts/branch64.hh	/^class BranchImmReg64 : public ArmStaticInst$/;"	c	namespace:ArmISA
BranchNonPCRel	src/arch/power/insts/branch.hh	/^    BranchNonPCRel(const char *mnem, MachInst _machInst, OpClass __opClass)$/;"	f	class:PowerISA::BranchNonPCRel
BranchNonPCRel	src/arch/power/insts/branch.hh	/^class BranchNonPCRel : public PCDependentDisassembly$/;"	c	namespace:PowerISA
BranchNonPCRelCond	src/arch/power/insts/branch.hh	/^    BranchNonPCRelCond(const char *mnem, MachInst _machInst, OpClass __opClass)$/;"	f	class:PowerISA::BranchNonPCRelCond
BranchNonPCRelCond	src/arch/power/insts/branch.hh	/^class BranchNonPCRelCond : public BranchCond$/;"	c	namespace:PowerISA
BranchPCRel	src/arch/power/insts/branch.hh	/^    BranchPCRel(const char *mnem, MachInst _machInst, OpClass __opClass)$/;"	f	class:PowerISA::BranchPCRel
BranchPCRel	src/arch/power/insts/branch.hh	/^class BranchPCRel : public PCDependentDisassembly$/;"	c	namespace:PowerISA
BranchPCRelCond	src/arch/power/insts/branch.hh	/^    BranchPCRelCond(const char *mnem, MachInst _machInst, OpClass __opClass)$/;"	f	class:PowerISA::BranchPCRelCond
BranchPCRelCond	src/arch/power/insts/branch.hh	/^class BranchPCRelCond : public BranchCond$/;"	c	namespace:PowerISA
BranchPred	src/cpu/ozone/front_end.hh	/^    typedef typename Impl::BranchPred BranchPred;$/;"	t	class:FrontEnd
BranchPred	src/cpu/ozone/ozone_impl.hh	/^    typedef BPredUnit<OzoneImpl> BranchPred;$/;"	t	struct:OzoneImpl
BranchPred	src/cpu/ozone/simple_impl.hh	/^    typedef BPredUnit<SimpleImpl> BranchPred;$/;"	t	struct:SimpleImpl
BranchPredAddrShiftAmt	src/arch/alpha/isa_traits.hh	/^    BranchPredAddrShiftAmt = 2, \/\/ instructions are 4-byte aligned$/;"	e	enum:AlphaISA::__anon1
BranchPredAddrShiftAmt	src/arch/arm/isa_traits.hh	/^    const int BranchPredAddrShiftAmt = 2; \/\/ instructions are 4-byte aligned$/;"	m	namespace:ArmISA
BranchPredAddrShiftAmt	src/arch/mips/isa_traits.hh	/^const int BranchPredAddrShiftAmt = 2; \/\/ instructions are 4-byte aligned$/;"	m	namespace:MipsISA
BranchPredAddrShiftAmt	src/arch/sparc/isa_traits.hh	/^const int BranchPredAddrShiftAmt = 2;$/;"	m	namespace:SparcISA
BranchPredAddrShiftAmt	src/arch/x86/isa_traits.hh	/^    const int BranchPredAddrShiftAmt = 0;$/;"	m	namespace:X86ISA
BranchPredictor	src/cpu/inorder/InOrderCPU.py	/^from BranchPredictor import BranchPredictor$/;"	i
BranchPredictor	src/cpu/inorder/resources/branch_predictor.cc	/^BranchPredictor::BranchPredictor(std::string res_name, int res_id,$/;"	f	class:BranchPredictor
BranchPredictor	src/cpu/inorder/resources/branch_predictor.hh	/^class BranchPredictor : public Resource {$/;"	c
BranchPredictor	src/cpu/o3/O3CPU.py	/^from BranchPredictor import BranchPredictor$/;"	i
BranchPredictor	src/cpu/pred/BranchPredictor.py	/^class BranchPredictor(SimObject):$/;"	c
BranchPredictor	src/cpu/simple/BaseSimpleCPU.py	/^from BranchPredictor import BranchPredictor$/;"	i
BranchReg	src/arch/arm/insts/branch.hh	/^    BranchReg(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::BranchReg
BranchReg	src/arch/arm/insts/branch.hh	/^class BranchReg : public PredOp$/;"	c	namespace:ArmISA
BranchReg64	src/arch/arm/insts/branch64.hh	/^    BranchReg64(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::BranchReg64
BranchReg64	src/arch/arm/insts/branch64.hh	/^class BranchReg64 : public ArmStaticInst$/;"	c	namespace:ArmISA
BranchRegCond	src/arch/arm/insts/branch.hh	/^    BranchRegCond(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::BranchRegCond
BranchRegCond	src/arch/arm/insts/branch.hh	/^class BranchRegCond : public BranchReg$/;"	c	namespace:ArmISA
BranchRegCond	src/arch/power/insts/branch.hh	/^    BranchRegCond(const char *mnem, MachInst _machInst, OpClass __opClass)$/;"	f	class:PowerISA::BranchRegCond
BranchRegCond	src/arch/power/insts/branch.hh	/^class BranchRegCond : public BranchCond$/;"	c	namespace:PowerISA
BranchRegReg	src/arch/arm/insts/branch.hh	/^    BranchRegReg(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::BranchRegReg
BranchRegReg	src/arch/arm/insts/branch.hh	/^class BranchRegReg : public PredOp$/;"	c	namespace:ArmISA
BranchRet64	src/arch/arm/insts/branch64.hh	/^    BranchRet64(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::BranchRet64
BranchRet64	src/arch/arm/insts/branch64.hh	/^class BranchRet64 : public BranchReg64$/;"	c	namespace:ArmISA
BreakKey	src/dev/ps2.cc	/^const uint8_t BreakKey = 0xf0;$/;"	m	namespace:Ps2	file:
BreakPCEvent	src/cpu/pc_event.cc	/^BreakPCEvent::BreakPCEvent(PCEventQueue *q, const std::string &desc, Addr addr,$/;"	f	class:BreakPCEvent
BreakPCEvent	src/cpu/pc_event.hh	/^class BreakPCEvent : public PCEvent$/;"	c
Breakpoint	src/arch/x86/faults.hh	/^        Breakpoint() :$/;"	f	class:X86ISA::Breakpoint
Breakpoint	src/arch/x86/faults.hh	/^    class Breakpoint : public X86Trap$/;"	c	namespace:X86ISA
BreakpointFault	src/arch/mips/faults.hh	/^class BreakpointFault : public MipsFault<BreakpointFault> {};$/;"	c	namespace:MipsISA
Bridge	src/mem/Bridge.py	/^class Bridge(MemObject):$/;"	c
Bridge	src/mem/bridge.cc	/^Bridge::Bridge(Params *p)$/;"	f	class:Bridge
Bridge	src/mem/bridge.hh	/^class Bridge : public MemObject$/;"	c
BridgeMasterPort	src/mem/bridge.cc	/^Bridge::BridgeMasterPort::BridgeMasterPort(const std::string& _name,$/;"	f	class:Bridge::BridgeMasterPort
BridgeMasterPort	src/mem/bridge.hh	/^    class BridgeMasterPort : public MasterPort$/;"	c	class:Bridge
BridgeSlavePort	src/mem/bridge.cc	/^Bridge::BridgeSlavePort::BridgeSlavePort(const std::string& _name,$/;"	f	class:Bridge::BridgeSlavePort
BridgeSlavePort	src/mem/bridge.hh	/^    class BridgeSlavePort : public SlavePort$/;"	c	class:Bridge
Buffer	src/mem/ruby/network/orion/Buffer/Buffer.cc	/^Buffer::Buffer($/;"	f	class:Buffer
Buffer	src/mem/ruby/network/orion/Buffer/Buffer.hh	/^class Buffer$/;"	c
BufferArg	src/sim/syscall_emul.hh	/^    BufferArg(Addr _addr, int _size) : BaseBufferArg(_addr, _size) { }$/;"	f	class:BufferArg
BufferArg	src/sim/syscall_emul.hh	/^class BufferArg : public BaseBufferArg$/;"	c
BufferModel	src/mem/ruby/network/orion/Buffer/Buffer.hh	/^    enum BufferModel$/;"	g	class:Buffer
BufferScheme	src/mem/ruby/network/orion/Wire.hh	/^    enum BufferScheme$/;"	g	class:Wire
BulkBloomFilter	src/mem/ruby/filters/BulkBloomFilter.cc	/^BulkBloomFilter::BulkBloomFilter(string str)$/;"	f	class:BulkBloomFilter
BulkBloomFilter	src/mem/ruby/filters/BulkBloomFilter.hh	/^class BulkBloomFilter : public AbstractBloomFilter$/;"	c
BurstHelper	src/mem/dram_ctrl.hh	/^        BurstHelper(unsigned int _burstCount)$/;"	f	class:DRAMCtrl::BurstHelper
BurstHelper	src/mem/dram_ctrl.hh	/^    class BurstHelper {$/;"	c	class:DRAMCtrl
Bus	src/arch/x86/bios/intelmp.cc	/^X86ISA::IntelMP::Bus::Bus(Params * p) : BaseConfigEntry(p, 1),$/;"	f	class:X86ISA::IntelMP::Bus
Bus	src/arch/x86/bios/intelmp.hh	/^class Bus : public BaseConfigEntry$/;"	c	namespace:X86ISA::IntelMP
BusHierarchy	src/arch/x86/bios/intelmp.cc	/^X86ISA::IntelMP::BusHierarchy::BusHierarchy(Params * p) :$/;"	f	class:X86ISA::IntelMP::BusHierarchy
BusHierarchy	src/arch/x86/bios/intelmp.hh	/^class BusHierarchy : public ExtConfigEntry$/;"	c	namespace:X86ISA::IntelMP
Bus_Options	src/dev/arm/hdlcd.hh	/^        Bus_Options      = 0x0110,$/;"	e	enum:HDLcd::RegisterOffset
BusyBit	src/arch/x86/regs/misc.hh	/^        BusyBit = 1 << 15,$/;"	e	enum:X86ISA::X87StatusBit
ByteBytes	src/arch/alpha/isa_traits.hh	/^    ByteBytes = 1$/;"	e	enum:AlphaISA::__anon1
ByteBytes	src/arch/arm/isa_traits.hh	/^    const int ByteBytes = 1;$/;"	m	namespace:ArmISA
ByteBytes	src/arch/mips/isa_traits.hh	/^const int ByteBytes = 1;$/;"	m	namespace:MipsISA
ByteImm	src/arch/x86/decoder_tables.cc	/^        ByteImm,$/;"	e	enum:X86ISA::SizeType	file:
ByteOrder	src/sim/byteswap.hh	/^enum ByteOrder {BigEndianByteOrder, LittleEndianByteOrder};$/;"	g
BytesInPageMask	src/arch/sparc/isa_traits.hh	/^const Addr BytesInPageMask = ULL(0x1FFF);$/;"	m	namespace:SparcISA
C0	src/arch/mips/pagetable.hh	/^    uint8_t C0; \/\/ Cache Coherency Bits - Even$/;"	m	struct:MipsISA::PTE
C0	src/arch/power/pagetable.hh	/^    uint8_t C0; \/\/ Cache Coherency Bits - Even$/;"	m	struct:PowerISA::PTE
C1	src/arch/mips/pagetable.hh	/^    uint8_t C1; \/\/ Cache Coherency Bits (3 bits)$/;"	m	struct:MipsISA::PTE
C1	src/arch/power/pagetable.hh	/^    uint8_t C1; \/\/ Cache Coherency Bits (3 bits)$/;"	m	struct:PowerISA::PTE
CACHE_BLOCK_ZERO	src/mem/request.hh	/^    static const FlagsType CACHE_BLOCK_ZERO            = 0x00010000;$/;"	m	class:Request
CACHE_OUTDRV	src/mem/ruby/network/orion/Buffer/OutdrvUnit.hh	/^      CACHE_OUTDRV,$/;"	e	enum:OutdrvUnit::OutdrvModel
CASE	src/mem/abstract_mem.cc	/^#define CASE(/;"	d	file:
CC0Bit	src/arch/x86/regs/misc.hh	/^        CC0Bit = 1 << 8,$/;"	e	enum:X86ISA::X87StatusBit
CC1Bit	src/arch/x86/regs/misc.hh	/^        CC1Bit = 1 << 9,$/;"	e	enum:X86ISA::X87StatusBit
CC2Bit	src/arch/x86/regs/misc.hh	/^        CC2Bit = 1 << 10,$/;"	e	enum:X86ISA::X87StatusBit
CC3Bit	src/arch/x86/regs/misc.hh	/^        CC3Bit = 1 << 14,$/;"	e	enum:X86ISA::X87StatusBit
CCREG_CFOF	src/arch/x86/regs/ccr.hh	/^        CCREG_CFOF,$/;"	e	enum:X86ISA::CCRegIndex
CCREG_DF	src/arch/x86/regs/ccr.hh	/^        CCREG_DF,$/;"	e	enum:X86ISA::CCRegIndex
CCREG_ECF	src/arch/x86/regs/ccr.hh	/^        CCREG_ECF,$/;"	e	enum:X86ISA::CCRegIndex
CCREG_EZF	src/arch/x86/regs/ccr.hh	/^        CCREG_EZF,$/;"	e	enum:X86ISA::CCRegIndex
CCREG_ZAPS	src/arch/x86/regs/ccr.hh	/^        CCREG_ZAPS,$/;"	e	enum:X86ISA::CCRegIndex
CCReg	src/arch/alpha/registers.hh	/^typedef uint8_t CCReg;$/;"	t	namespace:AlphaISA
CCReg	src/arch/arm/registers.hh	/^typedef uint8_t CCReg;$/;"	t	namespace:ArmISA
CCReg	src/arch/mips/registers.hh	/^typedef uint8_t CCReg;$/;"	t	namespace:MipsISA
CCReg	src/arch/null/registers.hh	/^typedef uint8_t CCReg;$/;"	t	namespace:NullISA
CCReg	src/arch/power/registers.hh	/^typedef uint8_t CCReg;$/;"	t	namespace:PowerISA
CCReg	src/arch/sparc/registers.hh	/^typedef uint8_t CCReg;$/;"	t	namespace:SparcISA
CCReg	src/arch/x86/registers.hh	/^typedef uint64_t CCReg;$/;"	t	namespace:X86ISA
CCReg	src/cpu/inorder/cpu.hh	/^    typedef TheISA::CCReg CCReg;$/;"	t	class:InOrderCPU
CCReg	src/cpu/inorder/inorder_dyn_inst.hh	/^    typedef TheISA::CCReg CCReg;$/;"	t	class:InOrderDynInst
CCReg	src/cpu/o3/dyn_inst.hh	/^    typedef TheISA::CCReg   CCReg;$/;"	t	class:BaseO3DynInst
CCReg	src/cpu/o3/regfile.hh	/^    typedef TheISA::CCReg CCReg;$/;"	t	class:PhysRegFile
CCReg	src/cpu/simple/base.hh	/^    typedef TheISA::CCReg CCReg;$/;"	t	class:BaseSimpleCPU
CCReg	src/cpu/simple_thread.hh	/^    typedef TheISA::CCReg CCReg;$/;"	t	class:SimpleThread
CCReg	src/cpu/thread_context.hh	/^    typedef TheISA::CCReg CCReg;$/;"	t	class:ThreadContext
CCRegClass	src/cpu/reg_class.hh	/^    CCRegClass,         \/\/\/< Condition-code register$/;"	e	enum:RegClass
CCRegIndex	src/arch/x86/regs/ccr.hh	/^    enum CCRegIndex$/;"	g	namespace:X86ISA
CCRegOperand	src/arch/isa_parser.py	/^class CCRegOperand(Operand):$/;"	c
CCSR	src/dev/ns_gige_reg.h	/^    CCSR =              0xcc,$/;"	e	enum:DeviceRegisterAddress
CCSR_CLKRUN_EN	src/dev/ns_gige_reg.h	/^     CCSR_CLKRUN_EN =   0x00000001$/;"	e	enum:ClockrunControlStatusRegister
CC_Reg_Base	src/arch/alpha/registers.hh	/^    CC_Reg_Base = FP_Reg_Base + NumFloatRegs,$/;"	e	enum:AlphaISA::DependenceTags
CC_Reg_Base	src/arch/arm/registers.hh	/^const int CC_Reg_Base = FP_Reg_Base + NumFloatRegs;$/;"	m	namespace:ArmISA
CC_Reg_Base	src/arch/mips/registers.hh	/^const int CC_Reg_Base = FP_Reg_Base + NumFloatRegs;$/;"	m	namespace:MipsISA
CC_Reg_Base	src/arch/power/registers.hh	/^const int CC_Reg_Base = FP_Reg_Base + NumFloatRegs;$/;"	m	namespace:PowerISA
CC_Reg_Base	src/arch/sparc/registers.hh	/^    CC_Reg_Base = FP_Reg_Base + NumFloatRegs,$/;"	e	enum:SparcISA::DependenceTags
CC_Reg_Base	src/arch/x86/registers.hh	/^    CC_Reg_Base = FP_Reg_Base + NumFloatRegs,$/;"	e	enum:X86ISA::DependenceTags
CF	src/arch/x86/insts/microop.hh	/^            CF,$/;"	e	enum:X86ISA::ConditionTests::CondTest
CFBit	src/arch/x86/regs/misc.hh	/^        CFBit = 1 << 0,$/;"	e	enum:X86ISA::CondFlagBit
CFGR	src/dev/ns_gige_reg.h	/^    CFGR =              0x04,$/;"	e	enum:DeviceRegisterAddress
CFGR_AUTO_1000	src/dev/ns_gige_reg.h	/^     CFGR_AUTO_1000 =   0x00200000,$/;"	e	enum:ConfigurationRegisters
CFGR_BEM	src/dev/ns_gige_reg.h	/^     CFGR_BEM =         0x00000001$/;"	e	enum:ConfigurationRegisters
CFGR_BROM_DIS	src/dev/ns_gige_reg.h	/^     CFGR_BROM_DIS =    0x00000004,$/;"	e	enum:ConfigurationRegisters
CFGR_DATA64_EN	src/dev/ns_gige_reg.h	/^     CFGR_DATA64_EN =   0x00001000,$/;"	e	enum:ConfigurationRegisters
CFGR_DUPSTS	src/dev/ns_gige_reg.h	/^     CFGR_DUPSTS =      0x10000000,$/;"	e	enum:ConfigurationRegisters
CFGR_EXD	src/dev/ns_gige_reg.h	/^     CFGR_EXD =         0x00000010,$/;"	e	enum:ConfigurationRegisters
CFGR_EXTSTS_EN	src/dev/ns_gige_reg.h	/^     CFGR_EXTSTS_EN =   0x00000100,$/;"	e	enum:ConfigurationRegisters
CFGR_EXT_125	src/dev/ns_gige_reg.h	/^     CFGR_EXT_125 =     0x00000002,$/;"	e	enum:ConfigurationRegisters
CFGR_LNKSTS	src/dev/ns_gige_reg.h	/^     CFGR_LNKSTS =      0x80000000,$/;"	e	enum:ConfigurationRegisters
CFGR_M64ADDR	src/dev/ns_gige_reg.h	/^     CFGR_M64ADDR =     0x00000800,$/;"	e	enum:ConfigurationRegisters
CFGR_MODE_1000	src/dev/ns_gige_reg.h	/^     CFGR_MODE_1000 =   0x00400000,$/;"	e	enum:ConfigurationRegisters
CFGR_MRM_DIS	src/dev/ns_gige_reg.h	/^     CFGR_MRM_DIS =     0x00010000,$/;"	e	enum:ConfigurationRegisters
CFGR_MWI_DIS	src/dev/ns_gige_reg.h	/^     CFGR_MWI_DIS =     0x00008000,$/;"	e	enum:ConfigurationRegisters
CFGR_PCI64_DET	src/dev/ns_gige_reg.h	/^     CFGR_PCI64_DET =   0x00002000,$/;"	e	enum:ConfigurationRegisters
CFGR_PESEL	src/dev/ns_gige_reg.h	/^     CFGR_PESEL =       0x00000008,$/;"	e	enum:ConfigurationRegisters
CFGR_PHY_DIS	src/dev/ns_gige_reg.h	/^     CFGR_PHY_DIS =     0x00000200,$/;"	e	enum:ConfigurationRegisters
CFGR_PHY_RST	src/dev/ns_gige_reg.h	/^     CFGR_PHY_RST =     0x00000400,$/;"	e	enum:ConfigurationRegisters
CFGR_PINT_CTL	src/dev/ns_gige_reg.h	/^     CFGR_PINT_CTL =    0x001c0000,$/;"	e	enum:ConfigurationRegisters
CFGR_PINT_DUPSTS	src/dev/ns_gige_reg.h	/^     CFGR_PINT_DUPSTS = 0x00100000,$/;"	e	enum:ConfigurationRegisters
CFGR_PINT_LNKSTS	src/dev/ns_gige_reg.h	/^     CFGR_PINT_LNKSTS = 0x00080000,$/;"	e	enum:ConfigurationRegisters
CFGR_PINT_SPDSTS	src/dev/ns_gige_reg.h	/^     CFGR_PINT_SPDSTS = 0x00040000,$/;"	e	enum:ConfigurationRegisters
CFGR_POW	src/dev/ns_gige_reg.h	/^     CFGR_POW =         0x00000020,$/;"	e	enum:ConfigurationRegisters
CFGR_REQALG	src/dev/ns_gige_reg.h	/^     CFGR_REQALG =      0x00000080,$/;"	e	enum:ConfigurationRegisters
CFGR_RESERVED	src/dev/ns_gige_reg.h	/^     CFGR_RESERVED =    0x0e000000,$/;"	e	enum:ConfigurationRegisters
CFGR_SB	src/dev/ns_gige_reg.h	/^     CFGR_SB =          0x00000040,$/;"	e	enum:ConfigurationRegisters
CFGR_SPDSTS	src/dev/ns_gige_reg.h	/^     CFGR_SPDSTS =      0x60000000,$/;"	e	enum:ConfigurationRegisters
CFGR_SPDSTS0	src/dev/ns_gige_reg.h	/^     CFGR_SPDSTS0 =     0x20000000,$/;"	e	enum:ConfigurationRegisters
CFGR_SPDSTS1	src/dev/ns_gige_reg.h	/^     CFGR_SPDSTS1 =     0x40000000,$/;"	e	enum:ConfigurationRegisters
CFGR_T64ADDR	src/dev/ns_gige_reg.h	/^     CFGR_T64ADDR =     0x00004000,$/;"	e	enum:ConfigurationRegisters
CFGR_TBI_EN	src/dev/ns_gige_reg.h	/^     CFGR_TBI_EN =      0x01000000,$/;"	e	enum:ConfigurationRegisters
CFGR_TMRTEST	src/dev/ns_gige_reg.h	/^     CFGR_TMRTEST =     0x00020000,$/;"	e	enum:ConfigurationRegisters
CHANCMD	src/dev/copy_engine_defs.hh	/^    struct CHANCMD : public Reg<uint8_t> { \/\/ channelX + 0x14$/;"	s	struct:CopyEngineReg::ChanRegs
CHANCTRL	src/dev/copy_engine_defs.hh	/^    struct CHANCTRL : public Reg<uint16_t> { \/\/ channelX + 0x00$/;"	s	struct:CopyEngineReg::ChanRegs
CHANERR	src/dev/copy_engine_defs.hh	/^    struct CHANERR : public Reg<uint32_t> { \/\/ channel X + 0x28$/;"	s	struct:CopyEngineReg::ChanRegs
CHANSTS	src/dev/copy_engine_defs.hh	/^    struct CHANSTS : public Reg<uint64_t> { \/\/ channelX + 0x04$/;"	s	struct:CopyEngineReg::ChanRegs
CHAN_CHAINADDR	src/dev/copy_engine_defs.hh	/^const uint32_t CHAN_CHAINADDR       = 0x0C;$/;"	m	namespace:CopyEngineReg
CHAN_CHAINADDR_HIGH	src/dev/copy_engine_defs.hh	/^const uint32_t CHAN_CHAINADDR_HIGH  = 0x10;$/;"	m	namespace:CopyEngineReg
CHAN_CHAINADDR_LOW	src/dev/copy_engine_defs.hh	/^const uint32_t CHAN_CHAINADDR_LOW   = 0x0C;$/;"	m	namespace:CopyEngineReg
CHAN_CMPLNADDR	src/dev/copy_engine_defs.hh	/^const uint32_t CHAN_CMPLNADDR       = 0x18;$/;"	m	namespace:CopyEngineReg
CHAN_CMPLNADDR_HIGH	src/dev/copy_engine_defs.hh	/^const uint32_t CHAN_CMPLNADDR_HIGH  = 0x1C;$/;"	m	namespace:CopyEngineReg
CHAN_CMPLNADDR_LOW	src/dev/copy_engine_defs.hh	/^const uint32_t CHAN_CMPLNADDR_LOW   = 0x18;$/;"	m	namespace:CopyEngineReg
CHAN_COMMAND	src/dev/copy_engine_defs.hh	/^const uint32_t CHAN_COMMAND         = 0x14;$/;"	m	namespace:CopyEngineReg
CHAN_CONTROL	src/dev/copy_engine_defs.hh	/^const uint32_t CHAN_CONTROL         = 0x00;$/;"	m	namespace:CopyEngineReg
CHAN_ERROR	src/dev/copy_engine_defs.hh	/^const uint32_t CHAN_ERROR           = 0x28;$/;"	m	namespace:CopyEngineReg
CHAN_STATUS	src/dev/copy_engine_defs.hh	/^const uint32_t CHAN_STATUS          = 0x04;$/;"	m	namespace:CopyEngineReg
CHECK_SIZE	src/cpu/testers/rubytest/Check.hh	/^const int CHECK_SIZE = (1 << CHECK_SIZE_BITS);$/;"	v
CHECK_SIZE_BITS	src/cpu/testers/rubytest/Check.hh	/^const int CHECK_SIZE_BITS = 2;$/;"	v
CLEAR_LL	src/mem/request.hh	/^    static const FlagsType CLEAR_LL                    = 0x00004000;$/;"	m	class:Request
CMDSTSFlatsForDescriptors	src/dev/ns_gige_reg.h	/^enum CMDSTSFlatsForDescriptors {$/;"	g
CMDSTS_DEST_MASK	src/dev/ns_gige_reg.h	/^     CMDSTS_DEST_MASK = 0x01800000,$/;"	e	enum:CMDSTSFlatsForDescriptors
CMDSTS_DEST_MULTI	src/dev/ns_gige_reg.h	/^     CMDSTS_DEST_MULTI = 0x01000000$/;"	e	enum:CMDSTSFlatsForDescriptors
CMDSTS_DEST_SELF	src/dev/ns_gige_reg.h	/^     CMDSTS_DEST_SELF = 0x00800000,$/;"	e	enum:CMDSTSFlatsForDescriptors
CMDSTS_ERR	src/dev/ns_gige_reg.h	/^     CMDSTS_ERR =       0x10000000,$/;"	e	enum:CMDSTSFlatsForDescriptors
CMDSTS_INTR	src/dev/ns_gige_reg.h	/^     CMDSTS_INTR =      0x20000000,$/;"	e	enum:CMDSTSFlatsForDescriptors
CMDSTS_LEN_MASK	src/dev/ns_gige_reg.h	/^     CMDSTS_LEN_MASK =  0x0000ffff,$/;"	e	enum:CMDSTSFlatsForDescriptors
CMDSTS_MORE	src/dev/ns_gige_reg.h	/^     CMDSTS_MORE =      0x40000000,$/;"	e	enum:CMDSTSFlatsForDescriptors
CMDSTS_OK	src/dev/ns_gige_reg.h	/^     CMDSTS_OK =        0x08000000,$/;"	e	enum:CMDSTSFlatsForDescriptors
CMDSTS_OWN	src/dev/ns_gige_reg.h	/^     CMDSTS_OWN =       0x80000000,$/;"	e	enum:CMDSTSFlatsForDescriptors
CMP_EQ	src/arch/mips/dsp.hh	/^    CMP_EQ,        \/\/ equal$/;"	e	enum:MipsISA::__anon15
CMP_LE	src/arch/mips/dsp.hh	/^    CMP_LE         \/\/ less than or equal$/;"	e	enum:MipsISA::__anon15
CMP_LT	src/arch/mips/dsp.hh	/^    CMP_LT,        \/\/ less than$/;"	e	enum:MipsISA::__anon15
COMMAND_OFFSET	src/dev/ide_disk.hh	/^#define COMMAND_OFFSET /;"	d
COND_AL	src/arch/arm/miscregs.hh	/^        COND_AL, \/\/ 14$/;"	e	enum:ArmISA::ConditionCode
COND_CC	src/arch/arm/miscregs.hh	/^        COND_CC, \/\/  3$/;"	e	enum:ArmISA::ConditionCode
COND_CS	src/arch/arm/miscregs.hh	/^        COND_CS, \/\/  2$/;"	e	enum:ArmISA::ConditionCode
COND_EQ	src/arch/arm/miscregs.hh	/^        COND_EQ  =   0,$/;"	e	enum:ArmISA::ConditionCode
COND_GE	src/arch/arm/miscregs.hh	/^        COND_GE, \/\/ 10$/;"	e	enum:ArmISA::ConditionCode
COND_GT	src/arch/arm/miscregs.hh	/^        COND_GT, \/\/ 12$/;"	e	enum:ArmISA::ConditionCode
COND_HI	src/arch/arm/miscregs.hh	/^        COND_HI, \/\/  8$/;"	e	enum:ArmISA::ConditionCode
COND_LE	src/arch/arm/miscregs.hh	/^        COND_LE, \/\/ 13$/;"	e	enum:ArmISA::ConditionCode
COND_LS	src/arch/arm/miscregs.hh	/^        COND_LS, \/\/  9$/;"	e	enum:ArmISA::ConditionCode
COND_LT	src/arch/arm/miscregs.hh	/^        COND_LT, \/\/ 11$/;"	e	enum:ArmISA::ConditionCode
COND_MI	src/arch/arm/miscregs.hh	/^        COND_MI, \/\/  4$/;"	e	enum:ArmISA::ConditionCode
COND_NE	src/arch/arm/miscregs.hh	/^        COND_NE, \/\/  1$/;"	e	enum:ArmISA::ConditionCode
COND_PL	src/arch/arm/miscregs.hh	/^        COND_PL, \/\/  5$/;"	e	enum:ArmISA::ConditionCode
COND_UC	src/arch/arm/miscregs.hh	/^        COND_UC  \/\/ 15$/;"	e	enum:ArmISA::ConditionCode
COND_VC	src/arch/arm/miscregs.hh	/^        COND_VC, \/\/  7$/;"	e	enum:ArmISA::ConditionCode
COND_VS	src/arch/arm/miscregs.hh	/^        COND_VS, \/\/  6$/;"	e	enum:ArmISA::ConditionCode
CONFIGFILE_H	src/mem/ruby/network/orion/ConfigFile.hh	/^#define CONFIGFILE_H$/;"	d
CONSOLE_START_ADDRESS	src/dev/mips/access.h	/^#define CONSOLE_START_ADDRESS /;"	d
CONTROL_IEN_BIT	src/dev/ide_disk.hh	/^#define CONTROL_IEN_BIT /;"	d
CONTROL_OFFSET	src/dev/ide_disk.hh	/^#define CONTROL_OFFSET /;"	d
CONTROL_RST_BIT	src/dev/ide_disk.hh	/^#define CONTROL_RST_BIT /;"	d
COPY_FLAGS	src/mem/packet.hh	/^    static const FlagsType COPY_FLAGS             = 0x0000000F;$/;"	m	class:Packet
COUNT_OF	src/cpu/kvm/arm_cpu.cc	/^#define COUNT_OF(/;"	d	file:
CP0	src/arch/mips/isa.hh	/^        typedef ISA CP0;$/;"	t	class:MipsISA::ISA
CP0Event	src/arch/mips/isa.cc	/^ISA::CP0Event::CP0Event(CP0 *_cp0, BaseCPU *_cpu, CP0EventType e_type)$/;"	f	class:MipsISA::ISA::CP0Event
CP0Event	src/arch/mips/isa.hh	/^        class CP0Event : public Event$/;"	c	class:MipsISA::ISA
CP0EventType	src/arch/mips/isa.hh	/^        enum CP0EventType {$/;"	g	class:MipsISA::ISA
CP0_Config	src/arch/mips/MipsCPU.py	/^        CP0_Config = Param.Unsigned(0,"CP0 Config Register")$/;"	v	class:BaseMipsCPU
CP0_Config	src/arch/mips/types.hh	/^      unsigned CP0_Config;$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config1	src/arch/mips/MipsCPU.py	/^        CP0_Config1 = Param.Unsigned(0,"CP0 Config1 Register")$/;"	v	class:BaseMipsCPU
CP0_Config1	src/arch/mips/types.hh	/^      unsigned CP0_Config1;$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config1_C2	src/arch/mips/MipsCPU.py	/^        CP0_Config1_C2 = Param.Bool(False,"No Description")$/;"	v	class:BaseMipsCPU
CP0_Config1_C2	src/arch/mips/types.hh	/^      bool CP0_Config1_C2; \/\/ Page 112$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config1_CA	src/arch/mips/MipsCPU.py	/^        CP0_Config1_CA = Param.Bool(False,"No Description")$/;"	v	class:BaseMipsCPU
CP0_Config1_CA	src/arch/mips/types.hh	/^      bool CP0_Config1_CA;\/\/ Page 113$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config1_DA	src/arch/mips/MipsCPU.py	/^        CP0_Config1_DA = Param.Unsigned(0,"No Description")$/;"	v	class:BaseMipsCPU
CP0_Config1_DA	src/arch/mips/types.hh	/^      unsigned CP0_Config1_DA; \/\/ Page 112$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config1_DL	src/arch/mips/MipsCPU.py	/^        CP0_Config1_DL = Param.Unsigned(0,"No Description")$/;"	v	class:BaseMipsCPU
CP0_Config1_DL	src/arch/mips/types.hh	/^      unsigned CP0_Config1_DL; \/\/ Page 112$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config1_DS	src/arch/mips/MipsCPU.py	/^        CP0_Config1_DS = Param.Unsigned(0,"No Description")$/;"	v	class:BaseMipsCPU
CP0_Config1_DS	src/arch/mips/types.hh	/^      unsigned CP0_Config1_DS; \/\/ Page 111$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config1_EP	src/arch/mips/MipsCPU.py	/^        CP0_Config1_EP = Param.Bool(False,"No Description")$/;"	v	class:BaseMipsCPU
CP0_Config1_EP	src/arch/mips/types.hh	/^      bool CP0_Config1_EP;\/\/ Page 113$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config1_FP	src/arch/mips/MipsCPU.py	/^        CP0_Config1_FP = Param.Bool(False,"FPU Implemented?")$/;"	v	class:BaseMipsCPU
CP0_Config1_FP	src/arch/mips/types.hh	/^      bool CP0_Config1_FP;\/\/ Page 113$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config1_IA	src/arch/mips/MipsCPU.py	/^        CP0_Config1_IA = Param.Unsigned(0,"No Description")$/;"	v	class:BaseMipsCPU
CP0_Config1_IA	src/arch/mips/types.hh	/^      unsigned CP0_Config1_IA; \/\/ Page 111$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config1_IL	src/arch/mips/MipsCPU.py	/^        CP0_Config1_IL = Param.Unsigned(0,"No Description")$/;"	v	class:BaseMipsCPU
CP0_Config1_IL	src/arch/mips/types.hh	/^      unsigned CP0_Config1_IL; \/\/ Page 111$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config1_IS	src/arch/mips/MipsCPU.py	/^        CP0_Config1_IS = Param.Unsigned(0,"No Description")$/;"	v	class:BaseMipsCPU
CP0_Config1_IS	src/arch/mips/types.hh	/^      unsigned CP0_Config1_IS; \/\/ Page 110$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config1_M	src/arch/mips/MipsCPU.py	/^        CP0_Config1_M = Param.Unsigned(0,"Config2 Implemented?")$/;"	v	class:BaseMipsCPU
CP0_Config1_M	src/arch/mips/types.hh	/^      unsigned CP0_Config1_M; \/\/ Page 110$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config1_MD	src/arch/mips/MipsCPU.py	/^        CP0_Config1_MD = Param.Bool(False,"No Description")$/;"	v	class:BaseMipsCPU
CP0_Config1_MD	src/arch/mips/types.hh	/^      bool CP0_Config1_MD;\/\/ Page 112 - Technically not used in MIPS32$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config1_MMU	src/arch/mips/MipsCPU.py	/^        CP0_Config1_MMU = Param.Unsigned(0,"MMU Type")$/;"	v	class:BaseMipsCPU
CP0_Config1_MMU	src/arch/mips/types.hh	/^      unsigned CP0_Config1_MMU; \/\/ Page 110$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config1_PC	src/arch/mips/MipsCPU.py	/^        CP0_Config1_PC = Param.Bool(False,"No Description")$/;"	v	class:BaseMipsCPU
CP0_Config1_PC	src/arch/mips/types.hh	/^      bool CP0_Config1_PC;\/\/ Page 112$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config1_WR	src/arch/mips/MipsCPU.py	/^        CP0_Config1_WR = Param.Bool(False,"No Description")$/;"	v	class:BaseMipsCPU
CP0_Config1_WR	src/arch/mips/types.hh	/^      bool CP0_Config1_WR;\/\/ Page 113$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config2	src/arch/mips/MipsCPU.py	/^        CP0_Config2 = Param.Unsigned(0,"CP0 Config2 Register")$/;"	v	class:BaseMipsCPU
CP0_Config2	src/arch/mips/types.hh	/^      unsigned CP0_Config2;$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config2_M	src/arch/mips/MipsCPU.py	/^        CP0_Config2_M = Param.Bool(False,"Config3 Implemented?")$/;"	v	class:BaseMipsCPU
CP0_Config2_M	src/arch/mips/types.hh	/^      bool CP0_Config2_M; \/\/ Page 114$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config2_SA	src/arch/mips/MipsCPU.py	/^        CP0_Config2_SA = Param.Unsigned(0,"No Description")$/;"	v	class:BaseMipsCPU
CP0_Config2_SA	src/arch/mips/types.hh	/^      unsigned CP0_Config2_SA;\/\/ Page 116$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config2_SL	src/arch/mips/MipsCPU.py	/^        CP0_Config2_SL = Param.Unsigned(0,"No Description")$/;"	v	class:BaseMipsCPU
CP0_Config2_SL	src/arch/mips/types.hh	/^      unsigned CP0_Config2_SL;\/\/ Page 116$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config2_SS	src/arch/mips/MipsCPU.py	/^        CP0_Config2_SS = Param.Unsigned(0,"No Description")$/;"	v	class:BaseMipsCPU
CP0_Config2_SS	src/arch/mips/types.hh	/^      unsigned CP0_Config2_SS;\/\/ Page 115$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config2_SU	src/arch/mips/MipsCPU.py	/^        CP0_Config2_SU = Param.Unsigned(0,"No Description")$/;"	v	class:BaseMipsCPU
CP0_Config2_SU	src/arch/mips/types.hh	/^      unsigned CP0_Config2_SU;\/\/ Page 115$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config2_TA	src/arch/mips/MipsCPU.py	/^        CP0_Config2_TA = Param.Unsigned(0,"No Description")$/;"	v	class:BaseMipsCPU
CP0_Config2_TA	src/arch/mips/types.hh	/^      unsigned CP0_Config2_TA;\/\/ Page 115$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config2_TL	src/arch/mips/MipsCPU.py	/^        CP0_Config2_TL = Param.Unsigned(0,"No Description")$/;"	v	class:BaseMipsCPU
CP0_Config2_TL	src/arch/mips/types.hh	/^      unsigned CP0_Config2_TL;\/\/ Page 115$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config2_TS	src/arch/mips/MipsCPU.py	/^        CP0_Config2_TS = Param.Unsigned(0,"No Description")$/;"	v	class:BaseMipsCPU
CP0_Config2_TS	src/arch/mips/types.hh	/^      unsigned CP0_Config2_TS;\/\/ Page 114$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config2_TU	src/arch/mips/MipsCPU.py	/^        CP0_Config2_TU = Param.Unsigned(0,"No Description")$/;"	v	class:BaseMipsCPU
CP0_Config2_TU	src/arch/mips/types.hh	/^      unsigned CP0_Config2_TU;\/\/ Page 114$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config3	src/arch/mips/MipsCPU.py	/^        CP0_Config3 = Param.Unsigned(0,"CP0 Config3 Register")$/;"	v	class:BaseMipsCPU
CP0_Config3	src/arch/mips/types.hh	/^      unsigned CP0_Config3;$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config3_DSPP	src/arch/mips/MipsCPU.py	/^        CP0_Config3_DSPP = Param.Bool(False,"DSP Extensions Present?")$/;"	v	class:BaseMipsCPU
CP0_Config3_DSPP	src/arch/mips/types.hh	/^      bool CP0_Config3_DSPP;\/\/ Page 117$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config3_LPA	src/arch/mips/MipsCPU.py	/^        CP0_Config3_LPA = Param.Bool(False,"No Description")$/;"	v	class:BaseMipsCPU
CP0_Config3_LPA	src/arch/mips/types.hh	/^      bool CP0_Config3_LPA;\/\/ Page 117$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config3_M	src/arch/mips/MipsCPU.py	/^        CP0_Config3_M = Param.Bool(False,"Config4 Implemented?")$/;"	v	class:BaseMipsCPU
CP0_Config3_M	src/arch/mips/types.hh	/^      bool CP0_Config3_M; \/\/\/\/ Page 117$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config3_MT	src/arch/mips/MipsCPU.py	/^        CP0_Config3_MT = Param.Bool(False,"Multithreading Extensions Present?")$/;"	v	class:BaseMipsCPU
CP0_Config3_MT	src/arch/mips/types.hh	/^      bool CP0_Config3_MT;\/\/ Page 119$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config3_SM	src/arch/mips/MipsCPU.py	/^        CP0_Config3_SM = Param.Bool(False,"No Description")$/;"	v	class:BaseMipsCPU
CP0_Config3_SM	src/arch/mips/types.hh	/^      bool CP0_Config3_SM;\/\/ Page 119$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config3_SP	src/arch/mips/MipsCPU.py	/^        CP0_Config3_SP = Param.Bool(False,"No Description")$/;"	v	class:BaseMipsCPU
CP0_Config3_SP	src/arch/mips/types.hh	/^      bool CP0_Config3_SP;\/\/ Page 118$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config3_TL	src/arch/mips/MipsCPU.py	/^        CP0_Config3_TL = Param.Bool(False,"No Description")$/;"	v	class:BaseMipsCPU
CP0_Config3_TL	src/arch/mips/types.hh	/^      bool CP0_Config3_TL;\/\/ Page 119$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config3_VEIC	src/arch/mips/MipsCPU.py	/^        CP0_Config3_VEIC = Param.Bool(False,"No Description")$/;"	v	class:BaseMipsCPU
CP0_Config3_VEIC	src/arch/mips/types.hh	/^      bool CP0_Config3_VEIC;\/\/ Page 118$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config3_VInt	src/arch/mips/MipsCPU.py	/^        CP0_Config3_VInt = Param.Bool(False,"No Description")$/;"	v	class:BaseMipsCPU
CP0_Config3_VInt	src/arch/mips/types.hh	/^      bool CP0_Config3_VInt; \/\/ Page 118$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config_AR	src/arch/mips/MipsCPU.py	/^        CP0_Config_AR = Param.Unsigned(0,"No Description")$/;"	v	class:BaseMipsCPU
CP0_Config_AR	src/arch/mips/types.hh	/^      unsigned CP0_Config_AR; \/\/Page 109$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config_AT	src/arch/mips/MipsCPU.py	/^        CP0_Config_AT = Param.Unsigned(0,"No Description")$/;"	v	class:BaseMipsCPU
CP0_Config_AT	src/arch/mips/types.hh	/^      unsigned CP0_Config_AT; \/\/Page 109$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config_BE	src/arch/mips/MipsCPU.py	/^        CP0_Config_BE = Param.Unsigned(0,"Big Endian?")$/;"	v	class:BaseMipsCPU
CP0_Config_BE	src/arch/mips/types.hh	/^      unsigned CP0_Config_BE; \/\/ Page 108, Big\/Little Endian mode$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config_MT	src/arch/mips/MipsCPU.py	/^        CP0_Config_MT = Param.Unsigned(0,"No Description")$/;"	v	class:BaseMipsCPU
CP0_Config_MT	src/arch/mips/types.hh	/^      unsigned CP0_Config_MT; \/\/Page 109$/;"	m	struct:MipsISA::CoreSpecific
CP0_Config_VI	src/arch/mips/MipsCPU.py	/^        CP0_Config_VI = Param.Unsigned(0,"No Description")$/;"	v	class:BaseMipsCPU
CP0_Config_VI	src/arch/mips/types.hh	/^      unsigned CP0_Config_VI; \/\/Page 109$/;"	m	struct:MipsISA::CoreSpecific
CP0_EBase_CPUNum	src/arch/mips/MipsCPU.py	/^        CP0_EBase_CPUNum = Param.Unsigned(0,"No Description")$/;"	v	class:BaseMipsCPU
CP0_EBase_CPUNum	src/arch/mips/types.hh	/^      unsigned CP0_EBase_CPUNum; \/\/ Page 106, CPU Number in a multiprocessor$/;"	m	struct:MipsISA::CoreSpecific
CP0_IntCtl_IPPCI	src/arch/mips/MipsCPU.py	/^        CP0_IntCtl_IPPCI = Param.Unsigned(0,"No Description")$/;"	v	class:BaseMipsCPU
CP0_IntCtl_IPPCI	src/arch/mips/types.hh	/^      unsigned CP0_IntCtl_IPPCI; \/\/ Page 94, IP Performance Counter Interrupt$/;"	m	struct:MipsISA::CoreSpecific
CP0_IntCtl_IPTI	src/arch/mips/MipsCPU.py	/^        CP0_IntCtl_IPTI = Param.Unsigned(0,"No Description")$/;"	v	class:BaseMipsCPU
CP0_IntCtl_IPTI	src/arch/mips/types.hh	/^      unsigned CP0_IntCtl_IPTI; \/\/ Page 93, IP Timer Interrupt$/;"	m	struct:MipsISA::CoreSpecific
CP0_PRId	src/arch/mips/MipsCPU.py	/^        CP0_PRId = Param.Unsigned(0,"CP0 Status Register")$/;"	v	class:BaseMipsCPU
CP0_PRId	src/arch/mips/types.hh	/^      unsigned CP0_PRId;$/;"	m	struct:MipsISA::CoreSpecific
CP0_PRId_CompanyID	src/arch/mips/MipsCPU.py	/^        CP0_PRId_CompanyID = Param.Unsigned(0,"Company Identifier in Processor ID Register")$/;"	v	class:BaseMipsCPU
CP0_PRId_CompanyID	src/arch/mips/types.hh	/^      unsigned CP0_PRId_CompanyID; \/\/ Page 105, Company ID - (0-255, 1=>MIPS)$/;"	m	struct:MipsISA::CoreSpecific
CP0_PRId_CompanyOptions	src/arch/mips/MipsCPU.py	/^        CP0_PRId_CompanyOptions = Param.Unsigned(0,"Company Options in Processor ID Register")$/;"	v	class:BaseMipsCPU
CP0_PRId_CompanyOptions	src/arch/mips/types.hh	/^      unsigned CP0_PRId_CompanyOptions; \/\/ Page 105, Manufacture options$/;"	m	struct:MipsISA::CoreSpecific
CP0_PRId_ProcessorID	src/arch/mips/MipsCPU.py	/^        CP0_PRId_ProcessorID = Param.Unsigned(1,"Processor ID (0=>Not MIPS32\/64 Processor, 1=>MIPS, 2-255 => Other Company")$/;"	v	class:BaseMipsCPU
CP0_PRId_ProcessorID	src/arch/mips/types.hh	/^      unsigned CP0_PRId_ProcessorID; \/\/ Page 105$/;"	m	struct:MipsISA::CoreSpecific
CP0_PRId_Revision	src/arch/mips/MipsCPU.py	/^        CP0_PRId_Revision = Param.Unsigned(0,"Processor Revision Number in Processor ID Register")$/;"	v	class:BaseMipsCPU
CP0_PRId_Revision	src/arch/mips/types.hh	/^      unsigned CP0_PRId_Revision; \/\/ Page 105$/;"	m	struct:MipsISA::CoreSpecific
CP0_PerfCtr_M	src/arch/mips/MipsCPU.py	/^        CP0_PerfCtr_M = Param.Bool(False,"No Description")$/;"	v	class:BaseMipsCPU
CP0_PerfCtr_M	src/arch/mips/types.hh	/^      bool CP0_PerfCtr_M; \/\/ Page 130$/;"	m	struct:MipsISA::CoreSpecific
CP0_PerfCtr_W	src/arch/mips/MipsCPU.py	/^        CP0_PerfCtr_W = Param.Bool(False,"No Description")$/;"	v	class:BaseMipsCPU
CP0_PerfCtr_W	src/arch/mips/types.hh	/^      bool CP0_PerfCtr_W; \/\/ Page 130$/;"	m	struct:MipsISA::CoreSpecific
CP0_SrsCtl_HSS	src/arch/mips/MipsCPU.py	/^        CP0_SrsCtl_HSS = Param.Unsigned(0,"No Description")$/;"	v	class:BaseMipsCPU
CP0_SrsCtl_HSS	src/arch/mips/types.hh	/^      unsigned CP0_SrsCtl_HSS; \/\/ Page 95, Highest Implemented Shadow Set$/;"	m	struct:MipsISA::CoreSpecific
CP0_WatchHi_M	src/arch/mips/MipsCPU.py	/^        CP0_WatchHi_M = Param.Bool(False,"No Description")$/;"	v	class:BaseMipsCPU
CP0_WatchHi_M	src/arch/mips/types.hh	/^      bool CP0_WatchHi_M; \/\/ Page 124$/;"	m	struct:MipsISA::CoreSpecific
CPA	src/base/CPA.py	/^class CPA(SimObject):$/;"	c
CPA	src/base/cp_annotate.cc	/^CPA::CPA(Params *p)$/;"	f	class:CPA
CPA	src/base/cp_annotate.hh	/^class CPA : SimObject$/;"	c
CPA	src/base/cp_annotate.hh	/^class CPA$/;"	c
CPAIgnoreSymbol	src/base/cp_annotate.cc	/^struct CPAIgnoreSymbol$/;"	s	file:
CPA_IGNORE_SYMBOL	src/base/cp_annotate.cc	/^#define CPA_IGNORE_SYMBOL(/;"	d	file:
CPA_IGNORE_SYMBOL	src/base/cp_annotate.cc	/^#undef CPA_IGNORE_SYMBOL$/;"	d	file:
CPBR	src/dev/arm/vgic.hh	/^    Bitfield<4> CPBR;$/;"	m	class:VGic
CPL0FlagBit	src/arch/x86/insts/microldstop.hh	/^        CPL0FlagBit = 1,$/;"	e	enum:X86ISA::FlagBit
CPRINTF_DECLARATION	src/base/cprintf.hh	/^#define CPRINTF_DECLARATION /;"	d
CPRINTF_DEFINITION	src/base/cprintf.hh	/^#define CPRINTF_DEFINITION /;"	d
CPU	src/python/m5/util/dot_writer.py	/^    CPU = 1$/;"	v	class:NodeType
CPUEvent	src/cpu/inorder/cpu.cc	/^InOrderCPU::CPUEvent::CPUEvent(InOrderCPU *_cpu, CPUEventType e_type,$/;"	f	class:InOrderCPU::CPUEvent
CPUEvent	src/cpu/inorder/cpu.hh	/^    class CPUEvent : public Event$/;"	c	class:InOrderCPU
CPUEventPri	src/cpu/inorder/cpu.hh	/^    enum CPUEventPri {$/;"	g	class:InOrderCPU
CPUEventType	src/cpu/inorder/cpu.hh	/^    enum CPUEventType {$/;"	g	class:InOrderCPU
CPUIDVector	src/cpu/kvm/vm.hh	/^    typedef std::vector<struct kvm_cpuid_entry2> CPUIDVector;$/;"	t	class:Kvm
CPUPol	src/cpu/o3/commit.hh	/^    typedef typename Impl::CPUPol CPUPol;$/;"	t	class:DefaultCommit
CPUPol	src/cpu/o3/decode.hh	/^    typedef typename Impl::CPUPol CPUPol;$/;"	t	class:DefaultDecode
CPUPol	src/cpu/o3/fetch.hh	/^    typedef typename Impl::CPUPol CPUPol;$/;"	t	class:DefaultFetch
CPUPol	src/cpu/o3/iew.hh	/^    typedef typename Impl::CPUPol CPUPol;$/;"	t	class:DefaultIEW
CPUPol	src/cpu/o3/impl.hh	/^    typedef SimpleCPUPolicy<O3CPUImpl> CPUPol;$/;"	t	struct:O3CPUImpl
CPUPol	src/cpu/o3/rename.hh	/^    typedef typename Impl::CPUPol CPUPol;$/;"	t	class:DefaultRename
CPUPolicy	src/cpu/o3/cpu.hh	/^    typedef typename Impl::CPUPol CPUPolicy;$/;"	t	class:FullO3CPU
CPUProgressEvent	src/cpu/base.cc	/^CPUProgressEvent::CPUProgressEvent(BaseCPU *_cpu, Tick ival)$/;"	f	class:CPUProgressEvent
CPUProgressEvent	src/cpu/base.hh	/^class CPUProgressEvent : public Event$/;"	c
CPUType	src/cpu/o3/impl.hh	/^    typedef O3CPU CPUType;$/;"	t	struct:O3CPUImpl
CPUType	src/cpu/ozone/front_end.hh	/^    typedef typename Impl::CPUType CPUType;$/;"	t	class:FrontEnd
CPUType	src/cpu/ozone/ozone_impl.hh	/^    typedef OzoneCPU CPUType;$/;"	t	struct:OzoneImpl
CPUType	src/cpu/ozone/thread_state.hh	/^    typedef typename Impl::CPUType CPUType;$/;"	t	struct:OzoneThreadState
CPU_INORDER_REG_DEP_MAP_HH	src/cpu/inorder/reg_dep_map.hh	/^#define CPU_INORDER_REG_DEP_MAP_HH$/;"	d
CPU_INORDER_RESOURCE_LIST_HH	src/cpu/inorder/resources/resource_list.hh	/^#define CPU_INORDER_RESOURCE_LIST_HH$/;"	d
CPU_MAX	src/dev/arm/generic_timer.hh	/^    static const int CPU_MAX = 8;$/;"	m	class:GenericTimer
CPU_MAX	src/dev/arm/gic_pl390.hh	/^    static const int CPU_MAX = 8;   \/\/ Max number of supported CPU interfaces$/;"	m	class:Pl390
CPU_MAX	src/dev/arm/timer_cpulocal.hh	/^    static const int CPU_MAX = 8;$/;"	m	class:CpuLocalTimer
CPU_SIZE	src/dev/arm/gic_pl390.hh	/^    static const int CPU_SIZE  = 0xff;$/;"	m	class:Pl390
CPU_Switch_Pri	src/sim/eventq.hh	/^    static const Priority CPU_Switch_Pri =             -31;$/;"	m	class:EventBase
CPU_Tick_Pri	src/sim/eventq.hh	/^    static const Priority CPU_Tick_Pri =                50;$/;"	m	class:EventBase
CPrintfArgsList	src/base/cprintf.hh	/^typedef VarArgs::List<cp::Print> CPrintfArgsList;$/;"	t
CR	src/dev/ns_gige_reg.h	/^    CR =                0x00,$/;"	e	enum:DeviceRegisterAddress
CR0	src/arch/x86/regs/misc.hh	/^#undef CR0$/;"	d
CR2	src/arch/x86/regs/misc.hh	/^#undef CR2$/;"	d
CR3	src/arch/x86/regs/misc.hh	/^#undef CR3$/;"	d
CRDD	src/dev/ns_gige.hh	/^    bool CRDD;$/;"	m	class:NSGigE
CR_RST	src/dev/ns_gige_reg.h	/^     CR_RST =           0x00000100$/;"	e	enum:ChipCommandRegister
CR_RXD	src/dev/ns_gige_reg.h	/^     CR_RXD =           0x00000008,$/;"	e	enum:ChipCommandRegister
CR_RXE	src/dev/ns_gige_reg.h	/^     CR_RXE =           0x00000004,$/;"	e	enum:ChipCommandRegister
CR_RXR	src/dev/ns_gige_reg.h	/^     CR_RXR =           0x00000020,$/;"	e	enum:ChipCommandRegister
CR_SWI	src/dev/ns_gige_reg.h	/^     CR_SWI =           0x00000080,$/;"	e	enum:ChipCommandRegister
CR_TXD	src/dev/ns_gige_reg.h	/^     CR_TXD =           0x00000002,$/;"	e	enum:ChipCommandRegister
CR_TXE	src/dev/ns_gige_reg.h	/^     CR_TXE =           0x00000001,$/;"	e	enum:ChipCommandRegister
CR_TXR	src/dev/ns_gige_reg.h	/^     CR_TXR =           0x00000010,$/;"	e	enum:ChipCommandRegister
CS	src/arch/x86/decoder_tables.cc	/^    const uint8_t CS = CSOverride;$/;"	m	namespace:X86ISA	file:
CSOverride	src/arch/x86/types.hh	/^        CSOverride,$/;"	e	enum:X86ISA::Prefixes
CTDD	src/dev/ns_gige.hh	/^    bool CTDD;$/;"	m	class:NSGigE
CTRL	src/dev/i8254xGBe_defs.hh	/^    struct CTRL : public Reg<uint32_t> { \/\/ 0x0000 CTRL Register$/;"	s	struct:iGbReg::Regs
CTRL_EXT	src/dev/i8254xGBe_defs.hh	/^    struct CTRL_EXT : public Reg<uint32_t> { \/\/ 0x0018 CTRL_EXT Register$/;"	s	struct:iGbReg::Regs
CTRL_VNET_	src/mem/ruby/network/garnet/NetworkHeader.hh	/^enum VNET_type {CTRL_VNET_, DATA_VNET_, NULL_VNET_, NUM_VNET_TYPE_};$/;"	e	enum:VNET_type
Cache	src/mem/cache/cache.hh	/^class Cache : public BaseCache$/;"	c
Cache	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::Cache(const Params *p)$/;"	f	class:Cache
Cache Actions	src/mem/slicc/doc/tutorial.tex	/^\\section*{Cache Actions}$/;"	s
Cache Events	src/mem/slicc/doc/tutorial.tex	/^\\section*{Cache Events}$/;"	s
Cache Transitions	src/mem/slicc/doc/tutorial.tex	/^\\section*{Cache Transitions}$/;"	s
CacheBlk	src/mem/cache/blk.hh	/^    CacheBlk()$/;"	f	class:CacheBlk
CacheBlk	src/mem/cache/blk.hh	/^class CacheBlk$/;"	c
CacheBlkIsDirtyVisitor	src/mem/cache/blk.hh	/^    CacheBlkIsDirtyVisitor()$/;"	f	class:CacheBlkIsDirtyVisitor
CacheBlkIsDirtyVisitor	src/mem/cache/blk.hh	/^class CacheBlkIsDirtyVisitor$/;"	c
CacheBlkPrintWrapper	src/mem/cache/blk.hh	/^    CacheBlkPrintWrapper(CacheBlk *_blk) : blk(_blk) {}$/;"	f	class:CacheBlkPrintWrapper
CacheBlkPrintWrapper	src/mem/cache/blk.hh	/^class CacheBlkPrintWrapper : public Printable$/;"	c
CacheBlkStatusBits	src/mem/cache/blk.hh	/^enum CacheBlkStatusBits {$/;"	g
CacheBlkVisitorWrapper	src/mem/cache/blk.hh	/^    CacheBlkVisitorWrapper(T &_obj, visitorPtr _visitor)$/;"	f	class:CacheBlkVisitorWrapper
CacheBlkVisitorWrapper	src/mem/cache/blk.hh	/^class CacheBlkVisitorWrapper$/;"	c
CacheKey	src/arch/x86/decoder.hh	/^    typedef MiscReg CacheKey;$/;"	t	class:X86ISA::Decoder
CacheLineSize	src/dev/Pci.py	/^    CacheLineSize = Param.UInt8(0, "System Cacheline Size")$/;"	v	class:PciDevice
CacheMasterPort	src/mem/cache/base.hh	/^        CacheMasterPort(const std::string &_name, BaseCache *_cache,$/;"	f	class:BaseCache::CacheMasterPort
CacheMasterPort	src/mem/cache/base.hh	/^    class CacheMasterPort : public QueuedMasterPort$/;"	c	class:BaseCache
CacheMemory	src/mem/ruby/system/CacheMemory.cc	/^CacheMemory::CacheMemory(const Params *p)$/;"	f	class:CacheMemory
CacheMemory	src/mem/ruby/system/CacheMemory.hh	/^class CacheMemory : public SimObject$/;"	c
CachePage	src/cpu/decode_cache.hh	/^    struct CachePage {$/;"	s	class:DecodeCache::AddrMap
CachePort	src/cpu/inorder/cpu.cc	/^InOrderCPU::CachePort::CachePort(CacheUnit *_cacheUnit,$/;"	f	class:InOrderCPU::CachePort
CachePort	src/cpu/inorder/cpu.hh	/^    class CachePort : public MasterPort$/;"	c	class:InOrderCPU
CacheRecorder	src/mem/ruby/recorder/CacheRecorder.cc	/^CacheRecorder::CacheRecorder()$/;"	f	class:CacheRecorder
CacheRecorder	src/mem/ruby/recorder/CacheRecorder.cc	/^CacheRecorder::CacheRecorder(uint8_t* uncompressed_trace,$/;"	f	class:CacheRecorder
CacheRecorder	src/mem/ruby/recorder/CacheRecorder.hh	/^class CacheRecorder$/;"	c
CacheReqPacket	src/cpu/inorder/resources/cache_unit.hh	/^    CacheReqPacket(CacheRequest *_req,$/;"	f	class:CacheReqPacket
CacheReqPacket	src/cpu/inorder/resources/cache_unit.hh	/^class CacheReqPacket : public Packet$/;"	c
CacheReqPktPtr	src/cpu/inorder/resources/cache_unit.hh	/^typedef CacheReqPacket* CacheReqPktPtr;$/;"	t
CacheReqPtr	src/cpu/inorder/resource.hh	/^typedef CacheRequest* CacheReqPtr;$/;"	t
CacheRequest	src/cpu/inorder/resources/cache_unit.hh	/^    CacheRequest(CacheUnit *cres)$/;"	f	class:CacheRequest
CacheRequest	src/cpu/inorder/resources/cache_unit.hh	/^class CacheRequest : public ResourceRequest$/;"	c
CacheSet	src/mem/cache/tags/cacheset.hh	/^class CacheSet$/;"	c
CacheSlavePort	src/mem/cache/base.cc	/^BaseCache::CacheSlavePort::CacheSlavePort(const std::string &_name,$/;"	f	class:BaseCache::CacheSlavePort
CacheSlavePort	src/mem/cache/base.hh	/^    class CacheSlavePort : public QueuedSlavePort$/;"	c	class:BaseCache
CacheType	src/dev/i8254xGBe.hh	/^        typedef std::deque<T *> CacheType;$/;"	t	class:IGbE::DescCache
CacheUnit	src/cpu/inorder/resources/cache_unit.cc	/^CacheUnit::CacheUnit(string res_name, int res_id, int res_width,$/;"	f	class:CacheUnit
CacheUnit	src/cpu/inorder/resources/cache_unit.hh	/^class CacheUnit : public Resource$/;"	c
CacheUnitEvent	src/cpu/inorder/resources/cache_unit.cc	/^CacheUnitEvent::CacheUnitEvent()$/;"	f	class:CacheUnitEvent
CacheUnitEvent	src/cpu/inorder/resources/cache_unit.hh	/^class CacheUnitEvent : public ResourceEvent {$/;"	c
Callback	src/base/callback.hh	/^class Callback$/;"	c
CallbackQueue	src/base/callback.hh	/^class CallbackQueue$/;"	c
CanCommit	src/cpu/base_dyn_inst.hh	/^        CanCommit,               \/\/\/ Instruction can commit$/;"	e	enum:BaseDynInst::Status
CanCommit	src/cpu/inorder/inorder_dyn_inst.hh	/^        CanCommit,               \/\/\/ Instruction can commit$/;"	e	enum:InOrderDynInst::Status
CanIssue	src/cpu/base_dyn_inst.hh	/^        CanIssue,                \/\/\/ Instruction can issue and execute$/;"	e	enum:BaseDynInst::Status
CanIssue	src/cpu/inorder/inorder_dyn_inst.hh	/^        CanIssue,                \/\/\/ Instruction can issue and execute$/;"	e	enum:InOrderDynInst::Status
CapabilityPtr	src/dev/Pci.py	/^    CapabilityPtr = Param.UInt8(0x00, "Capability List Pointer offset")$/;"	v	class:PciDevice
CardbusCIS	src/dev/Pci.py	/^    CardbusCIS = Param.UInt32(0x00, "Cardbus Card Information Structure")$/;"	v	class:PciDevice
Cause_Field	src/arch/mips/registers.hh	/^    Cause_Field = 11$/;"	e	enum:MipsISA::FCSRFields
CfgCtrl	src/dev/arm/rv_ctrl.hh	/^        CfgCtrl    = 0xA4,$/;"	e	enum:RealViewCtrl::__anon67
CfgData	src/dev/arm/rv_ctrl.hh	/^        CfgData    = 0xA0,$/;"	e	enum:RealViewCtrl::__anon67
CfgData1	src/dev/arm/rv_ctrl.hh	/^        CfgData1   = 0x28,$/;"	e	enum:RealViewCtrl::__anon67
CfgData2	src/dev/arm/rv_ctrl.hh	/^        CfgData2   = 0x2C,$/;"	e	enum:RealViewCtrl::__anon67
CfgStat	src/dev/arm/rv_ctrl.hh	/^        CfgStat    = 0xA8,$/;"	e	enum:RealViewCtrl::__anon67
ChanCnt	src/dev/CopyEngine.py	/^    ChanCnt = Param.UInt8(4, "Number of DMA channels that exist on device")$/;"	v	class:CopyEngine
ChanRegs	src/dev/copy_engine_defs.hh	/^struct ChanRegs {$/;"	s	namespace:CopyEngineReg
Channel	src/dev/ide_ctrl.cc	/^IdeController::Channel::Channel($/;"	f	class:IdeController::Channel
Channel	src/dev/ide_ctrl.hh	/^    struct Channel$/;"	s	class:IdeController
ChannelState	src/dev/copy_engine.hh	/^        enum ChannelState {$/;"	g	class:CopyEngine::CopyEngineChannel
ChannelType	src/mem/ruby/network/orion/TechParameter.hh	/^    enum ChannelType$/;"	g	class:TechParameter
Characteristic	src/arch/x86/bios/SMBios.py	/^class Characteristic(Enum):$/;"	c
Check	src/cpu/testers/rubytest/Check.cc	/^Check::Check(const Address& address, const Address& pc,$/;"	f	class:Check
Check	src/cpu/testers/rubytest/Check.hh	/^class Check$/;"	c
CheckAllocateStatementAST	src/mem/slicc/ast/CheckAllocateStatementAST.py	/^class CheckAllocateStatementAST(StatementAST):$/;"	c
CheckFault	src/cpu/inorder/resources/graduation_unit.hh	/^        CheckFault,$/;"	e	enum:GraduationUnit::Command
CheckForPassword	src/dev/x86/i8042.hh	/^        CheckForPassword = 0xA4,$/;"	e	enum:X86ISA::I8042::Command
CheckPassword	src/dev/x86/i8042.hh	/^        CheckPassword = 0xA6,$/;"	e	enum:X86ISA::I8042::Command
CheckStartEvent	src/cpu/testers/rubytest/RubyTester.hh	/^        CheckStartEvent(RubyTester *_tester)$/;"	f	class:RubyTester::CheckStartEvent
CheckStartEvent	src/cpu/testers/rubytest/RubyTester.hh	/^    class CheckStartEvent : public Event$/;"	c	class:RubyTester
CheckTable	src/cpu/testers/rubytest/CheckTable.cc	/^CheckTable::CheckTable(int _num_writers, int _num_readers, RubyTester* _tester)$/;"	f	class:CheckTable
CheckTable	src/cpu/testers/rubytest/CheckTable.hh	/^class CheckTable$/;"	c
CheckedInt	src/python/m5/params.py	/^class CheckedInt(NumericParamValue):$/;"	c
CheckedIntType	src/python/m5/params.py	/^class CheckedIntType(MetaParamValue):$/;"	c
Checker	src/cpu/checker/cpu.hh	/^    Checker(Params *p)$/;"	f	class:Checker
Checker	src/cpu/checker/cpu.hh	/^class Checker : public CheckerCPU$/;"	c
CheckerCPU	src/cpu/CheckerCPU.py	/^class CheckerCPU(BaseCPU):$/;"	c
CheckerCPU	src/cpu/DummyChecker.py	/^from CheckerCPU import CheckerCPU$/;"	i
CheckerCPU	src/cpu/checker/cpu.cc	/^CheckerCPU::CheckerCPU(Params *p)$/;"	f	class:CheckerCPU
CheckerCPU	src/cpu/checker/cpu.hh	/^class CheckerCPU : public BaseCPU$/;"	c
CheckerCPU	src/cpu/o3/O3Checker.py	/^from CheckerCPU import CheckerCPU$/;"	i
CheckerThreadContext	src/cpu/checker/thread_context.hh	/^    CheckerThreadContext(TC *actual_tc,$/;"	f	class:CheckerThreadContext
CheckerThreadContext	src/cpu/checker/thread_context.hh	/^class CheckerThreadContext : public ThreadContext$/;"	c
Checkpoint	src/sim/serialize.cc	/^Checkpoint::Checkpoint(const string &cpt_dir)$/;"	f	class:Checkpoint
Checkpoint	src/sim/serialize.hh	/^class Checkpoint$/;"	c
ChildList	src/cpu/profile.hh	/^    typedef std::map<Addr, ProfileNode *> ChildList;$/;"	t	class:ProfileNode
ChipCommandRegister	src/dev/ns_gige_reg.h	/^enum ChipCommandRegister {$/;"	g
ChunkGenerator	src/base/chunk_generator.hh	/^    ChunkGenerator(Addr _startAddr, unsigned totalSize, unsigned _chunkSize)$/;"	f	class:ChunkGenerator
ChunkGenerator	src/base/chunk_generator.hh	/^class ChunkGenerator$/;"	c
CircleBuf	src/base/circlebuf.cc	/^CircleBuf::CircleBuf(int l)$/;"	f	class:CircleBuf
CircleBuf	src/base/circlebuf.hh	/^class CircleBuf$/;"	c
ClassCode	src/dev/CopyEngine.py	/^    ClassCode = 0x80$/;"	v	class:CopyEngine
ClassCode	src/dev/Ethernet.py	/^    ClassCode = 0x02$/;"	v	class:IGbE
ClassCode	src/dev/Ethernet.py	/^    ClassCode = 0x02$/;"	v	class:NSGigE
ClassCode	src/dev/Ethernet.py	/^    ClassCode = 0x02$/;"	v	class:Sinic
ClassCode	src/dev/Ide.py	/^    ClassCode = 0x01$/;"	v	class:IdeController
ClassCode	src/dev/Pci.py	/^    ClassCode = Param.UInt8(0, "Class Code")$/;"	v	class:PciDevice
ClassMethodCallExprAST	src/mem/slicc/ast/MethodCallExprAST.py	/^class ClassMethodCallExprAST(MethodCallExprAST):$/;"	c
Clcd	src/dev/arm/rv_ctrl.hh	/^        Clcd       = 0x50,$/;"	e	enum:RealViewCtrl::__anon67
ClcdCrsrClip	src/dev/arm/pl111.hh	/^    static const int ClcdCrsrClip     = 0xC14;$/;"	m	class:Pl111
ClcdCrsrConfig	src/dev/arm/pl111.hh	/^    static const int ClcdCrsrConfig   = 0xC04;$/;"	m	class:Pl111
ClcdCrsrCtrl	src/dev/arm/pl111.hh	/^    static const int ClcdCrsrCtrl     = 0xC00;$/;"	m	class:Pl111
ClcdCrsrIcr	src/dev/arm/pl111.hh	/^    static const int ClcdCrsrIcr      = 0xC24;$/;"	m	class:Pl111
ClcdCrsrImsc	src/dev/arm/pl111.hh	/^    static const int ClcdCrsrImsc     = 0xC20;$/;"	m	class:Pl111
ClcdCrsrMis	src/dev/arm/pl111.hh	/^    static const int ClcdCrsrMis      = 0xC2C;$/;"	m	class:Pl111
ClcdCrsrPalette0	src/dev/arm/pl111.hh	/^    static const int ClcdCrsrPalette0 = 0xC08;$/;"	m	class:Pl111
ClcdCrsrPalette1	src/dev/arm/pl111.hh	/^    static const int ClcdCrsrPalette1 = 0xC0C;$/;"	m	class:Pl111
ClcdCrsrRis	src/dev/arm/pl111.hh	/^    static const int ClcdCrsrRis      = 0xC28;$/;"	m	class:Pl111
ClcdCrsrXY	src/dev/arm/pl111.hh	/^    static const int ClcdCrsrXY       = 0xC10;$/;"	m	class:Pl111
ClcdSer	src/dev/arm/rv_ctrl.hh	/^        ClcdSer    = 0x54,$/;"	e	enum:RealViewCtrl::__anon67
CleanWindow	src/arch/sparc/faults.hh	/^class CleanWindow : public SparcFault<CleanWindow> {};$/;"	c	namespace:SparcISA
Client	src/arch/arm/pagetable.hh	/^        Client,$/;"	m	class:ArmISA::TlbEntry::DomainType
ClientCutText	src/base/vnc/vncinput.hh	/^        ClientCutText           = 6$/;"	e	enum:VncInput::ClientMessages
ClientCutTextMessage	src/base/vnc/vncinput.hh	/^    struct ClientCutTextMessage {$/;"	s	class:VncInput
ClientFrameBufferUpdate	src/base/vnc/vncinput.hh	/^        ClientFrameBufferUpdate = 3,$/;"	e	enum:VncInput::ClientMessages
ClientKeyEvent	src/base/vnc/vncinput.hh	/^        ClientKeyEvent          = 4,$/;"	e	enum:VncInput::ClientMessages
ClientMessages	src/base/vnc/vncinput.hh	/^    enum ClientMessages {$/;"	g	class:VncInput
ClientPointerEvent	src/base/vnc/vncinput.hh	/^        ClientPointerEvent      = 5,$/;"	e	enum:VncInput::ClientMessages
ClientSetEncodings	src/base/vnc/vncinput.hh	/^        ClientSetEncodings      = 2,$/;"	e	enum:VncInput::ClientMessages
ClientSetPixelFormat	src/base/vnc/vncinput.hh	/^        ClientSetPixelFormat    = 0,$/;"	e	enum:VncInput::ClientMessages
Clock	src/mem/ruby/network/orion/Clock.cc	/^Clock::Clock($/;"	f	class:Clock
Clock	src/mem/ruby/network/orion/Clock.hh	/^class Clock$/;"	c
Clock	src/python/m5/params.py	/^class Clock(TickParamValue):$/;"	c
Clock100	src/dev/arm/rv_ctrl.hh	/^        Clock100   = 0x24,$/;"	e	enum:RealViewCtrl::__anon67
Clock24	src/dev/arm/rv_ctrl.hh	/^        Clock24    = 0x5C,$/;"	e	enum:RealViewCtrl::__anon67
ClockDomain	src/sim/ClockDomain.py	/^class ClockDomain(SimObject):$/;"	c
ClockDomain	src/sim/clock_domain.hh	/^    ClockDomain(const Params *p, VoltageDomain *voltage_domain) :$/;"	f	class:ClockDomain
ClockDomain	src/sim/clock_domain.hh	/^class ClockDomain : public SimObject$/;"	c
ClockedObject	src/mem/MemObject.py	/^from ClockedObject import ClockedObject$/;"	i
ClockedObject	src/mem/cache/prefetch/Prefetcher.py	/^from ClockedObject import ClockedObject$/;"	i
ClockedObject	src/mem/cache/tags/Tags.py	/^from ClockedObject import ClockedObject$/;"	i
ClockedObject	src/mem/ruby/network/BasicRouter.py	/^from ClockedObject import ClockedObject$/;"	i
ClockedObject	src/mem/ruby/network/Network.py	/^from ClockedObject import ClockedObject$/;"	i
ClockedObject	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.py	/^from ClockedObject import ClockedObject$/;"	i
ClockedObject	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.py	/^from ClockedObject import ClockedObject$/;"	i
ClockedObject	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.py	/^from ClockedObject import ClockedObject$/;"	i
ClockedObject	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.py	/^from ClockedObject import ClockedObject$/;"	i
ClockedObject	src/mem/ruby/slicc_interface/Controller.py	/^from ClockedObject import ClockedObject$/;"	i
ClockedObject	src/mem/ruby/system/MemoryControl.py	/^from ClockedObject import ClockedObject$/;"	i
ClockedObject	src/mem/ruby/system/RubySystem.py	/^from ClockedObject import ClockedObject$/;"	i
ClockedObject	src/sim/ClockedObject.py	/^class ClockedObject(SimObject):$/;"	c
ClockedObject	src/sim/clocked_object.hh	/^    ClockedObject(const ClockedObjectParams* p) :$/;"	f	class:ClockedObject
ClockedObject	src/sim/clocked_object.hh	/^class ClockedObject : public SimObject$/;"	c
ClockrunControlStatusRegister	src/dev/ns_gige_reg.h	/^enum ClockrunControlStatusRegister {$/;"	g
ClrImportant	src/base/bitmap.hh	/^        uint32_t ClrImportant;$/;"	m	struct:Bitmap::Info
ClrUsed	src/base/bitmap.hh	/^        uint32_t ClrUsed;$/;"	m	struct:Bitmap::Info
CmdTag	src/arch/arm/linux/atag.hh	/^    CmdTag    = 0x54410009,$/;"	e	enum:__anon5
Cmos	src/dev/x86/Cmos.py	/^class Cmos(BasicPioDevice):$/;"	c
Cmos	src/dev/x86/SouthBridge.py	/^from Cmos import Cmos$/;"	i
Cmos	src/dev/x86/cmos.hh	/^    Cmos(const Params *p) : BasicPioDevice(p, 2), latency(p->pio_latency),$/;"	f	class:X86ISA::Cmos
Cmos	src/dev/x86/cmos.hh	/^class Cmos : public BasicPioDevice$/;"	c	namespace:X86ISA
CodeImporter	src/python/importer.py	/^class CodeImporter(object):$/;"	c
CoherentBus	src/cpu/BaseCPU.py	/^from Bus import CoherentBus$/;"	i
CoherentBus	src/mem/Bus.py	/^class CoherentBus(BaseBus):$/;"	c
CoherentBus	src/mem/coherent_bus.cc	/^CoherentBus::CoherentBus(const CoherentBusParams *p)$/;"	f	class:CoherentBus
CoherentBus	src/mem/coherent_bus.hh	/^class CoherentBus : public BaseBus$/;"	c
CoherentBusMasterPort	src/mem/coherent_bus.hh	/^        CoherentBusMasterPort(const std::string &_name,$/;"	f	class:CoherentBus::CoherentBusMasterPort
CoherentBusMasterPort	src/mem/coherent_bus.hh	/^    class CoherentBusMasterPort : public MasterPort$/;"	c	class:CoherentBus
CoherentBusSlavePort	src/mem/coherent_bus.hh	/^        CoherentBusSlavePort(const std::string &_name,$/;"	f	class:CoherentBus::CoherentBusSlavePort
CoherentBusSlavePort	src/mem/coherent_bus.hh	/^    class CoherentBusSlavePort : public SlavePort$/;"	c	class:CoherentBus
ColorStrings	src/python/m5/util/terminal.py	/^class ColorStrings(object):$/;"	c
Combinational_Macroop	src/arch/micro_asm.py	/^class Combinational_Macroop(Micro_Container):$/;"	c
Combinational_Macroop	src/arch/micro_asm_test.py	/^from micro_asm import MicroAssembler, Combinational_Macroop, Rom_Macroop, Rom$/;"	i
CommMonitor	src/mem/CommMonitor.py	/^class CommMonitor(MemObject):$/;"	c
CommMonitor	src/mem/comm_monitor.cc	/^CommMonitor::CommMonitor(Params* params)$/;"	f	class:CommMonitor
CommMonitor	src/mem/comm_monitor.hh	/^class CommMonitor : public MemObject$/;"	c
CommMonitorSenderState	src/mem/comm_monitor.hh	/^        CommMonitorSenderState(Tick _transmitTime)$/;"	f	class:CommMonitor::CommMonitorSenderState
CommMonitorSenderState	src/mem/comm_monitor.hh	/^    class CommMonitorSenderState : public Packet::SenderState$/;"	c	class:CommMonitor
CommStruct	src/cpu/ozone/back_end.hh	/^    typedef typename Impl::FullCPU::CommStruct CommStruct;$/;"	t	class:BackEnd
CommStruct	src/cpu/ozone/cpu.hh	/^    struct CommStruct {$/;"	s	class:OzoneCPU
CommStruct	src/cpu/ozone/front_end.hh	/^    typedef typename Impl::CPUType::CommStruct CommStruct;$/;"	t	class:FrontEnd
CommStruct	src/cpu/ozone/inorder_back_end.hh	/^    typedef typename Impl::FullCPU::CommStruct CommStruct;$/;"	t	class:InorderBackEnd
CommStruct	src/cpu/ozone/lw_back_end.hh	/^    typedef typename Impl::OzoneCPU::CommStruct CommStruct;$/;"	t	class:LWBackEnd
Command	src/cpu/inorder/resources/agen_unit.hh	/^    enum Command {$/;"	g	class:AGENUnit
Command	src/cpu/inorder/resources/branch_predictor.hh	/^    enum Command {$/;"	g	class:BranchPredictor
Command	src/cpu/inorder/resources/cache_unit.hh	/^    enum Command {$/;"	g	class:CacheUnit
Command	src/cpu/inorder/resources/decode_unit.hh	/^    enum Command {$/;"	g	class:DecodeUnit
Command	src/cpu/inorder/resources/execution_unit.hh	/^    enum Command {$/;"	g	class:ExecutionUnit
Command	src/cpu/inorder/resources/fetch_seq_unit.hh	/^    enum Command {$/;"	g	class:FetchSeqUnit
Command	src/cpu/inorder/resources/fetch_unit.hh	/^    enum Command {$/;"	g	class:FetchUnit
Command	src/cpu/inorder/resources/graduation_unit.hh	/^    enum Command {$/;"	g	class:GraduationUnit
Command	src/cpu/inorder/resources/inst_buffer.hh	/^    enum Command {$/;"	g	class:InstBuffer
Command	src/cpu/inorder/resources/mult_div_unit.hh	/^    enum Command {$/;"	g	class:MultDivUnit
Command	src/cpu/inorder/resources/use_def.hh	/^    enum Command {$/;"	g	class:UseDefUnit
Command	src/dev/Ide.py	/^    Command = 0x0$/;"	v	class:IdeController
Command	src/dev/Pci.py	/^    Command = Param.UInt16(0, "Command")$/;"	v	class:PciDevice
Command	src/dev/arm/hdlcd.hh	/^        Command          = 0x0230,$/;"	e	enum:HDLcd::RegisterOffset
Command	src/dev/sinic.hh	/^        uint32_t Command;      \/\/ 0x04$/;"	m	struct:Sinic::Device::__anon83
Command	src/dev/x86/i8042.hh	/^    enum Command$/;"	g	class:X86ISA::I8042
Command	src/dev/x86/i8042.hh	/^    enum Command$/;"	g	class:X86ISA::PS2Keyboard
Command	src/dev/x86/i8042.hh	/^    enum Command$/;"	g	class:X86ISA::PS2Mouse
Command	src/mem/packet.hh	/^    enum Command$/;"	g	class:MemCmd
Command	src/mem/packet.hh	/^    typedef MemCmd::Command Command;$/;"	t	class:Packet
CommandAck	src/dev/x86/i8042.cc	/^const uint8_t CommandAck = 0xfa;$/;"	v
CommandInfo	src/mem/packet.hh	/^    struct CommandInfo$/;"	s	class:MemCmd
CommandLine	src/arch/alpha/linux/system.hh	/^    Addr CommandLine() const { return Param() + 0x0; }$/;"	f	class:LinuxAlphaSystem
CommandLine	src/arch/mips/linux/system.hh	/^    Addr CommandLine() const { return Param() + 0x0; }$/;"	f	class:LinuxMipsSystem
CommandLineSize	src/arch/alpha/linux/system.hh	/^    static const int CommandLineSize = 256;$/;"	m	class:LinuxAlphaSystem
CommandLineSize	src/arch/mips/bare_iron/system.hh	/^    static const int CommandLineSize = 256;$/;"	m	class:BareIronMipsSystem
CommandLineSize	src/arch/mips/linux/system.hh	/^    static const int CommandLineSize = 256;$/;"	m	class:LinuxMipsSystem
CommandNack	src/dev/x86/i8042.cc	/^const uint8_t CommandNack = 0xfe;$/;"	v
CommandReg	src/dev/ide_disk.hh	/^typedef struct CommandReg {$/;"	s
CommandReg_t	src/dev/ide_disk.hh	/^} CommandReg_t;$/;"	t	typeref:struct:CommandReg
Command_Execution	src/dev/ide_disk.hh	/^    Command_Execution,$/;"	e	enum:DevState
Commit	src/cpu/o3/cpu_policy.hh	/^    typedef DefaultCommit<Impl> Commit;$/;"	t	struct:SimpleCPUPolicy
Commit	src/cpu/o3/rename.hh	/^    typedef typename CPUPol::Commit Commit;$/;"	t	class:DefaultRename
CommitIdx	src/cpu/o3/cpu.hh	/^        CommitIdx,$/;"	e	enum:FullO3CPU::StageIdx
CommitPolicy	src/cpu/o3/commit.hh	/^    enum CommitPolicy {$/;"	g	class:DefaultCommit
CommitStatus	src/cpu/o3/commit.hh	/^    enum CommitStatus{$/;"	g	class:DefaultCommit
Committed	src/cpu/base_dyn_inst.hh	/^        Committed,               \/\/\/ Instruction has committed$/;"	e	enum:BaseDynInst::Status
Committed	src/cpu/inorder/inorder_dyn_inst.hh	/^        Committed,               \/\/\/ Instruction has committed$/;"	e	enum:InOrderDynInst::Status
CompatAddrSpaceMod	src/arch/x86/bios/intelmp.cc	/^X86ISA::IntelMP::CompatAddrSpaceMod::CompatAddrSpaceMod(Params * p) :$/;"	f	class:X86ISA::IntelMP::CompatAddrSpaceMod
CompatAddrSpaceMod	src/arch/x86/bios/intelmp.hh	/^class CompatAddrSpaceMod : public ExtConfigEntry$/;"	c	namespace:X86ISA::IntelMP
CompatabilityMode	src/arch/x86/types.hh	/^        CompatabilityMode,$/;"	e	enum:X86ISA::X86SubMode
CompleteFetch	src/cpu/inorder/resources/fetch_unit.hh	/^        CompleteFetch$/;"	e	enum:FetchUnit::Command
CompleteReadData	src/cpu/inorder/resources/cache_unit.hh	/^        CompleteReadData,$/;"	e	enum:CacheUnit::Command
CompleteSecondSplitRead	src/cpu/inorder/resources/cache_unit.hh	/^        CompleteSecondSplitRead,$/;"	e	enum:CacheUnit::Command
CompleteSecondSplitWrite	src/cpu/inorder/resources/cache_unit.hh	/^        CompleteSecondSplitWrite$/;"	e	enum:CacheUnit::Command
CompleteWriteData	src/cpu/inorder/resources/cache_unit.hh	/^        CompleteWriteData,$/;"	e	enum:CacheUnit::Command
Completed	src/cpu/base_dyn_inst.hh	/^        Completed,               \/\/\/ Instruction has completed$/;"	e	enum:BaseDynInst::Status
Completed	src/cpu/inorder/inorder_dyn_inst.hh	/^        Completed,               \/\/\/ Instruction has completed$/;"	e	enum:InOrderDynInst::Status
CompletionWrite	src/dev/copy_engine.hh	/^            CompletionWrite$/;"	e	enum:CopyEngine::CopyEngineChannel::ChannelState
CompoundFlag	src/base/debug.hh	/^    CompoundFlag(const char *name, const char *desc,$/;"	f	class:Debug::CompoundFlag
CompoundFlag	src/base/debug.hh	/^class CompoundFlag : public SimpleFlag$/;"	c	namespace:Debug
CompoundFlag	src/python/m5/debug.py	/^from internal.debug import SimpleFlag, CompoundFlag$/;"	i
Compression	src/base/bitmap.hh	/^        uint32_t Compression;$/;"	m	struct:Bitmap::Info
CondCodesMask	src/arch/arm/miscregs.hh	/^    static const uint32_t CondCodesMask   = 0xF00F0000;$/;"	m	namespace:ArmISA
CondFlagBit	src/arch/x86/regs/misc.hh	/^    enum CondFlagBit {$/;"	g	namespace:X86ISA
CondLogicOp	src/arch/power/insts/condition.hh	/^    CondLogicOp(const char *mnem, MachInst _machInst, OpClass __opClass)$/;"	f	class:PowerISA::CondLogicOp
CondLogicOp	src/arch/power/insts/condition.hh	/^class CondLogicOp : public PowerStaticInst$/;"	c	namespace:PowerISA
CondMoveOp	src/arch/power/insts/condition.hh	/^    CondMoveOp(const char *mnem, MachInst _machInst, OpClass __opClass)$/;"	f	class:PowerISA::CondMoveOp
CondMoveOp	src/arch/power/insts/condition.hh	/^class CondMoveOp : public PowerStaticInst$/;"	c	namespace:PowerISA
CondTest	src/arch/x86/insts/microop.hh	/^        enum CondTest {$/;"	g	namespace:X86ISA::ConditionTests
ConditionCode	src/arch/arm/miscregs.hh	/^    enum ConditionCode {$/;"	g	namespace:ArmISA
ConditionTests	src/arch/x86/insts/microop.hh	/^    namespace ConditionTests$/;"	n	namespace:X86ISA
ConfRegOffset	src/dev/ide_ctrl.cc	/^enum ConfRegOffset {$/;"	g	file:
Config	src/dev/arm/a9scu.hh	/^        Config      = 0x04,$/;"	e	enum:A9SCU::__anon65
Config	src/dev/sinic.hh	/^        uint32_t Config;       \/\/ 0x00$/;"	m	struct:Sinic::Device::__anon83
Config	src/python/m5/main.py	/^            from IPython.config.loader import Config$/;"	i
ConfigFile	src/mem/ruby/network/orion/ConfigFile.cc	/^ConfigFile::ConfigFile( string filename, string delimiter,$/;"	f	class:ConfigFile
ConfigFile	src/mem/ruby/network/orion/ConfigFile.cc	/^ConfigFile::ConfigFile()$/;"	f	class:ConfigFile
ConfigFile	src/mem/ruby/network/orion/ConfigFile.hh	/^class ConfigFile {$/;"	c
ConfigTable	src/arch/x86/bios/intelmp.cc	/^X86ISA::IntelMP::ConfigTable::ConfigTable(Params * p) : SimObject(p),$/;"	f	class:X86ISA::IntelMP::ConfigTable
ConfigTable	src/arch/x86/bios/intelmp.hh	/^class ConfigTable : public SimObject$/;"	c	namespace:X86ISA::IntelMP
Configuration	src/python/m5/util/jobfile.py	/^class Configuration(Data):$/;"	c
ConfigurationRegisters	src/dev/ns_gige_reg.h	/^enum ConfigurationRegisters {$/;"	g
ConnectType	src/mem/ruby/network/orion/Crossbar/Crossbar.hh	/^    enum ConnectType$/;"	g	class:Crossbar
ConnectionState	src/base/vnc/vncserver.hh	/^    enum ConnectionState {$/;"	g	class:VncServer
ConstIterator	src/mem/cache/mshr.hh	/^        typedef std::list<Target>::const_iterator ConstIterator;$/;"	t	class:MSHR::TargetList
ConstIterator	src/mem/cache/mshr.hh	/^    typedef List::const_iterator ConstIterator;$/;"	t	class:MSHR
ConstNode	src/base/statistics.hh	/^    ConstNode(T s) : vresult(1, (Result)s) {}$/;"	f	class:Stats::ConstNode
ConstNode	src/base/statistics.hh	/^class ConstNode : public Node$/;"	c	namespace:Stats
ConstVectorNode	src/base/statistics.hh	/^    ConstVectorNode(const T &s) : vresult(s.begin(), s.end()) {}$/;"	f	class:Stats::ConstVectorNode
ConstVectorNode	src/base/statistics.hh	/^class ConstVectorNode : public Node$/;"	c	namespace:Stats
Consumer	src/mem/ruby/common/Consumer.hh	/^    Consumer(ClockedObject *_em)$/;"	f	class:Consumer
Consumer	src/mem/ruby/common/Consumer.hh	/^class Consumer$/;"	c
ConsumerEvent	src/mem/ruby/common/Consumer.hh	/^          ConsumerEvent(Consumer* _consumer)$/;"	f	class:Consumer::ConsumerEvent
ConsumerEvent	src/mem/ruby/common/Consumer.hh	/^    class ConsumerEvent : public Event$/;"	c	class:Consumer
ContainerPrint	src/base/stl_helpers.hh	/^    ContainerPrint(std::ostream &out)$/;"	f	class:m5::stl_helpers::ContainerPrint
ContainerPrint	src/base/stl_helpers.hh	/^class ContainerPrint$/;"	c	namespace:m5::stl_helpers
ContextSwitchTaskId	src/mem/request.hh	/^namespace ContextSwitchTaskId {$/;"	n
ContextType	src/arch/sparc/tlb.hh	/^    enum ContextType {$/;"	g	class:SparcISA::TLB
ContinuousPollHigh	src/dev/x86/i8042.hh	/^        ContinuousPollHigh = 0xC2,$/;"	e	enum:X86ISA::I8042::Command
ContinuousPollLow	src/dev/x86/i8042.hh	/^        ContinuousPollLow = 0xC1,$/;"	e	enum:X86ISA::I8042::Command
Control	src/dev/arm/a9scu.hh	/^        Control     = 0x00,$/;"	e	enum:A9SCU::__anon65
ControlReg	src/dev/arm/rtc_pl031.hh	/^        ControlReg = 0x0C,$/;"	e	enum:PL031::__anon66
ControlReg	src/dev/arm/timer_sp804.hh	/^            ControlReg = 0x08,$/;"	e	enum:Sp804::Timer::__anon69
ControlRegOperand	src/arch/isa_parser.py	/^class ControlRegOperand(Operand):$/;"	c
ConvertType	src/arch/arm/types.hh	/^    enum ConvertType{$/;"	g	namespace:ArmISA
ConvertType	src/arch/mips/types.hh	/^enum ConvertType{$/;"	g	namespace:MipsISA
CoprocessorUnusableFault	src/arch/mips/faults.hh	/^    CoprocessorUnusableFault(int _procid) : coProcID(_procid)$/;"	f	class:MipsISA::CoprocessorUnusableFault
CoprocessorUnusableFault	src/arch/mips/faults.hh	/^class CoprocessorUnusableFault : public MipsFault<CoprocessorUnusableFault>$/;"	c	namespace:MipsISA
CopyEngine	src/dev/CopyEngine.py	/^class CopyEngine(PciDevice):$/;"	c
CopyEngine	src/dev/copy_engine.cc	/^CopyEngine::CopyEngine(const Params *p)$/;"	f	class:CopyEngine
CopyEngine	src/dev/copy_engine.hh	/^class CopyEngine : public PciDevice$/;"	c
CopyEngineChannel	src/dev/copy_engine.cc	/^CopyEngine::CopyEngineChannel::CopyEngineChannel(CopyEngine *_ce, int cid)$/;"	f	class:CopyEngine::CopyEngineChannel
CopyEngineChannel	src/dev/copy_engine.hh	/^    class CopyEngineChannel : public Drainable$/;"	c	class:CopyEngine
CopyEngineReg	src/dev/copy_engine_defs.hh	/^namespace CopyEngineReg {$/;"	n
CopyIn	src/mem/fs_translating_port_proxy.cc	/^CopyIn(ThreadContext *tc, Addr dest, void *source, size_t cplen)$/;"	f
CopyOut	src/mem/fs_translating_port_proxy.cc	/^CopyOut(ThreadContext *tc, void *dest, Addr src, size_t cplen)$/;"	f
CopyStringIn	src/mem/fs_translating_port_proxy.cc	/^CopyStringIn(ThreadContext *tc, char *src, Addr vaddr)$/;"	f
CopyStringOut	src/mem/fs_translating_port_proxy.cc	/^CopyStringOut(ThreadContext *tc, char *dst, Addr vaddr, size_t maxlen)$/;"	f
CoreSpecific	src/arch/mips/types.hh	/^    CoreSpecific()$/;"	f	struct:MipsISA::CoreSpecific
CoreSpecific	src/arch/mips/types.hh	/^struct CoreSpecific {$/;"	s	namespace:MipsISA
CoreTag	src/arch/arm/linux/atag.hh	/^    CoreTag   = 0x54410001,$/;"	e	enum:__anon5
CountedDrainEvent	src/sim/sim_events.hh	/^class CountedDrainEvent : public Event$/;"	c
CountedExitEvent	src/sim/sim_events.cc	/^CountedExitEvent::CountedExitEvent(const std::string &_cause, int &counter)$/;"	f	class:CountedExitEvent
CountedExitEvent	src/sim/sim_events.hh	/^class CountedExitEvent : public Event$/;"	c
Counter	src/base/stats/types.hh	/^typedef double Counter;$/;"	t	namespace:Stats
Counter	src/base/types.hh	/^typedef int64_t Counter;$/;"	t
Counter	src/dev/intel_8254_timer.cc	/^Intel8254Timer::Counter::Counter(Intel8254Timer *p,$/;"	f	class:Intel8254Timer::Counter
Counter	src/dev/intel_8254_timer.hh	/^    class Counter$/;"	c	class:Intel8254Timer
Counter	src/python/m5/params.py	/^class Counter(CheckedInt):  cxx_type = 'Counter';  size = 64; unsigned = True$/;"	c
CounterEvent	src/dev/intel_8254_timer.cc	/^Intel8254Timer::Counter::CounterEvent::CounterEvent(Counter* c_ptr)$/;"	f	class:Intel8254Timer::Counter::CounterEvent
CounterEvent	src/dev/intel_8254_timer.hh	/^        class CounterEvent : public Event$/;"	c	class:Intel8254Timer::Counter
CounterLimits	src/base/stats/types.hh	/^typedef std::numeric_limits<Counter> CounterLimits;$/;"	t	namespace:Stats
CowDiskCallback	src/dev/disk_image.cc	/^    CowDiskCallback(CowDiskImage *i) : image(i) {}$/;"	f	class:CowDiskCallback
CowDiskCallback	src/dev/disk_image.cc	/^class CowDiskCallback : public Callback$/;"	c	file:
CowDiskImage	src/dev/DiskImage.py	/^class CowDiskImage(DiskImage):$/;"	c
CowDiskImage	src/dev/disk_image.cc	/^CowDiskImage::CowDiskImage(const Params *p)$/;"	f	class:CowDiskImage
CowDiskImage	src/dev/disk_image.hh	/^class CowDiskImage : public DiskImage$/;"	c
CpsrMaskQ	src/arch/arm/miscregs.hh	/^    static const uint32_t CpsrMaskQ       = 0x08000000;$/;"	m	namespace:ArmISA
CpuEvent	src/cpu/cpuevent.hh	/^    CpuEvent(ThreadContext *_tc, Priority p = Default_Pri)$/;"	f	class:CpuEvent
CpuEvent	src/cpu/cpuevent.hh	/^class CpuEvent : public Event$/;"	c
CpuEventList	src/cpu/cpuevent.hh	/^    typedef std::vector<CpuEvent *> CpuEventList;$/;"	t	class:CpuEvent
CpuEventWrapper	src/cpu/cpuevent.hh	/^    CpuEventWrapper(T *obj, ThreadContext *_tc, Priority p = Default_Pri)$/;"	f	class:CpuEventWrapper
CpuEventWrapper	src/cpu/cpuevent.hh	/^class CpuEventWrapper : public CpuEvent$/;"	c
CpuID	src/dev/arm/vgic.hh	/^    Bitfield<12,10> CpuID;$/;"	m	class:VGic
CpuLocalTimer	src/dev/arm/RealView.py	/^class CpuLocalTimer(BasicPioDevice):$/;"	c
CpuLocalTimer	src/dev/arm/timer_cpulocal.cc	/^CpuLocalTimer::CpuLocalTimer(Params *p)$/;"	f	class:CpuLocalTimer
CpuLocalTimer	src/dev/arm/timer_cpulocal.hh	/^class CpuLocalTimer : public BasicPioDevice$/;"	c
CpuMondo	src/arch/sparc/faults.hh	/^class CpuMondo : public SparcFault<CpuMondo> {};$/;"	c	namespace:SparcISA
CpuPort	src/cpu/testers/directedtest/RubyDirectedTester.hh	/^        CpuPort(const std::string &_name, RubyDirectedTester *_tester,$/;"	f	class:RubyDirectedTester::CpuPort
CpuPort	src/cpu/testers/directedtest/RubyDirectedTester.hh	/^    class CpuPort : public MasterPort$/;"	c	class:RubyDirectedTester
CpuPort	src/cpu/testers/memtest/memtest.hh	/^        CpuPort(const std::string &_name, MemTest *_memtest)$/;"	f	class:MemTest::CpuPort
CpuPort	src/cpu/testers/memtest/memtest.hh	/^    class CpuPort : public MasterPort$/;"	c	class:MemTest
CpuPort	src/cpu/testers/networktest/networktest.hh	/^        CpuPort(const std::string &_name, NetworkTest *_networktest)$/;"	f	class:NetworkTest::CpuPort
CpuPort	src/cpu/testers/networktest/networktest.hh	/^    class CpuPort : public MasterPort$/;"	c	class:NetworkTest
CpuPort	src/cpu/testers/rubytest/RubyTester.hh	/^        CpuPort(const std::string &_name, RubyTester *_tester, PortID _id)$/;"	f	class:RubyTester::CpuPort
CpuPort	src/cpu/testers/rubytest/RubyTester.hh	/^    class CpuPort : public MasterPort$/;"	c	class:RubyTester
CpuPortIter	src/mem/ruby/system/RubyPort.hh	/^    typedef std::vector<MemSlavePort *>::iterator CpuPortIter;$/;"	t	class:RubyPort
CpuSidePort	src/mem/cache/cache.hh	/^    class CpuSidePort : public CacheSlavePort$/;"	c	class:Cache
CpuSidePort	src/mem/cache/cache_impl.hh	/^CpuSidePort::CpuSidePort(const std::string &_name, Cache<TagStore> *_cache,$/;"	f	class:Cache::CpuSidePort
CpuidResult	src/arch/x86/cpuid.hh	/^        CpuidResult()$/;"	f	struct:X86ISA::CpuidResult
CpuidResult	src/arch/x86/cpuid.hh	/^        CpuidResult(uint64_t _rax, uint64_t _rbx,$/;"	f	struct:X86ISA::CpuidResult
CpuidResult	src/arch/x86/cpuid.hh	/^    struct CpuidResult$/;"	s	namespace:X86ISA
CreateFunc	src/sim/serialize.hh	/^    typedef Serializable *(*CreateFunc)(Checkpoint *cp,$/;"	t	class:SerializableClass
CreditLink_d	src/mem/ruby/network/garnet/fixed-pipeline/CreditLink_d.hh	/^    CreditLink_d(const Params *p) : NetworkLink_d(p) {}$/;"	f	class:CreditLink_d
CreditLink_d	src/mem/ruby/network/garnet/fixed-pipeline/CreditLink_d.hh	/^class CreditLink_d : public NetworkLink_d$/;"	c
CreditLink_d	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.py	/^class CreditLink_d(NetworkLink_d):$/;"	c
Crossbar	src/mem/ruby/network/orion/Crossbar/Crossbar.cc	/^Crossbar::Crossbar($/;"	f	class:Crossbar
Crossbar	src/mem/ruby/network/orion/Crossbar/Crossbar.hh	/^class Crossbar$/;"	c
CrossbarModel	src/mem/ruby/network/orion/Crossbar/Crossbar.hh	/^    enum CrossbarModel$/;"	g	class:Crossbar
CrsrImage	src/dev/arm/pl111.hh	/^    static const int CrsrImage        = 0x800;$/;"	m	class:Pl111
CrsrImageSize	src/dev/arm/pl111.hh	/^    static const int CrsrImageSize    = 256;$/;"	m	class:Pl111
CurNextInfo	src/mem/ruby/system/SparseMemory.hh	/^struct CurNextInfo$/;"	s
CurThreadInfoImplemented	src/arch/alpha/isa_traits.hh	/^const bool CurThreadInfoImplemented = true;$/;"	m	namespace:AlphaISA
CurThreadInfoImplemented	src/arch/arm/isa_traits.hh	/^    const bool CurThreadInfoImplemented = false;$/;"	m	namespace:ArmISA
CurThreadInfoImplemented	src/arch/mips/isa_traits.hh	/^const bool CurThreadInfoImplemented = false;$/;"	m	namespace:MipsISA
CurThreadInfoImplemented	src/arch/power/isa_traits.hh	/^const bool CurThreadInfoImplemented = false;$/;"	m	namespace:PowerISA
CurThreadInfoImplemented	src/arch/sparc/isa_traits.hh	/^const bool CurThreadInfoImplemented = false;$/;"	m	namespace:SparcISA
CurThreadInfoImplemented	src/arch/x86/isa_traits.hh	/^    const bool CurThreadInfoImplemented = false;$/;"	m	namespace:X86ISA
CurThreadInfoReg	src/arch/alpha/isa_traits.hh	/^const int CurThreadInfoReg = AlphaISA::IPR_PALtemp23;$/;"	m	namespace:AlphaISA
CurThreadInfoReg	src/arch/arm/isa_traits.hh	/^    const int CurThreadInfoReg = -1;$/;"	m	namespace:ArmISA
CurThreadInfoReg	src/arch/mips/isa_traits.hh	/^const int CurThreadInfoReg = -1;$/;"	m	namespace:MipsISA
CurThreadInfoReg	src/arch/power/isa_traits.hh	/^const int CurThreadInfoReg = -1;$/;"	m	namespace:PowerISA
CurThreadInfoReg	src/arch/sparc/isa_traits.hh	/^const int CurThreadInfoReg = -1;$/;"	m	namespace:SparcISA
CurThreadInfoReg	src/arch/x86/isa_traits.hh	/^    const int CurThreadInfoReg = -1;$/;"	m	namespace:X86ISA
CurrentGlobalsOffset	src/arch/sparc/isa.hh	/^        CurrentGlobalsOffset = 0,$/;"	e	enum:SparcISA::ISA::InstIntRegOffsets
CurrentReg	src/dev/arm/timer_sp804.hh	/^            CurrentReg = 0x04,$/;"	e	enum:Sp804::Timer::__anon69
CurrentWindowOffset	src/arch/sparc/isa.hh	/^        CurrentWindowOffset = CurrentGlobalsOffset + NumGlobalRegs,$/;"	e	enum:SparcISA::ISA::InstIntRegOffsets
CvZF	src/arch/x86/insts/microop.hh	/^            CvZF,$/;"	e	enum:X86ISA::ConditionTests::CondTest
Cycles	src/base/types.hh	/^    Cycles() : c(0) { }$/;"	f	class:Cycles
Cycles	src/base/types.hh	/^    explicit Cycles(uint64_t _c) : c(_c) { }$/;"	f	class:Cycles
Cycles	src/base/types.hh	/^class Cycles$/;"	c
Cycles	src/python/m5/params.py	/^        from m5.internal.core import Cycles$/;"	i
Cycles	src/python/m5/params.py	/^class Cycles(CheckedInt):$/;"	c
D0	src/arch/mips/pagetable.hh	/^    bool D0;    \/\/ Even entry Dirty Bit$/;"	m	struct:MipsISA::PTE
D0	src/arch/power/pagetable.hh	/^    bool D0;   \/\/ Even entry Dirty Bit$/;"	m	struct:PowerISA::PTE
D1	src/arch/mips/pagetable.hh	/^    bool D1;    \/\/ Odd entry Dirty Bit$/;"	m	struct:MipsISA::PTE
D1	src/arch/power/pagetable.hh	/^    bool D1;   \/\/ Odd entry Dirty Bit$/;"	m	struct:PowerISA::PTE
DATA_OFFSET	src/dev/ide_disk.hh	/^#define DATA_OFFSET /;"	d
DATA_VNET_	src/mem/ruby/network/garnet/NetworkHeader.hh	/^enum VNET_type {CTRL_VNET_, DATA_VNET_, NULL_VNET_, NUM_VNET_TYPE_};$/;"	e	enum:VNET_type
DCache	src/cpu/inorder/pipeline_traits.5stage.hh	/^       DCache,$/;"	e	enum:ThePipeline::ResourceList
DCache	src/cpu/inorder/pipeline_traits.9stage.hh	/^       DCache,$/;"	e	enum:ThePipeline::ResourceList
DCache	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^       DCache,$/;"	e	enum:ThePipeline::ResourceList
DCache	src/cpu/inorder/pipeline_traits.hh	/^       DCache,$/;"	e	enum:ThePipeline::ResourceId
DCacheCompletionEvent	src/cpu/ozone/back_end.hh	/^    class DCacheCompletionEvent : public Event$/;"	c	class:BackEnd
DCacheCompletionEvent	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::DCacheCompletionEvent::DCacheCompletionEvent(BackEnd *_be)$/;"	f	class:BackEnd::DCacheCompletionEvent
DCacheCompletionEvent	src/cpu/ozone/inorder_back_end.hh	/^    class DCacheCompletionEvent : public Event$/;"	c	class:InorderBackEnd
DCacheCompletionEvent	src/cpu/ozone/inorder_back_end_impl.hh	/^InorderBackEnd<Impl>::DCacheCompletionEvent::DCacheCompletionEvent($/;"	f	class:InorderBackEnd::DCacheCompletionEvent
DDR3_1333_x64_DRAMSim2	src/mem/DRAMCtrl.py	/^class DDR3_1333_x64_DRAMSim2(DRAMCtrl):$/;"	c
DDR3_1600_x64	src/mem/DRAMCtrl.py	/^class DDR3_1600_x64(DRAMCtrl):$/;"	c
DDUMP	src/base/trace.hh	/^#define DDUMP(/;"	d
DDUMPN	src/base/trace.hh	/^#define DDUMPN(/;"	d
DEBUG	src/mem/dramsim2_wrapper.cc	/^#undef DEBUG$/;"	d	file:
DEBit	src/arch/x86/regs/misc.hh	/^        DEBit = 1 << 1,$/;"	e	enum:X86ISA::X87StatusBit
DESC_CTRL_CP_STS	src/dev/copy_engine_defs.hh	/^const uint32_t DESC_CTRL_CP_STS     = 0x00000008;$/;"	m	namespace:CopyEngineReg
DESC_CTRL_DST_SN	src/dev/copy_engine_defs.hh	/^const uint32_t DESC_CTRL_DST_SN     = 0x00000004;$/;"	m	namespace:CopyEngineReg
DESC_CTRL_FRAME	src/dev/copy_engine_defs.hh	/^const uint32_t DESC_CTRL_FRAME      = 0x00000010;$/;"	m	namespace:CopyEngineReg
DESC_CTRL_INT_GEN	src/dev/copy_engine_defs.hh	/^const uint32_t DESC_CTRL_INT_GEN    = 0x00000001;$/;"	m	namespace:CopyEngineReg
DESC_CTRL_NULL	src/dev/copy_engine_defs.hh	/^const uint32_t DESC_CTRL_NULL       = 0x00000020;$/;"	m	namespace:CopyEngineReg
DESC_CTRL_SRC_SN	src/dev/copy_engine_defs.hh	/^const uint32_t DESC_CTRL_SRC_SN     = 0x00000002;$/;"	m	namespace:CopyEngineReg
DEV	src/python/m5/util/dot_writer.py	/^    DEV = 4$/;"	v	class:NodeType
DEV0	src/dev/ide_disk.hh	/^#define DEV0 /;"	d
DEV1	src/dev/ide_disk.hh	/^#define DEV1 /;"	d
DFBit	src/arch/x86/regs/misc.hh	/^        DFBit = 1 << 10,$/;"	e	enum:X86ISA::CondFlagBit
DIST_SIZE	src/dev/arm/gic_pl390.hh	/^    static const int DIST_SIZE  = 0xfff;$/;"	m	class:Pl390
DLAB	src/dev/uart8250.hh	/^    uint8_t IER, DLAB, LCR, MCR;$/;"	m	class:Uart8250
DLT_EN10MB	src/dev/etherdump.cc	/^#define DLT_EN10MB /;"	d	file:
DMA	src/mem/request.hh	/^        DMA = 1023, \/* Mostly Table Walker *\/$/;"	e	enum:ContextSwitchTaskId::TaskId
DMARead	src/dev/copy_engine.hh	/^            DMARead,$/;"	e	enum:CopyEngine::CopyEngineChannel::ChannelState
DMARequest	src/mem/ruby/system/DMASequencer.hh	/^struct DMARequest$/;"	s
DMASequencer	src/mem/ruby/system/DMASequencer.cc	/^DMASequencer::DMASequencer(const Params *p)$/;"	f	class:DMASequencer
DMASequencer	src/mem/ruby/system/DMASequencer.hh	/^class DMASequencer : public RubyPort$/;"	c
DMASequencer	src/mem/ruby/system/Sequencer.py	/^class DMASequencer(RubyPort):$/;"	c
DMAWrite	src/dev/copy_engine.hh	/^            DMAWrite,$/;"	e	enum:CopyEngine::CopyEngineChannel::ChannelState
DMA_ADDR_MASK	src/dev/alpha/tsunami_pchip.cc	/^#define DMA_ADDR_MASK /;"	d	file:
DMA_ADDR_MASK	src/dev/mips/malta_pchip.cc	/^#define DMA_ADDR_MASK /;"	d	file:
DMA_BACKOFF_PERIOD	src/dev/ide_disk.hh	/^#define DMA_BACKOFF_PERIOD /;"	d
DNR	src/base/loader/coff_sym.h	/^} DNR, *pDNR;$/;"	t	typeref:struct:__anon43
DOUBLE_TO_LONG	src/arch/arm/types.hh	/^        DOUBLE_TO_LONG,$/;"	e	enum:ArmISA::ConvertType
DOUBLE_TO_LONG	src/arch/mips/types.hh	/^    DOUBLE_TO_LONG,$/;"	e	enum:MipsISA::ConvertType
DOUBLE_TO_SINGLE	src/arch/arm/types.hh	/^        DOUBLE_TO_SINGLE,$/;"	e	enum:ArmISA::ConvertType
DOUBLE_TO_SINGLE	src/arch/mips/types.hh	/^    DOUBLE_TO_SINGLE,$/;"	e	enum:MipsISA::ConvertType
DOUBLE_TO_WORD	src/arch/arm/types.hh	/^        DOUBLE_TO_WORD,$/;"	e	enum:ArmISA::ConvertType
DOUBLE_TO_WORD	src/arch/mips/types.hh	/^    DOUBLE_TO_WORD,$/;"	e	enum:MipsISA::ConvertType
DPRINTF	src/base/trace.hh	/^#define DPRINTF(/;"	d
DPRINTFN	src/base/trace.hh	/^#define DPRINTFN(/;"	d
DPRINTFNR	src/base/trace.hh	/^#define DPRINTFNR(/;"	d
DPRINTFR	src/base/trace.hh	/^#define DPRINTFR(/;"	d
DPRINTFS	src/base/trace.hh	/^#define DPRINTFS(/;"	d
DRAMCtrl	src/mem/DRAMCtrl.py	/^class DRAMCtrl(AbstractMemory):$/;"	c
DRAMCtrl	src/mem/dram_ctrl.cc	/^DRAMCtrl::DRAMCtrl(const DRAMCtrlParams* p) :$/;"	f	class:DRAMCtrl
DRAMCtrl	src/mem/dram_ctrl.hh	/^class DRAMCtrl : public AbstractMemory$/;"	c
DRAMPacket	src/mem/dram_ctrl.hh	/^        DRAMPacket(PacketPtr _pkt, bool is_read, uint8_t _rank, uint8_t _bank,$/;"	f	class:DRAMCtrl::DRAMPacket
DRAMPacket	src/mem/dram_ctrl.hh	/^    class DRAMPacket {$/;"	c	class:DRAMCtrl
DRAMSim	src/mem/dramsim2_wrapper.hh	/^namespace DRAMSim {$/;"	n
DRAMSim2	src/mem/DRAMSim2.py	/^class DRAMSim2(AbstractMemory):$/;"	c
DRAMSim2	src/mem/dramsim2.cc	/^DRAMSim2::DRAMSim2(const Params* p) :$/;"	f	class:DRAMSim2
DRAMSim2	src/mem/dramsim2.hh	/^class DRAMSim2 : public AbstractMemory$/;"	c
DRAMSim2Wrapper	src/mem/dramsim2_wrapper.cc	/^DRAMSim2Wrapper::DRAMSim2Wrapper(const std::string& config_file,$/;"	f	class:DRAMSim2Wrapper
DRAMSim2Wrapper	src/mem/dramsim2_wrapper.hh	/^class DRAMSim2Wrapper$/;"	c
DRIVE_LBA_BIT	src/dev/ide_disk.hh	/^#define DRIVE_LBA_BIT /;"	d
DRIVE_OFFSET	src/dev/ide_disk.hh	/^#define DRIVE_OFFSET /;"	d
DS	src/arch/x86/decoder_tables.cc	/^    const uint8_t DS = DSOverride;$/;"	m	namespace:X86ISA	file:
DSOverride	src/arch/x86/types.hh	/^        DSOverride,$/;"	e	enum:X86ISA::Prefixes
DSP_C	src/arch/mips/dsp.hh	/^    DSP_C,         \/\/ carry bit$/;"	e	enum:MipsISA::__anon14
DSP_CCOND	src/arch/mips/dsp.hh	/^    DSP_CCOND,     \/\/ condition code$/;"	e	enum:MipsISA::__anon14
DSP_CTL_MASK	src/arch/mips/dsp.hh	/^const uint32_t DSP_CTL_MASK[DSP_NUM_FIELDS] =$/;"	m	namespace:MipsISA
DSP_CTL_POS	src/arch/mips/dsp.hh	/^const uint32_t DSP_CTL_POS[DSP_NUM_FIELDS] = { 0, 7, 13, 16, 24, 14 };$/;"	m	namespace:MipsISA
DSP_EFI	src/arch/mips/dsp.hh	/^    DSP_EFI,       \/\/ extract fail indicator bit$/;"	e	enum:MipsISA::__anon14
DSP_NUM_FIELDS	src/arch/mips/dsp.hh	/^    DSP_NUM_FIELDS$/;"	e	enum:MipsISA::__anon14
DSP_OUFLAG	src/arch/mips/dsp.hh	/^    DSP_OUFLAG,    \/\/ overflow-underflow flag$/;"	e	enum:MipsISA::__anon14
DSP_POS	src/arch/mips/dsp.hh	/^    DSP_POS,       \/\/ insertion bitfield position$/;"	e	enum:MipsISA::__anon14
DSP_SCOUNT	src/arch/mips/dsp.hh	/^    DSP_SCOUNT,    \/\/ insertion bitfield size$/;"	e	enum:MipsISA::__anon14
DTBWaitResponse	src/cpu/simple/base.hh	/^        DTBWaitResponse,$/;"	e	enum:BaseSimpleCPU::Status
DTB_ASN_ASN	src/arch/alpha/ev5.hh	/^inline int DTB_ASN_ASN(uint64_t reg) { return reg >> 57 & AsnMask; }$/;"	f	namespace:AlphaISA
DTB_CM_CM	src/arch/alpha/ev5.hh	/^inline uint64_t DTB_CM_CM(uint64_t reg) { return reg >> 3 & 0x3; }$/;"	f	namespace:AlphaISA
DTB_PTE_ASMA	src/arch/alpha/ev5.hh	/^inline int DTB_PTE_ASMA(uint64_t reg) { return reg >> 4 & 0x1; }$/;"	f	namespace:AlphaISA
DTB_PTE_FONR	src/arch/alpha/ev5.hh	/^inline int DTB_PTE_FONR(uint64_t reg) { return reg >> 1 & 0x1; }$/;"	f	namespace:AlphaISA
DTB_PTE_FONW	src/arch/alpha/ev5.hh	/^inline int DTB_PTE_FONW(uint64_t reg) { return reg >> 2 & 0x1; }$/;"	f	namespace:AlphaISA
DTB_PTE_GH	src/arch/alpha/ev5.hh	/^inline int DTB_PTE_GH(uint64_t reg) { return reg >> 5 & 0x3; }$/;"	f	namespace:AlphaISA
DTB_PTE_PPN	src/arch/alpha/ev5.hh	/^inline Addr DTB_PTE_PPN(uint64_t reg)$/;"	f	namespace:AlphaISA
DTB_PTE_XRE	src/arch/alpha/ev5.hh	/^inline int DTB_PTE_XRE(uint64_t reg) { return reg >> 8 & 0xf; }$/;"	f	namespace:AlphaISA
DTB_PTE_XWE	src/arch/alpha/ev5.hh	/^inline int DTB_PTE_XWE(uint64_t reg) { return reg >> 12 & 0xf; }$/;"	f	namespace:AlphaISA
DTLB	src/cpu/inorder/pipeline_traits.5stage.hh	/^       DTLB,$/;"	e	enum:ThePipeline::ResourceList
DTLB	src/cpu/inorder/pipeline_traits.9stage.hh	/^       DTLB,$/;"	e	enum:ThePipeline::ResourceList
DTLB	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^       DTLB,$/;"	e	enum:ThePipeline::ResourceList
DTRACE	src/base/trace.hh	/^#define DTRACE(/;"	d
DTickEvent	src/cpu/simple/timing.hh	/^            DTickEvent(TimingSimpleCPU *_cpu)$/;"	f	struct:TimingSimpleCPU::DcachePort::DTickEvent
DTickEvent	src/cpu/simple/timing.hh	/^        struct DTickEvent : public TickEvent$/;"	s	class:TimingSimpleCPU::DcachePort
DW	src/arch/x86/decoder_tables.cc	/^        DW = DWordImm,$/;"	e	enum:X86ISA::SizeType	file:
DWIDTH_DSPACE	src/mem/ruby/network/orion/Wire.hh	/^      DWIDTH_DSPACE$/;"	e	enum:Wire::WidthSpacingModel
DWIDTH_SSPACE	src/mem/ruby/network/orion/Wire.hh	/^      DWIDTH_SSPACE,$/;"	e	enum:Wire::WidthSpacingModel
DWordImm	src/arch/x86/decoder_tables.cc	/^        DWordImm,$/;"	e	enum:X86ISA::SizeType	file:
DYNAMIC_DATA	src/mem/packet.hh	/^    static const FlagsType DYNAMIC_DATA           = 0x00002000;$/;"	m	class:Packet
Dah	src/arch/micro_asm_test.py	/^class Dah(object):$/;"	c
Data	src/python/m5/util/jobfile.py	/^class Data(object):$/;"	c
Data	src/sim/arguments.hh	/^        Data(){}$/;"	f	class:Arguments::Data
Data	src/sim/arguments.hh	/^    class Data : public RefCounted$/;"	c	class:Arguments
DataAbort	src/arch/arm/faults.hh	/^    DataAbort(Addr _addr, TlbEntry::DomainType _domain, bool _write, uint8_t _source,$/;"	f	class:ArmISA::DataAbort
DataAbort	src/arch/arm/faults.hh	/^class DataAbort : public AbortFault<DataAbort>$/;"	c	namespace:ArmISA
DataAccessError	src/arch/sparc/faults.hh	/^class DataAccessError : public SparcFault<DataAccessError> {};$/;"	c	namespace:SparcISA
DataAccessException	src/arch/sparc/faults.hh	/^class DataAccessException : public SparcFault<DataAccessException> {};$/;"	c	namespace:SparcISA
DataAccessProtection	src/arch/sparc/faults.hh	/^class DataAccessProtection : public SparcFault<DataAccessProtection> {};$/;"	c	namespace:SparcISA
DataBlock	src/mem/ruby/common/DataBlock.cc	/^DataBlock::DataBlock(const DataBlock &cp)$/;"	f	class:DataBlock
DataBlock	src/mem/ruby/common/DataBlock.hh	/^    DataBlock()$/;"	f	class:DataBlock
DataBlock	src/mem/ruby/common/DataBlock.hh	/^class DataBlock$/;"	c
DataDouble	src/sim/insttracer.hh	/^        DataDouble = 3$/;"	e	enum:Trace::InstRecord::__anon105
DataEvent	src/base/vnc/vncserver.cc	/^VncServer::DataEvent::DataEvent(VncServer *vs, int fd, int e)$/;"	f	class:VncServer::DataEvent
DataEvent	src/base/vnc/vncserver.hh	/^    class DataEvent: public PollEvent$/;"	c	class:VncServer
DataEvent	src/dev/terminal.cc	/^Terminal::DataEvent::DataEvent(Terminal *t, int fd, int e)$/;"	f	class:Terminal::DataEvent
DataEvent	src/dev/terminal.hh	/^    class DataEvent : public PollEvent$/;"	c	class:Terminal
DataImmOp	src/arch/arm/insts/pred_inst.hh	/^    DataImmOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::DataImmOp
DataImmOp	src/arch/arm/insts/pred_inst.hh	/^class DataImmOp : public PredOp$/;"	c	namespace:ArmISA
DataInt16	src/sim/insttracer.hh	/^        DataInt16 = 2,$/;"	e	enum:Trace::InstRecord::__anon105
DataInt32	src/sim/insttracer.hh	/^        DataInt32 = 4,$/;"	e	enum:Trace::InstRecord::__anon105
DataInt64	src/sim/insttracer.hh	/^        DataInt64 = 8,$/;"	e	enum:Trace::InstRecord::__anon105
DataInt8	src/sim/insttracer.hh	/^        DataInt8 = 1,   \/\/ set to equal number of bytes$/;"	e	enum:Trace::InstRecord::__anon105
DataInvalid	src/sim/insttracer.hh	/^        DataInvalid = 0,$/;"	e	enum:Trace::InstRecord::__anon105
DataInvalidTSBEntry	src/arch/sparc/faults.hh	/^class DataInvalidTSBEntry : public SparcFault<DataInvalidTSBEntry> {};$/;"	c	namespace:SparcISA
DataMember	src/mem/slicc/symbols/Type.py	/^class DataMember(PairContainer):$/;"	c
DataReadLookup	src/cpu/inorder/resources/tlb_unit.hh	/^        DataReadLookup,$/;"	e	enum:TLBUnit::TLBCommand
DataRealTranslationMiss	src/arch/sparc/faults.hh	/^class DataRealTranslationMiss : public SparcFault<DataRealTranslationMiss> {};$/;"	c	namespace:SparcISA
DataReg	src/dev/arm/rtc_pl031.hh	/^        DataReg    = 0x00,$/;"	e	enum:PL031::__anon66
DataRegOp	src/arch/arm/insts/pred_inst.hh	/^    DataRegOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::DataRegOp
DataRegOp	src/arch/arm/insts/pred_inst.hh	/^class DataRegOp : public PredOp$/;"	c	namespace:ArmISA
DataRegRegOp	src/arch/arm/insts/pred_inst.hh	/^    DataRegRegOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::DataRegRegOp
DataRegRegOp	src/arch/arm/insts/pred_inst.hh	/^class DataRegRegOp : public PredOp$/;"	c	namespace:ArmISA
DataTranslation	src/cpu/translation.hh	/^    DataTranslation(ExecContextPtr _xc, WholeTranslationState* _state)$/;"	f	class:DataTranslation
DataTranslation	src/cpu/translation.hh	/^    DataTranslation(ExecContextPtr _xc, WholeTranslationState* _state,$/;"	f	class:DataTranslation
DataTranslation	src/cpu/translation.hh	/^class DataTranslation : public BaseTLB::Translation$/;"	c
DataWrap	src/base/statistics.hh	/^    DataWrap()$/;"	f	class:Stats::DataWrap
DataWrap	src/base/statistics.hh	/^    DataWrap(const DataWrap &stat) {}$/;"	f	class:Stats::DataWrap
DataWrap	src/base/statistics.hh	/^class DataWrap : public InfoAccess$/;"	c	namespace:Stats
DataWrapVec	src/base/statistics.hh	/^    DataWrapVec()$/;"	f	class:Stats::DataWrapVec
DataWrapVec	src/base/statistics.hh	/^    DataWrapVec(const DataWrapVec &ref)$/;"	f	class:Stats::DataWrapVec
DataWrapVec	src/base/statistics.hh	/^class DataWrapVec : public DataWrap<Derived, InfoProxyType>$/;"	c	namespace:Stats
DataWrapVec2d	src/base/statistics.hh	/^class DataWrapVec2d : public DataWrapVec<Derived, InfoProxyType>$/;"	c	namespace:Stats
DataWriteLookup	src/cpu/inorder/resources/tlb_unit.hh	/^        DataWriteLookup$/;"	e	enum:TLBUnit::TLBCommand
DataX1Reg2ImmOp	src/arch/arm/insts/data64.hh	/^    DataX1Reg2ImmOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::DataX1Reg2ImmOp
DataX1Reg2ImmOp	src/arch/arm/insts/data64.hh	/^class DataX1Reg2ImmOp : public ArmStaticInst$/;"	c	namespace:ArmISA
DataX1RegImmOp	src/arch/arm/insts/data64.hh	/^    DataX1RegImmOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::DataX1RegImmOp
DataX1RegImmOp	src/arch/arm/insts/data64.hh	/^class DataX1RegImmOp : public ArmStaticInst$/;"	c	namespace:ArmISA
DataX1RegOp	src/arch/arm/insts/data64.hh	/^    DataX1RegOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::DataX1RegOp
DataX1RegOp	src/arch/arm/insts/data64.hh	/^class DataX1RegOp : public ArmStaticInst$/;"	c	namespace:ArmISA
DataX2RegImmOp	src/arch/arm/insts/data64.hh	/^    DataX2RegImmOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::DataX2RegImmOp
DataX2RegImmOp	src/arch/arm/insts/data64.hh	/^class DataX2RegImmOp : public ArmStaticInst$/;"	c	namespace:ArmISA
DataX2RegOp	src/arch/arm/insts/data64.hh	/^    DataX2RegOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::DataX2RegOp
DataX2RegOp	src/arch/arm/insts/data64.hh	/^class DataX2RegOp : public ArmStaticInst$/;"	c	namespace:ArmISA
DataX3RegOp	src/arch/arm/insts/data64.hh	/^    DataX3RegOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::DataX3RegOp
DataX3RegOp	src/arch/arm/insts/data64.hh	/^class DataX3RegOp : public ArmStaticInst$/;"	c	namespace:ArmISA
DataXCondCompImmOp	src/arch/arm/insts/data64.hh	/^    DataXCondCompImmOp(const char *mnem, ExtMachInst _machInst,$/;"	f	class:ArmISA::DataXCondCompImmOp
DataXCondCompImmOp	src/arch/arm/insts/data64.hh	/^class DataXCondCompImmOp : public ArmStaticInst$/;"	c	namespace:ArmISA
DataXCondCompRegOp	src/arch/arm/insts/data64.hh	/^    DataXCondCompRegOp(const char *mnem, ExtMachInst _machInst,$/;"	f	class:ArmISA::DataXCondCompRegOp
DataXCondCompRegOp	src/arch/arm/insts/data64.hh	/^class DataXCondCompRegOp : public ArmStaticInst$/;"	c	namespace:ArmISA
DataXCondSelOp	src/arch/arm/insts/data64.hh	/^    DataXCondSelOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::DataXCondSelOp
DataXCondSelOp	src/arch/arm/insts/data64.hh	/^class DataXCondSelOp : public ArmStaticInst$/;"	c	namespace:ArmISA
DataXERegOp	src/arch/arm/insts/data64.hh	/^    DataXERegOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::DataXERegOp
DataXERegOp	src/arch/arm/insts/data64.hh	/^class DataXERegOp : public ArmStaticInst$/;"	c	namespace:ArmISA
DataXImmOnlyOp	src/arch/arm/insts/data64.hh	/^    DataXImmOnlyOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::DataXImmOnlyOp
DataXImmOnlyOp	src/arch/arm/insts/data64.hh	/^class DataXImmOnlyOp : public ArmStaticInst$/;"	c	namespace:ArmISA
DataXImmOp	src/arch/arm/insts/data64.hh	/^    DataXImmOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::DataXImmOp
DataXImmOp	src/arch/arm/insts/data64.hh	/^class DataXImmOp : public ArmStaticInst$/;"	c	namespace:ArmISA
DataXSRegOp	src/arch/arm/insts/data64.hh	/^    DataXSRegOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::DataXSRegOp
DataXSRegOp	src/arch/arm/insts/data64.hh	/^class DataXSRegOp : public ArmStaticInst$/;"	c	namespace:ArmISA
Data_Ready_INTRQ_In	src/dev/ide_disk.hh	/^    Data_Ready_INTRQ_In,$/;"	e	enum:DevState
Data_Ready_INTRQ_Out	src/dev/ide_disk.hh	/^    Data_Ready_INTRQ_Out,$/;"	e	enum:DevState
DcacheMissComplete	src/cpu/ozone/back_end.hh	/^        DcacheMissComplete,$/;"	e	enum:BackEnd::Status
DcacheMissComplete	src/cpu/ozone/inorder_back_end.hh	/^        DcacheMissComplete,$/;"	e	enum:InorderBackEnd::Status
DcacheMissComplete	src/cpu/ozone/lw_back_end.hh	/^        DcacheMissComplete,$/;"	e	enum:LWBackEnd::Status
DcacheMissLoadStall	src/cpu/ozone/inorder_back_end.hh	/^        DcacheMissLoadStall,$/;"	e	enum:InorderBackEnd::Status
DcacheMissStall	src/cpu/ozone/back_end.hh	/^        DcacheMissStall,$/;"	e	enum:BackEnd::Status
DcacheMissStall	src/cpu/ozone/lsq_unit.hh	/^        DcacheMissStall,$/;"	e	enum:OzoneLSQ::Status
DcacheMissStall	src/cpu/ozone/lw_back_end.hh	/^        DcacheMissStall,$/;"	e	enum:LWBackEnd::Status
DcacheMissStall	src/cpu/ozone/lw_lsq.hh	/^        DcacheMissStall,$/;"	e	enum:OzoneLWLSQ::Status
DcacheMissStoreStall	src/cpu/ozone/inorder_back_end.hh	/^        DcacheMissStoreStall,$/;"	e	enum:InorderBackEnd::Status
DcacheMissSwitch	src/cpu/ozone/lsq_unit.hh	/^        DcacheMissSwitch$/;"	e	enum:OzoneLSQ::Status
DcacheMissSwitch	src/cpu/ozone/lw_lsq.hh	/^        DcacheMissSwitch$/;"	e	enum:OzoneLWLSQ::Status
DcachePort	src/cpu/o3/cpu.hh	/^        DcachePort(LSQ<Impl> *_lsq, FullO3CPU<Impl>* _cpu)$/;"	f	class:FullO3CPU::DcachePort
DcachePort	src/cpu/o3/cpu.hh	/^    class DcachePort : public MasterPort$/;"	c	class:FullO3CPU
DcachePort	src/cpu/ozone/lw_lsq.hh	/^        DcachePort(OzoneLWLSQ *_lsq)$/;"	f	class:OzoneLWLSQ::DcachePort
DcachePort	src/cpu/ozone/lw_lsq.hh	/^    class DcachePort : public MasterPort$/;"	c	class:OzoneLWLSQ
DcachePort	src/cpu/simple/timing.hh	/^        DcachePort(TimingSimpleCPU *_cpu)$/;"	f	class:TimingSimpleCPU::DcachePort
DcachePort	src/cpu/simple/timing.hh	/^    class DcachePort : public TimingCPUPort$/;"	c	class:TimingSimpleCPU
DcacheRetry	src/cpu/simple/base.hh	/^        DcacheRetry,$/;"	e	enum:BaseSimpleCPU::Status
DcacheWaitResponse	src/cpu/simple/base.hh	/^        DcacheWaitResponse,$/;"	e	enum:BaseSimpleCPU::Status
DcacheWaitSwitch	src/cpu/simple/base.hh	/^        DcacheWaitSwitch,$/;"	e	enum:BaseSimpleCPU::Status
DeactivateThread	src/cpu/inorder/cpu.hh	/^        DeactivateThread,$/;"	e	enum:InOrderCPU::CPUEventType
DeallocateContextEvent	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::DeallocateContextEvent::DeallocateContextEvent()$/;"	f	class:FullO3CPU::DeallocateContextEvent
DeallocateContextEvent	src/cpu/o3/cpu.hh	/^    class DeallocateContextEvent : public Event$/;"	c	class:FullO3CPU
Debug	src/base/debug.cc	/^namespace Debug {$/;"	n	file:
Debug	src/base/debug.hh	/^namespace Debug {$/;"	n
DebugBreakEvent	src/sim/debug.cc	/^DebugBreakEvent::DebugBreakEvent(Tick when)$/;"	f	class:DebugBreakEvent
DebugBreakEvent	src/sim/debug.cc	/^struct DebugBreakEvent : public GlobalEvent$/;"	s	file:
DebugEvent	src/arch/arm/faults.hh	/^        DebugEvent = PermissionLL + 4,$/;"	e	enum:ArmISA::ArmFault::FaultSource
DebugException	src/arch/x86/faults.hh	/^        DebugException() :$/;"	f	class:X86ISA::DebugException
DebugException	src/arch/x86/faults.hh	/^    class DebugException : public X86FaultBase$/;"	c	namespace:X86ISA
DebugFunc	src/arch/generic/debugfaults.hh	/^    enum DebugFunc$/;"	g	class:GenericISA::M5DebugFault
DebugPrintfEvent	src/kern/tru64/tru64_events.hh	/^    DebugPrintfEvent(PCEventQueue *q, const std::string &desc, Addr addr,$/;"	f	class:DebugPrintfEvent
DebugPrintfEvent	src/kern/tru64/tru64_events.hh	/^class DebugPrintfEvent : public PCEvent$/;"	c
DebugPrintfrEvent	src/kern/tru64/tru64_events.hh	/^    DebugPrintfrEvent(PCEventQueue *q, const std::string &desc, Addr addr)$/;"	f	class:DebugPrintfrEvent
DebugPrintfrEvent	src/kern/tru64/tru64_events.hh	/^class DebugPrintfrEvent : public DebugPrintfEvent$/;"	c
DebugPrintkEvent	src/kern/linux/events.hh	/^    DebugPrintkEvent(PCEventQueue *q, const std::string &desc, Addr addr)$/;"	f	class:Linux::DebugPrintkEvent
DebugPrintkEvent	src/kern/linux/events.hh	/^class DebugPrintkEvent : public SkipFuncEvent$/;"	c	namespace:Linux
Debug_Break_Pri	src/sim/eventq.hh	/^    static const Priority Debug_Break_Pri =           -100;$/;"	m	class:EventBase
Debug_Enable_Pri	src/sim/eventq.hh	/^    static const Priority Debug_Enable_Pri =          -101;$/;"	m	class:EventBase
DecModel	src/mem/ruby/network/orion/Buffer/DecoderUnit.hh	/^    enum DecModel$/;"	g	class:DecoderUnit
DeclAST	src/mem/slicc/ast/ActionDeclAST.py	/^from slicc.ast.DeclAST import DeclAST$/;"	i
DeclAST	src/mem/slicc/ast/DeclAST.py	/^class DeclAST(AST):$/;"	c
DeclAST	src/mem/slicc/ast/EnumDeclAST.py	/^from slicc.ast.DeclAST import DeclAST$/;"	i
DeclAST	src/mem/slicc/ast/FuncDeclAST.py	/^from slicc.ast.DeclAST import DeclAST$/;"	i
DeclAST	src/mem/slicc/ast/InPortDeclAST.py	/^from slicc.ast.DeclAST import DeclAST$/;"	i
DeclAST	src/mem/slicc/ast/MachineAST.py	/^from slicc.ast.DeclAST import DeclAST$/;"	i
DeclAST	src/mem/slicc/ast/ObjDeclAST.py	/^from slicc.ast.DeclAST import DeclAST$/;"	i
DeclAST	src/mem/slicc/ast/OutPortDeclAST.py	/^from slicc.ast.DeclAST import DeclAST$/;"	i
DeclAST	src/mem/slicc/ast/StateDeclAST.py	/^from slicc.ast.DeclAST import DeclAST$/;"	i
DeclAST	src/mem/slicc/ast/TransitionDeclAST.py	/^from slicc.ast.DeclAST import DeclAST$/;"	i
DeclAST	src/mem/slicc/ast/TypeDeclAST.py	/^from slicc.ast.DeclAST import DeclAST$/;"	i
DeclListAST	src/mem/slicc/ast/DeclListAST.py	/^class DeclListAST(AST):$/;"	c
Decode	src/cpu/inorder/pipeline_traits.5stage.hh	/^       Decode,$/;"	e	enum:ThePipeline::ResourceList
Decode	src/cpu/inorder/pipeline_traits.9stage.hh	/^       Decode,$/;"	e	enum:ThePipeline::ResourceList
Decode	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^       Decode,$/;"	e	enum:ThePipeline::ResourceList
Decode	src/cpu/inorder/pipeline_traits.hh	/^       Decode,$/;"	e	enum:ThePipeline::ResourceId
Decode	src/cpu/o3/cpu_policy.hh	/^    typedef DefaultDecode<Impl> Decode;$/;"	t	struct:SimpleCPUPolicy
DecodeCache	src/cpu/decode_cache.hh	/^namespace DecodeCache$/;"	n
DecodeIdx	src/cpu/o3/cpu.hh	/^        DecodeIdx,$/;"	e	enum:FullO3CPU::StageIdx
DecodeInst	src/cpu/inorder/resources/decode_unit.hh	/^        DecodeInst$/;"	e	enum:DecodeUnit::Command
DecodePages	src/arch/x86/decoder.hh	/^    typedef DecodeCache::AddrMap<Decoder::InstBytes> DecodePages;$/;"	t	class:X86ISA::Decoder
DecodeStatus	src/cpu/o3/decode.hh	/^    enum DecodeStatus {$/;"	g	class:DefaultDecode
DecodeStruct	src/cpu/o3/cpu.hh	/^    typedef typename CPUPolicy::DecodeStruct DecodeStruct;$/;"	t	class:FullO3CPU
DecodeStruct	src/cpu/o3/cpu_policy.hh	/^    typedef DefaultDecodeDefaultRename<Impl> DecodeStruct;$/;"	t	struct:SimpleCPUPolicy
DecodeStruct	src/cpu/o3/decode.hh	/^    typedef typename CPUPol::DecodeStruct DecodeStruct;$/;"	t	class:DefaultDecode
DecodeStruct	src/cpu/o3/rename.hh	/^    typedef typename CPUPol::DecodeStruct DecodeStruct;$/;"	t	class:DefaultRename
DecodeUnit	src/cpu/inorder/resources/decode_unit.cc	/^DecodeUnit::DecodeUnit(std::string res_name, int res_id, int res_width,$/;"	f	class:DecodeUnit
DecodeUnit	src/cpu/inorder/resources/decode_unit.hh	/^class DecodeUnit : public Resource {$/;"	c
Decoder	src/arch/alpha/decoder.hh	/^    Decoder() : instDone(false)$/;"	f	class:AlphaISA::Decoder
Decoder	src/arch/alpha/decoder.hh	/^class Decoder$/;"	c	namespace:AlphaISA
Decoder	src/arch/arm/decoder.hh	/^    Decoder() : data(0), fpscrLen(0), fpscrStride(0)$/;"	f	class:ArmISA::Decoder
Decoder	src/arch/arm/decoder.hh	/^class Decoder$/;"	c	namespace:ArmISA
Decoder	src/arch/mips/decoder.hh	/^    Decoder() : instDone(false)$/;"	f	class:MipsISA::Decoder
Decoder	src/arch/mips/decoder.hh	/^class Decoder$/;"	c	namespace:MipsISA
Decoder	src/arch/power/decoder.hh	/^    Decoder() : instDone(false)$/;"	f	class:PowerISA::Decoder
Decoder	src/arch/power/decoder.hh	/^class Decoder$/;"	c	namespace:PowerISA
Decoder	src/arch/sparc/decoder.hh	/^    Decoder() : instDone(false), asi(0)$/;"	f	class:SparcISA::Decoder
Decoder	src/arch/sparc/decoder.hh	/^class Decoder$/;"	c	namespace:SparcISA
Decoder	src/arch/x86/decoder.hh	/^    Decoder() : basePC(0), origPC(0), offset(0),$/;"	f	class:X86ISA::Decoder
Decoder	src/arch/x86/decoder.hh	/^class Decoder$/;"	c	namespace:X86ISA
DecoderUnit	src/mem/ruby/network/orion/Buffer/DecoderUnit.cc	/^DecoderUnit::DecoderUnit($/;"	f	class:DecoderUnit
DecoderUnit	src/mem/ruby/network/orion/Buffer/DecoderUnit.hh	/^class DecoderUnit$/;"	c
DecrementAfter	src/arch/arm/insts/mem.hh	/^        DecrementAfter,$/;"	e	enum:ArmISA::RfeOp::AddrMode
DecrementAfter	src/arch/arm/insts/mem.hh	/^        DecrementAfter,$/;"	e	enum:ArmISA::SrsOp::AddrMode
DecrementBefore	src/arch/arm/insts/mem.hh	/^        DecrementBefore,$/;"	e	enum:ArmISA::RfeOp::AddrMode
DecrementBefore	src/arch/arm/insts/mem.hh	/^        DecrementBefore,$/;"	e	enum:ArmISA::SrsOp::AddrMode
Default	src/cpu/inorder/resource_pool.hh	/^        Default$/;"	e	enum:ResourcePool::ResPoolEventType
DefaultBTB	src/cpu/pred/btb.cc	/^DefaultBTB::DefaultBTB(unsigned _numEntries,$/;"	f	class:DefaultBTB
DefaultBTB	src/cpu/pred/btb.hh	/^class DefaultBTB$/;"	c
DefaultCommit	src/cpu/o3/commit.hh	/^class DefaultCommit$/;"	c
DefaultCommit	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::DefaultCommit(O3CPU *_cpu, DerivO3CPUParams *params)$/;"	f	class:DefaultCommit
DefaultDecode	src/cpu/o3/decode.hh	/^class DefaultDecode$/;"	c
DefaultDecode	src/cpu/o3/decode_impl.hh	/^DefaultDecode<Impl>::DefaultDecode(O3CPU *_cpu, DerivO3CPUParams *params)$/;"	f	class:DefaultDecode
DefaultDecodeDefaultRename	src/cpu/o3/comm.hh	/^struct DefaultDecodeDefaultRename {$/;"	s
DefaultFUPool	src/cpu/o3/FUPool.py	/^class DefaultFUPool(FUPool):$/;"	c
DefaultFetch	src/cpu/o3/fetch.hh	/^class DefaultFetch$/;"	c
DefaultFetch	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::DefaultFetch(O3CPU *_cpu, DerivO3CPUParams *params)$/;"	f	class:DefaultFetch
DefaultFetchDefaultDecode	src/cpu/o3/comm.hh	/^struct DefaultFetchDefaultDecode {$/;"	s
DefaultIEW	src/cpu/o3/iew.hh	/^class DefaultIEW$/;"	c
DefaultIEW	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::DefaultIEW(O3CPU *_cpu, DerivO3CPUParams *params)$/;"	f	class:DefaultIEW
DefaultIEWDefaultCommit	src/cpu/o3/comm.hh	/^struct DefaultIEWDefaultCommit {$/;"	s
DefaultRename	src/cpu/o3/rename.hh	/^class DefaultRename$/;"	c
DefaultRename	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::DefaultRename(O3CPU *_cpu, DerivO3CPUParams *params)$/;"	f	class:DefaultRename
DefaultRenameDefaultIEW	src/cpu/o3/comm.hh	/^struct DefaultRenameDefaultIEW {$/;"	s
Default_Pri	src/sim/eventq.hh	/^    static const Priority Default_Pri =                  0;$/;"	m	class:EventBase
DefaultsAndDisable	src/dev/x86/i8042.hh	/^        DefaultsAndDisable = 0xF6,$/;"	e	enum:X86ISA::PS2Keyboard::Command
DefaultsAndDisable	src/dev/x86/i8042.hh	/^        DefaultsAndDisable = 0xF6,$/;"	e	enum:X86ISA::PS2Mouse::Command
DeferredPacket	src/mem/bridge.hh	/^        DeferredPacket(PacketPtr _pkt, Tick _tick) : tick(_tick), pkt(_pkt)$/;"	f	class:Bridge::DeferredPacket
DeferredPacket	src/mem/bridge.hh	/^    class DeferredPacket$/;"	c	class:Bridge
DeferredPacket	src/mem/cache/prefetch/base.hh	/^        DeferredPacket(Tick t, PacketPtr p)$/;"	f	class:BasePrefetcher::DeferredPacket
DeferredPacket	src/mem/cache/prefetch/base.hh	/^    class DeferredPacket {$/;"	c	class:BasePrefetcher
DeferredPacket	src/mem/packet_queue.hh	/^        DeferredPacket(Tick t, PacketPtr p, bool send_as_snoop)$/;"	f	class:PacketQueue::DeferredPacket
DeferredPacket	src/mem/packet_queue.hh	/^    class DeferredPacket {$/;"	c	class:PacketQueue
DeferredPacket	src/mem/simple_mem.hh	/^        DeferredPacket(PacketPtr _pkt, Tick _tick) : tick(_tick), pkt(_pkt)$/;"	f	class:SimpleMemory::DeferredPacket
DeferredPacket	src/mem/simple_mem.hh	/^    class DeferredPacket$/;"	c	class:SimpleMemory
DeferredPacketIterator	src/mem/packet_queue.hh	/^    typedef std::list<DeferredPacket>::iterator DeferredPacketIterator;$/;"	t	class:PacketQueue
DeferredPacketList	src/mem/packet_queue.hh	/^    typedef std::list<DeferredPacket> DeferredPacketList;$/;"	t	class:PacketQueue
DelayFunction	src/sim/eventq.hh	/^DelayFunction(EventQueue *eventq, Tick when, T *object)$/;"	f
DelaySlotPCState	src/arch/generic/types.hh	/^    DelaySlotPCState() {}$/;"	f	class:GenericISA::DelaySlotPCState
DelaySlotPCState	src/arch/generic/types.hh	/^    DelaySlotPCState(Addr val) { set(val); }$/;"	f	class:GenericISA::DelaySlotPCState
DelaySlotPCState	src/arch/generic/types.hh	/^class DelaySlotPCState : public SimplePCState<MachInst>$/;"	c	namespace:GenericISA
DelaySlotUPCState	src/arch/generic/types.hh	/^    DelaySlotUPCState() {}$/;"	f	class:GenericISA::DelaySlotUPCState
DelaySlotUPCState	src/arch/generic/types.hh	/^    DelaySlotUPCState(Addr val) { set(val); }$/;"	f	class:GenericISA::DelaySlotUPCState
DelaySlotUPCState	src/arch/generic/types.hh	/^class DelaySlotUPCState : public DelaySlotPCState<MachInst>$/;"	c	namespace:GenericISA
Delayed_Writeback_Pri	src/sim/eventq.hh	/^    static const Priority Delayed_Writeback_Pri =       -1;$/;"	m	class:EventBase
DeliveryMode	src/arch/x86/intmessage.hh	/^    namespace DeliveryMode$/;"	n	namespace:X86ISA
DepEntry	src/cpu/o3/dep_graph.hh	/^    typedef DependencyEntry<DynInstPtr> DepEntry;$/;"	t	class:DependencyGraph
DepMap	src/cpu/inorder/reg_dep_map.hh	/^    typedef std::vector<std::list<DynInstPtr> > DepMap;$/;"	t	class:RegDepMap
DependenceTags	src/arch/alpha/registers.hh	/^enum DependenceTags {$/;"	g	namespace:AlphaISA
DependenceTags	src/arch/sparc/registers.hh	/^enum DependenceTags {$/;"	g	namespace:SparcISA
DependenceTags	src/arch/x86/registers.hh	/^enum DependenceTags {$/;"	g	namespace:X86ISA
DependencyEntry	src/cpu/o3/dep_graph.hh	/^    DependencyEntry()$/;"	f	class:DependencyEntry
DependencyEntry	src/cpu/o3/dep_graph.hh	/^class DependencyEntry$/;"	c
DependencyGraph	src/cpu/o3/dep_graph.hh	/^    DependencyGraph()$/;"	f	class:DependencyGraph
DependencyGraph	src/cpu/o3/dep_graph.hh	/^class DependencyGraph$/;"	c
DerivO3CPU	src/cpu/o3/O3CPU.py	/^class DerivO3CPU(BaseCPU):$/;"	c
DerivO3CPU	src/cpu/o3/deriv.hh	/^    DerivO3CPU(DerivO3CPUParams *p)$/;"	f	class:DerivO3CPU
DerivO3CPU	src/cpu/o3/deriv.hh	/^class DerivO3CPU : public FullO3CPU<O3CPUImpl>$/;"	c
DerivOzoneCPU	src/cpu/ozone/OzoneCPU.py	/^class DerivOzoneCPU(BaseCPU):$/;"	c
DerivOzoneCPU	src/cpu/ozone/cpu_builder.cc	/^    DerivOzoneCPU(SimpleParams *p)$/;"	f	class:DerivOzoneCPU
DerivOzoneCPU	src/cpu/ozone/cpu_builder.cc	/^class DerivOzoneCPU : public OzoneCPU<OzoneImpl>$/;"	c	file:
DerivedClockDomain	src/sim/ClockDomain.py	/^class DerivedClockDomain(ClockDomain):$/;"	c
DerivedClockDomain	src/sim/clock_domain.cc	/^DerivedClockDomain::DerivedClockDomain(const Params *p) :$/;"	f	class:DerivedClockDomain
DerivedClockDomain	src/sim/clock_domain.hh	/^class DerivedClockDomain: public ClockDomain$/;"	c
DescCache	src/dev/i8254xGBe.cc	/^IGbE::DescCache<T>::DescCache(IGbE *i, const std::string n, int s)$/;"	f	class:IGbE::DescCache
DescCache	src/dev/i8254xGBe.hh	/^    class DescCache$/;"	c	class:IGbE
DescriptorBase	src/arch/arm/table_walker.hh	/^    class DescriptorBase {$/;"	c	class:ArmISA::TableWalker
DescriptorFetch	src/dev/copy_engine.hh	/^            DescriptorFetch,$/;"	e	enum:CopyEngine::CopyEngineChannel::ChannelState
DevAction	src/dev/ide_disk.hh	/^typedef enum DevAction {$/;"	g
DevAction_t	src/dev/ide_disk.hh	/^} DevAction_t;$/;"	t	typeref:enum:DevAction
DevMondo	src/arch/sparc/faults.hh	/^class DevMondo : public SparcFault<DevMondo> {};$/;"	c	namespace:SparcISA
DevState	src/dev/ide_disk.hh	/^typedef enum DevState {$/;"	g
DevState_t	src/dev/ide_disk.hh	/^} DevState_t;$/;"	t	typeref:enum:DevState
Deviation	src/base/stats/info.hh	/^enum DistType { Deviation, Dist, Hist };$/;"	e	enum:Stats::DistType
Device	src/arch/arm/pagetable.hh	/^        Device,$/;"	m	class:ArmISA::TlbEntry::MemoryType
Device	src/dev/sinic.cc	/^Device::Device(const Params *p)$/;"	f	class:Sinic::Device
Device	src/dev/sinic.hh	/^class Device : public Base$/;"	c	namespace:Sinic
DeviceID	src/dev/CopyEngine.py	/^    DeviceID = 0x1a38$/;"	v	class:CopyEngine
DeviceID	src/dev/Ethernet.py	/^    DeviceID = 0x0022$/;"	v	class:NSGigE
DeviceID	src/dev/Ethernet.py	/^    DeviceID = 0x1075$/;"	v	class:IGbE_e1000
DeviceID	src/dev/Ethernet.py	/^    DeviceID = 0x10C9$/;"	v	class:IGbE_igb
DeviceID	src/dev/Ethernet.py	/^    DeviceID = 0x1293$/;"	v	class:Sinic
DeviceID	src/dev/Ide.py	/^    DeviceID = 0x7111$/;"	v	class:IdeController
DeviceID	src/dev/Pci.py	/^    DeviceID = Param.UInt16("Device ID")$/;"	v	class:PciDevice
DeviceId	src/dev/sparc/iob.hh	/^    enum DeviceId {$/;"	g	class:Iob
DeviceNotAvailable	src/arch/x86/faults.hh	/^        DeviceNotAvailable() :$/;"	f	class:X86ISA::DeviceNotAvailable
DeviceNotAvailable	src/arch/x86/faults.hh	/^    class DeviceNotAvailable : public X86Fault$/;"	c	namespace:X86ISA
DeviceRegisterAddress	src/dev/ns_gige_reg.h	/^enum DeviceRegisterAddress {$/;"	g
DeviceTiming	src/dev/ide_ctrl.cc	/^    DeviceTiming = 0x44,$/;"	e	enum:ConfRegOffset	file:
Device_Dma_Abort	src/dev/ide_disk.hh	/^    Device_Dma_Abort$/;"	e	enum:DevState
Device_Idle_NS	src/dev/ide_disk.hh	/^    Device_Idle_NS,$/;"	e	enum:DevState
Device_Idle_S	src/dev/ide_disk.hh	/^    Device_Idle_S = 0,$/;"	e	enum:DevState
Device_Idle_SI	src/dev/ide_disk.hh	/^    Device_Idle_SI,$/;"	e	enum:DevState
Device_Srst	src/dev/ide_disk.hh	/^    Device_Srst,$/;"	e	enum:DevState
DiagnosticDump	src/dev/x86/i8042.hh	/^        DiagnosticDump = 0xAC,$/;"	e	enum:X86ISA::I8042::Command
DiagnosticEcho	src/dev/x86/i8042.hh	/^        DiagnosticEcho = 0xEE,$/;"	e	enum:X86ISA::PS2Keyboard::Command
DictMixin	src/python/m5/debug.py	/^from UserDict import DictMixin$/;"	i
DictMixin	src/python/m5/util/orderdict.py	/^from UserDict import DictMixin$/;"	i
DirectedGenerator	src/cpu/testers/directedtest/DirectedGenerator.cc	/^DirectedGenerator::DirectedGenerator(const Params *p)$/;"	f	class:DirectedGenerator
DirectedGenerator	src/cpu/testers/directedtest/DirectedGenerator.hh	/^class DirectedGenerator : public SimObject $/;"	c
DirectedGenerator	src/cpu/testers/directedtest/RubyDirectedTester.py	/^class DirectedGenerator(SimObject):$/;"	c
DirectedStartEvent	src/cpu/testers/directedtest/RubyDirectedTester.hh	/^        DirectedStartEvent(RubyDirectedTester *_tester)$/;"	f	class:RubyDirectedTester::DirectedStartEvent
DirectedStartEvent	src/cpu/testers/directedtest/RubyDirectedTester.hh	/^    class DirectedStartEvent : public Event$/;"	c	class:RubyDirectedTester
Directive	src/arch/micro_asm.py	/^class Directive(Statement):$/;"	c
DirectoryMemory	src/mem/ruby/system/DirectoryMemory.cc	/^DirectoryMemory::DirectoryMemory(const Params *p)$/;"	f	class:DirectoryMemory
DirectoryMemory	src/mem/ruby/system/DirectoryMemory.hh	/^class DirectoryMemory : public SimObject$/;"	c
Disable	src/dev/ps2.hh	/^    Disable         = 0xf5,$/;"	e	enum:Ps2::__anon82
Disable	src/dev/x86/i8042.hh	/^        Disable = 0xF5,$/;"	e	enum:X86ISA::PS2Keyboard::Command
DisableA20	src/dev/x86/i8042.hh	/^        DisableA20 = 0xDD,$/;"	e	enum:X86ISA::I8042::Command
DisableKeyboard	src/dev/x86/i8042.hh	/^        DisableKeyboard = 0xAD,$/;"	e	enum:X86ISA::I8042::Command
DisableMouse	src/dev/x86/i8042.hh	/^        DisableMouse = 0xA7,$/;"	e	enum:X86ISA::I8042::Command
DisableReporting	src/dev/x86/i8042.hh	/^        DisableReporting = 0xF5,$/;"	e	enum:X86ISA::PS2Mouse::Command
DiskImage	src/dev/DiskImage.py	/^class DiskImage(SimObject):$/;"	c
DiskImage	src/dev/disk_image.hh	/^    DiskImage(const Params *p) : SimObject(p), initialized(false) {}$/;"	f	class:DiskImage
DiskImage	src/dev/disk_image.hh	/^class DiskImage : public SimObject$/;"	c
DispatchToIssue	src/cpu/ozone/back_end.hh	/^    typedef SizeStruct DispatchToIssue;$/;"	t	class:BackEnd
DispatchToIssue	src/cpu/ozone/lw_back_end.hh	/^    typedef SizeStruct DispatchToIssue;$/;"	t	class:LWBackEnd
DisplacementState	src/arch/x86/decoder.hh	/^        DisplacementState,$/;"	e	enum:X86ISA::Decoder::State
Dist	src/base/stats/info.hh	/^enum DistType { Deviation, Dist, Hist };$/;"	e	enum:Stats::DistType
DistBase	src/base/statistics.hh	/^    DistBase() { }$/;"	f	class:Stats::DistBase
DistBase	src/base/statistics.hh	/^class DistBase : public DataWrap<Derived, DistInfoProxy>$/;"	c	namespace:Stats
DistData	src/base/stats/info.hh	/^struct DistData$/;"	s	namespace:Stats
DistInfo	src/base/stats/info.hh	/^class DistInfo : public Info$/;"	c	namespace:Stats
DistInfoProxy	src/base/statistics.hh	/^    DistInfoProxy(Stat &stat) : InfoProxy<Stat, DistInfo>(stat) {}$/;"	f	class:Stats::DistInfoProxy
DistInfoProxy	src/base/statistics.hh	/^class DistInfoProxy : public InfoProxy<Stat, DistInfo>$/;"	c	namespace:Stats
DistParams	src/base/statistics.hh	/^    DistParams(DistType t) : type(t) {}$/;"	f	struct:Stats::DistParams
DistParams	src/base/statistics.hh	/^struct DistParams : public StorageParams$/;"	s	namespace:Stats
DistPrint	src/base/stats/text.cc	/^DistPrint::DistPrint(const Text *text, const DistInfo &info)$/;"	f	class:Stats::DistPrint
DistPrint	src/base/stats/text.cc	/^DistPrint::DistPrint(const Text *text, const VectorDistInfo &info, int i)$/;"	f	class:Stats::DistPrint
DistPrint	src/base/stats/text.cc	/^struct DistPrint$/;"	s	namespace:Stats	file:
DistProxy	src/base/statistics.hh	/^    DistProxy(Stat &s, off_type i)$/;"	f	class:Stats::DistProxy
DistProxy	src/base/statistics.hh	/^    DistProxy(const DistProxy &sp)$/;"	f	class:Stats::DistProxy
DistProxy	src/base/statistics.hh	/^class DistProxy$/;"	c	namespace:Stats
DistStor	src/base/statistics.hh	/^    DistStor(Info *info)$/;"	f	class:Stats::DistStor
DistStor	src/base/statistics.hh	/^class DistStor$/;"	c	namespace:Stats
DistType	src/base/stats/info.hh	/^enum DistType { Deviation, Dist, Hist };$/;"	g	namespace:Stats
Distribution	src/base/statistics.hh	/^class Distribution : public DistBase<Distribution, DistStor>$/;"	c	namespace:Stats
DivideByZero	src/arch/mips/registers.hh	/^    DivideByZero,$/;"	e	enum:MipsISA::FCSRBits
DivideByZero	src/arch/x86/faults.hh	/^        DivideByZero() :$/;"	f	class:X86ISA::DivideByZero
DivideByZero	src/arch/x86/faults.hh	/^    class DivideByZero : public X86Fault$/;"	c	namespace:X86ISA
DivisionByZero	src/arch/sparc/faults.hh	/^class DivisionByZero : public SparcFault<DivisionByZero> {};$/;"	c	namespace:SparcISA
DmaDesc	src/dev/copy_engine_defs.hh	/^struct DmaDesc {$/;"	s	namespace:CopyEngineReg
DmaDevice	src/dev/Device.py	/^class DmaDevice(PioDevice):$/;"	c
DmaDevice	src/dev/Pci.py	/^from Device import BasicPioDevice, DmaDevice, PioDevice$/;"	i
DmaDevice	src/dev/arm/RealView.py	/^from Device import BasicPioDevice, PioDevice, IsaFake, BadAddr, DmaDevice$/;"	i
DmaDevice	src/dev/dma_device.cc	/^DmaDevice::DmaDevice(const Params *p)$/;"	f	class:DmaDevice
DmaDevice	src/dev/dma_device.hh	/^class DmaDevice : public PioDevice$/;"	c
DmaDoneEvent	src/dev/arm/hdlcd.hh	/^        DmaDoneEvent(HDLcd *_obj)$/;"	f	class:HDLcd::DmaDoneEvent
DmaDoneEvent	src/dev/arm/hdlcd.hh	/^    class DmaDoneEvent : public Event$/;"	c	class:HDLcd
DmaDoneEvent	src/dev/arm/pl111.hh	/^        DmaDoneEvent(Pl111 *_obj)$/;"	f	class:Pl111::DmaDoneEvent
DmaDoneEvent	src/dev/arm/pl111.hh	/^    class DmaDoneEvent : public Event$/;"	c	class:Pl111
DmaPort	src/dev/dma_device.cc	/^DmaPort::DmaPort(MemObject *dev, System *s)$/;"	f	class:DmaPort
DmaPort	src/dev/dma_device.hh	/^class DmaPort : public MasterPort$/;"	c
DmaRead	src/dev/ide_disk.hh	/^    DmaRead,$/;"	e	enum:Events
DmaReqState	src/dev/dma_device.hh	/^        DmaReqState(Event *ce, Addr tb, Tick _delay)$/;"	f	struct:DmaPort::DmaReqState
DmaReqState	src/dev/dma_device.hh	/^    struct DmaReqState : public Packet::SenderState$/;"	s	class:DmaPort
DmaState	src/dev/ide_disk.hh	/^typedef enum DmaState {$/;"	g
DmaState	src/dev/ns_gige.hh	/^    enum DmaState$/;"	g	class:NSGigE
DmaState_t	src/dev/ide_disk.hh	/^} DmaState_t;$/;"	t	typeref:enum:DmaState
DmaWrite	src/dev/ide_disk.hh	/^    DmaWrite$/;"	e	enum:Events
Dma_Idle	src/dev/ide_disk.hh	/^    Dma_Idle = 0,$/;"	e	enum:DmaState
Dma_Start	src/dev/ide_disk.hh	/^    Dma_Start,$/;"	e	enum:DmaState
Dma_Transfer	src/dev/ide_disk.hh	/^    Dma_Transfer$/;"	e	enum:DmaState
DomainLL	src/arch/arm/faults.hh	/^        DomainLL = AccessFlagLL + 4,$/;"	e	enum:ArmISA::ArmFault::FaultSource
DomainType	src/arch/arm/pagetable.hh	/^    enum class DomainType : std::uint8_t {$/;"	c	struct:ArmISA::TlbEntry
DoneEvent	src/dev/etherbus.hh	/^        DoneEvent(EtherBus *b) : bus(b) {}$/;"	f	class:EtherBus::DoneEvent
DoneEvent	src/dev/etherbus.hh	/^    class DoneEvent : public Event$/;"	c	class:EtherBus
DoneEvent	src/dev/etherlink.hh	/^        typedef EventWrapper<Link, &Link::txDone> DoneEvent;$/;"	t	class:EtherLink::Link
Double	src/cpu/inorder/inorder_dyn_inst.hh	/^        Double$/;"	e	enum:InOrderDynInst::ResultType
DoubleFault	src/arch/x86/faults.hh	/^        DoubleFault() :$/;"	f	class:X86ISA::DoubleFault
DoubleFault	src/arch/x86/faults.hh	/^    class DoubleFault : public X86Abort$/;"	c	namespace:X86ISA
DrainManager	src/sim/drain.cc	/^DrainManager::DrainManager()$/;"	f	class:DrainManager
DrainManager	src/sim/drain.hh	/^class DrainManager$/;"	c
Drainable	src/sim/drain.cc	/^Drainable::Drainable()$/;"	f	class:Drainable
Drainable	src/sim/drain.hh	/^class Drainable$/;"	c
Drained	src/sim/drain.hh	/^        Drained   \/** Buffers drained, ready for serialization\/handover *\/$/;"	e	enum:Drainable::State
Draining	src/sim/drain.hh	/^        Draining, \/** Draining buffers pending serialization\/handover *\/$/;"	e	enum:Drainable::State
DramGen	src/cpu/testers/traffic_gen/generators.hh	/^    DramGen(const std::string& _name, MasterID master_id, Tick _duration,$/;"	f	class:DramGen
DramGen	src/cpu/testers/traffic_gen/generators.hh	/^class DramGen : public RandomGen$/;"	c
DspStateDisabledFault	src/arch/mips/faults.hh	/^class DspStateDisabledFault : public MipsFault<DspStateDisabledFault> {};$/;"	c	namespace:MipsISA
DtbAcvFault	src/arch/alpha/faults.hh	/^    DtbAcvFault(VAddr vaddr, Request::Flags reqFlags, uint64_t flags)$/;"	f	class:AlphaISA::DtbAcvFault
DtbAcvFault	src/arch/alpha/faults.hh	/^class DtbAcvFault : public DtbFault$/;"	c	namespace:AlphaISA
DtbAlignmentFault	src/arch/alpha/faults.hh	/^    DtbAlignmentFault(VAddr vaddr, Request::Flags reqFlags, uint64_t flags)$/;"	f	class:AlphaISA::DtbAlignmentFault
DtbAlignmentFault	src/arch/alpha/faults.hh	/^class DtbAlignmentFault : public DtbFault$/;"	c	namespace:AlphaISA
DtbFault	src/arch/alpha/faults.hh	/^    DtbFault(VAddr _vaddr, Request::Flags _reqFlags, uint64_t _flags)$/;"	f	class:AlphaISA::DtbFault
DtbFault	src/arch/alpha/faults.hh	/^class DtbFault : public AlphaFault$/;"	c	namespace:AlphaISA
DtbObject	src/base/loader/dtb_object.cc	/^DtbObject::DtbObject(const std::string &_filename, int _fd,$/;"	f	class:DtbObject
DtbObject	src/base/loader/dtb_object.hh	/^class DtbObject : public ObjectFile$/;"	c
DtbPageFault	src/arch/alpha/faults.hh	/^    DtbPageFault(VAddr vaddr, Request::Flags reqFlags, uint64_t flags)$/;"	f	class:AlphaISA::DtbPageFault
DtbPageFault	src/arch/alpha/faults.hh	/^class DtbPageFault : public DtbFault$/;"	c	namespace:AlphaISA
DumbTOD	src/dev/sparc/T1000.py	/^class DumbTOD(BasicPioDevice):$/;"	c
DumbTOD	src/dev/sparc/dtod.cc	/^DumbTOD::DumbTOD(const Params *p)$/;"	f	class:DumbTOD
DumbTOD	src/dev/sparc/dtod.hh	/^class DumbTOD : public BasicPioDevice$/;"	c
DummyChecker	src/cpu/DummyChecker.py	/^class DummyChecker(CheckerCPU):$/;"	c
DummyChecker	src/cpu/dummy_checker.hh	/^    DummyChecker(Params *p)$/;"	f	class:DummyChecker
DummyChecker	src/cpu/dummy_checker.hh	/^class DummyChecker : public CheckerCPU$/;"	c
DummyChecker	src/cpu/simple/BaseSimpleCPU.py	/^from DummyChecker import DummyChecker$/;"	i
DumpMbuf	src/kern/tru64/dump_mbuf.cc	/^DumpMbuf(Arguments args)$/;"	f	namespace:tru64
DumpMbufEvent	src/kern/tru64/tru64_events.hh	/^    DumpMbufEvent(PCEventQueue *q, const std::string &desc, Addr addr)$/;"	f	class:DumpMbufEvent
DumpMbufEvent	src/kern/tru64/tru64_events.hh	/^class DumpMbufEvent : public PCEvent$/;"	c
DumpStatsPCEvent	src/arch/arm/linux/system.hh	/^    DumpStatsPCEvent(PCEventQueue *q, const std::string &desc, Addr addr)$/;"	f	class:DumpStatsPCEvent
DumpStatsPCEvent	src/arch/arm/linux/system.hh	/^class DumpStatsPCEvent : public PCEvent$/;"	c
DynInst	src/cpu/o3/fetch.hh	/^    typedef typename Impl::DynInst DynInst;$/;"	t	class:DefaultFetch
DynInst	src/cpu/o3/impl.hh	/^    typedef BaseO3DynInst<O3CPUImpl> DynInst;$/;"	t	struct:O3CPUImpl
DynInst	src/cpu/ozone/back_end.hh	/^    typedef typename Impl::DynInst DynInst;$/;"	t	class:BackEnd
DynInst	src/cpu/ozone/cpu.hh	/^    typedef typename Impl::DynInst DynInst;$/;"	t	class:OzoneCPU
DynInst	src/cpu/ozone/front_end.hh	/^    typedef typename Impl::DynInst DynInst;$/;"	t	class:FrontEnd
DynInst	src/cpu/ozone/lw_back_end.hh	/^    typedef typename Impl::DynInst DynInst;$/;"	t	class:LWBackEnd
DynInst	src/cpu/ozone/ozone_impl.hh	/^    typedef OzoneDynInst<OzoneImpl> DynInst;$/;"	t	struct:OzoneImpl
DynInst	src/cpu/ozone/simple_impl.hh	/^    typedef OzoneDynInst<SimpleImpl> DynInst;$/;"	t	struct:SimpleImpl
DynInstPtr	src/cpu/base_dyn_inst.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:BaseDynInst
DynInstPtr	src/cpu/checker/cpu.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:Checker
DynInstPtr	src/cpu/inorder/cpu.hh	/^    typedef ThePipeline::DynInstPtr DynInstPtr;$/;"	t	class:InOrderCPU
DynInstPtr	src/cpu/inorder/inorder_dyn_inst.hh	/^    typedef RefCountingPtr<InOrderDynInst> DynInstPtr;$/;"	t	class:InOrderDynInst
DynInstPtr	src/cpu/inorder/pipeline_stage.hh	/^    typedef ThePipeline::DynInstPtr DynInstPtr;$/;"	t	class:PipelineStage
DynInstPtr	src/cpu/inorder/pipeline_traits.5stage.hh	/^    typedef RefCountingPtr<InOrderDynInst> DynInstPtr;$/;"	t	namespace:ThePipeline
DynInstPtr	src/cpu/inorder/pipeline_traits.9stage.hh	/^    typedef RefCountingPtr<InOrderDynInst> DynInstPtr;$/;"	t	namespace:ThePipeline
DynInstPtr	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^    typedef RefCountingPtr<InOrderDynInst> DynInstPtr;$/;"	t	namespace:ThePipeline
DynInstPtr	src/cpu/inorder/pipeline_traits.hh	/^    typedef RefCountingPtr<InOrderDynInst> DynInstPtr;$/;"	t	namespace:ThePipeline
DynInstPtr	src/cpu/inorder/reg_dep_map.hh	/^    typedef ThePipeline::DynInstPtr DynInstPtr;$/;"	t	class:RegDepMap
DynInstPtr	src/cpu/inorder/resource.hh	/^    typedef ThePipeline::DynInstPtr DynInstPtr;$/;"	t	class:Resource
DynInstPtr	src/cpu/inorder/resource.hh	/^    typedef ThePipeline::DynInstPtr DynInstPtr;$/;"	t	class:ResourceRequest
DynInstPtr	src/cpu/inorder/resource_pool.hh	/^    typedef InOrderDynInst::DynInstPtr DynInstPtr;$/;"	t	class:ResourcePool
DynInstPtr	src/cpu/inorder/resources/agen_unit.hh	/^    typedef InOrderDynInst::DynInstPtr DynInstPtr;$/;"	t	class:AGENUnit
DynInstPtr	src/cpu/inorder/resources/branch_predictor.hh	/^    typedef ThePipeline::DynInstPtr DynInstPtr;$/;"	t	class:BranchPredictor
DynInstPtr	src/cpu/inorder/resources/cache_unit.hh	/^    typedef ThePipeline::DynInstPtr DynInstPtr;$/;"	t	class:CacheUnit
DynInstPtr	src/cpu/inorder/resources/decode_unit.hh	/^    typedef ThePipeline::DynInstPtr DynInstPtr;$/;"	t	class:DecodeUnit
DynInstPtr	src/cpu/inorder/resources/execution_unit.hh	/^    typedef ThePipeline::DynInstPtr DynInstPtr;$/;"	t	class:ExecutionUnit
DynInstPtr	src/cpu/inorder/resources/fetch_seq_unit.hh	/^    typedef ThePipeline::DynInstPtr DynInstPtr;$/;"	t	class:FetchSeqUnit
DynInstPtr	src/cpu/inorder/resources/fetch_unit.hh	/^    typedef ThePipeline::DynInstPtr DynInstPtr;$/;"	t	class:FetchUnit
DynInstPtr	src/cpu/inorder/resources/graduation_unit.hh	/^    typedef ThePipeline::DynInstPtr DynInstPtr;$/;"	t	class:GraduationUnit
DynInstPtr	src/cpu/inorder/resources/inst_buffer.hh	/^    typedef ThePipeline::DynInstPtr DynInstPtr;$/;"	t	class:InstBuffer
DynInstPtr	src/cpu/inorder/resources/mem_dep_unit.hh	/^    typedef ThePipeline::DynInstPtr DynInstPtr;$/;"	t	class:MemDepUnit
DynInstPtr	src/cpu/inorder/resources/mult_div_unit.hh	/^    typedef ThePipeline::DynInstPtr DynInstPtr;$/;"	t	class:MultDivUnit
DynInstPtr	src/cpu/inorder/resources/tlb_unit.hh	/^    typedef ThePipeline::DynInstPtr DynInstPtr;$/;"	t	class:TLBUnit
DynInstPtr	src/cpu/inorder/resources/tlb_unit.hh	/^    typedef ThePipeline::DynInstPtr DynInstPtr;$/;"	t	class:TLBUnitRequest
DynInstPtr	src/cpu/inorder/resources/use_def.hh	/^        typedef ThePipeline::DynInstPtr DynInstPtr;$/;"	t	class:UseDefUnit::UseDefRequest
DynInstPtr	src/cpu/inorder/resources/use_def.hh	/^    typedef ThePipeline::DynInstPtr DynInstPtr;$/;"	t	class:UseDefUnit
DynInstPtr	src/cpu/o3/comm.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	struct:DefaultDecodeDefaultRename
DynInstPtr	src/cpu/o3/comm.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	struct:DefaultFetchDefaultDecode
DynInstPtr	src/cpu/o3/comm.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	struct:DefaultIEWDefaultCommit
DynInstPtr	src/cpu/o3/comm.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	struct:DefaultRenameDefaultIEW
DynInstPtr	src/cpu/o3/comm.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	struct:IssueStruct
DynInstPtr	src/cpu/o3/comm.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	struct:TimeBufStruct
DynInstPtr	src/cpu/o3/commit.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:DefaultCommit
DynInstPtr	src/cpu/o3/cpu.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:FullO3CPU
DynInstPtr	src/cpu/o3/decode.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:DefaultDecode
DynInstPtr	src/cpu/o3/fetch.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:DefaultFetch
DynInstPtr	src/cpu/o3/iew.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:DefaultIEW
DynInstPtr	src/cpu/o3/impl.hh	/^    typedef RefCountingPtr<DynInst> DynInstPtr;$/;"	t	struct:O3CPUImpl
DynInstPtr	src/cpu/o3/inst_queue.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:InstructionQueue
DynInstPtr	src/cpu/o3/lsq.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:LSQ
DynInstPtr	src/cpu/o3/lsq_unit.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:LSQUnit
DynInstPtr	src/cpu/o3/mem_dep_unit.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:MemDepUnit
DynInstPtr	src/cpu/o3/rename.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:DefaultRename
DynInstPtr	src/cpu/o3/rob.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:ROB
DynInstPtr	src/cpu/ozone/back_end.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:BackEnd
DynInstPtr	src/cpu/ozone/cpu.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:OzoneCPU
DynInstPtr	src/cpu/ozone/dyn_inst.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:OzoneDynInst
DynInstPtr	src/cpu/ozone/front_end.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:FrontEnd
DynInstPtr	src/cpu/ozone/inorder_back_end.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:InorderBackEnd
DynInstPtr	src/cpu/ozone/inst_queue.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:InstQueue
DynInstPtr	src/cpu/ozone/lsq_unit.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:OzoneLSQ
DynInstPtr	src/cpu/ozone/lw_back_end.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:LWBackEnd
DynInstPtr	src/cpu/ozone/lw_lsq.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:OzoneLWLSQ
DynInstPtr	src/cpu/ozone/null_predictor.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:NullPredictor
DynInstPtr	src/cpu/ozone/ozone_impl.hh	/^    typedef RefCountingPtr<DynInst> DynInstPtr;$/;"	t	struct:OzoneImpl
DynInstPtr	src/cpu/ozone/rename_table.hh	/^    typedef typename Impl::DynInstPtr DynInstPtr;$/;"	t	class:RenameTable
DynInstPtr	src/cpu/ozone/simple_impl.hh	/^    typedef RefCountingPtr<DynInst> DynInstPtr;$/;"	t	struct:SimpleImpl
Dynamic	src/cpu/o3/inst_queue.hh	/^        Dynamic,$/;"	e	enum:InstructionQueue::IQPolicy
Dynamic	src/cpu/o3/lsq.hh	/^        Dynamic,$/;"	e	enum:LSQ::LSQPolicy
Dynamic	src/cpu/o3/rob.hh	/^        Dynamic,$/;"	e	enum:ROB::ROBPolicy
E	src/arch/x86/regs/int.hh	/^        Bitfield<31,0> E;$/;"	m	namespace:X86ISA
E820Entry	src/arch/x86/bios/e820.hh	/^        E820Entry(Params *p) :$/;"	f	class:X86ISA::E820Entry
E820Entry	src/arch/x86/bios/e820.hh	/^    class E820Entry : public SimObject$/;"	c	namespace:X86ISA
E820Table	src/arch/x86/bios/e820.hh	/^        E820Table(Params *p) : SimObject(p), entries(p->entries)$/;"	f	class:X86ISA::E820Table
E820Table	src/arch/x86/bios/e820.hh	/^    class E820Table : public SimObject$/;"	c	namespace:X86ISA
EACalcDone	src/cpu/base_dyn_inst.hh	/^        EACalcDone,$/;"	e	enum:BaseDynInst::Flags
EAList	src/cpu/ozone/ea_list.hh	/^    EAList() { }$/;"	f	class:EAList
EAList	src/cpu/ozone/ea_list.hh	/^class EAList {$/;"	c
ECF	src/arch/x86/insts/microop.hh	/^            ECF,$/;"	e	enum:X86ISA::ConditionTests::CondTest
ECFBit	src/arch/x86/regs/misc.hh	/^        ECFBit = 1 << 3,$/;"	e	enum:X86ISA::CondFlagBit
ECOFF_BADMAG	src/arch/alpha/ecoff_machdep.h	/^#define ECOFF_BADMAG(/;"	d
ECOFF_BLOCK_ALIGN	src/base/loader/exec_ecoff.h	/^#define ECOFF_BLOCK_ALIGN(/;"	d
ECOFF_DATOFF	src/base/loader/exec_ecoff.h	/^#define ECOFF_DATOFF(/;"	d
ECOFF_FLAG_EXEC	src/arch/alpha/ecoff_machdep.h	/^#define ECOFF_FLAG_EXEC	/;"	d
ECOFF_FLAG_OBJECT_TYPE_MASK	src/arch/alpha/ecoff_machdep.h	/^#define	ECOFF_FLAG_OBJECT_TYPE_MASK	/;"	d
ECOFF_HDR_SIZE	src/base/loader/exec_ecoff.h	/^#define ECOFF_HDR_SIZE /;"	d
ECOFF_LDPGSZ	src/arch/alpha/ecoff_machdep.h	/^#define ECOFF_LDPGSZ /;"	d
ECOFF_MACHDEP	src/arch/alpha/ecoff_machdep.h	/^#define ECOFF_MACHDEP /;"	d
ECOFF_MACHDEP	src/base/loader/exec_ecoff.h	/^        ECOFF_MACHDEP;$/;"	m	struct:ecoff_aouthdr
ECOFF_MAGIC_ALPHA	src/arch/alpha/ecoff_machdep.h	/^#define ECOFF_MAGIC_ALPHA	/;"	d
ECOFF_MAGIC_NETBSD_ALPHA	src/arch/alpha/ecoff_machdep.h	/^#define ECOFF_MAGIC_NETBSD_ALPHA	/;"	d
ECOFF_NMAGIC	src/base/loader/exec_ecoff.h	/^#define ECOFF_NMAGIC /;"	d
ECOFF_OBJECT_TYPE_CALL_SHARED	src/arch/alpha/ecoff_machdep.h	/^#define		ECOFF_OBJECT_TYPE_CALL_SHARED	/;"	d
ECOFF_OBJECT_TYPE_NO_SHARED	src/arch/alpha/ecoff_machdep.h	/^#define		ECOFF_OBJECT_TYPE_NO_SHARED	/;"	d
ECOFF_OBJECT_TYPE_SHARABLE	src/arch/alpha/ecoff_machdep.h	/^#define		ECOFF_OBJECT_TYPE_SHARABLE	/;"	d
ECOFF_OMAGIC	src/base/loader/exec_ecoff.h	/^#define ECOFF_OMAGIC /;"	d
ECOFF_PAD	src/arch/alpha/ecoff_machdep.h	/^#define ECOFF_PAD /;"	d
ECOFF_ROUND	src/base/loader/exec_ecoff.h	/^#define ECOFF_ROUND(/;"	d
ECOFF_SEGMENT_ALIGN	src/base/loader/exec_ecoff.h	/^#define ECOFF_SEGMENT_ALIGN(/;"	d
ECOFF_SEGMENT_ALIGNMENT	src/arch/alpha/ecoff_machdep.h	/^#define ECOFF_SEGMENT_ALIGNMENT(/;"	d
ECOFF_TXTOFF	src/base/loader/exec_ecoff.h	/^#define ECOFF_TXTOFF(/;"	d
ECOFF_ZMAGIC	src/base/loader/exec_ecoff.h	/^#define ECOFF_ZMAGIC /;"	d
EC_DATA_ABORT_CURR_EL	src/arch/arm/types.hh	/^        EC_DATA_ABORT_CURR_EL      = 0x25,  \/\/ AArch64 alias$/;"	e	enum:ArmISA::ExceptionClass
EC_DATA_ABORT_FROM_HYP	src/arch/arm/types.hh	/^        EC_DATA_ABORT_FROM_HYP     = 0x25,$/;"	e	enum:ArmISA::ExceptionClass
EC_DATA_ABORT_LOWER_EL	src/arch/arm/types.hh	/^        EC_DATA_ABORT_LOWER_EL     = 0x24,  \/\/ AArch64 alias$/;"	e	enum:ArmISA::ExceptionClass
EC_DATA_ABORT_TO_HYP	src/arch/arm/types.hh	/^        EC_DATA_ABORT_TO_HYP       = 0x24,$/;"	e	enum:ArmISA::ExceptionClass
EC_FP_EXCEPTION	src/arch/arm/types.hh	/^        EC_FP_EXCEPTION            = 0x28,$/;"	e	enum:ArmISA::ExceptionClass
EC_FP_EXCEPTION_64	src/arch/arm/types.hh	/^        EC_FP_EXCEPTION_64         = 0x2C,$/;"	e	enum:ArmISA::ExceptionClass
EC_HVC	src/arch/arm/types.hh	/^        EC_HVC                     = 0x12,$/;"	e	enum:ArmISA::ExceptionClass
EC_HVC_64	src/arch/arm/types.hh	/^        EC_HVC_64                  = 0x16,$/;"	e	enum:ArmISA::ExceptionClass
EC_ILLEGAL_INST	src/arch/arm/types.hh	/^        EC_ILLEGAL_INST            = 0xE,$/;"	e	enum:ArmISA::ExceptionClass
EC_INVALID	src/arch/arm/types.hh	/^        EC_INVALID                 = -1,$/;"	e	enum:ArmISA::ExceptionClass
EC_PC_ALIGNMENT	src/arch/arm/types.hh	/^        EC_PC_ALIGNMENT            = 0x22,$/;"	e	enum:ArmISA::ExceptionClass
EC_PREFETCH_ABORT_CURR_EL	src/arch/arm/types.hh	/^        EC_PREFETCH_ABORT_CURR_EL  = 0x21,  \/\/ AArch64 alias$/;"	e	enum:ArmISA::ExceptionClass
EC_PREFETCH_ABORT_FROM_HYP	src/arch/arm/types.hh	/^        EC_PREFETCH_ABORT_FROM_HYP = 0x21,$/;"	e	enum:ArmISA::ExceptionClass
EC_PREFETCH_ABORT_LOWER_EL	src/arch/arm/types.hh	/^        EC_PREFETCH_ABORT_LOWER_EL = 0x20,  \/\/ AArch64 alias$/;"	e	enum:ArmISA::ExceptionClass
EC_PREFETCH_ABORT_TO_HYP	src/arch/arm/types.hh	/^        EC_PREFETCH_ABORT_TO_HYP   = 0x20,$/;"	e	enum:ArmISA::ExceptionClass
EC_SERROR	src/arch/arm/types.hh	/^        EC_SERROR                  = 0x2F$/;"	e	enum:ArmISA::ExceptionClass
EC_SMC	src/arch/arm/types.hh	/^        EC_SMC                     = 0x13,  \/\/ AArch64 alias$/;"	e	enum:ArmISA::ExceptionClass
EC_SMC_64	src/arch/arm/types.hh	/^        EC_SMC_64                  = 0x17,$/;"	e	enum:ArmISA::ExceptionClass
EC_SMC_TO_HYP	src/arch/arm/types.hh	/^        EC_SMC_TO_HYP              = 0x13,$/;"	e	enum:ArmISA::ExceptionClass
EC_STACK_PTR_ALIGNMENT	src/arch/arm/types.hh	/^        EC_STACK_PTR_ALIGNMENT     = 0x26,$/;"	e	enum:ArmISA::ExceptionClass
EC_SVC	src/arch/arm/types.hh	/^        EC_SVC                     = 0x11,  \/\/ AArch64 alias$/;"	e	enum:ArmISA::ExceptionClass
EC_SVC_64	src/arch/arm/types.hh	/^        EC_SVC_64                  = 0x15,$/;"	e	enum:ArmISA::ExceptionClass
EC_SVC_TO_HYP	src/arch/arm/types.hh	/^        EC_SVC_TO_HYP              = 0x11,$/;"	e	enum:ArmISA::ExceptionClass
EC_TRAPPED_BXJ	src/arch/arm/types.hh	/^        EC_TRAPPED_BXJ             = 0xA,$/;"	e	enum:ArmISA::ExceptionClass
EC_TRAPPED_CP10_MRC_VMRS	src/arch/arm/types.hh	/^        EC_TRAPPED_CP10_MRC_VMRS   = 0x8,$/;"	e	enum:ArmISA::ExceptionClass
EC_TRAPPED_CP14_LDC_STC	src/arch/arm/types.hh	/^        EC_TRAPPED_CP14_LDC_STC    = 0x6,$/;"	e	enum:ArmISA::ExceptionClass
EC_TRAPPED_CP14_MCRR_MRRC	src/arch/arm/types.hh	/^        EC_TRAPPED_CP14_MCRR_MRRC  = 0xC,$/;"	e	enum:ArmISA::ExceptionClass
EC_TRAPPED_CP14_MCR_MRC	src/arch/arm/types.hh	/^        EC_TRAPPED_CP14_MCR_MRC    = 0x5,$/;"	e	enum:ArmISA::ExceptionClass
EC_TRAPPED_CP15_MCRR_MRRC	src/arch/arm/types.hh	/^        EC_TRAPPED_CP15_MCRR_MRRC  = 0x4,$/;"	e	enum:ArmISA::ExceptionClass
EC_TRAPPED_CP15_MCR_MRC	src/arch/arm/types.hh	/^        EC_TRAPPED_CP15_MCR_MRC    = 0x3,$/;"	e	enum:ArmISA::ExceptionClass
EC_TRAPPED_HCPTR	src/arch/arm/types.hh	/^        EC_TRAPPED_HCPTR           = 0x7,$/;"	e	enum:ArmISA::ExceptionClass
EC_TRAPPED_MSR_MRS_64	src/arch/arm/types.hh	/^        EC_TRAPPED_MSR_MRS_64      = 0x18,$/;"	e	enum:ArmISA::ExceptionClass
EC_TRAPPED_SIMD_FP	src/arch/arm/types.hh	/^        EC_TRAPPED_SIMD_FP         = 0x7,   \/\/ AArch64 alias$/;"	e	enum:ArmISA::ExceptionClass
EC_TRAPPED_WFI_WFE	src/arch/arm/types.hh	/^        EC_TRAPPED_WFI_WFE         = 0x1,$/;"	e	enum:ArmISA::ExceptionClass
EC_UNKNOWN	src/arch/arm/types.hh	/^        EC_UNKNOWN                 = 0x0,$/;"	e	enum:ArmISA::ExceptionClass
EECD	src/dev/i8254xGBe_defs.hh	/^    struct EECD : public Reg<uint32_t> { \/\/ 0x0010 EECD Register$/;"	s	struct:iGbReg::Regs
EEPROMAccessRegister	src/dev/ns_gige_reg.h	/^enum EEPROMAccessRegister {$/;"	g
EEPROMState	src/dev/ns_gige.hh	/^    enum EEPROMState$/;"	g	class:NSGigE
EEPROM_CSUM	src/dev/i8254xGBe_defs.hh	/^const uint16_t EEPROM_CSUM              = 0xBABA;$/;"	m	namespace:iGbReg
EEPROM_PMATCH0_ADDR	src/dev/ns_gige.hh	/^const uint8_t  EEPROM_PMATCH0_ADDR = 0xC; \/\/ EEPROM Address of PMATCH word 0$/;"	v
EEPROM_PMATCH1_ADDR	src/dev/ns_gige.hh	/^const uint8_t  EEPROM_PMATCH1_ADDR = 0xB; \/\/ EEPROM Address of PMATCH word 1$/;"	v
EEPROM_PMATCH2_ADDR	src/dev/ns_gige.hh	/^const uint8_t  EEPROM_PMATCH2_ADDR = 0xA; \/\/ EEPROM Address of PMATCH word 2$/;"	v
EEPROM_RDSR_OPCODE_SPI	src/dev/i8254xGBe_defs.hh	/^const uint8_t EEPROM_RDSR_OPCODE_SPI    = 0x05;$/;"	m	namespace:iGbReg
EEPROM_READ	src/dev/ns_gige.hh	/^const uint8_t  EEPROM_READ = 0x2;$/;"	v
EEPROM_READ_OPCODE_SPI	src/dev/i8254xGBe_defs.hh	/^const uint8_t EEPROM_READ_OPCODE_SPI    = 0x03;$/;"	m	namespace:iGbReg
EEPROM_SIZE	src/dev/i8254xGBe_defs.hh	/^const uint8_t EEPROM_SIZE               = 64;$/;"	m	namespace:iGbReg
EEPROM_SIZE	src/dev/ns_gige.hh	/^const uint8_t  EEPROM_SIZE = 64; \/\/ Size in words of NSC93C46 EEPROM$/;"	v
EERD	src/dev/i8254xGBe_defs.hh	/^    struct EERD : public Reg<uint32_t> { \/\/ 0x0014 EERD Register$/;"	s	struct:iGbReg::Regs
EL0	src/arch/arm/types.hh	/^        EL0 = 0,$/;"	e	enum:ArmISA::ExceptionLevel
EL1	src/arch/arm/types.hh	/^        EL1,$/;"	e	enum:ArmISA::ExceptionLevel
EL2	src/arch/arm/types.hh	/^        EL2,$/;"	e	enum:ArmISA::ExceptionLevel
EL3	src/arch/arm/types.hh	/^        EL3$/;"	e	enum:ArmISA::ExceptionLevel
ELIs64	src/arch/arm/utility.cc	/^ELIs64(ThreadContext *tc, ExceptionLevel el)$/;"	f	namespace:ArmISA
EN	src/arch/x86/decoder_tables.cc	/^        EN = Enter,$/;"	e	enum:X86ISA::SizeType	file:
EOI	src/dev/arm/vgic.hh	/^    Bitfield<19> EOI;$/;"	m	class:VGic
EOICount	src/dev/arm/vgic.hh	/^    Bitfield<31,27> EOICount;$/;"	m	class:VGic
EOImode	src/dev/arm/vgic.hh	/^    Bitfield<9> EOImode;$/;"	m	class:VGic
EQU_BITLINE	src/mem/ruby/network/orion/Buffer/PrechargeUnit.hh	/^      EQU_BITLINE,$/;"	e	enum:PrechargeUnit::PrechargeModel
ERROR_OFFSET	src/dev/ide_disk.hh	/^#define ERROR_OFFSET /;"	d
ES	src/arch/x86/decoder_tables.cc	/^    const uint8_t ES = ESOverride;$/;"	m	namespace:X86ISA	file:
ESOverride	src/arch/x86/types.hh	/^        ESOverride,$/;"	e	enum:X86ISA::Prefixes
EVICT_NEXT	src/mem/request.hh	/^    static const FlagsType EVICT_NEXT                  = 0x04000000;$/;"	m	class:Request
EXPECTED_KVM_API_VERSION	src/cpu/kvm/vm.cc	/^#define EXPECTED_KVM_API_VERSION /;"	d	file:
EXPECT_EQ	src/unittest/unittest.hh	/^#define EXPECT_EQ(/;"	d
EXPECT_FALSE	src/unittest/unittest.hh	/^#define EXPECT_FALSE(/;"	d
EXPECT_TRUE	src/unittest/unittest.hh	/^#define EXPECT_TRUE(/;"	d
EXPRESS_SNOOP	src/mem/packet.hh	/^    static const FlagsType EXPRESS_SNOOP          = 0x00000002;$/;"	m	class:Packet
EXTR	src/base/loader/coff_sym.h	/^} EXTR, *pEXTR;$/;"	t	typeref:struct:ecoff_extsym
EXTRACT_FIELD	src/cpu/kvm/arm_cpu.cc	/^#define EXTRACT_FIELD(/;"	d	file:
EXTSTS_IPERR	src/dev/ns_gige_reg.h	/^     EXTSTS_IPERR =     0x00040000,$/;"	e	enum:ExtendedFlagsForDescriptors
EXTSTS_IPPKT	src/dev/ns_gige_reg.h	/^     EXTSTS_IPPKT =     0x00020000$/;"	e	enum:ExtendedFlagsForDescriptors
EXTSTS_TCPERR	src/dev/ns_gige_reg.h	/^     EXTSTS_TCPERR =    0x00100000,$/;"	e	enum:ExtendedFlagsForDescriptors
EXTSTS_TCPPKT	src/dev/ns_gige_reg.h	/^     EXTSTS_TCPPKT =    0x00080000,$/;"	e	enum:ExtendedFlagsForDescriptors
EXTSTS_UDPERR	src/dev/ns_gige_reg.h	/^     EXTSTS_UDPERR =    0x00400000,$/;"	e	enum:ExtendedFlagsForDescriptors
EXTSTS_UDPPKT	src/dev/ns_gige_reg.h	/^     EXTSTS_UDPPKT =    0x00200000,$/;"	e	enum:ExtendedFlagsForDescriptors
EZF	src/arch/x86/insts/microop.hh	/^            EZF,$/;"	e	enum:X86ISA::ConditionTests::CondTest
EZFBit	src/arch/x86/regs/misc.hh	/^        EZFBit = 1 << 5,$/;"	e	enum:X86ISA::CondFlagBit
EcoffObject	src/base/loader/ecoff_object.cc	/^EcoffObject::EcoffObject(const string &_filename, int _fd,$/;"	f	class:EcoffObject
EcoffObject	src/base/loader/ecoff_object.hh	/^class EcoffObject : public ObjectFile$/;"	c
EffAddrValid	src/cpu/base_dyn_inst.hh	/^        EffAddrValid,$/;"	e	enum:BaseDynInst::Flags
ElfObject	src/base/loader/elf_object.cc	/^ElfObject::ElfObject(const string &_filename, int _fd,$/;"	f	class:ElfObject
ElfObject	src/base/loader/elf_object.hh	/^class ElfObject : public ObjectFile$/;"	c
EmbeddedPython	src/sim/init.cc	/^EmbeddedPython::EmbeddedPython(const char *filename, const char *abspath,$/;"	f	class:EmbeddedPython
EmbeddedPython	src/sim/init.hh	/^struct EmbeddedPython$/;"	s
EmbeddedSwig	src/sim/init.cc	/^EmbeddedSwig::EmbeddedSwig(void (*init_func)())$/;"	f	class:EmbeddedSwig
EmbeddedSwig	src/sim/init.hh	/^struct EmbeddedSwig$/;"	s
EmptyPGE	src/arch/alpha/linux/system.hh	/^    Addr EmptyPGE() const  { return KernelStart + 0x08000; }$/;"	f	class:LinuxAlphaSystem
EmptyPGE	src/arch/mips/linux/system.hh	/^    Addr EmptyPGE() const  { return KernelStart + 0x08000; }$/;"	f	class:LinuxMipsSystem
EmptyPGT	src/arch/alpha/linux/system.hh	/^    Addr EmptyPGT() const  { return KernelStart + 0x04000; }$/;"	f	class:LinuxAlphaSystem
EmptyPGT	src/arch/mips/linux/system.hh	/^    Addr EmptyPGT() const  { return KernelStart + 0x04000; }$/;"	f	class:LinuxMipsSystem
EmulEnv	src/arch/x86/emulenv.hh	/^        EmulEnv(RegIndex _reg, RegIndex _regm,$/;"	f	struct:X86ISA::EmulEnv
EmulEnv	src/arch/x86/emulenv.hh	/^    struct EmulEnv$/;"	s	namespace:X86ISA
En	src/dev/arm/vgic.hh	/^    Bitfield<0> En;     \/\/ This gets written to enable, not group 1.$/;"	m	class:VGic
En	src/dev/arm/vgic.hh	/^    Bitfield<0> En;$/;"	m	class:VGic
EnGrp1	src/dev/arm/vgic.hh	/^    Bitfield<1> EnGrp1;$/;"	m	class:VGic
Enable	src/dev/ps2.hh	/^    Enable          = 0xf4,$/;"	e	enum:Ps2::__anon82
Enable	src/dev/x86/i8042.hh	/^        Enable = 0xF4,$/;"	e	enum:X86ISA::PS2Keyboard::Command
EnableA20	src/dev/x86/i8042.hh	/^        EnableA20 = 0xDF,$/;"	e	enum:X86ISA::I8042::Command
EnableKeyboard	src/dev/x86/i8042.hh	/^        EnableKeyboard = 0xAE,$/;"	e	enum:X86ISA::I8042::Command
EnableMouse	src/dev/x86/i8042.hh	/^        EnableMouse = 0xA8,$/;"	e	enum:X86ISA::I8042::Command
EnableReporting	src/dev/x86/i8042.hh	/^        EnableReporting = 0xF4,$/;"	e	enum:X86ISA::PS2Mouse::Command
Enable_Field	src/arch/mips/registers.hh	/^    Enable_Field = 6,$/;"	e	enum:MipsISA::FCSRFields
EncodingCopyRect	src/base/vnc/vncserver.hh	/^        EncodingCopyRect    = 1,$/;"	e	enum:VncServer::EncodingTypes
EncodingDesktopSize	src/base/vnc/vncserver.hh	/^        EncodingDesktopSize = -223$/;"	e	enum:VncServer::EncodingTypes
EncodingHextile	src/base/vnc/vncserver.hh	/^        EncodingHextile     = 5,$/;"	e	enum:VncServer::EncodingTypes
EncodingRaw	src/base/vnc/vncserver.hh	/^        EncodingRaw         = 0,$/;"	e	enum:VncServer::EncodingTypes
EncodingTypes	src/base/vnc/vncserver.hh	/^    enum EncodingTypes {$/;"	g	class:VncServer
EndBitUnion	src/base/bitunion.hh	/^#define EndBitUnion(/;"	d
EndMultDiv	src/cpu/inorder/resources/mult_div_unit.hh	/^        EndMultDiv,$/;"	e	enum:MultDivUnit::Command
EndQuiesceEvent	src/cpu/quiesce_event.cc	/^EndQuiesceEvent::EndQuiesceEvent(ThreadContext *_tc)$/;"	f	class:EndQuiesceEvent
EndQuiesceEvent	src/cpu/quiesce_event.hh	/^class EndQuiesceEvent : public Event$/;"	c
EndSubBitUnion	src/base/bitunion.hh	/^#define EndSubBitUnion(/;"	d
EndVAddrHole	src/arch/sparc/isa_traits.hh	/^const Addr EndVAddrHole = ULL(0xFFFF7FFFFFFFFFFF);$/;"	m	namespace:SparcISA
EnqueueStatementAST	src/mem/slicc/ast/EnqueueStatementAST.py	/^class EnqueueStatementAST(StatementAST):$/;"	c
Enter	src/arch/x86/decoder_tables.cc	/^        Enter,$/;"	e	enum:X86ISA::SizeType	file:
Entry	src/base/inifile.hh	/^        Entry(const std::string &v)$/;"	f	class:IniFile::Entry
Entry	src/base/inifile.hh	/^    class Entry$/;"	c	class:IniFile
EntryCache	src/arch/alpha/tlb.hh	/^    TlbEntry *EntryCache[3];$/;"	m	class:AlphaISA::TLB
EntryList	src/arch/x86/tlb.hh	/^        typedef std::list<TlbEntry *> EntryList;$/;"	t	class:X86ISA::TLB
EntryTable	src/base/inifile.hh	/^        typedef m5::hash_map<std::string, Entry *> EntryTable;$/;"	t	class:IniFile::Section
EntryType	src/arch/arm/table_walker.hh	/^        enum EntryType {$/;"	g	class:ArmISA::TableWalker::L1Descriptor
EntryType	src/arch/arm/table_walker.hh	/^        enum EntryType {$/;"	g	class:ArmISA::TableWalker::LongDescriptor
EntryType	src/arch/sparc/pagetable.hh	/^    enum EntryType {$/;"	g	class:SparcISA::PageTableEntry
Enum	src/python/m5/params.py	/^class Enum(ParamValue):$/;"	c
EnumDeclAST	src/mem/slicc/ast/EnumDeclAST.py	/^class EnumDeclAST(DeclAST):$/;"	c
EnumExprAST	src/mem/slicc/ast/EnumExprAST.py	/^class EnumExprAST(ExprAST):$/;"	c
EnumeratedFault	src/arch/sparc/faults.hh	/^    EnumeratedFault(uint32_t n) : SparcFault<T>(), _n(n) {}$/;"	f	class:SparcISA::EnumeratedFault
EnumeratedFault	src/arch/sparc/faults.hh	/^class EnumeratedFault : public SparcFault<T>$/;"	c	namespace:SparcISA
Enumeration	src/mem/slicc/symbols/Type.py	/^class Enumeration(PairContainer):$/;"	c
ErrSummaryBit	src/arch/x86/regs/misc.hh	/^        ErrSummaryBit = 1 << 7,$/;"	e	enum:X86ISA::X87StatusBit
Error	src/dev/sparc/iob.hh	/^        Error = 1,$/;"	e	enum:Iob::DeviceId
ErrorState	src/arch/x86/decoder.hh	/^        ErrorState$/;"	e	enum:X86ISA::Decoder::State
EthAddr	src/base/inet.cc	/^EthAddr::EthAddr()$/;"	f	class:Net::EthAddr
EthAddr	src/base/inet.cc	/^EthAddr::EthAddr(const eth_addr &ea)$/;"	f	class:Net::EthAddr
EthAddr	src/base/inet.cc	/^EthAddr::EthAddr(const std::string &addr)$/;"	f	class:Net::EthAddr
EthAddr	src/base/inet.cc	/^EthAddr::EthAddr(const uint8_t ea[ETH_ADDR_LEN])$/;"	f	class:Net::EthAddr
EthAddr	src/base/inet.hh	/^struct EthAddr : protected eth_addr$/;"	s	namespace:Net
EthAddr	src/python/m5/params.py	/^        from m5.internal.params import EthAddr$/;"	i
EthHdr	src/base/inet.hh	/^struct EthHdr : public eth_hdr$/;"	s	namespace:Net
EthPacketData	src/dev/etherpkt.hh	/^    EthPacketData()$/;"	f	class:EthPacketData
EthPacketData	src/dev/etherpkt.hh	/^    EthPacketData(std::auto_ptr<uint8_t> d, int l)$/;"	f	class:EthPacketData
EthPacketData	src/dev/etherpkt.hh	/^    explicit EthPacketData(unsigned size)$/;"	f	class:EthPacketData
EthPacketData	src/dev/etherpkt.hh	/^class EthPacketData : public RefCounted$/;"	c
EthPacketPtr	src/dev/etherpkt.hh	/^typedef RefCountingPtr<EthPacketData> EthPacketPtr;$/;"	t
EthPtr	src/base/inet.hh	/^    EthPtr() {}$/;"	f	class:Net::EthPtr
EthPtr	src/base/inet.hh	/^    EthPtr(const EthPacketPtr &ptr) : p(ptr) { }$/;"	f	class:Net::EthPtr
EthPtr	src/base/inet.hh	/^class EthPtr$/;"	c	namespace:Net
EtherBus	src/dev/Ethernet.py	/^class EtherBus(EtherObject):$/;"	c
EtherBus	src/dev/etherbus.cc	/^EtherBus::EtherBus(const Params *p)$/;"	f	class:EtherBus
EtherBus	src/dev/etherbus.hh	/^class EtherBus : public EtherObject$/;"	c
EtherDevBase	src/dev/Ethernet.py	/^class EtherDevBase(EtherDevice):$/;"	c
EtherDevBase	src/dev/etherdevice.hh	/^    EtherDevBase(const EtherDevBaseParams *params)$/;"	f	class:EtherDevBase
EtherDevBase	src/dev/etherdevice.hh	/^class EtherDevBase : public EtherDevice$/;"	c
EtherDevice	src/dev/Ethernet.py	/^class EtherDevice(PciDevice):$/;"	c
EtherDevice	src/dev/etherdevice.hh	/^    EtherDevice(const Params *params)$/;"	f	class:EtherDevice
EtherDevice	src/dev/etherdevice.hh	/^class EtherDevice : public PciDevice$/;"	c
EtherDump	src/dev/Ethernet.py	/^class EtherDump(SimObject):$/;"	c
EtherDump	src/dev/etherdump.cc	/^EtherDump::EtherDump(const Params *p)$/;"	f	class:EtherDump
EtherDump	src/dev/etherdump.hh	/^class EtherDump : public SimObject$/;"	c
EtherInt	src/dev/etherint.hh	/^    EtherInt(const std::string &name)$/;"	f	class:EtherInt
EtherInt	src/dev/etherint.hh	/^class EtherInt$/;"	c
EtherLink	src/dev/Ethernet.py	/^class EtherLink(EtherObject):$/;"	c
EtherLink	src/dev/etherlink.cc	/^EtherLink::EtherLink(const Params *p)$/;"	f	class:EtherLink
EtherLink	src/dev/etherlink.hh	/^class EtherLink : public EtherObject$/;"	c
EtherObject	src/dev/Ethernet.py	/^class EtherObject(SimObject):$/;"	c
EtherObject	src/dev/etherobject.hh	/^    EtherObject(const Params *params)$/;"	f	class:EtherObject
EtherObject	src/dev/etherobject.hh	/^class EtherObject : public SimObject$/;"	c
EtherTap	src/dev/Ethernet.py	/^class EtherTap(EtherObject):$/;"	c
EtherTap	src/dev/ethertap.cc	/^EtherTap::EtherTap(const Params *p)$/;"	f	class:EtherTap
EtherTap	src/dev/ethertap.hh	/^class EtherTap : public EtherObject$/;"	c
EtherTapInt	src/dev/ethertap.hh	/^    EtherTapInt(const std::string &name, EtherTap *t)$/;"	f	class:EtherTapInt
EtherTapInt	src/dev/ethertap.hh	/^class EtherTapInt : public EtherInt$/;"	c
EthernetAddr	src/python/m5/params.py	/^class EthernetAddr(ParamValue):$/;"	c
EthernetAddr	src/python/m5/proxy.py	/^import params # for EthernetAddr$/;"	i
Event	src/base/remote_gdb.cc	/^BaseRemoteGDB::Event::Event(BaseRemoteGDB *g, int fd, int e)$/;"	f	class:BaseRemoteGDB::Event
Event	src/base/remote_gdb.cc	/^GDBListener::Event::Event(GDBListener *l, int fd, int e)$/;"	f	class:GDBListener::Event
Event	src/base/remote_gdb.hh	/^    class Event : public PollEvent$/;"	c	class:BaseRemoteGDB
Event	src/base/remote_gdb.hh	/^    class Event : public PollEvent$/;"	c	class:GDBListener
Event	src/dev/ethertap.cc	/^        Event(TapListener *l, int fd, int e)$/;"	f	class:TapListener::Event
Event	src/dev/ethertap.cc	/^    class Event : public PollEvent$/;"	c	class:TapListener	file:
Event	src/mem/slicc/ast/TypeFieldEnumAST.py	/^from slicc.symbols import Event, State, RequestType$/;"	i
Event	src/mem/slicc/ast/TypeFieldStateAST.py	/^from slicc.symbols import Event, State$/;"	i
Event	src/mem/slicc/symbols/Event.py	/^class Event(Symbol):$/;"	c
Event	src/mem/slicc/symbols/__init__.py	/^from slicc.symbols.Event import Event$/;"	i
Event	src/python/m5/event.py	/^class Event(PythonEvent):$/;"	c
Event	src/sim/eventq.hh	/^    Event(Priority p = Default_Pri, Flags f = 0)$/;"	f	class:Event
Event	src/sim/eventq.hh	/^class Event : public EventBase, public Serializable$/;"	c
EventBase	src/sim/eventq.hh	/^class EventBase$/;"	c
EventManager	src/sim/eventq.hh	/^    EventManager(EventManager &em) : eventq(em.eventq) {}$/;"	f	class:EventManager
EventManager	src/sim/eventq.hh	/^    EventManager(EventManager *em) : eventq(em->eventq) {}$/;"	f	class:EventManager
EventManager	src/sim/eventq.hh	/^    EventManager(EventQueue *eq) : eventq(eq) {}$/;"	f	class:EventManager
EventManager	src/sim/eventq.hh	/^class EventManager$/;"	c
EventQueue	src/sim/eventq.cc	/^EventQueue::EventQueue(const string &n)$/;"	f	class:EventQueue
EventQueue	src/sim/eventq.hh	/^class EventQueue : public Serializable$/;"	c
EventWrapper	src/sim/eventq.hh	/^    EventWrapper(T &obj, bool del = false, Priority p = Default_Pri)$/;"	f	class:EventWrapper
EventWrapper	src/sim/eventq.hh	/^    EventWrapper(T *obj, bool del = false, Priority p = Default_Pri)$/;"	f	class:EventWrapper
EventWrapper	src/sim/eventq.hh	/^class EventWrapper : public Event$/;"	c
Events	src/dev/ide_disk.hh	/^typedef enum Events {$/;"	g
Events_t	src/dev/ide_disk.hh	/^} Events_t;$/;"	t	typeref:enum:Events
ExcCode	src/arch/mips/faults.hh	/^enum ExcCode {$/;"	g	namespace:MipsISA
ExcCodeAdEL	src/arch/mips/faults.hh	/^    ExcCodeAdEL = 4,$/;"	e	enum:MipsISA::ExcCode
ExcCodeAdES	src/arch/mips/faults.hh	/^    ExcCodeAdES = 5,$/;"	e	enum:MipsISA::ExcCode
ExcCodeBp	src/arch/mips/faults.hh	/^    ExcCodeBp = 9,$/;"	e	enum:MipsISA::ExcCode
ExcCodeC2E	src/arch/mips/faults.hh	/^    ExcCodeC2E = 18,$/;"	e	enum:MipsISA::ExcCode
ExcCodeCacheErr	src/arch/mips/faults.hh	/^    ExcCodeCacheErr = 30$/;"	e	enum:MipsISA::ExcCode
ExcCodeCpU	src/arch/mips/faults.hh	/^    ExcCodeCpU = 11,$/;"	e	enum:MipsISA::ExcCode
ExcCodeDBE	src/arch/mips/faults.hh	/^    ExcCodeDBE = 7,$/;"	e	enum:MipsISA::ExcCode
ExcCodeDummy	src/arch/mips/faults.hh	/^    ExcCodeDummy = 0,$/;"	e	enum:MipsISA::ExcCode
ExcCodeIBE	src/arch/mips/faults.hh	/^    ExcCodeIBE = 6,$/;"	e	enum:MipsISA::ExcCode
ExcCodeInt	src/arch/mips/faults.hh	/^    ExcCodeInt = 0,$/;"	e	enum:MipsISA::ExcCode
ExcCodeMCheck	src/arch/mips/faults.hh	/^    ExcCodeMCheck = 24,$/;"	e	enum:MipsISA::ExcCode
ExcCodeMDMX	src/arch/mips/faults.hh	/^    ExcCodeMDMX = 22,$/;"	e	enum:MipsISA::ExcCode
ExcCodeMod	src/arch/mips/faults.hh	/^    ExcCodeMod = 1,$/;"	e	enum:MipsISA::ExcCode
ExcCodeOv	src/arch/mips/faults.hh	/^    ExcCodeOv = 12,$/;"	e	enum:MipsISA::ExcCode
ExcCodeRI	src/arch/mips/faults.hh	/^    ExcCodeRI = 10,$/;"	e	enum:MipsISA::ExcCode
ExcCodeSys	src/arch/mips/faults.hh	/^    ExcCodeSys = 8,$/;"	e	enum:MipsISA::ExcCode
ExcCodeThread	src/arch/mips/faults.hh	/^    ExcCodeThread = 25,$/;"	e	enum:MipsISA::ExcCode
ExcCodeTlbL	src/arch/mips/faults.hh	/^    ExcCodeTlbL = 2,$/;"	e	enum:MipsISA::ExcCode
ExcCodeTlbS	src/arch/mips/faults.hh	/^    ExcCodeTlbS = 3,$/;"	e	enum:MipsISA::ExcCode
ExcCodeTr	src/arch/mips/faults.hh	/^    ExcCodeTr = 13,$/;"	e	enum:MipsISA::ExcCode
ExcCodeWatch	src/arch/mips/faults.hh	/^    ExcCodeWatch = 23,$/;"	e	enum:MipsISA::ExcCode
ExceptionClass	src/arch/arm/types.hh	/^    enum ExceptionClass {$/;"	g	namespace:ArmISA
ExceptionLevel	src/arch/arm/types.hh	/^    enum ExceptionLevel {$/;"	g	namespace:ArmISA
ExeTracer	src/cpu/BaseCPU.py	/^from ExeTracer import ExeTracer$/;"	i
ExeTracer	src/cpu/ExeTracer.py	/^class ExeTracer(InstTracer):$/;"	c
ExeTracer	src/cpu/NativeTrace.py	/^from ExeTracer import ExeTracer$/;"	i
ExeTracer	src/cpu/exetrace.hh	/^    ExeTracer(const Params *params) : InstTracer(params)$/;"	f	class:Trace::ExeTracer
ExeTracer	src/cpu/exetrace.hh	/^class ExeTracer : public InstTracer$/;"	c	namespace:Trace
ExeTracerRecord	src/cpu/exetrace.hh	/^    ExeTracerRecord(Tick _when, ThreadContext *_thread,$/;"	f	class:Trace::ExeTracerRecord
ExeTracerRecord	src/cpu/exetrace.hh	/^class ExeTracerRecord : public InstRecord$/;"	c	namespace:Trace
ExecContext	src/cpu/exec_context.hh	/^class ExecContext {$/;"	c
ExecToCommit	src/cpu/ozone/back_end.hh	/^    typedef SizeStruct ExecToCommit;$/;"	t	class:BackEnd
ExecToCommit	src/cpu/ozone/lw_back_end.hh	/^    typedef SizeStruct ExecToCommit;$/;"	t	class:LWBackEnd
ExecUnit	src/cpu/inorder/pipeline_traits.5stage.hh	/^       ExecUnit,$/;"	e	enum:ThePipeline::ResourceList
ExecUnit	src/cpu/inorder/pipeline_traits.9stage.hh	/^       ExecUnit,$/;"	e	enum:ThePipeline::ResourceList
ExecUnit	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^       ExecUnit,$/;"	e	enum:ThePipeline::ResourceList
ExecUnit	src/cpu/inorder/pipeline_traits.hh	/^       ExecUnit,$/;"	e	enum:ThePipeline::ResourceId
Execute	src/sim/tlb.hh	/^    enum Mode { Read, Write, Execute };$/;"	e	enum:BaseTLB::Mode
ExecuteInst	src/cpu/inorder/resources/execution_unit.hh	/^        ExecuteInst$/;"	e	enum:ExecutionUnit::Command
Executed	src/cpu/base_dyn_inst.hh	/^        Executed,                \/\/\/ Instruction has executed$/;"	e	enum:BaseDynInst::Status
Executed	src/cpu/inorder/inorder_dyn_inst.hh	/^        Executed,                \/\/\/ Instruction has executed$/;"	e	enum:InOrderDynInst::Status
ExecutionUnit	src/cpu/inorder/resources/execution_unit.cc	/^ExecutionUnit::ExecutionUnit(string res_name, int res_id, int res_width,$/;"	f	class:ExecutionUnit
ExecutionUnit	src/cpu/inorder/resources/execution_unit.hh	/^class ExecutionUnit : public Resource {$/;"	c
ExpansionROM	src/dev/Pci.py	/^    ExpansionROM = Param.UInt32(0x00, "Expansion ROM Base Address")$/;"	v	class:PciDevice
ExprAST	src/mem/slicc/ast/EnumExprAST.py	/^from slicc.ast.ExprAST import ExprAST$/;"	i
ExprAST	src/mem/slicc/ast/ExprAST.py	/^class ExprAST(AST):$/;"	c
ExprAST	src/mem/slicc/ast/FuncCallExprAST.py	/^from slicc.ast.ExprAST import ExprAST$/;"	i
ExprAST	src/mem/slicc/ast/IsValidPtrExprAST.py	/^from slicc.ast.ExprAST import ExprAST$/;"	i
ExprAST	src/mem/slicc/ast/LiteralExprAST.py	/^from slicc.ast.ExprAST import ExprAST$/;"	i
ExprAST	src/mem/slicc/ast/MemberExprAST.py	/^from slicc.ast.ExprAST import ExprAST$/;"	i
ExprAST	src/mem/slicc/ast/MethodCallExprAST.py	/^from slicc.ast.ExprAST import ExprAST$/;"	i
ExprAST	src/mem/slicc/ast/NewExprAST.py	/^from slicc.ast.ExprAST import ExprAST$/;"	i
ExprAST	src/mem/slicc/ast/OodAST.py	/^from slicc.ast.ExprAST import ExprAST$/;"	i
ExprAST	src/mem/slicc/ast/OperatorExprAST.py	/^from slicc.ast.ExprAST import ExprAST$/;"	i
ExprAST	src/mem/slicc/ast/StaticCastAST.py	/^from slicc.ast.ExprAST import ExprAST$/;"	i
ExprAST	src/mem/slicc/ast/VarExprAST.py	/^from slicc.ast.ExprAST import ExprAST$/;"	i
ExprStatementAST	src/mem/slicc/ast/ExprStatementAST.py	/^class ExprStatementAST(StatementAST):$/;"	c
ExtCharacteristic	src/arch/x86/bios/SMBios.py	/^class ExtCharacteristic(Enum):$/;"	c
ExtConfigEntry	src/arch/x86/bios/intelmp.cc	/^X86ISA::IntelMP::ExtConfigEntry::ExtConfigEntry(Params * p,$/;"	f	class:X86ISA::IntelMP::ExtConfigEntry
ExtConfigEntry	src/arch/x86/bios/intelmp.hh	/^class ExtConfigEntry : public SimObject$/;"	c	namespace:X86ISA::IntelMP
ExtInt	src/arch/x86/intmessage.hh	/^            ExtInt = 7,$/;"	e	enum:X86ISA::DeliveryMode::IntDeliveryMode
ExtMachInst	src/arch/alpha/types.hh	/^typedef uint64_t ExtMachInst;$/;"	t	namespace:AlphaISA
ExtMachInst	src/arch/mips/types.hh	/^typedef uint64_t ExtMachInst;$/;"	t	namespace:MipsISA
ExtMachInst	src/arch/sparc/types.hh	/^typedef uint64_t ExtMachInst;$/;"	t	namespace:SparcISA
ExtMachInst	src/arch/x86/types.hh	/^    struct ExtMachInst$/;"	s	namespace:X86ISA
ExtMachInst	src/cpu/inorder/inorder_dyn_inst.hh	/^    typedef TheISA::ExtMachInst ExtMachInst;$/;"	t	class:InOrderDynInst
ExtMachInst	src/cpu/inorder/resources/fetch_unit.hh	/^    typedef TheISA::ExtMachInst ExtMachInst;$/;"	t	class:FetchUnit
ExtMachInst	src/cpu/o3/dyn_inst.hh	/^    typedef TheISA::ExtMachInst ExtMachInst;$/;"	t	class:BaseO3DynInst
ExtMachInst	src/cpu/o3/fetch.hh	/^    typedef TheISA::ExtMachInst ExtMachInst;$/;"	t	class:DefaultFetch
ExtMachInst	src/cpu/ozone/dyn_inst.hh	/^    typedef TheISA::ExtMachInst ExtMachInst;$/;"	t	class:OzoneDynInst
ExtMachInst	src/cpu/static_inst.hh	/^    typedef TheISA::ExtMachInst ExtMachInst;$/;"	t	class:StaticInst
ExtendedCpuidFunctions	src/arch/x86/cpuid.cc	/^    enum ExtendedCpuidFunctions {$/;"	g	namespace:X86ISA	file:
ExtendedFlagsForDescriptors	src/dev/ns_gige_reg.h	/^enum ExtendedFlagsForDescriptors {$/;"	g
ExtendedKey	src/dev/ps2.cc	/^const uint8_t ExtendedKey = 0xe0;$/;"	m	namespace:Ps2	file:
ExternalInterrupt	src/arch/x86/faults.hh	/^        ExternalInterrupt(uint8_t _vector) :$/;"	f	class:X86ISA::ExternalInterrupt
ExternalInterrupt	src/arch/x86/faults.hh	/^    class ExternalInterrupt : public X86Interrupt$/;"	c	namespace:X86ISA
ExternallyInitiatedReset	src/arch/sparc/faults.hh	/^class ExternallyInitiatedReset : public SparcFault<ExternallyInitiatedReset> {};$/;"	c	namespace:SparcISA
F64_stat	src/kern/tru64/tru64.hh	/^    struct F64_stat {$/;"	s	class:Tru64_F64
F64_statfs	src/kern/tru64/tru64.hh	/^    struct F64_statfs {$/;"	s	class:Tru64
FALRU	src/mem/cache/tags/Tags.py	/^class FALRU(BaseTags):$/;"	c
FALRU	src/mem/cache/tags/fa_lru.cc	/^FALRU::FALRU(const Params *p)$/;"	f	class:FALRU
FALRU	src/mem/cache/tags/fa_lru.hh	/^class FALRU : public BaseTags$/;"	c
FALRUBlk	src/mem/cache/tags/fa_lru.hh	/^class FALRUBlk : public CacheBlk$/;"	c
FCRTH	src/dev/i8254xGBe_defs.hh	/^    struct FCRTH : public Reg<uint32_t> { \/\/ 0x2168 FCRTL Register$/;"	s	struct:iGbReg::Regs
FCRTL	src/dev/i8254xGBe_defs.hh	/^    struct FCRTL : public Reg<uint32_t> { \/\/ 0x2160 FCRTL Register$/;"	s	struct:iGbReg::Regs
FCSRBits	src/arch/mips/registers.hh	/^enum FCSRBits {$/;"	g	namespace:MipsISA
FCSRFields	src/arch/mips/registers.hh	/^enum FCSRFields {$/;"	g	namespace:MipsISA
FCTTV	src/dev/i8254xGBe_defs.hh	/^    struct FCTTV : public Reg<uint32_t> { \/\/ 0x0170 FCTTV$/;"	s	struct:iGbReg::Regs
FDR	src/base/loader/coff_sym.h	/^} FDR, *pFDR;$/;"	t	typeref:struct:ecoff_fdr
FEATURES_OFFSET	src/dev/ide_disk.hh	/^#define FEATURES_OFFSET /;"	d
FFModel	src/mem/ruby/network/orion/FlipFlop.hh	/^    enum FFModel$/;"	g	class:FlipFlop
FHASH_ADDR	src/dev/ns_gige.hh	/^const uint16_t FHASH_ADDR  = 0x100;$/;"	v
FHASH_SIZE	src/dev/ns_gige.hh	/^const uint16_t FHASH_SIZE  = 0x100;$/;"	v
FIND	src/unittest/initest.cc	/^#define FIND(/;"	d	file:
FIONREAD_	src/arch/arm/linux/linux.hh	/^    static const unsigned FIONREAD_   = 0x4004667f;$/;"	m	class:ArmLinux64
FIQEn	src/dev/arm/vgic.hh	/^    Bitfield<3> FIQEn;$/;"	m	class:VGic
FIT	src/base/loader/coff_sym.h	/^typedef coff_int FIT, *pFIT;$/;"	t
FIXED_B_SMAX	src/arch/mips/dsp.hh	/^const uint64_t FIXED_B_SMAX = ULL(0x000000000000007f);$/;"	m	namespace:MipsISA
FIXED_B_SMIN	src/arch/mips/dsp.hh	/^const uint64_t FIXED_B_SMIN = ULL(0xffffffffffffff80);$/;"	m	namespace:MipsISA
FIXED_B_UMAX	src/arch/mips/dsp.hh	/^const uint64_t FIXED_B_UMAX = ULL(0x00000000000000ff);$/;"	m	namespace:MipsISA
FIXED_B_UMIN	src/arch/mips/dsp.hh	/^const uint64_t FIXED_B_UMIN = ULL(0x0000000000000000);$/;"	m	namespace:MipsISA
FIXED_H_SMAX	src/arch/mips/dsp.hh	/^const uint64_t FIXED_H_SMAX = ULL(0x0000000000007fff);$/;"	m	namespace:MipsISA
FIXED_H_SMIN	src/arch/mips/dsp.hh	/^const uint64_t FIXED_H_SMIN = ULL(0xffffffffffff8000);$/;"	m	namespace:MipsISA
FIXED_H_UMAX	src/arch/mips/dsp.hh	/^const uint64_t FIXED_H_UMAX = ULL(0x000000000000ffff);$/;"	m	namespace:MipsISA
FIXED_H_UMIN	src/arch/mips/dsp.hh	/^const uint64_t FIXED_H_UMIN = ULL(0x0000000000000000);$/;"	m	namespace:MipsISA
FIXED_L_SMAX	src/arch/mips/dsp.hh	/^const uint64_t FIXED_L_SMAX = ULL(0x7fffffffffffffff);$/;"	m	namespace:MipsISA
FIXED_L_SMIN	src/arch/mips/dsp.hh	/^const uint64_t FIXED_L_SMIN = ULL(0x8000000000000000);$/;"	m	namespace:MipsISA
FIXED_L_UMAX	src/arch/mips/dsp.hh	/^const uint64_t FIXED_L_UMAX = ULL(0xffffffffffffffff);$/;"	m	namespace:MipsISA
FIXED_L_UMIN	src/arch/mips/dsp.hh	/^const uint64_t FIXED_L_UMIN = ULL(0x0000000000000000);$/;"	m	namespace:MipsISA
FIXED_SMAX	src/arch/mips/dsp.hh	/^const uint64_t FIXED_SMAX[SIMD_NUM_FMTS] =$/;"	m	namespace:MipsISA
FIXED_SMIN	src/arch/mips/dsp.hh	/^const uint64_t FIXED_SMIN[SIMD_NUM_FMTS] =$/;"	m	namespace:MipsISA
FIXED_UMAX	src/arch/mips/dsp.hh	/^const uint64_t FIXED_UMAX[SIMD_NUM_FMTS] =$/;"	m	namespace:MipsISA
FIXED_UMIN	src/arch/mips/dsp.hh	/^const uint64_t FIXED_UMIN[SIMD_NUM_FMTS] =$/;"	m	namespace:MipsISA
FIXED_W_SMAX	src/arch/mips/dsp.hh	/^const uint64_t FIXED_W_SMAX = ULL(0x000000007fffffff);$/;"	m	namespace:MipsISA
FIXED_W_SMIN	src/arch/mips/dsp.hh	/^const uint64_t FIXED_W_SMIN = ULL(0xffffffff80000000);$/;"	m	namespace:MipsISA
FIXED_W_UMAX	src/arch/mips/dsp.hh	/^const uint64_t FIXED_W_UMAX = ULL(0x00000000ffffffff);$/;"	m	namespace:MipsISA
FIXED_W_UMIN	src/arch/mips/dsp.hh	/^const uint64_t FIXED_W_UMIN = ULL(0x0000000000000000);$/;"	m	namespace:MipsISA
FLOATREG_FCCR	src/arch/mips/registers.hh	/^   FLOATREG_FCCR,$/;"	e	enum:MipsISA::FPControlRegNums
FLOATREG_FCSR	src/arch/mips/registers.hh	/^   FLOATREG_FCSR$/;"	e	enum:MipsISA::FPControlRegNums
FLOATREG_FENR	src/arch/mips/registers.hh	/^   FLOATREG_FENR,$/;"	e	enum:MipsISA::FPControlRegNums
FLOATREG_FEXR	src/arch/mips/registers.hh	/^   FLOATREG_FEXR,$/;"	e	enum:MipsISA::FPControlRegNums
FLOATREG_FIR	src/arch/mips/registers.hh	/^   FLOATREG_FIR = NumFloatArchRegs,$/;"	e	enum:MipsISA::FPControlRegNums
FLOATREG_FPR	src/arch/x86/regs/float.hh	/^    FLOATREG_FPR(int index)$/;"	f	namespace:X86ISA
FLOATREG_FPR0	src/arch/x86/regs/float.hh	/^        FLOATREG_FPR0 = FLOATREG_FPR_BASE,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_FPR1	src/arch/x86/regs/float.hh	/^        FLOATREG_FPR1,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_FPR2	src/arch/x86/regs/float.hh	/^        FLOATREG_FPR2,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_FPR3	src/arch/x86/regs/float.hh	/^        FLOATREG_FPR3,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_FPR4	src/arch/x86/regs/float.hh	/^        FLOATREG_FPR4,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_FPR5	src/arch/x86/regs/float.hh	/^        FLOATREG_FPR5,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_FPR6	src/arch/x86/regs/float.hh	/^        FLOATREG_FPR6,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_FPR7	src/arch/x86/regs/float.hh	/^        FLOATREG_FPR7,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_FPR_BASE	src/arch/x86/regs/float.hh	/^        FLOATREG_FPR_BASE = FLOATREG_MMX_BASE,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_MICROFP	src/arch/x86/regs/float.hh	/^    FLOATREG_MICROFP(int index)$/;"	f	namespace:X86ISA
FLOATREG_MICROFP0	src/arch/x86/regs/float.hh	/^        FLOATREG_MICROFP0 = FLOATREG_MICROFP_BASE,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_MICROFP1	src/arch/x86/regs/float.hh	/^        FLOATREG_MICROFP1,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_MICROFP2	src/arch/x86/regs/float.hh	/^        FLOATREG_MICROFP2,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_MICROFP3	src/arch/x86/regs/float.hh	/^        FLOATREG_MICROFP3,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_MICROFP4	src/arch/x86/regs/float.hh	/^        FLOATREG_MICROFP4,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_MICROFP5	src/arch/x86/regs/float.hh	/^        FLOATREG_MICROFP5,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_MICROFP6	src/arch/x86/regs/float.hh	/^        FLOATREG_MICROFP6,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_MICROFP7	src/arch/x86/regs/float.hh	/^        FLOATREG_MICROFP7,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_MICROFP_BASE	src/arch/x86/regs/float.hh	/^        FLOATREG_MICROFP_BASE = FLOATREG_XMM_BASE + 2 * NumXMMRegs,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_MMX	src/arch/x86/regs/float.hh	/^    FLOATREG_MMX(int index)$/;"	f	namespace:X86ISA
FLOATREG_MMX0	src/arch/x86/regs/float.hh	/^        FLOATREG_MMX0 = FLOATREG_MMX_BASE,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_MMX1	src/arch/x86/regs/float.hh	/^        FLOATREG_MMX1,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_MMX2	src/arch/x86/regs/float.hh	/^        FLOATREG_MMX2,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_MMX3	src/arch/x86/regs/float.hh	/^        FLOATREG_MMX3,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_MMX4	src/arch/x86/regs/float.hh	/^        FLOATREG_MMX4,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_MMX5	src/arch/x86/regs/float.hh	/^        FLOATREG_MMX5,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_MMX6	src/arch/x86/regs/float.hh	/^        FLOATREG_MMX6,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_MMX7	src/arch/x86/regs/float.hh	/^        FLOATREG_MMX7,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_MMX_BASE	src/arch/x86/regs/float.hh	/^        FLOATREG_MMX_BASE,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_STACK	src/arch/x86/regs/float.hh	/^    FLOATREG_STACK(int index, int top)$/;"	f	namespace:X86ISA
FLOATREG_XMM0_HIGH	src/arch/x86/regs/float.hh	/^        FLOATREG_XMM0_HIGH,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_XMM0_LOW	src/arch/x86/regs/float.hh	/^        FLOATREG_XMM0_LOW = FLOATREG_XMM_BASE,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_XMM10_HIGH	src/arch/x86/regs/float.hh	/^        FLOATREG_XMM10_HIGH,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_XMM10_LOW	src/arch/x86/regs/float.hh	/^        FLOATREG_XMM10_LOW,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_XMM11_HIGH	src/arch/x86/regs/float.hh	/^        FLOATREG_XMM11_HIGH,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_XMM11_LOW	src/arch/x86/regs/float.hh	/^        FLOATREG_XMM11_LOW,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_XMM12_HIGH	src/arch/x86/regs/float.hh	/^        FLOATREG_XMM12_HIGH,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_XMM12_LOW	src/arch/x86/regs/float.hh	/^        FLOATREG_XMM12_LOW,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_XMM13_HIGH	src/arch/x86/regs/float.hh	/^        FLOATREG_XMM13_HIGH,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_XMM13_LOW	src/arch/x86/regs/float.hh	/^        FLOATREG_XMM13_LOW,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_XMM14_HIGH	src/arch/x86/regs/float.hh	/^        FLOATREG_XMM14_HIGH,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_XMM14_LOW	src/arch/x86/regs/float.hh	/^        FLOATREG_XMM14_LOW,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_XMM15_HIGH	src/arch/x86/regs/float.hh	/^        FLOATREG_XMM15_HIGH,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_XMM15_LOW	src/arch/x86/regs/float.hh	/^        FLOATREG_XMM15_LOW,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_XMM1_HIGH	src/arch/x86/regs/float.hh	/^        FLOATREG_XMM1_HIGH,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_XMM1_LOW	src/arch/x86/regs/float.hh	/^        FLOATREG_XMM1_LOW,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_XMM2_HIGH	src/arch/x86/regs/float.hh	/^        FLOATREG_XMM2_HIGH,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_XMM2_LOW	src/arch/x86/regs/float.hh	/^        FLOATREG_XMM2_LOW,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_XMM3_HIGH	src/arch/x86/regs/float.hh	/^        FLOATREG_XMM3_HIGH,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_XMM3_LOW	src/arch/x86/regs/float.hh	/^        FLOATREG_XMM3_LOW,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_XMM4_HIGH	src/arch/x86/regs/float.hh	/^        FLOATREG_XMM4_HIGH,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_XMM4_LOW	src/arch/x86/regs/float.hh	/^        FLOATREG_XMM4_LOW,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_XMM5_HIGH	src/arch/x86/regs/float.hh	/^        FLOATREG_XMM5_HIGH,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_XMM5_LOW	src/arch/x86/regs/float.hh	/^        FLOATREG_XMM5_LOW,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_XMM6_HIGH	src/arch/x86/regs/float.hh	/^        FLOATREG_XMM6_HIGH,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_XMM6_LOW	src/arch/x86/regs/float.hh	/^        FLOATREG_XMM6_LOW,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_XMM7_HIGH	src/arch/x86/regs/float.hh	/^        FLOATREG_XMM7_HIGH,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_XMM7_LOW	src/arch/x86/regs/float.hh	/^        FLOATREG_XMM7_LOW,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_XMM8_HIGH	src/arch/x86/regs/float.hh	/^        FLOATREG_XMM8_HIGH,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_XMM8_LOW	src/arch/x86/regs/float.hh	/^        FLOATREG_XMM8_LOW,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_XMM9_HIGH	src/arch/x86/regs/float.hh	/^        FLOATREG_XMM9_HIGH,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_XMM9_LOW	src/arch/x86/regs/float.hh	/^        FLOATREG_XMM9_LOW,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_XMM_BASE	src/arch/x86/regs/float.hh	/^        FLOATREG_XMM_BASE = FLOATREG_MMX_BASE + NumMMXRegs,$/;"	e	enum:X86ISA::FloatRegIndex
FLOATREG_XMM_HIGH	src/arch/x86/regs/float.hh	/^    FLOATREG_XMM_HIGH(int index)$/;"	f	namespace:X86ISA
FLOATREG_XMM_LOW	src/arch/x86/regs/float.hh	/^    FLOATREG_XMM_LOW(int index)$/;"	f	namespace:X86ISA
FL_BAD	src/base/cp_annotate.hh	/^        FL_BAD      = 0x02,$/;"	e	enum:CPA::flags
FL_HW	src/base/cp_annotate.hh	/^        FL_HW       = 0x01,$/;"	e	enum:CPA::flags
FL_LINK	src/base/cp_annotate.hh	/^        FL_LINK     = 0x10,$/;"	e	enum:CPA::flags
FL_NONE	src/base/cp_annotate.hh	/^        FL_NONE     = 0x00,$/;"	e	enum:CPA::flags
FL_QOPP	src/base/cp_annotate.hh	/^        FL_QOPP     = 0x04,$/;"	e	enum:CPA::flags
FL_RESET	src/base/cp_annotate.hh	/^        FL_RESET    = 0x20$/;"	e	enum:CPA::flags
FL_WAIT	src/base/cp_annotate.hh	/^        FL_WAIT     = 0x08,$/;"	e	enum:CPA::flags
FOREACH_DREG	src/cpu/kvm/x86_cpu.cc	/^#define FOREACH_DREG(/;"	d	file:
FOREACH_DTABLE	src/cpu/kvm/x86_cpu.cc	/^#define FOREACH_DTABLE(/;"	d	file:
FOREACH_IREG	src/cpu/kvm/x86_cpu.cc	/^#define FOREACH_IREG(/;"	d	file:
FOREACH_SEGMENT	src/cpu/kvm/x86_cpu.cc	/^#define FOREACH_SEGMENT(/;"	d	file:
FOREACH_SREG	src/cpu/kvm/x86_cpu.cc	/^#define FOREACH_SREG(/;"	d	file:
FPCRRounding	src/arch/arm/insts/fplib.hh	/^FPCRRounding(FPSCR &fpscr)$/;"	f	namespace:ArmISA
FPControlRegNums	src/arch/mips/registers.hh	/^enum FPControlRegNums {$/;"	g	namespace:MipsISA
FPLIB_AHP	src/arch/arm/insts/fplib.cc	/^#define FPLIB_AHP /;"	d	file:
FPLIB_DN	src/arch/arm/insts/fplib.cc	/^#define FPLIB_DN /;"	d	file:
FPLIB_DZC	src/arch/arm/insts/fplib.cc	/^#define FPLIB_DZC /;"	d	file:
FPLIB_FZ	src/arch/arm/insts/fplib.cc	/^#define FPLIB_FZ /;"	d	file:
FPLIB_IDC	src/arch/arm/insts/fplib.cc	/^#define FPLIB_IDC /;"	d	file:
FPLIB_IOC	src/arch/arm/insts/fplib.cc	/^#define FPLIB_IOC /;"	d	file:
FPLIB_IXC	src/arch/arm/insts/fplib.cc	/^#define FPLIB_IXC /;"	d	file:
FPLIB_OFC	src/arch/arm/insts/fplib.cc	/^#define FPLIB_OFC /;"	d	file:
FPLIB_RM	src/arch/arm/insts/fplib.cc	/^#define FPLIB_RM /;"	d	file:
FPLIB_RN	src/arch/arm/insts/fplib.cc	/^#define FPLIB_RN /;"	d	file:
FPLIB_RP	src/arch/arm/insts/fplib.cc	/^#define FPLIB_RP /;"	d	file:
FPLIB_RZ	src/arch/arm/insts/fplib.cc	/^#define FPLIB_RZ /;"	d	file:
FPLIB_UFC	src/arch/arm/insts/fplib.cc	/^#define FPLIB_UFC /;"	d	file:
FPRounding	src/arch/arm/insts/fplib.hh	/^enum FPRounding {$/;"	g	namespace:ArmISA
FPRounding_NEGINF	src/arch/arm/insts/fplib.hh	/^    FPRounding_NEGINF = 2,$/;"	e	enum:ArmISA::FPRounding
FPRounding_ODD	src/arch/arm/insts/fplib.hh	/^    FPRounding_ODD = 5$/;"	e	enum:ArmISA::FPRounding
FPRounding_POSINF	src/arch/arm/insts/fplib.hh	/^    FPRounding_POSINF = 1,$/;"	e	enum:ArmISA::FPRounding
FPRounding_TIEAWAY	src/arch/arm/insts/fplib.hh	/^    FPRounding_TIEAWAY = 4,$/;"	e	enum:ArmISA::FPRounding
FPRounding_TIEEVEN	src/arch/arm/insts/fplib.hh	/^    FPRounding_TIEEVEN = 0,$/;"	e	enum:ArmISA::FPRounding
FPRounding_ZERO	src/arch/arm/insts/fplib.hh	/^    FPRounding_ZERO = 3,$/;"	e	enum:ArmISA::FPRounding
FPToFixed_32	src/arch/arm/insts/fplib.cc	/^FPToFixed_32(int sgn, int exp, uint64_t mnt, bool u, FPRounding rounding,$/;"	f	namespace:ArmISA
FPToFixed_64	src/arch/arm/insts/fplib.cc	/^FPToFixed_64(int sgn, int exp, uint64_t mnt, bool u, FPRounding rounding,$/;"	f	namespace:ArmISA
FP_ALU	src/cpu/o3/FuncUnitConfig.py	/^class FP_ALU(FUDesc):$/;"	c
FP_MultDiv	src/cpu/o3/FuncUnitConfig.py	/^class FP_MultDiv(FUDesc):$/;"	c
FP_Reg_Base	src/arch/alpha/registers.hh	/^    FP_Reg_Base = NumIntRegs,$/;"	e	enum:AlphaISA::DependenceTags
FP_Reg_Base	src/arch/arm/registers.hh	/^const int FP_Reg_Base = NumIntRegs * (MODE_MAXMODE + 1);$/;"	m	namespace:ArmISA
FP_Reg_Base	src/arch/mips/registers.hh	/^const int FP_Reg_Base = NumIntRegs;$/;"	m	namespace:MipsISA
FP_Reg_Base	src/arch/power/registers.hh	/^const int FP_Reg_Base = NumIntRegs;$/;"	m	namespace:PowerISA
FP_Reg_Base	src/arch/sparc/registers.hh	/^    FP_Reg_Base = NumIntRegs,$/;"	e	enum:SparcISA::DependenceTags
FP_Reg_Base	src/arch/x86/registers.hh	/^    FP_Reg_Base = 128,$/;"	e	enum:X86ISA::DependenceTags
FS	src/arch/x86/decoder_tables.cc	/^    const uint8_t FS = FSOverride;$/;"	m	namespace:X86ISA	file:
FSOverride	src/arch/x86/types.hh	/^        FSOverride,$/;"	e	enum:X86ISA::Prefixes
FSTranslatingPortProxy	src/mem/fs_translating_port_proxy.cc	/^FSTranslatingPortProxy::FSTranslatingPortProxy(MasterPort &port,$/;"	f	class:FSTranslatingPortProxy
FSTranslatingPortProxy	src/mem/fs_translating_port_proxy.cc	/^FSTranslatingPortProxy::FSTranslatingPortProxy(ThreadContext *tc)$/;"	f	class:FSTranslatingPortProxy
FSTranslatingPortProxy	src/mem/fs_translating_port_proxy.hh	/^class FSTranslatingPortProxy : public PortProxy$/;"	c
FUCompletion	src/cpu/o3/inst_queue.hh	/^    class FUCompletion : public Event {$/;"	c	class:InstructionQueue
FUCompletion	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::FUCompletion::FUCompletion(DynInstPtr &_inst,$/;"	f	class:InstructionQueue::FUCompletion
FUDDiterator	src/cpu/func_unit.hh	/^typedef std::vector<FUDesc *>::const_iterator FUDDiterator;$/;"	t
FUDesc	src/cpu/FuncUnit.py	/^class FUDesc(SimObject):$/;"	c
FUDesc	src/cpu/func_unit.hh	/^    FUDesc(const FUDescParams *p)$/;"	f	class:FUDesc
FUDesc	src/cpu/func_unit.hh	/^class FUDesc : public SimObject$/;"	c
FUIdxQueue	src/cpu/o3/fu_pool.hh	/^        FUIdxQueue()$/;"	f	class:FUPool::FUIdxQueue
FUIdxQueue	src/cpu/o3/fu_pool.hh	/^    class FUIdxQueue {$/;"	c	class:FUPool
FUList	src/cpu/o3/FUPool.py	/^    FUList = VectorParam.FUDesc("list of FU's for this pool")$/;"	v	class:FUPool
FUList	src/cpu/o3/FUPool.py	/^    FUList = [ IntALU(), IntMultDiv(), FP_ALU(), FP_MultDiv(), ReadPort(),$/;"	v	class:DefaultFUPool
FUPool	src/cpu/o3/FUPool.py	/^class FUPool(SimObject):$/;"	c
FUPool	src/cpu/o3/fu_pool.cc	/^FUPool::FUPool(const Params *p)$/;"	f	class:FUPool
FUPool	src/cpu/o3/fu_pool.hh	/^class FUPool : public SimObject$/;"	c
FWSM	src/dev/i8254xGBe_defs.hh	/^    struct FWSM : public Reg<uint32_t> { \/\/ 0x5B54 FWSM register$/;"	s	struct:iGbReg::Regs
FXSave	src/cpu/kvm/x86_cpu.cc	/^struct FXSave$/;"	s	file:
False	src/arch/x86/insts/microop.hh	/^            False,$/;"	e	enum:X86ISA::ConditionTests::CondTest
FamilyModelStepping	src/arch/x86/cpuid.cc	/^        FamilyModelStepping,$/;"	e	enum:X86ISA::StandardCpuidFunction	file:
FamilyModelSteppingBrandFeatures	src/arch/x86/cpuid.cc	/^        FamilyModelSteppingBrandFeatures,$/;"	e	enum:X86ISA::ExtendedCpuidFunctions	file:
FarIndex	src/arch/arm/faults.hh	/^    static const MiscRegIndex FarIndex  = MISCREG_DFAR;$/;"	m	class:ArmISA::DataAbort
FarIndex	src/arch/arm/faults.hh	/^    static const MiscRegIndex FarIndex  = MISCREG_DFAR;$/;"	m	class:ArmISA::VirtualDataAbort
FarIndex	src/arch/arm/faults.hh	/^    static const MiscRegIndex FarIndex  = MISCREG_IFAR;$/;"	m	class:ArmISA::PrefetchAbort
FastDataAccessMMUMiss	src/arch/sparc/faults.hh	/^    FastDataAccessMMUMiss() : vaddr(0)$/;"	f	class:SparcISA::FastDataAccessMMUMiss
FastDataAccessMMUMiss	src/arch/sparc/faults.hh	/^    FastDataAccessMMUMiss(Addr addr) : vaddr(addr)$/;"	f	class:SparcISA::FastDataAccessMMUMiss
FastDataAccessMMUMiss	src/arch/sparc/faults.hh	/^class FastDataAccessMMUMiss : public SparcFault<FastDataAccessMMUMiss>$/;"	c	namespace:SparcISA
FastDataAccessProtection	src/arch/sparc/faults.hh	/^class FastDataAccessProtection : public SparcFault<FastDataAccessProtection> {};$/;"	c	namespace:SparcISA
FastInstructionAccessMMUMiss	src/arch/sparc/faults.hh	/^    FastInstructionAccessMMUMiss() : vaddr(0)$/;"	f	class:SparcISA::FastInstructionAccessMMUMiss
FastInstructionAccessMMUMiss	src/arch/sparc/faults.hh	/^    FastInstructionAccessMMUMiss(Addr addr) : vaddr(addr)$/;"	f	class:SparcISA::FastInstructionAccessMMUMiss
FastInstructionAccessMMUMiss	src/arch/sparc/faults.hh	/^class FastInstructionAccessMMUMiss :$/;"	c	namespace:SparcISA
FastInterrupt	src/arch/arm/faults.hh	/^class FastInterrupt : public ArmFaultVals<FastInterrupt>$/;"	c	namespace:ArmISA
FatalFunc	src/arch/generic/debugfaults.hh	/^        FatalFunc,$/;"	e	enum:GenericISA::M5DebugFault::DebugFunc
Fault	src/base/types.hh	/^typedef RefCountingPtr<FaultBase> Fault;$/;"	t
Fault	src/sim/fault_fwd.hh	/^typedef RefCountingPtr<FaultBase> Fault;$/;"	t
FaultBase	src/sim/faults.hh	/^class FaultBase : public RefCounted$/;"	c
FaultModel	src/mem/ruby/network/fault_model/FaultModel.cc	/^FaultModel::FaultModel(const Params *p) : SimObject(p)$/;"	f	class:FaultModel
FaultModel	src/mem/ruby/network/fault_model/FaultModel.hh	/^class FaultModel : public SimObject$/;"	c
FaultModel	src/mem/ruby/network/fault_model/FaultModel.py	/^class FaultModel(SimObject):$/;"	c
FaultName	src/sim/faults.hh	/^typedef const char * FaultName;$/;"	t
FaultOffset	src/arch/arm/faults.hh	/^typedef const Addr FaultOffset;$/;"	t	namespace:ArmISA
FaultPriority	src/arch/sparc/faults.hh	/^typedef uint32_t FaultPriority;$/;"	t	namespace:SparcISA
FaultSource	src/arch/arm/faults.hh	/^    enum FaultSource$/;"	g	class:ArmISA::ArmFault
FaultSourceInvalid	src/arch/arm/faults.hh	/^        FaultSourceInvalid = 0xff$/;"	e	enum:ArmISA::ArmFault::FaultSource
FaultStat	src/sim/faults.hh	/^typedef Stats::Scalar FaultStat;$/;"	t
FaultTypes	src/arch/sparc/tlb.hh	/^    enum FaultTypes {$/;"	g	class:SparcISA::TLB
FaultVals	src/arch/arm/faults.hh	/^    struct FaultVals$/;"	s	class:ArmISA::ArmFault
FaultVals	src/arch/mips/faults.cc	/^typedef MipsFaultBase::FaultVals FaultVals;$/;"	t	namespace:MipsISA	file:
FaultVals	src/arch/mips/faults.hh	/^    struct FaultVals$/;"	s	class:MipsISA::MipsFaultBase
FaultVals	src/arch/sparc/faults.hh	/^    struct FaultVals$/;"	s	class:SparcISA::SparcFaultBase
FaultVect	src/arch/alpha/faults.hh	/^typedef const Addr FaultVect;$/;"	t	namespace:AlphaISA
FaultVect	src/arch/mips/faults.hh	/^typedef const Addr FaultVect;$/;"	t	namespace:MipsISA
Faulting	src/cpu/simple/base.hh	/^        Faulting,$/;"	e	enum:BaseSimpleCPU::Status
Fb_Base	src/dev/arm/hdlcd.hh	/^        Fb_Base          = 0x0100,$/;"	e	enum:HDLcd::RegisterOffset
Fb_Line_Count	src/dev/arm/hdlcd.hh	/^        Fb_Line_Count    = 0x0108,$/;"	e	enum:HDLcd::RegisterOffset
Fb_Line_Length	src/dev/arm/hdlcd.hh	/^        Fb_Line_Length   = 0x0104,$/;"	e	enum:HDLcd::RegisterOffset
Fb_Line_Pitch	src/dev/arm/hdlcd.hh	/^        Fb_Line_Pitch    = 0x010C,$/;"	e	enum:HDLcd::RegisterOffset
FdMap	src/sim/process.hh	/^        FdMap()$/;"	f	class:Process::FdMap
FdMap	src/sim/process.hh	/^    class FdMap$/;"	c	class:Process
FeAllExceptions	src/arch/arm/insts/vfp.hh	/^    FeAllExceptions = FE_ALL_EXCEPT$/;"	e	enum:ArmISA::FeExceptionBit
FeDivByZero	src/arch/arm/insts/vfp.hh	/^    FeDivByZero = FE_DIVBYZERO,$/;"	e	enum:ArmISA::FeExceptionBit
FeExceptionBit	src/arch/arm/insts/vfp.hh	/^enum FeExceptionBit$/;"	g	namespace:ArmISA
FeInexact	src/arch/arm/insts/vfp.hh	/^    FeInexact = FE_INEXACT,$/;"	e	enum:ArmISA::FeExceptionBit
FeInvalid	src/arch/arm/insts/vfp.hh	/^    FeInvalid = FE_INVALID,$/;"	e	enum:ArmISA::FeExceptionBit
FeOverflow	src/arch/arm/insts/vfp.hh	/^    FeOverflow = FE_OVERFLOW,$/;"	e	enum:ArmISA::FeExceptionBit
FeRoundDown	src/arch/arm/insts/vfp.hh	/^    FeRoundDown = FE_DOWNWARD,$/;"	e	enum:ArmISA::FeRoundingMode
FeRoundNearest	src/arch/arm/insts/vfp.hh	/^    FeRoundNearest = FE_TONEAREST,$/;"	e	enum:ArmISA::FeRoundingMode
FeRoundUpward	src/arch/arm/insts/vfp.hh	/^    FeRoundUpward = FE_UPWARD$/;"	e	enum:ArmISA::FeRoundingMode
FeRoundZero	src/arch/arm/insts/vfp.hh	/^    FeRoundZero = FE_TOWARDZERO,$/;"	e	enum:ArmISA::FeRoundingMode
FeRoundingMode	src/arch/arm/insts/vfp.hh	/^enum FeRoundingMode$/;"	g	namespace:ArmISA
FeUnderflow	src/arch/arm/insts/vfp.hh	/^    FeUnderflow = FE_UNDERFLOW,$/;"	e	enum:ArmISA::FeExceptionBit
Fetch	src/cpu/o3/commit.hh	/^    typedef typename CPUPol::Fetch Fetch;$/;"	t	class:DefaultCommit
Fetch	src/cpu/o3/cpu_policy.hh	/^    typedef DefaultFetch<Impl> Fetch;$/;"	t	struct:SimpleCPUPolicy
FetchBlock	src/cpu/inorder/resources/fetch_unit.hh	/^        FetchBlock(int _asid, Addr _addr)$/;"	f	struct:FetchUnit::FetchBlock
FetchBlock	src/cpu/inorder/resources/fetch_unit.hh	/^    struct FetchBlock {$/;"	s	class:FetchUnit
FetchBuff	src/cpu/inorder/pipeline_traits.5stage.hh	/^       FetchBuff,$/;"	e	enum:ThePipeline::ResourceList
FetchBuff	src/cpu/inorder/pipeline_traits.9stage.hh	/^       FetchBuff,$/;"	e	enum:ThePipeline::ResourceList
FetchBuff	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^       FetchBuff,$/;"	e	enum:ThePipeline::ResourceList
FetchBuff	src/cpu/inorder/pipeline_traits.hh	/^       FetchBuff,$/;"	e	enum:ThePipeline::ResourceId
FetchBuff2	src/cpu/inorder/pipeline_traits.5stage.hh	/^       FetchBuff2$/;"	e	enum:ThePipeline::ResourceList
FetchBuff2	src/cpu/inorder/pipeline_traits.9stage.hh	/^       FetchBuff2$/;"	e	enum:ThePipeline::ResourceList
FetchBuff2	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^       FetchBuff2$/;"	e	enum:ThePipeline::ResourceList
FetchBuff2	src/cpu/inorder/pipeline_traits.hh	/^       FetchBuff2$/;"	e	enum:ThePipeline::ResourceId
FetchEvent	src/cpu/simple/timing.hh	/^    typedef EventWrapper<TimingSimpleCPU, &TimingSimpleCPU::fetch> FetchEvent;$/;"	t	class:TimingSimpleCPU
FetchIdx	src/cpu/o3/cpu.hh	/^        FetchIdx,$/;"	e	enum:FullO3CPU::StageIdx
FetchLookup	src/cpu/inorder/resources/tlb_unit.hh	/^        FetchLookup,$/;"	e	enum:TLBUnit::TLBCommand
FetchPriority	src/cpu/inorder/first_stage.hh	/^    enum FetchPriority {$/;"	g	class:FirstStage
FetchPriority	src/cpu/o3/fetch.hh	/^    enum FetchPriority {$/;"	g	class:DefaultFetch
FetchSeq	src/cpu/inorder/pipeline_traits.5stage.hh	/^       FetchSeq = 0,$/;"	e	enum:ThePipeline::ResourceList
FetchSeq	src/cpu/inorder/pipeline_traits.9stage.hh	/^       FetchSeq = 0,$/;"	e	enum:ThePipeline::ResourceList
FetchSeq	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^       FetchSeq = 0,$/;"	e	enum:ThePipeline::ResourceList
FetchSeq	src/cpu/inorder/pipeline_traits.hh	/^       FetchSeq = 0,$/;"	e	enum:ThePipeline::ResourceId
FetchSeqEvent	src/cpu/inorder/resources/fetch_seq_unit.cc	/^FetchSeqUnit::FetchSeqEvent::FetchSeqEvent()$/;"	f	class:FetchSeqUnit::FetchSeqEvent
FetchSeqEvent	src/cpu/inorder/resources/fetch_seq_unit.hh	/^    class FetchSeqEvent : public ResourceEvent {$/;"	c	class:FetchSeqUnit
FetchSeqUnit	src/cpu/inorder/resources/fetch_seq_unit.cc	/^FetchSeqUnit::FetchSeqUnit(std::string res_name, int res_id, int res_width,$/;"	f	class:FetchSeqUnit
FetchSeqUnit	src/cpu/inorder/resources/fetch_seq_unit.hh	/^class FetchSeqUnit : public Resource {$/;"	c
FetchStatus	src/cpu/o3/fetch.hh	/^    enum FetchStatus {$/;"	g	class:DefaultFetch
FetchStruct	src/cpu/o3/commit.hh	/^    typedef typename CPUPol::FetchStruct FetchStruct;$/;"	t	class:DefaultCommit
FetchStruct	src/cpu/o3/cpu.hh	/^    typedef typename CPUPolicy::FetchStruct FetchStruct;$/;"	t	class:FullO3CPU
FetchStruct	src/cpu/o3/cpu_policy.hh	/^    typedef DefaultFetchDefaultDecode<Impl> FetchStruct;$/;"	t	struct:SimpleCPUPolicy
FetchStruct	src/cpu/o3/decode.hh	/^    typedef typename CPUPol::FetchStruct FetchStruct;$/;"	t	class:DefaultDecode
FetchStruct	src/cpu/o3/fetch.hh	/^    typedef typename CPUPol::FetchStruct FetchStruct;$/;"	t	class:DefaultFetch
FetchTranslation	src/cpu/o3/fetch.hh	/^        FetchTranslation(DefaultFetch<Impl> *_fetch)$/;"	f	class:DefaultFetch::FetchTranslation
FetchTranslation	src/cpu/o3/fetch.hh	/^    class FetchTranslation : public BaseTLB::Translation$/;"	c	class:DefaultFetch
FetchTranslation	src/cpu/simple/timing.hh	/^        FetchTranslation(TimingSimpleCPU *_cpu)$/;"	f	class:TimingSimpleCPU::FetchTranslation
FetchTranslation	src/cpu/simple/timing.hh	/^    class FetchTranslation : public BaseTLB::Translation$/;"	c	class:TimingSimpleCPU
FetchTrapPending	src/cpu/o3/commit.hh	/^        FetchTrapPending,$/;"	e	enum:DefaultCommit::ThreadStatus
FetchUnit	src/cpu/inorder/resources/fetch_unit.cc	/^FetchUnit::FetchUnit(string res_name, int res_id, int res_width,$/;"	f	class:FetchUnit
FetchUnit	src/cpu/inorder/resources/fetch_unit.hh	/^class FetchUnit : public CacheUnit$/;"	c
Fetching	src/cpu/o3/fetch.hh	/^        Fetching,$/;"	e	enum:DefaultFetch::ThreadStatus
FillNNormal	src/arch/sparc/faults.hh	/^    FillNNormal(uint32_t n) : EnumeratedFault<FillNNormal>(n)$/;"	f	class:SparcISA::FillNNormal
FillNNormal	src/arch/sparc/faults.hh	/^class FillNNormal : public EnumeratedFault<FillNNormal>$/;"	c	namespace:SparcISA
FillNOther	src/arch/sparc/faults.hh	/^    FillNOther(uint32_t n) : EnumeratedFault<FillNOther>(n)$/;"	f	class:SparcISA::FillNOther
FillNOther	src/arch/sparc/faults.hh	/^class FillNOther : public EnumeratedFault<FillNOther>$/;"	c	namespace:SparcISA
FinishTranslationEvent	src/cpu/o3/fetch.hh	/^        FinishTranslationEvent(DefaultFetch<Impl> *_fetch)$/;"	f	class:DefaultFetch::FinishTranslationEvent
FinishTranslationEvent	src/cpu/o3/fetch.hh	/^    class FinishTranslationEvent : public Event$/;"	c	class:DefaultFetch
FirstArgumentReg	src/arch/alpha/registers.hh	/^const RegIndex FirstArgumentReg = 16;$/;"	m	namespace:AlphaISA
FirstArgumentReg	src/arch/mips/registers.hh	/^const int FirstArgumentReg = 4;$/;"	m	namespace:MipsISA
FirstArgumentReg	src/arch/sparc/process.cc	/^static const int FirstArgumentReg = 8;$/;"	v	file:
FirstStage	src/cpu/inorder/first_stage.cc	/^FirstStage::FirstStage(Params *params, unsigned stage_num)$/;"	f	class:FirstStage
FirstStage	src/cpu/inorder/first_stage.hh	/^class FirstStage : public PipelineStage {$/;"	c
Fixed	src/arch/x86/intmessage.hh	/^            Fixed = 0,$/;"	e	enum:X86ISA::DeliveryMode::IntDeliveryMode
Flag	src/base/debug.cc	/^Flag::Flag(const char *name, const char *desc)$/;"	f	class:Debug::Flag
Flag	src/base/debug.hh	/^class Flag$/;"	c	namespace:Debug
FlagBit	src/arch/x86/insts/microldstop.hh	/^    enum FlagBit {$/;"	g	namespace:X86ISA
FlagBits	src/arch/arm/types.hh	/^        enum FlagBits {$/;"	g	class:ArmISA::PCState
FlagShift	src/arch/x86/insts/microldstop.hh	/^    const int FlagShift = 4;$/;"	m	namespace:X86ISA
Flag_Field	src/arch/mips/registers.hh	/^    Flag_Field = 1,$/;"	e	enum:MipsISA::FCSRFields
Flags	src/base/flags.hh	/^    Flags() : _flags(0) {}$/;"	f	class:Flags
Flags	src/base/flags.hh	/^    Flags(Type flags) : _flags(flags) {}$/;"	f	class:Flags
Flags	src/base/flags.hh	/^class Flags$/;"	c
Flags	src/base/stats/info.hh	/^typedef ::Flags<FlagsType> Flags;$/;"	t	namespace:Stats
Flags	src/cpu/base_dyn_inst.hh	/^    enum Flags {$/;"	g	class:BaseDynInst
Flags	src/cpu/static_inst.hh	/^    enum Flags {$/;"	g	class:StaticInst
Flags	src/dev/arm/rv_ctrl.hh	/^        Flags      = 0x30,$/;"	e	enum:RealViewCtrl::__anon67
Flags	src/mem/packet.hh	/^    typedef ::Flags<FlagsType> Flags;$/;"	t	class:Packet
Flags	src/mem/request.hh	/^    typedef ::Flags<FlagsType> Flags;$/;"	t	class:Request
Flags	src/sim/eventq.hh	/^    typedef ::Flags<FlagsType> Flags;$/;"	t	class:EventBase
Flags	src/sim/syscall_emul.hh	/^    enum Flags {$/;"	g	class:SyscallDesc
FlagsClr	src/dev/arm/rv_ctrl.hh	/^        FlagsClr   = 0x34,$/;"	e	enum:RealViewCtrl::__anon67
FlagsMap	src/base/debug.hh	/^typedef std::map<std::string, Flag *> FlagsMap;$/;"	t	namespace:Debug
FlagsType	src/base/stats/info.hh	/^typedef uint16_t FlagsType;$/;"	t	namespace:Stats
FlagsType	src/mem/packet.hh	/^    typedef uint32_t FlagsType;$/;"	t	class:Packet
FlagsType	src/mem/request.hh	/^    typedef uint32_t FlagsType;$/;"	t	class:Request
FlagsType	src/sim/eventq.hh	/^    typedef unsigned short FlagsType;$/;"	t	class:EventBase
Flash	src/dev/arm/rv_ctrl.hh	/^        Flash      = 0x4C,$/;"	e	enum:RealViewCtrl::__anon67
FlexibleConsumer	src/mem/ruby/network/garnet/flexible-pipeline/FlexibleConsumer.hh	/^    FlexibleConsumer(ClockedObject *em) : Consumer(em) {}$/;"	f	class:FlexibleConsumer
FlexibleConsumer	src/mem/ruby/network/garnet/flexible-pipeline/FlexibleConsumer.hh	/^class FlexibleConsumer : public Consumer$/;"	c
FlipFlop	src/mem/ruby/network/orion/FlipFlop.cc	/^FlipFlop::FlipFlop($/;"	f	class:FlipFlop
FlipFlop	src/mem/ruby/network/orion/FlipFlop.hh	/^class FlipFlop$/;"	c
Float	src/cpu/inorder/inorder_dyn_inst.hh	/^        Float,$/;"	e	enum:InOrderDynInst::ResultType
Float	src/python/m5/params.py	/^class Float(ParamValue, float):$/;"	c
Float	src/sim/core.cc	/^namespace Float {$/;"	n	namespace:SimClock	file:
Float	src/sim/core.hh	/^namespace Float {$/;"	n	namespace:SimClock
FloatAddOp	src/cpu/op_class.hh	/^const OpClass FloatAddOp = Enums::FloatAdd;$/;"	v
FloatBits	src/cpu/inorder/inorder_dyn_inst.hh	/^        FloatBits,$/;"	e	enum:InOrderDynInst::ResultType
FloatCmpOp	src/cpu/op_class.hh	/^const OpClass FloatCmpOp = Enums::FloatCmp;$/;"	v
FloatCvtOp	src/cpu/op_class.hh	/^const OpClass FloatCvtOp = Enums::FloatCvt;$/;"	v
FloatDivOp	src/cpu/op_class.hh	/^const OpClass FloatDivOp = Enums::FloatDiv;$/;"	v
FloatEnableFault	src/arch/alpha/faults.hh	/^class FloatEnableFault : public AlphaFault$/;"	c	namespace:AlphaISA
FloatMultOp	src/cpu/op_class.hh	/^const OpClass FloatMultOp = Enums::FloatMult;$/;"	v
FloatOp	src/arch/power/insts/floating.hh	/^    FloatOp(const char *mnem, MachInst _machInst, OpClass __opClass)$/;"	f	class:PowerISA::FloatOp
FloatOp	src/arch/power/insts/floating.hh	/^class FloatOp : public PowerStaticInst$/;"	c	namespace:PowerISA
FloatReg	src/arch/alpha/registers.hh	/^typedef double FloatReg;$/;"	t	namespace:AlphaISA
FloatReg	src/arch/arm/registers.hh	/^typedef float FloatReg;$/;"	t	namespace:ArmISA
FloatReg	src/arch/mips/registers.hh	/^typedef float FloatReg;$/;"	t	namespace:MipsISA
FloatReg	src/arch/null/registers.hh	/^typedef float FloatReg;$/;"	t	namespace:NullISA
FloatReg	src/arch/power/registers.hh	/^typedef double FloatReg;$/;"	t	namespace:PowerISA
FloatReg	src/arch/sparc/registers.hh	/^typedef float FloatReg;$/;"	t	namespace:SparcISA
FloatReg	src/arch/x86/registers.hh	/^typedef double FloatReg;$/;"	t	namespace:X86ISA
FloatReg	src/cpu/base_dyn_inst.hh	/^    typedef TheISA::FloatReg FloatReg;$/;"	t	class:BaseDynInst
FloatReg	src/cpu/checker/cpu.hh	/^    typedef TheISA::FloatReg FloatReg;$/;"	t	class:CheckerCPU
FloatReg	src/cpu/inorder/cpu.hh	/^    typedef TheISA::FloatReg FloatReg;$/;"	t	class:InOrderCPU
FloatReg	src/cpu/inorder/inorder_dyn_inst.hh	/^    typedef TheISA::FloatReg FloatReg;$/;"	t	class:InOrderDynInst
FloatReg	src/cpu/o3/dyn_inst.hh	/^    typedef TheISA::FloatReg FloatReg;$/;"	t	class:BaseO3DynInst
FloatReg	src/cpu/o3/regfile.hh	/^    typedef TheISA::FloatReg FloatReg;$/;"	t	class:PhysRegFile
FloatReg	src/cpu/ozone/cpu.hh	/^    typedef TheISA::FloatReg FloatReg;$/;"	t	class:OzoneCPU
FloatReg	src/cpu/ozone/dyn_inst.hh	/^    typedef TheISA::FloatReg FloatReg;$/;"	t	class:OzoneDynInst
FloatReg	src/cpu/simple/base.hh	/^    typedef TheISA::FloatReg FloatReg;$/;"	t	class:BaseSimpleCPU
FloatReg	src/cpu/simple_thread.hh	/^    typedef TheISA::FloatReg FloatReg;$/;"	t	class:SimpleThread
FloatReg	src/cpu/thread_context.hh	/^    typedef TheISA::FloatReg FloatReg;$/;"	t	class:ThreadContext
FloatRegBits	src/arch/alpha/registers.hh	/^typedef uint64_t FloatRegBits;$/;"	t	namespace:AlphaISA
FloatRegBits	src/arch/arm/registers.hh	/^typedef uint32_t FloatRegBits;$/;"	t	namespace:ArmISA
FloatRegBits	src/arch/mips/registers.hh	/^typedef uint32_t FloatRegBits;$/;"	t	namespace:MipsISA
FloatRegBits	src/arch/null/registers.hh	/^typedef uint32_t FloatRegBits;$/;"	t	namespace:NullISA
FloatRegBits	src/arch/power/registers.hh	/^typedef uint64_t FloatRegBits;$/;"	t	namespace:PowerISA
FloatRegBits	src/arch/sparc/registers.hh	/^typedef uint32_t FloatRegBits;$/;"	t	namespace:SparcISA
FloatRegBits	src/arch/x86/registers.hh	/^typedef uint64_t FloatRegBits;$/;"	t	namespace:X86ISA
FloatRegBits	src/cpu/checker/cpu.hh	/^    typedef TheISA::FloatRegBits FloatRegBits;$/;"	t	class:CheckerCPU
FloatRegBits	src/cpu/inorder/cpu.hh	/^    typedef TheISA::FloatRegBits FloatRegBits;$/;"	t	class:InOrderCPU
FloatRegBits	src/cpu/inorder/inorder_dyn_inst.hh	/^    typedef TheISA::FloatRegBits FloatRegBits;$/;"	t	class:InOrderDynInst
FloatRegBits	src/cpu/o3/dyn_inst.hh	/^    typedef TheISA::FloatRegBits FloatRegBits;$/;"	t	class:BaseO3DynInst
FloatRegBits	src/cpu/o3/regfile.hh	/^    typedef TheISA::FloatRegBits FloatRegBits;$/;"	t	class:PhysRegFile
FloatRegBits	src/cpu/ozone/cpu.hh	/^    typedef TheISA::FloatRegBits FloatRegBits;$/;"	t	class:OzoneCPU
FloatRegBits	src/cpu/ozone/dyn_inst.hh	/^    typedef TheISA::FloatRegBits FloatRegBits;$/;"	t	class:OzoneDynInst
FloatRegBits	src/cpu/simple/base.hh	/^    typedef TheISA::FloatRegBits FloatRegBits;$/;"	t	class:BaseSimpleCPU
FloatRegBits	src/cpu/simple_thread.hh	/^    typedef TheISA::FloatRegBits FloatRegBits;$/;"	t	class:SimpleThread
FloatRegBits	src/cpu/thread_context.hh	/^    typedef TheISA::FloatRegBits FloatRegBits;$/;"	t	class:ThreadContext
FloatRegClass	src/cpu/reg_class.hh	/^    FloatRegClass,      \/\/\/< Floating-point register$/;"	e	enum:RegClass
FloatRegIndex	src/arch/x86/regs/float.hh	/^    enum FloatRegIndex$/;"	g	namespace:X86ISA
FloatRegOperand	src/arch/isa_parser.py	/^class FloatRegOperand(Operand):$/;"	c
FloatSqrtOp	src/cpu/op_class.hh	/^const OpClass FloatSqrtOp = Enums::FloatSqrt;$/;"	v
FloatingPointer	src/arch/x86/bios/intelmp.cc	/^X86ISA::IntelMP::FloatingPointer::FloatingPointer(Params * p) :$/;"	f	class:X86ISA::IntelMP::FloatingPointer
FloatingPointer	src/arch/x86/bios/intelmp.hh	/^class FloatingPointer : public SimObject$/;"	c	namespace:X86ISA::IntelMP
FlushPipe	src/arch/arm/faults.hh	/^    FlushPipe() {}$/;"	f	class:ArmISA::FlushPipe
FlushPipe	src/arch/arm/faults.hh	/^class FlushPipe : public ArmFaultVals<FlushPipe>$/;"	c	namespace:ArmISA
FlushReq	src/mem/packet.hh	/^        FlushReq,      \/\/request for a cache flush$/;"	e	enum:MemCmd::Command
Foo	src/python/m5/util/code_formatter.py	/^    class Foo(dict):$/;"	c	class:code_formatter
FormalParamAST	src/mem/slicc/ast/FormalParamAST.py	/^class FormalParamAST(AST):$/;"	c
Format	src/arch/isa_parser.py	/^class Format(object):$/;"	c
Format	src/base/cprintf_formats.hh	/^    Format() { clear(); }$/;"	f	struct:cp::Format
Format	src/base/cprintf_formats.hh	/^struct Format$/;"	s	namespace:cp
Formula	src/base/statistics.cc	/^Formula::Formula()$/;"	f	class:Stats::Formula
Formula	src/base/statistics.cc	/^Formula::Formula(Temp r)$/;"	f	class:Stats::Formula
Formula	src/base/statistics.hh	/^class Formula : public DataWrapVec<Formula, FormulaInfoProxy>$/;"	c	namespace:Stats
FormulaInfo	src/base/stats/info.hh	/^class FormulaInfo : public VectorInfo$/;"	c	namespace:Stats
FormulaInfoProxy	src/base/statistics.hh	/^    FormulaInfoProxy(Stat &stat) : InfoProxy<Stat, FormulaInfo>(stat) {}$/;"	f	class:Stats::FormulaInfoProxy
FormulaInfoProxy	src/base/statistics.hh	/^class FormulaInfoProxy : public InfoProxy<Stat, FormulaInfo>$/;"	c	namespace:Stats
FormulaNode	src/base/statistics.hh	/^    FormulaNode(const Formula &f) : formula(f) {}$/;"	f	class:Stats::FormulaNode
FormulaNode	src/base/statistics.hh	/^class FormulaNode : public Node$/;"	c	namespace:Stats
ForwardResponseRecord	src/mem/cache/cache_impl.hh	/^    ForwardResponseRecord(PortID prev_src) : prevSrc(prev_src)$/;"	f	class:ForwardResponseRecord
ForwardResponseRecord	src/mem/cache/cache_impl.hh	/^class ForwardResponseRecord : public Packet::SenderState$/;"	c
FpCondCodesMask	src/arch/arm/miscregs.hh	/^    static const uint32_t FpCondCodesMask = 0xF0000000;$/;"	m	namespace:ArmISA
FpCondCompRegOp	src/arch/arm/insts/vfp.hh	/^    FpCondCompRegOp(const char *mnem, ExtMachInst _machInst,$/;"	f	class:ArmISA::FpCondCompRegOp
FpCondCompRegOp	src/arch/arm/insts/vfp.hh	/^class FpCondCompRegOp : public FpOp$/;"	c	namespace:ArmISA
FpCondSelOp	src/arch/arm/insts/vfp.hh	/^    FpCondSelOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::FpCondSelOp
FpCondSelOp	src/arch/arm/insts/vfp.hh	/^class FpCondSelOp : public FpOp$/;"	c	namespace:ArmISA
FpDisabled	src/arch/sparc/faults.hh	/^class FpDisabled : public SparcFault<FpDisabled> {};$/;"	c	namespace:SparcISA
FpExceptionIEEE754	src/arch/sparc/faults.hh	/^class FpExceptionIEEE754 : public SparcFault<FpExceptionIEEE754> {};$/;"	c	namespace:SparcISA
FpExceptionOther	src/arch/sparc/faults.hh	/^class FpExceptionOther : public SparcFault<FpExceptionOther> {};$/;"	c	namespace:SparcISA
FpOp	src/arch/arm/insts/vfp.hh	/^    FpOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass) :$/;"	f	class:ArmISA::FpOp
FpOp	src/arch/arm/insts/vfp.hh	/^class FpOp : public PredOp$/;"	c	namespace:ArmISA
FpOp	src/arch/x86/insts/microfpop.hh	/^        FpOp(ExtMachInst _machInst,$/;"	f	class:X86ISA::FpOp
FpOp	src/arch/x86/insts/microfpop.hh	/^    class FpOp : public X86MicroopBase$/;"	c	namespace:X86ISA
FpRegImmOp	src/arch/arm/insts/vfp.hh	/^    FpRegImmOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::FpRegImmOp
FpRegImmOp	src/arch/arm/insts/vfp.hh	/^class FpRegImmOp : public FpOp$/;"	c	namespace:ArmISA
FpRegRegImmOp	src/arch/arm/insts/vfp.hh	/^    FpRegRegImmOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::FpRegRegImmOp
FpRegRegImmOp	src/arch/arm/insts/vfp.hh	/^class FpRegRegImmOp : public FpOp$/;"	c	namespace:ArmISA
FpRegRegOp	src/arch/arm/insts/vfp.hh	/^    FpRegRegOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::FpRegRegOp
FpRegRegOp	src/arch/arm/insts/vfp.hh	/^class FpRegRegOp : public FpOp$/;"	c	namespace:ArmISA
FpRegRegRegImmOp	src/arch/arm/insts/vfp.hh	/^    FpRegRegRegImmOp(const char *mnem, ExtMachInst _machInst,$/;"	f	class:ArmISA::FpRegRegRegImmOp
FpRegRegRegImmOp	src/arch/arm/insts/vfp.hh	/^class FpRegRegRegImmOp : public FpOp$/;"	c	namespace:ArmISA
FpRegRegRegOp	src/arch/arm/insts/vfp.hh	/^    FpRegRegRegOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::FpRegRegRegOp
FpRegRegRegOp	src/arch/arm/insts/vfp.hh	/^class FpRegRegRegOp : public FpOp$/;"	c	namespace:ArmISA
FpRegRegRegRegOp	src/arch/arm/insts/vfp.hh	/^    FpRegRegRegRegOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::FpRegRegRegRegOp
FpRegRegRegRegOp	src/arch/arm/insts/vfp.hh	/^class FpRegRegRegRegOp : public FpOp$/;"	c	namespace:ArmISA
FpscrExcMask	src/arch/arm/miscregs.hh	/^    static const uint32_t FpscrExcMask = 0x0000009F;$/;"	m	namespace:ArmISA
FpscrQcMask	src/arch/arm/miscregs.hh	/^    static const uint32_t FpscrQcMask = 0x08000000;$/;"	m	namespace:ArmISA
FrameBufferRect	src/base/vnc/vncserver.hh	/^    struct FrameBufferRect {$/;"	s	class:VncServer
FrameBufferUpdate	src/base/vnc/vncserver.hh	/^    struct FrameBufferUpdate {$/;"	s	class:VncServer
FrameBufferUpdateReq	src/base/vnc/vncinput.hh	/^    struct FrameBufferUpdateReq {$/;"	s	class:VncInput
FramePointerReg	src/arch/alpha/registers.hh	/^const RegIndex FramePointerReg = 15;$/;"	m	namespace:AlphaISA
FramePointerReg	src/arch/arm/registers.hh	/^const int FramePointerReg = 11;$/;"	m	namespace:ArmISA
FramePointerReg	src/arch/mips/registers.hh	/^const int FramePointerReg = 30;$/;"	m	namespace:MipsISA
FramePointerReg	src/arch/power/registers.hh	/^const int FramePointerReg = 31;$/;"	m	namespace:PowerISA
FramePointerReg	src/arch/sparc/registers.hh	/^const int FramePointerReg = 30;$/;"	m	namespace:SparcISA
FramePointerReg	src/arch/x86/registers.hh	/^const int FramePointerReg = INTREG_RBP;$/;"	m	namespace:X86ISA
FreeEntries	src/cpu/o3/rename.hh	/^    struct FreeEntries {$/;"	s	class:DefaultRename
FreeList	src/cpu/o3/cpu_policy.hh	/^    typedef UnifiedFreeList FreeList;$/;"	t	struct:SimpleCPUPolicy
FreeList	src/cpu/o3/rename.hh	/^    typedef typename CPUPol::FreeList FreeList;$/;"	t	class:DefaultRename
FreebsdAlphaSystem	src/arch/alpha/AlphaSystem.py	/^class FreebsdAlphaSystem(AlphaSystem):$/;"	c
FreebsdAlphaSystem	src/arch/alpha/freebsd/system.cc	/^FreebsdAlphaSystem::FreebsdAlphaSystem(Params *p)$/;"	f	class:FreebsdAlphaSystem
FreebsdAlphaSystem	src/arch/alpha/freebsd/system.hh	/^class FreebsdAlphaSystem : public AlphaSystem$/;"	c
Frequency	src/python/m5/params.py	/^class Frequency(TickParamValue):$/;"	c
Frequency	src/sim/core.cc	/^Tick Frequency;$/;"	m	namespace:SimClock	file:
FromCPU	src/mem/cache/mshr.hh	/^            FromCPU,$/;"	e	enum:MSHR::Target::Source
FromCacheState	src/arch/x86/decoder.hh	/^        FromCacheState,$/;"	e	enum:X86ISA::Decoder::State
FromPrefetcher	src/mem/cache/mshr.hh	/^            FromPrefetcher$/;"	e	enum:MSHR::Target::Source
FromSnoop	src/mem/cache/mshr.hh	/^            FromSnoop,$/;"	e	enum:MSHR::Target::Source
FrontEnd	src/cpu/ozone/back_end.hh	/^    typedef typename Impl::FrontEnd FrontEnd;$/;"	t	class:BackEnd
FrontEnd	src/cpu/ozone/cpu.hh	/^    typedef typename Impl::FrontEnd FrontEnd;$/;"	t	class:OzoneCPU
FrontEnd	src/cpu/ozone/front_end.hh	/^class FrontEnd$/;"	c
FrontEnd	src/cpu/ozone/front_end_impl.hh	/^FrontEnd<Impl>::FrontEnd(Params *params)$/;"	f	class:FrontEnd
FrontEnd	src/cpu/ozone/inorder_back_end.hh	/^    typedef typename Impl::FrontEnd FrontEnd;$/;"	t	class:InorderBackEnd
FrontEnd	src/cpu/ozone/lw_back_end.hh	/^    typedef typename Impl::FrontEnd FrontEnd;$/;"	t	class:LWBackEnd
FrontEnd	src/cpu/ozone/ozone_impl.hh	/^    typedef FrontEnd<OzoneImpl> FrontEnd;$/;"	t	struct:OzoneImpl
FrontEnd	src/cpu/ozone/simple_impl.hh	/^    typedef FrontEnd<SimpleImpl> FrontEnd;$/;"	t	struct:SimpleImpl
FsrIndex	src/arch/arm/faults.hh	/^    static const MiscRegIndex FsrIndex  = MISCREG_DFSR;$/;"	m	class:ArmISA::DataAbort
FsrIndex	src/arch/arm/faults.hh	/^    static const MiscRegIndex FsrIndex  = MISCREG_DFSR;$/;"	m	class:ArmISA::VirtualDataAbort
FsrIndex	src/arch/arm/faults.hh	/^    static const MiscRegIndex FsrIndex  = MISCREG_IFSR;$/;"	m	class:ArmISA::PrefetchAbort
FullCPU	src/cpu/ozone/back_end.hh	/^    typedef typename Impl::FullCPU FullCPU;$/;"	t	class:BackEnd
FullCPU	src/cpu/ozone/inorder_back_end.hh	/^    typedef typename Impl::FullCPU FullCPU;$/;"	t	class:InorderBackEnd
FullCPU	src/cpu/ozone/inst_queue.hh	/^    typedef typename Impl::FullCPU FullCPU;$/;"	t	class:InstQueue
FullCPU	src/cpu/ozone/lsq_unit.hh	/^    typedef typename Impl::FullCPU FullCPU;$/;"	t	class:OzoneLSQ
FullCPU	src/cpu/ozone/simple_impl.hh	/^    typedef OzoneCPU FullCPU;$/;"	t	struct:SimpleImpl
FullO3CPU	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::FullO3CPU(DerivO3CPUParams *params)$/;"	f	class:FullO3CPU
FullO3CPU	src/cpu/o3/cpu.hh	/^class FullO3CPU : public BaseO3CPU$/;"	c
FullSource	src/cpu/o3/rename.hh	/^    enum FullSource {$/;"	g	class:DefaultRename
FullSystem	src/sim/root.cc	/^bool FullSystem;$/;"	v
FullSystemInt	src/sim/root.cc	/^unsigned int FullSystemInt;$/;"	v
Func	src/mem/slicc/ast/EnumDeclAST.py	/^from slicc.symbols import Func, Type$/;"	i
Func	src/mem/slicc/ast/FuncCallExprAST.py	/^from slicc.symbols import Func, Type$/;"	i
Func	src/mem/slicc/ast/FuncDeclAST.py	/^from slicc.symbols import Func, Type$/;"	i
Func	src/mem/slicc/ast/InPortDeclAST.py	/^from slicc.symbols import Func, Type, Var$/;"	i
Func	src/mem/slicc/ast/StateDeclAST.py	/^from slicc.symbols import Func, Type$/;"	i
Func	src/mem/slicc/symbols/Func.py	/^class Func(Symbol):$/;"	c
Func	src/mem/slicc/symbols/__init__.py	/^from slicc.symbols.Func import Func$/;"	i
FuncCallExprAST	src/mem/slicc/ast/FuncCallExprAST.py	/^class FuncCallExprAST(ExprAST):$/;"	c
FuncDeclAST	src/mem/slicc/ast/FuncDeclAST.py	/^class FuncDeclAST(DeclAST):$/;"	c
FuncPtr	src/sim/syscall_emul.hh	/^    typedef SyscallReturn (*FuncPtr)(SyscallDesc *, int num,$/;"	t	class:SyscallDesc
FuncUnit	src/cpu/func_unit.cc	/^FuncUnit::FuncUnit()$/;"	f	class:FuncUnit
FuncUnit	src/cpu/func_unit.cc	/^FuncUnit::FuncUnit(const FuncUnit &fu)$/;"	f	class:FuncUnit
FuncUnit	src/cpu/func_unit.hh	/^class FuncUnit$/;"	c
FunctionProfile	src/cpu/profile.cc	/^FunctionProfile::FunctionProfile(const SymbolTable *_symtab)$/;"	f	class:FunctionProfile
FunctionProfile	src/cpu/profile.hh	/^class FunctionProfile$/;"	c
FunctionType	src/python/m5/SimObject.py	/^from types import FunctionType, MethodType, ModuleType$/;"	i
FunctionalReadError	src/mem/packet.hh	/^        FunctionalReadError, \/\/ unable to fulfill functional read$/;"	e	enum:MemCmd::Command
FunctionalWriteError	src/mem/packet.hh	/^        FunctionalWriteError, \/\/ unable to fulfill functional write$/;"	e	enum:MemCmd::Command
FunctorProxy	src/base/statistics.hh	/^    FunctorProxy(T &func) : functor(&func) {}$/;"	f	class:Stats::FunctorProxy
FunctorProxy	src/base/statistics.hh	/^class FunctorProxy : public ProxyInfo$/;"	c	namespace:Stats
G	src/arch/mips/pagetable.hh	/^    bool G;$/;"	m	struct:MipsISA::PTE
G	src/arch/power/pagetable.hh	/^    bool G;$/;"	m	struct:PowerISA::PTE
GDBAsyncCont	src/base/remote_gdb.hh	/^    GDBAsyncCont           = 'C', \/\/ continue with signal$/;"	e	enum:GDBCommands
GDBAsyncStep	src/base/remote_gdb.hh	/^    GDBAsyncStep           = 'S', \/\/ signal and step$/;"	e	enum:GDBCommands
GDBBadP	src/base/remote_gdb.hh	/^const char GDBBadP = '-';$/;"	v
GDBBinaryDload	src/base/remote_gdb.hh	/^    GDBBinaryDload         = 'X', \/\/ write memory$/;"	e	enum:GDBCommands
GDBClrHwBkpt	src/base/remote_gdb.hh	/^    GDBClrHwBkpt           = 'z', \/\/ remove breakpoint or watchpoint$/;"	e	enum:GDBCommands
GDBCommands	src/base/remote_gdb.hh	/^enum GDBCommands$/;"	g
GDBCont	src/base/remote_gdb.hh	/^    GDBCont                = 'c', \/\/ resume$/;"	e	enum:GDBCommands
GDBCycleStep	src/base/remote_gdb.hh	/^    GDBCycleStep           = 'i', \/\/ step a single cycle$/;"	e	enum:GDBCommands
GDBDebug	src/base/remote_gdb.hh	/^    GDBDebug               = 'd', \/\/ toggle debug flags (deprecated)$/;"	e	enum:GDBCommands
GDBDetach	src/base/remote_gdb.hh	/^    GDBDetach              = 'D', \/\/ detach remote gdb$/;"	e	enum:GDBCommands
GDBEnd	src/base/remote_gdb.hh	/^const char GDBEnd = '#';$/;"	v
GDBGoodP	src/base/remote_gdb.hh	/^const char GDBGoodP = '+';$/;"	v
GDBKill	src/base/remote_gdb.hh	/^    GDBKill                = 'k', \/\/ kill program$/;"	e	enum:GDBCommands
GDBListener	src/base/remote_gdb.cc	/^GDBListener::GDBListener(BaseRemoteGDB *g, int p)$/;"	f	class:GDBListener
GDBListener	src/base/remote_gdb.hh	/^class GDBListener$/;"	c
GDBMemR	src/base/remote_gdb.hh	/^    GDBMemR                = 'm', \/\/ read memory$/;"	e	enum:GDBCommands
GDBMemW	src/base/remote_gdb.hh	/^    GDBMemW                = 'M', \/\/ write memory$/;"	e	enum:GDBCommands
GDBPacketBufLen	src/base/remote_gdb.hh	/^const int GDBPacketBufLen = 1024;$/;"	v
GDBQueryVar	src/base/remote_gdb.hh	/^    GDBQueryVar            = 'q', \/\/ query variable$/;"	e	enum:GDBCommands
GDBReadReg	src/base/remote_gdb.hh	/^    GDBReadReg             = 'p', \/\/ read register$/;"	e	enum:GDBCommands
GDBRegR	src/base/remote_gdb.hh	/^    GDBRegR                = 'g', \/\/ read general registers$/;"	e	enum:GDBCommands
GDBRegW	src/base/remote_gdb.hh	/^    GDBRegW                = 'G', \/\/ write general registers$/;"	e	enum:GDBCommands
GDBReset	src/base/remote_gdb.hh	/^    GDBReset               = 'r', \/\/ reset system.  (Deprecated)$/;"	e	enum:GDBCommands
GDBSetBaud	src/base/remote_gdb.hh	/^    GDBSetBaud             = 'b', \/\/ set baud (depracated)$/;"	e	enum:GDBCommands
GDBSetBreak	src/base/remote_gdb.hh	/^    GDBSetBreak            = 'B', \/\/ set breakpoint (depracated)$/;"	e	enum:GDBCommands
GDBSetHwBkpt	src/base/remote_gdb.hh	/^    GDBSetHwBkpt           = 'Z'  \/\/ insert breakpoint or watchpoint$/;"	e	enum:GDBCommands
GDBSetReg	src/base/remote_gdb.hh	/^    GDBSetReg              = 'P', \/\/ write register$/;"	e	enum:GDBCommands
GDBSetThread	src/base/remote_gdb.hh	/^    GDBSetThread           = 'H', \/\/ set thread$/;"	e	enum:GDBCommands
GDBSetVar	src/base/remote_gdb.hh	/^    GDBSetVar              = 'Q', \/\/ set variable$/;"	e	enum:GDBCommands
GDBSigCycleStep	src/base/remote_gdb.hh	/^    GDBSigCycleStep        = 'I', \/\/ signal then cycle step$/;"	e	enum:GDBCommands
GDBSignal	src/base/remote_gdb.hh	/^    GDBSignal              = '?', \/\/ last signal$/;"	e	enum:GDBCommands
GDBStart	src/base/remote_gdb.hh	/^const char GDBStart = '$';$/;"	v
GDBStep	src/base/remote_gdb.hh	/^    GDBStep                = 's', \/\/ step$/;"	e	enum:GDBCommands
GDBTargetExit	src/base/remote_gdb.hh	/^    GDBTargetExit          = 'W', \/\/ target exited$/;"	e	enum:GDBCommands
GDBThreadAlive	src/base/remote_gdb.hh	/^    GDBThreadAlive         = 'T', \/\/ find out if the thread is alive$/;"	e	enum:GDBCommands
GENERIC_AMP	src/mem/ruby/network/orion/Buffer/AmpUnit.hh	/^      GENERIC_AMP$/;"	e	enum:AmpUnit::AmpModel
GENERIC_DEC	src/mem/ruby/network/orion/Buffer/DecoderUnit.hh	/^      GENERIC_DEC$/;"	e	enum:DecoderUnit::DecModel
GENERIC_IPR	src/mem/request.hh	/^    static const FlagsType GENERIC_IPR                 = 0x08000000;$/;"	m	class:Request
GEN_ATTNSTATUS	src/dev/copy_engine_defs.hh	/^const uint32_t GEN_ATTNSTATUS   = 0x04;$/;"	m	namespace:CopyEngineReg
GEN_CHANCOUNT	src/dev/copy_engine_defs.hh	/^const uint32_t GEN_CHANCOUNT    = 0x00;$/;"	m	namespace:CopyEngineReg
GEN_INTRCTRL	src/dev/copy_engine_defs.hh	/^const uint32_t GEN_INTRCTRL     = 0x03;$/;"	m	namespace:CopyEngineReg
GEN_XFERCAP	src/dev/copy_engine_defs.hh	/^const uint32_t GEN_XFERCAP      = 0x01;$/;"	m	namespace:CopyEngineReg
GHBPrefetcher	src/mem/cache/prefetch/Prefetcher.py	/^class GHBPrefetcher(BasePrefetcher):$/;"	c
GHBPrefetcher	src/mem/cache/prefetch/ghb.hh	/^    GHBPrefetcher(const Params *p)$/;"	f	class:GHBPrefetcher
GHBPrefetcher	src/mem/cache/prefetch/ghb.hh	/^class GHBPrefetcher : public BasePrefetcher$/;"	c
GHZ	src/sim/core.cc	/^double GHZ;$/;"	m	namespace:SimClock::Float	file:
GICH_APR0	src/dev/arm/vgic.hh	/^    static const int GICH_APR0          = 0x0f0;$/;"	m	class:VGic
GICH_EISR0	src/dev/arm/vgic.hh	/^    static const int GICH_EISR0         = 0x020;$/;"	m	class:VGic
GICH_EISR1	src/dev/arm/vgic.hh	/^    static const int GICH_EISR1         = 0x024;$/;"	m	class:VGic
GICH_ELSR0	src/dev/arm/vgic.hh	/^    static const int GICH_ELSR0         = 0x030;$/;"	m	class:VGic
GICH_ELSR1	src/dev/arm/vgic.hh	/^    static const int GICH_ELSR1         = 0x034;$/;"	m	class:VGic
GICH_HCR	src/dev/arm/vgic.hh	/^    static const int GICH_HCR           = 0x000;$/;"	m	class:VGic
GICH_LR0	src/dev/arm/vgic.hh	/^    static const int GICH_LR0           = 0x100;$/;"	m	class:VGic
GICH_LR1	src/dev/arm/vgic.hh	/^    static const int GICH_LR1           = 0x104;$/;"	m	class:VGic
GICH_LR2	src/dev/arm/vgic.hh	/^    static const int GICH_LR2           = 0x108;$/;"	m	class:VGic
GICH_LR3	src/dev/arm/vgic.hh	/^    static const int GICH_LR3           = 0x10c;$/;"	m	class:VGic
GICH_MISR	src/dev/arm/vgic.hh	/^    static const int GICH_MISR          = 0x010;$/;"	m	class:VGic
GICH_REG_SIZE	src/dev/arm/vgic.hh	/^    static const int GICH_REG_SIZE      = 0x2000;$/;"	m	class:VGic
GICH_SIZE	src/dev/arm/vgic.hh	/^    static const int GICH_SIZE          = 0x200;$/;"	m	class:VGic
GICH_VMCR	src/dev/arm/vgic.hh	/^    static const int GICH_VMCR          = 0x008;$/;"	m	class:VGic
GICH_VTR	src/dev/arm/vgic.hh	/^    static const int GICH_VTR           = 0x004;$/;"	m	class:VGic
GICV_ABPR	src/dev/arm/vgic.hh	/^    static const int GICV_ABPR          = 0x01c;$/;"	m	class:VGic
GICV_AEOIR	src/dev/arm/vgic.hh	/^    static const int GICV_AEOIR         = 0x024;$/;"	m	class:VGic
GICV_AHPPIR	src/dev/arm/vgic.hh	/^    static const int GICV_AHPPIR        = 0x028;$/;"	m	class:VGic
GICV_AIAR	src/dev/arm/vgic.hh	/^    static const int GICV_AIAR          = 0x020;$/;"	m	class:VGic
GICV_APR0	src/dev/arm/vgic.hh	/^    static const int GICV_APR0          = 0x0d0;$/;"	m	class:VGic
GICV_BPR	src/dev/arm/vgic.hh	/^    static const int GICV_BPR           = 0x008;$/;"	m	class:VGic
GICV_CTLR	src/dev/arm/vgic.hh	/^    static const int GICV_CTLR          = 0x000;$/;"	m	class:VGic
GICV_DIR	src/dev/arm/vgic.hh	/^    static const int GICV_DIR           = 0x1000;$/;"	m	class:VGic
GICV_EOIR	src/dev/arm/vgic.hh	/^    static const int GICV_EOIR          = 0x010;$/;"	m	class:VGic
GICV_HPPIR	src/dev/arm/vgic.hh	/^    static const int GICV_HPPIR         = 0x018;$/;"	m	class:VGic
GICV_IAR	src/dev/arm/vgic.hh	/^    static const int GICV_IAR           = 0x00c;$/;"	m	class:VGic
GICV_IIDR	src/dev/arm/vgic.hh	/^    static const int GICV_IIDR          = 0x0fc;$/;"	m	class:VGic
GICV_PMR	src/dev/arm/vgic.hh	/^    static const int GICV_PMR           = 0x004;$/;"	m	class:VGic
GICV_RPR	src/dev/arm/vgic.hh	/^    static const int GICV_RPR           = 0x014;$/;"	m	class:VGic
GICV_SIZE	src/dev/arm/vgic.hh	/^    static const int GICV_SIZE          = 0x2000;$/;"	m	class:VGic
GLEVEL_0	src/base/loader/coff_symconst.h	/^#define GLEVEL_0 /;"	d
GLEVEL_1	src/base/loader/coff_symconst.h	/^#define GLEVEL_1 /;"	d
GLEVEL_2	src/base/loader/coff_symconst.h	/^#define GLEVEL_2 /;"	d
GLEVEL_3	src/base/loader/coff_symconst.h	/^#define GLEVEL_3 /;"	d
GLOBAL	src/mem/ruby/network/orion/TechParameter.hh	/^      GLOBAL,$/;"	e	enum:TechParameter::WireLayerType
GPIOR	src/dev/ns_gige_reg.h	/^    GPIOR =             0x2c,$/;"	e	enum:DeviceRegisterAddress
GPIOR_GP1_IN	src/dev/ns_gige_reg.h	/^     GPIOR_GP1_IN =     0x00000400,$/;"	e	enum:GeneralPurposeIOControlRegister
GPIOR_GP1_OE	src/dev/ns_gige_reg.h	/^     GPIOR_GP1_OE =     0x00000020,$/;"	e	enum:GeneralPurposeIOControlRegister
GPIOR_GP1_OUT	src/dev/ns_gige_reg.h	/^     GPIOR_GP1_OUT =    0x00000001$/;"	e	enum:GeneralPurposeIOControlRegister
GPIOR_GP2_IN	src/dev/ns_gige_reg.h	/^     GPIOR_GP2_IN =     0x00000800,$/;"	e	enum:GeneralPurposeIOControlRegister
GPIOR_GP2_OE	src/dev/ns_gige_reg.h	/^     GPIOR_GP2_OE =     0x00000040,$/;"	e	enum:GeneralPurposeIOControlRegister
GPIOR_GP2_OUT	src/dev/ns_gige_reg.h	/^     GPIOR_GP2_OUT =    0x00000002,$/;"	e	enum:GeneralPurposeIOControlRegister
GPIOR_GP3_IN	src/dev/ns_gige_reg.h	/^     GPIOR_GP3_IN =     0x00001000,$/;"	e	enum:GeneralPurposeIOControlRegister
GPIOR_GP3_OE	src/dev/ns_gige_reg.h	/^     GPIOR_GP3_OE =     0x00000080,$/;"	e	enum:GeneralPurposeIOControlRegister
GPIOR_GP3_OUT	src/dev/ns_gige_reg.h	/^     GPIOR_GP3_OUT =    0x00000004,$/;"	e	enum:GeneralPurposeIOControlRegister
GPIOR_GP4_IN	src/dev/ns_gige_reg.h	/^     GPIOR_GP4_IN =     0x00002000,$/;"	e	enum:GeneralPurposeIOControlRegister
GPIOR_GP4_OE	src/dev/ns_gige_reg.h	/^     GPIOR_GP4_OE =     0x00000100,$/;"	e	enum:GeneralPurposeIOControlRegister
GPIOR_GP4_OUT	src/dev/ns_gige_reg.h	/^     GPIOR_GP4_OUT =    0x00000008,$/;"	e	enum:GeneralPurposeIOControlRegister
GPIOR_GP5_IN	src/dev/ns_gige_reg.h	/^     GPIOR_GP5_IN =     0x00004000,$/;"	e	enum:GeneralPurposeIOControlRegister
GPIOR_GP5_OE	src/dev/ns_gige_reg.h	/^     GPIOR_GP5_OE =     0x00000200,$/;"	e	enum:GeneralPurposeIOControlRegister
GPIOR_GP5_OUT	src/dev/ns_gige_reg.h	/^     GPIOR_GP5_OUT =    0x00000010,$/;"	e	enum:GeneralPurposeIOControlRegister
GPIOR_UNUSED	src/dev/ns_gige_reg.h	/^     GPIOR_UNUSED =     0xffff8000,$/;"	e	enum:GeneralPurposeIOControlRegister
GS	src/arch/x86/decoder_tables.cc	/^    const uint8_t GS = GSOverride;$/;"	m	namespace:X86ISA	file:
GSI_CLK_TCK	src/arch/alpha/linux/linux.hh	/^    static const unsigned GSI_CLK_TCK       = 42; \/\/!< clock freq in Hz$/;"	m	class:AlphaLinux
GSI_CLK_TCK	src/arch/alpha/tru64/tru64.hh	/^    static const unsigned GSI_CLK_TCK = 42;      \/\/!< clock freq in Hz$/;"	m	class:AlphaTru64
GSI_CLK_TCK	src/arch/mips/linux/linux.hh	/^    static const unsigned GSI_CLK_TCK = 42;        \/\/!< clock freq in Hz$/;"	m	class:MipsLinux
GSI_CPUS_IN_BOX	src/arch/alpha/linux/linux.hh	/^    static const unsigned GSI_CPUS_IN_BOX   = 55; \/\/!< number of CPUs in system$/;"	m	class:AlphaLinux
GSI_CPUS_IN_BOX	src/arch/alpha/tru64/tru64.hh	/^    static const unsigned GSI_CPUS_IN_BOX = 55;  \/\/!< number of CPUs in system$/;"	m	class:AlphaTru64
GSI_CPUS_IN_BOX	src/arch/mips/linux/linux.hh	/^    static const unsigned GSI_CPUS_IN_BOX = 55;    \/\/!< number of CPUs in system$/;"	m	class:MipsLinux
GSI_CPU_INFO	src/arch/alpha/linux/linux.hh	/^    static const unsigned GSI_CPU_INFO      = 59; \/\/!< CPU information$/;"	m	class:AlphaLinux
GSI_CPU_INFO	src/arch/alpha/tru64/tru64.hh	/^    static const unsigned GSI_CPU_INFO = 59;     \/\/!< CPU information$/;"	m	class:AlphaTru64
GSI_CPU_INFO	src/arch/mips/linux/linux.hh	/^    static const unsigned GSI_CPU_INFO = 59;       \/\/!< CPU information$/;"	m	class:MipsLinux
GSI_IEEE_FP_CONTROL	src/arch/alpha/linux/linux.hh	/^    static const unsigned GSI_IEEE_FP_CONTROL = 45;$/;"	m	class:AlphaLinux
GSI_MAX_CPU	src/arch/alpha/linux/linux.hh	/^    static const unsigned GSI_MAX_CPU       = 30; \/\/!< max # CPUs on machine$/;"	m	class:AlphaLinux
GSI_MAX_CPU	src/arch/alpha/tru64/tru64.hh	/^    static const unsigned GSI_MAX_CPU = 30;      \/\/!< max # CPUs on machine$/;"	m	class:AlphaTru64
GSI_MAX_CPU	src/arch/mips/linux/linux.hh	/^    static const unsigned GSI_MAX_CPU = 30;        \/\/!< max # cpu's on this machine$/;"	m	class:MipsLinux
GSI_PHYSMEM	src/arch/alpha/linux/linux.hh	/^    static const unsigned GSI_PHYSMEM       = 19; \/\/!< Physical memory in KB$/;"	m	class:AlphaLinux
GSI_PHYSMEM	src/arch/alpha/tru64/tru64.hh	/^    static const unsigned GSI_PHYSMEM = 19;      \/\/!< Physical memory in KB$/;"	m	class:AlphaTru64
GSI_PHYSMEM	src/arch/mips/linux/linux.hh	/^    static const unsigned GSI_PHYSMEM = 19;        \/\/!< Physical memory in KB$/;"	m	class:MipsLinux
GSI_PLATFORM_NAME	src/arch/alpha/linux/linux.hh	/^    static const unsigned GSI_PLATFORM_NAME = 103; \/\/!< platform name as string$/;"	m	class:AlphaLinux
GSI_PLATFORM_NAME	src/arch/alpha/tru64/tru64.hh	/^    static const unsigned GSI_PLATFORM_NAME = 103; \/\/!< platform name string$/;"	m	class:AlphaTru64
GSI_PLATFORM_NAME	src/arch/mips/linux/linux.hh	/^    static const unsigned GSI_PLATFORM_NAME = 103; \/\/!< platform name as string$/;"	m	class:MipsLinux
GSI_PROC_TYPE	src/arch/alpha/linux/linux.hh	/^    static const unsigned GSI_PROC_TYPE     = 60; \/\/!< get proc_type$/;"	m	class:AlphaLinux
GSI_PROC_TYPE	src/arch/alpha/tru64/tru64.hh	/^    static const unsigned GSI_PROC_TYPE = 60;    \/\/!< get proc_type$/;"	m	class:AlphaTru64
GSI_PROC_TYPE	src/arch/mips/linux/linux.hh	/^    static const unsigned GSI_PROC_TYPE = 60;      \/\/!< get proc_type$/;"	m	class:MipsLinux
GSOverride	src/arch/x86/types.hh	/^        GSOverride,$/;"	e	enum:X86ISA::Prefixes
GarnetExtLink	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.cc	/^GarnetExtLink::GarnetExtLink(const Params *p)$/;"	f	class:GarnetExtLink
GarnetExtLink	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.hh	/^class GarnetExtLink : public BasicLink$/;"	c
GarnetExtLink	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.py	/^class GarnetExtLink(BasicExtLink):$/;"	c
GarnetExtLink_d	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.cc	/^GarnetExtLink_d::GarnetExtLink_d(const Params *p)$/;"	f	class:GarnetExtLink_d
GarnetExtLink_d	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.hh	/^class GarnetExtLink_d : public BasicLink$/;"	c
GarnetExtLink_d	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.py	/^class GarnetExtLink_d(BasicExtLink):$/;"	c
GarnetIntLink	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.cc	/^GarnetIntLink::GarnetIntLink(const Params *p)$/;"	f	class:GarnetIntLink
GarnetIntLink	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.hh	/^class GarnetIntLink : public BasicLink$/;"	c
GarnetIntLink	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.py	/^class GarnetIntLink(BasicIntLink):$/;"	c
GarnetIntLink_d	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.cc	/^GarnetIntLink_d::GarnetIntLink_d(const Params *p)$/;"	f	class:GarnetIntLink_d
GarnetIntLink_d	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.hh	/^class GarnetIntLink_d : public BasicLink$/;"	c
GarnetIntLink_d	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.py	/^class GarnetIntLink_d(BasicIntLink):$/;"	c
GarnetNetwork	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.cc	/^GarnetNetwork::GarnetNetwork(const Params *p)$/;"	f	class:GarnetNetwork
GarnetNetwork	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.hh	/^class GarnetNetwork : public BaseGarnetNetwork$/;"	c
GarnetNetwork	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.py	/^class GarnetNetwork(BaseGarnetNetwork):$/;"	c
GarnetNetworkInterface	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.py	/^class GarnetNetworkInterface(ClockedObject):$/;"	c
GarnetNetworkInterface_d	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.py	/^class GarnetNetworkInterface_d(ClockedObject):$/;"	c
GarnetNetwork_d	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.cc	/^GarnetNetwork_d::GarnetNetwork_d(const Params *p)$/;"	f	class:GarnetNetwork_d
GarnetNetwork_d	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.hh	/^class GarnetNetwork_d : public BaseGarnetNetwork$/;"	c
GarnetNetwork_d	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.py	/^class GarnetNetwork_d(BaseGarnetNetwork):$/;"	c
GarnetRouter	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.py	/^class GarnetRouter(BasicRouter):$/;"	c
GarnetRouter_d	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.py	/^class GarnetRouter_d(BasicRouter):$/;"	c
GdbFloatArchRegs	src/arch/mips/remote_gdb.hh	/^    const int GdbFloatArchRegs = NumFloatArchRegs \/ 2;$/;"	m	namespace:MipsISA
GdbFloatRegs	src/arch/mips/remote_gdb.hh	/^    const int GdbFloatRegs = GdbFloatArchRegs + GdbFloatSpecialRegs;$/;"	m	namespace:MipsISA
GdbFloatSpecialRegs	src/arch/mips/remote_gdb.hh	/^    const int GdbFloatSpecialRegs = 2 \/ 2;$/;"	m	namespace:MipsISA
GdbIntArchRegs	src/arch/mips/remote_gdb.hh	/^    const int GdbIntArchRegs = NumIntArchRegs \/ 2;$/;"	m	namespace:MipsISA
GdbIntRegs	src/arch/mips/remote_gdb.hh	/^    const int GdbIntRegs = GdbIntArchRegs + GdbIntSpecialRegs;$/;"	m	namespace:MipsISA
GdbIntSpecialRegs	src/arch/mips/remote_gdb.hh	/^    const int GdbIntSpecialRegs = 6 \/ 2;$/;"	m	namespace:MipsISA
GdbNumRegs	src/arch/mips/remote_gdb.hh	/^    const int GdbNumRegs = GdbIntRegs + GdbFloatRegs;$/;"	m	namespace:MipsISA
GdbRegCache	src/base/remote_gdb.hh	/^        GdbRegCache(size_t newSize) : regs(new uint64_t[newSize]), size(newSize)$/;"	f	class:BaseRemoteGDB::GdbRegCache
GdbRegCache	src/base/remote_gdb.hh	/^    class GdbRegCache$/;"	c	class:BaseRemoteGDB
GenCode	src/arch/isa_parser.py	/^class GenCode(object):$/;"	c
GenFunc	src/arch/x86/microcode_rom.hh	/^        typedef StaticInstPtr (*GenFunc)(StaticInstPtr);$/;"	t	class:X86ISAInst::MicrocodeRom
GeneralProtection	src/arch/x86/faults.hh	/^        GeneralProtection(uint32_t _errorCode) :$/;"	f	class:X86ISA::GeneralProtection
GeneralProtection	src/arch/x86/faults.hh	/^    class GeneralProtection : public X86Fault$/;"	c	namespace:X86ISA
GeneralPurposeIOControlRegister	src/dev/ns_gige_reg.h	/^enum GeneralPurposeIOControlRegister {$/;"	g
GenerateAddr	src/cpu/inorder/resources/agen_unit.hh	/^        GenerateAddr$/;"	e	enum:AGENUnit::Command
GenericAlignmentFault	src/sim/faults.hh	/^    GenericAlignmentFault(Addr va) : vaddr(va) {}$/;"	f	class:GenericAlignmentFault
GenericAlignmentFault	src/sim/faults.hh	/^class GenericAlignmentFault : public FaultBase$/;"	c
GenericBloomFilter	src/mem/ruby/filters/GenericBloomFilter.cc	/^GenericBloomFilter::GenericBloomFilter(string config)$/;"	f	class:GenericBloomFilter
GenericBloomFilter	src/mem/ruby/filters/GenericBloomFilter.hh	/^class GenericBloomFilter$/;"	c
GenericISA	src/arch/generic/debugfaults.hh	/^namespace GenericISA$/;"	n
GenericISA	src/arch/generic/decode_cache.cc	/^namespace GenericISA$/;"	n	file:
GenericISA	src/arch/generic/decode_cache.hh	/^namespace GenericISA$/;"	n
GenericISA	src/arch/generic/mmapped_ipr.hh	/^namespace GenericISA$/;"	n
GenericISA	src/arch/generic/types.hh	/^namespace GenericISA$/;"	n
GenericPageTableFault	src/sim/faults.hh	/^    GenericPageTableFault(Addr va) : vaddr(va) {}$/;"	f	class:GenericPageTableFault
GenericPageTableFault	src/sim/faults.hh	/^class GenericPageTableFault : public FaultBase$/;"	c
GenericTLB	src/sim/tlb.hh	/^    GenericTLB(const Params *p)$/;"	f	class:GenericTLB
GenericTLB	src/sim/tlb.hh	/^class GenericTLB : public BaseTLB$/;"	c
GenericTimer	src/dev/arm/RealView.py	/^class GenericTimer(SimObject):$/;"	c
GenericTimer	src/dev/arm/generic_timer.cc	/^GenericTimer::GenericTimer(Params *p)$/;"	f	class:GenericTimer
GenericTimer	src/dev/arm/generic_timer.hh	/^class GenericTimer : public SimObject$/;"	c
GetCommandByte	src/dev/x86/i8042.hh	/^        GetCommandByte = 0x20,$/;"	e	enum:X86ISA::I8042::Command
GetStatus	src/dev/x86/i8042.hh	/^        GetStatus = 0xE9,$/;"	e	enum:X86ISA::PS2Mouse::Command
GetTsbPtr	src/arch/sparc/tlb.cc	/^TLB::GetTsbPtr(ThreadContext *tc, Addr addr, int ctx, Addr *ptrs)$/;"	f	class:SparcISA::TLB
Global	src/sim/stat_control.cc	/^Global::Global()$/;"	f	class:Stats::Global
Global	src/sim/stat_control.cc	/^struct Global$/;"	s	namespace:Stats	file:
GlobalEvent	src/sim/global_event.hh	/^    GlobalEvent(Priority p, Flags f)$/;"	f	class:GlobalEvent
GlobalEvent	src/sim/global_event.hh	/^    GlobalEvent(Tick when, Priority p, Flags f)$/;"	f	class:GlobalEvent
GlobalEvent	src/sim/global_event.hh	/^class GlobalEvent : public BaseGlobalEventTemplate<GlobalEvent>$/;"	c
GlobalPointerReg	src/arch/alpha/registers.hh	/^const RegIndex GlobalPointerReg = 29;$/;"	m	namespace:AlphaISA
GlobalPointerReg	src/arch/mips/registers.hh	/^const int GlobalPointerReg = 28;$/;"	m	namespace:MipsISA
GlobalSimLoopExitEvent	src/sim/sim_events.cc	/^GlobalSimLoopExitEvent::GlobalSimLoopExitEvent(Tick when,$/;"	f	class:GlobalSimLoopExitEvent
GlobalSimLoopExitEvent	src/sim/sim_events.hh	/^class GlobalSimLoopExitEvent : public GlobalEvent$/;"	c
GlobalSyncEvent	src/sim/global_event.hh	/^    GlobalSyncEvent(Priority p, Flags f)$/;"	f	class:GlobalSyncEvent
GlobalSyncEvent	src/sim/global_event.hh	/^    GlobalSyncEvent(Tick when, Tick _repeat, Priority p, Flags f)$/;"	f	class:GlobalSyncEvent
GlobalSyncEvent	src/sim/global_event.hh	/^class GlobalSyncEvent : public BaseGlobalEventTemplate<GlobalSyncEvent>$/;"	c
Globals	src/sim/serialize.cc	/^class Globals : public Serializable$/;"	c	file:
Grad	src/cpu/inorder/pipeline_traits.5stage.hh	/^       Grad,$/;"	e	enum:ThePipeline::ResourceList
Grad	src/cpu/inorder/pipeline_traits.9stage.hh	/^       Grad,$/;"	e	enum:ThePipeline::ResourceList
Grad	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^       Grad,$/;"	e	enum:ThePipeline::ResourceList
Grad	src/cpu/inorder/pipeline_traits.hh	/^       Grad,$/;"	e	enum:ThePipeline::ResourceId
GraduateInst	src/cpu/inorder/resources/graduation_unit.hh	/^        GraduateInst$/;"	e	enum:GraduationUnit::Command
GraduationUnit	src/cpu/inorder/resources/graduation_unit.cc	/^GraduationUnit::GraduationUnit(std::string res_name, int res_id, int res_width,$/;"	f	class:GraduationUnit
GraduationUnit	src/cpu/inorder/resources/graduation_unit.hh	/^class GraduationUnit : public Resource {$/;"	c
Grammar	src/arch/isa_parser.py	/^from m5.util.grammar import Grammar$/;"	i
Grammar	src/mem/slicc/parser.py	/^from m5.util.grammar import Grammar, ParseError$/;"	i
Grammar	src/python/m5/util/grammar.py	/^class Grammar(object):$/;"	c
Green_Select	src/dev/arm/hdlcd.hh	/^        Green_Select     = 0x0248,$/;"	e	enum:HDLcd::RegisterOffset
Group	src/python/m5/util/jobfile.py	/^class Group(Data):$/;"	c
Grp1	src/dev/arm/vgic.hh	/^    Bitfield<30> Grp1;$/;"	m	class:VGic
GuestByteOrder	src/sim/byteswap.hh	/^    const ByteOrder GuestByteOrder = BigEndianByteOrder;$/;"	m	namespace:BigEndianGuest
GuestByteOrder	src/sim/byteswap.hh	/^    const ByteOrder GuestByteOrder = LittleEndianByteOrder;$/;"	m	namespace:LittleEndianGuest
H	src/arch/sparc/faults.hh	/^        H, Hyperprivileged = H,$/;"	e	enum:SparcISA::SparcFaultBase::PrivilegeLevel
H	src/arch/x86/regs/int.hh	/^        Bitfield<15,8> H;$/;"	m	namespace:X86ISA
H3	src/mem/ruby/filters/H3BloomFilter.cc	/^static int H3[64][16] = {$/;"	v	file:
H3BloomFilter	src/mem/ruby/filters/H3BloomFilter.cc	/^H3BloomFilter::H3BloomFilter(string str)$/;"	f	class:H3BloomFilter
H3BloomFilter	src/mem/ruby/filters/H3BloomFilter.hh	/^class H3BloomFilter : public AbstractBloomFilter$/;"	c
HANDLE_ARRAY	src/cpu/kvm/base.cc	/^#define HANDLE_ARRAY(/;"	d	file:
HANDLE_ARRAY	src/cpu/kvm/base.cc	/^#undef HANDLE_ARRAY$/;"	d	file:
HANDLE_INTTYPE	src/cpu/kvm/base.cc	/^#define HANDLE_INTTYPE(/;"	d	file:
HANDLE_INTTYPE	src/cpu/kvm/base.cc	/^#undef HANDLE_INTTYPE$/;"	d	file:
HCYL_OFFSET	src/dev/ide_disk.hh	/^#define HCYL_OFFSET /;"	d
HDLcd	src/dev/arm/RealView.py	/^class HDLcd(AmbaDmaDevice):$/;"	c
HDLcd	src/dev/arm/hdlcd.cc	/^HDLcd::HDLcd(const Params *p)$/;"	f	class:HDLcd
HDLcd	src/dev/arm/hdlcd.hh	/^class HDLcd: public AmbaDmaDevice$/;"	c
HDRR	src/base/loader/coff_sym.h	/^} HDRR, *pHDRR;$/;"	t	typeref:struct:ecoff_symhdr
HEAD_	src/mem/ruby/network/garnet/NetworkHeader.hh	/^enum flit_type {HEAD_, BODY_, TAIL_, HEAD_TAIL_, NUM_FLIT_TYPE_};$/;"	e	enum:flit_type
HEAD_TAIL_	src/mem/ruby/network/garnet/NetworkHeader.hh	/^enum flit_type {HEAD_, BODY_, TAIL_, HEAD_TAIL_, NUM_FLIT_TYPE_};$/;"	e	enum:flit_type
HFarIndex	src/arch/arm/faults.hh	/^    static const MiscRegIndex HFarIndex = MISCREG_HDFAR;$/;"	m	class:ArmISA::DataAbort
HFarIndex	src/arch/arm/faults.hh	/^    static const MiscRegIndex HFarIndex = MISCREG_HDFAR;$/;"	m	class:ArmISA::VirtualDataAbort
HFarIndex	src/arch/arm/faults.hh	/^    static const MiscRegIndex HFarIndex = MISCREG_HIFAR;$/;"	m	class:ArmISA::PrefetchAbort
HOME_ADDRESS_OPTION	src/base/inet.hh	/^#define HOME_ADDRESS_OPTION /;"	d
HSTickCompareEvent	src/arch/sparc/isa.hh	/^            &ISA::processHSTickCompare> HSTickCompareEvent;$/;"	t	class:SparcISA::ISA
HVT	src/mem/ruby/network/orion/TechParameter.hh	/^      HVT,$/;"	e	enum:TechParameter::TransistorType
HW	src/dev/arm/vgic.hh	/^    Bitfield<31> HW;$/;"	m	class:VGic
H_Back_Porch	src/dev/arm/hdlcd.hh	/^        H_Back_Porch     = 0x0214,$/;"	e	enum:HDLcd::RegisterOffset
H_Data	src/dev/arm/hdlcd.hh	/^        H_Data           = 0x0218,$/;"	e	enum:HDLcd::RegisterOffset
H_Front_Porch	src/dev/arm/hdlcd.hh	/^        H_Front_Porch    = 0x021C,$/;"	e	enum:HDLcd::RegisterOffset
H_Sync	src/dev/arm/hdlcd.hh	/^        H_Sync           = 0x0210,$/;"	e	enum:HDLcd::RegisterOffset
HalfwordBytes	src/arch/alpha/isa_traits.hh	/^    HalfwordBytes = 2,$/;"	e	enum:AlphaISA::__anon1
HalfwordBytes	src/arch/arm/isa_traits.hh	/^    const int HalfwordBytes = 2;$/;"	m	namespace:ArmISA
HalfwordBytes	src/arch/mips/isa_traits.hh	/^const int HalfwordBytes = 2;$/;"	m	namespace:MipsISA
HaltThread	src/cpu/inorder/cpu.hh	/^        HaltThread,$/;"	e	enum:InOrderCPU::CPUEventType
Halted	src/cpu/inorder/cpu.hh	/^        Halted,$/;"	e	enum:InOrderCPU::Status
Halted	src/cpu/o3/cpu.hh	/^        Halted,$/;"	e	enum:FullO3CPU::Status
Halted	src/cpu/thread_context.hh	/^        Halted$/;"	e	enum:ThreadContext::Status
Handle	src/base/trie.hh	/^    typedef Node *Handle;$/;"	t	class:Trie
HardBreakpoint	src/base/remote_gdb.cc	/^BaseRemoteGDB::HardBreakpoint::HardBreakpoint(BaseRemoteGDB *_gdb, Addr pc)$/;"	f	class:BaseRemoteGDB::HardBreakpoint
HardBreakpoint	src/base/remote_gdb.hh	/^    class HardBreakpoint : public PCEvent$/;"	c	class:BaseRemoteGDB
HardPFReq	src/mem/packet.hh	/^        HardPFReq,$/;"	e	enum:MemCmd::Command
HardPFResp	src/mem/packet.hh	/^        HardPFResp,$/;"	e	enum:MemCmd::Command
HardwareStrobe	src/dev/intel_8254_timer.hh	/^        HardwareStrobe$/;"	e	enum:Intel8254Timer::ModeVal
HasData	src/mem/packet.hh	/^        HasData,        \/\/!< There is an associated payload$/;"	e	enum:MemCmd::Attribute
HasUnalignedMemAcc	src/arch/alpha/isa_traits.hh	/^const bool HasUnalignedMemAcc = false;$/;"	m	namespace:AlphaISA
HasUnalignedMemAcc	src/arch/arm/isa_traits.hh	/^    const bool HasUnalignedMemAcc = true;$/;"	m	namespace:ArmISA
HasUnalignedMemAcc	src/arch/mips/isa_traits.hh	/^const bool HasUnalignedMemAcc = true;$/;"	m	namespace:MipsISA
HasUnalignedMemAcc	src/arch/power/isa_traits.hh	/^const bool HasUnalignedMemAcc = true;$/;"	m	namespace:PowerISA
HasUnalignedMemAcc	src/arch/sparc/isa_traits.hh	/^const bool HasUnalignedMemAcc = false;$/;"	m	namespace:SparcISA
HasUnalignedMemAcc	src/arch/x86/isa_traits.hh	/^    const bool HasUnalignedMemAcc = true;$/;"	m	namespace:X86ISA
Hash	src/base/str.hh	/^class Hash<std::string> {$/;"	c
HashFn	src/cpu/ozone/lw_lsq.hh	/^    struct HashFn {$/;"	s	class:OzoneLWLSQ
Header	src/base/bitmap.hh	/^    struct Header$/;"	s	class:Bitmap
HeaderType	src/dev/Pci.py	/^    HeaderType = Param.UInt8(0, "PCI Header Type")$/;"	v	class:PciDevice
Height	src/base/bitmap.hh	/^        uint32_t Height;$/;"	m	struct:Bitmap::Info
HexFile	src/base/loader/hex_file.cc	/^HexFile::HexFile(const string _filename)$/;"	f	class:HexFile
HexFile	src/base/loader/hex_file.hh	/^class HexFile$/;"	c
HighVecs	src/arch/arm/isa_traits.hh	/^    const uint32_t HighVecs = 0xFFFF0000;$/;"	m	namespace:ArmISA
Hist	src/base/stats/info.hh	/^enum DistType { Deviation, Dist, Hist };$/;"	e	enum:Stats::DistType
HistStor	src/base/statistics.hh	/^    HistStor(Info *info)$/;"	f	class:Stats::HistStor
HistStor	src/base/statistics.hh	/^class HistStor$/;"	c	namespace:Stats
Histogram	src/base/statistics.hh	/^class Histogram : public DistBase<Histogram, HistStor>$/;"	c	namespace:Stats
Histogram	src/mem/ruby/common/Histogram.cc	/^Histogram::Histogram(int binsize, uint32_t bins)$/;"	f	class:Histogram
Histogram	src/mem/ruby/common/Histogram.hh	/^class Histogram$/;"	c
History	src/cpu/pred/bpred_unit.hh	/^    typedef std::list<PredictorHistory> History;$/;"	t	class:BPredUnit
HistoryIt	src/cpu/pred/bpred_unit.hh	/^    typedef History::iterator HistoryIt;$/;"	t	class:BPredUnit
HitExternalSnoop	src/cpu/base_dyn_inst.hh	/^        HitExternalSnoop,$/;"	e	enum:BaseDynInst::Flags
Hoop	src/arch/micro_asm_test.py	/^class Hoop(object):$/;"	c
HostByteOrder	src/sim/byteswap.hh	/^const ByteOrder HostByteOrder = BigEndianByteOrder;$/;"	v
HostByteOrder	src/sim/byteswap.hh	/^const ByteOrder HostByteOrder = LittleEndianByteOrder;$/;"	v
HstickMatch	src/arch/sparc/faults.hh	/^class HstickMatch : public SparcFault<HstickMatch> {};$/;"	c	namespace:SparcISA
HwAddr	src/dev/sinic.hh	/^        uint64_t HwAddr;       \/\/ 0x70$/;"	m	struct:Sinic::Device::__anon83
HypMode	src/arch/arm/tlb.hh	/^        HypMode = 0x2,$/;"	e	enum:ArmISA::TLB::ArmTranslationType
Hyperprivileged	src/arch/sparc/faults.hh	/^        H, Hyperprivileged = H,$/;"	e	enum:SparcISA::SparcFaultBase::PrivilegeLevel
HypervisorCall	src/arch/arm/faults.cc	/^HypervisorCall::HypervisorCall(ExtMachInst _machInst, uint32_t _imm) :$/;"	f	class:ArmISA::HypervisorCall
HypervisorCall	src/arch/arm/faults.hh	/^class HypervisorCall : public ArmFaultVals<HypervisorCall>$/;"	c	namespace:ArmISA
HypervisorTrap	src/arch/arm/faults.hh	/^    HypervisorTrap(ExtMachInst _machInst, uint32_t _iss,$/;"	f	class:ArmISA::HypervisorTrap
HypervisorTrap	src/arch/arm/faults.hh	/^class HypervisorTrap : public ArmFaultVals<HypervisorTrap>$/;"	c	namespace:ArmISA
Hz	src/sim/core.cc	/^double Hz;$/;"	m	namespace:SimClock::Float	file:
I386	src/base/loader/object_file.hh	/^        I386,$/;"	e	enum:ObjectFile::Arch
I386LinuxProcess	src/arch/x86/linux/process.cc	/^I386LinuxProcess::I386LinuxProcess(LiveProcessParams * params,$/;"	f	class:I386LinuxProcess
I386LinuxProcess	src/arch/x86/linux/process.hh	/^class I386LinuxProcess : public I386LiveProcess$/;"	c	namespace:X86ISA
I386LiveProcess	src/arch/x86/process.cc	/^I386LiveProcess::I386LiveProcess(LiveProcessParams *params,$/;"	f	class:I386LiveProcess
I386LiveProcess	src/arch/x86/process.hh	/^    class I386LiveProcess : public X86LiveProcess$/;"	c	namespace:X86ISA
I8042	src/dev/x86/I8042.py	/^class I8042(BasicPioDevice):$/;"	c
I8042	src/dev/x86/SouthBridge.py	/^from I8042 import I8042$/;"	i
I8042	src/dev/x86/i8042.cc	/^X86ISA::I8042::I8042(Params *p)$/;"	f	class:X86ISA::I8042
I8042	src/dev/x86/i8042.hh	/^class I8042 : public BasicPioDevice$/;"	c	namespace:X86ISA
I82094AA	src/dev/x86/I82094AA.py	/^class I82094AA(BasicPioDevice):$/;"	c
I82094AA	src/dev/x86/SouthBridge.py	/^from I82094AA import I82094AA$/;"	i
I82094AA	src/dev/x86/i82094aa.cc	/^X86ISA::I82094AA::I82094AA(Params *p)$/;"	f	class:X86ISA::I82094AA
I82094AA	src/dev/x86/i82094aa.hh	/^class I82094AA : public BasicPioDevice, public IntDevice$/;"	c	namespace:X86ISA
I8237	src/dev/x86/I8237.py	/^class I8237(BasicPioDevice):$/;"	c
I8237	src/dev/x86/SouthBridge.py	/^from I8237 import I8237$/;"	i
I8237	src/dev/x86/i8237.hh	/^    I8237(Params *p) : BasicPioDevice(p, 16), latency(p->pio_latency), maskReg(0)$/;"	f	class:X86ISA::I8237
I8237	src/dev/x86/i8237.hh	/^class I8237 : public BasicPioDevice$/;"	c	namespace:X86ISA
I8254	src/dev/x86/I8254.py	/^class I8254(BasicPioDevice):$/;"	c
I8254	src/dev/x86/SouthBridge.py	/^from I8254 import I8254$/;"	i
I8254	src/dev/x86/i8254.hh	/^    I8254(Params *p) : BasicPioDevice(p, 4), latency(p->pio_latency),$/;"	f	class:X86ISA::I8254
I8254	src/dev/x86/i8254.hh	/^class I8254 : public BasicPioDevice$/;"	c	namespace:X86ISA
I8259	src/dev/x86/I8259.py	/^class I8259(BasicPioDevice):$/;"	c
I8259	src/dev/x86/SouthBridge.py	/^from I8259 import I8259$/;"	i
I8259	src/dev/x86/i8259.cc	/^X86ISA::I8259::I8259(Params * p)$/;"	f	class:X86ISA::I8259
I8259	src/dev/x86/i8259.hh	/^class I8259 : public BasicPioDevice, public IntDevice$/;"	c	namespace:X86ISA
ICCABPR	src/dev/arm/gic_pl390.hh	/^    static const int ICCABPR = 0x1c; \/\/ aliased binary point$/;"	m	class:Pl390
ICCBPR	src/dev/arm/gic_pl390.hh	/^    static const int ICCBPR  = 0x08; \/\/ binary point register$/;"	m	class:Pl390
ICCEOIR	src/dev/arm/gic_pl390.hh	/^    static const int ICCEOIR = 0x10; \/\/ end of interrupt$/;"	m	class:Pl390
ICCHPIR	src/dev/arm/gic_pl390.hh	/^    static const int ICCHPIR = 0x18; \/\/ highest pending interrupt$/;"	m	class:Pl390
ICCIAR	src/dev/arm/gic_pl390.hh	/^    static const int ICCIAR  = 0x0C; \/\/ interrupt ack register$/;"	m	class:Pl390
ICCICR	src/dev/arm/gic_pl390.hh	/^    static const int ICCICR  = 0x00; \/\/ CPU control register$/;"	m	class:Pl390
ICCIIDR	src/dev/arm/gic_pl390.hh	/^    static const int ICCIIDR = 0xfc; \/\/ cpu interface id register$/;"	m	class:Pl390
ICCPMR	src/dev/arm/gic_pl390.hh	/^    static const int ICCPMR  = 0x04; \/\/ Interrupt priority mask$/;"	m	class:Pl390
ICCRPR	src/dev/arm/gic_pl390.hh	/^    static const int ICCRPR  = 0x14; \/\/ runing priority$/;"	m	class:Pl390
ICDABR_ED	src/dev/arm/gic_pl390.hh	/^    static const int ICDABR_ED  = 0x37c;$/;"	m	class:Pl390
ICDABR_ST	src/dev/arm/gic_pl390.hh	/^    static const int ICDABR_ST  = 0x300; \/\/ active bit registers$/;"	m	class:Pl390
ICDDCR	src/dev/arm/gic_pl390.hh	/^    static const int ICDDCR     = 0x000; \/\/ control register$/;"	m	class:Pl390
ICDICER_ED	src/dev/arm/gic_pl390.hh	/^    static const int ICDICER_ED = 0x1fc;$/;"	m	class:Pl390
ICDICER_ST	src/dev/arm/gic_pl390.hh	/^    static const int ICDICER_ST = 0x180; \/\/ interrupt clear enable$/;"	m	class:Pl390
ICDICFR_ED	src/dev/arm/gic_pl390.hh	/^    static const int ICDICFR_ED = 0xcfc;$/;"	m	class:Pl390
ICDICFR_ST	src/dev/arm/gic_pl390.hh	/^    static const int ICDICFR_ST = 0xc00; \/\/ interrupt config registers$/;"	m	class:Pl390
ICDICPR_ED	src/dev/arm/gic_pl390.hh	/^    static const int ICDICPR_ED = 0x2fc;$/;"	m	class:Pl390
ICDICPR_ST	src/dev/arm/gic_pl390.hh	/^    static const int ICDICPR_ST = 0x280; \/\/ clear pending interrupt$/;"	m	class:Pl390
ICDICTR	src/dev/arm/gic_pl390.hh	/^    static const int ICDICTR    = 0x004; \/\/ controller type$/;"	m	class:Pl390
ICDIIDR	src/dev/arm/gic_pl390.hh	/^    static const int ICDIIDR    = 0x008; \/\/ implementer id$/;"	m	class:Pl390
ICDIPR_ED	src/dev/arm/gic_pl390.hh	/^    static const int ICDIPR_ED  = 0x7f8;$/;"	m	class:Pl390
ICDIPR_ST	src/dev/arm/gic_pl390.hh	/^    static const int ICDIPR_ST  = 0x400; \/\/ interrupt priority registers$/;"	m	class:Pl390
ICDIPTR_ED	src/dev/arm/gic_pl390.hh	/^    static const int ICDIPTR_ED = 0xbf8;$/;"	m	class:Pl390
ICDIPTR_ST	src/dev/arm/gic_pl390.hh	/^    static const int ICDIPTR_ST = 0x800; \/\/ processor target registers$/;"	m	class:Pl390
ICDISER_ED	src/dev/arm/gic_pl390.hh	/^    static const int ICDISER_ED = 0x17c;$/;"	m	class:Pl390
ICDISER_ST	src/dev/arm/gic_pl390.hh	/^    static const int ICDISER_ST = 0x100; \/\/ interrupt set enable$/;"	m	class:Pl390
ICDISPR_ED	src/dev/arm/gic_pl390.hh	/^    static const int ICDISPR_ED = 0x27c;$/;"	m	class:Pl390
ICDISPR_ST	src/dev/arm/gic_pl390.hh	/^    static const int ICDISPR_ST = 0x200; \/\/ set pending interrupt$/;"	m	class:Pl390
ICDSGIR	src/dev/arm/gic_pl390.hh	/^    static const int ICDSGIR    = 0xf00; \/\/ software generated interrupt$/;"	m	class:Pl390
ICM_CM	src/arch/alpha/ev5.hh	/^inline uint64_t ICM_CM(uint64_t reg) { return reg >> 3 & 0x3; }$/;"	f	namespace:AlphaISA
ICR	src/dev/i8254xGBe_defs.hh	/^    struct ICR : public Reg<uint32_t> { \/\/ 0x00C0 ICR Register$/;"	s	struct:iGbReg::Regs
ICSR_FPE	src/arch/alpha/ev5.hh	/^inline bool ICSR_FPE(uint64_t reg) { return reg >> 26 & 0x1; }$/;"	f	namespace:AlphaISA
ICSR_SDE	src/arch/alpha/ev5.hh	/^inline bool ICSR_SDE(uint64_t reg) { return reg >> 30 & 0x1; }$/;"	f	namespace:AlphaISA
ICSR_SPE	src/arch/alpha/ev5.hh	/^inline int ICSR_SPE(uint64_t reg) { return reg >> 28 & 0x3; }$/;"	f	namespace:AlphaISA
ICache	src/cpu/inorder/pipeline_traits.5stage.hh	/^       ICache,$/;"	e	enum:ThePipeline::ResourceList
ICache	src/cpu/inorder/pipeline_traits.9stage.hh	/^       ICache,$/;"	e	enum:ThePipeline::ResourceList
ICache	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^       ICache,$/;"	e	enum:ThePipeline::ResourceList
ICache	src/cpu/inorder/pipeline_traits.hh	/^       ICache,$/;"	e	enum:ThePipeline::ResourceId
ID	src/dev/x86/i8042.cc	/^const uint8_t X86ISA::PS2Keyboard::ID[] = {0xab, 0x83};$/;"	m	class:X86ISA::PS2Keyboard	file:
ID	src/dev/x86/i8042.cc	/^const uint8_t X86ISA::PS2Mouse::ID[] = {0x00};$/;"	m	class:X86ISA::PS2Mouse	file:
ID	src/dev/x86/i8042.hh	/^    static const uint8_t ID[];$/;"	m	class:X86ISA::PS2Keyboard
ID	src/dev/x86/i8042.hh	/^    static const uint8_t ID[];$/;"	m	class:X86ISA::PS2Mouse
IDBit	src/arch/x86/regs/misc.hh	/^        IDBit = 1 << 21$/;"	e	enum:X86ISA::RFLAGBit
IDEConfig	src/dev/ide_ctrl.cc	/^    IDEConfig = 0x54$/;"	e	enum:ConfRegOffset	file:
IDLE	src/mem/bus.hh	/^        enum State { IDLE, BUSY, RETRY };$/;"	e	enum:BaseBus::Layer::State
IDLECOUNT_MAX_VALUE	src/mem/ruby/system/RubyMemoryControl.cc	/^#define IDLECOUNT_MAX_VALUE /;"	d	file:
IDLE_	src/mem/ruby/network/garnet/NetworkHeader.hh	/^enum VC_state_type {IDLE_, VC_AB_, ACTIVE_, NUM_VC_STATE_TYPE_};$/;"	e	enum:VC_state_type
IDToInt	src/mem/ruby/slicc_interface/RubySlicc_Util.hh	/^IDToInt(NodeID id)$/;"	f
IEBit	src/arch/x86/regs/misc.hh	/^        IEBit = 1 << 0,$/;"	e	enum:X86ISA::X87StatusBit
IER	src/dev/ns_gige_reg.h	/^    IER =               0x18,$/;"	e	enum:DeviceRegisterAddress
IER	src/dev/uart8250.hh	/^    uint8_t IER, DLAB, LCR, MCR;$/;"	m	class:Uart8250
IEW	src/cpu/o3/commit.hh	/^    typedef typename CPUPol::IEW IEW;$/;"	t	class:DefaultCommit
IEW	src/cpu/o3/cpu_policy.hh	/^    typedef DefaultIEW<Impl> IEW;$/;"	t	struct:SimpleCPUPolicy
IEW	src/cpu/o3/inst_queue.hh	/^    typedef typename Impl::CPUPol::IEW IEW;$/;"	t	class:InstructionQueue
IEW	src/cpu/o3/lsq.hh	/^    typedef typename Impl::CPUPol::IEW IEW;$/;"	t	class:LSQ
IEW	src/cpu/o3/lsq_unit.hh	/^    typedef typename Impl::CPUPol::IEW IEW;$/;"	t	class:LSQUnit
IEW	src/cpu/o3/rename.hh	/^    typedef typename CPUPol::IEW IEW;$/;"	t	class:DefaultRename
IEWIdx	src/cpu/o3/cpu.hh	/^        IEWIdx,$/;"	e	enum:FullO3CPU::StageIdx
IEWStruct	src/cpu/o3/commit.hh	/^    typedef typename CPUPol::IEWStruct IEWStruct;$/;"	t	class:DefaultCommit
IEWStruct	src/cpu/o3/cpu.hh	/^    typedef typename CPUPolicy::IEWStruct IEWStruct;$/;"	t	class:FullO3CPU
IEWStruct	src/cpu/o3/cpu_policy.hh	/^    typedef DefaultIEWDefaultCommit<Impl> IEWStruct;$/;"	t	struct:SimpleCPUPolicy
IEWStruct	src/cpu/o3/iew.hh	/^    typedef typename CPUPol::IEWStruct IEWStruct;$/;"	t	class:DefaultIEW
IFBit	src/arch/x86/regs/misc.hh	/^        IFBit = 1 << 9,$/;"	e	enum:X86ISA::RFLAGBit
IFQCount	src/cpu/ozone/front_end.hh	/^    Stats::Scalar IFQCount;   \/\/ cumulative IFQ occupancy$/;"	m	class:FrontEnd
IFQFcount	src/cpu/ozone/front_end.hh	/^    Stats::Scalar IFQFcount; \/\/ cumulative IFQ full count$/;"	m	class:FrontEnd
IFQFullRate	src/cpu/ozone/front_end.hh	/^    Stats::Formula IFQFullRate;$/;"	m	class:FrontEnd
IFQLatency	src/cpu/ozone/front_end.hh	/^    Stats::Formula IFQLatency;$/;"	m	class:FrontEnd
IFQOccupancy	src/cpu/ozone/front_end.hh	/^    Stats::Formula IFQOccupancy;$/;"	m	class:FrontEnd
IGbE	src/dev/Ethernet.py	/^class IGbE(EtherDevice):$/;"	c
IGbE	src/dev/i8254xGBe.cc	/^IGbE::IGbE(const Params *p)$/;"	f	class:IGbE
IGbE	src/dev/i8254xGBe.hh	/^class IGbE : public EtherDevice$/;"	c
IGbEInt	src/dev/i8254xGBe.hh	/^    IGbEInt(const std::string &name, IGbE *d)$/;"	f	class:IGbEInt
IGbEInt	src/dev/i8254xGBe.hh	/^class IGbEInt : public EtherInt$/;"	c
IGbE_e1000	src/dev/Ethernet.py	/^class IGbE_e1000(IGbE):$/;"	c
IGbE_e1000	src/dev/arm/RealView.py	/^from Ethernet import NSGigE, IGbE_e1000, IGbE_igb$/;"	i
IGbE_igb	src/dev/Ethernet.py	/^class IGbE_igb(IGbE):$/;"	c
IGbE_igb	src/dev/arm/RealView.py	/^from Ethernet import NSGigE, IGbE_e1000, IGbE_igb$/;"	i
IHR	src/dev/ns_gige_reg.h	/^    IHR =               0x1c,$/;"	e	enum:DeviceRegisterAddress
IIR_LINE	src/dev/uart8250.hh	/^const uint8_t IIR_LINE  = 0x06; \/* Rx Line Status (highest priority)*\/$/;"	v
IIR_MODEM	src/dev/uart8250.hh	/^const uint8_t IIR_MODEM = 0x00; \/* Modem Status (lowest priority) *\/$/;"	v
IIR_NOPEND	src/dev/uart8250.hh	/^const uint8_t IIR_NOPEND = 0x1;$/;"	v
IIR_RXID	src/dev/uart8250.hh	/^const uint8_t IIR_RXID  = 0x04; \/* Rx Data *\/$/;"	v
IIR_TXID	src/dev/uart8250.hh	/^const uint8_t IIR_TXID  = 0x02; \/* Tx Data *\/$/;"	v
IMR	src/dev/ns_gige_reg.h	/^    IMR =               0x14,$/;"	e	enum:DeviceRegisterAddress
IMR	src/dev/x86/i8259.hh	/^    uint8_t IMR;$/;"	m	class:X86ISA::I8259
IMap	src/base/cp_annotate.hh	/^    typedef std::map<int,int> IMap;$/;"	t	class:CPA
INDEX_MASK	src/mem/ruby/common/Set.hh	/^    static const int INDEX_MASK = (1 << INDEX_SHIFT) - 1;$/;"	m	class:Set
INDEX_SHIFT	src/mem/ruby/common/Set.hh	/^    static const int INDEX_SHIFT = LONG_BITS == 64 ? 6 : 5;$/;"	m	class:Set
INFINITE_	src/mem/ruby/network/garnet/NetworkHeader.hh	/^#define INFINITE_ /;"	d
INFINITE_LATENCY	src/mem/ruby/network/Topology.cc	/^const int INFINITE_LATENCY = 10000; \/\/ Yes, this is a big hack$/;"	v
INIT	src/arch/x86/intmessage.hh	/^            INIT = 5,$/;"	e	enum:X86ISA::DeliveryMode::IntDeliveryMode
INSTANTIATE_PARAM_TEMPLATES	src/sim/serialize.cc	/^#define INSTANTIATE_PARAM_TEMPLATES(/;"	d	file:
INST_CONTROL	src/cpu/inorder/cpu.hh	/^    static const uint8_t INST_CONTROL                       = 23;$/;"	m	class:InOrderCPU
INST_DEST_REGS	src/cpu/inorder/cpu.hh	/^    static const uint8_t INST_DEST_REGS                     = 18;$/;"	m	class:InOrderCPU
INST_FETCH	src/mem/request.hh	/^    static const FlagsType INST_FETCH                  = 0x00000100;$/;"	m	class:Request
INST_LOAD	src/cpu/inorder/cpu.hh	/^    static const uint8_t INST_LOAD                          = 25;$/;"	m	class:InOrderCPU
INST_NONSPEC	src/cpu/inorder/cpu.hh	/^    static const uint8_t INST_NONSPEC                       = 22;$/;"	m	class:InOrderCPU
INST_OPCLASS	src/cpu/inorder/cpu.hh	/^    static const uint8_t INST_OPCLASS                       = 26;$/;"	m	class:InOrderCPU
INST_SPLIT_DATA	src/cpu/inorder/cpu.hh	/^    static const uint8_t INST_SPLIT_DATA                    = 13;$/;"	m	class:InOrderCPU
INST_SRC_REGS	src/cpu/inorder/cpu.hh	/^    static const uint8_t INST_SRC_REGS                      = 14;$/;"	m	class:InOrderCPU
INST_STORE	src/cpu/inorder/cpu.hh	/^    static const uint8_t INST_STORE                         = 24;$/;"	m	class:InOrderCPU
INTERMEDIATE	src/mem/ruby/network/orion/TechParameter.hh	/^      INTERMEDIATE,$/;"	e	enum:TechParameter::WireLayerType
INTERRUPT_ID	src/cpu/kvm/arm_cpu.cc	/^#define INTERRUPT_ID(/;"	d	file:
INTERRUPT_VCPU_FIQ	src/cpu/kvm/arm_cpu.cc	/^#define INTERRUPT_VCPU_FIQ(/;"	d	file:
INTERRUPT_VCPU_IRQ	src/cpu/kvm/arm_cpu.cc	/^#define INTERRUPT_VCPU_IRQ(/;"	d	file:
INTINDEX_ETHERNET	src/arch/alpha/isa_traits.hh	/^    INTINDEX_ETHERNET = 0,$/;"	e	enum:AlphaISA::InterruptLevels
INTINDEX_ETHERNET	src/arch/mips/isa_traits.hh	/^    INTINDEX_ETHERNET = 0,$/;"	e	enum:MipsISA::InterruptLevels
INTINDEX_SCSI	src/arch/alpha/isa_traits.hh	/^    INTINDEX_SCSI = 1,$/;"	e	enum:AlphaISA::InterruptLevels
INTINDEX_SCSI	src/arch/mips/isa_traits.hh	/^    INTINDEX_SCSI = 1,$/;"	e	enum:MipsISA::InterruptLevels
INTLEVEL_EXTERNAL_MAX	src/arch/alpha/isa_traits.hh	/^    INTLEVEL_EXTERNAL_MAX = 34,$/;"	e	enum:AlphaISA::InterruptLevels
INTLEVEL_EXTERNAL_MAX	src/arch/mips/isa_traits.hh	/^    INTLEVEL_EXTERNAL_MAX = 34,$/;"	e	enum:MipsISA::InterruptLevels
INTLEVEL_EXTERNAL_MIN	src/arch/alpha/isa_traits.hh	/^    INTLEVEL_EXTERNAL_MIN = 20,$/;"	e	enum:AlphaISA::InterruptLevels
INTLEVEL_EXTERNAL_MIN	src/arch/mips/isa_traits.hh	/^    INTLEVEL_EXTERNAL_MIN = 20,$/;"	e	enum:MipsISA::InterruptLevels
INTLEVEL_IRQ0	src/arch/alpha/isa_traits.hh	/^    INTLEVEL_IRQ0 = 20,$/;"	e	enum:AlphaISA::InterruptLevels
INTLEVEL_IRQ0	src/arch/mips/isa_traits.hh	/^    INTLEVEL_IRQ0 = 20,$/;"	e	enum:MipsISA::InterruptLevels
INTLEVEL_IRQ1	src/arch/alpha/isa_traits.hh	/^    INTLEVEL_IRQ1 = 21,$/;"	e	enum:AlphaISA::InterruptLevels
INTLEVEL_IRQ1	src/arch/mips/isa_traits.hh	/^    INTLEVEL_IRQ1 = 21,$/;"	e	enum:MipsISA::InterruptLevels
INTLEVEL_IRQ2	src/arch/alpha/isa_traits.hh	/^    INTLEVEL_IRQ2 = 22,$/;"	e	enum:AlphaISA::InterruptLevels
INTLEVEL_IRQ2	src/arch/mips/isa_traits.hh	/^    INTLEVEL_IRQ2 = 22,$/;"	e	enum:MipsISA::InterruptLevels
INTLEVEL_IRQ3	src/arch/alpha/isa_traits.hh	/^    INTLEVEL_IRQ3 = 23,$/;"	e	enum:AlphaISA::InterruptLevels
INTLEVEL_IRQ3	src/arch/mips/isa_traits.hh	/^    INTLEVEL_IRQ3 = 23,$/;"	e	enum:MipsISA::InterruptLevels
INTLEVEL_SERIAL	src/arch/alpha/isa_traits.hh	/^    INTLEVEL_SERIAL = 33,$/;"	e	enum:AlphaISA::InterruptLevels
INTLEVEL_SERIAL	src/arch/mips/isa_traits.hh	/^    INTLEVEL_SERIAL = 33,$/;"	e	enum:MipsISA::InterruptLevels
INTLEVEL_SOFTWARE_MAX	src/arch/alpha/isa_traits.hh	/^    INTLEVEL_SOFTWARE_MAX = 19,$/;"	e	enum:AlphaISA::InterruptLevels
INTLEVEL_SOFTWARE_MAX	src/arch/mips/isa_traits.hh	/^    INTLEVEL_SOFTWARE_MAX = 19,$/;"	e	enum:MipsISA::InterruptLevels
INTLEVEL_SOFTWARE_MIN	src/arch/alpha/isa_traits.hh	/^    INTLEVEL_SOFTWARE_MIN = 4,$/;"	e	enum:AlphaISA::InterruptLevels
INTLEVEL_SOFTWARE_MIN	src/arch/mips/isa_traits.hh	/^    INTLEVEL_SOFTWARE_MIN = 4,$/;"	e	enum:MipsISA::InterruptLevels
INTRCTRL	src/dev/copy_engine_defs.hh	/^    struct INTRCTRL : public Reg<uint8_t> { \/\/ 0x03$/;"	s	struct:CopyEngineReg::Regs
INTREG_ABT	src/arch/arm/intregs.hh	/^INTREG_ABT(unsigned index)$/;"	f	namespace:ArmISA
INTREG_AH	src/arch/x86/regs/int.hh	/^        INTREG_AH = INTREG_RSP,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_AL	src/arch/x86/regs/int.hh	/^        INTREG_AL = INTREG_RAX,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_AX	src/arch/x86/regs/int.hh	/^        INTREG_AX = INTREG_RAX,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_BH	src/arch/x86/regs/int.hh	/^        INTREG_BH = INTREG_RDI,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_BL	src/arch/x86/regs/int.hh	/^        INTREG_BL = INTREG_RBX,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_BP	src/arch/x86/regs/int.hh	/^        INTREG_BP = INTREG_RBP,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_BPL	src/arch/x86/regs/int.hh	/^        INTREG_BPL = INTREG_RBP,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_BX	src/arch/x86/regs/int.hh	/^        INTREG_BX = INTREG_RBX,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_CH	src/arch/x86/regs/int.hh	/^        INTREG_CH = INTREG_RBP,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_CL	src/arch/x86/regs/int.hh	/^        INTREG_CL = INTREG_RCX,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_CONDCODES_C	src/arch/arm/intregs.hh	/^    INTREG_CONDCODES_C,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_CONDCODES_GE	src/arch/arm/intregs.hh	/^    INTREG_CONDCODES_GE,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_CONDCODES_NZ	src/arch/arm/intregs.hh	/^    INTREG_CONDCODES_NZ,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_CONDCODES_V	src/arch/arm/intregs.hh	/^    INTREG_CONDCODES_V,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_CR	src/arch/power/registers.hh	/^    INTREG_CR = NumIntArchRegs,$/;"	e	enum:PowerISA::MiscIntRegNums
INTREG_CTR	src/arch/power/registers.hh	/^    INTREG_CTR,$/;"	e	enum:PowerISA::MiscIntRegNums
INTREG_CX	src/arch/x86/regs/int.hh	/^        INTREG_CX = INTREG_RCX,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_DH	src/arch/x86/regs/int.hh	/^        INTREG_DH = INTREG_RSI,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_DI	src/arch/x86/regs/int.hh	/^        INTREG_DI = INTREG_RDI,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_DIL	src/arch/x86/regs/int.hh	/^        INTREG_DIL = INTREG_RDI,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_DL	src/arch/x86/regs/int.hh	/^        INTREG_DL = INTREG_RDX,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_DSP_ACX0	src/arch/mips/registers.hh	/^   INTREG_DSP_ACX0,$/;"	e	enum:MipsISA::MiscIntRegNums
INTREG_DSP_ACX1	src/arch/mips/registers.hh	/^   INTREG_DSP_ACX1,$/;"	e	enum:MipsISA::MiscIntRegNums
INTREG_DSP_ACX2	src/arch/mips/registers.hh	/^   INTREG_DSP_ACX2,$/;"	e	enum:MipsISA::MiscIntRegNums
INTREG_DSP_ACX3	src/arch/mips/registers.hh	/^   INTREG_DSP_ACX3,$/;"	e	enum:MipsISA::MiscIntRegNums
INTREG_DSP_CONTROL	src/arch/mips/registers.hh	/^   INTREG_DSP_CONTROL$/;"	e	enum:MipsISA::MiscIntRegNums
INTREG_DSP_HI0	src/arch/mips/registers.hh	/^   INTREG_DSP_HI0 = INTREG_HI,$/;"	e	enum:MipsISA::MiscIntRegNums
INTREG_DSP_HI1	src/arch/mips/registers.hh	/^   INTREG_DSP_HI1,$/;"	e	enum:MipsISA::MiscIntRegNums
INTREG_DSP_HI2	src/arch/mips/registers.hh	/^   INTREG_DSP_HI2,$/;"	e	enum:MipsISA::MiscIntRegNums
INTREG_DSP_HI3	src/arch/mips/registers.hh	/^   INTREG_DSP_HI3,$/;"	e	enum:MipsISA::MiscIntRegNums
INTREG_DSP_LO0	src/arch/mips/registers.hh	/^   INTREG_DSP_LO0 = INTREG_LO,$/;"	e	enum:MipsISA::MiscIntRegNums
INTREG_DSP_LO1	src/arch/mips/registers.hh	/^   INTREG_DSP_LO1,$/;"	e	enum:MipsISA::MiscIntRegNums
INTREG_DSP_LO2	src/arch/mips/registers.hh	/^   INTREG_DSP_LO2,$/;"	e	enum:MipsISA::MiscIntRegNums
INTREG_DSP_LO3	src/arch/mips/registers.hh	/^   INTREG_DSP_LO3,$/;"	e	enum:MipsISA::MiscIntRegNums
INTREG_DUMMY	src/arch/arm/intregs.hh	/^    INTREG_DUMMY, \/\/ Dummy reg used to throw away int reg results$/;"	e	enum:ArmISA::IntRegIndex
INTREG_DX	src/arch/x86/regs/int.hh	/^        INTREG_DX = INTREG_RDX,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_EAX	src/arch/x86/regs/int.hh	/^        INTREG_EAX = INTREG_RAX,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_EBP	src/arch/x86/regs/int.hh	/^        INTREG_EBP = INTREG_RBP,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_EBX	src/arch/x86/regs/int.hh	/^        INTREG_EBX = INTREG_RBX,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_ECX	src/arch/x86/regs/int.hh	/^        INTREG_ECX = INTREG_RCX,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_EDI	src/arch/x86/regs/int.hh	/^        INTREG_EDI = INTREG_RDI,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_EDX	src/arch/x86/regs/int.hh	/^        INTREG_EDX = INTREG_RDX,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_ESI	src/arch/x86/regs/int.hh	/^        INTREG_ESI = INTREG_RSI,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_ESP	src/arch/x86/regs/int.hh	/^        INTREG_ESP = INTREG_RSP,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_FIQ	src/arch/arm/intregs.hh	/^INTREG_FIQ(unsigned index)$/;"	f	namespace:ArmISA
INTREG_FOLDED	src/arch/x86/regs/int.hh	/^    INTREG_FOLDED(int index, int foldBit)$/;"	f	namespace:X86ISA
INTREG_FPCONDCODES	src/arch/arm/intregs.hh	/^    INTREG_FPCONDCODES,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_FPSCR	src/arch/power/registers.hh	/^    INTREG_FPSCR,$/;"	e	enum:PowerISA::MiscIntRegNums
INTREG_HI	src/arch/mips/registers.hh	/^   INTREG_HI,$/;"	e	enum:MipsISA::MiscIntRegNums
INTREG_HYP	src/arch/arm/intregs.hh	/^INTREG_HYP(unsigned index)$/;"	f	namespace:ArmISA
INTREG_IMPLICIT	src/arch/x86/regs/int.hh	/^    INTREG_IMPLICIT(int index)$/;"	f	namespace:X86ISA
INTREG_IRQ	src/arch/arm/intregs.hh	/^INTREG_IRQ(unsigned index)$/;"	f	namespace:ArmISA
INTREG_LO	src/arch/mips/registers.hh	/^   INTREG_LO = NumIntArchRegs,$/;"	e	enum:MipsISA::MiscIntRegNums
INTREG_LR	src/arch/arm/intregs.hh	/^    INTREG_LR = INTREG_R14,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_LR	src/arch/power/registers.hh	/^    INTREG_LR,$/;"	e	enum:PowerISA::MiscIntRegNums
INTREG_LR_ABT	src/arch/arm/intregs.hh	/^    INTREG_LR_ABT = INTREG_R14_ABT,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_LR_FIQ	src/arch/arm/intregs.hh	/^    INTREG_LR_FIQ = INTREG_R14_FIQ,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_LR_HYP	src/arch/arm/intregs.hh	/^    INTREG_LR_HYP = INTREG_LR,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_LR_IRQ	src/arch/arm/intregs.hh	/^    INTREG_LR_IRQ = INTREG_R14_IRQ,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_LR_MON	src/arch/arm/intregs.hh	/^    INTREG_LR_MON = INTREG_R14_MON,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_LR_SVC	src/arch/arm/intregs.hh	/^    INTREG_LR_SVC = INTREG_R14_SVC,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_LR_UND	src/arch/arm/intregs.hh	/^    INTREG_LR_UND = INTREG_R14_UND,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_LR_USR	src/arch/arm/intregs.hh	/^    INTREG_LR_USR = INTREG_LR,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_MICRO	src/arch/x86/regs/int.hh	/^    INTREG_MICRO(int index)$/;"	f	namespace:X86ISA
INTREG_MON	src/arch/arm/intregs.hh	/^INTREG_MON(unsigned index)$/;"	f	namespace:ArmISA
INTREG_PC	src/arch/arm/intregs.hh	/^    INTREG_PC = INTREG_R15,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_PC_ABT	src/arch/arm/intregs.hh	/^    INTREG_PC_ABT = INTREG_PC,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_PC_FIQ	src/arch/arm/intregs.hh	/^    INTREG_PC_FIQ = INTREG_PC,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_PC_HYP	src/arch/arm/intregs.hh	/^    INTREG_PC_HYP = INTREG_PC,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_PC_IRQ	src/arch/arm/intregs.hh	/^    INTREG_PC_IRQ = INTREG_PC,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_PC_MON	src/arch/arm/intregs.hh	/^    INTREG_PC_MON = INTREG_PC,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_PC_SVC	src/arch/arm/intregs.hh	/^    INTREG_PC_SVC = INTREG_PC,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_PC_UND	src/arch/arm/intregs.hh	/^    INTREG_PC_UND = INTREG_PC,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_PC_USR	src/arch/arm/intregs.hh	/^    INTREG_PC_USR = INTREG_PC,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R0	src/arch/arm/intregs.hh	/^    INTREG_R0,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R0_ABT	src/arch/arm/intregs.hh	/^    INTREG_R0_ABT = INTREG_R0,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R0_FIQ	src/arch/arm/intregs.hh	/^    INTREG_R0_FIQ = INTREG_R0,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R0_HYP	src/arch/arm/intregs.hh	/^    INTREG_R0_HYP = INTREG_R0,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R0_IRQ	src/arch/arm/intregs.hh	/^    INTREG_R0_IRQ = INTREG_R0,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R0_MON	src/arch/arm/intregs.hh	/^    INTREG_R0_MON = INTREG_R0,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R0_SVC	src/arch/arm/intregs.hh	/^    INTREG_R0_SVC = INTREG_R0,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R0_UND	src/arch/arm/intregs.hh	/^    INTREG_R0_UND = INTREG_R0,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R0_USR	src/arch/arm/intregs.hh	/^    INTREG_R0_USR = INTREG_R0,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R1	src/arch/arm/intregs.hh	/^    INTREG_R1,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R10	src/arch/arm/intregs.hh	/^    INTREG_R10,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R10	src/arch/x86/regs/int.hh	/^        INTREG_R10,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_R10B	src/arch/x86/regs/int.hh	/^        INTREG_R10B = INTREG_R10,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_R10D	src/arch/x86/regs/int.hh	/^        INTREG_R10D = INTREG_R10,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_R10W	src/arch/x86/regs/int.hh	/^        INTREG_R10W = INTREG_R10,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_R10_ABT	src/arch/arm/intregs.hh	/^    INTREG_R10_ABT = INTREG_R10,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R10_FIQ	src/arch/arm/intregs.hh	/^    INTREG_R10_FIQ,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R10_HYP	src/arch/arm/intregs.hh	/^    INTREG_R10_HYP = INTREG_R10,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R10_IRQ	src/arch/arm/intregs.hh	/^    INTREG_R10_IRQ = INTREG_R10,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R10_MON	src/arch/arm/intregs.hh	/^    INTREG_R10_MON = INTREG_R10,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R10_SVC	src/arch/arm/intregs.hh	/^    INTREG_R10_SVC = INTREG_R10,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R10_UND	src/arch/arm/intregs.hh	/^    INTREG_R10_UND = INTREG_R10,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R10_USR	src/arch/arm/intregs.hh	/^    INTREG_R10_USR = INTREG_R10,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R11	src/arch/arm/intregs.hh	/^    INTREG_R11,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R11	src/arch/x86/regs/int.hh	/^        INTREG_R11,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_R11B	src/arch/x86/regs/int.hh	/^        INTREG_R11B = INTREG_R11,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_R11D	src/arch/x86/regs/int.hh	/^        INTREG_R11D = INTREG_R11,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_R11W	src/arch/x86/regs/int.hh	/^        INTREG_R11W = INTREG_R11,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_R11_ABT	src/arch/arm/intregs.hh	/^    INTREG_R11_ABT = INTREG_R11,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R11_FIQ	src/arch/arm/intregs.hh	/^    INTREG_R11_FIQ,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R11_HYP	src/arch/arm/intregs.hh	/^    INTREG_R11_HYP = INTREG_R11,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R11_IRQ	src/arch/arm/intregs.hh	/^    INTREG_R11_IRQ = INTREG_R11,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R11_MON	src/arch/arm/intregs.hh	/^    INTREG_R11_MON = INTREG_R11,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R11_SVC	src/arch/arm/intregs.hh	/^    INTREG_R11_SVC = INTREG_R11,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R11_UND	src/arch/arm/intregs.hh	/^    INTREG_R11_UND = INTREG_R11,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R11_USR	src/arch/arm/intregs.hh	/^    INTREG_R11_USR = INTREG_R11,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R12	src/arch/arm/intregs.hh	/^    INTREG_R12,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R12	src/arch/x86/regs/int.hh	/^        INTREG_R12,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_R12B	src/arch/x86/regs/int.hh	/^        INTREG_R12B = INTREG_R12,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_R12D	src/arch/x86/regs/int.hh	/^        INTREG_R12D = INTREG_R12,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_R12W	src/arch/x86/regs/int.hh	/^        INTREG_R12W = INTREG_R12,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_R12_ABT	src/arch/arm/intregs.hh	/^    INTREG_R12_ABT = INTREG_R12,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R12_FIQ	src/arch/arm/intregs.hh	/^    INTREG_R12_FIQ,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R12_HYP	src/arch/arm/intregs.hh	/^    INTREG_R12_HYP = INTREG_R12,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R12_IRQ	src/arch/arm/intregs.hh	/^    INTREG_R12_IRQ = INTREG_R12,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R12_MON	src/arch/arm/intregs.hh	/^    INTREG_R12_MON = INTREG_R12,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R12_SVC	src/arch/arm/intregs.hh	/^    INTREG_R12_SVC = INTREG_R12,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R12_UND	src/arch/arm/intregs.hh	/^    INTREG_R12_UND = INTREG_R12,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R12_USR	src/arch/arm/intregs.hh	/^    INTREG_R12_USR = INTREG_R12,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R13	src/arch/arm/intregs.hh	/^    INTREG_R13,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R13	src/arch/x86/regs/int.hh	/^        INTREG_R13,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_R13B	src/arch/x86/regs/int.hh	/^        INTREG_R13B = INTREG_R13,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_R13D	src/arch/x86/regs/int.hh	/^        INTREG_R13D = INTREG_R13,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_R13W	src/arch/x86/regs/int.hh	/^        INTREG_R13W = INTREG_R13,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_R13_ABT	src/arch/arm/intregs.hh	/^    INTREG_R13_ABT,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R13_FIQ	src/arch/arm/intregs.hh	/^    INTREG_R13_FIQ,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R13_HYP	src/arch/arm/intregs.hh	/^    INTREG_R13_HYP,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R13_IRQ	src/arch/arm/intregs.hh	/^    INTREG_R13_IRQ,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R13_MON	src/arch/arm/intregs.hh	/^    INTREG_R13_MON,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R13_SVC	src/arch/arm/intregs.hh	/^    INTREG_R13_SVC,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R13_UND	src/arch/arm/intregs.hh	/^    INTREG_R13_UND,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R13_USR	src/arch/arm/intregs.hh	/^    INTREG_R13_USR = INTREG_R13,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R14	src/arch/arm/intregs.hh	/^    INTREG_R14,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R14	src/arch/x86/regs/int.hh	/^        INTREG_R14,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_R14B	src/arch/x86/regs/int.hh	/^        INTREG_R14B = INTREG_R14,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_R14D	src/arch/x86/regs/int.hh	/^        INTREG_R14D = INTREG_R14,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_R14W	src/arch/x86/regs/int.hh	/^        INTREG_R14W = INTREG_R14,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_R14_ABT	src/arch/arm/intregs.hh	/^    INTREG_R14_ABT,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R14_FIQ	src/arch/arm/intregs.hh	/^    INTREG_R14_FIQ,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R14_HYP	src/arch/arm/intregs.hh	/^    INTREG_R14_HYP = INTREG_R14,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R14_IRQ	src/arch/arm/intregs.hh	/^    INTREG_R14_IRQ,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R14_MON	src/arch/arm/intregs.hh	/^    INTREG_R14_MON,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R14_SVC	src/arch/arm/intregs.hh	/^    INTREG_R14_SVC,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R14_UND	src/arch/arm/intregs.hh	/^    INTREG_R14_UND,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R14_USR	src/arch/arm/intregs.hh	/^    INTREG_R14_USR = INTREG_R14,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R15	src/arch/arm/intregs.hh	/^    INTREG_R15,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R15	src/arch/x86/regs/int.hh	/^        INTREG_R15,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_R15B	src/arch/x86/regs/int.hh	/^        INTREG_R15B = INTREG_R15,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_R15D	src/arch/x86/regs/int.hh	/^        INTREG_R15D = INTREG_R15,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_R15W	src/arch/x86/regs/int.hh	/^        INTREG_R15W = INTREG_R15,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_R15_ABT	src/arch/arm/intregs.hh	/^    INTREG_R15_ABT = INTREG_R15,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R15_FIQ	src/arch/arm/intregs.hh	/^    INTREG_R15_FIQ = INTREG_R15$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R15_HYP	src/arch/arm/intregs.hh	/^    INTREG_R15_HYP = INTREG_R15,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R15_IRQ	src/arch/arm/intregs.hh	/^    INTREG_R15_IRQ = INTREG_R15,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R15_MON	src/arch/arm/intregs.hh	/^    INTREG_R15_MON = INTREG_R15,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R15_SVC	src/arch/arm/intregs.hh	/^    INTREG_R15_SVC = INTREG_R15,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R15_UND	src/arch/arm/intregs.hh	/^    INTREG_R15_UND = INTREG_R15,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R15_USR	src/arch/arm/intregs.hh	/^    INTREG_R15_USR = INTREG_R15,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R1_ABT	src/arch/arm/intregs.hh	/^    INTREG_R1_ABT = INTREG_R1,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R1_FIQ	src/arch/arm/intregs.hh	/^    INTREG_R1_FIQ = INTREG_R1,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R1_HYP	src/arch/arm/intregs.hh	/^    INTREG_R1_HYP = INTREG_R1,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R1_IRQ	src/arch/arm/intregs.hh	/^    INTREG_R1_IRQ = INTREG_R1,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R1_MON	src/arch/arm/intregs.hh	/^    INTREG_R1_MON = INTREG_R1,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R1_SVC	src/arch/arm/intregs.hh	/^    INTREG_R1_SVC = INTREG_R1,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R1_UND	src/arch/arm/intregs.hh	/^    INTREG_R1_UND = INTREG_R1,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R1_USR	src/arch/arm/intregs.hh	/^    INTREG_R1_USR = INTREG_R1,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R2	src/arch/arm/intregs.hh	/^    INTREG_R2,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R2_ABT	src/arch/arm/intregs.hh	/^    INTREG_R2_ABT = INTREG_R2,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R2_FIQ	src/arch/arm/intregs.hh	/^    INTREG_R2_FIQ = INTREG_R2,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R2_HYP	src/arch/arm/intregs.hh	/^    INTREG_R2_HYP = INTREG_R2,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R2_IRQ	src/arch/arm/intregs.hh	/^    INTREG_R2_IRQ = INTREG_R2,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R2_MON	src/arch/arm/intregs.hh	/^    INTREG_R2_MON = INTREG_R2,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R2_SVC	src/arch/arm/intregs.hh	/^    INTREG_R2_SVC = INTREG_R2,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R2_UND	src/arch/arm/intregs.hh	/^    INTREG_R2_UND = INTREG_R2,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R2_USR	src/arch/arm/intregs.hh	/^    INTREG_R2_USR = INTREG_R2,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R3	src/arch/arm/intregs.hh	/^    INTREG_R3,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R3_ABT	src/arch/arm/intregs.hh	/^    INTREG_R3_ABT = INTREG_R3,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R3_FIQ	src/arch/arm/intregs.hh	/^    INTREG_R3_FIQ = INTREG_R3,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R3_HYP	src/arch/arm/intregs.hh	/^    INTREG_R3_HYP = INTREG_R3,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R3_IRQ	src/arch/arm/intregs.hh	/^    INTREG_R3_IRQ = INTREG_R3,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R3_MON	src/arch/arm/intregs.hh	/^    INTREG_R3_MON = INTREG_R3,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R3_SVC	src/arch/arm/intregs.hh	/^    INTREG_R3_SVC = INTREG_R3,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R3_UND	src/arch/arm/intregs.hh	/^    INTREG_R3_UND = INTREG_R3,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R3_USR	src/arch/arm/intregs.hh	/^    INTREG_R3_USR = INTREG_R3,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R4	src/arch/arm/intregs.hh	/^    INTREG_R4,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R4_ABT	src/arch/arm/intregs.hh	/^    INTREG_R4_ABT = INTREG_R4,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R4_FIQ	src/arch/arm/intregs.hh	/^    INTREG_R4_FIQ = INTREG_R4,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R4_HYP	src/arch/arm/intregs.hh	/^    INTREG_R4_HYP = INTREG_R4,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R4_IRQ	src/arch/arm/intregs.hh	/^    INTREG_R4_IRQ = INTREG_R4,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R4_MON	src/arch/arm/intregs.hh	/^    INTREG_R4_MON = INTREG_R4,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R4_SVC	src/arch/arm/intregs.hh	/^    INTREG_R4_SVC = INTREG_R4,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R4_UND	src/arch/arm/intregs.hh	/^    INTREG_R4_UND = INTREG_R4,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R4_USR	src/arch/arm/intregs.hh	/^    INTREG_R4_USR = INTREG_R4,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R5	src/arch/arm/intregs.hh	/^    INTREG_R5,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R5_ABT	src/arch/arm/intregs.hh	/^    INTREG_R5_ABT = INTREG_R5,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R5_FIQ	src/arch/arm/intregs.hh	/^    INTREG_R5_FIQ = INTREG_R5,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R5_HYP	src/arch/arm/intregs.hh	/^    INTREG_R5_HYP = INTREG_R5,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R5_IRQ	src/arch/arm/intregs.hh	/^    INTREG_R5_IRQ = INTREG_R5,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R5_MON	src/arch/arm/intregs.hh	/^    INTREG_R5_MON = INTREG_R5,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R5_SVC	src/arch/arm/intregs.hh	/^    INTREG_R5_SVC = INTREG_R5,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R5_UND	src/arch/arm/intregs.hh	/^    INTREG_R5_UND = INTREG_R5,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R5_USR	src/arch/arm/intregs.hh	/^    INTREG_R5_USR = INTREG_R5,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R6	src/arch/arm/intregs.hh	/^    INTREG_R6,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R6_ABT	src/arch/arm/intregs.hh	/^    INTREG_R6_ABT = INTREG_R6,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R6_FIQ	src/arch/arm/intregs.hh	/^    INTREG_R6_FIQ = INTREG_R6,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R6_HYP	src/arch/arm/intregs.hh	/^    INTREG_R6_HYP = INTREG_R6,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R6_IRQ	src/arch/arm/intregs.hh	/^    INTREG_R6_IRQ = INTREG_R6,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R6_MON	src/arch/arm/intregs.hh	/^    INTREG_R6_MON = INTREG_R6,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R6_SVC	src/arch/arm/intregs.hh	/^    INTREG_R6_SVC = INTREG_R6,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R6_UND	src/arch/arm/intregs.hh	/^    INTREG_R6_UND = INTREG_R6,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R6_USR	src/arch/arm/intregs.hh	/^    INTREG_R6_USR = INTREG_R6,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R7	src/arch/arm/intregs.hh	/^    INTREG_R7,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R7_ABT	src/arch/arm/intregs.hh	/^    INTREG_R7_ABT = INTREG_R7,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R7_FIQ	src/arch/arm/intregs.hh	/^    INTREG_R7_FIQ = INTREG_R7,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R7_HYP	src/arch/arm/intregs.hh	/^    INTREG_R7_HYP = INTREG_R7,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R7_IRQ	src/arch/arm/intregs.hh	/^    INTREG_R7_IRQ = INTREG_R7,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R7_MON	src/arch/arm/intregs.hh	/^    INTREG_R7_MON = INTREG_R7,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R7_SVC	src/arch/arm/intregs.hh	/^    INTREG_R7_SVC = INTREG_R7,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R7_UND	src/arch/arm/intregs.hh	/^    INTREG_R7_UND = INTREG_R7,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R7_USR	src/arch/arm/intregs.hh	/^    INTREG_R7_USR = INTREG_R7,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R8	src/arch/arm/intregs.hh	/^    INTREG_R8,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R8	src/arch/x86/regs/int.hh	/^        INTREG_R8,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_R8B	src/arch/x86/regs/int.hh	/^        INTREG_R8B = INTREG_R8,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_R8D	src/arch/x86/regs/int.hh	/^        INTREG_R8D = INTREG_R8,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_R8W	src/arch/x86/regs/int.hh	/^        INTREG_R8W = INTREG_R8,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_R8_ABT	src/arch/arm/intregs.hh	/^    INTREG_R8_ABT = INTREG_R8,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R8_FIQ	src/arch/arm/intregs.hh	/^    INTREG_R8_FIQ,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R8_HYP	src/arch/arm/intregs.hh	/^    INTREG_R8_HYP = INTREG_R8,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R8_IRQ	src/arch/arm/intregs.hh	/^    INTREG_R8_IRQ = INTREG_R8,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R8_MON	src/arch/arm/intregs.hh	/^    INTREG_R8_MON = INTREG_R8,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R8_SVC	src/arch/arm/intregs.hh	/^    INTREG_R8_SVC = INTREG_R8,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R8_UND	src/arch/arm/intregs.hh	/^    INTREG_R8_UND = INTREG_R8,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R8_USR	src/arch/arm/intregs.hh	/^    INTREG_R8_USR = INTREG_R8,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R9	src/arch/arm/intregs.hh	/^    INTREG_R9,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R9	src/arch/x86/regs/int.hh	/^        INTREG_R9,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_R9B	src/arch/x86/regs/int.hh	/^        INTREG_R9B = INTREG_R9,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_R9D	src/arch/x86/regs/int.hh	/^        INTREG_R9D = INTREG_R9,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_R9W	src/arch/x86/regs/int.hh	/^        INTREG_R9W = INTREG_R9,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_R9_ABT	src/arch/arm/intregs.hh	/^    INTREG_R9_ABT = INTREG_R9,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R9_FIQ	src/arch/arm/intregs.hh	/^    INTREG_R9_FIQ,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R9_HYP	src/arch/arm/intregs.hh	/^    INTREG_R9_HYP = INTREG_R9,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R9_IRQ	src/arch/arm/intregs.hh	/^    INTREG_R9_IRQ = INTREG_R9,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R9_MON	src/arch/arm/intregs.hh	/^    INTREG_R9_MON = INTREG_R9,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R9_SVC	src/arch/arm/intregs.hh	/^    INTREG_R9_SVC = INTREG_R9,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R9_UND	src/arch/arm/intregs.hh	/^    INTREG_R9_UND = INTREG_R9,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_R9_USR	src/arch/arm/intregs.hh	/^    INTREG_R9_USR = INTREG_R9,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_RAX	src/arch/x86/regs/int.hh	/^        INTREG_RAX,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_RBP	src/arch/x86/regs/int.hh	/^        INTREG_RBP,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_RBX	src/arch/x86/regs/int.hh	/^        INTREG_RBX,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_RCX	src/arch/x86/regs/int.hh	/^        INTREG_RCX,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_RDI	src/arch/x86/regs/int.hh	/^        INTREG_RDI,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_RDX	src/arch/x86/regs/int.hh	/^        INTREG_RDX,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_RSI	src/arch/x86/regs/int.hh	/^        INTREG_RSI,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_RSP	src/arch/x86/regs/int.hh	/^        INTREG_RSP,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_RSV	src/arch/power/registers.hh	/^    INTREG_RSV,$/;"	e	enum:PowerISA::MiscIntRegNums
INTREG_RSV_ADDR	src/arch/power/registers.hh	/^    INTREG_RSV_ADDR$/;"	e	enum:PowerISA::MiscIntRegNums
INTREG_RSV_LEN	src/arch/power/registers.hh	/^    INTREG_RSV_LEN,$/;"	e	enum:PowerISA::MiscIntRegNums
INTREG_SI	src/arch/x86/regs/int.hh	/^        INTREG_SI = INTREG_RSI,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_SIL	src/arch/x86/regs/int.hh	/^        INTREG_SIL = INTREG_RSI,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_SP	src/arch/arm/intregs.hh	/^    INTREG_SP = INTREG_R13,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_SP	src/arch/x86/regs/int.hh	/^        INTREG_SP = INTREG_RSP,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_SP0	src/arch/arm/intregs.hh	/^    INTREG_SP0,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_SP1	src/arch/arm/intregs.hh	/^    INTREG_SP1,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_SP2	src/arch/arm/intregs.hh	/^    INTREG_SP2,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_SP3	src/arch/arm/intregs.hh	/^    INTREG_SP3,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_SPL	src/arch/x86/regs/int.hh	/^        INTREG_SPL = INTREG_RSP,$/;"	e	enum:X86ISA::IntRegIndex
INTREG_SPX	src/arch/arm/intregs.hh	/^    INTREG_SPX = NUM_INTREGS,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_SP_ABT	src/arch/arm/intregs.hh	/^    INTREG_SP_ABT = INTREG_R13_ABT,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_SP_FIQ	src/arch/arm/intregs.hh	/^    INTREG_SP_FIQ = INTREG_R13_FIQ,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_SP_HYP	src/arch/arm/intregs.hh	/^    INTREG_SP_HYP = INTREG_R13_HYP,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_SP_IRQ	src/arch/arm/intregs.hh	/^    INTREG_SP_IRQ = INTREG_R13_IRQ,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_SP_MON	src/arch/arm/intregs.hh	/^    INTREG_SP_MON = INTREG_R13_MON,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_SP_SVC	src/arch/arm/intregs.hh	/^    INTREG_SP_SVC = INTREG_R13_SVC,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_SP_UND	src/arch/arm/intregs.hh	/^    INTREG_SP_UND = INTREG_R13_UND,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_SP_USR	src/arch/arm/intregs.hh	/^    INTREG_SP_USR = INTREG_SP,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_SVC	src/arch/arm/intregs.hh	/^INTREG_SVC(unsigned index)$/;"	f	namespace:ArmISA
INTREG_UND	src/arch/arm/intregs.hh	/^INTREG_UND(unsigned index)$/;"	f	namespace:ArmISA
INTREG_UREG0	src/arch/arm/intregs.hh	/^    INTREG_UREG0,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_UREG1	src/arch/arm/intregs.hh	/^    INTREG_UREG1,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_UREG2	src/arch/arm/intregs.hh	/^    INTREG_UREG2,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_USR	src/arch/arm/intregs.hh	/^INTREG_USR(unsigned index)$/;"	f	namespace:ArmISA
INTREG_X0	src/arch/arm/intregs.hh	/^    INTREG_X0 = 0,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_X1	src/arch/arm/intregs.hh	/^    INTREG_X1,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_X10	src/arch/arm/intregs.hh	/^    INTREG_X10,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_X11	src/arch/arm/intregs.hh	/^    INTREG_X11,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_X12	src/arch/arm/intregs.hh	/^    INTREG_X12,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_X13	src/arch/arm/intregs.hh	/^    INTREG_X13,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_X14	src/arch/arm/intregs.hh	/^    INTREG_X14,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_X15	src/arch/arm/intregs.hh	/^    INTREG_X15,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_X16	src/arch/arm/intregs.hh	/^    INTREG_X16,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_X17	src/arch/arm/intregs.hh	/^    INTREG_X17,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_X18	src/arch/arm/intregs.hh	/^    INTREG_X18,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_X19	src/arch/arm/intregs.hh	/^    INTREG_X19,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_X2	src/arch/arm/intregs.hh	/^    INTREG_X2,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_X20	src/arch/arm/intregs.hh	/^    INTREG_X20,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_X21	src/arch/arm/intregs.hh	/^    INTREG_X21,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_X22	src/arch/arm/intregs.hh	/^    INTREG_X22,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_X23	src/arch/arm/intregs.hh	/^    INTREG_X23,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_X24	src/arch/arm/intregs.hh	/^    INTREG_X24,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_X25	src/arch/arm/intregs.hh	/^    INTREG_X25,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_X26	src/arch/arm/intregs.hh	/^    INTREG_X26,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_X27	src/arch/arm/intregs.hh	/^    INTREG_X27,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_X28	src/arch/arm/intregs.hh	/^    INTREG_X28,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_X29	src/arch/arm/intregs.hh	/^    INTREG_X29,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_X3	src/arch/arm/intregs.hh	/^    INTREG_X3,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_X30	src/arch/arm/intregs.hh	/^    INTREG_X30,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_X31	src/arch/arm/intregs.hh	/^    INTREG_X31,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_X4	src/arch/arm/intregs.hh	/^    INTREG_X4,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_X5	src/arch/arm/intregs.hh	/^    INTREG_X5,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_X6	src/arch/arm/intregs.hh	/^    INTREG_X6,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_X7	src/arch/arm/intregs.hh	/^    INTREG_X7,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_X8	src/arch/arm/intregs.hh	/^    INTREG_X8,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_X9	src/arch/arm/intregs.hh	/^    INTREG_X9,$/;"	e	enum:ArmISA::IntRegIndex
INTREG_XER	src/arch/power/registers.hh	/^    INTREG_XER,$/;"	e	enum:PowerISA::MiscIntRegNums
INTREG_ZERO	src/arch/arm/intregs.hh	/^    INTREG_ZERO,$/;"	e	enum:ArmISA::IntRegIndex
INT_ABT	src/arch/arm/isa_traits.hh	/^        INT_ABT,$/;"	e	enum:ArmISA::InterruptTypes
INT_BITS_MAX	src/dev/arm/gic_pl390.hh	/^    static const int INT_BITS_MAX = 32;$/;"	m	class:Pl390
INT_FIQ	src/arch/arm/isa_traits.hh	/^        INT_FIQ,$/;"	e	enum:ArmISA::InterruptTypes
INT_IRQ	src/arch/arm/isa_traits.hh	/^        INT_IRQ,$/;"	e	enum:ArmISA::InterruptTypes
INT_LINES_MAX	src/dev/arm/gic_pl390.hh	/^    static const int INT_LINES_MAX = 1020;$/;"	m	class:Pl390
INT_MASK_M	src/arch/arm/interrupts.hh	/^        INT_MASK_M, \/\/ masked (subject to PSTATE.{A,I,F} mask bit$/;"	e	enum:ArmISA::Interrupts::InterruptMask
INT_MASK_P	src/arch/arm/interrupts.hh	/^        INT_MASK_P  \/\/ pending$/;"	e	enum:ArmISA::Interrupts::InterruptMask
INT_MASK_T	src/arch/arm/interrupts.hh	/^        INT_MASK_T, \/\/ taken regardless of mask$/;"	e	enum:ArmISA::Interrupts::InterruptMask
INT_RST	src/arch/arm/isa_traits.hh	/^        INT_RST,$/;"	e	enum:ArmISA::InterruptTypes
INT_SEV	src/arch/arm/isa_traits.hh	/^        INT_SEV, \/\/ Special interrupt for recieving SEV's$/;"	e	enum:ArmISA::InterruptTypes
INT_VIRT_FIQ	src/arch/arm/isa_traits.hh	/^        INT_VIRT_FIQ,$/;"	e	enum:ArmISA::InterruptTypes
INT_VIRT_IRQ	src/arch/arm/isa_traits.hh	/^        INT_VIRT_IRQ,$/;"	e	enum:ArmISA::InterruptTypes
INVALID_ROW	src/mem/dram_ctrl.hh	/^        static const uint32_t INVALID_ROW = -1;$/;"	m	class:DRAMCtrl::Bank
IN_RANGE	src/dev/i8254xGBe.cc	/^#define IN_RANGE(/;"	d	file:
IOAPIC	src/arch/x86/bios/intelmp.cc	/^X86ISA::IntelMP::IOAPIC::IOAPIC(Params * p) : BaseConfigEntry(p, 2),$/;"	f	class:X86ISA::IntelMP::IOAPIC
IOAPIC	src/arch/x86/bios/intelmp.hh	/^class IOAPIC : public BaseConfigEntry$/;"	c	namespace:X86ISA::IntelMP
IOIntAssignment	src/arch/x86/bios/intelmp.cc	/^X86ISA::IntelMP::IOIntAssignment::IOIntAssignment(Params * p) :$/;"	f	class:X86ISA::IntelMP::IOIntAssignment
IOIntAssignment	src/arch/x86/bios/intelmp.hh	/^class IOIntAssignment : public IntAssignment$/;"	c	namespace:X86ISA::IntelMP
IO_PCI_CONF_ADDR	src/cpu/kvm/x86_cpu.cc	/^#define IO_PCI_CONF_ADDR /;"	d	file:
IO_PCI_CONF_DATA_BASE	src/cpu/kvm/x86_cpu.cc	/^#define IO_PCI_CONF_DATA_BASE /;"	d	file:
IP6_EXTENSION	src/base/inet.cc	/^#define IP6_EXTENSION(/;"	d	file:
IPR_ALT_MODE	src/arch/alpha/ipr.hh	/^    IPR_ALT_MODE,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_ASTER	src/arch/alpha/ipr.hh	/^    IPR_ASTER,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_ASTRR	src/arch/alpha/ipr.hh	/^    IPR_ASTRR,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_CC	src/arch/alpha/ipr.hh	/^    IPR_CC,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_CC_CTL	src/arch/alpha/ipr.hh	/^    IPR_CC_CTL,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_CLASS_PSEUDO_INST	src/arch/generic/mmapped_ipr.hh	/^    const Addr IPR_CLASS_PSEUDO_INST = 0x0;$/;"	m	namespace:GenericISA
IPR_CLASS_SHIFT	src/arch/generic/mmapped_ipr.hh	/^    const int IPR_CLASS_SHIFT = 48;$/;"	m	namespace:GenericISA
IPR_DC_FLUSH	src/arch/alpha/ipr.hh	/^    IPR_DC_FLUSH,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_DC_MODE	src/arch/alpha/ipr.hh	/^    IPR_DC_MODE,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_DC_PERR_STAT	src/arch/alpha/ipr.hh	/^    IPR_DC_PERR_STAT,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_DC_TEST_CTL	src/arch/alpha/ipr.hh	/^    IPR_DC_TEST_CTL,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_DC_TEST_TAG	src/arch/alpha/ipr.hh	/^    IPR_DC_TEST_TAG,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_DC_TEST_TAG_TEMP	src/arch/alpha/ipr.hh	/^    IPR_DC_TEST_TAG_TEMP,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_DTB_ASN	src/arch/alpha/ipr.hh	/^    IPR_DTB_ASN,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_DTB_CM	src/arch/alpha/ipr.hh	/^    IPR_DTB_CM,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_DTB_IA	src/arch/alpha/ipr.hh	/^    IPR_DTB_IA,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_DTB_IAP	src/arch/alpha/ipr.hh	/^    IPR_DTB_IAP,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_DTB_IS	src/arch/alpha/ipr.hh	/^    IPR_DTB_IS,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_DTB_PTE	src/arch/alpha/ipr.hh	/^    IPR_DTB_PTE,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_DTB_PTE_TEMP	src/arch/alpha/ipr.hh	/^    IPR_DTB_PTE_TEMP = MaxReadOnlyIpr,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_DTB_TAG	src/arch/alpha/ipr.hh	/^    IPR_DTB_TAG,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_EXC_ADDR	src/arch/alpha/ipr.hh	/^    IPR_EXC_ADDR,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_EXC_MASK	src/arch/alpha/ipr.hh	/^    IPR_EXC_MASK,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_EXC_SUM	src/arch/alpha/ipr.hh	/^    IPR_EXC_SUM,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_HWINT_CLR	src/arch/alpha/ipr.hh	/^    IPR_HWINT_CLR = MinWriteOnlyIpr,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_ICM	src/arch/alpha/ipr.hh	/^    IPR_ICM,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_ICSR	src/arch/alpha/ipr.hh	/^    IPR_ICSR,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_IC_FLUSH	src/arch/alpha/ipr.hh	/^    IPR_IC_FLUSH,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_IC_PERR_STAT	src/arch/alpha/ipr.hh	/^    IPR_IC_PERR_STAT,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_IFAULT_VA_FORM	src/arch/alpha/ipr.hh	/^    IPR_IFAULT_VA_FORM,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_INTID	src/arch/alpha/ipr.hh	/^    IPR_INTID = MinReadOnlyIpr,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_IN_CLASS_MASK	src/arch/generic/mmapped_ipr.hh	/^    const Addr IPR_IN_CLASS_MASK = ULL(0x0000FFFFFFFFFFFF);$/;"	m	namespace:GenericISA
IPR_IPLR	src/arch/alpha/ipr.hh	/^    IPR_IPLR,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_ISR	src/arch/alpha/ipr.hh	/^    IPR_ISR,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_ITB_ASN	src/arch/alpha/ipr.hh	/^    IPR_ITB_ASN,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_ITB_IA	src/arch/alpha/ipr.hh	/^    IPR_ITB_IA,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_ITB_IAP	src/arch/alpha/ipr.hh	/^    IPR_ITB_IAP = MaxWriteOnlyIpr,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_ITB_IS	src/arch/alpha/ipr.hh	/^    IPR_ITB_IS,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_ITB_PTE	src/arch/alpha/ipr.hh	/^    IPR_ITB_PTE,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_ITB_PTE_TEMP	src/arch/alpha/ipr.hh	/^    IPR_ITB_PTE_TEMP,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_ITB_TAG	src/arch/alpha/ipr.hh	/^    IPR_ITB_TAG,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_IVPTBR	src/arch/alpha/ipr.hh	/^    IPR_IVPTBR,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_MAF_MODE	src/arch/alpha/ipr.hh	/^    IPR_MAF_MODE,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_MCSR	src/arch/alpha/ipr.hh	/^    IPR_MCSR,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_MM_STAT	src/arch/alpha/ipr.hh	/^    IPR_MM_STAT,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_MVPTBR	src/arch/alpha/ipr.hh	/^    IPR_MVPTBR,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_PAL_BASE	src/arch/alpha/ipr.hh	/^    IPR_PAL_BASE,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_PALtemp0	src/arch/alpha/ipr.hh	/^    IPR_PALtemp0,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_PALtemp1	src/arch/alpha/ipr.hh	/^    IPR_PALtemp1,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_PALtemp10	src/arch/alpha/ipr.hh	/^    IPR_PALtemp10,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_PALtemp11	src/arch/alpha/ipr.hh	/^    IPR_PALtemp11,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_PALtemp12	src/arch/alpha/ipr.hh	/^    IPR_PALtemp12,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_PALtemp13	src/arch/alpha/ipr.hh	/^    IPR_PALtemp13,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_PALtemp14	src/arch/alpha/ipr.hh	/^    IPR_PALtemp14,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_PALtemp15	src/arch/alpha/ipr.hh	/^    IPR_PALtemp15,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_PALtemp16	src/arch/alpha/ipr.hh	/^    IPR_PALtemp16,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_PALtemp17	src/arch/alpha/ipr.hh	/^    IPR_PALtemp17,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_PALtemp18	src/arch/alpha/ipr.hh	/^    IPR_PALtemp18,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_PALtemp19	src/arch/alpha/ipr.hh	/^    IPR_PALtemp19,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_PALtemp2	src/arch/alpha/ipr.hh	/^    IPR_PALtemp2,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_PALtemp20	src/arch/alpha/ipr.hh	/^    IPR_PALtemp20,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_PALtemp21	src/arch/alpha/ipr.hh	/^    IPR_PALtemp21,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_PALtemp22	src/arch/alpha/ipr.hh	/^    IPR_PALtemp22,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_PALtemp23	src/arch/alpha/ipr.hh	/^    IPR_PALtemp23,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_PALtemp3	src/arch/alpha/ipr.hh	/^    IPR_PALtemp3,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_PALtemp4	src/arch/alpha/ipr.hh	/^    IPR_PALtemp4,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_PALtemp5	src/arch/alpha/ipr.hh	/^    IPR_PALtemp5,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_PALtemp6	src/arch/alpha/ipr.hh	/^    IPR_PALtemp6,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_PALtemp7	src/arch/alpha/ipr.hh	/^    IPR_PALtemp7,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_PALtemp8	src/arch/alpha/ipr.hh	/^    IPR_PALtemp8,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_PALtemp9	src/arch/alpha/ipr.hh	/^    IPR_PALtemp9,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_PMCTR	src/arch/alpha/ipr.hh	/^    IPR_PMCTR,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_SIRR	src/arch/alpha/ipr.hh	/^    IPR_SIRR,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_SL_RCV	src/arch/alpha/ipr.hh	/^    IPR_SL_RCV,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_SL_XMIT	src/arch/alpha/ipr.hh	/^    IPR_SL_XMIT,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_VA	src/arch/alpha/ipr.hh	/^    IPR_VA,$/;"	e	enum:AlphaISA::MiscRegIpr
IPR_VA_FORM	src/arch/alpha/ipr.hh	/^    IPR_VA_FORM,$/;"	e	enum:AlphaISA::MiscRegIpr
IPShellEmbed	src/python/m5/main.py	/^        from IPython.Shell import IPShellEmbed$/;"	i
IPython	src/python/m5/main.py	/^            import IPython$/;"	i
IQ	src/cpu/o3/cpu_policy.hh	/^    typedef InstructionQueue<Impl> IQ;$/;"	t	struct:SimpleCPUPolicy
IQ	src/cpu/o3/fetch.hh	/^        IQ,$/;"	e	enum:DefaultFetch::FetchPriority
IQ	src/cpu/o3/iew.hh	/^    typedef typename CPUPol::IQ IQ;$/;"	t	class:DefaultIEW
IQ	src/cpu/o3/rename.hh	/^        IQ,$/;"	e	enum:DefaultRename::FullSource
IQ	src/cpu/ozone/back_end.hh	/^            IQ,$/;"	e	enum:BackEnd::InstQueue::queue
IQ	src/cpu/ozone/back_end.hh	/^    InstQueue IQ;$/;"	m	class:BackEnd
IQEntry	src/cpu/ozone/inst_queue.hh	/^    struct IQEntry {$/;"	s	class:InstQueue
IQPolicy	src/cpu/o3/inst_queue.hh	/^    enum IQPolicy {$/;"	g	class:InstructionQueue
IRR	src/dev/x86/i8259.hh	/^    uint8_t IRR;$/;"	m	class:X86ISA::I8259
IRRV	src/arch/x86/interrupts.hh	/^    uint8_t IRRV;$/;"	m	class:X86ISA::Interrupts
ISA	src/arch/alpha/isa.cc	/^ISA::ISA(Params *p)$/;"	f	class:AlphaISA::ISA
ISA	src/arch/alpha/isa.hh	/^    class ISA : public SimObject$/;"	c	namespace:AlphaISA
ISA	src/arch/arm/isa.cc	/^ISA::ISA(Params *p)$/;"	f	class:ArmISA::ISA
ISA	src/arch/arm/isa.hh	/^    class ISA : public SimObject$/;"	c	namespace:ArmISA
ISA	src/arch/mips/isa.cc	/^ISA::ISA(Params *p)$/;"	f	class:MipsISA::ISA
ISA	src/arch/mips/isa.hh	/^    class ISA : public SimObject$/;"	c	namespace:MipsISA
ISA	src/arch/power/isa.cc	/^ISA::ISA(Params *p)$/;"	f	class:PowerISA::ISA
ISA	src/arch/power/isa.hh	/^class ISA : public SimObject$/;"	c	namespace:PowerISA
ISA	src/arch/sparc/isa.cc	/^ISA::ISA(Params *p)$/;"	f	class:SparcISA::ISA
ISA	src/arch/sparc/isa.hh	/^class ISA : public SimObject$/;"	c	namespace:SparcISA
ISA	src/arch/x86/isa.cc	/^ISA::ISA(Params *p)$/;"	f	class:X86ISA::ISA
ISA	src/arch/x86/isa.hh	/^    class ISA : public SimObject$/;"	c	namespace:X86ISA
ISAParser	src/arch/isa_parser.py	/^class ISAParser(Grammar):$/;"	c
ISAParserError	src/arch/isa_parser.py	/^class ISAParserError(Exception):$/;"	c
ISA_HAS_CC_REGS	src/arch/x86/registers.hh	/^#define ISA_HAS_CC_REGS$/;"	d
ISA_HAS_DELAY_SLOT	src/arch/alpha/isa_traits.hh	/^#define ISA_HAS_DELAY_SLOT /;"	d
ISA_HAS_DELAY_SLOT	src/arch/arm/isa_traits.hh	/^    #define ISA_HAS_DELAY_SLOT /;"	d
ISA_HAS_DELAY_SLOT	src/arch/mips/isa_traits.hh	/^#define ISA_HAS_DELAY_SLOT /;"	d
ISA_HAS_DELAY_SLOT	src/arch/power/isa_traits.hh	/^#define ISA_HAS_DELAY_SLOT /;"	d
ISA_HAS_DELAY_SLOT	src/arch/sparc/isa_traits.hh	/^#define ISA_HAS_DELAY_SLOT /;"	d
ISA_HAS_DELAY_SLOT	src/arch/x86/isa_traits.hh	/^#define ISA_HAS_DELAY_SLOT /;"	d
ISR	src/dev/ns_gige_reg.h	/^    ISR =               0x10,$/;"	e	enum:DeviceRegisterAddress
ISR	src/dev/x86/i8259.hh	/^    uint8_t ISR;$/;"	m	class:X86ISA::I8259
ISRV	src/arch/x86/interrupts.hh	/^    uint8_t ISRV;$/;"	m	class:X86ISA::Interrupts
ISR_ALL	src/dev/ns_gige_reg.h	/^     ISR_ALL =          0x7FFFFFFF,$/;"	e	enum:InterruptStatusRegister
ISR_DELAY	src/dev/ns_gige_reg.h	/^     ISR_DELAY =        (ISR_TXIDLE|ISR_TXDESC|ISR_TXOK|$/;"	e	enum:InterruptStatusRegister
ISR_DPERR	src/dev/ns_gige_reg.h	/^     ISR_DPERR =        0x00100000,$/;"	e	enum:InterruptStatusRegister
ISR_HIBINT	src/dev/ns_gige_reg.h	/^     ISR_HIBINT =       0x00008000,$/;"	e	enum:InterruptStatusRegister
ISR_IMPL	src/dev/ns_gige_reg.h	/^     ISR_IMPL =         (ISR_SWI|ISR_TXIDLE|ISR_TXDESC|ISR_TXOK|ISR_RXORN|$/;"	e	enum:InterruptStatusRegister
ISR_MIB	src/dev/ns_gige_reg.h	/^     ISR_MIB =          0x00000800,$/;"	e	enum:InterruptStatusRegister
ISR_NODELAY	src/dev/ns_gige_reg.h	/^     ISR_NODELAY =      (ISR_ALL & ~ISR_DELAY),$/;"	e	enum:InterruptStatusRegister
ISR_NOIMPL	src/dev/ns_gige_reg.h	/^     ISR_NOIMPL =       (ISR_ALL & ~ISR_IMPL)$/;"	e	enum:InterruptStatusRegister
ISR_PHY	src/dev/ns_gige_reg.h	/^     ISR_PHY =          0x00004000,$/;"	e	enum:InterruptStatusRegister
ISR_PME	src/dev/ns_gige_reg.h	/^     ISR_PME =          0x00002000,$/;"	e	enum:InterruptStatusRegister
ISR_RESERVE	src/dev/ns_gige_reg.h	/^     ISR_RESERVE =      0x80000000,$/;"	e	enum:InterruptStatusRegister
ISR_RMABT	src/dev/ns_gige_reg.h	/^     ISR_RMABT =        0x00040000,$/;"	e	enum:InterruptStatusRegister
ISR_RTAB	src/dev/ns_gige_reg.h	/^     ISR_RTAB =         0x00020000,$/;"	e	enum:InterruptStatusRegister
ISR_RXDESC	src/dev/ns_gige_reg.h	/^     ISR_RXDESC =       0x00000002,$/;"	e	enum:InterruptStatusRegister
ISR_RXDESC0	src/dev/ns_gige_reg.h	/^     ISR_RXDESC0 =      0x00800000,$/;"	e	enum:InterruptStatusRegister
ISR_RXDESC1	src/dev/ns_gige_reg.h	/^     ISR_RXDESC1 =      0x01000000,$/;"	e	enum:InterruptStatusRegister
ISR_RXDESC2	src/dev/ns_gige_reg.h	/^     ISR_RXDESC2 =      0x02000000,$/;"	e	enum:InterruptStatusRegister
ISR_RXDESC3	src/dev/ns_gige_reg.h	/^     ISR_RXDESC3 =      0x04000000,$/;"	e	enum:InterruptStatusRegister
ISR_RXEARLY	src/dev/ns_gige_reg.h	/^     ISR_RXEARLY =      0x00000008,$/;"	e	enum:InterruptStatusRegister
ISR_RXERR	src/dev/ns_gige_reg.h	/^     ISR_RXERR =        0x00000004,$/;"	e	enum:InterruptStatusRegister
ISR_RXIDLE	src/dev/ns_gige_reg.h	/^     ISR_RXIDLE =       0x00000010,$/;"	e	enum:InterruptStatusRegister
ISR_RXOK	src/dev/ns_gige_reg.h	/^     ISR_RXOK =         0x00000001,$/;"	e	enum:InterruptStatusRegister
ISR_RXORN	src/dev/ns_gige_reg.h	/^     ISR_RXORN =        0x00000020,$/;"	e	enum:InterruptStatusRegister
ISR_RXRCMP	src/dev/ns_gige_reg.h	/^     ISR_RXRCMP =       0x00200000,$/;"	e	enum:InterruptStatusRegister
ISR_RXSOVR	src/dev/ns_gige_reg.h	/^     ISR_RXSOVR =       0x00010000,$/;"	e	enum:InterruptStatusRegister
ISR_SSERR	src/dev/ns_gige_reg.h	/^     ISR_SSERR =        0x00080000,$/;"	e	enum:InterruptStatusRegister
ISR_SWI	src/dev/ns_gige_reg.h	/^     ISR_SWI =          0x00001000,$/;"	e	enum:InterruptStatusRegister
ISR_TXDESC	src/dev/ns_gige_reg.h	/^     ISR_TXDESC =       0x00000080,$/;"	e	enum:InterruptStatusRegister
ISR_TXDESC0	src/dev/ns_gige_reg.h	/^     ISR_TXDESC0 =      0x08000000,$/;"	e	enum:InterruptStatusRegister
ISR_TXDESC1	src/dev/ns_gige_reg.h	/^     ISR_TXDESC1 =      0x10000000,$/;"	e	enum:InterruptStatusRegister
ISR_TXDESC2	src/dev/ns_gige_reg.h	/^     ISR_TXDESC2 =      0x20000000,$/;"	e	enum:InterruptStatusRegister
ISR_TXDESC3	src/dev/ns_gige_reg.h	/^     ISR_TXDESC3 =      0x40000000,$/;"	e	enum:InterruptStatusRegister
ISR_TXERR	src/dev/ns_gige_reg.h	/^     ISR_TXERR =        0x00000100,$/;"	e	enum:InterruptStatusRegister
ISR_TXIDLE	src/dev/ns_gige_reg.h	/^     ISR_TXIDLE =       0x00000200,$/;"	e	enum:InterruptStatusRegister
ISR_TXOK	src/dev/ns_gige_reg.h	/^     ISR_TXOK =         0x00000040,$/;"	e	enum:InterruptStatusRegister
ISR_TXRCMP	src/dev/ns_gige_reg.h	/^     ISR_TXRCMP =       0x00400000,$/;"	e	enum:InterruptStatusRegister
ISR_TXURN	src/dev/ns_gige_reg.h	/^     ISR_TXURN =        0x00000400,$/;"	e	enum:InterruptStatusRegister
ITBWaitResponse	src/cpu/simple/base.hh	/^        ITBWaitResponse,$/;"	e	enum:BaseSimpleCPU::Status
ITB_ASN_ASN	src/arch/alpha/ev5.hh	/^inline int ITB_ASN_ASN(uint64_t reg) { return reg >> 4 & AsnMask; }$/;"	f	namespace:AlphaISA
ITB_PTE_ASMA	src/arch/alpha/ev5.hh	/^inline bool ITB_PTE_ASMA(uint64_t reg) { return reg >> 4 & 0x1; }$/;"	f	namespace:AlphaISA
ITB_PTE_FONR	src/arch/alpha/ev5.hh	/^inline bool ITB_PTE_FONR(uint64_t reg) { return reg >> 1 & 0x1; }$/;"	f	namespace:AlphaISA
ITB_PTE_FONW	src/arch/alpha/ev5.hh	/^inline bool ITB_PTE_FONW(uint64_t reg) { return reg >> 2 & 0x1; }$/;"	f	namespace:AlphaISA
ITB_PTE_GH	src/arch/alpha/ev5.hh	/^inline int ITB_PTE_GH(uint64_t reg) { return reg >> 5 & 0x3; }$/;"	f	namespace:AlphaISA
ITB_PTE_PPN	src/arch/alpha/ev5.hh	/^inline Addr ITB_PTE_PPN(uint64_t reg)$/;"	f	namespace:AlphaISA
ITB_PTE_XRE	src/arch/alpha/ev5.hh	/^inline int ITB_PTE_XRE(uint64_t reg) { return reg >> 8 & 0xf; }$/;"	f	namespace:AlphaISA
ITLB	src/cpu/inorder/pipeline_traits.5stage.hh	/^       ITLB,$/;"	e	enum:ThePipeline::ResourceList
ITLB	src/cpu/inorder/pipeline_traits.9stage.hh	/^       ITLB,$/;"	e	enum:ThePipeline::ResourceList
ITLB	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^       ITLB,$/;"	e	enum:ThePipeline::ResourceList
ITOUCH_ANNOTE	src/arch/alpha/types.hh	/^    ITOUCH_ANNOTE = 0xffffffff$/;"	e	enum:AlphaISA::annotes
ITOUCH_ANNOTE	src/arch/mips/isa_traits.hh	/^const uint32_t ITOUCH_ANNOTE = 0xffffffff;$/;"	m	namespace:MipsISA
ITR	src/dev/i8254xGBe_defs.hh	/^    struct ITR : public Reg<uint32_t> { \/\/ 0x00C4 ITR Register$/;"	s	struct:iGbReg::Regs
IT_ACK	src/dev/i8254xGBe_defs.hh	/^    IT_ACK     = 0x20000$/;"	e	enum:iGbReg::IntTypes
IT_CPU_MONDO	src/arch/sparc/isa_traits.hh	/^    IT_CPU_MONDO,$/;"	e	enum:SparcISA::InterruptTypes
IT_DEV_MONDO	src/arch/sparc/isa_traits.hh	/^    IT_DEV_MONDO,$/;"	e	enum:SparcISA::InterruptTypes
IT_GPI0	src/dev/i8254xGBe_defs.hh	/^    IT_GPI0    = 0x02000,$/;"	e	enum:iGbReg::IntTypes
IT_GPI1	src/dev/i8254xGBe_defs.hh	/^    IT_GPI1    = 0x04000,$/;"	e	enum:iGbReg::IntTypes
IT_HINTP	src/arch/sparc/isa_traits.hh	/^    IT_HINTP,$/;"	e	enum:SparcISA::InterruptTypes
IT_INT_VEC	src/arch/sparc/isa_traits.hh	/^    IT_INT_VEC,$/;"	e	enum:SparcISA::InterruptTypes
IT_LSC	src/dev/i8254xGBe_defs.hh	/^    IT_LSC     = 0x00004,$/;"	e	enum:iGbReg::IntTypes
IT_MADC	src/dev/i8254xGBe_defs.hh	/^    IT_MADC    = 0x00200,$/;"	e	enum:iGbReg::IntTypes
IT_NONE	src/dev/i8254xGBe_defs.hh	/^    IT_NONE    = 0x00000, \/\/dummy value$/;"	e	enum:iGbReg::IntTypes
IT_RES_ERROR	src/arch/sparc/isa_traits.hh	/^    IT_RES_ERROR,$/;"	e	enum:SparcISA::InterruptTypes
IT_RXCFG	src/dev/i8254xGBe_defs.hh	/^    IT_RXCFG   = 0x00400,$/;"	e	enum:iGbReg::IntTypes
IT_RXDMT	src/dev/i8254xGBe_defs.hh	/^    IT_RXDMT   = 0x00010,$/;"	e	enum:iGbReg::IntTypes
IT_RXO	src/dev/i8254xGBe_defs.hh	/^    IT_RXO     = 0x00040,$/;"	e	enum:iGbReg::IntTypes
IT_RXSEQ	src/dev/i8254xGBe_defs.hh	/^    IT_RXSEQ   = 0x00008,$/;"	e	enum:iGbReg::IntTypes
IT_RXT	src/dev/i8254xGBe_defs.hh	/^    IT_RXT     = 0x00080,$/;"	e	enum:iGbReg::IntTypes
IT_SOFT_INT	src/arch/sparc/isa_traits.hh	/^    IT_SOFT_INT,$/;"	e	enum:SparcISA::InterruptTypes
IT_SRPD	src/dev/i8254xGBe_defs.hh	/^    IT_SRPD    = 0x10000,$/;"	e	enum:iGbReg::IntTypes
IT_TRAP_LEVEL_ZERO	src/arch/sparc/isa_traits.hh	/^    IT_TRAP_LEVEL_ZERO,$/;"	e	enum:SparcISA::InterruptTypes
IT_TXDLOW	src/dev/i8254xGBe_defs.hh	/^    IT_TXDLOW  = 0x08000,$/;"	e	enum:iGbReg::IntTypes
IT_TXDW	src/dev/i8254xGBe_defs.hh	/^    IT_TXDW    = 0x00001,$/;"	e	enum:iGbReg::IntTypes
IT_TXQE	src/dev/i8254xGBe_defs.hh	/^    IT_TXQE    = 0x00002,$/;"	e	enum:iGbReg::IntTypes
ITickEvent	src/cpu/simple/timing.hh	/^            ITickEvent(TimingSimpleCPU *_cpu)$/;"	f	struct:TimingSimpleCPU::IcachePort::ITickEvent
ITickEvent	src/cpu/simple/timing.hh	/^        struct ITickEvent : public TickEvent$/;"	s	class:TimingSimpleCPU::IcachePort
I_	src/mem/ruby/network/garnet/NetworkHeader.hh	/^enum flit_stage {I_, VA_, SA_, ST_, LT_, NUM_FLIT_STAGE_};$/;"	e	enum:flit_stage
IcacheAccessComplete	src/cpu/o3/fetch.hh	/^        IcacheAccessComplete,$/;"	e	enum:DefaultFetch::ThreadStatus
IcacheAccessComplete	src/cpu/ozone/front_end.hh	/^        IcacheAccessComplete,$/;"	e	enum:FrontEnd::Status
IcachePort	src/cpu/o3/cpu.hh	/^        IcachePort(DefaultFetch<Impl> *_fetch, FullO3CPU<Impl>* _cpu)$/;"	f	class:FullO3CPU::IcachePort
IcachePort	src/cpu/o3/cpu.hh	/^    class IcachePort : public MasterPort$/;"	c	class:FullO3CPU
IcachePort	src/cpu/ozone/front_end.hh	/^        IcachePort(FrontEnd<Impl> *_fe)$/;"	f	class:FrontEnd::IcachePort
IcachePort	src/cpu/ozone/front_end.hh	/^    class IcachePort : public MasterPort$/;"	c	class:FrontEnd
IcachePort	src/cpu/simple/timing.hh	/^        IcachePort(TimingSimpleCPU *_cpu)$/;"	f	class:TimingSimpleCPU::IcachePort
IcachePort	src/cpu/simple/timing.hh	/^    class IcachePort : public TimingCPUPort$/;"	c	class:TimingSimpleCPU
IcacheRetry	src/cpu/simple/base.hh	/^        IcacheRetry,$/;"	e	enum:BaseSimpleCPU::Status
IcacheWaitResponse	src/cpu/o3/fetch.hh	/^        IcacheWaitResponse,$/;"	e	enum:DefaultFetch::ThreadStatus
IcacheWaitResponse	src/cpu/ozone/front_end.hh	/^        IcacheWaitResponse,$/;"	e	enum:FrontEnd::Status
IcacheWaitResponse	src/cpu/simple/base.hh	/^        IcacheWaitResponse,$/;"	e	enum:BaseSimpleCPU::Status
IcacheWaitRetry	src/cpu/o3/fetch.hh	/^        IcacheWaitRetry,$/;"	e	enum:DefaultFetch::ThreadStatus
IcacheWaitRetry	src/cpu/ozone/front_end.hh	/^        IcacheWaitRetry,$/;"	e	enum:FrontEnd::Status
IcacheWaitSwitch	src/cpu/simple/base.hh	/^        IcacheWaitSwitch,$/;"	e	enum:BaseSimpleCPU::Status
Id	src/base/cp_annotate.hh	/^    typedef std::pair<std::string, uint64_t> Id;$/;"	t	class:CPA
IdCache	src/base/cp_annotate.hh	/^    typedef std::vector<IdHCache> IdCache;$/;"	t	class:CPA
IdHCache	src/base/cp_annotate.hh	/^    typedef m5::hash_map<Id, int> IdHCache;$/;"	t	class:CPA
IdMap	src/base/cp_annotate.hh	/^    typedef std::vector<std::pair<int, Id> > IdMap;$/;"	t	class:CPA
IdReg	src/dev/arm/rv_ctrl.hh	/^        IdReg      = 0x00,$/;"	e	enum:RealViewCtrl::__anon67
IdeController	src/dev/Ide.py	/^class IdeController(PciDevice):$/;"	c
IdeController	src/dev/ide_ctrl.cc	/^IdeController::IdeController(Params *p)$/;"	f	class:IdeController
IdeController	src/dev/ide_ctrl.hh	/^class IdeController : public PciDevice$/;"	c
IdeController	src/dev/x86/SouthBridge.py	/^from Ide import IdeController$/;"	i
IdeDisk	src/dev/Ide.py	/^class IdeDisk(SimObject):$/;"	c
IdeDisk	src/dev/ide_disk.cc	/^IdeDisk::IdeDisk(const Params *p)$/;"	f	class:IdeDisk
IdeDisk	src/dev/ide_disk.hh	/^class IdeDisk : public SimObject$/;"	c
IdeID	src/dev/Ide.py	/^class IdeID(Enum): vals = ['master', 'slave']$/;"	c
Idle	src/cpu/inorder/cpu.hh	/^        Idle,$/;"	e	enum:InOrderCPU::Status
Idle	src/cpu/inorder/pipeline_stage.hh	/^        Idle,$/;"	e	enum:PipelineStage::ThreadStatus
Idle	src/cpu/kvm/base.hh	/^        Idle,$/;"	e	enum:BaseKvmCPU::Status
Idle	src/cpu/o3/commit.hh	/^        Idle,$/;"	e	enum:DefaultCommit::ThreadStatus
Idle	src/cpu/o3/cpu.hh	/^        Idle,$/;"	e	enum:FullO3CPU::Status
Idle	src/cpu/o3/decode.hh	/^        Idle,$/;"	e	enum:DefaultDecode::ThreadStatus
Idle	src/cpu/o3/fetch.hh	/^        Idle,$/;"	e	enum:DefaultFetch::ThreadStatus
Idle	src/cpu/o3/iew.hh	/^        Idle,$/;"	e	enum:DefaultIEW::StageStatus
Idle	src/cpu/o3/rename.hh	/^        Idle,$/;"	e	enum:DefaultRename::ThreadStatus
Idle	src/cpu/o3/rob.hh	/^        Idle,$/;"	e	enum:ROB::Status
Idle	src/cpu/ozone/back_end.hh	/^        Idle,$/;"	e	enum:BackEnd::Status
Idle	src/cpu/ozone/cpu.hh	/^        Idle,$/;"	e	enum:OzoneCPU::Status
Idle	src/cpu/ozone/front_end.hh	/^        Idle,$/;"	e	enum:FrontEnd::Status
Idle	src/cpu/ozone/inorder_back_end.hh	/^        Idle,$/;"	e	enum:InorderBackEnd::Status
Idle	src/cpu/ozone/lsq_unit.hh	/^        Idle,$/;"	e	enum:OzoneLSQ::Status
Idle	src/cpu/ozone/lw_back_end.hh	/^        Idle,$/;"	e	enum:LWBackEnd::Status
Idle	src/cpu/ozone/lw_lsq.hh	/^        Idle,$/;"	e	enum:OzoneLWLSQ::Status
Idle	src/cpu/simple/base.hh	/^        Idle,$/;"	e	enum:BaseSimpleCPU::Status
Idle	src/dev/copy_engine.hh	/^            Idle,$/;"	e	enum:CopyEngine::CopyEngineChannel::ChannelState
Idle	src/dev/sparc/iob.hh	/^        Idle,$/;"	e	enum:Iob::Type
IdleGen	src/cpu/testers/traffic_gen/generators.hh	/^    IdleGen(const std::string& _name, MasterID master_id, Tick _duration)$/;"	f	class:IdleGen
IdleGen	src/cpu/testers/traffic_gen/generators.hh	/^class IdleGen : public BaseGen$/;"	c
IdleStartEvent	src/arch/alpha/idle_event.hh	/^    IdleStartEvent(PCEventQueue *q, const std::string &desc, Addr addr)$/;"	f	class:IdleStartEvent
IdleStartEvent	src/arch/alpha/idle_event.hh	/^class IdleStartEvent : public PCEvent$/;"	c
IdleStartEvent	src/arch/mips/idle_event.hh	/^    IdleStartEvent(PCEventQueue *q, const std::string &desc, Addr addr)$/;"	f	class:IdleStartEvent
IdleStartEvent	src/arch/mips/idle_event.hh	/^class IdleStartEvent : public PCEvent$/;"	c
IfStatementAST	src/mem/slicc/ast/IfStatementAST.py	/^class IfStatementAST(StatementAST):$/;"	c
Ignore	src/arch/arm/table_walker.hh	/^            Ignore,$/;"	e	enum:ArmISA::TableWalker::L1Descriptor::EntryType
IllegalAsi	src/arch/sparc/tlb.hh	/^        IllegalAsi = 0x8,$/;"	e	enum:SparcISA::TLB::FaultTypes
IllegalInstSetStateFault	src/arch/arm/faults.cc	/^IllegalInstSetStateFault::IllegalInstSetStateFault()$/;"	f	class:ArmISA::IllegalInstSetStateFault
IllegalInstSetStateFault	src/arch/arm/faults.hh	/^class IllegalInstSetStateFault : public ArmFaultVals<IllegalInstSetStateFault>$/;"	c	namespace:ArmISA
IllegalInstruction	src/arch/sparc/faults.hh	/^class IllegalInstruction : public SparcFault<IllegalInstruction> {};$/;"	c	namespace:SparcISA
ImmOp	src/arch/arm/insts/misc.hh	/^    ImmOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ImmOp
ImmOp	src/arch/arm/insts/misc.hh	/^class ImmOp : public PredOp$/;"	c
ImmediateState	src/arch/x86/decoder.hh	/^        ImmediateState,$/;"	e	enum:X86ISA::Decoder::State
ImmediateType	src/arch/x86/decoder.hh	/^    static const uint8_t ImmediateType[2][256];$/;"	m	class:X86ISA::Decoder
ImmediateType	src/arch/x86/decoder_tables.cc	/^    const uint8_t Decoder::ImmediateType[2][256] =$/;"	m	class:X86ISA::Decoder	file:
ImplBits	src/arch/alpha/pagetable.hh	/^    static const int ImplBits = 43;$/;"	m	struct:AlphaISA::VAddr
ImplBits	src/arch/power/pagetable.hh	/^    static const int ImplBits = 43;$/;"	m	struct:PowerISA::VAddr
ImplCPU	src/cpu/base_dyn_inst.hh	/^    typedef typename Impl::CPUType ImplCPU;$/;"	t	class:BaseDynInst
ImplMask	src/arch/alpha/pagetable.hh	/^    static const Addr ImplMask = (ULL(1) << ImplBits) - 1;$/;"	m	struct:AlphaISA::VAddr
ImplMask	src/arch/power/pagetable.hh	/^    static const Addr ImplMask = (ULL(1) << ImplBits) - 1;$/;"	m	struct:PowerISA::VAddr
ImplState	src/cpu/base_dyn_inst.hh	/^    typedef typename ImplCPU::ImplState ImplState;$/;"	t	class:BaseDynInst
ImplState	src/cpu/o3/cpu.hh	/^    typedef O3ThreadState<Impl> ImplState;$/;"	t	class:FullO3CPU
ImplState	src/cpu/ozone/cpu.hh	/^    typedef OzoneThreadState<Impl> ImplState;$/;"	t	class:OzoneCPU
ImplState	src/cpu/ozone/dyn_inst.hh	/^    typedef typename OzoneCPU::ImplState ImplState;$/;"	t	class:OzoneDynInst
InOrderCPU	src/cpu/inorder/InOrderCPU.py	/^class InOrderCPU(BaseCPU):$/;"	c
InOrderCPU	src/cpu/inorder/cpu.cc	/^InOrderCPU::InOrderCPU(Params *params)$/;"	f	class:InOrderCPU
InOrderCPU	src/cpu/inorder/cpu.hh	/^class InOrderCPU : public BaseCPU$/;"	c
InOrderCPU_Pri	src/cpu/inorder/cpu.hh	/^        InOrderCPU_Pri                 = Event::CPU_Tick_Pri,$/;"	e	enum:InOrderCPU::CPUEventPri
InOrderDynInst	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::InOrderDynInst(InOrderCPU *cpu,$/;"	f	class:InOrderDynInst
InOrderDynInst	src/cpu/inorder/inorder_dyn_inst.hh	/^class InOrderDynInst : public RefCounted$/;"	c
InOrderPriority	src/cpu/inorder/resource.hh	/^    enum InOrderPriority {$/;"	g	class:ResourceEvent
InOrderThreadContext	src/cpu/inorder/thread_context.hh	/^    InOrderThreadContext() { }$/;"	f	class:InOrderThreadContext
InOrderThreadContext	src/cpu/inorder/thread_context.hh	/^class InOrderThreadContext : public ThreadContext$/;"	c
InOrderThreadState	src/cpu/inorder/thread_state.hh	/^    InOrderThreadState(InOrderCPU *_cpu, ThreadID _thread_num,$/;"	f	class:InOrderThreadState
InOrderThreadState	src/cpu/inorder/thread_state.hh	/^class InOrderThreadState : public ThreadState {$/;"	c
InOrderTrace	src/cpu/inorder/InOrderTrace.py	/^class InOrderTrace(InstTracer):$/;"	c
InOrderTrace	src/cpu/inorder/inorder_trace.hh	/^    InOrderTrace(const InOrderTraceParams *p) : InstTracer(p)$/;"	f	class:Trace::InOrderTrace
InOrderTrace	src/cpu/inorder/inorder_trace.hh	/^class InOrderTrace : public InstTracer$/;"	c	namespace:Trace
InOrderTraceRecord	src/cpu/inorder/inorder_trace.hh	/^    InOrderTraceRecord(unsigned num_stages, bool _stage_tracing,$/;"	f	class:Trace::InOrderTraceRecord
InOrderTraceRecord	src/cpu/inorder/inorder_trace.hh	/^class InOrderTraceRecord : public ExeTracerRecord$/;"	c	namespace:Trace
InPortDeclAST	src/mem/slicc/ast/InPortDeclAST.py	/^class InPortDeclAST(DeclAST):$/;"	c
InVcState	src/mem/ruby/network/garnet/flexible-pipeline/InVcState.cc	/^InVcState::InVcState(int id)$/;"	f	class:InVcState
InVcState	src/mem/ruby/network/garnet/flexible-pipeline/InVcState.hh	/^class InVcState$/;"	c
Inactive	src/cpu/inorder/pipeline_stage.hh	/^        Inactive$/;"	e	enum:PipelineStage::StageStatus
Inactive	src/cpu/o3/commit.hh	/^        Inactive$/;"	e	enum:DefaultCommit::CommitStatus
Inactive	src/cpu/o3/decode.hh	/^        Inactive$/;"	e	enum:DefaultDecode::DecodeStatus
Inactive	src/cpu/o3/fetch.hh	/^        Inactive$/;"	e	enum:DefaultFetch::FetchStatus
Inactive	src/cpu/o3/iew.hh	/^        Inactive$/;"	e	enum:DefaultIEW::Status
Inactive	src/cpu/o3/rename.hh	/^        Inactive$/;"	e	enum:DefaultRename::RenameStatus
IncEthernetAddr	src/python/m5/params.py	/^def IncEthernetAddr(addr, val = 1):$/;"	f
IncrementAfter	src/arch/arm/insts/mem.hh	/^        IncrementAfter,$/;"	e	enum:ArmISA::RfeOp::AddrMode
IncrementAfter	src/arch/arm/insts/mem.hh	/^        IncrementAfter,$/;"	e	enum:ArmISA::SrsOp::AddrMode
IncrementBefore	src/arch/arm/insts/mem.hh	/^        IncrementBefore$/;"	e	enum:ArmISA::RfeOp::AddrMode
IncrementBefore	src/arch/arm/insts/mem.hh	/^        IncrementBefore$/;"	e	enum:ArmISA::SrsOp::AddrMode
Index	src/mem/ruby/common/TypeDefines.hh	/^typedef int64 Index;            \/\/ what the address bit ripper returns$/;"	t
Inexact	src/arch/mips/registers.hh	/^    Inexact = 1,$/;"	e	enum:MipsISA::FCSRBits
InfixOperatorExprAST	src/mem/slicc/ast/OperatorExprAST.py	/^class InfixOperatorExprAST(ExprAST):$/;"	c
Info	src/base/bitmap.hh	/^    struct Info$/;"	s	class:Bitmap
Info	src/base/statistics.cc	/^Info::Info()$/;"	f	class:Stats::Info
Info	src/base/statistics.hh	/^    typedef DistInfoProxy<Derived> Info;$/;"	t	class:Stats::DistBase
Info	src/base/statistics.hh	/^    typedef InfoProxyType<Derived> Info;$/;"	t	class:Stats::DataWrap
Info	src/base/statistics.hh	/^    typedef InfoProxyType<Derived> Info;$/;"	t	class:Stats::DataWrapVec
Info	src/base/statistics.hh	/^    typedef InfoProxyType<Derived> Info;$/;"	t	class:Stats::DataWrapVec2d
Info	src/base/statistics.hh	/^    typedef SparseHistInfoProxy<Derived> Info;$/;"	t	class:Stats::SparseHistBase
Info	src/base/statistics.hh	/^    typedef Vector2dInfoProxy<Derived> Info;$/;"	t	class:Stats::Vector2dBase
Info	src/base/statistics.hh	/^    typedef VectorDistInfoProxy<Derived> Info;$/;"	t	class:Stats::VectorDistBase
Info	src/base/stats/info.hh	/^class Info$/;"	c	namespace:Stats
Info	src/dev/sinicreg.hh	/^struct Info$/;"	s	namespace:Sinic::Regs
InfoAccess	src/base/statistics.hh	/^class InfoAccess$/;"	c	namespace:Stats
InfoProxy	src/base/statistics.hh	/^    InfoProxy(Stat &stat) : s(stat) {}$/;"	f	class:Stats::InfoProxy
InfoProxy	src/base/statistics.hh	/^class InfoProxy : public Base$/;"	c	namespace:Stats
IniFile	src/base/inifile.cc	/^IniFile::IniFile()$/;"	f	class:IniFile
IniFile	src/base/inifile.hh	/^class IniFile$/;"	c
InitInterrupt	src/arch/x86/faults.hh	/^        InitInterrupt(uint8_t _vector) :$/;"	f	class:X86ISA::InitInterrupt
InitInterrupt	src/arch/x86/faults.hh	/^    class InitInterrupt : public X86Interrupt$/;"	c	namespace:X86ISA
InitMask	src/sim/eventq.hh	/^    static const FlagsType InitMask      = 0xffc0; \/\/ mask for init bits$/;"	m	class:EventBase
InitSecondSplitRead	src/cpu/inorder/resources/cache_unit.hh	/^        InitSecondSplitRead,$/;"	e	enum:CacheUnit::Command
InitSecondSplitWrite	src/cpu/inorder/resources/cache_unit.hh	/^        InitSecondSplitWrite,$/;"	e	enum:CacheUnit::Command
InitStack	src/arch/alpha/linux/system.hh	/^    Addr InitStack() const { return KernelStart + 0x02000; }$/;"	f	class:LinuxAlphaSystem
InitStack	src/arch/mips/linux/system.hh	/^    Addr InitStack() const { return KernelStart + 0x02000; }$/;"	f	class:LinuxMipsSystem
InitTc	src/dev/intel_8254_timer.hh	/^        InitTc,$/;"	e	enum:Intel8254Timer::ModeVal
InitializationPhase	src/base/vnc/vncserver.hh	/^        InitializationPhase,$/;"	e	enum:VncServer::ConnectionState
Initialized	src/sim/eventq.hh	/^    static const FlagsType Initialized   = 0x7a40; \/\/ somewhat random bits$/;"	m	class:EventBase
InitiateFetch	src/cpu/inorder/resources/fetch_unit.hh	/^        InitiateFetch,$/;"	e	enum:FetchUnit::Command
InitiateReadData	src/cpu/inorder/resources/cache_unit.hh	/^        InitiateReadData,$/;"	e	enum:CacheUnit::Command
InitiateWriteData	src/cpu/inorder/resources/cache_unit.hh	/^        InitiateWriteData,$/;"	e	enum:CacheUnit::Command
InitrdSize	src/arch/alpha/linux/system.hh	/^    Addr InitrdSize() const { return Param() + 0x108; }$/;"	f	class:LinuxAlphaSystem
InitrdSize	src/arch/mips/linux/system.hh	/^    Addr InitrdSize() const { return Param() + 0x108; }$/;"	f	class:LinuxMipsSystem
InitrdStart	src/arch/alpha/linux/system.hh	/^    Addr InitrdStart() const { return Param() + 0x100; }$/;"	f	class:LinuxAlphaSystem
InitrdStart	src/arch/mips/linux/system.hh	/^    Addr InitrdStart() const { return Param() + 0x100; }$/;"	f	class:LinuxMipsSystem
InorderBackEnd	src/cpu/ozone/inorder_back_end.hh	/^class InorderBackEnd$/;"	c
InorderBackEnd	src/cpu/ozone/inorder_back_end_impl.hh	/^InorderBackEnd<Impl>::InorderBackEnd(Params *params)$/;"	f	class:InorderBackEnd
InputStream	src/cpu/testers/traffic_gen/generators.cc	/^TraceGen::InputStream::InputStream(const std::string& filename)$/;"	f	class:TraceGen::InputStream
InputStream	src/cpu/testers/traffic_gen/generators.hh	/^    class InputStream$/;"	c	class:TraceGen
InputUnit_d	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.cc	/^InputUnit_d::InputUnit_d(int id, Router_d *router) : Consumer(router)$/;"	f	class:InputUnit_d
InputUnit_d	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.hh	/^class InputUnit_d : public Consumer$/;"	c
InsertAddr	src/cpu/inorder/resources/inst_buffer.hh	/^        InsertAddr,$/;"	e	enum:InstBuffer::Command
InsertInst	src/cpu/inorder/resources/inst_buffer.hh	/^        InsertInst,$/;"	e	enum:InstBuffer::Command
InstBuff	src/cpu/ozone/front_end.hh	/^    typedef typename std::deque<DynInstPtr> InstBuff;$/;"	t	class:FrontEnd
InstBuffIt	src/cpu/ozone/front_end.hh	/^    typedef typename InstBuff::iterator InstBuffIt;$/;"	t	class:FrontEnd
InstBuffer	src/cpu/inorder/resources/inst_buffer.cc	/^InstBuffer::InstBuffer(string res_name, int res_id, int res_width,$/;"	f	class:InstBuffer
InstBuffer	src/cpu/inorder/resources/inst_buffer.hh	/^class InstBuffer : public Resource {$/;"	c
InstBytes	src/arch/x86/decoder.hh	/^        InstBytes() : lastOffset(0)$/;"	f	struct:X86ISA::Decoder::InstBytes
InstBytes	src/arch/x86/decoder.hh	/^    struct InstBytes$/;"	s	class:X86ISA::Decoder
InstCacheMap	src/arch/x86/decoder.hh	/^    typedef m5::hash_map<CacheKey, DecodeCache::InstMap *> InstCacheMap;$/;"	t	class:X86ISA::Decoder
InstGraduated	src/cpu/inorder/resource_pool.hh	/^        InstGraduated = InOrderCPU::NumCPUEvents,$/;"	e	enum:ResourcePool::ResPoolEventType
InstIntRegOffsets	src/arch/sparc/isa.hh	/^    enum InstIntRegOffsets {$/;"	g	class:SparcISA::ISA
InstIt	src/cpu/o3/rob.hh	/^    typedef typename std::list<DynInstPtr>::iterator InstIt;$/;"	t	class:ROB
InstList	src/cpu/ozone/back_end.hh	/^        typedef typename std::list<DynInstPtr> InstList;$/;"	t	class:BackEnd::InstQueue
InstListIt	src/cpu/checker/cpu.hh	/^    typedef typename std::list<DynInstPtr>::iterator InstListIt;$/;"	t	class:Checker
InstListIt	src/cpu/ozone/back_end.hh	/^        typedef typename std::list<DynInstPtr>::iterator InstListIt;$/;"	t	class:BackEnd::InstQueue
InstListIt	src/cpu/ozone/back_end.hh	/^    typedef typename std::list<DynInstPtr>::iterator InstListIt;$/;"	t	class:BackEnd
InstListIt	src/cpu/ozone/inorder_back_end.hh	/^    typedef typename std::list<DynInstPtr>::iterator InstListIt;$/;"	t	class:InorderBackEnd
InstListIt	src/cpu/ozone/lw_back_end.hh	/^    typedef typename std::list<DynInstPtr>::iterator InstListIt;$/;"	t	class:LWBackEnd
InstMap	src/cpu/decode_cache.hh	/^typedef m5::hash_map<TheISA::ExtMachInst, StaticInstPtr> InstMap;$/;"	t	namespace:DecodeCache
InstObjParams	src/arch/isa_parser.py	/^class InstObjParams(object):$/;"	c
InstPrefetchOp	src/cpu/op_class.hh	/^const OpClass InstPrefetchOp = Enums::InstPrefetch;$/;"	v
InstQueue	src/cpu/o3/rename.hh	/^    typedef std::list<DynInstPtr> InstQueue;$/;"	t	class:DefaultRename
InstQueue	src/cpu/ozone/back_end.hh	/^    class InstQueue {$/;"	c	class:BackEnd
InstQueue	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::InstQueue::InstQueue(Params *params)$/;"	f	class:BackEnd::InstQueue
InstQueue	src/cpu/ozone/inst_queue.hh	/^class InstQueue$/;"	c
InstQueue	src/cpu/ozone/inst_queue_impl.hh	/^InstQueue<Impl>::InstQueue(Params *params)$/;"	f	class:InstQueue
InstQueue	src/cpu/ozone/ozone_impl.hh	/^    typedef InstQueue<OzoneImpl> InstQueue;$/;"	t	struct:OzoneImpl
InstRecord	src/sim/insttracer.hh	/^    InstRecord(Tick _when, ThreadContext *_thread,$/;"	f	class:Trace::InstRecord
InstRecord	src/sim/insttracer.hh	/^class InstRecord$/;"	c	namespace:Trace
InstRegIndex	src/arch/x86/insts/static_inst.hh	/^        explicit InstRegIndex(RegIndex _idx) : idx(_idx)$/;"	f	struct:X86ISA::InstRegIndex
InstRegIndex	src/arch/x86/insts/static_inst.hh	/^    struct InstRegIndex$/;"	s	namespace:X86ISA
InstResult	src/cpu/inorder/inorder_dyn_inst.hh	/^        InstResult()$/;"	f	struct:InOrderDynInst::InstResult
InstResult	src/cpu/inorder/inorder_dyn_inst.hh	/^    struct InstResult {$/;"	s	class:InOrderDynInst
InstSeqNum	src/cpu/inst_seq.hh	/^typedef uint64_t InstSeqNum;$/;"	t
InstTag	src/cpu/inst_seq.hh	/^typedef unsigned int InstTag;$/;"	t
InstTracer	src/cpu/BaseCPU.py	/^from InstTracer import InstTracer$/;"	i
InstTracer	src/cpu/ExeTracer.py	/^from InstTracer import InstTracer$/;"	i
InstTracer	src/cpu/IntelTrace.py	/^from InstTracer import InstTracer$/;"	i
InstTracer	src/cpu/LegionTrace.py	/^from InstTracer import InstTracer$/;"	i
InstTracer	src/cpu/inorder/InOrderTrace.py	/^from InstTracer import InstTracer$/;"	i
InstTracer	src/sim/InstTracer.py	/^class InstTracer(SimObject):$/;"	c
InstTracer	src/sim/insttracer.hh	/^    InstTracer(const Params *p) : SimObject(p)$/;"	f	class:Trace::InstTracer
InstTracer	src/sim/insttracer.hh	/^class InstTracer : public SimObject$/;"	c	namespace:Trace
InstValue	src/cpu/inorder/inorder_dyn_inst.hh	/^        InstValue()$/;"	f	struct:InOrderDynInst::InstValue
InstValue	src/cpu/inorder/inorder_dyn_inst.hh	/^    struct InstValue {$/;"	s	class:InOrderDynInst
InstructionAccessError	src/arch/sparc/faults.hh	/^class InstructionAccessError : public SparcFault<InstructionAccessError> {};$/;"	c	namespace:SparcISA
InstructionAccessException	src/arch/sparc/faults.hh	/^class InstructionAccessException : public SparcFault<InstructionAccessException> {};$/;"	c	namespace:SparcISA
InstructionBreakpoint	src/arch/sparc/faults.hh	/^class InstructionBreakpoint : public SparcFault<InstructionBreakpoint> {};$/;"	c	namespace:SparcISA
InstructionCacheMaintenance	src/arch/arm/faults.hh	/^        InstructionCacheMaintenance,  \/\/ Short-desc. format only$/;"	e	enum:ArmISA::ArmFault::FaultSource
InstructionInvalidTSBEntry	src/arch/sparc/faults.hh	/^class InstructionInvalidTSBEntry :$/;"	c	namespace:SparcISA
InstructionQueue	src/cpu/o3/inst_queue.hh	/^class InstructionQueue$/;"	c
InstructionQueue	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::InstructionQueue(O3CPU *cpu_ptr, IEW *iew_ptr,$/;"	f	class:InstructionQueue
InstructionRealTranslationMiss	src/arch/sparc/faults.hh	/^class InstructionRealTranslationMiss :$/;"	c	namespace:SparcISA
Int	src/python/m5/params.py	/^class Int(CheckedInt):      cxx_type = 'int';      size = 32; unsigned = False$/;"	c
Int	src/sim/core.cc	/^namespace Int {$/;"	n	namespace:SimClock	file:
Int	src/sim/core.hh	/^namespace Int {$/;"	n	namespace:SimClock
Int16	src/python/m5/params.py	/^class Int16(CheckedInt):    cxx_type =  'int16_t'; size = 16; unsigned = False$/;"	c
Int32	src/python/m5/params.py	/^class Int32(CheckedInt):    cxx_type =  'int32_t'; size = 32; unsigned = False$/;"	c
Int64	src/python/m5/params.py	/^class Int64(CheckedInt):    cxx_type =  'int64_t'; size = 64; unsigned = False$/;"	c
Int8	src/python/m5/params.py	/^class Int8(CheckedInt):     cxx_type =   'int8_t'; size =  8; unsigned = False$/;"	c
IntALU	src/cpu/o3/FuncUnitConfig.py	/^class IntALU(FUDesc):$/;"	c
IntAddrPrefixCPUID	src/arch/x86/x86_traits.hh	/^    const Addr IntAddrPrefixCPUID = ULL(0x100000000);$/;"	m	namespace:X86ISA
IntAddrPrefixIO	src/arch/x86/x86_traits.hh	/^    const Addr IntAddrPrefixIO = ULL(0x300000000);$/;"	m	namespace:X86ISA
IntAddrPrefixMSR	src/arch/x86/x86_traits.hh	/^    const Addr IntAddrPrefixMSR = ULL(0x200000000);$/;"	m	namespace:X86ISA
IntAddrPrefixMask	src/arch/x86/x86_traits.hh	/^    const Addr IntAddrPrefixMask = ULL(0xffffffff00000000);$/;"	m	namespace:X86ISA
IntAluOp	src/cpu/op_class.hh	/^const OpClass IntAluOp = Enums::IntAlu;$/;"	v
IntAssignment	src/arch/x86/bios/intelmp.hh	/^    IntAssignment(X86IntelMPBaseConfigEntryParams * p,$/;"	f	class:X86ISA::IntelMP::IntAssignment
IntAssignment	src/arch/x86/bios/intelmp.hh	/^class IntAssignment : public BaseConfigEntry$/;"	c	namespace:X86ISA::IntelMP
IntBusy	src/dev/sparc/iob.hh	/^    struct IntBusy {$/;"	s	class:Iob
IntClear	src/dev/arm/rtc_pl031.hh	/^        IntClear   = 0x1C,$/;"	e	enum:PL031::__anon66
IntClear	src/dev/arm/timer_sp804.hh	/^            IntClear   = 0x0C,$/;"	e	enum:Sp804::Timer::__anon69
IntCtl	src/dev/sparc/iob.hh	/^    struct IntCtl {$/;"	s	class:Iob
IntCtlAddr	src/dev/sparc/iob.hh	/^const Addr IntCtlAddr       = 0x0400;$/;"	v
IntCtlMask	src/dev/sparc/iob.hh	/^const uint64_t IntCtlMask   = 0x00006;$/;"	v
IntCtlSize	src/dev/sparc/iob.hh	/^const Addr IntCtlSize       = 0x0020;$/;"	v
IntDeliveryMode	src/arch/x86/intmessage.hh	/^        enum IntDeliveryMode {$/;"	g	namespace:X86ISA::DeliveryMode
IntDevice	src/dev/x86/intdev.hh	/^    IntDevice(MemObject * parent, Tick latency = 0) :$/;"	f	class:X86ISA::IntDevice
IntDevice	src/dev/x86/intdev.hh	/^class IntDevice$/;"	c	namespace:X86ISA
IntDivOp	src/cpu/op_class.hh	/^const OpClass IntDivOp = Enums::IntDiv;$/;"	v
IntFoldBit	src/arch/x86/regs/int.hh	/^    static const IntRegIndex IntFoldBit = (IntRegIndex)(1 << 6);$/;"	m	namespace:X86ISA
IntImmOp	src/arch/power/insts/integer.hh	/^    IntImmOp(const char *mnem, MachInst _machInst, OpClass __opClass)$/;"	f	class:PowerISA::IntImmOp
IntImmOp	src/arch/power/insts/integer.hh	/^class IntImmOp : public IntOp$/;"	c	namespace:PowerISA
IntLine	src/dev/x86/intdev.hh	/^    IntLine(Params *p) : SimObject(p), source(p->source), sink(p->sink)$/;"	f	class:X86ISA::IntLine
IntLine	src/dev/x86/intdev.hh	/^class IntLine : public SimObject$/;"	c	namespace:X86ISA
IntMan	src/dev/sparc/iob.hh	/^    struct IntMan {$/;"	s	class:Iob
IntManAddr	src/dev/sparc/iob.hh	/^const Addr IntManAddr       = 0x0000;$/;"	v
IntManMask	src/dev/sparc/iob.hh	/^const uint64_t IntManMask   = 0x01F3F;$/;"	v
IntManSize	src/dev/sparc/iob.hh	/^const Addr IntManSize       = 0x0020;$/;"	v
IntMask	src/dev/arm/rtc_pl031.hh	/^        IntMask    = 0x10,$/;"	e	enum:PL031::__anon66
IntMasterPort	src/dev/x86/intdev.hh	/^        IntMasterPort(const std::string& _name, MemObject* _parent,$/;"	f	class:X86ISA::IntDevice::IntMasterPort
IntMasterPort	src/dev/x86/intdev.hh	/^    class IntMasterPort : public MessageMasterPort$/;"	c	class:X86ISA::IntDevice
IntMultDiv	src/cpu/o3/FuncUnitConfig.py	/^class IntMultDiv(FUDesc):$/;"	c
IntMultOp	src/cpu/op_class.hh	/^const OpClass IntMultOp = Enums::IntMult;$/;"	v
IntOp	src/arch/power/insts/integer.hh	/^    IntOp(const char *mnem, MachInst _machInst, OpClass __opClass)$/;"	f	class:PowerISA::IntOp
IntOp	src/arch/power/insts/integer.hh	/^class IntOp : public PowerStaticInst$/;"	c	namespace:PowerISA
IntReg	src/arch/alpha/registers.hh	/^typedef uint64_t IntReg;$/;"	t	namespace:AlphaISA
IntReg	src/arch/arm/registers.hh	/^typedef uint64_t IntReg;$/;"	t	namespace:ArmISA
IntReg	src/arch/mips/registers.hh	/^typedef uint32_t IntReg;$/;"	t	namespace:MipsISA
IntReg	src/arch/null/registers.hh	/^typedef uint64_t IntReg;$/;"	t	namespace:NullISA
IntReg	src/arch/power/registers.hh	/^typedef uint64_t IntReg;$/;"	t	namespace:PowerISA
IntReg	src/arch/sparc/registers.hh	/^typedef uint64_t IntReg;$/;"	t	namespace:SparcISA
IntReg	src/arch/x86/registers.hh	/^typedef uint64_t IntReg;$/;"	t	namespace:X86ISA
IntReg	src/cpu/base_dyn_inst.hh	/^    typedef TheISA::IntReg IntReg;$/;"	t	class:BaseDynInst
IntReg	src/cpu/inorder/cpu.hh	/^    typedef TheISA::IntReg IntReg;$/;"	t	class:InOrderCPU
IntReg	src/cpu/inorder/inorder_dyn_inst.hh	/^    typedef TheISA::IntReg IntReg;$/;"	t	class:InOrderDynInst
IntReg	src/cpu/o3/dyn_inst.hh	/^    typedef TheISA::IntReg   IntReg;$/;"	t	class:BaseO3DynInst
IntReg	src/cpu/o3/regfile.hh	/^    typedef TheISA::IntReg IntReg;$/;"	t	class:PhysRegFile
IntReg	src/cpu/ozone/lsq_unit.hh	/^    typedef TheISA::IntReg IntReg;$/;"	t	class:OzoneLSQ
IntReg	src/cpu/ozone/lw_lsq.hh	/^    typedef TheISA::IntReg IntReg;$/;"	t	class:OzoneLWLSQ
IntReg	src/cpu/thread_context.hh	/^    typedef TheISA::IntReg IntReg;$/;"	t	class:ThreadContext
IntReg64Map	src/arch/arm/intregs.hh	/^const IntRegMap IntReg64Map = {$/;"	m	namespace:ArmISA
IntRegAbtMap	src/arch/arm/intregs.hh	/^const IntRegMap IntRegAbtMap = {$/;"	m	namespace:ArmISA
IntRegClass	src/cpu/reg_class.hh	/^    IntRegClass,        \/\/\/< Integer register$/;"	e	enum:RegClass
IntRegFiqMap	src/arch/arm/intregs.hh	/^const IntRegMap IntRegFiqMap = {$/;"	m	namespace:ArmISA
IntRegHypMap	src/arch/arm/intregs.hh	/^const IntRegMap IntRegHypMap = {$/;"	m	namespace:ArmISA
IntRegIndex	src/arch/arm/intregs.hh	/^enum IntRegIndex$/;"	g	namespace:ArmISA
IntRegIndex	src/arch/x86/regs/int.hh	/^    enum IntRegIndex$/;"	g	namespace:X86ISA
IntRegIrqMap	src/arch/arm/intregs.hh	/^const IntRegMap IntRegIrqMap = {$/;"	m	namespace:ArmISA
IntRegMap	src/arch/arm/intregs.hh	/^typedef IntRegIndex IntRegMap[NUM_ARCH_INTREGS];$/;"	t	namespace:ArmISA
IntRegMonMap	src/arch/arm/intregs.hh	/^const IntRegMap IntRegMonMap = {$/;"	m	namespace:ArmISA
IntRegOperand	src/arch/isa_parser.py	/^class IntRegOperand(Operand):$/;"	c
IntRegSvcMap	src/arch/arm/intregs.hh	/^const IntRegMap IntRegSvcMap = {$/;"	m	namespace:ArmISA
IntRegUndMap	src/arch/arm/intregs.hh	/^const IntRegMap IntRegUndMap = {$/;"	m	namespace:ArmISA
IntRegUsrMap	src/arch/arm/intregs.hh	/^const IntRegMap IntRegUsrMap = {$/;"	m	namespace:ArmISA
IntRotateOp	src/arch/power/insts/integer.hh	/^    IntRotateOp(const char *mnem, MachInst _machInst, OpClass __opClass)$/;"	f	class:PowerISA::IntRotateOp
IntRotateOp	src/arch/power/insts/integer.hh	/^class IntRotateOp : public IntShiftOp$/;"	c	namespace:PowerISA
IntShiftOp	src/arch/power/insts/integer.hh	/^    IntShiftOp(const char *mnem, MachInst _machInst, OpClass __opClass)$/;"	f	class:PowerISA::IntShiftOp
IntShiftOp	src/arch/power/insts/integer.hh	/^class IntShiftOp : public IntOp$/;"	c	namespace:PowerISA
IntSinkPin	src/dev/x86/intdev.hh	/^    IntSinkPin(Params *p) : SimObject(p),$/;"	f	class:X86ISA::IntSinkPin
IntSinkPin	src/dev/x86/intdev.hh	/^class IntSinkPin : public SimObject$/;"	c	namespace:X86ISA
IntSlavePort	src/dev/x86/intdev.hh	/^        IntSlavePort(const std::string& _name, MemObject* _parent,$/;"	f	class:X86ISA::IntDevice::IntSlavePort
IntSlavePort	src/dev/x86/intdev.hh	/^    class IntSlavePort : public MessageSlavePort$/;"	c	class:X86ISA::IntDevice
IntSourcePin	src/dev/x86/intdev.hh	/^    IntSourcePin(Params *p) : SimObject(p)$/;"	f	class:X86ISA::IntSourcePin
IntSourcePin	src/dev/x86/intdev.hh	/^class IntSourcePin : public SimObject$/;"	c	namespace:X86ISA
IntTypes	src/dev/i8254xGBe_defs.hh	/^enum IntTypes$/;"	g	namespace:iGbReg
IntVecDis	src/dev/sparc/iob.hh	/^const uint64_t IntVecDis    = 0x31F3F;$/;"	v
IntVecDisAddr	src/dev/sparc/iob.hh	/^const Addr IntVecDisAddr    = 0x0800;$/;"	v
IntVecDisSize	src/dev/sparc/iob.hh	/^const Addr IntVecDisSize    = 0x0100;$/;"	v
Int_Clear	src/dev/arm/hdlcd.hh	/^        Int_Clear        = 0x0014,$/;"	e	enum:HDLcd::RegisterOffset
Int_Mask	src/dev/arm/hdlcd.hh	/^        Int_Mask         = 0x0018,$/;"	e	enum:HDLcd::RegisterOffset
Int_RawStat	src/dev/arm/hdlcd.hh	/^        Int_RawStat      = 0x0010,$/;"	e	enum:HDLcd::RegisterOffset
Int_Status	src/dev/arm/hdlcd.hh	/^        Int_Status       = 0x001C,$/;"	e	enum:HDLcd::RegisterOffset
Integer	src/cpu/inorder/inorder_dyn_inst.hh	/^        Integer,$/;"	e	enum:InOrderDynInst::ResultType
IntegerOverflowFault	src/arch/alpha/faults.hh	/^class IntegerOverflowFault : public AlphaFault$/;"	c	namespace:AlphaISA
IntegerOverflowFault	src/arch/mips/faults.hh	/^class IntegerOverflowFault : public MipsFault<IntegerOverflowFault> {};$/;"	c	namespace:MipsISA
Intel8254Timer	src/dev/intel_8254_timer.cc	/^Intel8254Timer::Intel8254Timer(EventManager *em, const string &name) :$/;"	f	class:Intel8254Timer
Intel8254Timer	src/dev/intel_8254_timer.cc	/^Intel8254Timer::Intel8254Timer(EventManager *em, const string &name,$/;"	f	class:Intel8254Timer
Intel8254Timer	src/dev/intel_8254_timer.hh	/^class Intel8254Timer : public EventManager$/;"	c
IntelMP	src/arch/x86/bios/intelmp.hh	/^namespace IntelMP$/;"	n	namespace:X86ISA
IntelMP	src/arch/x86/system.hh	/^    namespace IntelMP$/;"	n	namespace:X86ISA
IntelTrace	src/cpu/IntelTrace.py	/^class IntelTrace(InstTracer):$/;"	c
IntelTrace	src/cpu/inteltrace.hh	/^    IntelTrace(const IntelTraceParams *p) : InstTracer(p)$/;"	f	class:Trace::IntelTrace
IntelTrace	src/cpu/inteltrace.hh	/^class IntelTrace : public InstTracer$/;"	c	namespace:Trace
IntelTraceRecord	src/cpu/inteltrace.hh	/^    IntelTraceRecord(Tick _when, ThreadContext *_thread,$/;"	f	class:Trace::IntelTraceRecord
IntelTraceRecord	src/cpu/inteltrace.hh	/^class IntelTraceRecord : public InstRecord$/;"	c	namespace:Trace
InterStageStruct	src/cpu/inorder/comm.hh	/^struct InterStageStruct {$/;"	s
InteractiveShellEmbed	src/python/m5/main.py	/^            from IPython.frontend.terminal.embed import InteractiveShellEmbed$/;"	i
Interal	src/dev/sparc/iob.hh	/^        Interal = 0,$/;"	e	enum:Iob::DeviceId
Interface	src/dev/etherlink.cc	/^EtherLink::Interface::Interface(const string &name, Link *tx, Link *rx)$/;"	f	class:EtherLink::Interface
Interface	src/dev/etherlink.hh	/^    class Interface : public EtherInt$/;"	c	class:EtherLink
Interface	src/dev/sinic.hh	/^    Interface(const std::string &name, Device *d)$/;"	f	class:Sinic::Interface
Interface	src/dev/sinic.hh	/^class Interface : public EtherInt$/;"	c	namespace:Sinic
InterfaceTest	src/dev/x86/i8042.hh	/^        InterfaceTest = 0xAB,$/;"	e	enum:X86ISA::I8042::Command
IntermediateHeader	src/arch/x86/bios/smbios.hh	/^            IntermediateHeader() : tableAddr(0)$/;"	f	struct:X86ISA::SMBios::SMBiosTable::SMBiosHeader::IntermediateHeader
IntermediateHeader	src/arch/x86/bios/smbios.hh	/^        struct IntermediateHeader$/;"	s	struct:X86ISA::SMBios::SMBiosTable::SMBiosHeader
InternalProcReg	src/arch/alpha/isa.hh	/^        typedef uint64_t InternalProcReg;$/;"	t	class:AlphaISA::ISA
InternalProcessorError	src/arch/sparc/faults.hh	/^class InternalProcessorError :$/;"	c	namespace:SparcISA
Interrupt	src/arch/arm/faults.hh	/^class Interrupt : public ArmFaultVals<Interrupt>$/;"	c	namespace:ArmISA
Interrupt	src/dev/sparc/iob.hh	/^        Interrupt,$/;"	e	enum:Iob::Type
InterruptFault	src/arch/alpha/faults.hh	/^class InterruptFault : public AlphaFault$/;"	c	namespace:AlphaISA
InterruptFault	src/arch/mips/faults.hh	/^class InterruptFault : public MipsFault<InterruptFault>$/;"	c	namespace:MipsISA
InterruptLevel	src/arch/sparc/interrupts.hh	/^    InterruptLevel(uint64_t softint)$/;"	f	class:SparcISA::Interrupts
InterruptLevelN	src/arch/sparc/faults.hh	/^    InterruptLevelN(uint32_t n) : EnumeratedFault<InterruptLevelN>(n) {;}$/;"	f	class:SparcISA::InterruptLevelN
InterruptLevelN	src/arch/sparc/faults.hh	/^class InterruptLevelN : public EnumeratedFault<InterruptLevelN>$/;"	c	namespace:SparcISA
InterruptLevels	src/arch/alpha/isa_traits.hh	/^enum InterruptLevels$/;"	g	namespace:AlphaISA
InterruptLevels	src/arch/mips/isa_traits.hh	/^enum InterruptLevels$/;"	g	namespace:MipsISA
InterruptLine	src/dev/CopyEngine.py	/^    InterruptLine = 0x20$/;"	v	class:CopyEngine
InterruptLine	src/dev/Ethernet.py	/^    InterruptLine = 0x1e$/;"	v	class:IGbE
InterruptLine	src/dev/Ethernet.py	/^    InterruptLine = 0x1e$/;"	v	class:NSGigE
InterruptLine	src/dev/Ethernet.py	/^    InterruptLine = 0x1e$/;"	v	class:Sinic
InterruptLine	src/dev/Ide.py	/^    InterruptLine = 0x1f$/;"	v	class:IdeController
InterruptLine	src/dev/Pci.py	/^    InterruptLine = Param.UInt8(0x00, "Interrupt Line")$/;"	v	class:PciDevice
InterruptMask	src/arch/arm/interrupts.hh	/^    enum InterruptMask {$/;"	g	class:ArmISA::Interrupts
InterruptPin	src/dev/CopyEngine.py	/^    InterruptPin = 0x01$/;"	v	class:CopyEngine
InterruptPin	src/dev/Ethernet.py	/^    InterruptPin = 0x01$/;"	v	class:IGbE
InterruptPin	src/dev/Ethernet.py	/^    InterruptPin = 0x01$/;"	v	class:NSGigE
InterruptPin	src/dev/Ethernet.py	/^    InterruptPin = 0x01$/;"	v	class:Sinic
InterruptPin	src/dev/Ide.py	/^    InterruptPin = 0x01$/;"	v	class:IdeController
InterruptPin	src/dev/Pci.py	/^    InterruptPin = Param.UInt8(0x00, "Interrupt Pin")$/;"	v	class:PciDevice
InterruptStatusRegister	src/dev/ns_gige_reg.h	/^enum InterruptStatusRegister {$/;"	g
InterruptTypes	src/arch/arm/isa_traits.hh	/^    enum InterruptTypes$/;"	g	namespace:ArmISA
InterruptTypes	src/arch/sparc/isa_traits.hh	/^enum InterruptTypes$/;"	g	namespace:SparcISA
InterruptVector	src/arch/sparc/faults.hh	/^class InterruptVector : public SparcFault<InterruptVector> {};$/;"	c	namespace:SparcISA
Interrupts	src/arch/alpha/interrupts.hh	/^    Interrupts(Params * p) : SimObject(p), cpu(NULL)$/;"	f	class:AlphaISA::Interrupts
Interrupts	src/arch/alpha/interrupts.hh	/^class Interrupts : public SimObject$/;"	c	namespace:AlphaISA
Interrupts	src/arch/arm/interrupts.hh	/^    Interrupts(Params * p) : SimObject(p), cpu(NULL)$/;"	f	class:ArmISA::Interrupts
Interrupts	src/arch/arm/interrupts.hh	/^class Interrupts : public SimObject$/;"	c	namespace:ArmISA
Interrupts	src/arch/mips/interrupts.hh	/^    Interrupts(Params * p) : SimObject(p)$/;"	f	class:MipsISA::Interrupts
Interrupts	src/arch/mips/interrupts.hh	/^class Interrupts : public SimObject$/;"	c	namespace:MipsISA
Interrupts	src/arch/power/interrupts.hh	/^    Interrupts(Params * p) : SimObject(p), cpu(NULL)$/;"	f	class:PowerISA::Interrupts
Interrupts	src/arch/power/interrupts.hh	/^class Interrupts : public SimObject$/;"	c	namespace:PowerISA
Interrupts	src/arch/sparc/interrupts.hh	/^    Interrupts(Params * p) : SimObject(p), cpu(NULL)$/;"	f	class:SparcISA::Interrupts
Interrupts	src/arch/sparc/interrupts.hh	/^class Interrupts : public SimObject$/;"	c	namespace:SparcISA
Interrupts	src/arch/x86/interrupts.cc	/^X86ISA::Interrupts::Interrupts(Params * p)$/;"	f	class:X86ISA::Interrupts
Interrupts	src/arch/x86/interrupts.hh	/^class Interrupts : public BasicPioDevice, IntDevice$/;"	c	namespace:X86ISA
IntrControl	src/cpu/IntrControl.py	/^class IntrControl(SimObject):$/;"	c
IntrControl	src/cpu/intr_control.cc	/^IntrControl::IntrControl(const Params *p)$/;"	f	class:IntrControl
IntrControl	src/cpu/intr_control.hh	/^class IntrControl : public SimObject$/;"	c
IntrControl	src/cpu/intr_control_noisa.cc	/^IntrControl::IntrControl(const Params *p)$/;"	f	class:IntrControl
IntrEvent	src/dev/ns_gige.hh	/^    typedef EventWrapper<NSGigE, &NSGigE::cpuInterrupt> IntrEvent;$/;"	t	class:NSGigE
IntrEvent	src/dev/sinic.hh	/^    typedef EventWrapper<Base, &Base::cpuInterrupt> IntrEvent;$/;"	t	class:Sinic::Base
IntrEvent	src/dev/uart8250.cc	/^Uart8250::IntrEvent::IntrEvent(Uart8250 *u, int bit)$/;"	f	class:Uart8250::IntrEvent
IntrEvent	src/dev/uart8250.hh	/^    class IntrEvent : public Event$/;"	c	class:Uart8250
IntrMask	src/dev/sinic.hh	/^        uint32_t IntrMask;     \/\/ 0x0c$/;"	m	struct:Sinic::Device::__anon83
IntrStatus	src/dev/sinic.hh	/^        uint32_t IntrStatus;   \/\/ 0x08$/;"	m	struct:Sinic::Device::__anon83
Invalid	src/arch/arm/table_walker.hh	/^            Invalid,$/;"	e	enum:ArmISA::TableWalker::LongDescriptor::EntryType
Invalid	src/arch/mips/registers.hh	/^    Invalid,$/;"	e	enum:MipsISA::FCSRBits
InvalidCmd	src/mem/packet.hh	/^        InvalidCmd,$/;"	e	enum:MemCmd::Command
InvalidDestError	src/mem/packet.hh	/^        InvalidDestError,  \/\/ packet dest field invalid$/;"	e	enum:MemCmd::Command
InvalidOpcode	src/arch/x86/faults.hh	/^        InvalidOpcode() :$/;"	f	class:X86ISA::InvalidOpcode
InvalidOpcode	src/arch/x86/faults.hh	/^    class InvalidOpcode : public X86Fault$/;"	c	namespace:X86ISA
InvalidPortID	src/base/types.hh	/^const PortID InvalidPortID = (PortID)-1;$/;"	v
InvalidTSS	src/arch/x86/faults.hh	/^        InvalidTSS(uint32_t _errorCode) :$/;"	f	class:X86ISA::InvalidTSS
InvalidTSS	src/arch/x86/faults.hh	/^    class InvalidTSS : public X86Fault$/;"	c	namespace:X86ISA
InvalidThreadID	src/base/types.hh	/^const ThreadID InvalidThreadID = (ThreadID)-1;$/;"	v
InvalidateGenerator	src/cpu/testers/directedtest/InvalidateGenerator.cc	/^InvalidateGenerator::InvalidateGenerator(const Params *p)$/;"	f	class:InvalidateGenerator
InvalidateGenerator	src/cpu/testers/directedtest/InvalidateGenerator.hh	/^class InvalidateGenerator : public DirectedGenerator $/;"	c
InvalidateGenerator	src/cpu/testers/directedtest/RubyDirectedTester.py	/^class InvalidateGenerator(DirectedGenerator):$/;"	c
InvalidationReq	src/mem/packet.hh	/^        InvalidationReq,   \/\/ request for address to be invalidated from lsq$/;"	e	enum:MemCmd::Command
IoSel	src/dev/arm/rv_ctrl.hh	/^        IoSel      = 0x70,$/;"	e	enum:RealViewCtrl::__anon67
Iob	src/dev/sparc/T1000.py	/^class Iob(PioDevice):$/;"	c
Iob	src/dev/sparc/iob.cc	/^Iob::Iob(const Params *p)$/;"	f	class:Iob
Iob	src/dev/sparc/iob.hh	/^class Iob : public PioDevice$/;"	c
Ip6Hdr	src/base/inet.hh	/^struct Ip6Hdr : public ip6_hdr$/;"	s	namespace:Net
Ip6Opt	src/base/inet.hh	/^struct Ip6Opt : public ip6_opt_hdr$/;"	s	namespace:Net
Ip6Ptr	src/base/inet.hh	/^    Ip6Ptr() : p(0), eth_hdr_vlan(false) {}$/;"	f	class:Net::Ip6Ptr
Ip6Ptr	src/base/inet.hh	/^    Ip6Ptr(const EthPacketPtr &ptr) : p(0), eth_hdr_vlan(false) { set(ptr); }$/;"	f	class:Net::Ip6Ptr
Ip6Ptr	src/base/inet.hh	/^    Ip6Ptr(const EthPtr &ptr) : p(0), eth_hdr_vlan(false) { set(ptr.p); }$/;"	f	class:Net::Ip6Ptr
Ip6Ptr	src/base/inet.hh	/^    Ip6Ptr(const Ip6Ptr &ptr) : p(ptr.p), eth_hdr_vlan(ptr.eth_hdr_vlan) { }$/;"	f	class:Net::Ip6Ptr
Ip6Ptr	src/base/inet.hh	/^class Ip6Ptr$/;"	c	namespace:Net
IpAddress	src/base/inet.hh	/^    IpAddress() : _ip(0)$/;"	f	struct:Net::IpAddress
IpAddress	src/base/inet.hh	/^    IpAddress(const uint32_t __ip) : _ip(__ip)$/;"	f	struct:Net::IpAddress
IpAddress	src/base/inet.hh	/^struct IpAddress$/;"	s	namespace:Net
IpAddress	src/python/m5/params.py	/^        from m5.internal.params import IpAddress$/;"	i
IpAddress	src/python/m5/params.py	/^class IpAddress(ParamValue):$/;"	c
IpHdr	src/base/inet.hh	/^struct IpHdr : public ip_hdr$/;"	s	namespace:Net
IpNetmask	src/base/inet.hh	/^    IpNetmask() : IpAddress(), _netmask(0)$/;"	f	struct:Net::IpNetmask
IpNetmask	src/base/inet.hh	/^    IpNetmask(const uint32_t __ip, const uint8_t __netmask) :$/;"	f	struct:Net::IpNetmask
IpNetmask	src/base/inet.hh	/^struct IpNetmask : public IpAddress$/;"	s	namespace:Net
IpNetmask	src/python/m5/params.py	/^        from m5.internal.params import IpNetmask$/;"	i
IpNetmask	src/python/m5/params.py	/^class IpNetmask(IpAddress):$/;"	c
IpOpt	src/base/inet.hh	/^struct IpOpt : public ip_opt$/;"	s	namespace:Net
IpPtr	src/base/inet.hh	/^    IpPtr() : p(0), eth_hdr_vlan(false) {}$/;"	f	class:Net::IpPtr
IpPtr	src/base/inet.hh	/^    IpPtr(const EthPacketPtr &ptr) : p(0), eth_hdr_vlan(false) { set(ptr); }$/;"	f	class:Net::IpPtr
IpPtr	src/base/inet.hh	/^    IpPtr(const EthPtr &ptr) : p(0), eth_hdr_vlan(false) { set(ptr.p); }$/;"	f	class:Net::IpPtr
IpPtr	src/base/inet.hh	/^    IpPtr(const IpPtr &ptr) : p(ptr.p), eth_hdr_vlan(ptr.eth_hdr_vlan) { }$/;"	f	class:Net::IpPtr
IpPtr	src/base/inet.hh	/^class IpPtr$/;"	c	namespace:Net
IpWithPort	src/base/inet.hh	/^    IpWithPort() : IpAddress(), _port(0)$/;"	f	struct:Net::IpWithPort
IpWithPort	src/base/inet.hh	/^    IpWithPort(const uint32_t __ip, const uint16_t __port) :$/;"	f	struct:Net::IpWithPort
IpWithPort	src/base/inet.hh	/^struct IpWithPort : public IpAddress$/;"	s	namespace:Net
IpWithPort	src/python/m5/params.py	/^        from m5.internal.params import IpWithPort$/;"	i
IpWithPort	src/python/m5/params.py	/^class IpWithPort(IpAddress):$/;"	c
IprAccessOp	src/cpu/op_class.hh	/^const OpClass IprAccessOp = Enums::IprAccess;$/;"	v
IprEvent	src/cpu/simple/timing.cc	/^TimingSimpleCPU::IprEvent::IprEvent(Packet *_pkt, TimingSimpleCPU *_cpu,$/;"	f	class:TimingSimpleCPU::IprEvent
IprEvent	src/cpu/simple/timing.hh	/^    struct IprEvent : Event {$/;"	s	class:TimingSimpleCPU
IprIsReadable	src/arch/alpha/ipr.hh	/^IprIsReadable(int index)$/;"	f	namespace:AlphaISA
IprIsWritable	src/arch/alpha/ipr.hh	/^IprIsWritable(int index)$/;"	f	namespace:AlphaISA
IprPort	src/cpu/o3/FuncUnitConfig.py	/^class IprPort(FUDesc):$/;"	c
IprToMiscRegIndex	src/arch/alpha/ipr.cc	/^int IprToMiscRegIndex[MaxInternalProcRegs];$/;"	m	namespace:AlphaISA	file:
IqEntry	src/cpu/base_dyn_inst.hh	/^        IqEntry,                 \/\/\/ Instruction is in the IQ$/;"	e	enum:BaseDynInst::Status
IqEntry	src/cpu/inorder/inorder_dyn_inst.hh	/^        IqEntry,                 \/\/\/ Instruction is in the IQ$/;"	e	enum:InOrderDynInst::Status
IsCC	src/cpu/static_inst.hh	/^        IsCC,           \/\/\/< References CC regs.$/;"	e	enum:StaticInst::Flags
IsCall	src/cpu/static_inst.hh	/^        IsCall,                 \/\/\/< Subroutine call.$/;"	e	enum:StaticInst::Flags
IsCondControl	src/cpu/static_inst.hh	/^        IsCondControl,          \/\/\/< Conditional control transfer.$/;"	e	enum:StaticInst::Flags
IsCondDelaySlot	src/cpu/static_inst.hh	/^        IsCondDelaySlot,\/\/\/< Conditional Delay-Slot Instruction$/;"	e	enum:StaticInst::Flags
IsControl	src/cpu/static_inst.hh	/^        IsControl,              \/\/\/< Control transfer instruction.$/;"	e	enum:StaticInst::Flags
IsDataPrefetch	src/cpu/static_inst.hh	/^        IsDataPrefetch, \/\/\/< Data-cache prefetch.$/;"	e	enum:StaticInst::Flags
IsDelayedCommit	src/cpu/static_inst.hh	/^        IsDelayedCommit,        \/\/\/< This microop doesn't commit right away$/;"	e	enum:StaticInst::Flags
IsDirectControl	src/cpu/static_inst.hh	/^        IsDirectControl,        \/\/\/< PC relative control transfer.$/;"	e	enum:StaticInst::Flags
IsDspOp	src/cpu/static_inst.hh	/^        IsDspOp,$/;"	e	enum:StaticInst::Flags
IsERET	src/cpu/static_inst.hh	/^        IsERET, \/\/\/ <- Causes the IFU to stall (MIPS ISA)$/;"	e	enum:StaticInst::Flags
IsError	src/mem/packet.hh	/^        IsError,        \/\/!< Error response$/;"	e	enum:MemCmd::Attribute
IsExitEvent	src/sim/eventq.hh	/^    static const FlagsType IsExitEvent   = 0x0010; \/\/ special exit event$/;"	m	class:EventBase
IsFirstMicroop	src/cpu/static_inst.hh	/^        IsFirstMicroop, \/\/\/< This microop begins a microop sequence$/;"	e	enum:StaticInst::Flags
IsFloating	src/cpu/static_inst.hh	/^        IsFloating,     \/\/\/< References FP regs.$/;"	e	enum:StaticInst::Flags
IsFlush	src/mem/packet.hh	/^        IsFlush,        \/\/!< Flush the address from caches$/;"	e	enum:MemCmd::Attribute
IsHWPrefetch	src/mem/packet.hh	/^        IsHWPrefetch,$/;"	e	enum:MemCmd::Attribute
IsIndexed	src/cpu/static_inst.hh	/^        IsIndexed,      \/\/\/< Accesses memory with an indexed address computation$/;"	e	enum:StaticInst::Flags
IsIndirectControl	src/cpu/static_inst.hh	/^        IsIndirectControl,      \/\/\/< Register indirect control transfer.$/;"	e	enum:StaticInst::Flags
IsInstPrefetch	src/cpu/static_inst.hh	/^        IsInstPrefetch, \/\/\/< Instruction-cache prefetch.$/;"	e	enum:StaticInst::Flags
IsInteger	src/cpu/static_inst.hh	/^        IsInteger,      \/\/\/< References integer regs.$/;"	e	enum:StaticInst::Flags
IsInvalidate	src/mem/packet.hh	/^        IsInvalidate,$/;"	e	enum:MemCmd::Attribute
IsIprAccess	src/cpu/static_inst.hh	/^        IsIprAccess,    \/\/\/< Accesses IPRs$/;"	e	enum:StaticInst::Flags
IsK0Seg	src/arch/alpha/utility.hh	/^inline bool IsK0Seg(Addr a) { return K0SegBase <= a && a <= K0SegEnd; }$/;"	f	namespace:AlphaISA
IsK1Seg	src/arch/alpha/utility.hh	/^inline bool IsK1Seg(Addr a) { return K1SegBase <= a && a <= K1SegEnd; }$/;"	f	namespace:AlphaISA
IsLastMicroop	src/cpu/static_inst.hh	/^        IsLastMicroop,  \/\/\/< This microop ends a microop sequence$/;"	e	enum:StaticInst::Flags
IsLlsc	src/mem/packet.hh	/^        IsLlsc,         \/\/!< Alpha\/MIPS LL or SC access$/;"	e	enum:MemCmd::Attribute
IsLoad	src/cpu/static_inst.hh	/^        IsLoad,         \/\/\/< Reads from memory (load or prefetch).$/;"	e	enum:StaticInst::Flags
IsMacroop	src/cpu/static_inst.hh	/^        IsMacroop,      \/\/\/< Is a macroop containing microops$/;"	e	enum:StaticInst::Flags
IsMainQueue	src/sim/eventq.hh	/^    static const FlagsType IsMainQueue   = 0x0020; \/\/ on main event queue$/;"	m	class:EventBase
IsMemBarrier	src/cpu/static_inst.hh	/^        IsMemBarrier,   \/\/\/< Is a memory barrier$/;"	e	enum:StaticInst::Flags
IsMemRef	src/cpu/static_inst.hh	/^        IsMemRef,       \/\/\/< References memory (load, store, or prefetch).$/;"	e	enum:StaticInst::Flags
IsMicroBranch	src/cpu/static_inst.hh	/^        IsMicroBranch,  \/\/\/< This microop branches within the microcode for a macroop$/;"	e	enum:StaticInst::Flags
IsMicroop	src/cpu/static_inst.hh	/^        IsMicroop,      \/\/\/< Is a microop$/;"	e	enum:StaticInst::Flags
IsNonSpeculative	src/cpu/static_inst.hh	/^        IsNonSpeculative, \/\/\/< Should not be executed speculatively$/;"	e	enum:StaticInst::Flags
IsNop	src/cpu/static_inst.hh	/^        IsNop,          \/\/\/< Is a no-op (no effect at all).$/;"	e	enum:StaticInst::Flags
IsPrint	src/mem/packet.hh	/^        IsPrint,        \/\/!< Print state matching address (for debugging)$/;"	e	enum:MemCmd::Attribute
IsQuiesce	src/cpu/static_inst.hh	/^        IsQuiesce,      \/\/\/< Is a quiesce instruction$/;"	e	enum:StaticInst::Flags
IsRead	src/mem/packet.hh	/^        IsRead,         \/\/!< Data flows from responder to requester$/;"	e	enum:MemCmd::Attribute
IsReadBarrier	src/cpu/static_inst.hh	/^        IsReadBarrier,  \/\/\/< Is a read barrier$/;"	e	enum:StaticInst::Flags
IsRequest	src/mem/packet.hh	/^        IsRequest,      \/\/!< Issued by requester$/;"	e	enum:MemCmd::Attribute
IsResponse	src/mem/packet.hh	/^        IsResponse,     \/\/!< Issue by responder$/;"	e	enum:MemCmd::Attribute
IsReturn	src/cpu/static_inst.hh	/^        IsReturn,               \/\/\/< Subroutine return.$/;"	e	enum:StaticInst::Flags
IsSWPrefetch	src/mem/packet.hh	/^        IsSWPrefetch,$/;"	e	enum:MemCmd::Attribute
IsSerializeAfter	src/cpu/static_inst.hh	/^        IsSerializeAfter,$/;"	e	enum:StaticInst::Flags
IsSerializeBefore	src/cpu/static_inst.hh	/^        IsSerializeBefore,$/;"	e	enum:StaticInst::Flags
IsSerializing	src/cpu/static_inst.hh	/^        IsSerializing,  \/\/\/< Serializes pipeline: won't execute until all$/;"	e	enum:StaticInst::Flags
IsSquashAfter	src/cpu/static_inst.hh	/^        IsSquashAfter, \/\/\/< Squash all uncommitted state after executed$/;"	e	enum:StaticInst::Flags
IsStore	src/cpu/static_inst.hh	/^        IsStore,        \/\/\/< Writes to memory.$/;"	e	enum:StaticInst::Flags
IsStoreConditional	src/cpu/static_inst.hh	/^        IsStoreConditional,    \/\/\/< Store conditional instruction.$/;"	e	enum:StaticInst::Flags
IsSyscall	src/cpu/static_inst.hh	/^        IsSyscall,      \/\/\/< Causes a system call to be emulated in syscall$/;"	e	enum:StaticInst::Flags
IsThreadSync	src/cpu/static_inst.hh	/^        IsThreadSync,   \/\/\/< Thread synchronization operation.$/;"	e	enum:StaticInst::Flags
IsUSeg	src/arch/alpha/utility.hh	/^inline bool IsUSeg(Addr a) { return USegBase <= a && a <= USegEnd; }$/;"	f	namespace:AlphaISA
IsUncacheable	src/cpu/base_dyn_inst.hh	/^        IsUncacheable,$/;"	e	enum:BaseDynInst::Flags
IsUncondControl	src/cpu/static_inst.hh	/^        IsUncondControl,        \/\/\/< Unconditional control transfer.$/;"	e	enum:StaticInst::Flags
IsUnverifiable	src/cpu/static_inst.hh	/^        IsUnverifiable, \/\/\/< Can't be verified by a checker$/;"	e	enum:StaticInst::Flags
IsUpgrade	src/mem/packet.hh	/^        IsUpgrade,$/;"	e	enum:MemCmd::Attribute
IsValidPtrExprAST	src/mem/slicc/ast/IsValidPtrExprAST.py	/^class IsValidPtrExprAST(ExprAST):$/;"	c
IsWrite	src/mem/packet.hh	/^        IsWrite,        \/\/!< Data flows from requester to responder$/;"	e	enum:MemCmd::Attribute
IsWriteBarrier	src/cpu/static_inst.hh	/^        IsWriteBarrier, \/\/\/< Is a write barrier$/;"	e	enum:StaticInst::Flags
IsaFake	src/dev/Device.py	/^class IsaFake(BasicPioDevice):$/;"	c
IsaFake	src/dev/alpha/Tsunami.py	/^from Device import BasicPioDevice, IsaFake, BadAddr$/;"	i
IsaFake	src/dev/arm/RealView.py	/^from Device import BasicPioDevice, PioDevice, IsaFake, BadAddr, DmaDevice$/;"	i
IsaFake	src/dev/isa_fake.cc	/^IsaFake::IsaFake(Params *p)$/;"	f	class:IsaFake
IsaFake	src/dev/isa_fake.hh	/^class IsaFake : public BasicPioDevice$/;"	c
IsaFake	src/dev/sparc/T1000.py	/^from Device import BasicPioDevice, PioDevice, IsaFake, BadAddr$/;"	i
IsaFake	src/dev/x86/Pc.py	/^from Device import IsaFake$/;"	i
IssFSb	src/base/loader/coff_sym.h	/^#define IssFSb(/;"	d
IssueStruct	src/cpu/o3/comm.hh	/^struct IssueStruct {$/;"	s
IssueStruct	src/cpu/o3/cpu_policy.hh	/^    typedef ::IssueStruct<Impl> IssueStruct;$/;"	t	struct:SimpleCPUPolicy
IssueStruct	src/cpu/o3/iew.hh	/^    typedef typename CPUPol::IssueStruct IssueStruct;$/;"	t	class:DefaultIEW
IssueStruct	src/cpu/o3/inst_queue.hh	/^    typedef typename Impl::CPUPol::IssueStruct IssueStruct;$/;"	t	class:InstructionQueue
IssueStruct	src/cpu/o3/lsq_unit.hh	/^    typedef typename Impl::CPUPol::IssueStruct IssueStruct;$/;"	t	class:LSQUnit
IssueStruct	src/cpu/ozone/inst_queue.hh	/^    typedef typename Impl::IssueStruct IssueStruct;$/;"	t	class:InstQueue
IssueStruct	src/cpu/ozone/lsq_unit.hh	/^    typedef typename Impl::IssueStruct IssueStruct;$/;"	t	class:OzoneLSQ
IssueStruct	src/cpu/ozone/lw_lsq.hh	/^    typedef typename Impl::IssueStruct IssueStruct;$/;"	t	class:OzoneLWLSQ
IssueStruct	src/cpu/ozone/ozone_impl.hh	/^    typedef uint64_t IssueStruct;$/;"	t	struct:OzoneImpl
IssueStruct	src/cpu/ozone/simple_impl.hh	/^    typedef uint64_t IssueStruct;$/;"	t	struct:SimpleImpl
IssueToExec	src/cpu/ozone/back_end.hh	/^    typedef SizeStruct IssueToExec;$/;"	t	class:BackEnd
IssueToExec	src/cpu/ozone/lw_back_end.hh	/^    typedef SizeStruct IssueToExec;$/;"	t	class:LWBackEnd
Issued	src/cpu/base_dyn_inst.hh	/^        Issued,                  \/\/\/ Instruction has issued$/;"	e	enum:BaseDynInst::Status
Issued	src/cpu/inorder/inorder_dyn_inst.hh	/^        Issued,                  \/\/\/ Instruction has issued$/;"	e	enum:InOrderDynInst::Status
ItbAcvFault	src/arch/alpha/faults.hh	/^    ItbAcvFault(Addr pc) : ItbFault(pc) { }$/;"	f	class:AlphaISA::ItbAcvFault
ItbAcvFault	src/arch/alpha/faults.hh	/^class ItbAcvFault : public ItbFault$/;"	c	namespace:AlphaISA
ItbFault	src/arch/alpha/faults.hh	/^    ItbFault(Addr _pc) : pc(_pc) { }$/;"	f	class:AlphaISA::ItbFault
ItbFault	src/arch/alpha/faults.hh	/^class ItbFault : public AlphaFault$/;"	c	namespace:AlphaISA
ItbPageFault	src/arch/alpha/faults.hh	/^    ItbPageFault(Addr pc) : ItbFault(pc) { }$/;"	f	class:AlphaISA::ItbPageFault
ItbPageFault	src/arch/alpha/faults.hh	/^class ItbPageFault : public ItbFault$/;"	c	namespace:AlphaISA
Iterator	src/mem/cache/mshr.hh	/^        typedef std::list<Target>::iterator Iterator;$/;"	t	class:MSHR::TargetList
Iterator	src/mem/cache/mshr.hh	/^    typedef List::iterator Iterator;$/;"	t	class:MSHR
ItlbWait	src/cpu/o3/fetch.hh	/^        ItlbWait,$/;"	e	enum:DefaultFetch::ThreadStatus
JIntABusyAddr	src/dev/sparc/iob.hh	/^const Addr JIntABusyAddr   = 0x0B00;$/;"	v
JIntBusyAddr	src/dev/sparc/iob.hh	/^const Addr JIntBusyAddr    = 0x0900;$/;"	v
JIntBusyMask	src/dev/sparc/iob.hh	/^const uint64_t JIntBusyMask = 0x0003F;$/;"	v
JIntBusySize	src/dev/sparc/iob.hh	/^const Addr JIntBusySize    = 0x0100;$/;"	v
JIntData0Addr	src/dev/sparc/iob.hh	/^const Addr JIntData0Addr   = 0x0400;$/;"	v
JIntData1Addr	src/dev/sparc/iob.hh	/^const Addr JIntData1Addr   = 0x0500;$/;"	v
JIntDataA0Addr	src/dev/sparc/iob.hh	/^const Addr JIntDataA0Addr  = 0x0600;$/;"	v
JIntDataA1Addr	src/dev/sparc/iob.hh	/^const Addr JIntDataA1Addr  = 0x0700;$/;"	v
JIntVecAddr	src/dev/sparc/iob.hh	/^const Addr JIntVecAddr      = 0x0A00;$/;"	v
JIntVecMask	src/dev/sparc/iob.hh	/^const uint64_t JIntVecMask  = 0x0003F;$/;"	v
JazelleBit	src/arch/arm/types.hh	/^            JazelleBit = (1 << 1),$/;"	e	enum:ArmISA::PCState::FlagBits
Job	src/python/m5/util/jobfile.py	/^class Job(Data):$/;"	c
JobFile	src/python/m5/util/jobfile.py	/^def JobFile(jobfile):$/;"	f
K0Seg2Phys	src/arch/alpha/utility.hh	/^inline Addr K0Seg2Phys(Addr addr) { return addr & ~K0SegBase; }$/;"	f	namespace:AlphaISA
K0SegBase	src/arch/alpha/isa_traits.hh	/^const Addr K0SegBase = ULL(0xfffffc0000000000);$/;"	m	namespace:AlphaISA
K0SegEnd	src/arch/alpha/isa_traits.hh	/^const Addr K0SegEnd = ULL(0xfffffdffffffffff);$/;"	m	namespace:AlphaISA
K1SegBase	src/arch/alpha/isa_traits.hh	/^const Addr K1SegBase = ULL(0xfffffe0000000000);$/;"	m	namespace:AlphaISA
K1SegEnd	src/arch/alpha/isa_traits.hh	/^const Addr K1SegEnd = ULL(0xffffffffffffffff);$/;"	m	namespace:AlphaISA
KERN_NOT_IN_SET	src/kern/tru64/tru64.hh	/^        KERN_NOT_IN_SET = 12$/;"	e	enum:Tru64::__anon99
KERN_NOT_RECEIVER	src/kern/tru64/tru64.hh	/^        KERN_NOT_RECEIVER = 7,$/;"	e	enum:Tru64::__anon99
KGDB_ASYNC_CONT	src/arch/alpha/kgdb.h	/^#define KGDB_ASYNC_CONT	/;"	d
KGDB_ASYNC_STEP	src/arch/alpha/kgdb.h	/^#define KGDB_ASYNC_STEP	/;"	d
KGDB_BADP	src/arch/alpha/kgdb.h	/^#define KGDB_BADP	/;"	d
KGDB_BINARY_DLOAD	src/arch/alpha/kgdb.h	/^#define KGDB_BINARY_DLOAD	/;"	d
KGDB_BUFLEN	src/arch/alpha/kgdb.h	/^#define	KGDB_BUFLEN	/;"	d
KGDB_CLR_HW_BKPT	src/arch/alpha/kgdb.h	/^#define KGDB_CLR_HW_BKPT	/;"	d
KGDB_CONT	src/arch/alpha/kgdb.h	/^#define KGDB_CONT	/;"	d
KGDB_CYCLE_STEP	src/arch/alpha/kgdb.h	/^#define KGDB_CYCLE_STEP	/;"	d
KGDB_DEBUG	src/arch/alpha/kgdb.h	/^#define KGDB_DEBUG	/;"	d
KGDB_DETACH	src/arch/alpha/kgdb.h	/^#define KGDB_DETACH	/;"	d
KGDB_END	src/arch/alpha/kgdb.h	/^#define KGDB_END	/;"	d
KGDB_GOODP	src/arch/alpha/kgdb.h	/^#define KGDB_GOODP	/;"	d
KGDB_KILL	src/arch/alpha/kgdb.h	/^#define KGDB_KILL	/;"	d
KGDB_MEM_R	src/arch/alpha/kgdb.h	/^#define KGDB_MEM_R	/;"	d
KGDB_MEM_W	src/arch/alpha/kgdb.h	/^#define KGDB_MEM_W	/;"	d
KGDB_NUMREGS	src/arch/alpha/kgdb.h	/^#define	KGDB_NUMREGS	/;"	d
KGDB_QUERY_VAR	src/arch/alpha/kgdb.h	/^#define KGDB_QUERY_VAR	/;"	d
KGDB_READ_REG	src/arch/alpha/kgdb.h	/^#define KGDB_READ_REG	/;"	d
KGDB_REG_A0	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_A0	/;"	d
KGDB_REG_A1	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_A1	/;"	d
KGDB_REG_A2	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_A2	/;"	d
KGDB_REG_A3	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_A3	/;"	d
KGDB_REG_A4	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_A4	/;"	d
KGDB_REG_A5	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_A5	/;"	d
KGDB_REG_AT	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_AT	/;"	d
KGDB_REG_F0	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_F0	/;"	d
KGDB_REG_F1	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_F1	/;"	d
KGDB_REG_F10	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_F10	/;"	d
KGDB_REG_F11	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_F11	/;"	d
KGDB_REG_F12	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_F12	/;"	d
KGDB_REG_F13	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_F13	/;"	d
KGDB_REG_F14	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_F14	/;"	d
KGDB_REG_F15	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_F15	/;"	d
KGDB_REG_F16	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_F16	/;"	d
KGDB_REG_F17	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_F17	/;"	d
KGDB_REG_F18	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_F18	/;"	d
KGDB_REG_F19	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_F19	/;"	d
KGDB_REG_F2	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_F2	/;"	d
KGDB_REG_F20	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_F20	/;"	d
KGDB_REG_F21	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_F21	/;"	d
KGDB_REG_F22	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_F22	/;"	d
KGDB_REG_F23	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_F23	/;"	d
KGDB_REG_F24	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_F24	/;"	d
KGDB_REG_F25	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_F25	/;"	d
KGDB_REG_F26	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_F26	/;"	d
KGDB_REG_F27	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_F27	/;"	d
KGDB_REG_F28	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_F28	/;"	d
KGDB_REG_F29	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_F29	/;"	d
KGDB_REG_F3	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_F3	/;"	d
KGDB_REG_F30	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_F30	/;"	d
KGDB_REG_F31	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_F31	/;"	d
KGDB_REG_F4	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_F4	/;"	d
KGDB_REG_F5	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_F5	/;"	d
KGDB_REG_F6	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_F6	/;"	d
KGDB_REG_F7	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_F7	/;"	d
KGDB_REG_F8	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_F8	/;"	d
KGDB_REG_F9	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_F9	/;"	d
KGDB_REG_GP	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_GP	/;"	d
KGDB_REG_PC	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_PC	/;"	d
KGDB_REG_R	src/arch/alpha/kgdb.h	/^#define KGDB_REG_R	/;"	d
KGDB_REG_RA	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_RA	/;"	d
KGDB_REG_S0	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_S0	/;"	d
KGDB_REG_S1	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_S1	/;"	d
KGDB_REG_S2	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_S2	/;"	d
KGDB_REG_S3	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_S3	/;"	d
KGDB_REG_S4	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_S4	/;"	d
KGDB_REG_S5	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_S5	/;"	d
KGDB_REG_S6	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_S6	/;"	d
KGDB_REG_SP	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_SP	/;"	d
KGDB_REG_T0	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_T0	/;"	d
KGDB_REG_T1	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_T1	/;"	d
KGDB_REG_T10	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_T10	/;"	d
KGDB_REG_T11	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_T11	/;"	d
KGDB_REG_T12	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_T12	/;"	d
KGDB_REG_T2	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_T2	/;"	d
KGDB_REG_T3	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_T3	/;"	d
KGDB_REG_T4	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_T4	/;"	d
KGDB_REG_T5	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_T5	/;"	d
KGDB_REG_T6	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_T6	/;"	d
KGDB_REG_T7	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_T7	/;"	d
KGDB_REG_T8	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_T8	/;"	d
KGDB_REG_T9	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_T9	/;"	d
KGDB_REG_V0	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_V0	/;"	d
KGDB_REG_VFP	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_VFP	/;"	d
KGDB_REG_W	src/arch/alpha/kgdb.h	/^#define KGDB_REG_W	/;"	d
KGDB_REG_ZERO	src/arch/alpha/kgdb.h	/^#define	KGDB_REG_ZERO	/;"	d
KGDB_RESET	src/arch/alpha/kgdb.h	/^#define KGDB_RESET	/;"	d
KGDB_SET_BAUD	src/arch/alpha/kgdb.h	/^#define KGDB_SET_BAUD	/;"	d
KGDB_SET_BREAK	src/arch/alpha/kgdb.h	/^#define KGDB_SET_BREAK	/;"	d
KGDB_SET_HW_BKPT	src/arch/alpha/kgdb.h	/^#define KGDB_SET_HW_BKPT	/;"	d
KGDB_SET_REG	src/arch/alpha/kgdb.h	/^#define KGDB_SET_REG	/;"	d
KGDB_SET_THREAD	src/arch/alpha/kgdb.h	/^#define KGDB_SET_THREAD	/;"	d
KGDB_SET_VAR	src/arch/alpha/kgdb.h	/^#define KGDB_SET_VAR	/;"	d
KGDB_SIGNAL	src/arch/alpha/kgdb.h	/^#define KGDB_SIGNAL	/;"	d
KGDB_SIG_CYCLE_STEP	src/arch/alpha/kgdb.h	/^#define KGDB_SIG_CYCLE_STEP	/;"	d
KGDB_START	src/arch/alpha/kgdb.h	/^#define KGDB_START	/;"	d
KGDB_STEP	src/arch/alpha/kgdb.h	/^#define KGDB_STEP	/;"	d
KGDB_TARGET_EXIT	src/arch/alpha/kgdb.h	/^#define KGDB_TARGET_EXIT	/;"	d
KGDB_THREAD_ALIVE	src/arch/alpha/kgdb.h	/^#define KGDB_THREAD_ALIVE	/;"	d
KSSegBase	src/arch/mips/isa_traits.hh	/^const Addr KSSegBase = ULL(0xC0000000);$/;"	m	namespace:MipsISA
KSSegEnd	src/arch/mips/isa_traits.hh	/^const Addr KSSegEnd = ULL(0xDFFFFFFF);$/;"	m	namespace:MipsISA
KSeg0Base	src/arch/mips/isa_traits.hh	/^const Addr KSeg0Base =  ULL(0x80000000);$/;"	m	namespace:MipsISA
KSeg0End	src/arch/mips/isa_traits.hh	/^const Addr KSeg0End = ULL(0x9FFFFFFF);$/;"	m	namespace:MipsISA
KSeg0Mask	src/arch/mips/isa_traits.hh	/^const Addr KSeg0Mask = ULL(0x1FFFFFFF);$/;"	m	namespace:MipsISA
KSeg1Base	src/arch/mips/isa_traits.hh	/^const Addr KSeg1Base = ULL(0xA0000000);$/;"	m	namespace:MipsISA
KSeg1End	src/arch/mips/isa_traits.hh	/^const Addr KSeg1End = ULL(0xBFFFFFFF);$/;"	m	namespace:MipsISA
KSeg1Mask	src/arch/mips/isa_traits.hh	/^const Addr KSeg1Mask = ULL(0x1FFFFFFF);$/;"	m	namespace:MipsISA
KSeg3Base	src/arch/mips/isa_traits.hh	/^const Addr KSeg3Base = ULL(0xE0000000);$/;"	m	namespace:MipsISA
KSeg3End	src/arch/mips/isa_traits.hh	/^const Addr KSeg3End = ULL(0xFFFFFFFF);$/;"	m	namespace:MipsISA
KVMCpuPort	src/cpu/kvm/base.hh	/^        KVMCpuPort(const std::string &_name, BaseKvmCPU *_cpu)$/;"	f	class:BaseKvmCPU::KVMCpuPort
KVMCpuPort	src/cpu/kvm/base.hh	/^    class KVMCpuPort : public MasterPort$/;"	c	class:BaseKvmCPU
KVM_KICK_SIGNAL	src/cpu/kvm/base.hh	/^#define KVM_KICK_SIGNAL /;"	d
Kernel	src/arch/alpha/kernel_stats.cc	/^namespace Kernel {$/;"	n	namespace:AlphaISA	file:
Kernel	src/arch/alpha/kernel_stats.hh	/^namespace Kernel {$/;"	n	namespace:AlphaISA
Kernel	src/arch/arm/kernel_stats.hh	/^namespace Kernel {$/;"	n	namespace:ArmISA
Kernel	src/arch/mips/kernel_stats.hh	/^namespace Kernel {$/;"	n	namespace:MipsISA
Kernel	src/arch/power/kernel_stats.hh	/^namespace Kernel {$/;"	n	namespace:PowerISA
Kernel	src/arch/sparc/kernel_stats.hh	/^namespace Kernel {$/;"	n	namespace:SparcISA
Kernel	src/arch/x86/kernel_stats.hh	/^namespace Kernel {$/;"	n	namespace:X86ISA
Kernel	src/cpu/checker/thread_context.hh	/^    namespace Kernel {$/;"	n	namespace:TheISA
Kernel	src/cpu/inorder/thread_context.hh	/^namespace Kernel {$/;"	n
Kernel	src/cpu/o3/thread_context.hh	/^namespace Kernel {$/;"	n
Kernel	src/cpu/ozone/cpu.hh	/^    namespace Kernel {$/;"	n	namespace:TheISA
Kernel	src/cpu/simple_thread.hh	/^    namespace Kernel {$/;"	n	namespace:TheISA
Kernel	src/cpu/thread_context.hh	/^    namespace Kernel {$/;"	n	namespace:TheISA
Kernel	src/cpu/thread_state.hh	/^    namespace Kernel {$/;"	n	namespace:TheISA
Kernel	src/kern/kernel_stats.cc	/^namespace Kernel {$/;"	n	file:
Kernel	src/kern/kernel_stats.hh	/^namespace Kernel {$/;"	n
KernelReg0	src/arch/mips/registers.hh	/^const int KernelReg0 = 26;$/;"	m	namespace:MipsISA
KernelReg1	src/arch/mips/registers.hh	/^const int KernelReg1 = 27;$/;"	m	namespace:MipsISA
KernelStart	src/arch/alpha/linux/system.hh	/^    Addr KernelStart; \/\/ Lookup the symbol swapper_pg_dir$/;"	m	class:LinuxAlphaSystem
KernelStart	src/arch/mips/linux/system.hh	/^    Addr KernelStart; \/\/ Lookup the symbol swapper_pg_dir$/;"	m	class:LinuxMipsSystem
KeyEventMessage	src/base/vnc/vncinput.hh	/^    struct KeyEventMessage {$/;"	s	class:VncInput
KeyToMakeOnly	src/dev/x86/i8042.hh	/^        KeyToMakeOnly = 0xFD,$/;"	e	enum:X86ISA::PS2Keyboard::Command
KeyToMakeRelease	src/dev/x86/i8042.hh	/^        KeyToMakeRelease = 0xFC,$/;"	e	enum:X86ISA::PS2Keyboard::Command
KeyToTypematic	src/dev/x86/i8042.hh	/^        KeyToTypematic = 0xFB,$/;"	e	enum:X86ISA::PS2Keyboard::Command
KeyboardId	src/dev/ps2.hh	/^    KeyboardId      = 0xab,$/;"	e	enum:Ps2::__anon82
Kvm	src/cpu/kvm/vm.cc	/^Kvm::Kvm()$/;"	f	class:Kvm
Kvm	src/cpu/kvm/vm.hh	/^class Kvm$/;"	c
KvmCoreMiscRegInfo	src/cpu/kvm/arm_cpu.hh	/^    struct KvmCoreMiscRegInfo {$/;"	s	class:ArmKvmCPU
KvmIntRegInfo	src/cpu/kvm/arm_cpu.hh	/^    struct KvmIntRegInfo {$/;"	s	class:ArmKvmCPU
KvmMSRVector	src/cpu/kvm/x86_cpu.hh	/^    typedef std::vector<struct kvm_msr_entry> KvmMSRVector;$/;"	t	class:X86KvmCPU
KvmVM	src/cpu/kvm/BaseKvmCPU.py	/^from KvmVM import KvmVM$/;"	i
KvmVM	src/cpu/kvm/KvmVM.py	/^class KvmVM(SimObject):$/;"	c
KvmVM	src/cpu/kvm/vm.cc	/^KvmVM::KvmVM(KvmVMParams *params)$/;"	f	class:KvmVM
KvmVM	src/cpu/kvm/vm.hh	/^class KvmVM : public SimObject$/;"	c
L	src/arch/x86/regs/int.hh	/^        Bitfield<7, 0> L;$/;"	m	namespace:X86ISA
L0	src/arch/arm/pagetable.hh	/^    L0 = 0,  \/\/ AArch64 only$/;"	e	enum:ArmISA::LookupLevel
L1	src/arch/arm/pagetable.hh	/^    L1,$/;"	e	enum:ArmISA::LookupLevel
L1CacheAndTLB	src/arch/x86/cpuid.cc	/^        L1CacheAndTLB,$/;"	e	enum:X86ISA::ExtendedCpuidFunctions	file:
L1Descriptor	src/arch/arm/table_walker.hh	/^        L1Descriptor()$/;"	f	class:ArmISA::TableWalker::L1Descriptor
L1Descriptor	src/arch/arm/table_walker.hh	/^    class L1Descriptor : public DescriptorBase {$/;"	c	class:ArmISA::TableWalker
L2	src/arch/arm/pagetable.hh	/^    L2,$/;"	e	enum:ArmISA::LookupLevel
L2Descriptor	src/arch/arm/table_walker.hh	/^        L2Descriptor()$/;"	f	class:ArmISA::TableWalker::L2Descriptor
L2Descriptor	src/arch/arm/table_walker.hh	/^        L2Descriptor(L1Descriptor &parent) : l1Parent(&parent)$/;"	f	class:ArmISA::TableWalker::L2Descriptor
L2Descriptor	src/arch/arm/table_walker.hh	/^    class L2Descriptor : public DescriptorBase {$/;"	c	class:ArmISA::TableWalker
L2L3CacheAndL2TLB	src/arch/x86/cpuid.cc	/^        L2L3CacheAndL2TLB,$/;"	e	enum:X86ISA::ExtendedCpuidFunctions	file:
L3	src/arch/arm/pagetable.hh	/^    L3,$/;"	e	enum:ArmISA::LookupLevel
LAST	src/dev/ns_gige_reg.h	/^    LAST =              0xf8,$/;"	e	enum:DeviceRegisterAddress
LCR	src/dev/uart8250.hh	/^    uint8_t IER, DLAB, LCR, MCR;$/;"	m	class:Uart8250
LCYL_OFFSET	src/dev/ide_disk.hh	/^#define LCYL_OFFSET /;"	d
LDDFMemAddressNotAligned	src/arch/sparc/faults.hh	/^class LDDFMemAddressNotAligned : public SparcFault<LDDFMemAddressNotAligned> {};$/;"	c	namespace:SparcISA
LDQFMemAddressNotAligned	src/arch/sparc/faults.hh	/^class LDQFMemAddressNotAligned : public SparcFault<LDQFMemAddressNotAligned> {};$/;"	c	namespace:SparcISA
LEDWrite	src/dev/x86/i8042.hh	/^        LEDWrite = 0xED,$/;"	e	enum:X86ISA::PS2Keyboard::Command
LFST	src/cpu/o3/store_set.hh	/^    std::vector<InstSeqNum> LFST;$/;"	m	class:StoreSet
LFSTSize	src/cpu/o3/O3CPU.py	/^    LFSTSize = Param.Unsigned(1024, "Last fetched store table size")$/;"	v	class:DerivO3CPU
LFSTSize	src/cpu/o3/store_set.hh	/^    int LFSTSize;$/;"	m	class:StoreSet
LFSTSize	src/cpu/ozone/OzoneCPU.py	/^    LFSTSize = Param.Unsigned("Last fetched store table size")$/;"	v	class:DerivOzoneCPU
LFSTSize	src/cpu/ozone/SimpleOzoneCPU.py	/^    LFSTSize = Param.Unsigned("Last fetched store table size")$/;"	v	class:SimpleOzoneCPU
LFSTSize	src/cpu/ozone/simple_params.hh	/^    unsigned LFSTSize;$/;"	m	class:SimpleParams
LINER	src/base/loader/coff_sym.h	/^typedef coff_int LINER, *pLINER;$/;"	t
LITTLE_ENDIAN	src/dev/ide_atareg.h	/^#define LITTLE_ENDIAN /;"	d
LL	src/base/types.hh	/^#define LL(/;"	d
LLSC	src/mem/request.hh	/^    static const FlagsType LLSC                        = 0x00200000;$/;"	m	class:Request
LO	src/arch/x86/decoder_tables.cc	/^    const uint8_t LO = Lock;$/;"	m	namespace:X86ISA	file:
LOCAL	src/mem/ruby/network/orion/TechParameter.hh	/^      LOCAL = 0,$/;"	e	enum:TechParameter::WireLayerType
LOCKED	src/mem/request.hh	/^    static const FlagsType LOCKED                      = 0x00100000;$/;"	m	class:Request
LONG_BITS	src/mem/ruby/common/Set.hh	/^    static const int LONG_BITS = std::numeric_limits<long>::digits + 1;$/;"	m	class:Set
LONG_TO_DOUBLE	src/arch/arm/types.hh	/^        LONG_TO_DOUBLE,$/;"	e	enum:ArmISA::ConvertType
LONG_TO_DOUBLE	src/arch/mips/types.hh	/^    LONG_TO_DOUBLE,$/;"	e	enum:MipsISA::ConvertType
LONG_TO_PS	src/arch/arm/types.hh	/^        LONG_TO_PS,$/;"	e	enum:ArmISA::ConvertType
LONG_TO_PS	src/arch/mips/types.hh	/^    LONG_TO_PS,$/;"	e	enum:MipsISA::ConvertType
LONG_TO_SINGLE	src/arch/arm/types.hh	/^        LONG_TO_SINGLE,$/;"	e	enum:ArmISA::ConvertType
LONG_TO_SINGLE	src/arch/mips/types.hh	/^    LONG_TO_SINGLE,$/;"	e	enum:MipsISA::ConvertType
LONG_TO_WORD	src/arch/arm/types.hh	/^        LONG_TO_WORD,$/;"	e	enum:ArmISA::ConvertType
LONG_TO_WORD	src/arch/mips/types.hh	/^    LONG_TO_WORD,$/;"	e	enum:MipsISA::ConvertType
LOWER_MASK	src/base/random.hh	/^    static const uint32_t LOWER_MASK = (uint32_t)0x7fffffff;$/;"	m	class:Random
LPDDR2_S4_1066_x32	src/mem/DRAMCtrl.py	/^class LPDDR2_S4_1066_x32(DRAMCtrl):$/;"	c
LPDDR3_1600_x32	src/mem/DRAMCtrl.py	/^class LPDDR3_1600_x32(DRAMCtrl):$/;"	c
LQEntries	src/cpu/o3/O3CPU.py	/^    LQEntries = Param.Unsigned(32, "Number of load queue entries")$/;"	v	class:DerivO3CPU
LQEntries	src/cpu/o3/lsq.hh	/^    unsigned LQEntries;$/;"	m	class:LSQ
LQEntries	src/cpu/o3/lsq_unit.hh	/^    unsigned LQEntries;$/;"	m	class:LSQUnit
LQEntries	src/cpu/ozone/OzoneCPU.py	/^    LQEntries = Param.Unsigned("Number of load queue entries")$/;"	v	class:DerivOzoneCPU
LQEntries	src/cpu/ozone/SimpleOzoneCPU.py	/^    LQEntries = Param.Unsigned("Number of load queue entries")$/;"	v	class:SimpleOzoneCPU
LQEntries	src/cpu/ozone/lsq_unit.hh	/^    unsigned LQEntries;$/;"	m	class:OzoneLSQ
LQEntries	src/cpu/ozone/lw_lsq.hh	/^    unsigned LQEntries;$/;"	m	class:OzoneLWLSQ
LQEntries	src/cpu/ozone/simple_params.hh	/^    unsigned LQEntries;$/;"	m	class:SimpleParams
LQHashIt	src/cpu/ozone/lw_lsq.hh	/^    typedef typename m5::hash_map<int, LQIt, HashFn>::iterator LQHashIt;$/;"	t	class:OzoneLWLSQ
LQIndices	src/cpu/ozone/lw_lsq.hh	/^    std::queue<int> LQIndices;$/;"	m	class:OzoneLWLSQ
LQIt	src/cpu/ozone/lw_lsq.hh	/^    typedef typename std::list<DynInstPtr>::iterator LQIt;$/;"	t	class:OzoneLWLSQ
LQItHash	src/cpu/ozone/lw_lsq.hh	/^    m5::hash_map<int, LQIt, HashFn> LQItHash;$/;"	m	class:OzoneLWLSQ
LR	src/dev/arm/vgic.hh	/^        ListReg LR[NUM_LR];$/;"	m	struct:VGic::vcpuIntData
LRENPIE	src/dev/arm/vgic.hh	/^    Bitfield<2> LRENPIE;$/;"	m	class:VGic
LRU	src/mem/cache/tags/Tags.py	/^class LRU(BaseTags):$/;"	c
LRU	src/mem/cache/tags/lru.cc	/^LRU::LRU(const Params *p)$/;"	f	class:LRU
LRU	src/mem/cache/tags/lru.hh	/^class LRU : public BaseTags$/;"	c
LRUPolicy	src/mem/ruby/system/LRUPolicy.hh	/^LRUPolicy::LRUPolicy(Index num_sets, Index assoc)$/;"	f	class:LRUPolicy
LRUPolicy	src/mem/ruby/system/LRUPolicy.hh	/^class LRUPolicy : public AbstractReplacementPolicy$/;"	c
LR_ACTIVE	src/dev/arm/vgic.hh	/^    static const uint32_t LR_ACTIVE     = 2;$/;"	m	class:VGic
LR_PENDING	src/dev/arm/vgic.hh	/^    static const uint32_t LR_PENDING    = 1;$/;"	m	class:VGic
LSB	src/dev/intel_8254_timer.hh	/^        enum {LSB, MSB};$/;"	e	enum:Intel8254Timer::Counter::__anon77
LSB_CountingBloomFilter	src/mem/ruby/filters/LSB_CountingBloomFilter.cc	/^LSB_CountingBloomFilter::LSB_CountingBloomFilter(string str)$/;"	f	class:LSB_CountingBloomFilter
LSB_CountingBloomFilter	src/mem/ruby/filters/LSB_CountingBloomFilter.hh	/^class LSB_CountingBloomFilter : public AbstractBloomFilter$/;"	c
LSL	src/arch/arm/types.hh	/^        LSL = 0,$/;"	e	enum:ArmISA::ArmShiftType
LSQ	src/cpu/o3/cpu_policy.hh	/^    typedef ::LSQ<Impl> LSQ;$/;"	t	struct:SimpleCPUPolicy
LSQ	src/cpu/o3/fetch.hh	/^        LSQ$/;"	e	enum:DefaultFetch::FetchPriority
LSQ	src/cpu/o3/iew.hh	/^    typedef typename CPUPol::LSQ LSQ;$/;"	t	class:DefaultIEW
LSQ	src/cpu/o3/lsq.hh	/^class LSQ {$/;"	c
LSQ	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::LSQ(O3CPU *cpu_ptr, IEW *iew_ptr, DerivO3CPUParams *params)$/;"	f	class:LSQ
LSQ	src/cpu/o3/lsq_unit.hh	/^    typedef typename Impl::CPUPol::LSQ LSQ;$/;"	t	class:LSQUnit
LSQ	src/cpu/o3/rename.hh	/^        LSQ,$/;"	e	enum:DefaultRename::FullSource
LSQ	src/cpu/ozone/back_end.hh	/^    LdstQueue LSQ;$/;"	m	class:BackEnd
LSQ	src/cpu/ozone/lw_back_end.hh	/^    LdstQueue LSQ;$/;"	m	class:LWBackEnd
LSQCheckLoads	src/cpu/o3/O3CPU.py	/^    LSQCheckLoads = Param.Bool(True,$/;"	v	class:DerivO3CPU
LSQDepCheckShift	src/cpu/o3/O3CPU.py	/^    LSQDepCheckShift = Param.Unsigned(4, "Number of places to shift addr before check")$/;"	v	class:DerivO3CPU
LSQPolicy	src/cpu/o3/lsq.hh	/^    enum LSQPolicy {$/;"	g	class:LSQ
LSQSenderState	src/cpu/o3/lsq_unit.hh	/^        LSQSenderState()$/;"	f	class:LSQUnit::LSQSenderState
LSQSenderState	src/cpu/o3/lsq_unit.hh	/^    class LSQSenderState : public Packet::SenderState$/;"	c	class:LSQUnit
LSQSenderState	src/cpu/ozone/lw_lsq.hh	/^        LSQSenderState()$/;"	f	class:OzoneLWLSQ::LSQSenderState
LSQSenderState	src/cpu/ozone/lw_lsq.hh	/^    class LSQSenderState : public Packet::SenderState$/;"	c	class:OzoneLWLSQ
LSQUnit	src/cpu/o3/cpu_policy.hh	/^    typedef ::LSQUnit<Impl> LSQUnit;$/;"	t	struct:SimpleCPUPolicy
LSQUnit	src/cpu/o3/lsq.hh	/^    typedef typename Impl::CPUPol::LSQUnit LSQUnit;$/;"	t	class:LSQ
LSQUnit	src/cpu/o3/lsq_unit.hh	/^class LSQUnit {$/;"	c
LSQUnit	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::LSQUnit()$/;"	f	class:LSQUnit
LSR	src/arch/arm/types.hh	/^        LSR,$/;"	e	enum:ArmISA::ArmShiftType
LT_	src/mem/ruby/network/garnet/NetworkHeader.hh	/^enum flit_stage {I_, VA_, SA_, ST_, LT_, NUM_FLIT_STAGE_};$/;"	e	enum:flit_stage
LVT	src/mem/ruby/network/orion/TechParameter.hh	/^      LVT = 0,$/;"	e	enum:TechParameter::TransistorType
LWBackEnd	src/cpu/ozone/lw_back_end.hh	/^class LWBackEnd$/;"	c
LWBackEnd	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::LWBackEnd(Params *params)$/;"	f	class:LWBackEnd
Label	src/arch/micro_asm.py	/^class Label(object):$/;"	c
LabelStack	src/mem/packet.hh	/^        typedef std::list<LabelStackEntry> LabelStack;$/;"	t	class:Packet::PrintReqState
LabelStackEntry	src/mem/packet.cc	/^LabelStackEntry::LabelStackEntry(const string &_label, string *_prefix)$/;"	f	class:Packet::PrintReqState::LabelStackEntry
LabelStackEntry	src/mem/packet.hh	/^        struct LabelStackEntry$/;"	s	class:Packet::PrintReqState
LargestRead	src/arch/alpha/types.hh	/^typedef uint64_t LargestRead;$/;"	t	namespace:AlphaISA
LargestRead	src/arch/arm/types.hh	/^    typedef uint64_t LargestRead;$/;"	t	namespace:ArmISA
LargestRead	src/arch/mips/types.hh	/^typedef uint64_t LargestRead;$/;"	t	namespace:MipsISA
LargestRead	src/arch/sparc/types.hh	/^typedef Twin64_t LargestRead;$/;"	t	namespace:SparcISA
LargestRead	src/arch/x86/registers.hh	/^typedef uint64_t LargestRead;$/;"	t	namespace:X86ISA
LatchCommand	src/dev/intel_8254_timer.hh	/^        LatchCommand,$/;"	e	enum:Intel8254Timer::ReadWriteVal
Latency	src/python/m5/params.py	/^class Latency(TickParamValue):$/;"	c
LatencyTimer	src/dev/Pci.py	/^    LatencyTimer = Param.UInt8(0, "PCI Latency Timer")$/;"	v	class:PciDevice
Layer	src/mem/bus.cc	/^BaseBus::Layer<SrcType,DstType>::Layer(DstType& _port, BaseBus& _bus,$/;"	f	class:BaseBus::Layer
Layer	src/mem/bus.cc	/^template class BaseBus::Layer<MasterPort,SlavePort>;$/;"	m	class:BaseBus	typeref:class:BaseBus::	file:
Layer	src/mem/bus.cc	/^template class BaseBus::Layer<SlavePort,MasterPort>;$/;"	m	class:BaseBus	typeref:class:BaseBus::	file:
Layer	src/mem/bus.hh	/^    class Layer : public Drainable$/;"	c	class:BaseBus
LcdControl	src/dev/arm/pl111.hh	/^    static const int LcdControl       = 0x018;$/;"	m	class:Pl111
LcdIcr	src/dev/arm/pl111.hh	/^    static const int LcdIcr           = 0x028;$/;"	m	class:Pl111
LcdImsc	src/dev/arm/pl111.hh	/^    static const int LcdImsc          = 0x01C;$/;"	m	class:Pl111
LcdLpBase	src/dev/arm/pl111.hh	/^    static const int LcdLpBase        = 0x014;$/;"	m	class:Pl111
LcdLpCurr	src/dev/arm/pl111.hh	/^    static const int LcdLpCurr        = 0x030;$/;"	m	class:Pl111
LcdMaxHeight	src/dev/arm/pl111.hh	/^    static const int LcdMaxHeight     = 768;  \/\/ lines per panel$/;"	m	class:Pl111
LcdMaxWidth	src/dev/arm/pl111.hh	/^    static const int LcdMaxWidth      = 1024; \/\/ pixels per line$/;"	m	class:Pl111
LcdMis	src/dev/arm/pl111.hh	/^    static const int LcdMis           = 0x024;$/;"	m	class:Pl111
LcdMode	src/dev/arm/pl111.hh	/^    enum LcdMode {$/;"	g	class:Pl111
LcdPalette	src/dev/arm/pl111.hh	/^    static const int LcdPalette       = 0x200;$/;"	m	class:Pl111
LcdPaletteSize	src/dev/arm/pl111.hh	/^    static const int LcdPaletteSize   = 128;$/;"	m	class:Pl111
LcdRis	src/dev/arm/pl111.hh	/^    static const int LcdRis           = 0x020;$/;"	m	class:Pl111
LcdTiming0	src/dev/arm/pl111.hh	/^    static const int LcdTiming0       = 0x000;$/;"	m	class:Pl111
LcdTiming1	src/dev/arm/pl111.hh	/^    static const int LcdTiming1       = 0x004;$/;"	m	class:Pl111
LcdTiming2	src/dev/arm/pl111.hh	/^    static const int LcdTiming2       = 0x008;$/;"	m	class:Pl111
LcdTiming3	src/dev/arm/pl111.hh	/^    static const int LcdTiming3       = 0x00C;$/;"	m	class:Pl111
LcdUpBase	src/dev/arm/pl111.hh	/^    static const int LcdUpBase        = 0x010;$/;"	m	class:Pl111
LcdUpCurr	src/dev/arm/pl111.hh	/^    static const int LcdUpCurr        = 0x02C;$/;"	m	class:Pl111
LdMapIt	src/cpu/ozone/lsq_unit.hh	/^    typedef typename std::map<InstSeqNum, DynInstPtr>::iterator LdMapIt;$/;"	t	class:OzoneLSQ
LdMapIt	src/cpu/ozone/lw_lsq.hh	/^    typedef typename std::map<InstSeqNum, DynInstPtr>::iterator LdMapIt;$/;"	t	class:OzoneLWLSQ
LdStOp	src/arch/x86/insts/microldstop.hh	/^        LdStOp(ExtMachInst _machInst,$/;"	f	class:X86ISA::LdStOp
LdStOp	src/arch/x86/insts/microldstop.hh	/^    class LdStOp : public X86MicroopBase$/;"	c	namespace:X86ISA
LdWritebackEvent	src/cpu/ozone/back_end.hh	/^    class LdWritebackEvent : public Event {$/;"	c	class:BackEnd
LdWritebackEvent	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::LdWritebackEvent::LdWritebackEvent(DynInstPtr &_inst,$/;"	f	class:BackEnd::LdWritebackEvent
LdstQueue	src/cpu/ozone/back_end.hh	/^    typedef typename Impl::LdstQueue LdstQueue;$/;"	t	class:BackEnd
LdstQueue	src/cpu/ozone/lw_back_end.hh	/^    typedef typename Impl::LdstQueue LdstQueue;$/;"	t	class:LWBackEnd
LdstQueue	src/cpu/ozone/ozone_impl.hh	/^    typedef OzoneLWLSQ<OzoneImpl> LdstQueue;$/;"	t	struct:OzoneImpl
Led	src/dev/arm/rv_ctrl.hh	/^        Led        = 0x08,$/;"	e	enum:RealViewCtrl::__anon67
LegacyMode	src/arch/x86/types.hh	/^        LegacyMode$/;"	e	enum:X86ISA::X86Mode
LegionTrace	src/cpu/LegionTrace.py	/^class LegionTrace(InstTracer):$/;"	c
LegionTrace	src/cpu/legiontrace.hh	/^    LegionTrace(const Params *p) : InstTracer(p)$/;"	f	class:Trace::LegionTrace
LegionTrace	src/cpu/legiontrace.hh	/^class LegionTrace : public InstTracer$/;"	c	namespace:Trace
LegionTraceRecord	src/cpu/legiontrace.hh	/^    LegionTraceRecord(Tick _when, ThreadContext *_thread,$/;"	f	class:Trace::LegionTraceRecord
LegionTraceRecord	src/cpu/legiontrace.hh	/^class LegionTraceRecord : public InstRecord$/;"	c	namespace:Trace
LinearGen	src/cpu/testers/traffic_gen/generators.hh	/^    LinearGen(const std::string& _name, MasterID master_id, Tick _duration,$/;"	f	class:LinearGen
LinearGen	src/cpu/testers/traffic_gen/generators.hh	/^class LinearGen : public BaseGen$/;"	c
Link	src/dev/etherlink.cc	/^EtherLink::Link::Link(const string &name, EtherLink *p, int num,$/;"	f	class:EtherLink::Link
Link	src/dev/etherlink.hh	/^    class Link$/;"	c	class:EtherLink
LinkDelayEvent	src/dev/etherlink.cc	/^LinkDelayEvent::LinkDelayEvent()$/;"	f	class:LinkDelayEvent
LinkDelayEvent	src/dev/etherlink.cc	/^LinkDelayEvent::LinkDelayEvent(EtherLink::Link *l, EthPacketPtr p)$/;"	f	class:LinkDelayEvent
LinkDelayEvent	src/dev/etherlink.cc	/^class LinkDelayEvent : public Event$/;"	c	file:
LinkEntry	src/mem/ruby/network/Topology.hh	/^struct LinkEntry $/;"	s
LinkID	src/mem/ruby/common/TypeDefines.hh	/^typedef unsigned int LinkID;$/;"	t
LinkMap	src/base/cp_annotate.hh	/^    typedef std::map<int, int> LinkMap;$/;"	t	class:CPA
LinkMap	src/mem/ruby/network/Topology.hh	/^typedef std::map<std::pair<SwitchID, SwitchID>, LinkEntry> LinkMap;$/;"	t
LinkOrder	src/mem/ruby/network/simple/PerfectSwitch.hh	/^struct LinkOrder$/;"	s
Linux	src/arch/generic/linux/threadinfo.hh	/^namespace Linux {$/;"	n
Linux	src/arch/mips/linux/hwrpb.hh	/^namespace Linux {$/;"	n
Linux	src/arch/mips/linux/thread_info.hh	/^namespace Linux {$/;"	n
Linux	src/base/loader/object_file.hh	/^        Linux,$/;"	e	enum:ObjectFile::OpSys
Linux	src/kern/linux/events.cc	/^namespace Linux {$/;"	n	file:
Linux	src/kern/linux/events.hh	/^namespace Linux {$/;"	n
Linux	src/kern/linux/linux.hh	/^class Linux : public OperatingSystem$/;"	c
LinuxAlphaSystem	src/arch/alpha/AlphaSystem.py	/^class LinuxAlphaSystem(AlphaSystem):$/;"	c
LinuxAlphaSystem	src/arch/alpha/linux/system.cc	/^LinuxAlphaSystem::LinuxAlphaSystem(Params *p)$/;"	f	class:LinuxAlphaSystem
LinuxAlphaSystem	src/arch/alpha/linux/system.hh	/^class LinuxAlphaSystem : public AlphaSystem$/;"	c
LinuxArmOABI	src/base/loader/object_file.hh	/^        LinuxArmOABI$/;"	e	enum:ObjectFile::OpSys
LinuxArmSystem	src/arch/arm/ArmSystem.py	/^class LinuxArmSystem(ArmSystem):$/;"	c
LinuxArmSystem	src/arch/arm/linux/system.cc	/^LinuxArmSystem::LinuxArmSystem(Params *p)$/;"	f	class:LinuxArmSystem
LinuxArmSystem	src/arch/arm/linux/system.hh	/^class LinuxArmSystem : public ArmSystem$/;"	c
LinuxMipsSystem	src/arch/mips/MipsSystem.py	/^class LinuxMipsSystem(MipsSystem):$/;"	c
LinuxMipsSystem	src/arch/mips/linux/system.cc	/^LinuxMipsSystem::LinuxMipsSystem(Params *p)$/;"	f	class:LinuxMipsSystem
LinuxMipsSystem	src/arch/mips/linux/system.hh	/^class LinuxMipsSystem : public MipsSystem$/;"	c
LinuxX86System	src/arch/x86/X86System.py	/^class LinuxX86System(X86System):$/;"	c
LinuxX86System	src/arch/x86/linux/system.cc	/^LinuxX86System::LinuxX86System(Params *p)$/;"	f	class:LinuxX86System
LinuxX86System	src/arch/x86/linux/system.hh	/^class LinuxX86System : public X86System$/;"	c
List	src/base/varargs.hh	/^    List() {}$/;"	f	class:VarArgs::List
List	src/base/varargs.hh	/^    List(Argument a01, Argument a02, Argument a03, Argument a04,$/;"	f	class:VarArgs::List
List	src/base/varargs.hh	/^class List$/;"	c	namespace:VarArgs
List	src/mem/cache/mshr.hh	/^    typedef std::list<MSHR *> List;$/;"	t	class:MSHR
ListIt	src/cpu/base_dyn_inst.hh	/^    typedef typename std::list<DynInstPtr>::iterator ListIt;$/;"	t	class:BaseDynInst
ListIt	src/cpu/inorder/cpu.hh	/^    typedef std::list<DynInstPtr>::iterator ListIt;$/;"	t	class:InOrderCPU
ListIt	src/cpu/inorder/inorder_dyn_inst.hh	/^    typedef std::list<DynInstPtr>::iterator ListIt;$/;"	t	class:InOrderDynInst
ListIt	src/cpu/inorder/resources/fetch_seq_unit.hh	/^    typedef std::list<DynInstPtr>::iterator ListIt;$/;"	t	class:FetchSeqUnit
ListIt	src/cpu/o3/cpu.hh	/^    typedef typename std::list<DynInstPtr>::iterator ListIt;$/;"	t	class:FullO3CPU
ListIt	src/cpu/o3/inst_queue.hh	/^    typedef typename std::list<DynInstPtr>::iterator ListIt;$/;"	t	class:InstructionQueue
ListIt	src/cpu/o3/mem_dep_unit.hh	/^    typedef typename std::list<DynInstPtr>::iterator ListIt;$/;"	t	class:MemDepUnit
ListIt	src/cpu/o3/rename.hh	/^    typedef typename std::list<DynInstPtr>::iterator ListIt;$/;"	t	class:DefaultRename
ListIt	src/cpu/ozone/dyn_inst.hh	/^    typedef typename std::list<DynInstPtr>::iterator ListIt;$/;"	t	class:OzoneDynInst
ListIt	src/cpu/ozone/inst_queue.hh	/^    typedef typename std::list<DynInstPtr>::iterator ListIt;$/;"	t	class:InstQueue
ListOrderEntry	src/cpu/o3/inst_queue.hh	/^    struct ListOrderEntry {$/;"	s	class:InstructionQueue
ListOrderIt	src/cpu/o3/inst_queue.hh	/^    typedef typename std::list<ListOrderEntry>::iterator ListOrderIt;$/;"	t	class:InstructionQueue
ListenEvent	src/base/vnc/vncserver.cc	/^VncServer::ListenEvent::ListenEvent(VncServer *vs, int fd, int e)$/;"	f	class:VncServer::ListenEvent
ListenEvent	src/base/vnc/vncserver.hh	/^    class ListenEvent: public PollEvent$/;"	c	class:VncServer
ListenEvent	src/dev/terminal.cc	/^Terminal::ListenEvent::ListenEvent(Terminal *t, int fd, int e)$/;"	f	class:Terminal::ListenEvent
ListenEvent	src/dev/terminal.hh	/^    class ListenEvent : public PollEvent$/;"	c	class:Terminal
ListenSocket	src/base/socket.cc	/^ListenSocket::ListenSocket()$/;"	f	class:ListenSocket
ListenSocket	src/base/socket.hh	/^class ListenSocket$/;"	c
LiteralExprAST	src/mem/slicc/ast/LiteralExprAST.py	/^class LiteralExprAST(ExprAST):$/;"	c
LittleEndianByteOrder	src/sim/byteswap.hh	/^enum ByteOrder {BigEndianByteOrder, LittleEndianByteOrder};$/;"	e	enum:ByteOrder
LittleEndianGuest	src/arch/alpha/isa_traits.hh	/^namespace LittleEndianGuest {}$/;"	n
LittleEndianGuest	src/arch/arm/isa_traits.hh	/^namespace LittleEndianGuest {}$/;"	n
LittleEndianGuest	src/arch/mips/isa_traits.hh	/^namespace LittleEndianGuest {}$/;"	n
LittleEndianGuest	src/arch/null/isa_traits.hh	/^namespace LittleEndianGuest {}$/;"	n
LittleEndianGuest	src/arch/x86/isa_traits.hh	/^namespace LittleEndianGuest {}$/;"	n
LittleEndianGuest	src/sim/byteswap.hh	/^namespace LittleEndianGuest$/;"	n
LiveList	src/unittest/refcnttest.cc	/^typedef list<TestRC *> LiveList;$/;"	t	namespace:__anon106	file:
LiveProcess	src/sim/Process.py	/^class LiveProcess(Process):$/;"	c
LiveProcess	src/sim/process.cc	/^LiveProcess::LiveProcess(LiveProcessParams * params, ObjectFile *_objFile)$/;"	f	class:LiveProcess
LiveProcess	src/sim/process.hh	/^class LiveProcess : public Process$/;"	c
LoadFromNfo	src/arch/sparc/tlb.hh	/^        LoadFromNfo = 0x10,$/;"	e	enum:SparcISA::TLB::FaultTypes
LoadLockedReq	src/mem/packet.hh	/^        LoadLockedReq,$/;"	e	enum:MemCmd::Command
LoadPassword	src/dev/x86/i8042.hh	/^        LoadPassword = 0xA5,$/;"	e	enum:X86ISA::I8042::Command
LoadReg	src/dev/arm/rtc_pl031.hh	/^        LoadReg    = 0x08,$/;"	e	enum:PL031::__anon66
LoadReg	src/dev/arm/timer_sp804.hh	/^            LoadReg    = 0x00,$/;"	e	enum:Sp804::Timer::__anon69
LocalBP	src/cpu/pred/2bit_local.cc	/^LocalBP::LocalBP(const Params *params)$/;"	f	class:LocalBP
LocalBP	src/cpu/pred/2bit_local.hh	/^class LocalBP : public BPredUnit$/;"	c
LocalIntAssignment	src/arch/x86/bios/intelmp.cc	/^X86ISA::IntelMP::LocalIntAssignment::LocalIntAssignment(Params * p) :$/;"	f	class:X86ISA::IntelMP::LocalIntAssignment
LocalIntAssignment	src/arch/x86/bios/intelmp.hh	/^class LocalIntAssignment : public IntAssignment$/;"	c	namespace:X86ISA::IntelMP
LocalSimLoopExitEvent	src/sim/sim_events.cc	/^LocalSimLoopExitEvent::LocalSimLoopExitEvent()$/;"	f	class:LocalSimLoopExitEvent
LocalSimLoopExitEvent	src/sim/sim_events.cc	/^LocalSimLoopExitEvent::LocalSimLoopExitEvent(const std::string &_cause, int c,$/;"	f	class:LocalSimLoopExitEvent
LocalSimLoopExitEvent	src/sim/sim_events.hh	/^class LocalSimLoopExitEvent : public Event$/;"	c
LocalVariableAST	src/mem/slicc/ast/LocalVariableAST.py	/^class LocalVariableAST(StatementAST):$/;"	c
Location	src/mem/slicc/ast/AST.py	/^from slicc.util import PairContainer, Location$/;"	i
Location	src/mem/slicc/symbols/Symbol.py	/^        from slicc.util import Location$/;"	i
Location	src/mem/slicc/symbols/SymbolTable.py	/^from slicc.util import Location$/;"	i
Location	src/mem/slicc/util.py	/^class Location(object):$/;"	c
Lock	src/arch/x86/types.hh	/^        Lock,$/;"	e	enum:X86ISA::Prefixes
Lock	src/dev/arm/rv_ctrl.hh	/^        Lock       = 0x20,$/;"	e	enum:RealViewCtrl::__anon67
Lock	src/mem/cache/blk.hh	/^        Lock(Request *req)$/;"	f	class:CacheBlk::Lock
Lock	src/mem/cache/blk.hh	/^    class Lock {$/;"	c	class:CacheBlk
LockedAddr	src/mem/abstract_mem.hh	/^    LockedAddr(Addr _addr, int _cid) : addr(_addr), contextId(_cid)$/;"	f	class:LockedAddr
LockedAddr	src/mem/abstract_mem.hh	/^    LockedAddr(Request *req) : addr(mask(req->getPaddr())),$/;"	f	class:LockedAddr
LockedAddr	src/mem/abstract_mem.hh	/^class LockedAddr {$/;"	c
LogVMPageSize	src/arch/alpha/isa_traits.hh	/^    LogVMPageSize = 13,       \/\/ 8K bytes$/;"	e	enum:AlphaISA::__anon1
LogVMPageSize	src/arch/arm/isa_traits.hh	/^    const int LogVMPageSize = 12;       \/\/ 4K bytes$/;"	m	namespace:ArmISA
LogVMPageSize	src/arch/mips/isa_traits.hh	/^const int LogVMPageSize = 13;       \/\/ 8K bytes$/;"	m	namespace:MipsISA
LogVMPageSize	src/arch/null/isa_traits.hh	/^    const int LogVMPageSize = 12;       \/\/ 4K bytes$/;"	m	namespace:NullISA
LogVMPageSize	src/arch/power/isa_traits.hh	/^const int LogVMPageSize = 12;  \/\/ 4K bytes$/;"	m	namespace:PowerISA
LogVMPageSize	src/arch/sparc/isa_traits.hh	/^const int LogVMPageSize = 13;$/;"	m	namespace:SparcISA
LogVMPageSize	src/arch/x86/isa_traits.hh	/^    const int LogVMPageSize = 12;$/;"	m	namespace:X86ISA
LongDescriptor	src/arch/arm/table_walker.hh	/^    class LongDescriptor : public DescriptorBase {$/;"	c	class:ArmISA::TableWalker
LongMode	src/arch/x86/types.hh	/^        LongMode,$/;"	e	enum:X86ISA::X86Mode
LongPD	src/arch/x86/pagetable_walker.hh	/^                LongPML4, LongPDP, LongPD, LongPTE,$/;"	e	enum:X86ISA::Walker::WalkerState::State
LongPDP	src/arch/x86/pagetable_walker.hh	/^                LongPML4, LongPDP, LongPD, LongPTE,$/;"	e	enum:X86ISA::Walker::WalkerState::State
LongPML4	src/arch/x86/pagetable_walker.hh	/^                LongPML4, LongPDP, LongPD, LongPTE,$/;"	e	enum:X86ISA::Walker::WalkerState::State
LongPTE	src/arch/x86/pagetable_walker.hh	/^                LongPML4, LongPDP, LongPD, LongPTE,$/;"	e	enum:X86ISA::Walker::WalkerState::State
LookupLevel	src/arch/arm/pagetable.hh	/^enum LookupLevel {$/;"	g	namespace:ArmISA
LowestPriority	src/arch/x86/intmessage.hh	/^            LowestPriority = 1,$/;"	e	enum:X86ISA::DeliveryMode::IntDeliveryMode
LpaeTran	src/arch/arm/faults.hh	/^        LpaeTran,$/;"	e	enum:ArmISA::ArmFault::TranMethod
LsbOnly	src/dev/intel_8254_timer.hh	/^        LsbOnly,$/;"	e	enum:Intel8254Timer::ReadWriteVal
LsqEntry	src/cpu/base_dyn_inst.hh	/^        LsqEntry,                \/\/\/ Instruction is in the LSQ$/;"	e	enum:BaseDynInst::Status
LsqEntry	src/cpu/inorder/inorder_dyn_inst.hh	/^        LsqEntry,                \/\/\/ Instruction is in the LSQ$/;"	e	enum:InOrderDynInst::Status
M	src/base/random.hh	/^    static const int M = 397;$/;"	m	class:Random
M5ControlRegister	src/dev/ns_gige_reg.h	/^enum M5ControlRegister {$/;"	g
M5DebugFault	src/arch/generic/debugfaults.hh	/^    M5DebugFault(DebugFunc _func, std::string _message) :$/;"	f	class:GenericISA::M5DebugFault
M5DebugFault	src/arch/generic/debugfaults.hh	/^class M5DebugFault : public FaultBase$/;"	c	namespace:GenericISA
M5FatalFault	src/arch/generic/debugfaults.hh	/^typedef M5VarArgsFault<M5DebugFault::FatalFunc> M5FatalFault;$/;"	t	namespace:GenericISA
M5PanicFault	src/arch/generic/debugfaults.hh	/^typedef M5VarArgsFault<M5DebugFault::PanicFunc> M5PanicFault;$/;"	t	namespace:GenericISA
M5REG	src/dev/ns_gige_reg.h	/^    M5REG =             0xf8,$/;"	e	enum:DeviceRegisterAddress
M5REG_RESERVED	src/dev/ns_gige_reg.h	/^     M5REG_RESERVED =   0xfffffffc,$/;"	e	enum:M5ControlRegister
M5REG_RSS	src/dev/ns_gige_reg.h	/^     M5REG_RSS =        0x00000004,$/;"	e	enum:M5ControlRegister
M5REG_RX_THREAD	src/dev/ns_gige_reg.h	/^     M5REG_RX_THREAD =  0x00000002,$/;"	e	enum:M5ControlRegister
M5REG_TX_THREAD	src/dev/ns_gige_reg.h	/^     M5REG_TX_THREAD =  0x00000001$/;"	e	enum:M5ControlRegister
M5VarArgsFault	src/arch/generic/debugfaults.hh	/^    M5VarArgsFault(const std::string &format, CPRINTF_DECLARATION) :$/;"	f	class:GenericISA::M5VarArgsFault
M5VarArgsFault	src/arch/generic/debugfaults.hh	/^class M5VarArgsFault : public M5DebugFault$/;"	c	namespace:GenericISA
M5WarnFault	src/arch/generic/debugfaults.hh	/^typedef M5VarArgsFault<M5DebugFault::WarnFunc> M5WarnFault;$/;"	t	namespace:GenericISA
M5WarnOnceFault	src/arch/generic/debugfaults.hh	/^typedef M5VarArgsFault<M5DebugFault::WarnOnceFunc> M5WarnOnceFault;$/;"	t	namespace:GenericISA
M5_ATTR_NORETURN	src/base/compiler.hh	/^#define M5_ATTR_NORETURN /;"	d
M5_ATTR_PACKED	src/base/compiler.hh	/^#define M5_ATTR_PACKED /;"	d
M5_ATTR_PACKED	src/base/vnc/vncinput.hh	/^    } M5_ATTR_PACKED;$/;"	m	class:VncInput	typeref:struct:VncInput::ClientCutTextMessage
M5_ATTR_PACKED	src/base/vnc/vncinput.hh	/^    } M5_ATTR_PACKED;$/;"	m	class:VncInput	typeref:struct:VncInput::FrameBufferUpdateReq
M5_ATTR_PACKED	src/base/vnc/vncinput.hh	/^    } M5_ATTR_PACKED;$/;"	m	class:VncInput	typeref:struct:VncInput::KeyEventMessage
M5_ATTR_PACKED	src/base/vnc/vncinput.hh	/^    } M5_ATTR_PACKED;$/;"	m	class:VncInput	typeref:struct:VncInput::PixelEncodingsMessage
M5_ATTR_PACKED	src/base/vnc/vncinput.hh	/^    } M5_ATTR_PACKED;$/;"	m	class:VncInput	typeref:struct:VncInput::PixelFormat
M5_ATTR_PACKED	src/base/vnc/vncinput.hh	/^    } M5_ATTR_PACKED;$/;"	m	class:VncInput	typeref:struct:VncInput::PixelFormatMessage
M5_ATTR_PACKED	src/base/vnc/vncinput.hh	/^    } M5_ATTR_PACKED;$/;"	m	class:VncInput	typeref:struct:VncInput::PointerEventMessage
M5_ATTR_PACKED	src/base/vnc/vncserver.hh	/^    } M5_ATTR_PACKED;$/;"	m	class:VncServer	typeref:struct:VncServer::FrameBufferRect
M5_ATTR_PACKED	src/base/vnc/vncserver.hh	/^    } M5_ATTR_PACKED;$/;"	m	class:VncServer	typeref:struct:VncServer::FrameBufferUpdate
M5_ATTR_PACKED	src/base/vnc/vncserver.hh	/^    } M5_ATTR_PACKED;$/;"	m	class:VncServer	typeref:struct:VncServer::ServerCutText
M5_ATTR_PACKED	src/base/vnc/vncserver.hh	/^    } M5_ATTR_PACKED;$/;"	m	class:VncServer	typeref:struct:VncServer::ServerInitMsg
M5_ATTR_PACKED	src/cpu/kvm/x86_cpu.cc	/^} M5_ATTR_PACKED;$/;"	v	typeref:struct:FXSave
M5_AT_BASE	src/sim/process.hh	/^        M5_AT_BASE = 7,$/;"	e	enum:LiveProcess::AuxiliaryVectorType
M5_AT_CLKTCK	src/sim/process.hh	/^        M5_AT_CLKTCK = 17,$/;"	e	enum:LiveProcess::AuxiliaryVectorType
M5_AT_EGID	src/sim/process.hh	/^        M5_AT_EGID = 14,$/;"	e	enum:LiveProcess::AuxiliaryVectorType
M5_AT_ENTRY	src/sim/process.hh	/^        M5_AT_ENTRY = 9,$/;"	e	enum:LiveProcess::AuxiliaryVectorType
M5_AT_EUID	src/sim/process.hh	/^        M5_AT_EUID = 12,$/;"	e	enum:LiveProcess::AuxiliaryVectorType
M5_AT_EXECFD	src/sim/process.hh	/^        M5_AT_EXECFD = 2,$/;"	e	enum:LiveProcess::AuxiliaryVectorType
M5_AT_EXECFN	src/sim/process.hh	/^        M5_AT_EXECFN = 31,$/;"	e	enum:LiveProcess::AuxiliaryVectorType
M5_AT_FLAGS	src/sim/process.hh	/^        M5_AT_FLAGS = 8,$/;"	e	enum:LiveProcess::AuxiliaryVectorType
M5_AT_GID	src/sim/process.hh	/^        M5_AT_GID = 13,$/;"	e	enum:LiveProcess::AuxiliaryVectorType
M5_AT_HWCAP	src/sim/process.hh	/^        M5_AT_HWCAP = 16,$/;"	e	enum:LiveProcess::AuxiliaryVectorType
M5_AT_IGNORE	src/sim/process.hh	/^        M5_AT_IGNORE = 1,$/;"	e	enum:LiveProcess::AuxiliaryVectorType
M5_AT_NOTELF	src/sim/process.hh	/^        M5_AT_NOTELF = 10,$/;"	e	enum:LiveProcess::AuxiliaryVectorType
M5_AT_NULL	src/sim/process.hh	/^        M5_AT_NULL = 0,$/;"	e	enum:LiveProcess::AuxiliaryVectorType
M5_AT_PAGESZ	src/sim/process.hh	/^        M5_AT_PAGESZ = 6,$/;"	e	enum:LiveProcess::AuxiliaryVectorType
M5_AT_PHDR	src/sim/process.hh	/^        M5_AT_PHDR = 3,$/;"	e	enum:LiveProcess::AuxiliaryVectorType
M5_AT_PHENT	src/sim/process.hh	/^        M5_AT_PHENT = 4,$/;"	e	enum:LiveProcess::AuxiliaryVectorType
M5_AT_PHNUM	src/sim/process.hh	/^        M5_AT_PHNUM = 5,$/;"	e	enum:LiveProcess::AuxiliaryVectorType
M5_AT_PLATFORM	src/sim/process.hh	/^        M5_AT_PLATFORM = 15,$/;"	e	enum:LiveProcess::AuxiliaryVectorType
M5_AT_RANDOM	src/sim/process.hh	/^        M5_AT_RANDOM = 25,$/;"	e	enum:LiveProcess::AuxiliaryVectorType
M5_AT_SECURE	src/sim/process.hh	/^        M5_AT_SECURE = 23,$/;"	e	enum:LiveProcess::AuxiliaryVectorType
M5_AT_SYSINFO	src/arch/x86/process.hh	/^        M5_AT_SYSINFO = 32,$/;"	e	enum:X86ISA::X86AuxiliaryVectorTypes
M5_AT_SYSINFO_EHDR	src/arch/x86/process.hh	/^        M5_AT_SYSINFO_EHDR = 33$/;"	e	enum:X86ISA::X86AuxiliaryVectorTypes
M5_AT_UID	src/sim/process.hh	/^        M5_AT_UID = 11,$/;"	e	enum:LiveProcess::AuxiliaryVectorType
M5_AT_VECTOR_SIZE	src/sim/process.hh	/^        M5_AT_VECTOR_SIZE = 44$/;"	e	enum:LiveProcess::AuxiliaryVectorType
M5_BASE_PLATFORM	src/sim/process.hh	/^        M5_BASE_PLATFORM = 24,$/;"	e	enum:LiveProcess::AuxiliaryVectorType
M5_CLASS_VAR_USED	src/base/compiler.hh	/^#define M5_CLASS_VAR_USED /;"	d
M5_CLASS_VAR_USED	src/base/compiler.hh	/^#define M5_CLASS_VAR_USED$/;"	d
M5_DUMMY_RETURN	src/base/compiler.hh	/^#define M5_DUMMY_RETURN$/;"	d
M5_FE_DOWNWARD	src/base/fenv.hh	/^#define M5_FE_DOWNWARD /;"	d
M5_FE_TONEAREST	src/base/fenv.hh	/^#define M5_FE_TONEAREST /;"	d
M5_FE_TOWARDZERO	src/base/fenv.hh	/^#define M5_FE_TOWARDZERO /;"	d
M5_FE_UPWARD	src/base/fenv.hh	/^#define M5_FE_UPWARD /;"	d
M5_NO_INLINE	src/base/compiler.hh	/^#define M5_NO_INLINE /;"	d
M5_PRAGMA_NORETURN	src/base/compiler.hh	/^#define M5_PRAGMA_NORETURN(/;"	d
M5_SC_CLK_TCK	src/kern/linux/linux.hh	/^    static const int M5_SC_CLK_TCK = 100;$/;"	m	class:Linux
M5_VAR_USED	src/base/compiler.hh	/^#define M5_VAR_USED /;"	d
M5_pid	src/sim/process.hh	/^    uint64_t M5_pid;$/;"	m	class:Process
MANC	src/dev/i8254xGBe_defs.hh	/^    struct MANC : public Reg<uint32_t> { \/\/ 0x5820 MANC Register$/;"	s	struct:iGbReg::Regs
MATRIX_A	src/base/random.hh	/^    static const uint32_t MATRIX_A = (uint32_t)0x9908b0df;$/;"	m	class:Random
MATRIX_ARBITER	src/mem/ruby/network/orion/Allocator/Arbiter.hh	/^      MATRIX_ARBITER$/;"	e	enum:Arbiter::ArbiterModel
MATRIX_CROSSBAR	src/mem/ruby/network/orion/Crossbar/Crossbar.hh	/^      MATRIX_CROSSBAR,$/;"	e	enum:Crossbar::CrossbarModel
MAX	src/mem/ruby/network/fault_model/FaultModel.cc	/^#define MAX(/;"	d	file:
MAX_ASI	src/arch/sparc/asi.hh	/^    MAX_ASI = 0xFF$/;"	e	enum:SparcISA::ASI
MAX_BUFFERS_per_VC	src/mem/ruby/network/fault_model/FaultModel.hh	/^#define MAX_BUFFERS_per_VC /;"	d
MAX_BURST_LEN	src/dev/arm/hdlcd.hh	/^    static const size_t MAX_BURST_LEN = 16;$/;"	m	class:HDLcd
MAX_DMA_SIZE	src/dev/ide_disk.hh	/^#define MAX_DMA_SIZE /;"	d
MAX_FD	src/sim/process.hh	/^    static const int MAX_FD = 256;    \/\/ max legal fd value$/;"	m	class:Process
MAX_LOOKUP_LEVELS	src/arch/arm/pagetable.hh	/^    MAX_LOOKUP_LEVELS$/;"	e	enum:ArmISA::LookupLevel
MAX_MULTSECT	src/dev/ide_disk.hh	/^#define MAX_MULTSECT /;"	d
MAX_NUMREGS	src/arch/arm/remote_gdb.hh	/^const int MAX_NUMREGS = NUMREGS_64;$/;"	m	namespace:ArmISA
MAX_OUTSTANDING_DMA_REQ_CAPACITY	src/dev/arm/hdlcd.hh	/^    static const size_t MAX_OUTSTANDING_DMA_REQ_CAPACITY = 16;$/;"	m	class:HDLcd
MAX_PF_INFLIGHT	src/mem/ruby/structures/Prefetcher.hh	/^#define MAX_PF_INFLIGHT /;"	d
MAX_SINGLE_DMA_SIZE	src/dev/ide_disk.hh	/^#define MAX_SINGLE_DMA_SIZE /;"	d
MAX_VCs	src/mem/ruby/network/fault_model/FaultModel.hh	/^#define MAX_VCs /;"	d
MC146818	src/dev/mc146818.cc	/^MC146818::MC146818(EventManager *em, const string &n, const struct tm time,$/;"	f	class:MC146818
MC146818	src/dev/mc146818.hh	/^class MC146818 : public EventManager$/;"	c
MCGCP	src/arch/x86/regs/misc.hh	/^        Bitfield<8> MCGCP; \/\/ MCG_CTL register present.$/;"	m	namespace:X86ISA
MCR	src/dev/uart8250.hh	/^    uint8_t IER, DLAB, LCR, MCR;$/;"	m	class:Uart8250
MCSR_SP	src/arch/alpha/ev5.hh	/^inline uint64_t MCSR_SP(uint64_t reg) { return reg >> 1 & 0x3; }$/;"	f	namespace:AlphaISA
MCounter	src/base/stats/types.hh	/^typedef std::map<Counter, int> MCounter;$/;"	t	namespace:Stats
MDIC	src/dev/i8254xGBe_defs.hh	/^    struct MDIC : public Reg<uint32_t> { \/\/ 0x0020 MDIC Register$/;"	s	struct:iGbReg::Regs
MDU	src/cpu/inorder/pipeline_traits.hh	/^       MDU,$/;"	e	enum:ThePipeline::ResourceId
MDUEvent	src/cpu/inorder/resources/mult_div_unit.cc	/^MDUEvent::MDUEvent()$/;"	f	class:MDUEvent
MDUEvent	src/cpu/inorder/resources/mult_div_unit.hh	/^class MDUEvent : public ResourceEvent$/;"	c
MEAR	src/dev/ns_gige_reg.h	/^    MEAR =              0x08,$/;"	e	enum:DeviceRegisterAddress
MEAR_EECLK	src/dev/ns_gige_reg.h	/^     MEAR_EECLK =       0x00000004,$/;"	e	enum:EEPROMAccessRegister
MEAR_EEDI	src/dev/ns_gige_reg.h	/^     MEAR_EEDI =        0x00000001,$/;"	e	enum:EEPROMAccessRegister
MEAR_EEDO	src/dev/ns_gige_reg.h	/^     MEAR_EEDO =        0x00000002,$/;"	e	enum:EEPROMAccessRegister
MEAR_EESEL	src/dev/ns_gige_reg.h	/^     MEAR_EESEL =       0x00000008,$/;"	e	enum:EEPROMAccessRegister
MEAR_MDC	src/dev/ns_gige_reg.h	/^     MEAR_MDC =         0x00000040,$/;"	e	enum:EEPROMAccessRegister
MEAR_MDDIR	src/dev/ns_gige_reg.h	/^     MEAR_MDDIR =       0x00000020,$/;"	e	enum:EEPROMAccessRegister
MEAR_MDIO	src/dev/ns_gige_reg.h	/^     MEAR_MDIO =        0x00000010,$/;"	e	enum:EEPROMAccessRegister
MEM	src/python/m5/util/dot_writer.py	/^    MEM = 3$/;"	v	class:NodeType
MEM_INHIBIT	src/mem/packet.hh	/^    static const FlagsType MEM_INHIBIT            = 0x00000008;$/;"	m	class:Packet
MEM_SWAP	src/mem/request.hh	/^    static const FlagsType MEM_SWAP                    = 0x00400000;$/;"	m	class:Request
MEM_SWAP_COND	src/mem/request.hh	/^    static const FlagsType MEM_SWAP_COND               = 0x00800000;$/;"	m	class:Request
MESSAGE_SIZE_MULTIPLIER	src/mem/ruby/network/simple/Throttle.cc	/^const int MESSAGE_SIZE_MULTIPLIER = 1000;$/;"	v
MH	src/kern/tru64/mbuf.hh	/^        } MH;$/;"	m	union:tru64::mbuf::__anon95	typeref:struct:tru64::mbuf::__anon95::__anon96
MH_dat	src/kern/tru64/mbuf.hh	/^            } MH_dat;$/;"	m	struct:tru64::mbuf::__anon95::__anon96	typeref:union:tru64::mbuf::__anon95::__anon96::__anon97
MH_databuf	src/kern/tru64/mbuf.hh	/^                char    MH_databuf[1];$/;"	m	union:tru64::mbuf::__anon95::__anon96::__anon97
MH_ext	src/kern/tru64/mbuf.hh	/^                struct  m_ext MH_ext;$/;"	m	union:tru64::mbuf::__anon95::__anon96::__anon97	typeref:struct:tru64::mbuf::__anon95::__anon96::__anon97::m_ext
MH_pkthdr	src/kern/tru64/mbuf.hh	/^            struct      pkthdr MH_pkthdr;$/;"	m	struct:tru64::mbuf::__anon95::__anon96	typeref:struct:tru64::mbuf::__anon95::__anon96::pkthdr
MHz	src/sim/core.cc	/^double MHz;$/;"	m	namespace:SimClock::Float	file:
MIBC	src/dev/ns_gige_reg.h	/^    MIBC =              0x5c,$/;"	e	enum:DeviceRegisterAddress
MIBC_ACLR	src/dev/ns_gige_reg.h	/^     MIBC_ACLR =        0x00000004,$/;"	e	enum:ManagementInformationBaseControlRegister
MIBC_FRZ	src/dev/ns_gige_reg.h	/^     MIBC_FRZ =         0x00000002,$/;"	e	enum:ManagementInformationBaseControlRegister
MIBC_MIBS	src/dev/ns_gige_reg.h	/^     MIBC_MIBS =        0x00000008,$/;"	e	enum:ManagementInformationBaseControlRegister
MIBC_WRN	src/dev/ns_gige_reg.h	/^     MIBC_WRN =         0x00000001$/;"	e	enum:ManagementInformationBaseControlRegister
MIB_END	src/dev/ns_gige_reg.h	/^    MIB_END =           0x88,$/;"	e	enum:DeviceRegisterAddress
MIB_START	src/dev/ns_gige_reg.h	/^    MIB_START =         0x60,$/;"	e	enum:DeviceRegisterAddress
MIN_DELAY	src/mem/ruby/network/orion/Wire.hh	/^      MIN_DELAY,$/;"	e	enum:Wire::BufferScheme
MIN_HOST_CYCLES	src/cpu/kvm/timer.cc	/^static const uint64_t MIN_HOST_CYCLES = 1000;$/;"	v	file:
MIPS32_QNAN	src/arch/mips/registers.hh	/^const uint32_t MIPS32_QNAN = 0x7fbfffff;$/;"	m	namespace:MipsISA
MIPS64_QNAN	src/arch/mips/registers.hh	/^const uint64_t MIPS64_QNAN = ULL(0x7ff7ffffffffffff);$/;"	m	namespace:MipsISA
MIPS_ACCESS_VERSION	src/dev/mips/access.h	/^#define MIPS_ACCESS_VERSION /;"	d
MISCREG_A64_UNIMPL	src/arch/arm/miscregs.hh	/^        MISCREG_A64_UNIMPL,             \/\/ 603$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ACTLR	src/arch/arm/miscregs.hh	/^        MISCREG_ACTLR,                  \/\/ 111$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ACTLR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_ACTLR_EL1,              \/\/ 399$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ACTLR_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_ACTLR_EL2,              \/\/ 402$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ACTLR_EL3	src/arch/arm/miscregs.hh	/^        MISCREG_ACTLR_EL3,              \/\/ 409$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ACTLR_NS	src/arch/arm/miscregs.hh	/^        MISCREG_ACTLR_NS,               \/\/ 112$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ACTLR_S	src/arch/arm/miscregs.hh	/^        MISCREG_ACTLR_S,                \/\/ 113$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ADFSR	src/arch/arm/miscregs.hh	/^        MISCREG_ADFSR,                  \/\/ 145$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ADFSR_NS	src/arch/arm/miscregs.hh	/^        MISCREG_ADFSR_NS,               \/\/ 146$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ADFSR_S	src/arch/arm/miscregs.hh	/^        MISCREG_ADFSR_S,                \/\/ 147$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_AFSR0_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_AFSR0_EL1,              \/\/ 445$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_AFSR0_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_AFSR0_EL2,              \/\/ 449$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_AFSR0_EL3	src/arch/arm/miscregs.hh	/^        MISCREG_AFSR0_EL3,              \/\/ 453$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_AFSR1_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_AFSR1_EL1,              \/\/ 446$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_AFSR1_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_AFSR1_EL2,              \/\/ 450$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_AFSR1_EL3	src/arch/arm/miscregs.hh	/^        MISCREG_AFSR1_EL3,              \/\/ 454$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_AIDR	src/arch/arm/miscregs.hh	/^        MISCREG_AIDR,                   \/\/ 102$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_AIDR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_AIDR_EL1,               \/\/ 392$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_AIFSR	src/arch/arm/miscregs.hh	/^        MISCREG_AIFSR,                  \/\/ 148$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_AIFSR_NS	src/arch/arm/miscregs.hh	/^        MISCREG_AIFSR_NS,               \/\/ 149$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_AIFSR_S	src/arch/arm/miscregs.hh	/^        MISCREG_AIFSR_S,                \/\/ 150$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_AMAIR0	src/arch/arm/miscregs.hh	/^        MISCREG_AMAIR0,                 \/\/ 252$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_AMAIR0_NS	src/arch/arm/miscregs.hh	/^        MISCREG_AMAIR0_NS,              \/\/ 253$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_AMAIR0_S	src/arch/arm/miscregs.hh	/^        MISCREG_AMAIR0_S,               \/\/ 254$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_AMAIR1	src/arch/arm/miscregs.hh	/^        MISCREG_AMAIR1,                 \/\/ 255$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_AMAIR1_NS	src/arch/arm/miscregs.hh	/^        MISCREG_AMAIR1_NS,              \/\/ 256$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_AMAIR1_S	src/arch/arm/miscregs.hh	/^        MISCREG_AMAIR1_S,               \/\/ 257$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_AMAIR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_AMAIR_EL1,              \/\/ 533$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_AMAIR_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_AMAIR_EL2,              \/\/ 535$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_AMAIR_EL3	src/arch/arm/miscregs.hh	/^        MISCREG_AMAIR_EL3,              \/\/ 537$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_APIC_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_APIC_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_ASI	src/arch/sparc/miscregs.hh	/^    MISCREG_ASI,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_ATS12NSOPR	src/arch/arm/miscregs.hh	/^        MISCREG_ATS12NSOPR,             \/\/ 179$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ATS12NSOPW	src/arch/arm/miscregs.hh	/^        MISCREG_ATS12NSOPW,             \/\/ 180$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ATS12NSOUR	src/arch/arm/miscregs.hh	/^        MISCREG_ATS12NSOUR,             \/\/ 181$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ATS12NSOUW	src/arch/arm/miscregs.hh	/^        MISCREG_ATS12NSOUW,             \/\/ 182$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ATS1CPR	src/arch/arm/miscregs.hh	/^        MISCREG_ATS1CPR,                \/\/ 175$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ATS1CPW	src/arch/arm/miscregs.hh	/^        MISCREG_ATS1CPW,                \/\/ 176$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ATS1CUR	src/arch/arm/miscregs.hh	/^        MISCREG_ATS1CUR,                \/\/ 177$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ATS1CUW	src/arch/arm/miscregs.hh	/^        MISCREG_ATS1CUW,                \/\/ 178$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ATS1HR	src/arch/arm/miscregs.hh	/^        MISCREG_ATS1HR,                 \/\/ 190$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ATS1HW	src/arch/arm/miscregs.hh	/^        MISCREG_ATS1HW,                 \/\/ 191$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_AT_S12E0R_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_AT_S12E0R_Xt,           \/\/ 480$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_AT_S12E0W_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_AT_S12E0W_Xt,           \/\/ 481$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_AT_S12E1R_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_AT_S12E1R_Xt,           \/\/ 478$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_AT_S12E1W_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_AT_S12E1W_Xt,           \/\/ 479$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_AT_S1E0R_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_AT_S1E0R_Xt,            \/\/ 467$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_AT_S1E0W_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_AT_S1E0W_Xt,            \/\/ 468$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_AT_S1E1R_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_AT_S1E1R_Xt,            \/\/ 465$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_AT_S1E1W_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_AT_S1E1W_Xt,            \/\/ 466$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_AT_S1E2R_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_AT_S1E2R_Xt,            \/\/ 476$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_AT_S1E2W_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_AT_S1E2W_Xt,            \/\/ 477$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_AT_S1E3R_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_AT_S1E3R_Xt,            \/\/ 482$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_AT_S1E3W_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_AT_S1E3W_Xt,            \/\/ 483$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_BADVADDR	src/arch/mips/registers.hh	/^    MISCREG_BADVADDR = 64,       \/\/Bank 8: 64-71$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_BANKED	src/arch/arm/miscregs.hh	/^        MISCREG_BANKED,  \/\/ True if the register is banked between the two$/;"	e	enum:ArmISA::MiscRegInfo
MISCREG_BANKED_CHILD	src/arch/arm/miscregs.hh	/^        MISCREG_BANKED_CHILD, \/\/ The entry is one of the child registers that$/;"	e	enum:ArmISA::MiscRegInfo
MISCREG_BPIALL	src/arch/arm/miscregs.hh	/^        MISCREG_BPIALL,                 \/\/ 171$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_BPIALLIS	src/arch/arm/miscregs.hh	/^        MISCREG_BPIALLIS,               \/\/ 164$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_BPIMVA	src/arch/arm/miscregs.hh	/^        MISCREG_BPIMVA,                 \/\/ 172$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CACHEERR0	src/arch/mips/registers.hh	/^    MISCREG_CACHEERR0 = 216,   \/\/Bank 27: 216-223$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_CACHEERR1	src/arch/mips/registers.hh	/^    MISCREG_CACHEERR1,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_CACHEERR2	src/arch/mips/registers.hh	/^    MISCREG_CACHEERR2,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_CACHEERR3	src/arch/mips/registers.hh	/^    MISCREG_CACHEERR3,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_CAUSE	src/arch/mips/registers.hh	/^    MISCREG_CAUSE = 104,         \/\/Bank 13: 104-111$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_CBAR	src/arch/arm/miscregs.hh	/^        MISCREG_CBAR,                   \/\/ 307$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CBAR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_CBAR_EL1,               \/\/ 598$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CCSIDR	src/arch/arm/miscregs.hh	/^        MISCREG_CCSIDR,                 \/\/ 100$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CCSIDR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_CCSIDR_EL1,             \/\/ 390$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CLIDR	src/arch/arm/miscregs.hh	/^        MISCREG_CLIDR,                  \/\/ 101$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CLIDR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_CLIDR_EL1,              \/\/ 391$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTFRQ	src/arch/arm/miscregs.hh	/^        MISCREG_CNTFRQ,                 \/\/ 283$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTFRQ_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_CNTFRQ_EL0,             \/\/ 555$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTHCTL	src/arch/arm/miscregs.hh	/^        MISCREG_CNTHCTL,                \/\/ 293$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTHCTL_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_CNTHCTL_EL2,            \/\/ 577$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTHP_CTL	src/arch/arm/miscregs.hh	/^        MISCREG_CNTHP_CTL,              \/\/ 295$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTHP_CTL_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_CNTHP_CTL_EL2,          \/\/ 579$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTHP_CVAL	src/arch/arm/miscregs.hh	/^        MISCREG_CNTHP_CVAL,             \/\/ 317$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTHP_CVAL_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_CNTHP_CVAL_EL2,         \/\/ 580$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTHP_TVAL	src/arch/arm/miscregs.hh	/^        MISCREG_CNTHP_TVAL,             \/\/ 294$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTHP_TVAL_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_CNTHP_TVAL_EL2,         \/\/ 578$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTKCTL	src/arch/arm/miscregs.hh	/^        MISCREG_CNTKCTL,                \/\/ 284$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTKCTL_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_CNTKCTL_EL1,            \/\/ 554$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTPCT	src/arch/arm/miscregs.hh	/^        MISCREG_CNTPCT,                 \/\/ 310$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTPCT_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_CNTPCT_EL0,             \/\/ 556$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTPS_CTL_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_CNTPS_CTL_EL1,          \/\/ 582$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTPS_CVAL_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_CNTPS_CVAL_EL1,         \/\/ 583$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTPS_TVAL_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_CNTPS_TVAL_EL1,         \/\/ 581$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTP_CTL	src/arch/arm/miscregs.hh	/^        MISCREG_CNTP_CTL,               \/\/ 288$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTP_CTL_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_CNTP_CTL_EL0,           \/\/ 559$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTP_CTL_NS	src/arch/arm/miscregs.hh	/^        MISCREG_CNTP_CTL_NS,            \/\/ 289$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTP_CTL_S	src/arch/arm/miscregs.hh	/^        MISCREG_CNTP_CTL_S,             \/\/ 290$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTP_CVAL	src/arch/arm/miscregs.hh	/^        MISCREG_CNTP_CVAL,              \/\/ 312$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTP_CVAL_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_CNTP_CVAL_EL0,          \/\/ 560$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTP_CVAL_NS	src/arch/arm/miscregs.hh	/^        MISCREG_CNTP_CVAL_NS,           \/\/ 313$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTP_CVAL_S	src/arch/arm/miscregs.hh	/^        MISCREG_CNTP_CVAL_S,            \/\/ 314$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTP_TVAL	src/arch/arm/miscregs.hh	/^        MISCREG_CNTP_TVAL,              \/\/ 285$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTP_TVAL_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_CNTP_TVAL_EL0,          \/\/ 558$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTP_TVAL_NS	src/arch/arm/miscregs.hh	/^        MISCREG_CNTP_TVAL_NS,           \/\/ 286$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTP_TVAL_S	src/arch/arm/miscregs.hh	/^        MISCREG_CNTP_TVAL_S,            \/\/ 287$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTVCT	src/arch/arm/miscregs.hh	/^        MISCREG_CNTVCT,                 \/\/ 311$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTVCT_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_CNTVCT_EL0,             \/\/ 557$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTVOFF	src/arch/arm/miscregs.hh	/^        MISCREG_CNTVOFF,                \/\/ 316$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTVOFF_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_CNTVOFF_EL2,            \/\/ 576$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTV_CTL	src/arch/arm/miscregs.hh	/^        MISCREG_CNTV_CTL,               \/\/ 292$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTV_CTL_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_CNTV_CTL_EL0,           \/\/ 562$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTV_CVAL	src/arch/arm/miscregs.hh	/^        MISCREG_CNTV_CVAL,              \/\/ 315$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTV_CVAL_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_CNTV_CVAL_EL0,          \/\/ 563$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTV_TVAL	src/arch/arm/miscregs.hh	/^        MISCREG_CNTV_TVAL,              \/\/ 291$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CNTV_TVAL_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_CNTV_TVAL_EL0,          \/\/ 561$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_COMPARE	src/arch/mips/registers.hh	/^    MISCREG_COMPARE = 88,        \/\/Bank 11: 88-95$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_CONFIG	src/arch/mips/registers.hh	/^    MISCREG_CONFIG = 128,        \/\/Bank 16: 128-135$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_CONFIG1	src/arch/mips/registers.hh	/^    MISCREG_CONFIG1,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_CONFIG2	src/arch/mips/registers.hh	/^    MISCREG_CONFIG2,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_CONFIG3	src/arch/mips/registers.hh	/^    MISCREG_CONFIG3,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_CONFIG4	src/arch/mips/registers.hh	/^    MISCREG_CONFIG4,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_CONFIG5	src/arch/mips/registers.hh	/^    MISCREG_CONFIG5,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_CONFIG6	src/arch/mips/registers.hh	/^    MISCREG_CONFIG6,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_CONFIG7	src/arch/mips/registers.hh	/^    MISCREG_CONFIG7,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_CONTEXT	src/arch/mips/registers.hh	/^    MISCREG_CONTEXT = 32,    \/\/ Bank 4: 32 - 33$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_CONTEXTIDR	src/arch/arm/miscregs.hh	/^        MISCREG_CONTEXTIDR,             \/\/ 270$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CONTEXTIDR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_CONTEXTIDR_EL1,         \/\/ 548$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CONTEXTIDR_NS	src/arch/arm/miscregs.hh	/^        MISCREG_CONTEXTIDR_NS,          \/\/ 271$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CONTEXTIDR_S	src/arch/arm/miscregs.hh	/^        MISCREG_CONTEXTIDR_S,           \/\/ 272$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CONTEXT_CONFIG	src/arch/mips/registers.hh	/^    MISCREG_CONTEXT_CONFIG,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_COUNT	src/arch/mips/registers.hh	/^    MISCREG_COUNT = 72,          \/\/Bank 9: 72-79$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_CP0_RANDOM	src/arch/mips/registers.hh	/^    MISCREG_CP0_RANDOM = 8,      \/\/Bank 1: 8 - 15$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_CP14_UNIMPL	src/arch/arm/miscregs.hh	/^        MISCREG_CP14_UNIMPL,            \/\/ 601$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CP15DMB	src/arch/arm/miscregs.hh	/^        MISCREG_CP15DMB,                \/\/ 186$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CP15DSB	src/arch/arm/miscregs.hh	/^        MISCREG_CP15DSB,                \/\/ 185$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CP15ISB	src/arch/arm/miscregs.hh	/^        MISCREG_CP15ISB,                \/\/ 170$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CP15_UNIMPL	src/arch/arm/miscregs.hh	/^        MISCREG_CP15_UNIMPL,            \/\/ 602$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CPACR	src/arch/arm/miscregs.hh	/^        MISCREG_CPACR,                  \/\/ 114$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CPACR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_CPACR_EL1,              \/\/ 400$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CPSR	src/arch/arm/miscregs.hh	/^        MISCREG_CPSR = 0,               \/\/   0$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CPSR_MODE	src/arch/arm/miscregs.hh	/^        MISCREG_CPSR_MODE,              \/\/  15$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CPSR_Q	src/arch/arm/miscregs.hh	/^        MISCREG_CPSR_Q,                 \/\/  16$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CPTR_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_CPTR_EL2,               \/\/ 405$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CPTR_EL3	src/arch/arm/miscregs.hh	/^        MISCREG_CPTR_EL3,               \/\/ 412$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CPUACTLR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_CPUACTLR_EL1,           \/\/ 594$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CPUECTLR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_CPUECTLR_EL1,           \/\/ 595$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CPUMERRSR	src/arch/arm/miscregs.hh	/^        MISCREG_CPUMERRSR,              \/\/ 318$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CPUMERRSR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_CPUMERRSR_EL1,          \/\/ 596$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CR	src/arch/x86/regs/misc.hh	/^    MISCREG_CR(int index)$/;"	f	namespace:X86ISA
MISCREG_CR0	src/arch/x86/regs/misc.hh	/^        MISCREG_CR0 = MISCREG_CR_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_CR1	src/arch/x86/regs/misc.hh	/^        MISCREG_CR1,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_CR10	src/arch/x86/regs/misc.hh	/^        MISCREG_CR10,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_CR11	src/arch/x86/regs/misc.hh	/^        MISCREG_CR11,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_CR12	src/arch/x86/regs/misc.hh	/^        MISCREG_CR12,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_CR13	src/arch/x86/regs/misc.hh	/^        MISCREG_CR13,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_CR14	src/arch/x86/regs/misc.hh	/^        MISCREG_CR14,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_CR15	src/arch/x86/regs/misc.hh	/^        MISCREG_CR15,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_CR2	src/arch/x86/regs/misc.hh	/^        MISCREG_CR2,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_CR3	src/arch/x86/regs/misc.hh	/^        MISCREG_CR3,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_CR4	src/arch/x86/regs/misc.hh	/^        MISCREG_CR4,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_CR5	src/arch/x86/regs/misc.hh	/^        MISCREG_CR5,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_CR6	src/arch/x86/regs/misc.hh	/^        MISCREG_CR6,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_CR7	src/arch/x86/regs/misc.hh	/^        MISCREG_CR7,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_CR8	src/arch/x86/regs/misc.hh	/^        MISCREG_CR8,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_CR9	src/arch/x86/regs/misc.hh	/^        MISCREG_CR9,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_CR_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_CR_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_CS	src/arch/x86/regs/misc.hh	/^        MISCREG_CS,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_CSSELR	src/arch/arm/miscregs.hh	/^        MISCREG_CSSELR,                 \/\/ 103$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CSSELR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_CSSELR_EL1,             \/\/ 393$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CSSELR_NS	src/arch/arm/miscregs.hh	/^        MISCREG_CSSELR_NS,              \/\/ 104$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CSSELR_S	src/arch/arm/miscregs.hh	/^        MISCREG_CSSELR_S,               \/\/ 105$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CSTAR	src/arch/x86/regs/misc.hh	/^        MISCREG_CSTAR,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_CS_ATTR	src/arch/x86/regs/misc.hh	/^        MISCREG_CS_ATTR,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_CS_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_CS_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_CS_EFF_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_CS_EFF_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_CS_LIMIT	src/arch/x86/regs/misc.hh	/^        MISCREG_CS_LIMIT,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_CTR	src/arch/arm/miscregs.hh	/^        MISCREG_CTR,                    \/\/  81$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CTR_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_CTR_EL0,                \/\/ 394$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CURRENTEL	src/arch/arm/miscregs.hh	/^        MISCREG_CURRENTEL,              \/\/ 428$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_CWP	src/arch/sparc/miscregs.hh	/^    MISCREG_CWP,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_DACR	src/arch/arm/miscregs.hh	/^        MISCREG_DACR,                   \/\/ 136$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DACR32_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_DACR32_EL2,             \/\/ 423$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DACR_NS	src/arch/arm/miscregs.hh	/^        MISCREG_DACR_NS,                \/\/ 137$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DACR_S	src/arch/arm/miscregs.hh	/^        MISCREG_DACR_S,                 \/\/ 138$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DAIF	src/arch/arm/miscregs.hh	/^        MISCREG_DAIF,                   \/\/ 430$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DATAHI1	src/arch/mips/registers.hh	/^    MISCREG_DATAHI1,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_DATAHI3	src/arch/mips/registers.hh	/^    MISCREG_DATAHI3,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_DATAHI5	src/arch/mips/registers.hh	/^    MISCREG_DATAHI5,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_DATAHI7	src/arch/mips/registers.hh	/^    MISCREG_DATAHI7,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_DATALO1	src/arch/mips/registers.hh	/^    MISCREG_DATALO1,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_DATALO3	src/arch/mips/registers.hh	/^    MISCREG_DATALO3,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_DATALO5	src/arch/mips/registers.hh	/^    MISCREG_DATALO5,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_DATALO7	src/arch/mips/registers.hh	/^    MISCREG_DATALO7,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_DBGAUTHSTATUS	src/arch/arm/miscregs.hh	/^        MISCREG_DBGAUTHSTATUS,          \/\/  71$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGAUTHSTATUS_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_DBGAUTHSTATUS_EL1,      \/\/ 357$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGBCR0	src/arch/arm/miscregs.hh	/^        MISCREG_DBGBCR0,                \/\/  47$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGBCR0_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_DBGBCR0_EL1,            \/\/ 331$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGBCR1	src/arch/arm/miscregs.hh	/^        MISCREG_DBGBCR1,                \/\/  48$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGBCR1_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_DBGBCR1_EL1,            \/\/ 332$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGBCR2	src/arch/arm/miscregs.hh	/^        MISCREG_DBGBCR2,                \/\/  49$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGBCR2_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_DBGBCR2_EL1,            \/\/ 333$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGBCR3	src/arch/arm/miscregs.hh	/^        MISCREG_DBGBCR3,                \/\/  50$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGBCR3_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_DBGBCR3_EL1,            \/\/ 334$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGBCR4	src/arch/arm/miscregs.hh	/^        MISCREG_DBGBCR4,                \/\/  51$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGBCR4_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_DBGBCR4_EL1,            \/\/ 335$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGBCR5	src/arch/arm/miscregs.hh	/^        MISCREG_DBGBCR5,                \/\/  52$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGBCR5_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_DBGBCR5_EL1,            \/\/ 336$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGBVR0	src/arch/arm/miscregs.hh	/^        MISCREG_DBGBVR0,                \/\/  41$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGBVR0_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_DBGBVR0_EL1,            \/\/ 325$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGBVR1	src/arch/arm/miscregs.hh	/^        MISCREG_DBGBVR1,                \/\/  42$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGBVR1_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_DBGBVR1_EL1,            \/\/ 326$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGBVR2	src/arch/arm/miscregs.hh	/^        MISCREG_DBGBVR2,                \/\/  43$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGBVR2_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_DBGBVR2_EL1,            \/\/ 327$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGBVR3	src/arch/arm/miscregs.hh	/^        MISCREG_DBGBVR3,                \/\/  44$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGBVR3_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_DBGBVR3_EL1,            \/\/ 328$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGBVR4	src/arch/arm/miscregs.hh	/^        MISCREG_DBGBVR4,                \/\/  45$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGBVR4_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_DBGBVR4_EL1,            \/\/ 329$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGBVR5	src/arch/arm/miscregs.hh	/^        MISCREG_DBGBVR5,                \/\/  46$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGBVR5_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_DBGBVR5_EL1,            \/\/ 330$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGBXVR4	src/arch/arm/miscregs.hh	/^        MISCREG_DBGBXVR4,               \/\/  62$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGBXVR5	src/arch/arm/miscregs.hh	/^        MISCREG_DBGBXVR5,               \/\/  63$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGCLAIMCLR	src/arch/arm/miscregs.hh	/^        MISCREG_DBGCLAIMCLR,            \/\/  70$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGCLAIMCLR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_DBGCLAIMCLR_EL1,        \/\/ 356$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGCLAIMSET	src/arch/arm/miscregs.hh	/^        MISCREG_DBGCLAIMSET,            \/\/  69$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGCLAIMSET_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_DBGCLAIMSET_EL1,        \/\/ 355$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGDCCINT	src/arch/arm/miscregs.hh	/^        MISCREG_DBGDCCINT,              \/\/  32$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGDEVID0	src/arch/arm/miscregs.hh	/^        MISCREG_DBGDEVID0,              \/\/  74$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGDEVID1	src/arch/arm/miscregs.hh	/^        MISCREG_DBGDEVID1,              \/\/  73$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGDEVID2	src/arch/arm/miscregs.hh	/^        MISCREG_DBGDEVID2,              \/\/  72$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGDIDR	src/arch/arm/miscregs.hh	/^        MISCREG_DBGDIDR,                \/\/  30$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGDRAR	src/arch/arm/miscregs.hh	/^        MISCREG_DBGDRAR,                \/\/  61$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGDSAR	src/arch/arm/miscregs.hh	/^        MISCREG_DBGDSAR,                \/\/  68$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGDSCRext	src/arch/arm/miscregs.hh	/^        MISCREG_DBGDSCRext,             \/\/  38$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGDSCRint	src/arch/arm/miscregs.hh	/^        MISCREG_DBGDSCRint,             \/\/  31$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGDTRRXext	src/arch/arm/miscregs.hh	/^        MISCREG_DBGDTRRXext,            \/\/  37$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGDTRRXint	src/arch/arm/miscregs.hh	/^        MISCREG_DBGDTRRXint,            \/\/  34$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGDTRTXext	src/arch/arm/miscregs.hh	/^        MISCREG_DBGDTRTXext,            \/\/  39$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGDTRTXint	src/arch/arm/miscregs.hh	/^        MISCREG_DBGDTRTXint,            \/\/  33$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGOSDLR	src/arch/arm/miscregs.hh	/^        MISCREG_DBGOSDLR,               \/\/  66$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGOSECCR	src/arch/arm/miscregs.hh	/^        MISCREG_DBGOSECCR,              \/\/  40$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGOSLAR	src/arch/arm/miscregs.hh	/^        MISCREG_DBGOSLAR,               \/\/  64$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGOSLSR	src/arch/arm/miscregs.hh	/^        MISCREG_DBGOSLSR,               \/\/  65$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGPRCR	src/arch/arm/miscregs.hh	/^        MISCREG_DBGPRCR,                \/\/  67$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGPRCR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_DBGPRCR_EL1,            \/\/ 354$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGVCR	src/arch/arm/miscregs.hh	/^        MISCREG_DBGVCR,                 \/\/  36$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGVCR32_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_DBGVCR32_EL2,           \/\/ 349$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGWCR0	src/arch/arm/miscregs.hh	/^        MISCREG_DBGWCR0,                \/\/  57$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGWCR0_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_DBGWCR0_EL1,            \/\/ 341$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGWCR1	src/arch/arm/miscregs.hh	/^        MISCREG_DBGWCR1,                \/\/  58$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGWCR1_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_DBGWCR1_EL1,            \/\/ 342$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGWCR2	src/arch/arm/miscregs.hh	/^        MISCREG_DBGWCR2,                \/\/  59$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGWCR2_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_DBGWCR2_EL1,            \/\/ 343$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGWCR3	src/arch/arm/miscregs.hh	/^        MISCREG_DBGWCR3,                \/\/  60$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGWCR3_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_DBGWCR3_EL1,            \/\/ 344$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGWFAR	src/arch/arm/miscregs.hh	/^        MISCREG_DBGWFAR,                \/\/  35$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGWVR0	src/arch/arm/miscregs.hh	/^        MISCREG_DBGWVR0,                \/\/  53$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGWVR0_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_DBGWVR0_EL1,            \/\/ 337$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGWVR1	src/arch/arm/miscregs.hh	/^        MISCREG_DBGWVR1,                \/\/  54$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGWVR1_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_DBGWVR1_EL1,            \/\/ 338$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGWVR2	src/arch/arm/miscregs.hh	/^        MISCREG_DBGWVR2,                \/\/  55$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGWVR2_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_DBGWVR2_EL1,            \/\/ 339$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGWVR3	src/arch/arm/miscregs.hh	/^        MISCREG_DBGWVR3,                \/\/  56$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DBGWVR3_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_DBGWVR3_EL1,            \/\/ 340$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DCCIMVAC	src/arch/arm/miscregs.hh	/^        MISCREG_DCCIMVAC,               \/\/ 188$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DCCISW	src/arch/arm/miscregs.hh	/^        MISCREG_DCCISW,                 \/\/ 189$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DCCMVAC	src/arch/arm/miscregs.hh	/^        MISCREG_DCCMVAC,                \/\/ 183$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DCCMVAU	src/arch/arm/miscregs.hh	/^        MISCREG_DCCMVAU,                \/\/ 187$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DCCSW	src/arch/arm/miscregs.hh	/^        MISCREG_DCCSW,                  \/\/ 184$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DCIMVAC	src/arch/arm/miscregs.hh	/^        MISCREG_DCIMVAC,                \/\/ 173$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DCISW	src/arch/arm/miscregs.hh	/^        MISCREG_DCISW,                  \/\/ 174$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DCZID_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_DCZID_EL0,              \/\/ 395$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DC_CISW_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_DC_CISW_Xt,             \/\/ 470$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DC_CIVAC_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_DC_CIVAC_Xt,            \/\/ 475$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DC_CSW_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_DC_CSW_Xt,              \/\/ 469$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DC_CVAC_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_DC_CVAC_Xt,             \/\/ 473$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DC_CVAU_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_DC_CVAU_Xt,             \/\/ 474$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DC_ISW_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_DC_ISW_Xt,              \/\/ 464$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DC_IVAC_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_DC_IVAC_Xt,             \/\/ 463$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DC_ZVA_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_DC_ZVA_Xt,              \/\/ 471$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DEBUG	src/arch/mips/registers.hh	/^    MISCREG_DEBUG = 184,       \/\/Bank 23: 184-191$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_DEBUG_CTL_MSR	src/arch/x86/regs/misc.hh	/^        MISCREG_DEBUG_CTL_MSR,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_DEF_TYPE	src/arch/x86/regs/misc.hh	/^        MISCREG_DEF_TYPE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_DEPC	src/arch/mips/registers.hh	/^    MISCREG_DEPC = 192,        \/\/Bank 24: 192-199$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_DESAVE	src/arch/mips/registers.hh	/^    MISCREG_DESAVE = 248,       \/\/Bank 31: 248-256$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_DFAR	src/arch/arm/miscregs.hh	/^        MISCREG_DFAR,                   \/\/ 154$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DFAR_NS	src/arch/arm/miscregs.hh	/^        MISCREG_DFAR_NS,                \/\/ 155$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DFAR_S	src/arch/arm/miscregs.hh	/^        MISCREG_DFAR_S,                 \/\/ 156$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DFSR	src/arch/arm/miscregs.hh	/^        MISCREG_DFSR,                   \/\/ 139$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DFSR_NS	src/arch/arm/miscregs.hh	/^        MISCREG_DFSR_NS,                \/\/ 140$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DFSR_S	src/arch/arm/miscregs.hh	/^        MISCREG_DFSR_S,                 \/\/ 141$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DL1DATA0	src/arch/arm/miscregs.hh	/^        MISCREG_DL1DATA0,               \/\/ 300$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DL1DATA0_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_DL1DATA0_EL1,           \/\/ 588$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DL1DATA1	src/arch/arm/miscregs.hh	/^        MISCREG_DL1DATA1,               \/\/ 301$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DL1DATA1_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_DL1DATA1_EL1,           \/\/ 589$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DL1DATA2	src/arch/arm/miscregs.hh	/^        MISCREG_DL1DATA2,               \/\/ 302$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DL1DATA2_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_DL1DATA2_EL1,           \/\/ 590$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DL1DATA3	src/arch/arm/miscregs.hh	/^        MISCREG_DL1DATA3,               \/\/ 303$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DL1DATA3_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_DL1DATA3_EL1,           \/\/ 591$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DL1DATA4	src/arch/arm/miscregs.hh	/^        MISCREG_DL1DATA4,               \/\/ 304$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DL1DATA4_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_DL1DATA4_EL1,           \/\/ 592$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DLR_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_DLR_EL0,                \/\/ 434$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DR	src/arch/x86/regs/misc.hh	/^    MISCREG_DR(int index)$/;"	f	namespace:X86ISA
MISCREG_DR0	src/arch/x86/regs/misc.hh	/^        MISCREG_DR0 = MISCREG_DR_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_DR1	src/arch/x86/regs/misc.hh	/^        MISCREG_DR1,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_DR2	src/arch/x86/regs/misc.hh	/^        MISCREG_DR2,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_DR3	src/arch/x86/regs/misc.hh	/^        MISCREG_DR3,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_DR4	src/arch/x86/regs/misc.hh	/^        MISCREG_DR4,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_DR5	src/arch/x86/regs/misc.hh	/^        MISCREG_DR5,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_DR6	src/arch/x86/regs/misc.hh	/^        MISCREG_DR6,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_DR7	src/arch/x86/regs/misc.hh	/^        MISCREG_DR7,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_DR_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_DR_BASE = MISCREG_CR_BASE + NumCRegs,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_DS	src/arch/x86/regs/misc.hh	/^        MISCREG_DS,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_DSPSR_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_DSPSR_EL0,              \/\/ 433$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DS_ATTR	src/arch/x86/regs/misc.hh	/^        MISCREG_DS_ATTR,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_DS_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_DS_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_DS_EFF_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_DS_EFF_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_DS_LIMIT	src/arch/x86/regs/misc.hh	/^        MISCREG_DS_LIMIT,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_DTLBIALL	src/arch/arm/miscregs.hh	/^        MISCREG_DTLBIALL,               \/\/ 201$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DTLBIASID	src/arch/arm/miscregs.hh	/^        MISCREG_DTLBIASID,              \/\/ 203$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_DTLBIMVA	src/arch/arm/miscregs.hh	/^        MISCREG_DTLBIMVA,               \/\/ 202$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_EBASE	src/arch/mips/registers.hh	/^    MISCREG_EBASE,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_EFER	src/arch/x86/regs/misc.hh	/^        MISCREG_EFER = MISCREG_MC_MISC_END,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_ELR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_ELR_EL1,                \/\/ 425$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ELR_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_ELR_EL2,                \/\/ 436$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ELR_EL3	src/arch/arm/miscregs.hh	/^        MISCREG_ELR_EL3,                \/\/ 443$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ELR_HYP	src/arch/arm/miscregs.hh	/^        MISCREG_ELR_HYP,                \/\/   9$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ENTRYHI	src/arch/mips/registers.hh	/^    MISCREG_ENTRYHI = 80,        \/\/Bank 10: 80-87$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_ENTRYLO0	src/arch/mips/registers.hh	/^    MISCREG_ENTRYLO0 = 16,   \/\/Bank 2: 16 - 23$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_ENTRYLO1	src/arch/mips/registers.hh	/^    MISCREG_ENTRYLO1 = 24,   \/\/ Bank 3: 24$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_EPC	src/arch/mips/registers.hh	/^    MISCREG_EPC = 112,           \/\/Bank 14: 112-119$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_ERRCTL	src/arch/mips/registers.hh	/^    MISCREG_ERRCTL = 208,      \/\/Bank 26: 208-215$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_ERROR_EPC	src/arch/mips/registers.hh	/^    MISCREG_ERROR_EPC = 240,    \/\/Bank 30: 240-247$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_ES	src/arch/x86/regs/misc.hh	/^        MISCREG_ES = MISCREG_SEG_SEL_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_ESR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_ESR_EL1,                \/\/ 447$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ESR_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_ESR_EL2,                \/\/ 451$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ESR_EL3	src/arch/arm/miscregs.hh	/^        MISCREG_ESR_EL3,                \/\/ 455$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ES_ATTR	src/arch/x86/regs/misc.hh	/^        MISCREG_ES_ATTR = MISCREG_SEG_ATTR_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_ES_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_ES_BASE = MISCREG_SEG_BASE_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_ES_EFF_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_ES_EFF_BASE = MISCREG_SEG_EFF_BASE_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_ES_LIMIT	src/arch/x86/regs/misc.hh	/^        MISCREG_ES_LIMIT = MISCREG_SEG_LIMIT_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_FAR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_FAR_EL1,                \/\/ 456$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_FAR_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_FAR_EL2,                \/\/ 457$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_FAR_EL3	src/arch/arm/miscregs.hh	/^        MISCREG_FAR_EL3,                \/\/ 459$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_FCSEIDR	src/arch/arm/miscregs.hh	/^        MISCREG_FCSEIDR,                \/\/ 269$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_FCW	src/arch/x86/regs/misc.hh	/^        MISCREG_FCW,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_FIOFF	src/arch/x86/regs/misc.hh	/^        MISCREG_FIOFF,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_FISEG	src/arch/x86/regs/misc.hh	/^        MISCREG_FISEG,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_FOOFF	src/arch/x86/regs/misc.hh	/^        MISCREG_FOOFF,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_FOP	src/arch/x86/regs/misc.hh	/^        MISCREG_FOP,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_FOSEG	src/arch/x86/regs/misc.hh	/^        MISCREG_FOSEG,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_FPCR	src/arch/alpha/registers.hh	/^    MISCREG_FPCR = NumInternalProcRegs,$/;"	e	enum:AlphaISA::MiscRegIndex
MISCREG_FPCR	src/arch/arm/miscregs.hh	/^        MISCREG_FPCR,                   \/\/ 431$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_FPEXC	src/arch/arm/miscregs.hh	/^        MISCREG_FPEXC,                  \/\/  14$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_FPEXC32_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_FPEXC32_EL2,            \/\/ 452$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_FPRS	src/arch/sparc/miscregs.hh	/^    MISCREG_FPRS,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_FPSCR	src/arch/arm/miscregs.hh	/^        MISCREG_FPSCR,                  \/\/  11$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_FPSCR_EXC	src/arch/arm/miscregs.hh	/^        MISCREG_FPSCR_EXC,              \/\/  17$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_FPSCR_QC	src/arch/arm/miscregs.hh	/^        MISCREG_FPSCR_QC,               \/\/  18$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_FPSID	src/arch/arm/miscregs.hh	/^        MISCREG_FPSID,                  \/\/  10$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_FPSR	src/arch/arm/miscregs.hh	/^        MISCREG_FPSR,                   \/\/ 432$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_FS	src/arch/x86/regs/misc.hh	/^        MISCREG_FS,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_FSR	src/arch/sparc/miscregs.hh	/^    MISCREG_FSR,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_FSW	src/arch/x86/regs/misc.hh	/^        MISCREG_FSW,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_FS_ATTR	src/arch/x86/regs/misc.hh	/^        MISCREG_FS_ATTR,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_FS_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_FS_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_FS_EFF_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_FS_EFF_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_FS_LIMIT	src/arch/x86/regs/misc.hh	/^        MISCREG_FS_LIMIT,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_FTAG	src/arch/x86/regs/misc.hh	/^        MISCREG_FTAG,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_FTW	src/arch/x86/regs/misc.hh	/^        MISCREG_FTW,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_GL	src/arch/sparc/miscregs.hh	/^    MISCREG_GL,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_GS	src/arch/x86/regs/misc.hh	/^        MISCREG_GS,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_GSR	src/arch/sparc/miscregs.hh	/^    MISCREG_GSR,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_GS_ATTR	src/arch/x86/regs/misc.hh	/^        MISCREG_GS_ATTR,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_GS_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_GS_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_GS_EFF_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_GS_EFF_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_GS_LIMIT	src/arch/x86/regs/misc.hh	/^        MISCREG_GS_LIMIT,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_HACR	src/arch/arm/miscregs.hh	/^        MISCREG_HACR,                   \/\/ 124$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_HACR_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_HACR_EL2,               \/\/ 407$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_HACTLR	src/arch/arm/miscregs.hh	/^        MISCREG_HACTLR,                 \/\/ 119$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_HADFSR	src/arch/arm/miscregs.hh	/^        MISCREG_HADFSR,                 \/\/ 151$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_HAIFSR	src/arch/arm/miscregs.hh	/^        MISCREG_HAIFSR,                 \/\/ 152$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_HAMAIR0	src/arch/arm/miscregs.hh	/^        MISCREG_HAMAIR0,                \/\/ 260$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_HAMAIR1	src/arch/arm/miscregs.hh	/^        MISCREG_HAMAIR1,                \/\/ 261$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_HCPTR	src/arch/arm/miscregs.hh	/^        MISCREG_HCPTR,                  \/\/ 122$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_HCR	src/arch/arm/miscregs.hh	/^        MISCREG_HCR,                    \/\/ 120$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_HCR_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_HCR_EL2,                \/\/ 403$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_HDCR	src/arch/arm/miscregs.hh	/^        MISCREG_HDCR,                   \/\/ 121$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_HDFAR	src/arch/arm/miscregs.hh	/^        MISCREG_HDFAR,                  \/\/ 160$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_HIFAR	src/arch/arm/miscregs.hh	/^        MISCREG_HIFAR,                  \/\/ 161$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_HINTP	src/arch/sparc/miscregs.hh	/^    MISCREG_HINTP,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_HMAIR0	src/arch/arm/miscregs.hh	/^        MISCREG_HMAIR0,                 \/\/ 258$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_HMAIR1	src/arch/arm/miscregs.hh	/^        MISCREG_HMAIR1,                 \/\/ 259$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_HPFAR	src/arch/arm/miscregs.hh	/^        MISCREG_HPFAR,                  \/\/ 162$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_HPFAR_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_HPFAR_EL2,              \/\/ 458$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_HPSTATE	src/arch/sparc/miscregs.hh	/^    MISCREG_HPSTATE, \/* 30 *\/$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_HS	src/arch/x86/regs/misc.hh	/^        MISCREG_HS,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_HSCTLR	src/arch/arm/miscregs.hh	/^        MISCREG_HSCTLR,                 \/\/ 118$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_HSR	src/arch/arm/miscregs.hh	/^        MISCREG_HSR,                    \/\/ 153$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_HSTICK_CMPR	src/arch/sparc/miscregs.hh	/^    MISCREG_HSTICK_CMPR,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_HSTR	src/arch/arm/miscregs.hh	/^        MISCREG_HSTR,                   \/\/ 123$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_HSTR_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_HSTR_EL2,               \/\/ 406$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_HS_ATTR	src/arch/x86/regs/misc.hh	/^        MISCREG_HS_ATTR,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_HS_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_HS_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_HS_EFF_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_HS_EFF_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_HS_LIMIT	src/arch/x86/regs/misc.hh	/^        MISCREG_HS_LIMIT,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_HTBA	src/arch/sparc/miscregs.hh	/^    MISCREG_HTBA,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_HTCR	src/arch/arm/miscregs.hh	/^        MISCREG_HTCR,                   \/\/ 134$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_HTPIDR	src/arch/arm/miscregs.hh	/^        MISCREG_HTPIDR,                 \/\/ 282$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_HTSTATE	src/arch/sparc/miscregs.hh	/^    MISCREG_HTSTATE,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_HTTBR	src/arch/arm/miscregs.hh	/^        MISCREG_HTTBR,                  \/\/ 308$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_HVBAR	src/arch/arm/miscregs.hh	/^        MISCREG_HVBAR,                  \/\/ 268$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_HVER	src/arch/sparc/miscregs.hh	/^    MISCREG_HVER,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_HWRENA	src/arch/mips/registers.hh	/^    MISCREG_HWRENA = 56,         \/\/Bank 7: 56-63$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_HYP_RD	src/arch/arm/miscregs.hh	/^        MISCREG_HYP_RD,$/;"	e	enum:ArmISA::MiscRegInfo
MISCREG_HYP_WR	src/arch/arm/miscregs.hh	/^        MISCREG_HYP_WR,$/;"	e	enum:ArmISA::MiscRegInfo
MISCREG_ICIALLU	src/arch/arm/miscregs.hh	/^        MISCREG_ICIALLU,                \/\/ 168$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ICIALLUIS	src/arch/arm/miscregs.hh	/^        MISCREG_ICIALLUIS,              \/\/ 163$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ICIMVAU	src/arch/arm/miscregs.hh	/^        MISCREG_ICIMVAU,                \/\/ 169$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_IC_IALLU	src/arch/arm/miscregs.hh	/^        MISCREG_IC_IALLU,               \/\/ 462$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_IC_IALLUIS	src/arch/arm/miscregs.hh	/^        MISCREG_IC_IALLUIS,             \/\/ 460$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_IC_IVAU_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_IC_IVAU_Xt,             \/\/ 472$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_IDTR	src/arch/x86/regs/misc.hh	/^        MISCREG_IDTR,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_IDTR_ATTR	src/arch/x86/regs/misc.hh	/^        MISCREG_IDTR_ATTR,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_IDTR_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_IDTR_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_IDTR_EFF_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_IDTR_EFF_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_IDTR_LIMIT	src/arch/x86/regs/misc.hh	/^        MISCREG_IDTR_LIMIT,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_ID_AA64AFR0_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_ID_AA64AFR0_EL1,        \/\/ 384$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_AA64AFR1_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_ID_AA64AFR1_EL1,        \/\/ 385$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_AA64DFR0_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_ID_AA64DFR0_EL1,        \/\/ 382$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_AA64DFR1_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_ID_AA64DFR1_EL1,        \/\/ 383$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_AA64ISAR0_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_ID_AA64ISAR0_EL1,       \/\/ 386$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_AA64ISAR1_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_ID_AA64ISAR1_EL1,       \/\/ 387$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_AA64MMFR0_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_ID_AA64MMFR0_EL1,       \/\/ 388$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_AA64MMFR1_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_ID_AA64MMFR1_EL1,       \/\/ 389$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_AA64PFR0_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_ID_AA64PFR0_EL1,        \/\/ 380$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_AA64PFR1_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_ID_AA64PFR1_EL1,        \/\/ 381$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_AFR0	src/arch/arm/miscregs.hh	/^        MISCREG_ID_AFR0,                \/\/  89$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_AFR0_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_ID_AFR0_EL1,            \/\/ 366$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_DFR0	src/arch/arm/miscregs.hh	/^        MISCREG_ID_DFR0,                \/\/  88$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_DFR0_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_ID_DFR0_EL1,            \/\/ 365$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_ISAR0	src/arch/arm/miscregs.hh	/^        MISCREG_ID_ISAR0,               \/\/  94$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_ISAR0_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_ID_ISAR0_EL1,           \/\/ 371$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_ISAR1	src/arch/arm/miscregs.hh	/^        MISCREG_ID_ISAR1,               \/\/  95$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_ISAR1_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_ID_ISAR1_EL1,           \/\/ 372$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_ISAR2	src/arch/arm/miscregs.hh	/^        MISCREG_ID_ISAR2,               \/\/  96$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_ISAR2_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_ID_ISAR2_EL1,           \/\/ 373$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_ISAR3	src/arch/arm/miscregs.hh	/^        MISCREG_ID_ISAR3,               \/\/  97$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_ISAR3_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_ID_ISAR3_EL1,           \/\/ 374$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_ISAR4	src/arch/arm/miscregs.hh	/^        MISCREG_ID_ISAR4,               \/\/  98$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_ISAR4_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_ID_ISAR4_EL1,           \/\/ 375$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_ISAR5	src/arch/arm/miscregs.hh	/^        MISCREG_ID_ISAR5,               \/\/  99$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_ISAR5_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_ID_ISAR5_EL1,           \/\/ 376$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_MMFR0	src/arch/arm/miscregs.hh	/^        MISCREG_ID_MMFR0,               \/\/  90$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_MMFR0_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_ID_MMFR0_EL1,           \/\/ 367$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_MMFR1	src/arch/arm/miscregs.hh	/^        MISCREG_ID_MMFR1,               \/\/  91$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_MMFR1_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_ID_MMFR1_EL1,           \/\/ 368$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_MMFR2	src/arch/arm/miscregs.hh	/^        MISCREG_ID_MMFR2,               \/\/  92$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_MMFR2_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_ID_MMFR2_EL1,           \/\/ 369$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_MMFR3	src/arch/arm/miscregs.hh	/^        MISCREG_ID_MMFR3,               \/\/  93$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_MMFR3_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_ID_MMFR3_EL1,           \/\/ 370$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_PFR0	src/arch/arm/miscregs.hh	/^        MISCREG_ID_PFR0,                \/\/  86$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_PFR0_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_ID_PFR0_EL1,            \/\/ 363$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_PFR1	src/arch/arm/miscregs.hh	/^        MISCREG_ID_PFR1,                \/\/  87$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ID_PFR1_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_ID_PFR1_EL1,            \/\/ 364$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_IFAR	src/arch/arm/miscregs.hh	/^        MISCREG_IFAR,                   \/\/ 157$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_IFAR_NS	src/arch/arm/miscregs.hh	/^        MISCREG_IFAR_NS,                \/\/ 158$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_IFAR_S	src/arch/arm/miscregs.hh	/^        MISCREG_IFAR_S,                 \/\/ 159$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_IFSR	src/arch/arm/miscregs.hh	/^        MISCREG_IFSR,                   \/\/ 142$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_IFSR32_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_IFSR32_EL2,             \/\/ 448$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_IFSR_NS	src/arch/arm/miscregs.hh	/^        MISCREG_IFSR_NS,                \/\/ 143$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_IFSR_S	src/arch/arm/miscregs.hh	/^        MISCREG_IFSR_S,                 \/\/ 144$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_IGNNE	src/arch/x86/regs/misc.hh	/^        MISCREG_IGNNE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_IL1DATA0	src/arch/arm/miscregs.hh	/^        MISCREG_IL1DATA0,               \/\/ 296$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_IL1DATA0_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_IL1DATA0_EL1,           \/\/ 584$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_IL1DATA1	src/arch/arm/miscregs.hh	/^        MISCREG_IL1DATA1,               \/\/ 297$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_IL1DATA1_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_IL1DATA1_EL1,           \/\/ 585$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_IL1DATA2	src/arch/arm/miscregs.hh	/^        MISCREG_IL1DATA2,               \/\/ 298$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_IL1DATA2_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_IL1DATA2_EL1,           \/\/ 586$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_IL1DATA3	src/arch/arm/miscregs.hh	/^        MISCREG_IL1DATA3,               \/\/ 299$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_IL1DATA3_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_IL1DATA3_EL1,           \/\/ 587$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_IMPLEMENTED	src/arch/arm/miscregs.hh	/^        MISCREG_IMPLEMENTED,$/;"	e	enum:ArmISA::MiscRegInfo
MISCREG_INDEX	src/arch/mips/registers.hh	/^    MISCREG_INDEX = 0,       \/\/Bank 0: 0 - 3$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_INTCTL	src/arch/mips/registers.hh	/^    MISCREG_INTCTL,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_INTR	src/arch/alpha/registers.hh	/^    MISCREG_INTR,$/;"	e	enum:AlphaISA::MiscRegIndex
MISCREG_IORR_BASE	src/arch/x86/regs/misc.hh	/^    MISCREG_IORR_BASE(int index)$/;"	f	namespace:X86ISA
MISCREG_IORR_BASE0	src/arch/x86/regs/misc.hh	/^        MISCREG_IORR_BASE0 = MISCREG_IORR_BASE_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_IORR_BASE1	src/arch/x86/regs/misc.hh	/^        MISCREG_IORR_BASE1,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_IORR_BASE_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_IORR_BASE_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_IORR_BASE_END	src/arch/x86/regs/misc.hh	/^        MISCREG_IORR_BASE_END,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_IORR_MASK	src/arch/x86/regs/misc.hh	/^    MISCREG_IORR_MASK(int index)$/;"	f	namespace:X86ISA
MISCREG_IORR_MASK0	src/arch/x86/regs/misc.hh	/^        MISCREG_IORR_MASK0 = MISCREG_IORR_MASK_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_IORR_MASK1	src/arch/x86/regs/misc.hh	/^        MISCREG_IORR_MASK1,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_IORR_MASK_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_IORR_MASK_BASE = MISCREG_IORR_BASE_END,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_IORR_MASK_END	src/arch/x86/regs/misc.hh	/^        MISCREG_IORR_MASK_END,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_ISR	src/arch/arm/miscregs.hh	/^        MISCREG_ISR,                    \/\/ 267$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ISR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_ISR_EL1,                \/\/ 542$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ITLBIALL	src/arch/arm/miscregs.hh	/^        MISCREG_ITLBIALL,               \/\/ 198$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ITLBIASID	src/arch/arm/miscregs.hh	/^        MISCREG_ITLBIASID,              \/\/ 200$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_ITLBIMVA	src/arch/arm/miscregs.hh	/^        MISCREG_ITLBIMVA,               \/\/ 199$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_JIDR	src/arch/arm/miscregs.hh	/^        MISCREG_JIDR,                   \/\/  76$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_JMCR	src/arch/arm/miscregs.hh	/^        MISCREG_JMCR,                   \/\/  79$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_JOSCR	src/arch/arm/miscregs.hh	/^        MISCREG_JOSCR,                  \/\/  78$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_KERNEL_GS_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_KERNEL_GS_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_L2ACTLR	src/arch/arm/miscregs.hh	/^        MISCREG_L2ACTLR,                \/\/ 306$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_L2ACTLR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_L2ACTLR_EL1,            \/\/ 593$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_L2CTLR	src/arch/arm/miscregs.hh	/^        MISCREG_L2CTLR,                 \/\/ 238$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_L2CTLR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_L2CTLR_EL1,             \/\/ 538$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_L2ECTLR	src/arch/arm/miscregs.hh	/^        MISCREG_L2ECTLR,                \/\/ 239$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_L2ECTLR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_L2ECTLR_EL1,            \/\/ 539$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_L2MERRSR	src/arch/arm/miscregs.hh	/^        MISCREG_L2MERRSR,               \/\/ 319$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_L2MERRSR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_L2MERRSR_EL1,           \/\/ 597$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_LAST_BRANCH_FROM_IP	src/arch/x86/regs/misc.hh	/^        MISCREG_LAST_BRANCH_FROM_IP,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_LAST_BRANCH_TO_IP	src/arch/x86/regs/misc.hh	/^        MISCREG_LAST_BRANCH_TO_IP,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_LAST_EXCEPTION_FROM_IP	src/arch/x86/regs/misc.hh	/^        MISCREG_LAST_EXCEPTION_FROM_IP,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_LAST_EXCEPTION_TO_IP	src/arch/x86/regs/misc.hh	/^        MISCREG_LAST_EXCEPTION_TO_IP,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_LLADDR	src/arch/mips/registers.hh	/^    MISCREG_LLADDR = 136,        \/\/Bank 17: 136-143$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_LLFLAG	src/arch/mips/registers.hh	/^    MISCREG_LLFLAG = 257,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_LOCKADDR	src/arch/alpha/registers.hh	/^    MISCREG_LOCKADDR,$/;"	e	enum:AlphaISA::MiscRegIndex
MISCREG_LOCKADDR	src/arch/arm/miscregs.hh	/^        MISCREG_LOCKADDR,               \/\/  19$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_LOCKFLAG	src/arch/alpha/registers.hh	/^    MISCREG_LOCKFLAG,$/;"	e	enum:AlphaISA::MiscRegIndex
MISCREG_LOCKFLAG	src/arch/arm/miscregs.hh	/^        MISCREG_LOCKFLAG,               \/\/  20$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_LS	src/arch/x86/regs/misc.hh	/^        MISCREG_LS,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_LSTAR	src/arch/x86/regs/misc.hh	/^        MISCREG_LSTAR,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_LS_ATTR	src/arch/x86/regs/misc.hh	/^        MISCREG_LS_ATTR,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_LS_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_LS_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_LS_EFF_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_LS_EFF_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_LS_LIMIT	src/arch/x86/regs/misc.hh	/^        MISCREG_LS_LIMIT,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_M5_REG	src/arch/x86/regs/misc.hh	/^        MISCREG_M5_REG,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MAIR0	src/arch/arm/miscregs.hh	/^        MISCREG_MAIR0,                  \/\/ 243$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_MAIR0_NS	src/arch/arm/miscregs.hh	/^        MISCREG_MAIR0_NS,               \/\/ 244$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_MAIR0_S	src/arch/arm/miscregs.hh	/^        MISCREG_MAIR0_S,                \/\/ 245$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_MAIR1	src/arch/arm/miscregs.hh	/^        MISCREG_MAIR1,                  \/\/ 249$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_MAIR1_NS	src/arch/arm/miscregs.hh	/^        MISCREG_MAIR1_NS,               \/\/ 250$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_MAIR1_S	src/arch/arm/miscregs.hh	/^        MISCREG_MAIR1_S,                \/\/ 251$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_MAIR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_MAIR_EL1,               \/\/ 532$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_MAIR_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_MAIR_EL2,               \/\/ 534$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_MAIR_EL3	src/arch/arm/miscregs.hh	/^        MISCREG_MAIR_EL3,               \/\/ 536$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_MC0_ADDR	src/arch/x86/regs/misc.hh	/^        MISCREG_MC0_ADDR = MISCREG_MC_ADDR_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC0_CTL	src/arch/x86/regs/misc.hh	/^        MISCREG_MC0_CTL = MISCREG_MC_CTL_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC0_MISC	src/arch/x86/regs/misc.hh	/^        MISCREG_MC0_MISC = MISCREG_MC_MISC_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC0_STATUS	src/arch/x86/regs/misc.hh	/^        MISCREG_MC0_STATUS = MISCREG_MC_STATUS_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC1_ADDR	src/arch/x86/regs/misc.hh	/^        MISCREG_MC1_ADDR,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC1_CTL	src/arch/x86/regs/misc.hh	/^        MISCREG_MC1_CTL,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC1_MISC	src/arch/x86/regs/misc.hh	/^        MISCREG_MC1_MISC,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC1_STATUS	src/arch/x86/regs/misc.hh	/^        MISCREG_MC1_STATUS,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC2_ADDR	src/arch/x86/regs/misc.hh	/^        MISCREG_MC2_ADDR,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC2_CTL	src/arch/x86/regs/misc.hh	/^        MISCREG_MC2_CTL,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC2_MISC	src/arch/x86/regs/misc.hh	/^        MISCREG_MC2_MISC,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC2_STATUS	src/arch/x86/regs/misc.hh	/^        MISCREG_MC2_STATUS,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC3_ADDR	src/arch/x86/regs/misc.hh	/^        MISCREG_MC3_ADDR,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC3_CTL	src/arch/x86/regs/misc.hh	/^        MISCREG_MC3_CTL,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC3_MISC	src/arch/x86/regs/misc.hh	/^        MISCREG_MC3_MISC,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC3_STATUS	src/arch/x86/regs/misc.hh	/^        MISCREG_MC3_STATUS,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC4_ADDR	src/arch/x86/regs/misc.hh	/^        MISCREG_MC4_ADDR,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC4_CTL	src/arch/x86/regs/misc.hh	/^        MISCREG_MC4_CTL,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC4_MISC	src/arch/x86/regs/misc.hh	/^        MISCREG_MC4_MISC,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC4_STATUS	src/arch/x86/regs/misc.hh	/^        MISCREG_MC4_STATUS,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC5_ADDR	src/arch/x86/regs/misc.hh	/^        MISCREG_MC5_ADDR,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC5_CTL	src/arch/x86/regs/misc.hh	/^        MISCREG_MC5_CTL,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC5_MISC	src/arch/x86/regs/misc.hh	/^        MISCREG_MC5_MISC,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC5_STATUS	src/arch/x86/regs/misc.hh	/^        MISCREG_MC5_STATUS,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC6_ADDR	src/arch/x86/regs/misc.hh	/^        MISCREG_MC6_ADDR,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC6_CTL	src/arch/x86/regs/misc.hh	/^        MISCREG_MC6_CTL,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC6_MISC	src/arch/x86/regs/misc.hh	/^        MISCREG_MC6_MISC,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC6_STATUS	src/arch/x86/regs/misc.hh	/^        MISCREG_MC6_STATUS,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC7_ADDR	src/arch/x86/regs/misc.hh	/^        MISCREG_MC7_ADDR,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC7_CTL	src/arch/x86/regs/misc.hh	/^        MISCREG_MC7_CTL,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC7_MISC	src/arch/x86/regs/misc.hh	/^        MISCREG_MC7_MISC,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC7_STATUS	src/arch/x86/regs/misc.hh	/^        MISCREG_MC7_STATUS,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MCG_CAP	src/arch/x86/regs/misc.hh	/^        MISCREG_MCG_CAP,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MCG_CTL	src/arch/x86/regs/misc.hh	/^        MISCREG_MCG_CTL,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MCG_STATUS	src/arch/x86/regs/misc.hh	/^        MISCREG_MCG_STATUS,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC_ADDR	src/arch/x86/regs/misc.hh	/^    MISCREG_MC_ADDR(int index)$/;"	f	namespace:X86ISA
MISCREG_MC_ADDR_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_MC_ADDR_BASE = MISCREG_MC_STATUS_END,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC_ADDR_END	src/arch/x86/regs/misc.hh	/^        MISCREG_MC_ADDR_END,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC_CTL	src/arch/x86/regs/misc.hh	/^    MISCREG_MC_CTL(int index)$/;"	f	namespace:X86ISA
MISCREG_MC_CTL_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_MC_CTL_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC_CTL_END	src/arch/x86/regs/misc.hh	/^        MISCREG_MC_CTL_END,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC_MISC	src/arch/x86/regs/misc.hh	/^    MISCREG_MC_MISC(int index)$/;"	f	namespace:X86ISA
MISCREG_MC_MISC_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_MC_MISC_BASE = MISCREG_MC_ADDR_END,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC_MISC_END	src/arch/x86/regs/misc.hh	/^        MISCREG_MC_MISC_END,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC_STATUS	src/arch/x86/regs/misc.hh	/^    MISCREG_MC_STATUS(int index)$/;"	f	namespace:X86ISA
MISCREG_MC_STATUS_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_MC_STATUS_BASE = MISCREG_MC_CTL_END,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MC_STATUS_END	src/arch/x86/regs/misc.hh	/^        MISCREG_MC_STATUS_END,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MDCCINT_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_MDCCINT_EL1,            \/\/ 320$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_MDCCSR_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_MDCCSR_EL0,             \/\/ 345$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_MDCR_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_MDCR_EL2,               \/\/ 404$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_MDCR_EL3	src/arch/arm/miscregs.hh	/^        MISCREG_MDCR_EL3,               \/\/ 413$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_MDDTRRX_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_MDDTRRX_EL0,            \/\/ 348$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_MDDTRTX_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_MDDTRTX_EL0,            \/\/ 347$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_MDDTR_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_MDDTR_EL0,              \/\/ 346$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_MDRAR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_MDRAR_EL1,              \/\/ 350$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_MDSCR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_MDSCR_EL1,              \/\/ 322$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_MIDR	src/arch/arm/miscregs.hh	/^        MISCREG_MIDR,                   \/\/  80$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_MIDR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_MIDR_EL1,               \/\/ 360$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_MMU_LSU_CTRL	src/arch/sparc/miscregs.hh	/^    MISCREG_MMU_LSU_CTRL,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_MMU_PART_ID	src/arch/sparc/miscregs.hh	/^    MISCREG_MMU_PART_ID,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_MMU_P_CONTEXT	src/arch/sparc/miscregs.hh	/^    MISCREG_MMU_P_CONTEXT,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_MMU_S_CONTEXT	src/arch/sparc/miscregs.hh	/^    MISCREG_MMU_S_CONTEXT, \/* 40 *\/$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_MON_NS0_RD	src/arch/arm/miscregs.hh	/^        MISCREG_MON_NS0_RD,$/;"	e	enum:ArmISA::MiscRegInfo
MISCREG_MON_NS0_WR	src/arch/arm/miscregs.hh	/^        MISCREG_MON_NS0_WR,$/;"	e	enum:ArmISA::MiscRegInfo
MISCREG_MON_NS1_RD	src/arch/arm/miscregs.hh	/^        MISCREG_MON_NS1_RD,$/;"	e	enum:ArmISA::MiscRegInfo
MISCREG_MON_NS1_WR	src/arch/arm/miscregs.hh	/^        MISCREG_MON_NS1_WR,$/;"	e	enum:ArmISA::MiscRegInfo
MISCREG_MPIDR	src/arch/arm/miscregs.hh	/^        MISCREG_MPIDR,                  \/\/  84$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_MPIDR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_MPIDR_EL1,              \/\/ 361$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_MS	src/arch/x86/regs/misc.hh	/^        MISCREG_MS,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MS_ATTR	src/arch/x86/regs/misc.hh	/^        MISCREG_MS_ATTR,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MS_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_MS_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MS_EFF_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_MS_EFF_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MS_LIMIT	src/arch/x86/regs/misc.hh	/^        MISCREG_MS_LIMIT,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MTRRCAP	src/arch/x86/regs/misc.hh	/^        MISCREG_MTRRCAP,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MTRR_FIX_16K_80000	src/arch/x86/regs/misc.hh	/^        MISCREG_MTRR_FIX_16K_80000,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MTRR_FIX_16K_A0000	src/arch/x86/regs/misc.hh	/^        MISCREG_MTRR_FIX_16K_A0000,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MTRR_FIX_4K_C0000	src/arch/x86/regs/misc.hh	/^        MISCREG_MTRR_FIX_4K_C0000,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MTRR_FIX_4K_C8000	src/arch/x86/regs/misc.hh	/^        MISCREG_MTRR_FIX_4K_C8000,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MTRR_FIX_4K_D0000	src/arch/x86/regs/misc.hh	/^        MISCREG_MTRR_FIX_4K_D0000,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MTRR_FIX_4K_D8000	src/arch/x86/regs/misc.hh	/^        MISCREG_MTRR_FIX_4K_D8000,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MTRR_FIX_4K_E0000	src/arch/x86/regs/misc.hh	/^        MISCREG_MTRR_FIX_4K_E0000,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MTRR_FIX_4K_E8000	src/arch/x86/regs/misc.hh	/^        MISCREG_MTRR_FIX_4K_E8000,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MTRR_FIX_4K_F0000	src/arch/x86/regs/misc.hh	/^        MISCREG_MTRR_FIX_4K_F0000,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MTRR_FIX_4K_F8000	src/arch/x86/regs/misc.hh	/^        MISCREG_MTRR_FIX_4K_F8000,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MTRR_FIX_64K_00000	src/arch/x86/regs/misc.hh	/^        MISCREG_MTRR_FIX_64K_00000 = MISCREG_MTRR_PHYS_MASK_END,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MTRR_PHYS_BASE	src/arch/x86/regs/misc.hh	/^    MISCREG_MTRR_PHYS_BASE(int index)$/;"	f	namespace:X86ISA
MISCREG_MTRR_PHYS_BASE_0	src/arch/x86/regs/misc.hh	/^        MISCREG_MTRR_PHYS_BASE_0 = MISCREG_MTRR_PHYS_BASE_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MTRR_PHYS_BASE_1	src/arch/x86/regs/misc.hh	/^        MISCREG_MTRR_PHYS_BASE_1,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MTRR_PHYS_BASE_2	src/arch/x86/regs/misc.hh	/^        MISCREG_MTRR_PHYS_BASE_2,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MTRR_PHYS_BASE_3	src/arch/x86/regs/misc.hh	/^        MISCREG_MTRR_PHYS_BASE_3,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MTRR_PHYS_BASE_4	src/arch/x86/regs/misc.hh	/^        MISCREG_MTRR_PHYS_BASE_4,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MTRR_PHYS_BASE_5	src/arch/x86/regs/misc.hh	/^        MISCREG_MTRR_PHYS_BASE_5,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MTRR_PHYS_BASE_6	src/arch/x86/regs/misc.hh	/^        MISCREG_MTRR_PHYS_BASE_6,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MTRR_PHYS_BASE_7	src/arch/x86/regs/misc.hh	/^        MISCREG_MTRR_PHYS_BASE_7,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MTRR_PHYS_BASE_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_MTRR_PHYS_BASE_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MTRR_PHYS_BASE_END	src/arch/x86/regs/misc.hh	/^        MISCREG_MTRR_PHYS_BASE_END,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MTRR_PHYS_MASK	src/arch/x86/regs/misc.hh	/^    MISCREG_MTRR_PHYS_MASK(int index)$/;"	f	namespace:X86ISA
MISCREG_MTRR_PHYS_MASK_0	src/arch/x86/regs/misc.hh	/^        MISCREG_MTRR_PHYS_MASK_0 = MISCREG_MTRR_PHYS_MASK_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MTRR_PHYS_MASK_1	src/arch/x86/regs/misc.hh	/^        MISCREG_MTRR_PHYS_MASK_1,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MTRR_PHYS_MASK_2	src/arch/x86/regs/misc.hh	/^        MISCREG_MTRR_PHYS_MASK_2,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MTRR_PHYS_MASK_3	src/arch/x86/regs/misc.hh	/^        MISCREG_MTRR_PHYS_MASK_3,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MTRR_PHYS_MASK_4	src/arch/x86/regs/misc.hh	/^        MISCREG_MTRR_PHYS_MASK_4,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MTRR_PHYS_MASK_5	src/arch/x86/regs/misc.hh	/^        MISCREG_MTRR_PHYS_MASK_5,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MTRR_PHYS_MASK_6	src/arch/x86/regs/misc.hh	/^        MISCREG_MTRR_PHYS_MASK_6,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MTRR_PHYS_MASK_7	src/arch/x86/regs/misc.hh	/^        MISCREG_MTRR_PHYS_MASK_7,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MTRR_PHYS_MASK_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_MTRR_PHYS_MASK_BASE = MISCREG_MTRR_PHYS_BASE_END,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MTRR_PHYS_MASK_END	src/arch/x86/regs/misc.hh	/^        MISCREG_MTRR_PHYS_MASK_END,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_MUTEX	src/arch/arm/miscregs.hh	/^        MISCREG_MUTEX,  \/\/ True if the register corresponds to a pair of$/;"	e	enum:ArmISA::MiscRegInfo
MISCREG_MVBAR	src/arch/arm/miscregs.hh	/^        MISCREG_MVBAR,                  \/\/ 265$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_MVFR0	src/arch/arm/miscregs.hh	/^        MISCREG_MVFR0,                  \/\/  13$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_MVFR0_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_MVFR0_EL1,              \/\/ 377$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_MVFR1	src/arch/arm/miscregs.hh	/^        MISCREG_MVFR1,                  \/\/  12$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_MVFR1_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_MVFR1_EL1,              \/\/ 378$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_MVFR2_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_MVFR2_EL1,              \/\/ 379$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_MVP_CONF0	src/arch/mips/registers.hh	/^    MISCREG_MVP_CONF0,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_MVP_CONF1	src/arch/mips/registers.hh	/^    MISCREG_MVP_CONF1,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_MVP_CONTROL	src/arch/mips/registers.hh	/^    MISCREG_MVP_CONTROL,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_MXCSR	src/arch/x86/regs/misc.hh	/^        MISCREG_MXCSR,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_NMRR	src/arch/arm/miscregs.hh	/^        MISCREG_NMRR,                   \/\/ 246$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_NMRR_MAIR1	src/arch/arm/miscregs.hh	/^        MISCREG_NMRR_MAIR1,             \/\/  24$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_NMRR_MAIR1_NS	src/arch/arm/miscregs.hh	/^        MISCREG_NMRR_MAIR1_NS,          \/\/  25$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_NMRR_MAIR1_S	src/arch/arm/miscregs.hh	/^        MISCREG_NMRR_MAIR1_S,           \/\/  26$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_NMRR_NS	src/arch/arm/miscregs.hh	/^        MISCREG_NMRR_NS,                \/\/ 247$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_NMRR_S	src/arch/arm/miscregs.hh	/^        MISCREG_NMRR_S,                 \/\/ 248$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_NOP	src/arch/arm/miscregs.hh	/^        MISCREG_NOP,                    \/\/ 599$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_NSACR	src/arch/arm/miscregs.hh	/^        MISCREG_NSACR,                  \/\/ 117$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_NUMMISCREGS	src/arch/sparc/miscregs.hh	/^    MISCREG_NUMMISCREGS$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_NUMREGS	src/arch/mips/registers.hh	/^    MISCREG_NUMREGS$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_NZCV	src/arch/arm/miscregs.hh	/^        MISCREG_NZCV,                   \/\/ 429$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_OSDLR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_OSDLR_EL1,              \/\/ 353$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_OSDTRRX_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_OSDTRRX_EL1,            \/\/ 321$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_OSDTRTX_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_OSDTRTX_EL1,            \/\/ 323$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_OSECCR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_OSECCR_EL1,             \/\/ 324$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_OSLAR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_OSLAR_EL1,              \/\/ 351$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_OSLSR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_OSLSR_EL1,              \/\/ 352$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PAGEGRAIN	src/arch/mips/registers.hh	/^    MISCREG_PAGEGRAIN = 41,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_PAGEMASK	src/arch/mips/registers.hh	/^    MISCREG_PAGEMASK = 40, \/\/Bank 5: 40 - 41$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_PAR	src/arch/arm/miscregs.hh	/^        MISCREG_PAR,                    \/\/ 165$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PAR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_PAR_EL1,                \/\/ 461$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PAR_NS	src/arch/arm/miscregs.hh	/^        MISCREG_PAR_NS,                 \/\/ 166$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PAR_S	src/arch/arm/miscregs.hh	/^        MISCREG_PAR_S,                  \/\/ 167$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PAT	src/arch/x86/regs/misc.hh	/^        MISCREG_PAT,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_PCI_CONFIG_ADDRESS	src/arch/x86/regs/misc.hh	/^        MISCREG_PCI_CONFIG_ADDRESS,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_PCR	src/arch/sparc/miscregs.hh	/^    MISCREG_PCR,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_PERFCNT0	src/arch/mips/registers.hh	/^    MISCREG_PERFCNT0 = 200,    \/\/Bank 25: 200-207$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_PERFCNT1	src/arch/mips/registers.hh	/^    MISCREG_PERFCNT1,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_PERFCNT2	src/arch/mips/registers.hh	/^    MISCREG_PERFCNT2,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_PERFCNT3	src/arch/mips/registers.hh	/^    MISCREG_PERFCNT3,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_PERFCNT4	src/arch/mips/registers.hh	/^    MISCREG_PERFCNT4,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_PERFCNT5	src/arch/mips/registers.hh	/^    MISCREG_PERFCNT5,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_PERFCNT6	src/arch/mips/registers.hh	/^    MISCREG_PERFCNT6,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_PERFCNT7	src/arch/mips/registers.hh	/^    MISCREG_PERFCNT7,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_PERF_EVT_CTR	src/arch/x86/regs/misc.hh	/^    MISCREG_PERF_EVT_CTR(int index)$/;"	f	namespace:X86ISA
MISCREG_PERF_EVT_CTR0	src/arch/x86/regs/misc.hh	/^        MISCREG_PERF_EVT_CTR0 = MISCREG_PERF_EVT_CTR_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_PERF_EVT_CTR1	src/arch/x86/regs/misc.hh	/^        MISCREG_PERF_EVT_CTR1,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_PERF_EVT_CTR2	src/arch/x86/regs/misc.hh	/^        MISCREG_PERF_EVT_CTR2,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_PERF_EVT_CTR3	src/arch/x86/regs/misc.hh	/^        MISCREG_PERF_EVT_CTR3,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_PERF_EVT_CTR_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_PERF_EVT_CTR_BASE = MISCREG_PERF_EVT_SEL_END,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_PERF_EVT_CTR_END	src/arch/x86/regs/misc.hh	/^        MISCREG_PERF_EVT_CTR_END,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_PERF_EVT_SEL	src/arch/x86/regs/misc.hh	/^    MISCREG_PERF_EVT_SEL(int index)$/;"	f	namespace:X86ISA
MISCREG_PERF_EVT_SEL0	src/arch/x86/regs/misc.hh	/^        MISCREG_PERF_EVT_SEL0 = MISCREG_PERF_EVT_SEL_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_PERF_EVT_SEL1	src/arch/x86/regs/misc.hh	/^        MISCREG_PERF_EVT_SEL1,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_PERF_EVT_SEL2	src/arch/x86/regs/misc.hh	/^        MISCREG_PERF_EVT_SEL2,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_PERF_EVT_SEL3	src/arch/x86/regs/misc.hh	/^        MISCREG_PERF_EVT_SEL3,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_PERF_EVT_SEL_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_PERF_EVT_SEL_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_PERF_EVT_SEL_END	src/arch/x86/regs/misc.hh	/^        MISCREG_PERF_EVT_SEL_END,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_PIC	src/arch/sparc/miscregs.hh	/^    MISCREG_PIC,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_PIL	src/arch/sparc/miscregs.hh	/^    MISCREG_PIL,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_PMCCFILTR	src/arch/arm/miscregs.hh	/^        MISCREG_PMCCFILTR,              \/\/ 232$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMCCFILTR_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_PMCCFILTR_EL0,          \/\/ 528$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMCCNTR	src/arch/arm/miscregs.hh	/^        MISCREG_PMCCNTR,                \/\/ 230$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMCCNTR_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_PMCCNTR_EL0,            \/\/ 526$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMCEID0	src/arch/arm/miscregs.hh	/^        MISCREG_PMCEID0,                \/\/ 228$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMCEID0_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_PMCEID0_EL0,            \/\/ 524$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMCEID1	src/arch/arm/miscregs.hh	/^        MISCREG_PMCEID1,                \/\/ 229$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMCEID1_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_PMCEID1_EL0,            \/\/ 525$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMCNTENCLR	src/arch/arm/miscregs.hh	/^        MISCREG_PMCNTENCLR,             \/\/ 224$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMCNTENCLR_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_PMCNTENCLR_EL0,         \/\/ 520$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMCNTENSET	src/arch/arm/miscregs.hh	/^        MISCREG_PMCNTENSET,             \/\/ 223$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMCNTENSET_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_PMCNTENSET_EL0,         \/\/ 519$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMCR	src/arch/arm/miscregs.hh	/^        MISCREG_PMCR,                   \/\/ 222$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMCR_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_PMCR_EL0,               \/\/ 518$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMEVCNTR0_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_PMEVCNTR0_EL0,          \/\/ 564$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMEVCNTR1_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_PMEVCNTR1_EL0,          \/\/ 565$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMEVCNTR2_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_PMEVCNTR2_EL0,          \/\/ 566$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMEVCNTR3_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_PMEVCNTR3_EL0,          \/\/ 567$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMEVCNTR4_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_PMEVCNTR4_EL0,          \/\/ 568$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMEVCNTR5_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_PMEVCNTR5_EL0,          \/\/ 569$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMEVTYPER0_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_PMEVTYPER0_EL0,         \/\/ 570$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMEVTYPER1_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_PMEVTYPER1_EL0,         \/\/ 571$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMEVTYPER2_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_PMEVTYPER2_EL0,         \/\/ 572$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMEVTYPER3_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_PMEVTYPER3_EL0,         \/\/ 573$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMEVTYPER4_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_PMEVTYPER4_EL0,         \/\/ 574$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMEVTYPER5_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_PMEVTYPER5_EL0,         \/\/ 575$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMINTENCLR	src/arch/arm/miscregs.hh	/^        MISCREG_PMINTENCLR,             \/\/ 236$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMINTENCLR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_PMINTENCLR_EL1,         \/\/ 517$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMINTENSET	src/arch/arm/miscregs.hh	/^        MISCREG_PMINTENSET,             \/\/ 235$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMINTENSET_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_PMINTENSET_EL1,         \/\/ 516$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMOVSCLR_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_PMOVSCLR_EL0,           \/\/ 521$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMOVSR	src/arch/arm/miscregs.hh	/^        MISCREG_PMOVSR,                 \/\/ 225$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMOVSSET	src/arch/arm/miscregs.hh	/^        MISCREG_PMOVSSET,               \/\/ 237$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMOVSSET_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_PMOVSSET_EL0,           \/\/ 531$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMSELR	src/arch/arm/miscregs.hh	/^        MISCREG_PMSELR,                 \/\/ 227$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMSELR_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_PMSELR_EL0,             \/\/ 523$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMSWINC	src/arch/arm/miscregs.hh	/^        MISCREG_PMSWINC,                \/\/ 226$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMSWINC_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_PMSWINC_EL0,            \/\/ 522$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMUSERENR	src/arch/arm/miscregs.hh	/^        MISCREG_PMUSERENR,              \/\/ 234$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMUSERENR_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_PMUSERENR_EL0,          \/\/ 530$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMXEVCNTR	src/arch/arm/miscregs.hh	/^        MISCREG_PMXEVCNTR,              \/\/ 233$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMXEVCNTR_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_PMXEVCNTR_EL0,          \/\/ 529$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMXEVTYPER	src/arch/arm/miscregs.hh	/^        MISCREG_PMXEVTYPER,             \/\/ 231$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMXEVTYPER_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_PMXEVTYPER_EL0,         \/\/ 527$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PMXEVTYPER_PMCCFILTR	src/arch/arm/miscregs.hh	/^        MISCREG_PMXEVTYPER_PMCCFILTR,   \/\/  27$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PRID	src/arch/mips/registers.hh	/^    MISCREG_PRID = 120,          \/\/Bank 15: 120-127,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_PRIVTICK	src/arch/sparc/miscregs.hh	/^    MISCREG_PRIVTICK,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_PRI_NS_RD	src/arch/arm/miscregs.hh	/^        MISCREG_PRI_NS_RD,$/;"	e	enum:ArmISA::MiscRegInfo
MISCREG_PRI_NS_WR	src/arch/arm/miscregs.hh	/^        MISCREG_PRI_NS_WR,$/;"	e	enum:ArmISA::MiscRegInfo
MISCREG_PRI_S_RD	src/arch/arm/miscregs.hh	/^        MISCREG_PRI_S_RD,$/;"	e	enum:ArmISA::MiscRegInfo
MISCREG_PRI_S_WR	src/arch/arm/miscregs.hh	/^        MISCREG_PRI_S_WR,$/;"	e	enum:ArmISA::MiscRegInfo
MISCREG_PRRR	src/arch/arm/miscregs.hh	/^        MISCREG_PRRR,                   \/\/ 240$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PRRR_MAIR0	src/arch/arm/miscregs.hh	/^        MISCREG_PRRR_MAIR0,             \/\/  21$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PRRR_MAIR0_NS	src/arch/arm/miscregs.hh	/^        MISCREG_PRRR_MAIR0_NS,          \/\/  22$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PRRR_MAIR0_S	src/arch/arm/miscregs.hh	/^        MISCREG_PRRR_MAIR0_S,           \/\/  23$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PRRR_NS	src/arch/arm/miscregs.hh	/^        MISCREG_PRRR_NS,                \/\/ 241$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PRRR_S	src/arch/arm/miscregs.hh	/^        MISCREG_PRRR_S,                 \/\/ 242$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_PSTATE	src/arch/sparc/miscregs.hh	/^    MISCREG_PSTATE, \/* 20 *\/$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_QUEUE_CPU_MONDO_HEAD	src/arch/sparc/miscregs.hh	/^    MISCREG_QUEUE_CPU_MONDO_HEAD,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_QUEUE_CPU_MONDO_TAIL	src/arch/sparc/miscregs.hh	/^    MISCREG_QUEUE_CPU_MONDO_TAIL,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_QUEUE_DEV_MONDO_HEAD	src/arch/sparc/miscregs.hh	/^    MISCREG_QUEUE_DEV_MONDO_HEAD, \/* 70 *\/$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_QUEUE_DEV_MONDO_TAIL	src/arch/sparc/miscregs.hh	/^    MISCREG_QUEUE_DEV_MONDO_TAIL,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_QUEUE_NRES_ERROR_HEAD	src/arch/sparc/miscregs.hh	/^    MISCREG_QUEUE_NRES_ERROR_HEAD,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_QUEUE_NRES_ERROR_TAIL	src/arch/sparc/miscregs.hh	/^    MISCREG_QUEUE_NRES_ERROR_TAIL,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_QUEUE_RES_ERROR_HEAD	src/arch/sparc/miscregs.hh	/^    MISCREG_QUEUE_RES_ERROR_HEAD,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_QUEUE_RES_ERROR_TAIL	src/arch/sparc/miscregs.hh	/^    MISCREG_QUEUE_RES_ERROR_TAIL,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_RAMINDEX	src/arch/arm/miscregs.hh	/^        MISCREG_RAMINDEX,               \/\/ 305$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_RAZ	src/arch/arm/miscregs.hh	/^        MISCREG_RAZ,                    \/\/ 600$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_REVIDR	src/arch/arm/miscregs.hh	/^        MISCREG_REVIDR,                 \/\/  85$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_REVIDR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_REVIDR_EL1,             \/\/ 362$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_RFLAGS	src/arch/x86/regs/misc.hh	/^        MISCREG_RFLAGS = MISCREG_DR_BASE + NumDRegs,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_RMR	src/arch/arm/miscregs.hh	/^        MISCREG_RMR,                    \/\/ 266$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_RMR_EL3	src/arch/arm/miscregs.hh	/^        MISCREG_RMR_EL3,                \/\/ 547$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_RVBAR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_RVBAR_EL1,              \/\/ 541$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_RVBAR_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_RVBAR_EL2,              \/\/ 544$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_RVBAR_EL3	src/arch/arm/miscregs.hh	/^        MISCREG_RVBAR_EL3,              \/\/ 546$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_SCR	src/arch/arm/miscregs.hh	/^        MISCREG_SCR,                    \/\/ 115$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_SCRATCHPAD_R0	src/arch/sparc/miscregs.hh	/^    MISCREG_SCRATCHPAD_R0, \/* 60 *\/$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_SCRATCHPAD_R1	src/arch/sparc/miscregs.hh	/^    MISCREG_SCRATCHPAD_R1,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_SCRATCHPAD_R2	src/arch/sparc/miscregs.hh	/^    MISCREG_SCRATCHPAD_R2,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_SCRATCHPAD_R3	src/arch/sparc/miscregs.hh	/^    MISCREG_SCRATCHPAD_R3,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_SCRATCHPAD_R4	src/arch/sparc/miscregs.hh	/^    MISCREG_SCRATCHPAD_R4,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_SCRATCHPAD_R5	src/arch/sparc/miscregs.hh	/^    MISCREG_SCRATCHPAD_R5,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_SCRATCHPAD_R6	src/arch/sparc/miscregs.hh	/^    MISCREG_SCRATCHPAD_R6,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_SCRATCHPAD_R7	src/arch/sparc/miscregs.hh	/^    MISCREG_SCRATCHPAD_R7,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_SCR_EL3	src/arch/arm/miscregs.hh	/^        MISCREG_SCR_EL3,                \/\/ 410$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_SCTLR	src/arch/arm/miscregs.hh	/^        MISCREG_SCTLR,                  \/\/ 108$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_SCTLR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_SCTLR_EL1,              \/\/ 398$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_SCTLR_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_SCTLR_EL2,              \/\/ 401$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_SCTLR_EL3	src/arch/arm/miscregs.hh	/^        MISCREG_SCTLR_EL3,              \/\/ 408$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_SCTLR_NS	src/arch/arm/miscregs.hh	/^        MISCREG_SCTLR_NS,               \/\/ 109$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_SCTLR_RST	src/arch/arm/miscregs.hh	/^        MISCREG_SCTLR_RST,              \/\/  28$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_SCTLR_S	src/arch/arm/miscregs.hh	/^        MISCREG_SCTLR_S,                \/\/ 110$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_SDER	src/arch/arm/miscregs.hh	/^        MISCREG_SDER,                   \/\/ 116$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_SDER32_EL3	src/arch/arm/miscregs.hh	/^        MISCREG_SDER32_EL3,             \/\/ 411$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_SEG_ATTR	src/arch/x86/regs/misc.hh	/^    MISCREG_SEG_ATTR(int index)$/;"	f	namespace:X86ISA
MISCREG_SEG_ATTR_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_SEG_ATTR_BASE = MISCREG_SEG_LIMIT_BASE + NUM_SEGMENTREGS,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_SEG_BASE	src/arch/x86/regs/misc.hh	/^    MISCREG_SEG_BASE(int index)$/;"	f	namespace:X86ISA
MISCREG_SEG_BASE_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_SEG_BASE_BASE = MISCREG_SEG_SEL_BASE + NUM_SEGMENTREGS,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_SEG_EFF_BASE	src/arch/x86/regs/misc.hh	/^    MISCREG_SEG_EFF_BASE(int index)$/;"	f	namespace:X86ISA
MISCREG_SEG_EFF_BASE_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_SEG_EFF_BASE_BASE = MISCREG_SEG_BASE_BASE + NUM_SEGMENTREGS,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_SEG_LIMIT	src/arch/x86/regs/misc.hh	/^    MISCREG_SEG_LIMIT(int index)$/;"	f	namespace:X86ISA
MISCREG_SEG_LIMIT_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_SEG_LIMIT_BASE = MISCREG_SEG_EFF_BASE_BASE + NUM_SEGMENTREGS,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_SEG_SEL	src/arch/x86/regs/misc.hh	/^    MISCREG_SEG_SEL(int index)$/;"	f	namespace:X86ISA
MISCREG_SEG_SEL_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_SEG_SEL_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_SEV_MAILBOX	src/arch/arm/miscregs.hh	/^        MISCREG_SEV_MAILBOX,            \/\/  29$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_SF_MASK	src/arch/x86/regs/misc.hh	/^        MISCREG_SF_MASK,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_SMM_CTL	src/arch/x86/regs/misc.hh	/^        MISCREG_SMM_CTL,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_SOFTINT	src/arch/sparc/miscregs.hh	/^    MISCREG_SOFTINT, \/* 10 *\/$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_SOFTINT_CLR	src/arch/sparc/miscregs.hh	/^    MISCREG_SOFTINT_CLR,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_SOFTINT_SET	src/arch/sparc/miscregs.hh	/^    MISCREG_SOFTINT_SET,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_SPSEL	src/arch/arm/miscregs.hh	/^        MISCREG_SPSEL,                  \/\/ 427$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_SPSR	src/arch/arm/miscregs.hh	/^        MISCREG_SPSR,                   \/\/   1$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_SPSR_ABT	src/arch/arm/miscregs.hh	/^        MISCREG_SPSR_ABT,               \/\/   6$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_SPSR_ABT_AA64	src/arch/arm/miscregs.hh	/^        MISCREG_SPSR_ABT_AA64,          \/\/ 439$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_SPSR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_SPSR_EL1,               \/\/ 424$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_SPSR_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_SPSR_EL2,               \/\/ 435$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_SPSR_EL3	src/arch/arm/miscregs.hh	/^        MISCREG_SPSR_EL3,               \/\/ 442$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_SPSR_FIQ	src/arch/arm/miscregs.hh	/^        MISCREG_SPSR_FIQ,               \/\/   2$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_SPSR_FIQ_AA64	src/arch/arm/miscregs.hh	/^        MISCREG_SPSR_FIQ_AA64,          \/\/ 441$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_SPSR_HYP	src/arch/arm/miscregs.hh	/^        MISCREG_SPSR_HYP,               \/\/   7$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_SPSR_IRQ	src/arch/arm/miscregs.hh	/^        MISCREG_SPSR_IRQ,               \/\/   3$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_SPSR_IRQ_AA64	src/arch/arm/miscregs.hh	/^        MISCREG_SPSR_IRQ_AA64,          \/\/ 438$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_SPSR_MON	src/arch/arm/miscregs.hh	/^        MISCREG_SPSR_MON,               \/\/   5$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_SPSR_SVC	src/arch/arm/miscregs.hh	/^        MISCREG_SPSR_SVC,               \/\/   4$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_SPSR_UND	src/arch/arm/miscregs.hh	/^        MISCREG_SPSR_UND,               \/\/   8$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_SPSR_UND_AA64	src/arch/arm/miscregs.hh	/^        MISCREG_SPSR_UND_AA64,          \/\/ 440$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_SP_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_SP_EL0,                 \/\/ 426$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_SP_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_SP_EL1,                 \/\/ 437$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_SP_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_SP_EL2,                 \/\/ 444$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_SRSCTL	src/arch/mips/registers.hh	/^    MISCREG_SRSCTL,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_SRSMAP	src/arch/mips/registers.hh	/^    MISCREG_SRSMAP,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_SRS_CONF0	src/arch/mips/registers.hh	/^    MISCREG_SRS_CONF0,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_SRS_CONF1	src/arch/mips/registers.hh	/^    MISCREG_SRS_CONF1,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_SRS_CONF2	src/arch/mips/registers.hh	/^    MISCREG_SRS_CONF2,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_SRS_CONF3	src/arch/mips/registers.hh	/^    MISCREG_SRS_CONF3,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_SRS_CONF4	src/arch/mips/registers.hh	/^    MISCREG_SRS_CONF4,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_SS	src/arch/x86/regs/misc.hh	/^        MISCREG_SS,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_SS_ATTR	src/arch/x86/regs/misc.hh	/^        MISCREG_SS_ATTR,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_SS_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_SS_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_SS_EFF_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_SS_EFF_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_SS_LIMIT	src/arch/x86/regs/misc.hh	/^        MISCREG_SS_LIMIT,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_STAR	src/arch/x86/regs/misc.hh	/^        MISCREG_STAR,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_STATUS	src/arch/mips/registers.hh	/^    MISCREG_STATUS = 96,         \/\/Bank 12: 96-103$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_STICK	src/arch/sparc/miscregs.hh	/^    MISCREG_STICK,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_STICK_CMPR	src/arch/sparc/miscregs.hh	/^    MISCREG_STICK_CMPR,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_STRAND_STS_REG	src/arch/sparc/miscregs.hh	/^    MISCREG_STRAND_STS_REG,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_SYSCFG	src/arch/x86/regs/misc.hh	/^        MISCREG_SYSCFG = MISCREG_PERF_EVT_CTR_END,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_SYSENTER_CS	src/arch/x86/regs/misc.hh	/^        MISCREG_SYSENTER_CS,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_SYSENTER_EIP	src/arch/x86/regs/misc.hh	/^        MISCREG_SYSENTER_EIP,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_SYSENTER_ESP	src/arch/x86/regs/misc.hh	/^        MISCREG_SYSENTER_ESP,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_TAGHI0	src/arch/mips/registers.hh	/^    MISCREG_TAGHI0 = 232,      \/\/Bank 29: 232-239$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_TAGHI2	src/arch/mips/registers.hh	/^    MISCREG_TAGHI2,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_TAGHI4	src/arch/mips/registers.hh	/^    MISCREG_TAGHI4,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_TAGHI6	src/arch/mips/registers.hh	/^    MISCREG_TAGHI6,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_TAGLO0	src/arch/mips/registers.hh	/^    MISCREG_TAGLO0 = 224,      \/\/Bank 28: 224-231$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_TAGLO2	src/arch/mips/registers.hh	/^    MISCREG_TAGLO2,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_TAGLO4	src/arch/mips/registers.hh	/^    MISCREG_TAGLO4,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_TAGLO6	src/arch/mips/registers.hh	/^    MISCREG_TAGLO6,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_TBA	src/arch/sparc/miscregs.hh	/^    MISCREG_TBA,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_TCMTR	src/arch/arm/miscregs.hh	/^        MISCREG_TCMTR,                  \/\/  82$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TCR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_TCR_EL1,                \/\/ 416$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TCR_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_TCR_EL2,                \/\/ 418$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TCR_EL3	src/arch/arm/miscregs.hh	/^        MISCREG_TCR_EL3,                \/\/ 422$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TC_BIND	src/arch/mips/registers.hh	/^    MISCREG_TC_BIND,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_TC_CONTEXT	src/arch/mips/registers.hh	/^    MISCREG_TC_CONTEXT,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_TC_HALT	src/arch/mips/registers.hh	/^    MISCREG_TC_HALT,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_TC_RESTART	src/arch/mips/registers.hh	/^    MISCREG_TC_RESTART,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_TC_SCHEDULE	src/arch/mips/registers.hh	/^    MISCREG_TC_SCHEDULE,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_TC_SCHEFBACK	src/arch/mips/registers.hh	/^    MISCREG_TC_SCHEFBACK,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_TC_STATUS	src/arch/mips/registers.hh	/^    MISCREG_TC_STATUS,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_TEECR	src/arch/arm/miscregs.hh	/^        MISCREG_TEECR,                  \/\/  75$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TEECR32_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_TEECR32_EL1,            \/\/ 358$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TEEHBR	src/arch/arm/miscregs.hh	/^        MISCREG_TEEHBR,                 \/\/  77$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TEEHBR32_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_TEEHBR32_EL1,           \/\/ 359$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TICK	src/arch/sparc/miscregs.hh	/^    MISCREG_TICK,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_TICK_CMPR	src/arch/sparc/miscregs.hh	/^    MISCREG_TICK_CMPR,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_TL	src/arch/sparc/miscregs.hh	/^    MISCREG_TL,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_TLBIALL	src/arch/arm/miscregs.hh	/^        MISCREG_TLBIALL,                \/\/ 204$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBIALLH	src/arch/arm/miscregs.hh	/^        MISCREG_TLBIALLH,               \/\/ 218$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBIALLHIS	src/arch/arm/miscregs.hh	/^        MISCREG_TLBIALLHIS,             \/\/ 212$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBIALLIS	src/arch/arm/miscregs.hh	/^        MISCREG_TLBIALLIS,              \/\/ 192$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBIALLNSNH	src/arch/arm/miscregs.hh	/^        MISCREG_TLBIALLNSNH,            \/\/ 220$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBIALLNSNHIS	src/arch/arm/miscregs.hh	/^        MISCREG_TLBIALLNSNHIS,          \/\/ 214$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBIASID	src/arch/arm/miscregs.hh	/^        MISCREG_TLBIASID,               \/\/ 206$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBIASIDIS	src/arch/arm/miscregs.hh	/^        MISCREG_TLBIASIDIS,             \/\/ 194$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBIIPAS2	src/arch/arm/miscregs.hh	/^        MISCREG_TLBIIPAS2,              \/\/ 216$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBIIPAS2IS	src/arch/arm/miscregs.hh	/^        MISCREG_TLBIIPAS2IS,            \/\/ 210$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBIIPAS2L	src/arch/arm/miscregs.hh	/^        MISCREG_TLBIIPAS2L,             \/\/ 217$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBIIPAS2LIS	src/arch/arm/miscregs.hh	/^        MISCREG_TLBIIPAS2LIS,           \/\/ 211$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBIMVA	src/arch/arm/miscregs.hh	/^        MISCREG_TLBIMVA,                \/\/ 205$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBIMVAA	src/arch/arm/miscregs.hh	/^        MISCREG_TLBIMVAA,               \/\/ 207$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBIMVAAIS	src/arch/arm/miscregs.hh	/^        MISCREG_TLBIMVAAIS,             \/\/ 195$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBIMVAAL	src/arch/arm/miscregs.hh	/^        MISCREG_TLBIMVAAL,              \/\/ 209$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBIMVAALIS	src/arch/arm/miscregs.hh	/^        MISCREG_TLBIMVAALIS,            \/\/ 197$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBIMVAH	src/arch/arm/miscregs.hh	/^        MISCREG_TLBIMVAH,               \/\/ 219$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBIMVAHIS	src/arch/arm/miscregs.hh	/^        MISCREG_TLBIMVAHIS,             \/\/ 213$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBIMVAIS	src/arch/arm/miscregs.hh	/^        MISCREG_TLBIMVAIS,              \/\/ 193$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBIMVAL	src/arch/arm/miscregs.hh	/^        MISCREG_TLBIMVAL,               \/\/ 208$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBIMVALH	src/arch/arm/miscregs.hh	/^        MISCREG_TLBIMVALH,              \/\/ 221$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBIMVALHIS	src/arch/arm/miscregs.hh	/^        MISCREG_TLBIMVALHIS,            \/\/ 215$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBIMVALIS	src/arch/arm/miscregs.hh	/^        MISCREG_TLBIMVALIS,             \/\/ 196$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBI_ALLE1	src/arch/arm/miscregs.hh	/^        MISCREG_TLBI_ALLE1,             \/\/ 507$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBI_ALLE1IS	src/arch/arm/miscregs.hh	/^        MISCREG_TLBI_ALLE1IS,           \/\/ 500$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBI_ALLE2	src/arch/arm/miscregs.hh	/^        MISCREG_TLBI_ALLE2,             \/\/ 505$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBI_ALLE2IS	src/arch/arm/miscregs.hh	/^        MISCREG_TLBI_ALLE2IS,           \/\/ 498$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBI_ALLE3	src/arch/arm/miscregs.hh	/^        MISCREG_TLBI_ALLE3,             \/\/ 513$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBI_ALLE3IS	src/arch/arm/miscregs.hh	/^        MISCREG_TLBI_ALLE3IS,           \/\/ 510$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBI_ASIDE1IS_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_TLBI_ASIDE1IS_Xt,       \/\/ 486$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBI_ASIDE1_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_TLBI_ASIDE1_Xt,         \/\/ 492$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBI_IPAS2E1IS_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_TLBI_IPAS2E1IS_Xt,      \/\/ 496$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBI_IPAS2E1_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_TLBI_IPAS2E1_Xt,        \/\/ 503$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBI_IPAS2LE1IS_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_TLBI_IPAS2LE1IS_Xt,     \/\/ 497$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBI_IPAS2LE1_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_TLBI_IPAS2LE1_Xt,       \/\/ 504$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBI_VAAE1IS_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_TLBI_VAAE1IS_Xt,        \/\/ 487$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBI_VAAE1_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_TLBI_VAAE1_Xt,          \/\/ 493$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBI_VAALE1IS_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_TLBI_VAALE1IS_Xt,       \/\/ 489$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBI_VAALE1_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_TLBI_VAALE1_Xt,         \/\/ 495$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBI_VAE1IS_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_TLBI_VAE1IS_Xt,         \/\/ 485$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBI_VAE1_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_TLBI_VAE1_Xt,           \/\/ 491$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBI_VAE2IS_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_TLBI_VAE2IS_Xt,         \/\/ 499$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBI_VAE2_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_TLBI_VAE2_Xt,           \/\/ 506$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBI_VAE3IS_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_TLBI_VAE3IS_Xt,         \/\/ 511$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBI_VAE3_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_TLBI_VAE3_Xt,           \/\/ 514$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBI_VALE1IS_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_TLBI_VALE1IS_Xt,        \/\/ 488$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBI_VALE1_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_TLBI_VALE1_Xt,          \/\/ 494$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBI_VALE2IS_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_TLBI_VALE2IS_Xt,        \/\/ 501$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBI_VALE2_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_TLBI_VALE2_Xt,          \/\/ 508$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBI_VALE3IS_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_TLBI_VALE3IS_Xt,        \/\/ 512$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBI_VALE3_Xt	src/arch/arm/miscregs.hh	/^        MISCREG_TLBI_VALE3_Xt,          \/\/ 515$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBI_VMALLE1	src/arch/arm/miscregs.hh	/^        MISCREG_TLBI_VMALLE1,           \/\/ 490$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBI_VMALLE1IS	src/arch/arm/miscregs.hh	/^        MISCREG_TLBI_VMALLE1IS,         \/\/ 484$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBI_VMALLS12E1	src/arch/arm/miscregs.hh	/^        MISCREG_TLBI_VMALLS12E1,        \/\/ 509$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBI_VMALLS12E1IS	src/arch/arm/miscregs.hh	/^        MISCREG_TLBI_VMALLS12E1IS,      \/\/ 502$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLBTR	src/arch/arm/miscregs.hh	/^        MISCREG_TLBTR,                  \/\/  83$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TLB_DATA	src/arch/sparc/miscregs.hh	/^    MISCREG_TLB_DATA,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_TNPC	src/arch/sparc/miscregs.hh	/^    MISCREG_TNPC,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_TOP_MEM	src/arch/x86/regs/misc.hh	/^        MISCREG_TOP_MEM = MISCREG_IORR_MASK_END,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_TOP_MEM2	src/arch/x86/regs/misc.hh	/^        MISCREG_TOP_MEM2,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_TPC	src/arch/sparc/miscregs.hh	/^    MISCREG_TPC,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_TPIDRPRW	src/arch/arm/miscregs.hh	/^        MISCREG_TPIDRPRW,               \/\/ 279$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TPIDRPRW_NS	src/arch/arm/miscregs.hh	/^        MISCREG_TPIDRPRW_NS,            \/\/ 280$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TPIDRPRW_S	src/arch/arm/miscregs.hh	/^        MISCREG_TPIDRPRW_S,             \/\/ 281$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TPIDRRO_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_TPIDRRO_EL0,            \/\/ 551$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TPIDRURO	src/arch/arm/miscregs.hh	/^        MISCREG_TPIDRURO,               \/\/ 276$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TPIDRURO_NS	src/arch/arm/miscregs.hh	/^        MISCREG_TPIDRURO_NS,            \/\/ 277$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TPIDRURO_S	src/arch/arm/miscregs.hh	/^        MISCREG_TPIDRURO_S,             \/\/ 278$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TPIDRURW	src/arch/arm/miscregs.hh	/^        MISCREG_TPIDRURW,               \/\/ 273$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TPIDRURW_NS	src/arch/arm/miscregs.hh	/^        MISCREG_TPIDRURW_NS,            \/\/ 274$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TPIDRURW_S	src/arch/arm/miscregs.hh	/^        MISCREG_TPIDRURW_S,             \/\/ 275$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TPIDR_EL0	src/arch/arm/miscregs.hh	/^        MISCREG_TPIDR_EL0,              \/\/ 550$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TPIDR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_TPIDR_EL1,              \/\/ 549$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TPIDR_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_TPIDR_EL2,              \/\/ 552$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TPIDR_EL3	src/arch/arm/miscregs.hh	/^        MISCREG_TPIDR_EL3,              \/\/ 553$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TP_VALUE	src/arch/mips/registers.hh	/^    MISCREG_TP_VALUE,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_TR	src/arch/x86/regs/misc.hh	/^        MISCREG_TR,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_TRACE_BPC	src/arch/mips/registers.hh	/^    MISCREG_TRACE_BPC,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_TRACE_CONTROL1	src/arch/mips/registers.hh	/^    MISCREG_TRACE_CONTROL1,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_TRACE_CONTROL2	src/arch/mips/registers.hh	/^    MISCREG_TRACE_CONTROL2,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_TR_ATTR	src/arch/x86/regs/misc.hh	/^        MISCREG_TR_ATTR,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_TR_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_TR_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_TR_EFF_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_TR_EFF_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_TR_LIMIT	src/arch/x86/regs/misc.hh	/^        MISCREG_TR_LIMIT,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_TSC	src/arch/x86/regs/misc.hh	/^        MISCREG_TSC,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_TSC_AUX	src/arch/x86/regs/misc.hh	/^        MISCREG_TSC_AUX,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_TSG	src/arch/x86/regs/misc.hh	/^        MISCREG_TSG,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_TSG_ATTR	src/arch/x86/regs/misc.hh	/^        MISCREG_TSG_ATTR,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_TSG_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_TSG_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_TSG_EFF_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_TSG_EFF_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_TSG_LIMIT	src/arch/x86/regs/misc.hh	/^        MISCREG_TSG_LIMIT,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_TSL	src/arch/x86/regs/misc.hh	/^        MISCREG_TSL,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_TSL_ATTR	src/arch/x86/regs/misc.hh	/^        MISCREG_TSL_ATTR,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_TSL_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_TSL_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_TSL_EFF_BASE	src/arch/x86/regs/misc.hh	/^        MISCREG_TSL_EFF_BASE,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_TSL_LIMIT	src/arch/x86/regs/misc.hh	/^        MISCREG_TSL_LIMIT,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_TSTATE	src/arch/sparc/miscregs.hh	/^    MISCREG_TSTATE,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_TT	src/arch/sparc/miscregs.hh	/^    MISCREG_TT,$/;"	e	enum:SparcISA::MiscRegIndex
MISCREG_TTBCR	src/arch/arm/miscregs.hh	/^        MISCREG_TTBCR,                  \/\/ 131$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TTBCR_NS	src/arch/arm/miscregs.hh	/^        MISCREG_TTBCR_NS,               \/\/ 132$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TTBCR_S	src/arch/arm/miscregs.hh	/^        MISCREG_TTBCR_S,                \/\/ 133$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TTBR0	src/arch/arm/miscregs.hh	/^        MISCREG_TTBR0,                  \/\/ 125$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TTBR0_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_TTBR0_EL1,              \/\/ 414$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TTBR0_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_TTBR0_EL2,              \/\/ 417$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TTBR0_EL3	src/arch/arm/miscregs.hh	/^        MISCREG_TTBR0_EL3,              \/\/ 421$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TTBR0_NS	src/arch/arm/miscregs.hh	/^        MISCREG_TTBR0_NS,               \/\/ 126$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TTBR0_S	src/arch/arm/miscregs.hh	/^        MISCREG_TTBR0_S,                \/\/ 127$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TTBR1	src/arch/arm/miscregs.hh	/^        MISCREG_TTBR1,                  \/\/ 128$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TTBR1_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_TTBR1_EL1,              \/\/ 415$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TTBR1_NS	src/arch/arm/miscregs.hh	/^        MISCREG_TTBR1_NS,               \/\/ 129$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_TTBR1_S	src/arch/arm/miscregs.hh	/^        MISCREG_TTBR1_S,                \/\/ 130$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_UNIQ	src/arch/alpha/registers.hh	/^    MISCREG_UNIQ,$/;"	e	enum:AlphaISA::MiscRegIndex
MISCREG_UNKNOWN	src/arch/arm/miscregs.hh	/^        MISCREG_UNKNOWN,                \/\/ 604$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_USER_TRACE_DATA	src/arch/mips/registers.hh	/^    MISCREG_USER_TRACE_DATA,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_USR_NS_RD	src/arch/arm/miscregs.hh	/^        MISCREG_USR_NS_RD,$/;"	e	enum:ArmISA::MiscRegInfo
MISCREG_USR_NS_WR	src/arch/arm/miscregs.hh	/^        MISCREG_USR_NS_WR,$/;"	e	enum:ArmISA::MiscRegInfo
MISCREG_USR_S_RD	src/arch/arm/miscregs.hh	/^        MISCREG_USR_S_RD,$/;"	e	enum:ArmISA::MiscRegInfo
MISCREG_USR_S_WR	src/arch/arm/miscregs.hh	/^        MISCREG_USR_S_WR,$/;"	e	enum:ArmISA::MiscRegInfo
MISCREG_VBAR	src/arch/arm/miscregs.hh	/^        MISCREG_VBAR,                   \/\/ 262$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_VBAR_EL1	src/arch/arm/miscregs.hh	/^        MISCREG_VBAR_EL1,               \/\/ 540$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_VBAR_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_VBAR_EL2,               \/\/ 543$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_VBAR_EL3	src/arch/arm/miscregs.hh	/^        MISCREG_VBAR_EL3,               \/\/ 545$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_VBAR_NS	src/arch/arm/miscregs.hh	/^        MISCREG_VBAR_NS,                \/\/ 263$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_VBAR_S	src/arch/arm/miscregs.hh	/^        MISCREG_VBAR_S,                 \/\/ 264$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_VMPIDR	src/arch/arm/miscregs.hh	/^        MISCREG_VMPIDR,                 \/\/ 107$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_VMPIDR_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_VMPIDR_EL2,             \/\/ 397$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_VM_CR	src/arch/x86/regs/misc.hh	/^        MISCREG_VM_CR,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_VM_HSAVE_PA	src/arch/x86/regs/misc.hh	/^        MISCREG_VM_HSAVE_PA,$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_VPE_CONF0	src/arch/mips/registers.hh	/^    MISCREG_VPE_CONF0,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_VPE_CONF1	src/arch/mips/registers.hh	/^    MISCREG_VPE_CONF1,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_VPE_CONTROL	src/arch/mips/registers.hh	/^    MISCREG_VPE_CONTROL,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_VPE_OPT	src/arch/mips/registers.hh	/^    MISCREG_VPE_OPT,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_VPE_SCHEDULE	src/arch/mips/registers.hh	/^    MISCREG_VPE_SCHEDULE,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_VPE_SCHEFBACK	src/arch/mips/registers.hh	/^    MISCREG_VPE_SCHEFBACK,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_VPIDR	src/arch/arm/miscregs.hh	/^        MISCREG_VPIDR,                  \/\/ 106$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_VPIDR_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_VPIDR_EL2,              \/\/ 396$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_VTCR	src/arch/arm/miscregs.hh	/^        MISCREG_VTCR,                   \/\/ 135$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_VTCR_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_VTCR_EL2,               \/\/ 420$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_VTTBR	src/arch/arm/miscregs.hh	/^        MISCREG_VTTBR,                  \/\/ 309$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_VTTBR_EL2	src/arch/arm/miscregs.hh	/^        MISCREG_VTTBR_EL2,              \/\/ 419$/;"	e	enum:ArmISA::MiscRegIndex
MISCREG_WARN_NOT_FAIL	src/arch/arm/miscregs.hh	/^        MISCREG_WARN_NOT_FAIL,  \/\/ If MISCREG_IMPLEMENTED is deasserted, it$/;"	e	enum:ArmISA::MiscRegInfo
MISCREG_WATCHHI0	src/arch/mips/registers.hh	/^    MISCREG_WATCHHI0 = 152,     \/\/Bank 19: 152-159$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_WATCHHI1	src/arch/mips/registers.hh	/^    MISCREG_WATCHHI1,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_WATCHHI2	src/arch/mips/registers.hh	/^    MISCREG_WATCHHI2,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_WATCHHI3	src/arch/mips/registers.hh	/^    MISCREG_WATCHHI3,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_WATCHHI4	src/arch/mips/registers.hh	/^    MISCREG_WATCHHI4,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_WATCHHI5	src/arch/mips/registers.hh	/^    MISCREG_WATCHHI5,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_WATCHHI6	src/arch/mips/registers.hh	/^    MISCREG_WATCHHI6,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_WATCHHI7	src/arch/mips/registers.hh	/^    MISCREG_WATCHHI7,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_WATCHLO0	src/arch/mips/registers.hh	/^    MISCREG_WATCHLO0 = 144,      \/\/Bank 18: 144-151$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_WATCHLO1	src/arch/mips/registers.hh	/^    MISCREG_WATCHLO1,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_WATCHLO2	src/arch/mips/registers.hh	/^    MISCREG_WATCHLO2,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_WATCHLO3	src/arch/mips/registers.hh	/^    MISCREG_WATCHLO3,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_WATCHLO4	src/arch/mips/registers.hh	/^    MISCREG_WATCHLO4,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_WATCHLO5	src/arch/mips/registers.hh	/^    MISCREG_WATCHLO5,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_WATCHLO6	src/arch/mips/registers.hh	/^    MISCREG_WATCHLO6,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_WATCHLO7	src/arch/mips/registers.hh	/^    MISCREG_WATCHLO7,$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_WIRED	src/arch/mips/registers.hh	/^    MISCREG_WIRED = 48,          \/\/Bank 6:48-55$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_X87_TOP	src/arch/x86/regs/misc.hh	/^        MISCREG_X87_TOP =$/;"	e	enum:X86ISA::MiscRegIndex
MISCREG_XCCONTEXT64	src/arch/mips/registers.hh	/^    MISCREG_XCCONTEXT64 = 160, \/\/Bank 20: 160-167$/;"	e	enum:MipsISA::MiscRegIndex
MISCREG_YQMASK	src/arch/mips/registers.hh	/^    MISCREG_YQMASK,$/;"	e	enum:MipsISA::MiscRegIndex
MMAPPED_IPR	src/mem/request.hh	/^    static const FlagsType MMAPPED_IPR                  = 0x00002000;$/;"	m	class:Request
MM_STAT_ACV_MASK	src/arch/alpha/ev5.hh	/^const uint64_t MM_STAT_ACV_MASK = ULL(0x0002);$/;"	m	namespace:AlphaISA
MM_STAT_BAD_VA_MASK	src/arch/alpha/ev5.hh	/^const uint64_t MM_STAT_BAD_VA_MASK = ULL(0x0020);$/;"	m	namespace:AlphaISA
MM_STAT_DTB_MISS_MASK	src/arch/alpha/ev5.hh	/^const uint64_t MM_STAT_DTB_MISS_MASK = ULL(0x0010);$/;"	m	namespace:AlphaISA
MM_STAT_FONR_MASK	src/arch/alpha/ev5.hh	/^const uint64_t MM_STAT_FONR_MASK = ULL(0x0004);$/;"	m	namespace:AlphaISA
MM_STAT_FONW_MASK	src/arch/alpha/ev5.hh	/^const uint64_t MM_STAT_FONW_MASK = ULL(0x0008);$/;"	m	namespace:AlphaISA
MM_STAT_WR_MASK	src/arch/alpha/ev5.hh	/^const uint64_t MM_STAT_WR_MASK = ULL(0x0001);$/;"	m	namespace:AlphaISA
MODE2MASK	src/arch/alpha/tlb.cc	/^#define MODE2MASK(/;"	d	file:
MODE2MASK	src/arch/power/tlb.cc	/^#define MODE2MASK(/;"	d	file:
MODE_ABORT	src/arch/arm/types.hh	/^        MODE_ABORT = 23,$/;"	e	enum:ArmISA::OperatingMode
MODE_EL0T	src/arch/arm/types.hh	/^        MODE_EL0T = 0x0,$/;"	e	enum:ArmISA::OperatingMode
MODE_EL1H	src/arch/arm/types.hh	/^        MODE_EL1H = 0x5,$/;"	e	enum:ArmISA::OperatingMode
MODE_EL1T	src/arch/arm/types.hh	/^        MODE_EL1T = 0x4,$/;"	e	enum:ArmISA::OperatingMode
MODE_EL2H	src/arch/arm/types.hh	/^        MODE_EL2H = 0x9,$/;"	e	enum:ArmISA::OperatingMode
MODE_EL2T	src/arch/arm/types.hh	/^        MODE_EL2T = 0x8,$/;"	e	enum:ArmISA::OperatingMode
MODE_EL3H	src/arch/arm/types.hh	/^        MODE_EL3H = 0xD,$/;"	e	enum:ArmISA::OperatingMode
MODE_EL3T	src/arch/arm/types.hh	/^        MODE_EL3T = 0xC,$/;"	e	enum:ArmISA::OperatingMode
MODE_FIQ	src/arch/arm/types.hh	/^        MODE_FIQ = 17,$/;"	e	enum:ArmISA::OperatingMode
MODE_HYP	src/arch/arm/types.hh	/^        MODE_HYP = 26,$/;"	e	enum:ArmISA::OperatingMode
MODE_IRQ	src/arch/arm/types.hh	/^        MODE_IRQ = 18,$/;"	e	enum:ArmISA::OperatingMode
MODE_L	src/arch/mips/dsp.hh	/^    MODE_L,        \/\/ left$/;"	e	enum:MipsISA::__anon16
MODE_LA	src/arch/mips/dsp.hh	/^    MODE_LA,       \/\/ left-alternate$/;"	e	enum:MipsISA::__anon16
MODE_MAXMODE	src/arch/arm/types.hh	/^        MODE_MAXMODE = MODE_SYSTEM$/;"	e	enum:ArmISA::OperatingMode
MODE_MON	src/arch/arm/types.hh	/^        MODE_MON = 22,$/;"	e	enum:ArmISA::OperatingMode
MODE_R	src/arch/mips/dsp.hh	/^    MODE_R,        \/\/ right$/;"	e	enum:MipsISA::__anon16
MODE_RA	src/arch/mips/dsp.hh	/^    MODE_RA,       \/\/ right-alternate$/;"	e	enum:MipsISA::__anon16
MODE_SVC	src/arch/arm/types.hh	/^        MODE_SVC = 19,$/;"	e	enum:ArmISA::OperatingMode
MODE_SYSTEM	src/arch/arm/types.hh	/^        MODE_SYSTEM = 31,$/;"	e	enum:ArmISA::OperatingMode
MODE_UNDEFINED	src/arch/arm/types.hh	/^        MODE_UNDEFINED = 27,$/;"	e	enum:ArmISA::OperatingMode
MODE_USER	src/arch/arm/types.hh	/^        MODE_USER = 16,$/;"	e	enum:ArmISA::OperatingMode
MODE_X	src/arch/mips/dsp.hh	/^    MODE_X         \/\/ cross$/;"	e	enum:MipsISA::__anon16
MORE_PENDING	src/dev/terminal.cc	/^#define MORE_PENDING /;"	d	file:
MSB	src/dev/intel_8254_timer.hh	/^        enum {LSB, MSB};$/;"	e	enum:Intel8254Timer::Counter::__anon77
MSHR	src/mem/cache/mshr.cc	/^MSHR::MSHR() : readyTime(0), _isUncacheable(false), downstreamPending(false),$/;"	f	class:MSHR
MSHR	src/mem/cache/mshr.hh	/^class MSHR : public Packet::SenderState, public Printable$/;"	c
MSHRQueue	src/mem/cache/mshr_queue.cc	/^MSHRQueue::MSHRQueue(const std::string &_label,$/;"	f	class:MSHRQueue
MSHRQueue	src/mem/cache/mshr_queue.hh	/^class MSHRQueue : public Drainable$/;"	c
MSHRQueueIndex	src/mem/cache/base.hh	/^    enum MSHRQueueIndex {$/;"	g	class:BaseCache
MSHRQueue_MSHRs	src/mem/cache/base.hh	/^        MSHRQueue_MSHRs,$/;"	e	enum:BaseCache::MSHRQueueIndex
MSHRQueue_WriteBuffer	src/mem/cache/base.hh	/^        MSHRQueue_WriteBuffer$/;"	e	enum:BaseCache::MSHRQueueIndex
MSICAP	src/dev/pcireg.h	/^struct MSICAP {$/;"	s
MSICAPBaseOffset	src/dev/Pci.py	/^        Param.UInt8(0x00, "Base offset of MSICAP in PCI Config space")$/;"	v	class:PciDevice
MSICAPCapId	src/dev/Pci.py	/^    MSICAPCapId = Param.UInt8(0x00, "Specifies this is the MSI Capability")$/;"	v	class:PciDevice
MSICAPMaskBits	src/dev/Pci.py	/^    MSICAPMaskBits = Param.UInt32(0x00000000, "MSI Interrupt Mask Bits")$/;"	v	class:PciDevice
MSICAPMsgAddr	src/dev/Pci.py	/^    MSICAPMsgAddr = Param.UInt32(0x00000000, "MSI Message Address")$/;"	v	class:PciDevice
MSICAPMsgCtrl	src/dev/Pci.py	/^    MSICAPMsgCtrl = Param.UInt16(0x0000, "MSI Message Control")$/;"	v	class:PciDevice
MSICAPMsgData	src/dev/Pci.py	/^    MSICAPMsgData = Param.UInt16(0x0000, "MSI Message Data")$/;"	v	class:PciDevice
MSICAPMsgUpperAddr	src/dev/Pci.py	/^    MSICAPMsgUpperAddr = Param.UInt32(0x00000000, "MSI Message Upper Address")$/;"	v	class:PciDevice
MSICAPNextCapability	src/dev/Pci.py	/^        Param.UInt8(0x00, "Pointer to next capability block")$/;"	v	class:PciDevice
MSICAPPendingBits	src/dev/Pci.py	/^    MSICAPPendingBits = Param.UInt32(0x00000000, "MSI Pending Bits")$/;"	v	class:PciDevice
MSICAP_BASE	src/dev/pcidev.hh	/^    const int MSICAP_BASE;$/;"	m	class:PciDevice
MSICAP_ID	src/dev/pcireg.h	/^#define MSICAP_ID /;"	d
MSICAP_MA	src/dev/pcireg.h	/^#define MSICAP_MA /;"	d
MSICAP_MC	src/dev/pcireg.h	/^#define MSICAP_MC /;"	d
MSICAP_MD	src/dev/pcireg.h	/^#define MSICAP_MD /;"	d
MSICAP_MMASK	src/dev/pcireg.h	/^#define MSICAP_MMASK /;"	d
MSICAP_MPEND	src/dev/pcireg.h	/^#define MSICAP_MPEND /;"	d
MSICAP_MUA	src/dev/pcireg.h	/^#define MSICAP_MUA /;"	d
MSICAP_SIZE	src/dev/pcireg.h	/^#define MSICAP_SIZE /;"	d
MSIXCAP	src/dev/pcireg.h	/^struct MSIXCAP {$/;"	s
MSIXCAPBaseOffset	src/dev/Pci.py	/^        Param.UInt8(0x00, "Base offset of MSIXCAP in PCI Config space")$/;"	v	class:PciDevice
MSIXCAPCapId	src/dev/Pci.py	/^    MSIXCAPCapId = Param.UInt8(0x00, "Specifices this the MSI-X Capability")$/;"	v	class:PciDevice
MSIXCAPNextCapability	src/dev/Pci.py	/^        Param.UInt8(0x00, "Pointer to next capability block")$/;"	v	class:PciDevice
MSIXCAP_BASE	src/dev/pcidev.hh	/^    const int MSIXCAP_BASE;$/;"	m	class:PciDevice
MSIXCAP_ID	src/dev/pcireg.h	/^#define MSIXCAP_ID /;"	d
MSIXCAP_MPBA	src/dev/pcireg.h	/^#define MSIXCAP_MPBA /;"	d
MSIXCAP_MTAB	src/dev/pcireg.h	/^#define MSIXCAP_MTAB /;"	d
MSIXCAP_MXC	src/dev/pcireg.h	/^#define MSIXCAP_MXC /;"	d
MSIXCAP_SIZE	src/dev/pcireg.h	/^#define MSIXCAP_SIZE /;"	d
MSIXMsgCtrl	src/dev/Pci.py	/^    MSIXMsgCtrl = Param.UInt16(0x0000, "MSI-X Message Control")$/;"	v	class:PciDevice
MSIXPbaEntry	src/dev/pcireg.h	/^struct MSIXPbaEntry {$/;"	s
MSIXPbaOffset	src/dev/Pci.py	/^    MSIXPbaOffset = Param.UInt32(0x00000000, "MSI-X PBA Offset and PBA BIR")$/;"	v	class:PciDevice
MSIXTable	src/dev/pcireg.h	/^union MSIXTable {$/;"	u
MSIXTableOffset	src/dev/Pci.py	/^        Param.UInt32(0x00000000, "MSI-X Table Offset and Table BIR")$/;"	v	class:PciDevice
MSIXVECS_PER_PBA	src/dev/pcireg.h	/^#define MSIXVECS_PER_PBA /;"	d
MSIX_SIZE	src/dev/arm/gic_pl390.hh	/^    static const int MSIX_SIZE = 0x4; \/\/ Size of MSI-X register space$/;"	m	class:Pl390
MSIX_SR	src/dev/arm/gic_pl390.hh	/^    static const int MSIX_SR = 0x0; \/\/ MSI register devices will write to$/;"	m	class:Pl390
MSRIndexVector	src/cpu/kvm/vm.hh	/^    typedef std::vector<uint32_t> MSRIndexVector;$/;"	t	class:Kvm
MSR_TSC	src/cpu/kvm/x86_cpu.cc	/^#define MSR_TSC /;"	d	file:
MSTRC	src/arch/x86/insts/microop.hh	/^            MSTRC,$/;"	e	enum:X86ISA::ConditionTests::CondTest
MSTRZ	src/arch/x86/insts/microop.hh	/^            MSTRZ,$/;"	e	enum:X86ISA::ConditionTests::CondTest
MULTICAST_TABLE_SIZE	src/dev/i8254xGBe_defs.hh	/^const uint8_t MULTICAST_TABLE_SIZE      = 128;$/;"	m	namespace:iGbReg
MULTREE_CROSSBAR	src/mem/ruby/network/orion/Crossbar/Crossbar.hh	/^      MULTREE_CROSSBAR$/;"	e	enum:Crossbar::CrossbarModel
M_dat	src/kern/tru64/mbuf.hh	/^    } M_dat;$/;"	m	struct:tru64::mbuf	typeref:union:tru64::mbuf::__anon95
M_databuf	src/kern/tru64/mbuf.hh	/^        char    M_databuf[1];$/;"	m	union:tru64::mbuf::__anon95
MachInst	src/arch/alpha/types.hh	/^typedef uint32_t MachInst;$/;"	t	namespace:AlphaISA
MachInst	src/arch/arm/stacktrace.hh	/^    typedef ArmISA::MachInst MachInst;$/;"	t	class:ArmISA::StackTrace
MachInst	src/arch/arm/types.hh	/^    typedef uint32_t MachInst;$/;"	t	namespace:ArmISA
MachInst	src/arch/mips/stacktrace.hh	/^    typedef MipsISA::MachInst MachInst;$/;"	t	class:MipsISA::StackTrace
MachInst	src/arch/mips/types.hh	/^typedef uint32_t MachInst;$/;"	t	namespace:MipsISA
MachInst	src/arch/null/types.hh	/^    typedef uint32_t MachInst;$/;"	t	namespace:NullISA
MachInst	src/arch/power/stacktrace.hh	/^    typedef TheISA::MachInst MachInst;$/;"	t	class:PowerISA::StackTrace
MachInst	src/arch/power/types.hh	/^typedef uint32_t MachInst;$/;"	t	namespace:PowerISA
MachInst	src/arch/sparc/types.hh	/^typedef uint32_t MachInst;$/;"	t	namespace:SparcISA
MachInst	src/arch/x86/types.hh	/^    typedef uint64_t MachInst;$/;"	t	namespace:X86ISA
MachInst	src/cpu/checker/cpu.hh	/^    typedef TheISA::MachInst MachInst;$/;"	t	class:CheckerCPU
MachInst	src/cpu/inorder/inorder_dyn_inst.hh	/^    typedef TheISA::MachInst MachInst;$/;"	t	class:InOrderDynInst
MachInst	src/cpu/o3/dyn_inst.hh	/^    typedef TheISA::MachInst MachInst;$/;"	t	class:BaseO3DynInst
MachInst	src/cpu/o3/fetch.hh	/^    typedef TheISA::MachInst MachInst;$/;"	t	class:DefaultFetch
MachInst	src/cpu/o3/impl.hh	/^    typedef TheISA::MachInst MachInst;$/;"	t	struct:O3CPUImpl
MachInst	src/cpu/ozone/dyn_inst.hh	/^    typedef TheISA::MachInst MachInst;$/;"	t	class:OzoneDynInst
MachInst	src/cpu/simple_thread.hh	/^    typedef TheISA::MachInst MachInst;$/;"	t	class:SimpleThread
MachInst	src/cpu/thread_context.hh	/^    typedef TheISA::MachInst MachInst;$/;"	t	class:ThreadContext
MachNumber	src/kern/tru64/tru64_syscalls.hh	/^        MachNumber$/;"	e	enum:SystemCalls::__anon103
MachineAST	src/mem/slicc/ast/MachineAST.py	/^class MachineAST(DeclAST):$/;"	c
MachineBytes	src/arch/alpha/isa_traits.hh	/^    MachineBytes = 8,$/;"	e	enum:AlphaISA::__anon1
MachineBytes	src/arch/arm/isa_traits.hh	/^    const int MachineBytes = 4;$/;"	m	namespace:ArmISA
MachineBytes	src/arch/mips/isa_traits.hh	/^const int MachineBytes = 4;$/;"	m	namespace:MipsISA
MachineBytes	src/arch/power/isa_traits.hh	/^const int MachineBytes = 4;$/;"	m	namespace:PowerISA
MachineBytes	src/arch/sparc/isa_traits.hh	/^const int MachineBytes = 8;$/;"	m	namespace:SparcISA
MachineCheck	src/arch/x86/faults.hh	/^        MachineCheck() :$/;"	f	class:X86ISA::MachineCheck
MachineCheck	src/arch/x86/faults.hh	/^    class MachineCheck : public X86Abort$/;"	c	namespace:X86ISA
MachineCheckFault	src/arch/alpha/faults.hh	/^class MachineCheckFault : public AlphaFault$/;"	c	namespace:AlphaISA
MachineCheckFault	src/arch/mips/faults.hh	/^class MachineCheckFault : public MipsFault<MachineCheckFault>$/;"	c	namespace:MipsISA
MachineCheckFault	src/arch/power/faults.hh	/^    MachineCheckFault()$/;"	f	class:PowerISA::MachineCheckFault
MachineCheckFault	src/arch/power/faults.hh	/^class MachineCheckFault : public PowerFault$/;"	c	namespace:PowerISA
MachineID	src/mem/ruby/system/MachineID.hh	/^struct MachineID$/;"	s
MachineIDToString	src/mem/ruby/system/MachineID.hh	/^MachineIDToString(MachineID machine)$/;"	f
MacroMemOp	src/arch/arm/insts/macromem.cc	/^MacroMemOp::MacroMemOp(const char *mnem, ExtMachInst machInst,$/;"	f	class:ArmISA::MacroMemOp
MacroMemOp	src/arch/arm/insts/macromem.hh	/^class MacroMemOp : public PredMacroOp$/;"	c	namespace:ArmISA
MacroVFPMemOp	src/arch/arm/insts/macromem.cc	/^MacroVFPMemOp::MacroVFPMemOp(const char *mnem, ExtMachInst machInst,$/;"	f	class:ArmISA::MacroVFPMemOp
MacroVFPMemOp	src/arch/arm/insts/macromem.hh	/^class MacroVFPMemOp : public PredMacroOp$/;"	c	namespace:ArmISA
MacroopBase	src/arch/x86/insts/macroop.hh	/^    MacroopBase(const char *mnem, ExtMachInst _machInst,$/;"	f	class:X86ISA::MacroopBase
MacroopBase	src/arch/x86/insts/macroop.hh	/^class MacroopBase : public X86StaticInst$/;"	c	namespace:X86ISA
Magic	src/base/bitmap.hh	/^    struct Magic$/;"	s	class:Bitmap
MakeCallback	src/base/callback.hh	/^    MakeCallback(T &o, bool auto_destroy = false)$/;"	f	class:MakeCallback
MakeCallback	src/base/callback.hh	/^    MakeCallback(T *o, bool auto_destroy = false)$/;"	f	class:MakeCallback
MakeCallback	src/base/callback.hh	/^class MakeCallback : public Callback$/;"	c
MakeTsbPtr	src/arch/sparc/tlb.cc	/^TLB::MakeTsbPtr(TsbPageSize ps, uint64_t tag_access, uint64_t c0_tsb,$/;"	f	class:SparcISA::TLB
Malta	src/dev/mips/Malta.py	/^class Malta(Platform):$/;"	c
Malta	src/dev/mips/malta.cc	/^Malta::Malta(const Params *p)$/;"	f	class:Malta
Malta	src/dev/mips/malta.hh	/^class Malta : public Platform$/;"	c
MaltaCChip	src/dev/mips/Malta.py	/^class MaltaCChip(BasicPioDevice):$/;"	c
MaltaCChip	src/dev/mips/malta_cchip.cc	/^MaltaCChip::MaltaCChip(Params *p)$/;"	f	class:MaltaCChip
MaltaCChip	src/dev/mips/malta_cchip.hh	/^class MaltaCChip : public BasicPioDevice$/;"	c
MaltaIO	src/dev/mips/Malta.py	/^class MaltaIO(BasicPioDevice):$/;"	c
MaltaIO	src/dev/mips/malta_io.cc	/^MaltaIO::MaltaIO(const Params *p)$/;"	f	class:MaltaIO
MaltaIO	src/dev/mips/malta_io.hh	/^class MaltaIO : public BasicPioDevice$/;"	c
MaltaPChip	src/dev/mips/Malta.py	/^class MaltaPChip(BasicPioDevice):$/;"	c
MaltaPChip	src/dev/mips/malta_pchip.cc	/^MaltaPChip::MaltaPChip(const Params *p)$/;"	f	class:MaltaPChip
MaltaPChip	src/dev/mips/malta_pchip.hh	/^class MaltaPChip : public BasicPioDevice$/;"	c
MaltaPciBus0Config	src/dev/mips/malta_pchip.hh	/^    static const Addr MaltaPciBus0Config = ULL(0x801fe000000);$/;"	m	class:MaltaPChip
ManagementInformationBaseControlRegister	src/dev/ns_gige_reg.h	/^enum ManagementInformationBaseControlRegister {$/;"	g
MapCompare	src/cpu/pc_event.hh	/^    class MapCompare {$/;"	c	class:PCEventQueue
MapIter	src/arch/sparc/tlb.hh	/^    typedef TlbMap::iterator MapIter;$/;"	t	class:SparcISA::TLB
MapType	src/base/statistics.hh	/^typedef std::map<const void *, Info *> MapType;$/;"	t	namespace:Stats
MapperMasterPort	src/mem/addr_mapper.hh	/^        MapperMasterPort(const std::string& _name, AddrMapper& _mapper)$/;"	f	class:AddrMapper::MapperMasterPort
MapperMasterPort	src/mem/addr_mapper.hh	/^    class MapperMasterPort : public MasterPort$/;"	c	class:AddrMapper
MapperSlavePort	src/mem/addr_mapper.hh	/^        MapperSlavePort(const std::string& _name, AddrMapper& _mapper)$/;"	f	class:AddrMapper::MapperSlavePort
MapperSlavePort	src/mem/addr_mapper.hh	/^    class MapperSlavePort : public SlavePort$/;"	c	class:AddrMapper
MarkDestRegs	src/cpu/inorder/resources/use_def.hh	/^        MarkDestRegs$/;"	e	enum:UseDefUnit::Command
Mask	src/arch/mips/pagetable.hh	/^    Addr Mask;$/;"	m	struct:MipsISA::PTE
Mask	src/arch/power/pagetable.hh	/^    Addr Mask;$/;"	m	struct:PowerISA::PTE
MaskedISR	src/dev/arm/rtc_pl031.hh	/^        MaskedISR  = 0x18,$/;"	e	enum:PL031::__anon66
MaskedISR	src/dev/arm/timer_sp804.hh	/^            MaskedISR  = 0x14,$/;"	e	enum:Sp804::Timer::__anon69
MasterID	src/mem/request.hh	/^typedef uint16_t MasterID;$/;"	t
MasterPacketQueue	src/mem/packet_queue.cc	/^MasterPacketQueue::MasterPacketQueue(EventManager& _em, MasterPort& _masterPort,$/;"	f	class:MasterPacketQueue
MasterPacketQueue	src/mem/packet_queue.hh	/^class MasterPacketQueue : public PacketQueue$/;"	c
MasterPort	src/mem/port.cc	/^MasterPort::MasterPort(const std::string& name, MemObject* owner, PortID _id)$/;"	f	class:MasterPort
MasterPort	src/mem/port.hh	/^class MasterPort : public BaseMasterPort$/;"	c
MasterPort	src/python/m5/params.py	/^class MasterPort(Port):$/;"	c
MasterPortConstIter	src/mem/bus.hh	/^    typedef std::vector<MasterPort*>::const_iterator MasterPortConstIter;$/;"	t	class:BaseBus
MasterPortIter	src/mem/bus.hh	/^    typedef std::vector<MasterPort*>::iterator MasterPortIter;$/;"	t	class:BaseBus
MatchReg	src/dev/arm/rtc_pl031.hh	/^        MatchReg   = 0x04,$/;"	e	enum:PL031::__anon66
Matrix	src/mem/ruby/network/Topology.hh	/^typedef std::vector<std::vector<int> > Matrix;$/;"	t
MatrixArbiter	src/mem/ruby/network/orion/Allocator/MatrixArbiter.cc	/^MatrixArbiter::MatrixArbiter(const string& ff_model_str_,$/;"	f	class:MatrixArbiter
MatrixArbiter	src/mem/ruby/network/orion/Allocator/MatrixArbiter.hh	/^class MatrixArbiter : public Arbiter$/;"	c
MatrixCrossbar	src/mem/ruby/network/orion/Crossbar/MatrixCrossbar.cc	/^MatrixCrossbar::MatrixCrossbar($/;"	f	class:MatrixCrossbar
MatrixCrossbar	src/mem/ruby/network/orion/Crossbar/MatrixCrossbar.hh	/^class MatrixCrossbar : public Crossbar$/;"	c
MaxAddr	src/base/types.hh	/^const Addr MaxAddr = (Addr)-1;$/;"	v
MaxAddr	src/python/m5/params.py	/^MaxAddr = Addr.max$/;"	v
MaxBits	src/base/trie.hh	/^    static const unsigned MaxBits = sizeof(Key) * 8;$/;"	m	class:Trie
MaxFlags	src/cpu/base_dyn_inst.hh	/^        MaxFlags$/;"	e	enum:BaseDynInst::Flags
MaxGL	src/arch/sparc/sparc_traits.hh	/^const int MaxGL  = 3;$/;"	m	namespace:SparcISA
MaxInstDestRegs	src/cpu/base_dyn_inst.hh	/^        MaxInstDestRegs = TheISA::MaxInstDestRegs       \/\/\/ Max dest regs$/;"	e	enum:BaseDynInst::__anon48
MaxInstDestRegs	src/cpu/inorder/inorder_dyn_inst.hh	/^        MaxInstDestRegs = TheISA::MaxInstDestRegs       \/\/\/ Max dest regs$/;"	e	enum:InOrderDynInst::__anon50
MaxInstDestRegs	src/cpu/o3/dyn_inst.hh	/^        MaxInstDestRegs = TheISA::MaxInstDestRegs       \/\/< Max dest regs$/;"	e	enum:BaseO3DynInst::__anon56
MaxInstDestRegs	src/cpu/ozone/dyn_inst.hh	/^        MaxInstDestRegs = TheISA::MaxInstDestRegs$/;"	e	enum:OzoneDynInst::__anon59
MaxInstDestRegs	src/cpu/static_inst.hh	/^        MaxInstDestRegs = TheISA::MaxInstDestRegs       \/\/< Max dest regs$/;"	e	enum:StaticInst::__anon63
MaxInstSrcRegs	src/arch/arm/registers.hh	/^const int MaxInstSrcRegs = ArmISAInst::MaxInstDestRegs +$/;"	m	namespace:ArmISA
MaxInstSrcRegs	src/cpu/base_dyn_inst.hh	/^        MaxInstSrcRegs = TheISA::MaxInstSrcRegs,        \/\/\/ Max source regs$/;"	e	enum:BaseDynInst::__anon48
MaxInstSrcRegs	src/cpu/inorder/inorder_dyn_inst.hh	/^        MaxInstSrcRegs = TheISA::MaxInstSrcRegs,        \/\/\/ Max source regs$/;"	e	enum:InOrderDynInst::__anon50
MaxInstSrcRegs	src/cpu/o3/dyn_inst.hh	/^        MaxInstSrcRegs = TheISA::MaxInstSrcRegs,        \/\/< Max source regs$/;"	e	enum:BaseO3DynInst::__anon56
MaxInstSrcRegs	src/cpu/ozone/dyn_inst.hh	/^        MaxInstSrcRegs = TheISA::MaxInstSrcRegs,$/;"	e	enum:OzoneDynInst::__anon59
MaxInstSrcRegs	src/cpu/static_inst.hh	/^        MaxInstSrcRegs = TheISA::MaxInstSrcRegs,        \/\/< Max source regs$/;"	e	enum:StaticInst::__anon63
MaxInternalProcRegs	src/arch/alpha/ipr.hh	/^    MaxInternalProcRegs             \/\/ number of IPRs$/;"	e	enum:AlphaISA::md_ipr_names
MaxMiscDestRegs	src/arch/alpha/registers.hh	/^const int MaxMiscDestRegs = AlphaISAInst::MaxMiscDestRegs + 1;$/;"	m	namespace:AlphaISA
MaxMiscDestRegs	src/arch/power/registers.hh	/^const int MaxMiscDestRegs = PowerISAInst::MaxMiscDestRegs + 1;$/;"	m	namespace:PowerISA
MaxNiagaraProcs	src/dev/sparc/iob.hh	/^const int  MaxNiagaraProcs = 32;$/;"	v
MaxNormalTaskId	src/mem/request.hh	/^        MaxNormalTaskId = 1021, \/* Maximum number of normal tasks *\/$/;"	e	enum:ContextSwitchTaskId::TaskId
MaxPGL	src/arch/sparc/sparc_traits.hh	/^const int MaxPGL = 2;$/;"	m	namespace:SparcISA
MaxPTL	src/arch/sparc/sparc_traits.hh	/^const int MaxPTL = 2;$/;"	m	namespace:SparcISA
MaxPhysAddrRange	src/arch/arm/isa_traits.hh	/^    const unsigned MaxPhysAddrRange = 48;$/;"	m	namespace:ArmISA
MaxReadOnlyIpr	src/arch/alpha/ipr.hh	/^    MaxReadOnlyIpr,$/;"	e	enum:AlphaISA::MiscRegIpr
MaxShadowRegSets	src/arch/mips/registers.hh	/^const int MaxShadowRegSets = 16; \/\/ Maximum number of shadow register sets$/;"	m	namespace:MipsISA
MaxTL	src/arch/sparc/sparc_traits.hh	/^const int MaxTL  = 6;$/;"	m	namespace:SparcISA
MaxThreads	src/cpu/inorder/pipeline_traits.5stage.hh	/^    const unsigned MaxThreads = 3;$/;"	m	namespace:ThePipeline
MaxThreads	src/cpu/inorder/pipeline_traits.9stage.hh	/^    const unsigned MaxThreads = 3;$/;"	m	namespace:ThePipeline
MaxThreads	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^    const unsigned MaxThreads = 2;$/;"	m	namespace:ThePipeline
MaxThreads	src/cpu/inorder/pipeline_traits.hh	/^    const ThreadID MaxThreads = 1;$/;"	m	namespace:ThePipeline
MaxThreads	src/cpu/o3/impl.hh	/^      MaxThreads = 4$/;"	e	enum:O3CPUImpl::__anon57
MaxThreads	src/cpu/ozone/ozone_impl.hh	/^        MaxThreads = 1$/;"	e	enum:OzoneImpl::__anon60
MaxThreads	src/cpu/ozone/simple_impl.hh	/^        MaxThreads = 1$/;"	e	enum:SimpleImpl::__anon61
MaxTick	src/base/types.hh	/^const Tick MaxTick = ULL(0xffffffffffffffff);$/;"	v
MaxTick	src/python/m5/params.py	/^MaxTick = Tick.max$/;"	v
MaxTick	src/python/m5/simulate.py	/^MaxTick = 2**64 - 1$/;"	v
MaxWidth	src/cpu/o3/impl.hh	/^      MaxWidth = 8,$/;"	e	enum:O3CPUImpl::__anon57
MaxWriteOnlyIpr	src/arch/alpha/ipr.hh	/^    MaxWriteOnlyIpr,$/;"	e	enum:AlphaISA::MiscRegIpr
Max_CPUs	src/dev/alpha/tsunami.hh	/^    static const int Max_CPUs = 64;$/;"	m	class:Tsunami
Max_CPUs	src/dev/mips/malta.hh	/^    static const int Max_CPUs = 64;$/;"	m	class:Malta
Max_Conf	src/mem/cache/prefetch/stride.hh	/^    static const int Max_Conf = INT_MAX;$/;"	m	class:StridePrefetcher
Max_Contexts	src/mem/cache/prefetch/stride.hh	/^    static const int Max_Contexts = 64;$/;"	m	class:StridePrefetcher
Max_Masters	src/mem/cache/prefetch/ghb.hh	/^    static const int Max_Masters = 64;$/;"	m	class:GHBPrefetcher
Max_Reg_Index	src/arch/alpha/registers.hh	/^    Max_Reg_Index = Misc_Reg_Base + NumMiscRegs + NumInternalProcRegs$/;"	e	enum:AlphaISA::DependenceTags
Max_Reg_Index	src/arch/arm/registers.hh	/^const int Max_Reg_Index = Misc_Reg_Base + NumMiscRegs;$/;"	m	namespace:ArmISA
Max_Reg_Index	src/arch/mips/registers.hh	/^const int Max_Reg_Index = Misc_Reg_Base + NumMiscRegs;$/;"	m	namespace:MipsISA
Max_Reg_Index	src/arch/power/registers.hh	/^const int Max_Reg_Index = Misc_Reg_Base + NumMiscRegs;$/;"	m	namespace:PowerISA
Max_Reg_Index	src/arch/sparc/registers.hh	/^    Max_Reg_Index = Misc_Reg_Base + NumMiscRegs,$/;"	e	enum:SparcISA::DependenceTags
Max_Reg_Index	src/arch/x86/registers.hh	/^    Max_Reg_Index = Misc_Reg_Base + NumMiscRegs$/;"	e	enum:X86ISA::DependenceTags
MaximumLatency	src/dev/CopyEngine.py	/^    MaximumLatency = 0x00$/;"	v	class:CopyEngine
MaximumLatency	src/dev/Ethernet.py	/^    MaximumLatency = 0x00$/;"	v	class:IGbE
MaximumLatency	src/dev/Ethernet.py	/^    MaximumLatency = 0x34$/;"	v	class:NSGigE
MaximumLatency	src/dev/Ethernet.py	/^    MaximumLatency = 0x34$/;"	v	class:Sinic
MaximumLatency	src/dev/Pci.py	/^    MaximumLatency = Param.UInt8(0x00, "Maximum Latency")$/;"	v	class:PciDevice
Maximum_Pri	src/sim/eventq.hh	/^    static const Priority Maximum_Pri =          SCHAR_MAX;$/;"	m	class:EventBase
MciCtl	src/dev/arm/rv_ctrl.hh	/^        MciCtl     = 0x48,$/;"	e	enum:RealViewCtrl::__anon67
McrrOp	src/arch/arm/insts/misc.hh	/^    McrrOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:McrrOp
McrrOp	src/arch/arm/insts/misc.hh	/^class McrrOp : public PredOp$/;"	c
MediaFlag	src/arch/x86/insts/micromediaop.hh	/^    enum MediaFlag {$/;"	g	namespace:X86ISA
MediaMultHiOp	src/arch/x86/insts/micromediaop.hh	/^        MediaMultHiOp = 1,$/;"	e	enum:X86ISA::MediaFlag
MediaOpBase	src/arch/x86/insts/micromediaop.hh	/^        MediaOpBase(ExtMachInst _machInst,$/;"	f	class:X86ISA::MediaOpBase
MediaOpBase	src/arch/x86/insts/micromediaop.hh	/^    class MediaOpBase : public X86MicroopBase$/;"	c	namespace:X86ISA
MediaOpImm	src/arch/x86/insts/micromediaop.hh	/^        MediaOpImm(ExtMachInst _machInst,$/;"	f	class:X86ISA::MediaOpImm
MediaOpImm	src/arch/x86/insts/micromediaop.hh	/^    class MediaOpImm : public MediaOpBase$/;"	c	namespace:X86ISA
MediaOpReg	src/arch/x86/insts/micromediaop.hh	/^        MediaOpReg(ExtMachInst _machInst,$/;"	f	class:X86ISA::MediaOpReg
MediaOpReg	src/arch/x86/insts/micromediaop.hh	/^    class MediaOpReg : public MediaOpBase$/;"	c	namespace:X86ISA
MediaScalarOp	src/arch/x86/insts/micromediaop.hh	/^        MediaScalarOp = 128$/;"	e	enum:X86ISA::MediaFlag
MediaSignedOp	src/arch/x86/insts/micromediaop.hh	/^        MediaSignedOp = 64,$/;"	e	enum:X86ISA::MediaFlag
MemAccessComplete	src/cpu/inorder/pipeline_stage.hh	/^        MemAccessComplete$/;"	e	enum:PipelineStage::ThreadStatus
MemAddressNotAligned	src/arch/sparc/faults.hh	/^class MemAddressNotAligned :$/;"	c	namespace:SparcISA
MemCmd	src/mem/packet.hh	/^    MemCmd() : cmd(InvalidCmd) { }$/;"	f	class:MemCmd
MemCmd	src/mem/packet.hh	/^    MemCmd(Command _cmd) : cmd(_cmd) { }$/;"	f	class:MemCmd
MemCmd	src/mem/packet.hh	/^    MemCmd(int _cmd) : cmd((Command)_cmd) { }$/;"	f	class:MemCmd
MemCmd	src/mem/packet.hh	/^class MemCmd$/;"	c
MemCntrlEvent	src/mem/ruby/system/MemoryControl.hh	/^        MemCntrlEvent(MemoryControl* _mem_cntrl)$/;"	f	class:MemoryControl::MemCntrlEvent
MemCntrlEvent	src/mem/ruby/system/MemoryControl.hh	/^    class MemCntrlEvent : public Event$/;"	c	class:MemoryControl
MemCntrlProfiler	src/mem/ruby/profiler/MemCntrlProfiler.cc	/^MemCntrlProfiler::MemCntrlProfiler(const string& description,$/;"	f	class:MemCntrlProfiler
MemCntrlProfiler	src/mem/ruby/profiler/MemCntrlProfiler.hh	/^class MemCntrlProfiler$/;"	c
MemDepEntry	src/cpu/o3/mem_dep_unit.hh	/^        MemDepEntry(DynInstPtr &new_inst)$/;"	f	class:MemDepUnit::MemDepEntry
MemDepEntry	src/cpu/o3/mem_dep_unit.hh	/^    class MemDepEntry : public RefCounted {$/;"	c	class:MemDepUnit
MemDepEntryPtr	src/cpu/o3/mem_dep_unit.hh	/^    typedef RefCountingPtr<MemDepEntry> MemDepEntryPtr;$/;"	t	class:MemDepUnit
MemDepHash	src/cpu/o3/mem_dep_unit.hh	/^    typedef m5::hash_map<InstSeqNum, MemDepEntryPtr, SNHash> MemDepHash;$/;"	t	class:MemDepUnit
MemDepHashIt	src/cpu/o3/mem_dep_unit.hh	/^    typedef typename MemDepHash::iterator MemDepHashIt;$/;"	t	class:MemDepUnit
MemDepUnit	src/cpu/inorder/resources/mem_dep_unit.hh	/^class MemDepUnit : public Resource {$/;"	c
MemDepUnit	src/cpu/o3/cpu_policy.hh	/^    typedef ::MemDepUnit<StoreSet, Impl> MemDepUnit;$/;"	t	struct:SimpleCPUPolicy
MemDepUnit	src/cpu/o3/inst_queue.hh	/^    typedef typename Impl::CPUPol::MemDepUnit MemDepUnit;$/;"	t	class:InstructionQueue
MemDepUnit	src/cpu/o3/mem_dep_unit.hh	/^class MemDepUnit$/;"	c
MemDepUnit	src/cpu/o3/mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::MemDepUnit()$/;"	f	class:MemDepUnit
MemDepUnit	src/cpu/o3/mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::MemDepUnit(DerivO3CPUParams *params)$/;"	f	class:MemDepUnit
MemDispOp	src/arch/power/insts/mem.hh	/^    MemDispOp(const char *mnem, MachInst _machInst, OpClass __opClass,$/;"	f	class:PowerISA::MemDispOp
MemDispOp	src/arch/power/insts/mem.hh	/^class MemDispOp : public MemOp$/;"	c	namespace:PowerISA
MemIt	src/cpu/ozone/lw_back_end.hh	/^    typedef std::set<InstSeqNum>::iterator MemIt;$/;"	t	class:LWBackEnd
MemMasterPort	src/mem/ruby/system/RubyPort.cc	/^RubyPort::MemMasterPort::MemMasterPort(const std::string &_name,$/;"	f	class:RubyPort::MemMasterPort
MemMasterPort	src/mem/ruby/system/RubyPort.hh	/^    class MemMasterPort : public QueuedMasterPort$/;"	c	class:RubyPort
MemModel	src/mem/ruby/network/orion/Buffer/MemUnit.hh	/^    enum MemModel$/;"	g	class:MemUnit
MemObject	src/arch/arm/ArmTLB.py	/^from MemObject import MemObject$/;"	i
MemObject	src/arch/x86/X86TLB.py	/^from MemObject import MemObject$/;"	i
MemObject	src/cpu/BaseCPU.py	/^from MemObject import MemObject$/;"	i
MemObject	src/cpu/testers/directedtest/RubyDirectedTester.py	/^from MemObject import MemObject$/;"	i
MemObject	src/cpu/testers/memtest/MemTest.py	/^from MemObject import MemObject$/;"	i
MemObject	src/cpu/testers/networktest/NetworkTest.py	/^from MemObject import MemObject$/;"	i
MemObject	src/cpu/testers/rubytest/RubyTester.py	/^from MemObject import MemObject$/;"	i
MemObject	src/cpu/testers/traffic_gen/TrafficGen.py	/^from MemObject import MemObject$/;"	i
MemObject	src/dev/Device.py	/^from MemObject import MemObject$/;"	i
MemObject	src/mem/AbstractMemory.py	/^from MemObject import MemObject$/;"	i
MemObject	src/mem/AddrMapper.py	/^from MemObject import MemObject$/;"	i
MemObject	src/mem/Bridge.py	/^from MemObject import MemObject$/;"	i
MemObject	src/mem/Bus.py	/^from MemObject import MemObject$/;"	i
MemObject	src/mem/CommMonitor.py	/^from MemObject import MemObject$/;"	i
MemObject	src/mem/MemObject.py	/^class MemObject(ClockedObject):$/;"	c
MemObject	src/mem/cache/BaseCache.py	/^from MemObject import MemObject$/;"	i
MemObject	src/mem/mem_object.cc	/^MemObject::MemObject(const Params *params)$/;"	f	class:MemObject
MemObject	src/mem/mem_object.hh	/^class MemObject : public ClockedObject$/;"	c
MemObject	src/mem/ruby/system/Sequencer.py	/^from MemObject import MemObject$/;"	i
MemOp	src/arch/power/insts/mem.hh	/^    MemOp(const char *mnem, MachInst _machInst, OpClass __opClass,$/;"	f	class:PowerISA::MemOp
MemOp	src/arch/power/insts/mem.hh	/^class MemOp : public PowerStaticInst$/;"	c	namespace:PowerISA
MemOpDone	src/cpu/base_dyn_inst.hh	/^        MemOpDone,$/;"	e	enum:BaseDynInst::Flags
MemOperand	src/arch/isa_parser.py	/^class MemOperand(Operand):$/;"	c
MemReadOp	src/cpu/op_class.hh	/^const OpClass MemReadOp = Enums::MemRead;$/;"	v
MemSched	src/mem/DRAMCtrl.py	/^class MemSched(Enum): vals = ['fcfs', 'frfcfs']$/;"	c
MemSidePacketQueue	src/mem/cache/cache.hh	/^        MemSidePacketQueue(Cache<TagStore> &cache, MasterPort &port,$/;"	f	class:Cache::MemSidePacketQueue
MemSidePacketQueue	src/mem/cache/cache.hh	/^    class MemSidePacketQueue : public MasterPacketQueue$/;"	c	class:Cache
MemSidePort	src/mem/cache/cache.hh	/^    class MemSidePort : public CacheMasterPort$/;"	c	class:Cache
MemSidePort	src/mem/cache/cache_impl.hh	/^MemSidePort::MemSidePort(const std::string &_name, Cache<TagStore> *_cache,$/;"	f	class:Cache::MemSidePort
MemSlavePort	src/mem/ruby/system/RubyPort.cc	/^RubyPort::MemSlavePort::MemSlavePort(const std::string &_name, RubyPort *_port,$/;"	f	class:RubyPort::MemSlavePort
MemSlavePort	src/mem/ruby/system/RubyPort.hh	/^    class MemSlavePort : public QueuedSlavePort$/;"	c	class:RubyPort
MemTag	src/arch/arm/linux/atag.hh	/^    MemTag    = 0x54410002,$/;"	e	enum:__anon5
MemTest	src/cpu/testers/memtest/MemTest.py	/^class MemTest(MemObject):$/;"	c
MemTest	src/cpu/testers/memtest/memtest.cc	/^MemTest::MemTest(const Params *p)$/;"	f	class:MemTest
MemTest	src/cpu/testers/memtest/memtest.hh	/^class MemTest : public MemObject$/;"	c
MemTestSenderState	src/cpu/testers/memtest/memtest.hh	/^        MemTestSenderState(uint8_t *_data)$/;"	f	class:MemTest::MemTestSenderState
MemTestSenderState	src/cpu/testers/memtest/memtest.hh	/^    class MemTestSenderState : public Packet::SenderState$/;"	c	class:MemTest
MemUnit	src/mem/ruby/network/orion/Buffer/MemUnit.cc	/^MemUnit::MemUnit($/;"	f	class:MemUnit
MemUnit	src/mem/ruby/network/orion/Buffer/MemUnit.hh	/^class MemUnit$/;"	c
MemWaitResponse	src/cpu/inorder/pipeline_stage.hh	/^        MemWaitResponse,$/;"	e	enum:PipelineStage::ThreadStatus
MemWaitRetry	src/cpu/inorder/pipeline_stage.hh	/^        MemWaitRetry,$/;"	e	enum:PipelineStage::ThreadStatus
MemWriteOp	src/cpu/op_class.hh	/^const OpClass MemWriteOp = Enums::MemWrite;$/;"	v
MemberExprAST	src/mem/slicc/ast/MemberExprAST.py	/^class MemberExprAST(ExprAST):$/;"	c
MemberMethodCallExprAST	src/mem/slicc/ast/MethodCallExprAST.py	/^class MemberMethodCallExprAST(MethodCallExprAST):$/;"	c
Memory	src/arch/arm/insts/mem.hh	/^    Memory(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::Memory
Memory	src/arch/arm/insts/mem.hh	/^class Memory : public MightBeMicro$/;"	c	namespace:ArmISA
Memory64	src/arch/arm/insts/mem64.hh	/^    Memory64(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::Memory64
Memory64	src/arch/arm/insts/mem64.hh	/^class Memory64 : public MightBeMicro64$/;"	c	namespace:ArmISA
MemoryBandwidth	src/python/m5/params.py	/^class MemoryBandwidth(float,ParamValue):$/;"	c
MemoryControl	src/mem/ruby/system/MemoryControl.cc	/^MemoryControl::MemoryControl(const Params *p)$/;"	f	class:MemoryControl
MemoryControl	src/mem/ruby/system/MemoryControl.hh	/^class MemoryControl : public ClockedObject, public Consumer$/;"	c
MemoryControl	src/mem/ruby/system/MemoryControl.py	/^class MemoryControl(ClockedObject):$/;"	c
MemoryControl	src/mem/ruby/system/RubyMemoryControl.py	/^from MemoryControl import MemoryControl$/;"	i
MemoryDImm	src/arch/arm/insts/mem.hh	/^    MemoryDImm(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::MemoryDImm
MemoryDImm	src/arch/arm/insts/mem.hh	/^class MemoryDImm : public MemoryImm$/;"	c	namespace:ArmISA
MemoryDImm64	src/arch/arm/insts/mem64.hh	/^    MemoryDImm64(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::MemoryDImm64
MemoryDImm64	src/arch/arm/insts/mem64.hh	/^class MemoryDImm64 : public MemoryImm64$/;"	c	namespace:ArmISA
MemoryDImmEx64	src/arch/arm/insts/mem64.hh	/^    MemoryDImmEx64(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::MemoryDImmEx64
MemoryDImmEx64	src/arch/arm/insts/mem64.hh	/^class MemoryDImmEx64 : public MemoryDImm64$/;"	c	namespace:ArmISA
MemoryDReg	src/arch/arm/insts/mem.hh	/^    MemoryDReg(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::MemoryDReg
MemoryDReg	src/arch/arm/insts/mem.hh	/^class MemoryDReg : public MemoryReg$/;"	c	namespace:ArmISA
MemoryEx64	src/arch/arm/insts/mem64.hh	/^    MemoryEx64(const char *mnem, ExtMachInst _machInst,$/;"	f	class:ArmISA::MemoryEx64
MemoryEx64	src/arch/arm/insts/mem64.hh	/^class MemoryEx64 : public Memory64$/;"	c	namespace:ArmISA
MemoryExDImm	src/arch/arm/insts/mem.hh	/^    MemoryExDImm(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::MemoryExDImm
MemoryExDImm	src/arch/arm/insts/mem.hh	/^class MemoryExDImm : public MemoryDImm$/;"	c	namespace:ArmISA
MemoryExImm	src/arch/arm/insts/mem.hh	/^    MemoryExImm(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::MemoryExImm
MemoryExImm	src/arch/arm/insts/mem.hh	/^class MemoryExImm : public MemoryImm$/;"	c	namespace:ArmISA
MemoryImm	src/arch/arm/insts/mem.hh	/^    MemoryImm(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::MemoryImm
MemoryImm	src/arch/arm/insts/mem.hh	/^class MemoryImm : public Memory$/;"	c	namespace:ArmISA
MemoryImm64	src/arch/arm/insts/mem64.hh	/^    MemoryImm64(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::MemoryImm64
MemoryImm64	src/arch/arm/insts/mem64.hh	/^class MemoryImm64 : public Memory64$/;"	c	namespace:ArmISA
MemoryLiteral64	src/arch/arm/insts/mem64.hh	/^    MemoryLiteral64(const char *mnem, ExtMachInst _machInst,$/;"	f	class:ArmISA::MemoryLiteral64
MemoryLiteral64	src/arch/arm/insts/mem64.hh	/^class MemoryLiteral64 : public Memory64$/;"	c	namespace:ArmISA
MemoryMode	src/sim/System.py	/^class MemoryMode(Enum): vals = ['invalid', 'atomic', 'timing',$/;"	c
MemoryModeStrings	src/sim/system.cc	/^const char *System::MemoryModeStrings[4] = {"invalid", "atomic", "timing",$/;"	m	class:System	file:
MemoryModeStrings	src/sim/system.hh	/^    static const char *MemoryModeStrings[4];$/;"	m	class:System
MemoryNode	src/mem/ruby/system/MemoryNode.hh	/^    MemoryNode(const Cycles& time, const MsgPtr& msgptr,$/;"	f	class:MemoryNode
MemoryNode	src/mem/ruby/system/MemoryNode.hh	/^    MemoryNode(const Cycles& time, int counter, const MsgPtr& msgptr,$/;"	f	class:MemoryNode
MemoryNode	src/mem/ruby/system/MemoryNode.hh	/^class MemoryNode$/;"	c
MemoryOffset	src/arch/arm/insts/mem.hh	/^    MemoryOffset(const char *mnem, ExtMachInst _machInst,$/;"	f	class:ArmISA::MemoryOffset
MemoryOffset	src/arch/arm/insts/mem.hh	/^class MemoryOffset : public Base$/;"	c	namespace:ArmISA
MemoryPort	src/mem/dram_ctrl.cc	/^DRAMCtrl::MemoryPort::MemoryPort(const std::string& name, DRAMCtrl& _memory)$/;"	f	class:DRAMCtrl::MemoryPort
MemoryPort	src/mem/dram_ctrl.hh	/^    class MemoryPort : public QueuedSlavePort$/;"	c	class:DRAMCtrl
MemoryPort	src/mem/dramsim2.cc	/^DRAMSim2::MemoryPort::MemoryPort(const std::string& _name,$/;"	f	class:DRAMSim2::MemoryPort
MemoryPort	src/mem/dramsim2.hh	/^    class MemoryPort : public SlavePort$/;"	c	class:DRAMSim2
MemoryPort	src/mem/simple_mem.cc	/^SimpleMemory::MemoryPort::MemoryPort(const std::string& _name,$/;"	f	class:SimpleMemory::MemoryPort
MemoryPort	src/mem/simple_mem.hh	/^    class MemoryPort : public SlavePort$/;"	c	class:SimpleMemory
MemoryPostIndex	src/arch/arm/insts/mem.hh	/^    MemoryPostIndex(const char *mnem, ExtMachInst _machInst,$/;"	f	class:ArmISA::MemoryPostIndex
MemoryPostIndex	src/arch/arm/insts/mem.hh	/^class MemoryPostIndex : public Base$/;"	c	namespace:ArmISA
MemoryPostIndex64	src/arch/arm/insts/mem64.hh	/^    MemoryPostIndex64(const char *mnem, ExtMachInst _machInst,$/;"	f	class:ArmISA::MemoryPostIndex64
MemoryPostIndex64	src/arch/arm/insts/mem64.hh	/^class MemoryPostIndex64 : public MemoryImm64$/;"	c	namespace:ArmISA
MemoryPreIndex	src/arch/arm/insts/mem.hh	/^    MemoryPreIndex(const char *mnem, ExtMachInst _machInst,$/;"	f	class:ArmISA::MemoryPreIndex
MemoryPreIndex	src/arch/arm/insts/mem.hh	/^class MemoryPreIndex : public Base$/;"	c	namespace:ArmISA
MemoryPreIndex64	src/arch/arm/insts/mem64.hh	/^    MemoryPreIndex64(const char *mnem, ExtMachInst _machInst,$/;"	f	class:ArmISA::MemoryPreIndex64
MemoryPreIndex64	src/arch/arm/insts/mem64.hh	/^class MemoryPreIndex64 : public MemoryImm64$/;"	c	namespace:ArmISA
MemoryRaw64	src/arch/arm/insts/mem64.hh	/^    MemoryRaw64(const char *mnem, ExtMachInst _machInst,$/;"	f	class:ArmISA::MemoryRaw64
MemoryRaw64	src/arch/arm/insts/mem64.hh	/^class MemoryRaw64 : public Memory64$/;"	c	namespace:ArmISA
MemoryReg	src/arch/arm/insts/mem.hh	/^    MemoryReg(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::MemoryReg
MemoryReg	src/arch/arm/insts/mem.hh	/^class MemoryReg : public Memory$/;"	c	namespace:ArmISA
MemoryReg64	src/arch/arm/insts/mem64.hh	/^    MemoryReg64(const char *mnem, ExtMachInst _machInst,$/;"	f	class:ArmISA::MemoryReg64
MemoryReg64	src/arch/arm/insts/mem64.hh	/^class MemoryReg64 : public Memory64$/;"	c	namespace:ArmISA
MemorySize	src/python/m5/params.py	/^class MemorySize(CheckedInt):$/;"	c
MemorySize32	src/python/m5/params.py	/^class MemorySize32(CheckedInt):$/;"	c
MemoryType	src/arch/arm/pagetable.hh	/^    enum class MemoryType : std::uint8_t {$/;"	c	struct:ArmISA::TlbEntry
MemoryVector	src/mem/ruby/system/MemoryVector.hh	/^MemoryVector::MemoryVector()$/;"	f	class:MemoryVector
MemoryVector	src/mem/ruby/system/MemoryVector.hh	/^MemoryVector::MemoryVector(uint64 size)$/;"	f	class:MemoryVector
MemoryVector	src/mem/ruby/system/MemoryVector.hh	/^class MemoryVector$/;"	c
Message	src/mem/ruby/slicc_interface/Message.hh	/^    Message(Tick curTime)$/;"	f	class:Message
Message	src/mem/ruby/slicc_interface/Message.hh	/^    Message(const Message &other)$/;"	f	class:Message
Message	src/mem/ruby/slicc_interface/Message.hh	/^class Message : public RefCounted$/;"	c
MessageBuffer	src/mem/ruby/buffers/MessageBuffer.cc	/^MessageBuffer::MessageBuffer(const string &name)$/;"	f	class:MessageBuffer
MessageBuffer	src/mem/ruby/buffers/MessageBuffer.hh	/^class MessageBuffer$/;"	c
MessageBufferNode	src/mem/ruby/buffers/MessageBufferNode.hh	/^    MessageBufferNode()$/;"	f	class:MessageBufferNode
MessageBufferNode	src/mem/ruby/buffers/MessageBufferNode.hh	/^    MessageBufferNode(const Tick time, uint64_t counter,$/;"	f	class:MessageBufferNode
MessageBufferNode	src/mem/ruby/buffers/MessageBufferNode.hh	/^class MessageBufferNode$/;"	c
MessageMasterPort	src/mem/mport.hh	/^    MessageMasterPort(const std::string &name, MemObject *owner) :$/;"	f	class:MessageMasterPort
MessageMasterPort	src/mem/mport.hh	/^class MessageMasterPort : public QueuedMasterPort$/;"	c
MessageReq	src/mem/packet.hh	/^        MessageReq,$/;"	e	enum:MemCmd::Command
MessageResp	src/mem/packet.hh	/^        MessageResp,$/;"	e	enum:MemCmd::Command
MessageSizeType_to_int	src/mem/ruby/network/Network.cc	/^Network::MessageSizeType_to_int(MessageSizeType size_type)$/;"	f	class:Network
MessageSlavePort	src/mem/mport.hh	/^    MessageSlavePort(const std::string &name, MemObject *owner) :$/;"	f	class:MessageSlavePort
MessageSlavePort	src/mem/mport.hh	/^class MessageSlavePort : public SimpleTimingPort$/;"	c
MetaEnum	src/python/m5/params.py	/^class MetaEnum(MetaParamValue):$/;"	c
MetaParamValue	src/python/m5/params.py	/^class MetaParamValue(type):$/;"	c
MetaSimObject	src/python/m5/SimObject.py	/^class MetaSimObject(type):$/;"	c
Method	src/mem/slicc/symbols/Type.py	/^class Method(object):$/;"	c
MethodCallExprAST	src/mem/slicc/ast/MethodCallExprAST.py	/^class MethodCallExprAST(ExprAST):$/;"	c
MethodType	src/python/m5/SimObject.py	/^from types import FunctionType, MethodType, ModuleType$/;"	i
MicroAssembler	src/arch/micro_asm.py	/^class MicroAssembler(object):$/;"	c
MicroAssembler	src/arch/micro_asm_test.py	/^from micro_asm import MicroAssembler, Combinational_Macroop, Rom_Macroop, Rom$/;"	i
MicroIntImmOp	src/arch/arm/insts/macromem.hh	/^    MicroIntImmOp(const char *mnem, ExtMachInst machInst, OpClass __opClass,$/;"	f	class:ArmISA::MicroIntImmOp
MicroIntImmOp	src/arch/arm/insts/macromem.hh	/^class MicroIntImmOp : public MicroOp$/;"	c	namespace:ArmISA
MicroIntImmXOp	src/arch/arm/insts/macromem.hh	/^    MicroIntImmXOp(const char *mnem, ExtMachInst machInst, OpClass __opClass,$/;"	f	class:ArmISA::MicroIntImmXOp
MicroIntImmXOp	src/arch/arm/insts/macromem.hh	/^class MicroIntImmXOp : public MicroOpX$/;"	c	namespace:ArmISA
MicroIntMov	src/arch/arm/insts/macromem.hh	/^    MicroIntMov(const char *mnem, ExtMachInst machInst, OpClass __opClass,$/;"	f	class:ArmISA::MicroIntMov
MicroIntMov	src/arch/arm/insts/macromem.hh	/^class MicroIntMov : public MicroOp$/;"	c	namespace:ArmISA
MicroIntOffset	src/arch/sparc/isa.hh	/^        MicroIntOffset = CurrentWindowOffset + NumWindowedRegs,$/;"	e	enum:SparcISA::ISA::InstIntRegOffsets
MicroIntOp	src/arch/arm/insts/macromem.hh	/^    MicroIntOp(const char *mnem, ExtMachInst machInst, OpClass __opClass,$/;"	f	class:ArmISA::MicroIntOp
MicroIntOp	src/arch/arm/insts/macromem.hh	/^class MicroIntOp : public MicroOp$/;"	c	namespace:ArmISA
MicroIntRegOp	src/arch/arm/insts/macromem.hh	/^    MicroIntRegOp(const char *mnem, ExtMachInst machInst, OpClass __opClass,$/;"	f	class:ArmISA::MicroIntRegOp
MicroIntRegOp	src/arch/arm/insts/macromem.hh	/^class MicroIntRegOp : public MicroOp$/;"	c	namespace:ArmISA
MicroIntRegXOp	src/arch/arm/insts/macromem.hh	/^    MicroIntRegXOp(const char *mnem, ExtMachInst machInst, OpClass __opClass,$/;"	f	class:ArmISA::MicroIntRegXOp
MicroIntRegXOp	src/arch/arm/insts/macromem.hh	/^class MicroIntRegXOp : public MicroOp$/;"	c	namespace:ArmISA
MicroMemOp	src/arch/arm/insts/macromem.hh	/^    MicroMemOp(const char *mnem, ExtMachInst machInst, OpClass __opClass,$/;"	f	class:ArmISA::MicroMemOp
MicroMemOp	src/arch/arm/insts/macromem.hh	/^class MicroMemOp : public MicroIntImmOp$/;"	c	namespace:ArmISA
MicroNeonMemOp	src/arch/arm/insts/macromem.hh	/^    MicroNeonMemOp(const char *mnem, ExtMachInst machInst, OpClass __opClass,$/;"	f	class:ArmISA::MicroNeonMemOp
MicroNeonMemOp	src/arch/arm/insts/macromem.hh	/^class MicroNeonMemOp : public MicroOp$/;"	c	namespace:ArmISA
MicroNeonMixLaneOp	src/arch/arm/insts/macromem.hh	/^    MicroNeonMixLaneOp(const char *mnem, ExtMachInst machInst,$/;"	f	class:ArmISA::MicroNeonMixLaneOp
MicroNeonMixLaneOp	src/arch/arm/insts/macromem.hh	/^class MicroNeonMixLaneOp : public MicroNeonMixOp$/;"	c	namespace:ArmISA
MicroNeonMixLaneOp64	src/arch/arm/insts/macromem.hh	/^    MicroNeonMixLaneOp64(const char *mnem, ExtMachInst machInst,$/;"	f	class:ArmISA::MicroNeonMixLaneOp64
MicroNeonMixLaneOp64	src/arch/arm/insts/macromem.hh	/^class MicroNeonMixLaneOp64 : public MicroOp$/;"	c	namespace:ArmISA
MicroNeonMixOp	src/arch/arm/insts/macromem.hh	/^    MicroNeonMixOp(const char *mnem, ExtMachInst machInst, OpClass __opClass,$/;"	f	class:ArmISA::MicroNeonMixOp
MicroNeonMixOp	src/arch/arm/insts/macromem.hh	/^class MicroNeonMixOp : public MicroOp$/;"	c	namespace:ArmISA
MicroNeonMixOp64	src/arch/arm/insts/macromem.hh	/^    MicroNeonMixOp64(const char *mnem, ExtMachInst machInst, OpClass __opClass,$/;"	f	class:ArmISA::MicroNeonMixOp64
MicroNeonMixOp64	src/arch/arm/insts/macromem.hh	/^class MicroNeonMixOp64 : public MicroOp$/;"	c	namespace:ArmISA
MicroOp	src/arch/arm/insts/macromem.hh	/^    MicroOp(const char *mnem, ExtMachInst machInst, OpClass __opClass)$/;"	f	class:ArmISA::MicroOp
MicroOp	src/arch/arm/insts/macromem.hh	/^class MicroOp : public PredOp$/;"	c	namespace:ArmISA
MicroOpX	src/arch/arm/insts/macromem.hh	/^    MicroOpX(const char *mnem, ExtMachInst machInst, OpClass __opClass)$/;"	f	class:ArmISA::MicroOpX
MicroOpX	src/arch/arm/insts/macromem.hh	/^class MicroOpX : public ArmStaticInst$/;"	c	namespace:ArmISA
MicroPC	src/base/types.hh	/^typedef uint16_t MicroPC;$/;"	t
MicroPCRomBit	src/base/types.hh	/^static const MicroPC MicroPCRomBit = 1 << (sizeof(MicroPC) * 8 - 1);$/;"	v
MicroSetPCCPSR	src/arch/arm/insts/macromem.hh	/^    MicroSetPCCPSR(const char *mnem, ExtMachInst machInst, OpClass __opClass,$/;"	f	class:ArmISA::MicroSetPCCPSR
MicroSetPCCPSR	src/arch/arm/insts/macromem.hh	/^class MicroSetPCCPSR : public MicroOp$/;"	c	namespace:ArmISA
Micro_Container	src/arch/micro_asm.py	/^class Micro_Container(object):$/;"	c
MicrocodeRom	src/arch/x86/microcode_rom.hh	/^    class MicrocodeRom$/;"	c	namespace:X86ISAInst
MicrocodeRom	src/sim/microcode_rom.hh	/^class MicrocodeRom$/;"	c
Microop	src/arch/micro_asm.py	/^class Microop(Statement):$/;"	c
MightBeMicro	src/arch/arm/insts/mem.hh	/^    MightBeMicro(const char *mnem, ExtMachInst _machInst, OpClass __opClass)$/;"	f	class:ArmISA::MightBeMicro
MightBeMicro	src/arch/arm/insts/mem.hh	/^class MightBeMicro : public PredOp$/;"	c	namespace:ArmISA
MightBeMicro64	src/arch/arm/insts/mem64.hh	/^    MightBeMicro64(const char *mnem, ExtMachInst _machInst, OpClass __opClass)$/;"	f	class:ArmISA::MightBeMicro64
MightBeMicro64	src/arch/arm/insts/mem64.hh	/^class MightBeMicro64 : public ArmStaticInst$/;"	c	namespace:ArmISA
MinReadOnlyIpr	src/arch/alpha/ipr.hh	/^    MinReadOnlyIpr,$/;"	e	enum:AlphaISA::MiscRegIpr
MinWriteOnlyIpr	src/arch/alpha/ipr.hh	/^    MinWriteOnlyIpr,$/;"	e	enum:AlphaISA::MiscRegIpr
Min_Conf	src/mem/cache/prefetch/stride.hh	/^    static const int Min_Conf = INT_MIN;$/;"	m	class:StridePrefetcher
MinimumGrant	src/dev/CopyEngine.py	/^    MinimumGrant = 0xff$/;"	v	class:CopyEngine
MinimumGrant	src/dev/Ethernet.py	/^    MinimumGrant = 0xb0$/;"	v	class:NSGigE
MinimumGrant	src/dev/Ethernet.py	/^    MinimumGrant = 0xb0$/;"	v	class:Sinic
MinimumGrant	src/dev/Ethernet.py	/^    MinimumGrant = 0xff$/;"	v	class:IGbE
MinimumGrant	src/dev/Pci.py	/^    MinimumGrant = Param.UInt8(0x00, "Minimum Grant")$/;"	v	class:PciDevice
Minimum_Pri	src/sim/eventq.hh	/^    static const Priority Minimum_Pri =          SCHAR_MIN;$/;"	m	class:EventBase
Mips	src/base/loader/object_file.hh	/^        Mips,$/;"	e	enum:ObjectFile::Arch
MipsAccess	src/dev/mips/access.h	/^struct MipsAccess$/;"	s
MipsFault	src/arch/mips/faults.hh	/^class MipsFault : public MipsFaultBase$/;"	c	namespace:MipsISA
MipsFaultBase	src/arch/mips/faults.hh	/^class MipsFaultBase : public FaultBase$/;"	c	namespace:MipsISA
MipsISA	src/arch/mips/MipsISA.py	/^class MipsISA(SimObject):$/;"	c
MipsISA	src/arch/mips/decoder.cc	/^namespace MipsISA$/;"	n	file:
MipsISA	src/arch/mips/decoder.hh	/^namespace MipsISA$/;"	n
MipsISA	src/arch/mips/dsp.hh	/^namespace MipsISA {$/;"	n
MipsISA	src/arch/mips/dt_constants.hh	/^namespace MipsISA$/;"	n
MipsISA	src/arch/mips/faults.cc	/^namespace MipsISA$/;"	n	file:
MipsISA	src/arch/mips/faults.hh	/^namespace MipsISA$/;"	n
MipsISA	src/arch/mips/interrupts.cc	/^namespace MipsISA$/;"	n	file:
MipsISA	src/arch/mips/interrupts.hh	/^namespace MipsISA$/;"	n
MipsISA	src/arch/mips/isa.cc	/^namespace MipsISA$/;"	n	file:
MipsISA	src/arch/mips/isa.hh	/^namespace MipsISA$/;"	n
MipsISA	src/arch/mips/isa_traits.hh	/^namespace MipsISA$/;"	n
MipsISA	src/arch/mips/kernel_stats.hh	/^namespace MipsISA {$/;"	n
MipsISA	src/arch/mips/locked_mem.hh	/^namespace MipsISA$/;"	n
MipsISA	src/arch/mips/microcode_rom.hh	/^namespace MipsISA$/;"	n
MipsISA	src/arch/mips/mmapped_ipr.hh	/^namespace MipsISA$/;"	n
MipsISA	src/arch/mips/mt.hh	/^namespace MipsISA$/;"	n
MipsISA	src/arch/mips/mt_constants.hh	/^namespace MipsISA$/;"	n
MipsISA	src/arch/mips/pagetable.cc	/^namespace MipsISA$/;"	n	file:
MipsISA	src/arch/mips/pagetable.hh	/^namespace MipsISA {$/;"	n
MipsISA	src/arch/mips/pra_constants.hh	/^namespace MipsISA$/;"	n
MipsISA	src/arch/mips/registers.hh	/^namespace MipsISA$/;"	n
MipsISA	src/arch/mips/remote_gdb.hh	/^namespace MipsISA$/;"	n
MipsISA	src/arch/mips/stacktrace.hh	/^namespace MipsISA$/;"	n
MipsISA	src/arch/mips/tlb.hh	/^namespace MipsISA {$/;"	n
MipsISA	src/arch/mips/types.hh	/^namespace MipsISA$/;"	n
MipsISA	src/arch/mips/utility.cc	/^namespace MipsISA {$/;"	n	file:
MipsISA	src/arch/mips/utility.hh	/^namespace MipsISA {$/;"	n
MipsISA	src/arch/mips/vtophys.hh	/^namespace MipsISA {$/;"	n
MipsISA	src/cpu/BaseCPU.py	/^    from MipsISA import MipsISA$/;"	i
MipsInterrupts	src/arch/mips/MipsInterrupts.py	/^class MipsInterrupts(SimObject):$/;"	c
MipsInterrupts	src/cpu/BaseCPU.py	/^    from MipsInterrupts import MipsInterrupts$/;"	i
MipsLinux	src/arch/mips/linux/linux.hh	/^class MipsLinux : public Linux$/;"	c
MipsLinuxProcess	src/arch/mips/linux/process.cc	/^MipsLinuxProcess::MipsLinuxProcess(LiveProcessParams * params,$/;"	f	class:MipsLinuxProcess
MipsLinuxProcess	src/arch/mips/linux/process.hh	/^class MipsLinuxProcess : public MipsLiveProcess$/;"	c
MipsLiveProcess	src/arch/mips/process.cc	/^MipsLiveProcess::MipsLiveProcess(LiveProcessParams * params,$/;"	f	class:MipsLiveProcess
MipsLiveProcess	src/arch/mips/process.hh	/^class MipsLiveProcess : public LiveProcess$/;"	c
MipsSystem	src/arch/mips/MipsSystem.py	/^class MipsSystem(System):$/;"	c
MipsSystem	src/arch/mips/system.cc	/^MipsSystem::MipsSystem(Params *p) : System(p)$/;"	f	class:MipsSystem
MipsSystem	src/arch/mips/system.hh	/^class MipsSystem : public System$/;"	c
MipsTLB	src/arch/mips/MipsTLB.py	/^class MipsTLB(BaseTLB):$/;"	c
MipsTLB	src/cpu/BaseCPU.py	/^    from MipsTLB import MipsTLB$/;"	i
Misc	src/dev/arm/rv_ctrl.hh	/^        Misc       = 0x60,$/;"	e	enum:RealViewCtrl::__anon67
MiscIntRegNums	src/arch/mips/registers.hh	/^enum MiscIntRegNums {$/;"	g	namespace:MipsISA
MiscIntRegNums	src/arch/power/registers.hh	/^enum MiscIntRegNums {$/;"	g	namespace:PowerISA
MiscOp	src/arch/power/insts/misc.hh	/^    MiscOp(const char *mnem, MachInst _machInst, OpClass __opClass)$/;"	f	class:PowerISA::MiscOp
MiscOp	src/arch/power/insts/misc.hh	/^class MiscOp : public PowerStaticInst$/;"	c	namespace:PowerISA
MiscReg	src/arch/alpha/registers.hh	/^typedef uint64_t MiscReg;$/;"	t	namespace:AlphaISA
MiscReg	src/arch/arm/registers.hh	/^typedef uint64_t MiscReg;$/;"	t	namespace:ArmISA
MiscReg	src/arch/mips/registers.hh	/^typedef uint64_t MiscReg;$/;"	t	namespace:MipsISA
MiscReg	src/arch/null/registers.hh	/^typedef uint64_t MiscReg;$/;"	t	namespace:NullISA
MiscReg	src/arch/power/registers.hh	/^typedef uint64_t MiscReg;$/;"	t	namespace:PowerISA
MiscReg	src/arch/sparc/registers.hh	/^typedef uint64_t MiscReg;$/;"	t	namespace:SparcISA
MiscReg	src/arch/x86/registers.hh	/^typedef uint64_t MiscReg;$/;"	t	namespace:X86ISA
MiscReg	src/cpu/checker/cpu.hh	/^    typedef TheISA::MiscReg MiscReg;$/;"	t	class:CheckerCPU
MiscReg	src/cpu/inorder/cpu.hh	/^    typedef TheISA::MiscReg MiscReg;$/;"	t	class:InOrderCPU
MiscReg	src/cpu/inorder/inorder_dyn_inst.hh	/^    typedef TheISA::MiscReg MiscReg;$/;"	t	class:InOrderDynInst
MiscReg	src/cpu/o3/dyn_inst.hh	/^    typedef TheISA::MiscReg  MiscReg;$/;"	t	class:BaseO3DynInst
MiscReg	src/cpu/ozone/cpu.hh	/^    typedef TheISA::MiscReg MiscReg;$/;"	t	class:OzoneCPU
MiscReg	src/cpu/ozone/dyn_inst.hh	/^    typedef TheISA::MiscReg MiscReg;$/;"	t	class:OzoneDynInst
MiscReg	src/cpu/ozone/thread_state.hh	/^    typedef TheISA::MiscReg MiscReg;$/;"	t	struct:OzoneThreadState
MiscReg	src/cpu/simple/base.hh	/^    typedef TheISA::MiscReg MiscReg;$/;"	t	class:BaseSimpleCPU
MiscReg	src/cpu/simple_thread.hh	/^    typedef TheISA::MiscReg MiscReg;$/;"	t	class:SimpleThread
MiscReg	src/cpu/thread_context.hh	/^    typedef TheISA::MiscReg MiscReg;$/;"	t	class:ThreadContext
MiscRegClass	src/cpu/reg_class.hh	/^    MiscRegClass        \/\/\/< Control (misc) register$/;"	e	enum:RegClass
MiscRegIndex	src/arch/alpha/registers.hh	/^enum MiscRegIndex$/;"	g	namespace:AlphaISA
MiscRegIndex	src/arch/arm/miscregs.hh	/^    enum MiscRegIndex {$/;"	g	namespace:ArmISA
MiscRegIndex	src/arch/mips/registers.hh	/^enum MiscRegIndex{$/;"	g	namespace:MipsISA
MiscRegIndex	src/arch/power/miscregs.hh	/^enum MiscRegIndex {$/;"	g	namespace:PowerISA
MiscRegIndex	src/arch/sparc/miscregs.hh	/^enum MiscRegIndex$/;"	g	namespace:SparcISA
MiscRegIndex	src/arch/x86/regs/misc.hh	/^    enum MiscRegIndex$/;"	g	namespace:X86ISA
MiscRegIndexToIpr	src/arch/alpha/ipr.cc	/^md_ipr_names MiscRegIndexToIpr[NumInternalProcRegs] = {$/;"	m	namespace:AlphaISA	file:
MiscRegInfo	src/arch/arm/miscregs.hh	/^    enum MiscRegInfo {$/;"	g	namespace:ArmISA
MiscRegInitializerEntry	src/arch/arm/isa.hh	/^        struct MiscRegInitializerEntry {$/;"	s	class:ArmISA::ISA
MiscRegIpr	src/arch/alpha/ipr.hh	/^enum MiscRegIpr$/;"	g	namespace:AlphaISA
MiscRegLUTEntry	src/arch/arm/isa.hh	/^        struct MiscRegLUTEntry {$/;"	s	class:ArmISA::ISA
MiscRegSwitch	src/arch/arm/isa.cc	/^    ISA::MiscRegSwitch[miscRegTranslateMax] = {$/;"	m	class:ArmISA::ISA	typeref:struct:ArmISA::ISA::	file:
MiscRegSwitch	src/arch/arm/isa.hh	/^                            MiscRegSwitch[miscRegTranslateMax];$/;"	m	class:ArmISA::ISA	typeref:struct:ArmISA::ISA::MiscRegInitializerEntry
Misc_Reg_Base	src/arch/alpha/registers.hh	/^    Misc_Reg_Base = CC_Reg_Base + NumCCRegs, \/\/ NumCCRegs == 0$/;"	e	enum:AlphaISA::DependenceTags
Misc_Reg_Base	src/arch/arm/registers.hh	/^const int Misc_Reg_Base = CC_Reg_Base + NumCCRegs; \/\/ NumCCRegs == 0$/;"	m	namespace:ArmISA
Misc_Reg_Base	src/arch/mips/registers.hh	/^const int Misc_Reg_Base = CC_Reg_Base + NumCCRegs; \/\/ NumCCRegs == 0$/;"	m	namespace:MipsISA
Misc_Reg_Base	src/arch/power/registers.hh	/^const int Misc_Reg_Base = CC_Reg_Base + NumCCRegs; \/\/ NumCCRegs == 0$/;"	m	namespace:PowerISA
Misc_Reg_Base	src/arch/sparc/registers.hh	/^    Misc_Reg_Base = CC_Reg_Base + NumCCRegs, \/\/ NumCCRegs == 0$/;"	e	enum:SparcISA::DependenceTags
Misc_Reg_Base	src/arch/x86/registers.hh	/^    Misc_Reg_Base = CC_Reg_Base + NumCCRegs,$/;"	e	enum:X86ISA::DependenceTags
MmDisk	src/dev/sparc/T1000.py	/^class MmDisk(BasicPioDevice):$/;"	c
MmDisk	src/dev/sparc/mm_disk.cc	/^MmDisk::MmDisk(const Params *p)$/;"	f	class:MmDisk
MmDisk	src/dev/sparc/mm_disk.hh	/^class MmDisk : public BasicPioDevice$/;"	c
ModNum	src/base/mod_num.hh	/^    ModNum() {}$/;"	f	class:ModNum
ModNum	src/base/mod_num.hh	/^    ModNum(T n) { setValue(n); }$/;"	f	class:ModNum
ModNum	src/base/mod_num.hh	/^    ModNum(const ModNum<T, MV> &n) : value(n.value) {}$/;"	f	class:ModNum
ModNum	src/base/mod_num.hh	/^class ModNum {$/;"	c
ModRMState	src/arch/x86/decoder.hh	/^        ModRMState,$/;"	e	enum:X86ISA::Decoder::State
Mode	src/base/vnc/convert.hh	/^    enum Mode {$/;"	g	class:VideoConvert
Mode	src/sim/tlb.hh	/^    enum Mode { Read, Write, Execute };$/;"	g	class:BaseTLB
ModeVal	src/dev/intel_8254_timer.hh	/^    enum ModeVal {$/;"	g	class:Intel8254Timer
ModuleType	src/python/m5/SimObject.py	/^from types import FunctionType, MethodType, ModuleType$/;"	i
MonitorMasterPort	src/mem/comm_monitor.hh	/^        MonitorMasterPort(const std::string& _name, CommMonitor& _mon)$/;"	f	class:CommMonitor::MonitorMasterPort
MonitorMasterPort	src/mem/comm_monitor.hh	/^    class MonitorMasterPort : public MasterPort$/;"	c	class:CommMonitor
MonitorSlavePort	src/mem/comm_monitor.hh	/^        MonitorSlavePort(const std::string& _name, CommMonitor& _mon)$/;"	f	class:CommMonitor::MonitorSlavePort
MonitorSlavePort	src/mem/comm_monitor.hh	/^    class MonitorSlavePort : public SlavePort$/;"	c	class:CommMonitor
MonitorStats	src/mem/comm_monitor.hh	/^        MonitorStats(const CommMonitorParams* params) :$/;"	f	struct:CommMonitor::MonitorStats
MonitorStats	src/mem/comm_monitor.hh	/^    struct MonitorStats$/;"	s	class:CommMonitor
MouseEvents	src/base/vnc/vncserver.hh	/^    enum MouseEvents {$/;"	g	class:VncServer
MouseId	src/dev/ps2.hh	/^    MouseId         = 0x00,$/;"	e	enum:Ps2::__anon82
MouseLeftButton	src/base/vnc/vncserver.hh	/^        MouseLeftButton     = 0x1,$/;"	e	enum:VncServer::MouseEvents
MouseMiddleButton	src/base/vnc/vncserver.hh	/^        MouseMiddleButton   = 0x4$/;"	e	enum:VncServer::MouseEvents
MouseRightButton	src/base/vnc/vncserver.hh	/^        MouseRightButton    = 0x2,$/;"	e	enum:VncServer::MouseEvents
MrrcOp	src/arch/arm/insts/misc.hh	/^    MrrcOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:MrrcOp
MrrcOp	src/arch/arm/insts/misc.hh	/^class MrrcOp : public PredOp$/;"	c
MrsOp	src/arch/arm/insts/misc.hh	/^    MrsOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:MrsOp
MrsOp	src/arch/arm/insts/misc.hh	/^class MrsOp : public PredOp$/;"	c
MsbOnly	src/dev/intel_8254_timer.hh	/^        MsbOnly,$/;"	e	enum:Intel8254Timer::ReadWriteVal
MsgPtr	src/mem/ruby/slicc_interface/Message.hh	/^typedef RefCountingPtr<Message> MsgPtr;$/;"	t
MsgVecType	src/mem/ruby/slicc_interface/AbstractController.hh	/^    typedef std::vector<MessageBuffer*> MsgVecType;$/;"	t	class:AbstractController
MsrBase	src/arch/arm/insts/misc.hh	/^    MsrBase(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:MsrBase
MsrBase	src/arch/arm/insts/misc.hh	/^class MsrBase : public PredOp$/;"	c
MsrImmOp	src/arch/arm/insts/misc.hh	/^    MsrImmOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:MsrImmOp
MsrImmOp	src/arch/arm/insts/misc.hh	/^class MsrImmOp : public MsrBase$/;"	c
MsrMap	src/arch/x86/regs/msr.hh	/^typedef m5::hash_map<Addr, MiscRegIndex> MsrMap;$/;"	t	namespace:X86ISA
MsrRegOp	src/arch/arm/insts/misc.hh	/^    MsrRegOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:MsrRegOp
MsrRegOp	src/arch/arm/insts/misc.hh	/^class MsrRegOp : public MsrBase$/;"	c
MsrVal	src/arch/x86/regs/msr.cc	/^typedef MsrMap::value_type MsrVal;$/;"	t	namespace:X86ISA	file:
Mult3	src/arch/arm/insts/mult.hh	/^    Mult3(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::Mult3
Mult3	src/arch/arm/insts/mult.hh	/^class Mult3 : public PredOp$/;"	c	namespace:ArmISA
Mult4	src/arch/arm/insts/mult.hh	/^    Mult4(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::Mult4
Mult4	src/arch/arm/insts/mult.hh	/^class Mult4 : public Mult3$/;"	c	namespace:ArmISA
MultDiv	src/cpu/inorder/resources/mult_div_unit.hh	/^        MultDiv$/;"	e	enum:MultDivUnit::Command
MultDivUnit	src/cpu/inorder/resources/mult_div_unit.cc	/^MultDivUnit::MultDivUnit(string res_name, int res_id, int res_width,$/;"	f	class:MultDivUnit
MultDivUnit	src/cpu/inorder/resources/mult_div_unit.hh	/^class MultDivUnit : public Resource {$/;"	c
MultiBitSelBloomFilter	src/mem/ruby/filters/MultiBitSelBloomFilter.cc	/^MultiBitSelBloomFilter::MultiBitSelBloomFilter(string str)$/;"	f	class:MultiBitSelBloomFilter
MultiBitSelBloomFilter	src/mem/ruby/filters/MultiBitSelBloomFilter.hh	/^class MultiBitSelBloomFilter : public AbstractBloomFilter$/;"	c
MultiGrainBloomFilter	src/mem/ruby/filters/MultiGrainBloomFilter.cc	/^MultiGrainBloomFilter::MultiGrainBloomFilter(string str)$/;"	f	class:MultiGrainBloomFilter
MultiGrainBloomFilter	src/mem/ruby/filters/MultiGrainBloomFilter.hh	/^class MultiGrainBloomFilter : public AbstractBloomFilter$/;"	c
MultreeCrossbar	src/mem/ruby/network/orion/Crossbar/MultreeCrossbar.cc	/^MultreeCrossbar::MultreeCrossbar($/;"	f	class:MultreeCrossbar
MultreeCrossbar	src/mem/ruby/network/orion/Crossbar/MultreeCrossbar.hh	/^class MultreeCrossbar : public Crossbar$/;"	c
MustBeOne	src/arch/arm/tlb.hh	/^        MustBeOne = 0x40$/;"	e	enum:ArmISA::TLB::ArmFlags
N	src/arch/arm/pagetable.hh	/^    uint8_t N;              \/\/ Number of bits in pagesize$/;"	m	struct:ArmISA::TlbEntry
N	src/base/random.hh	/^    static const int N = 624;$/;"	m	class:Random
NAN	src/base/stats/text.cc	/^#define NAN /;"	d	file:
NCH	src/mem/ruby/network/orion/TechParameter.hh	/^      NCH,$/;"	e	enum:TechParameter::ChannelType
NDtbMissFault	src/arch/alpha/faults.hh	/^    NDtbMissFault(VAddr vaddr, Request::Flags reqFlags, uint64_t flags)$/;"	f	class:AlphaISA::NDtbMissFault
NDtbMissFault	src/arch/alpha/faults.hh	/^class NDtbMissFault : public DtbFault$/;"	c	namespace:AlphaISA
NEG_DFF	src/mem/ruby/network/orion/FlipFlop.hh	/^      NEG_DFF$/;"	e	enum:FlipFlop::FFModel
NI	src/arch/x86/decoder_tables.cc	/^        NI = NoImm,$/;"	e	enum:X86ISA::SizeType	file:
NMAGIC	src/base/loader/exec_aout.h	/^#define	NMAGIC	/;"	d
NMI	src/arch/x86/intmessage.hh	/^            NMI = 4,$/;"	e	enum:X86ISA::DeliveryMode::IntDeliveryMode
NN_CONFIG_MASK	src/dev/arm/gic_pl390.hh	/^    static const int NN_CONFIG_MASK = 0x55555555;$/;"	m	class:Pl390
NONE	src/cpu/o3/rename.hh	/^        NONE$/;"	e	enum:DefaultRename::FullSource
NORMAL_MEM	src/mem/ruby/network/orion/Buffer/MemUnit.hh	/^      NORMAL_MEM$/;"	e	enum:MemUnit::MemModel
NOROUND	src/arch/mips/dsp.hh	/^enum { NOROUND, ROUND };$/;"	e	enum:MipsISA::__anon19
NOSATURATE	src/arch/mips/dsp.hh	/^enum { NOSATURATE, SATURATE };$/;"	e	enum:MipsISA::__anon18
NO_ACCESS	src/mem/request.hh	/^    static const FlagsType NO_ACCESS                   = 0x00080000;$/;"	m	class:Request
NO_MODEL	src/mem/ruby/network/orion/Allocator/Arbiter.hh	/^      NO_MODEL = 0,$/;"	e	enum:Arbiter::ArbiterModel
NO_MODEL	src/mem/ruby/network/orion/Allocator/VCAllocator.hh	/^      NO_MODEL = 0,$/;"	e	enum:VCAllocator::VAModel
NO_MODEL	src/mem/ruby/network/orion/Buffer/AmpUnit.hh	/^      NO_MODEL = 0,$/;"	e	enum:AmpUnit::AmpModel
NO_MODEL	src/mem/ruby/network/orion/Buffer/BitlineUnit.hh	/^      NO_MODEL = 0,$/;"	e	enum:BitlineUnit::BitlineModel
NO_MODEL	src/mem/ruby/network/orion/Buffer/Buffer.hh	/^      NO_MODEL = 0,$/;"	e	enum:Buffer::BufferModel
NO_MODEL	src/mem/ruby/network/orion/Buffer/DecoderUnit.hh	/^      NO_MODEL = 0,$/;"	e	enum:DecoderUnit::DecModel
NO_MODEL	src/mem/ruby/network/orion/Buffer/MemUnit.hh	/^      NO_MODEL = 0,$/;"	e	enum:MemUnit::MemModel
NO_MODEL	src/mem/ruby/network/orion/Buffer/OutdrvUnit.hh	/^      NO_MODEL = 0,$/;"	e	enum:OutdrvUnit::OutdrvModel
NO_MODEL	src/mem/ruby/network/orion/Buffer/PrechargeUnit.hh	/^      NO_MODEL = 0,$/;"	e	enum:PrechargeUnit::PrechargeModel
NO_MODEL	src/mem/ruby/network/orion/Buffer/WordlineUnit.hh	/^      NO_MODEL = 0,$/;"	e	enum:WordlineUnit::WordlineModel
NO_MODEL	src/mem/ruby/network/orion/Crossbar/Crossbar.hh	/^      NO_MODEL = 0,$/;"	e	enum:Crossbar::CrossbarModel
NO_MODEL	src/mem/ruby/network/orion/FlipFlop.hh	/^      NO_MODEL = 0,$/;"	e	enum:FlipFlop::FFModel
NO_STAT64	src/sim/syscall_emul.hh	/^#define NO_STAT64 /;"	d
NPIE	src/dev/arm/vgic.hh	/^    Bitfield<3> NPIE;$/;"	m	class:VGic
NP_GATE	src/mem/ruby/network/orion/Crossbar/Crossbar.hh	/^      NP_GATE$/;"	e	enum:Crossbar::TransType
NPtePage	src/arch/alpha/isa_traits.hh	/^const Addr NPtePage = ULL(1) << NPtePageShift;$/;"	m	namespace:AlphaISA
NPtePage	src/arch/arm/isa_traits.hh	/^    const Addr NPtePage = ULL(1) << NPtePageShift;$/;"	m	namespace:ArmISA
NPtePage	src/arch/mips/isa_traits.hh	/^const Addr NPtePage = ULL(1) << NPtePageShift;$/;"	m	namespace:MipsISA
NPtePage	src/arch/power/isa_traits.hh	/^const Addr NPtePage = ULL(1) << NPtePageShift;$/;"	m	namespace:PowerISA
NPtePageShift	src/arch/alpha/isa_traits.hh	/^const Addr NPtePageShift = PageShift - PteShift;$/;"	m	namespace:AlphaISA
NPtePageShift	src/arch/arm/isa_traits.hh	/^    const Addr NPtePageShift = PageShift - PteShift;$/;"	m	namespace:ArmISA
NPtePageShift	src/arch/mips/isa_traits.hh	/^const Addr NPtePageShift = PageShift - PteShift;$/;"	m	namespace:MipsISA
NPtePageShift	src/arch/power/isa_traits.hh	/^const Addr NPtePageShift = PageShift - PteShift;$/;"	m	namespace:PowerISA
NSECTOR_OFFSET	src/dev/ide_disk.hh	/^#define NSECTOR_OFFSET /;"	d
NSEC_PER_MSEC	src/base/time.hh	/^    static const long NSEC_PER_MSEC = 1000 * 1000;$/;"	m	class:Time
NSEC_PER_SEC	src/base/time.hh	/^    static const long NSEC_PER_SEC  = 1000 * 1000 * 1000;$/;"	m	class:Time
NSEC_PER_USEC	src/base/time.hh	/^    static const long NSEC_PER_USEC = 1000;$/;"	m	class:Time
NSGigE	src/dev/Ethernet.py	/^class NSGigE(EtherDevBase):$/;"	c
NSGigE	src/dev/arm/RealView.py	/^from Ethernet import NSGigE, IGbE_e1000, IGbE_igb$/;"	i
NSGigE	src/dev/ns_gige.cc	/^NSGigE::NSGigE(Params *p)$/;"	f	class:NSGigE
NSGigE	src/dev/ns_gige.hh	/^class NSGigE : public EtherDevBase$/;"	c
NSGigEInt	src/dev/ns_gige.hh	/^    NSGigEInt(const std::string &name, NSGigE *d)$/;"	f	class:NSGigEInt
NSGigEInt	src/dev/ns_gige.hh	/^class NSGigEInt : public EtherInt$/;"	c
NTBit	src/arch/x86/regs/misc.hh	/^        NTBit = 1 << 14,$/;"	e	enum:X86ISA::RFLAGBit
NULL	src/python/m5/params.py	/^NULL = NullSimObject()$/;"	v
NULL_VNET_	src/mem/ruby/network/garnet/NetworkHeader.hh	/^enum VNET_type {CTRL_VNET_, DATA_VNET_, NULL_VNET_, NUM_VNET_TYPE_};$/;"	e	enum:VNET_type
NUMBER_WORDS_PER_SET	src/mem/ruby/common/Set.hh	/^const int NUMBER_WORDS_PER_SET = 1;$/;"	v
NUMREGS	src/arch/arm/remote_gdb.hh	/^const int NUMREGS   = 41;  \/* r0-r15, cpsr, d0-d31, fpscr *\/$/;"	m	namespace:ArmISA
NUMREGS_64	src/arch/arm/remote_gdb.hh	/^const int NUMREGS_64 = 98;  \/\/ x0-x31, pc, cpsr (64-bit GPRs)$/;"	m	namespace:ArmISA
NUM_APIC_REGS	src/arch/x86/regs/apic.hh	/^        NUM_APIC_REGS$/;"	e	enum:X86ISA::ApicRegIndex
NUM_ARCH_INTREGS	src/arch/arm/intregs.hh	/^    NUM_ARCH_INTREGS = 32,$/;"	e	enum:ArmISA::IntRegIndex
NUM_BLOCKED_CAUSES	src/mem/cache/base.hh	/^        NUM_BLOCKED_CAUSES$/;"	e	enum:BaseCache::BlockedCause
NUM_CCREGS	src/arch/x86/regs/ccr.hh	/^        NUM_CCREGS$/;"	e	enum:X86ISA::CCRegIndex
NUM_COMMAND_ATTRIBUTES	src/mem/packet.hh	/^        NUM_COMMAND_ATTRIBUTES$/;"	e	enum:MemCmd::Attribute
NUM_FLIT_STAGE_	src/mem/ruby/network/garnet/NetworkHeader.hh	/^enum flit_stage {I_, VA_, SA_, ST_, LT_, NUM_FLIT_STAGE_};$/;"	e	enum:flit_stage
NUM_FLIT_TYPE_	src/mem/ruby/network/garnet/NetworkHeader.hh	/^enum flit_type {HEAD_, BODY_, TAIL_, HEAD_TAIL_, NUM_FLIT_TYPE_};$/;"	e	enum:flit_type
NUM_FLOATREGS	src/arch/x86/regs/float.hh	/^        NUM_FLOATREGS = FLOATREG_MICROFP_BASE + NumMicroFpRegs$/;"	e	enum:X86ISA::FloatRegIndex
NUM_INTREGS	src/arch/arm/intregs.hh	/^    NUM_INTREGS,$/;"	e	enum:ArmISA::IntRegIndex
NUM_INTREGS	src/arch/x86/regs/int.hh	/^        NUM_INTREGS$/;"	e	enum:X86ISA::IntRegIndex
NUM_LR	src/dev/arm/vgic.hh	/^    static const int NUM_LR             = 4;$/;"	m	class:VGic
NUM_MEM_CMDS	src/mem/packet.hh	/^        NUM_MEM_CMDS$/;"	e	enum:MemCmd::Command
NUM_MISCREGS	src/arch/alpha/registers.hh	/^    NUM_MISCREGS$/;"	e	enum:AlphaISA::MiscRegIndex
NUM_MISCREGS	src/arch/arm/miscregs.hh	/^        NUM_MISCREGS                    \/\/ 605$/;"	e	enum:ArmISA::MiscRegIndex
NUM_MISCREGS	src/arch/arm/miscregs.hh	/^    static_assert(sizeof(miscRegName) \/ sizeof(*miscRegName) == NUM_MISCREGS,$/;"	m	namespace:ArmISA
NUM_MISCREGS	src/arch/power/miscregs.hh	/^    NUM_MISCREGS = 0$/;"	e	enum:PowerISA::MiscRegIndex
NUM_MISCREGS	src/arch/x86/regs/misc.hh	/^        NUM_MISCREGS$/;"	e	enum:X86ISA::MiscRegIndex
NUM_MISCREG_INFOS	src/arch/arm/miscregs.hh	/^        NUM_MISCREG_INFOS$/;"	e	enum:ArmISA::MiscRegInfo
NUM_OPEN_FLAGS	src/arch/alpha/linux/linux.cc	/^const int AlphaLinux::NUM_OPEN_FLAGS =$/;"	m	class:AlphaLinux	file:
NUM_OPEN_FLAGS	src/arch/alpha/linux/linux.hh	/^    static const int NUM_OPEN_FLAGS;$/;"	m	class:AlphaLinux
NUM_OPEN_FLAGS	src/arch/alpha/tru64/tru64.cc	/^const int AlphaTru64::NUM_OPEN_FLAGS =$/;"	m	class:AlphaTru64	file:
NUM_OPEN_FLAGS	src/arch/alpha/tru64/tru64.hh	/^    static const int NUM_OPEN_FLAGS;$/;"	m	class:AlphaTru64
NUM_OPEN_FLAGS	src/arch/arm/linux/linux.cc	/^const int ArmLinux32::NUM_OPEN_FLAGS = sizeof(ArmLinux32::openFlagTable) \/$/;"	m	class:ArmLinux32	file:
NUM_OPEN_FLAGS	src/arch/arm/linux/linux.cc	/^const int ArmLinux64::NUM_OPEN_FLAGS = sizeof(ArmLinux64::openFlagTable) \/$/;"	m	class:ArmLinux64	file:
NUM_OPEN_FLAGS	src/arch/arm/linux/linux.hh	/^    static const int NUM_OPEN_FLAGS;$/;"	m	class:ArmLinux32
NUM_OPEN_FLAGS	src/arch/arm/linux/linux.hh	/^    static const int NUM_OPEN_FLAGS;$/;"	m	class:ArmLinux64
NUM_OPEN_FLAGS	src/arch/mips/linux/linux.cc	/^const int MipsLinux::NUM_OPEN_FLAGS =$/;"	m	class:MipsLinux	file:
NUM_OPEN_FLAGS	src/arch/mips/linux/linux.hh	/^    static const int NUM_OPEN_FLAGS;$/;"	m	class:MipsLinux
NUM_OPEN_FLAGS	src/arch/power/linux/linux.cc	/^const int PowerLinux::NUM_OPEN_FLAGS =$/;"	m	class:PowerLinux	file:
NUM_OPEN_FLAGS	src/arch/power/linux/linux.hh	/^    static const int NUM_OPEN_FLAGS;$/;"	m	class:PowerLinux
NUM_OPEN_FLAGS	src/arch/sparc/linux/linux.cc	/^const int SparcLinux::NUM_OPEN_FLAGS =$/;"	m	class:SparcLinux	file:
NUM_OPEN_FLAGS	src/arch/sparc/linux/linux.hh	/^    static const int NUM_OPEN_FLAGS;$/;"	m	class:SparcLinux
NUM_OPEN_FLAGS	src/arch/sparc/solaris/solaris.cc	/^const int SparcSolaris::NUM_OPEN_FLAGS =$/;"	m	class:SparcSolaris	file:
NUM_OPEN_FLAGS	src/arch/sparc/solaris/solaris.hh	/^    static const int NUM_OPEN_FLAGS;$/;"	m	class:SparcSolaris
NUM_OPEN_FLAGS	src/arch/x86/linux/linux.cc	/^const int X86Linux32::NUM_OPEN_FLAGS =$/;"	m	class:X86Linux32	file:
NUM_OPEN_FLAGS	src/arch/x86/linux/linux.cc	/^const int X86Linux64::NUM_OPEN_FLAGS =$/;"	m	class:X86Linux64	file:
NUM_OPEN_FLAGS	src/arch/x86/linux/linux.hh	/^    static const int NUM_OPEN_FLAGS;$/;"	m	class:X86Linux32
NUM_OPEN_FLAGS	src/arch/x86/linux/linux.hh	/^    static const int NUM_OPEN_FLAGS;$/;"	m	class:X86Linux64
NUM_REQUEST_CAUSES	src/mem/cache/base.hh	/^        NUM_REQUEST_CAUSES$/;"	e	enum:BaseCache::RequestCause
NUM_ROOT_PROCS	src/arch/mips/linux/linux.hh	/^    static const int NUM_ROOT_PROCS = 2;$/;"	m	class:MipsLinux
NUM_SEGMENTREGS	src/arch/x86/regs/segment.hh	/^        NUM_SEGMENTREGS$/;"	e	enum:X86ISA::SegmentRegIndex
NUM_TRANSISTOR_TYPE	src/mem/ruby/network/orion/TechParameter.hh	/^      NUM_TRANSISTOR_TYPE$/;"	e	enum:TechParameter::TransistorType
NUM_VC_STATE_TYPE_	src/mem/ruby/network/garnet/NetworkHeader.hh	/^enum VC_state_type {IDLE_, VC_AB_, ACTIVE_, NUM_VC_STATE_TYPE_};$/;"	e	enum:VC_state_type
NUM_VNET_TYPE_	src/mem/ruby/network/garnet/NetworkHeader.hh	/^enum VNET_type {CTRL_VNET_, DATA_VNET_, NULL_VNET_, NUM_VNET_TYPE_};$/;"	e	enum:VNET_type
NUM_WIRE_LAYER_TYPE	src/mem/ruby/network/orion/TechParameter.hh	/^      NUM_WIRE_LAYER_TYPE$/;"	e	enum:TechParameter::WireLayerType
NVT	src/mem/ruby/network/orion/TechParameter.hh	/^      NVT,$/;"	e	enum:TechParameter::TransistorType
NWindows	src/arch/sparc/sparc_traits.hh	/^const int NWindows = 8;$/;"	m	namespace:SparcISA
NXM_LIB_VERSION	src/kern/tru64/tru64.hh	/^    const int NXM_LIB_VERSION = 301003;$/;"	m	class:Tru64
NXM_SLOT_AVAIL	src/kern/tru64/tru64.hh	/^        NXM_SLOT_AVAIL,$/;"	e	enum:Tru64::nxm_slot_state_t
NXM_SLOT_BOUND	src/kern/tru64/tru64.hh	/^        NXM_SLOT_BOUND,$/;"	e	enum:Tru64::nxm_slot_state_t
NXM_SLOT_EMPTY	src/kern/tru64/tru64.hh	/^        NXM_SLOT_EMPTY$/;"	e	enum:Tru64::nxm_slot_state_t
NXM_SLOT_UNBOUND	src/kern/tru64/tru64.hh	/^        NXM_SLOT_UNBOUND,$/;"	e	enum:Tru64::nxm_slot_state_t
NXM_TASK_INIT_VP	src/kern/tru64/tru64.hh	/^    static const int NXM_TASK_INIT_VP = 2;      \/\/!< initial thread is VP$/;"	m	class:Tru64
NXM_TYPE_MANAGER	src/kern/tru64/tru64.hh	/^        NXM_TYPE_MANAGER        = 2$/;"	e	enum:Tru64::nxm_thread_type
NXM_TYPE_SCS	src/kern/tru64/tru64.hh	/^        NXM_TYPE_SCS    = 0,$/;"	e	enum:Tru64::nxm_thread_type
NXM_TYPE_VP	src/kern/tru64/tru64.hh	/^        NXM_TYPE_VP             = 1,$/;"	e	enum:Tru64::nxm_thread_type
N_ALIGN	src/base/loader/exec_aout.h	/^#define	N_ALIGN(/;"	d
N_BADMAG	src/base/loader/exec_aout.h	/^#define	N_BADMAG(/;"	d
N_BADMAX	src/arch/alpha/aout_machdep.h	/^#define N_BADMAX$/;"	d
N_BSSADDR	src/arch/alpha/aout_machdep.h	/^#define N_BSSADDR(/;"	d
N_DATADDR	src/arch/alpha/aout_machdep.h	/^#define N_DATADDR(/;"	d
N_DATOFF	src/arch/alpha/aout_machdep.h	/^#define N_DATOFF(/;"	d
N_GATE	src/mem/ruby/network/orion/Crossbar/Crossbar.hh	/^      N_GATE,$/;"	e	enum:Crossbar::TransType
N_GETMAGIC	src/arch/alpha/aout_machdep.h	/^#define N_GETMAGIC(/;"	d
N_PAGSIZ	src/base/loader/exec_aout.h	/^#define	N_PAGSIZ(/;"	d
N_TXTADDR	src/arch/alpha/aout_machdep.h	/^#define N_TXTADDR(/;"	d
N_TXTOFF	src/arch/alpha/aout_machdep.h	/^#define N_TXTOFF(/;"	d
NameCache	src/base/cp_annotate.hh	/^    typedef std::map<System*, std::pair<std::string, int> > NameCache;$/;"	t	class:CPA
NameMapType	src/base/statistics.hh	/^typedef std::map<std::string, Info *> NameMapType;$/;"	t	namespace:Stats
NameString1	src/arch/x86/cpuid.cc	/^        NameString1,$/;"	e	enum:X86ISA::ExtendedCpuidFunctions	file:
NameString2	src/arch/x86/cpuid.cc	/^        NameString2,$/;"	e	enum:X86ISA::ExtendedCpuidFunctions	file:
NameString3	src/arch/x86/cpuid.cc	/^        NameString3,$/;"	e	enum:X86ISA::ExtendedCpuidFunctions	file:
NativeTrace	src/arch/arm/ArmNativeTrace.py	/^from NativeTrace import NativeTrace$/;"	i
NativeTrace	src/arch/sparc/SparcNativeTrace.py	/^from NativeTrace import NativeTrace$/;"	i
NativeTrace	src/arch/x86/X86NativeTrace.py	/^from NativeTrace import NativeTrace$/;"	i
NativeTrace	src/cpu/NativeTrace.py	/^class NativeTrace(ExeTracer):$/;"	c
NativeTrace	src/cpu/nativetrace.cc	/^NativeTrace::NativeTrace(const Params *p)$/;"	f	class:Trace::NativeTrace
NativeTrace	src/cpu/nativetrace.hh	/^class NativeTrace : public ExeTracer$/;"	c	namespace:Trace
NativeTraceRecord	src/cpu/nativetrace.hh	/^    NativeTraceRecord(NativeTrace * _parent,$/;"	f	class:Trace::NativeTraceRecord
NativeTraceRecord	src/cpu/nativetrace.hh	/^class NativeTraceRecord : public ExeTracerRecord$/;"	c	namespace:Trace
NeedsExclusive	src/mem/packet.hh	/^        NeedsExclusive, \/\/!< Requires exclusive copy to complete in-cache$/;"	e	enum:MemCmd::Attribute
NeedsResponse	src/mem/packet.hh	/^        NeedsResponse,  \/\/!< Requester needs response from target$/;"	e	enum:MemCmd::Attribute
Net	src/base/inet.cc	/^namespace Net {$/;"	n	file:
Net	src/base/inet.hh	/^namespace Net {$/;"	n
NetDest	src/mem/ruby/common/NetDest.cc	/^NetDest::NetDest()$/;"	f	class:NetDest
NetDest	src/mem/ruby/common/NetDest.hh	/^class NetDest$/;"	c
NetMsgPtr	src/mem/ruby/slicc_interface/NetworkMessage.hh	/^typedef RefCountingPtr<NetworkMessage> NetMsgPtr;$/;"	t
Network	src/mem/ruby/network/Network.cc	/^Network::Network(const Params *p)$/;"	f	class:Network
Network	src/mem/ruby/network/Network.hh	/^class Network : public ClockedObject$/;"	c
NetworkBandwidth	src/python/m5/params.py	/^class NetworkBandwidth(float,ParamValue):$/;"	c
NetworkInterface	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.cc	/^NetworkInterface::NetworkInterface(const Params *p)$/;"	f	class:NetworkInterface
NetworkInterface	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.hh	/^class NetworkInterface : public ClockedObject, public FlexibleConsumer$/;"	c
NetworkInterface_d	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.cc	/^NetworkInterface_d::NetworkInterface_d(const Params *p)$/;"	f	class:NetworkInterface_d
NetworkInterface_d	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.hh	/^class NetworkInterface_d : public ClockedObject, public Consumer$/;"	c
NetworkLink	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.py	/^class NetworkLink(ClockedObject):$/;"	c
NetworkLink	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.cc	/^NetworkLink::NetworkLink(const Params *p)$/;"	f	class:NetworkLink
NetworkLink	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.hh	/^class NetworkLink : public ClockedObject, public FlexibleConsumer$/;"	c
NetworkLink_d	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.py	/^class NetworkLink_d(ClockedObject):$/;"	c
NetworkLink_d	src/mem/ruby/network/garnet/fixed-pipeline/NetworkLink_d.cc	/^NetworkLink_d::NetworkLink_d(const Params *p)$/;"	f	class:NetworkLink_d
NetworkLink_d	src/mem/ruby/network/garnet/fixed-pipeline/NetworkLink_d.hh	/^class NetworkLink_d : public ClockedObject, public Consumer$/;"	c
NetworkMessage	src/mem/ruby/slicc_interface/NetworkMessage.hh	/^    NetworkMessage(Tick curTime)$/;"	f	class:NetworkMessage
NetworkMessage	src/mem/ruby/slicc_interface/NetworkMessage.hh	/^    NetworkMessage(const NetworkMessage &other)$/;"	f	class:NetworkMessage
NetworkMessage	src/mem/ruby/slicc_interface/NetworkMessage.hh	/^class NetworkMessage : public Message$/;"	c
NetworkTest	src/cpu/testers/networktest/NetworkTest.py	/^class NetworkTest(MemObject):$/;"	c
NetworkTest	src/cpu/testers/networktest/networktest.cc	/^NetworkTest::NetworkTest(const Params *p)$/;"	f	class:NetworkTest
NetworkTest	src/cpu/testers/networktest/networktest.hh	/^class NetworkTest : public MemObject$/;"	c
NetworkTestSenderState	src/cpu/testers/networktest/networktest.hh	/^        NetworkTestSenderState(uint8_t *_data)$/;"	f	class:NetworkTest::NetworkTestSenderState
NetworkTestSenderState	src/cpu/testers/networktest/networktest.hh	/^    class NetworkTestSenderState : public Packet::SenderState$/;"	c	class:NetworkTest
Never	src/mem/se_translating_port_proxy.hh	/^        Never,$/;"	e	enum:SETranslatingPortProxy::AllocType
NewExprAST	src/mem/slicc/ast/NewExprAST.py	/^class NewExprAST(ExprAST):$/;"	c
NextEthernetAddr	src/python/m5/params.py	/^def NextEthernetAddr():$/;"	f
NextGlobalsOffset	src/arch/sparc/isa.hh	/^        NextGlobalsOffset = MicroIntOffset + NumMicroIntRegs,$/;"	e	enum:SparcISA::ISA::InstIntRegOffsets
NextPage	src/mem/se_translating_port_proxy.hh	/^        NextPage$/;"	e	enum:SETranslatingPortProxy::AllocType
NextWindowOffset	src/arch/sparc/isa.hh	/^        NextWindowOffset = NextGlobalsOffset + NumGlobalRegs,$/;"	e	enum:SparcISA::ISA::InstIntRegOffsets
NoAccess	src/arch/arm/pagetable.hh	/^        NoAccess = 0,$/;"	m	class:ArmISA::TlbEntry::DomainType
NoCommand	src/dev/x86/i8042.hh	/^    static const uint16_t NoCommand = (uint16_t)(-1);$/;"	m	class:X86ISA::I8042
NoCommand	src/dev/x86/i8042.hh	/^    static const uint16_t NoCommand = (uint16_t)(-1);$/;"	m	class:X86ISA::PS2Device
NoFault	src/sim/fault_fwd.hh	/^FaultBase * const NoFault = 0;$/;"	v
NoFormat	src/arch/isa_parser.py	/^class NoFormat(object):$/;"	c
NoGoodAddr	src/cpu/o3/fetch.hh	/^        NoGoodAddr$/;"	e	enum:DefaultFetch::ThreadStatus
NoImm	src/arch/x86/decoder_tables.cc	/^        NoImm,$/;"	e	enum:X86ISA::SizeType	file:
NoOverride	src/arch/x86/types.hh	/^        NoOverride,$/;"	e	enum:X86ISA::Prefixes
Node	src/base/statistics.hh	/^class Node : public RefCounted$/;"	c	namespace:Stats
Node	src/base/trie.hh	/^        Node(Key _key, Key _mask, Value *_val) :$/;"	f	struct:Trie::Node
Node	src/base/trie.hh	/^    struct Node$/;"	s	class:Trie
NodeID	src/mem/ruby/common/TypeDefines.hh	/^typedef unsigned int NodeID;$/;"	t
NodePtr	src/base/statistics.hh	/^typedef RefCountingPtr<Node> NodePtr;$/;"	t	namespace:Stats
NodeType	src/python/m5/util/dot_writer.py	/^class NodeType:$/;"	c
NonCountingBloomFilter	src/mem/ruby/filters/NonCountingBloomFilter.cc	/^NonCountingBloomFilter::NonCountingBloomFilter(string str)$/;"	f	class:NonCountingBloomFilter
NonCountingBloomFilter	src/mem/ruby/filters/NonCountingBloomFilter.hh	/^class NonCountingBloomFilter : public AbstractBloomFilter$/;"	c
NonMaskableInterrupt	src/arch/mips/faults.hh	/^class NonMaskableInterrupt : public MipsFault<NonMaskableInterrupt>$/;"	c	namespace:MipsISA
NonMaskableInterrupt	src/arch/x86/faults.hh	/^        NonMaskableInterrupt(uint8_t _vector) :$/;"	f	class:X86ISA::NonMaskableInterrupt
NonMaskableInterrupt	src/arch/x86/faults.hh	/^    class NonMaskableInterrupt : public X86Interrupt$/;"	c	namespace:X86ISA
NonSpec	src/cpu/ozone/back_end.hh	/^            NonSpec,$/;"	e	enum:BackEnd::InstQueue::queue
NonSpecMapIt	src/cpu/o3/inst_queue.hh	/^    typedef typename std::map<InstSeqNum, DynInstPtr>::iterator NonSpecMapIt;$/;"	t	class:InstructionQueue
NonSpecMapIt	src/cpu/ozone/inst_queue.hh	/^    typedef typename std::map<InstSeqNum, DynInstPtr>::iterator NonSpecMapIt;$/;"	t	class:InstQueue
NoncoherentBus	src/mem/Bus.py	/^class NoncoherentBus(BaseBus):$/;"	c
NoncoherentBus	src/mem/noncoherent_bus.cc	/^NoncoherentBus::NoncoherentBus(const NoncoherentBusParams *p)$/;"	f	class:NoncoherentBus
NoncoherentBus	src/mem/noncoherent_bus.hh	/^class NoncoherentBus : public BaseBus$/;"	c
NoncoherentBusMasterPort	src/mem/noncoherent_bus.hh	/^        NoncoherentBusMasterPort(const std::string &_name,$/;"	f	class:NoncoherentBus::NoncoherentBusMasterPort
NoncoherentBusMasterPort	src/mem/noncoherent_bus.hh	/^    class NoncoherentBusMasterPort : public MasterPort$/;"	c	class:NoncoherentBus
NoncoherentBusSlavePort	src/mem/noncoherent_bus.hh	/^        NoncoherentBusSlavePort(const std::string &_name,$/;"	f	class:NoncoherentBus::NoncoherentBusSlavePort
NoncoherentBusSlavePort	src/mem/noncoherent_bus.hh	/^    class NoncoherentBusSlavePort : public SlavePort$/;"	c	class:NoncoherentBus
None	src/cpu/inorder/inorder_dyn_inst.hh	/^        None,$/;"	e	enum:InOrderDynInst::ResultType
None	src/dev/ide_disk.hh	/^    None = 0,$/;"	e	enum:Events
NoneTag	src/arch/arm/linux/atag.hh	/^    NoneTag   = 0x00000000$/;"	e	enum:__anon5
NoopMachInst	src/arch/alpha/isa_traits.hh	/^const ExtMachInst NoopMachInst = 0x2ffe0000;$/;"	m	namespace:AlphaISA
NoopMachInst	src/arch/arm/isa_traits.hh	/^    const ExtMachInst NoopMachInst = 0x01E320F000ULL;$/;"	m	namespace:ArmISA
NoopMachInst	src/arch/mips/isa_traits.hh	/^const ExtMachInst NoopMachInst = 0x00000000;$/;"	m	namespace:MipsISA
NoopMachInst	src/arch/power/isa_traits.hh	/^const ExtMachInst NoopMachInst = 0x60000000;$/;"	m	namespace:PowerISA
NoopMachInst	src/arch/sparc/isa_traits.hh	/^const MachInst NoopMachInst = 0x01000000;$/;"	m	namespace:SparcISA
NoopMachInst	src/arch/x86/isa_traits.hh	/^    const ExtMachInst NoopMachInst = {$/;"	m	namespace:X86ISA
NormalPhase	src/base/vnc/vncserver.hh	/^        NormalPhase$/;"	e	enum:VncServer::ConnectionState
NormalTran	src/arch/arm/tlb.hh	/^        NormalTran = 0,$/;"	e	enum:ArmISA::TLB::ArmTranslationType
NotCF	src/arch/x86/insts/microop.hh	/^            NotCF,$/;"	e	enum:X86ISA::ConditionTests::CondTest
NotCvZF	src/arch/x86/insts/microop.hh	/^            NotCvZF,$/;"	e	enum:X86ISA::ConditionTests::CondTest
NotECF	src/arch/x86/insts/microop.hh	/^            NotECF,$/;"	e	enum:X86ISA::ConditionTests::CondTest
NotEZF	src/arch/x86/insts/microop.hh	/^            NotEZF,$/;"	e	enum:X86ISA::ConditionTests::CondTest
NotFalse	src/arch/x86/insts/microop.hh	/^            NotFalse = True,$/;"	e	enum:X86ISA::ConditionTests::CondTest
NotMSTRC	src/arch/x86/insts/microop.hh	/^            NotMSTRC,$/;"	e	enum:X86ISA::ConditionTests::CondTest
NotMSTRZ	src/arch/x86/insts/microop.hh	/^            NotMSTRZ,$/;"	e	enum:X86ISA::ConditionTests::CondTest
NotOF	src/arch/x86/insts/microop.hh	/^            NotOF,$/;"	e	enum:X86ISA::ConditionTests::CondTest
NotPF	src/arch/x86/insts/microop.hh	/^            NotPF,$/;"	e	enum:X86ISA::ConditionTests::CondTest
NotSF	src/arch/x86/insts/microop.hh	/^            NotSF,$/;"	e	enum:X86ISA::ConditionTests::CondTest
NotSTRZ	src/arch/x86/insts/microop.hh	/^            NotSTRZ,$/;"	e	enum:X86ISA::ConditionTests::CondTest
NotSZnZF	src/arch/x86/insts/microop.hh	/^            NotSZnZF,$/;"	e	enum:X86ISA::ConditionTests::CondTest
NotSxOF	src/arch/x86/insts/microop.hh	/^            NotSxOF,$/;"	e	enum:X86ISA::ConditionTests::CondTest
NotSxOvZF	src/arch/x86/insts/microop.hh	/^            NotSxOvZF$/;"	e	enum:X86ISA::ConditionTests::CondTest
NotTrue	src/arch/x86/insts/microop.hh	/^            NotTrue = False,$/;"	e	enum:X86ISA::ConditionTests::CondTest
NotZF	src/arch/x86/insts/microop.hh	/^            NotZF,$/;"	e	enum:X86ISA::ConditionTests::CondTest
NsDmaState	src/dev/ns_gige.cc	/^const char *NsDmaState[] =$/;"	v
NsRxStateStrings	src/dev/ns_gige.cc	/^const char *NsRxStateStrings[] =$/;"	v
NsTxStateStrings	src/dev/ns_gige.cc	/^const char *NsTxStateStrings[] =$/;"	v
Nucleus	src/arch/sparc/tlb.hh	/^        Nucleus = 2$/;"	e	enum:SparcISA::TLB::ContextType
Null	src/base/varargs.hh	/^struct Null {};$/;"	s	namespace:VarArgs
NullISA	src/arch/null/isa_traits.hh	/^namespace NullISA$/;"	n
NullISA	src/arch/null/registers.hh	/^namespace NullISA {$/;"	n
NullISA	src/arch/null/types.hh	/^namespace NullISA$/;"	n
NullISA	src/arch/null/utility.hh	/^namespace NullISA {$/;"	n
NullPredictor	src/cpu/ozone/null_predictor.hh	/^    NullPredictor(Params *p) { }$/;"	f	class:NullPredictor
NullPredictor	src/cpu/ozone/null_predictor.hh	/^class NullPredictor$/;"	c
NullSimObject	src/python/m5/params.py	/^class NullSimObject(object):$/;"	c
NumArgumentRegs	src/arch/arm/registers.hh	/^const int NumArgumentRegs = 4;$/;"	m	namespace:ArmISA
NumArgumentRegs	src/arch/x86/process.cc	/^static const int NumArgumentRegs = sizeof(ArgumentReg) \/ sizeof(const int);$/;"	v	file:
NumArgumentRegs32	src/arch/x86/process.cc	/^static const int NumArgumentRegs32 = sizeof(ArgumentReg) \/ sizeof(const int);$/;"	v	file:
NumArgumentRegs64	src/arch/arm/registers.hh	/^const int NumArgumentRegs64 = 8;$/;"	m	namespace:ArmISA
NumCCRegs	src/arch/alpha/registers.hh	/^const int NumCCRegs = 0;$/;"	m	namespace:AlphaISA
NumCCRegs	src/arch/arm/registers.hh	/^const int NumCCRegs = 0;$/;"	m	namespace:ArmISA
NumCCRegs	src/arch/mips/registers.hh	/^const int NumCCRegs = 0;$/;"	m	namespace:MipsISA
NumCCRegs	src/arch/power/registers.hh	/^const int NumCCRegs = 0;$/;"	m	namespace:PowerISA
NumCCRegs	src/arch/sparc/registers.hh	/^const int NumCCRegs = 0;$/;"	m	namespace:SparcISA
NumCCRegs	src/arch/x86/registers.hh	/^const int NumCCRegs = NUM_CCREGS;$/;"	m	namespace:X86ISA
NumCPUEvents	src/cpu/inorder/cpu.hh	/^        NumCPUEvents$/;"	e	enum:InOrderCPU::CPUEventType
NumCRegs	src/arch/x86/x86_traits.hh	/^    const int NumCRegs = 16;$/;"	m	namespace:X86ISA
NumCodes	src/arch/alpha/osfpal.hh	/^        NumCodes$/;"	e	enum:PAL::__anon3
NumDRegs	src/arch/x86/x86_traits.hh	/^    const int NumDRegs = 8;$/;"	m	namespace:X86ISA
NumDeviceIds	src/dev/sparc/iob.hh	/^        NumDeviceIds$/;"	e	enum:Iob::DeviceId
NumExtendedCpuidFuncs	src/arch/x86/cpuid.cc	/^        NumExtendedCpuidFuncs$/;"	e	enum:X86ISA::ExtendedCpuidFunctions	file:
NumFaultSources	src/arch/arm/faults.cc	/^              ArmFault::NumFaultSources,$/;"	m	class:ArmISA::ArmFault	file:
NumFaultSources	src/arch/arm/faults.hh	/^        NumFaultSources,$/;"	e	enum:ArmISA::ArmFault::FaultSource
NumFlags	src/cpu/static_inst.hh	/^        NumFlags$/;"	e	enum:StaticInst::Flags
NumFloatArchRegs	src/arch/alpha/registers.hh	/^const int NumFloatArchRegs = 32;$/;"	m	namespace:AlphaISA
NumFloatArchRegs	src/arch/mips/registers.hh	/^const int NumFloatArchRegs = 32;$/;"	m	namespace:MipsISA
NumFloatArchRegs	src/arch/power/registers.hh	/^const int NumFloatArchRegs = 32;$/;"	m	namespace:PowerISA
NumFloatArchRegs	src/arch/sparc/sparc_traits.hh	/^const int NumFloatArchRegs = NumFloatRegs;$/;"	m	namespace:SparcISA
NumFloatRegs	src/arch/alpha/registers.hh	/^const int NumFloatRegs = NumFloatArchRegs;$/;"	m	namespace:AlphaISA
NumFloatRegs	src/arch/arm/registers.hh	/^const int NumFloatRegs = NumFloatV8ArchRegs + NumFloatSpecialRegs;$/;"	m	namespace:ArmISA
NumFloatRegs	src/arch/mips/registers.hh	/^const int NumFloatRegs = NumFloatArchRegs + NumFloatSpecialRegs;\/\/$/;"	m	namespace:MipsISA
NumFloatRegs	src/arch/power/registers.hh	/^const int NumFloatRegs = NumFloatArchRegs + NumFloatSpecialRegs;$/;"	m	namespace:PowerISA
NumFloatRegs	src/arch/sparc/sparc_traits.hh	/^const int NumFloatRegs = 64;$/;"	m	namespace:SparcISA
NumFloatRegs	src/arch/x86/registers.hh	/^const int NumFloatRegs =$/;"	m	namespace:X86ISA
NumFloatSpecialRegs	src/arch/arm/registers.hh	/^const int NumFloatSpecialRegs = 32;$/;"	m	namespace:ArmISA
NumFloatSpecialRegs	src/arch/mips/registers.hh	/^const int NumFloatSpecialRegs = 5;$/;"	m	namespace:MipsISA
NumFloatSpecialRegs	src/arch/power/registers.hh	/^const int NumFloatSpecialRegs = 0;$/;"	m	namespace:PowerISA
NumFloatV7ArchRegs	src/arch/arm/registers.hh	/^const int NumFloatV7ArchRegs  = 64;$/;"	m	namespace:ArmISA
NumFloatV8ArchRegs	src/arch/arm/registers.hh	/^const int NumFloatV8ArchRegs  = 128;$/;"	m	namespace:ArmISA
NumGDBRegs	src/arch/sparc/remote_gdb.hh	/^        NumGDBRegs$/;"	e	enum:SparcISA::RemoteGDB::RegisterConstants
NumGDBRegs	src/arch/x86/remote_gdb.hh	/^            NumGDBRegs$/;"	e	enum:X86ISA::RemoteGDB::RegisterContants
NumGlobalRegs	src/arch/sparc/isa.hh	/^    static const int NumGlobalRegs = 8;$/;"	m	class:SparcISA::ISA
NumImplicitIntRegs	src/arch/x86/x86_traits.hh	/^    const int NumImplicitIntRegs = 6;$/;"	m	namespace:X86ISA
NumIntArchRegs	src/arch/alpha/registers.hh	/^const int NumIntArchRegs = 32;$/;"	m	namespace:AlphaISA
NumIntArchRegs	src/arch/arm/registers.hh	/^const int NumIntArchRegs = NUM_ARCH_INTREGS;$/;"	m	namespace:ArmISA
NumIntArchRegs	src/arch/mips/registers.hh	/^const int NumIntArchRegs = 32;$/;"	m	namespace:MipsISA
NumIntArchRegs	src/arch/power/registers.hh	/^const int NumIntArchRegs = 32;$/;"	m	namespace:PowerISA
NumIntArchRegs	src/arch/sparc/registers.hh	/^const int NumIntArchRegs = 32;$/;"	m	namespace:SparcISA
NumIntArchRegs	src/arch/x86/registers.hh	/^const int NumIntArchRegs = NUM_INTREGS;$/;"	m	namespace:X86ISA
NumIntRegs	src/arch/alpha/registers.hh	/^const int NumIntRegs = NumIntArchRegs + NumPALShadowRegs;$/;"	m	namespace:AlphaISA
NumIntRegs	src/arch/arm/registers.hh	/^const int NumIntRegs = NUM_INTREGS;$/;"	m	namespace:ArmISA
NumIntRegs	src/arch/mips/registers.hh	/^const int NumIntRegs = NumIntArchRegs + NumIntSpecialRegs;        \/\/HI & LO Regs$/;"	m	namespace:MipsISA
NumIntRegs	src/arch/power/registers.hh	/^const int NumIntRegs = NumIntArchRegs + NumIntSpecialRegs;$/;"	m	namespace:PowerISA
NumIntRegs	src/arch/sparc/registers.hh	/^const int NumIntRegs = (MaxGL + 1) * 8 + NWindows * 16 + NumMicroIntRegs;$/;"	m	namespace:SparcISA
NumIntRegs	src/arch/x86/registers.hh	/^const int NumIntRegs = NumIntArchRegs + NumMicroIntRegs + NumImplicitIntRegs;$/;"	m	namespace:X86ISA
NumIntSpecialRegs	src/arch/mips/registers.hh	/^const int NumIntSpecialRegs = 9;$/;"	m	namespace:MipsISA
NumIntSpecialRegs	src/arch/power/registers.hh	/^const int NumIntSpecialRegs = 9;$/;"	m	namespace:PowerISA
NumInternalProcRegs	src/arch/alpha/ipr.hh	/^    NumInternalProcRegs             \/\/ number of IPR registers$/;"	e	enum:AlphaISA::MiscRegIpr
NumInternalProcRegs	src/arch/power/registers.hh	/^const int NumInternalProcRegs = 0;$/;"	m	namespace:PowerISA
NumInterruptLevels	src/arch/alpha/isa_traits.hh	/^    NumInterruptLevels = INTLEVEL_EXTERNAL_MAX$/;"	e	enum:AlphaISA::InterruptLevels
NumInterruptLevels	src/arch/mips/isa_traits.hh	/^    NumInterruptLevels = INTLEVEL_EXTERNAL_MAX$/;"	e	enum:MipsISA::InterruptLevels
NumInterruptTypes	src/arch/arm/isa_traits.hh	/^        NumInterruptTypes$/;"	e	enum:ArmISA::InterruptTypes
NumInterruptTypes	src/arch/sparc/isa_traits.hh	/^    NumInterruptTypes$/;"	e	enum:SparcISA::InterruptTypes
NumLevels	src/arch/sparc/faults.hh	/^        NumLevels,$/;"	e	enum:SparcISA::SparcFaultBase::PrivilegeLevel
NumLines	src/dev/x86/i8259.hh	/^    static const int NumLines = 8;$/;"	m	class:X86ISA::I8259
NumMMXRegs	src/arch/x86/x86_traits.hh	/^    const int NumMMXRegs = 8;$/;"	m	namespace:X86ISA
NumMicroFpRegs	src/arch/x86/x86_traits.hh	/^    const int NumMicroFpRegs = 8;$/;"	m	namespace:X86ISA
NumMicroIntRegs	src/arch/sparc/sparc_traits.hh	/^const int NumMicroIntRegs = 9;$/;"	m	namespace:SparcISA
NumMicroIntRegs	src/arch/x86/x86_traits.hh	/^    const int NumMicroIntRegs = 16;$/;"	m	namespace:X86ISA
NumMiscRegs	src/arch/alpha/registers.hh	/^const int NumMiscRegs = NUM_MISCREGS;$/;"	m	namespace:AlphaISA
NumMiscRegs	src/arch/arm/registers.hh	/^const int NumMiscRegs = NUM_MISCREGS;$/;"	m	namespace:ArmISA
NumMiscRegs	src/arch/mips/registers.hh	/^const int NumMiscRegs = MISCREG_NUMREGS;$/;"	m	namespace:MipsISA
NumMiscRegs	src/arch/power/registers.hh	/^const int NumMiscRegs = NUM_MISCREGS;$/;"	m	namespace:PowerISA
NumMiscRegs	src/arch/sparc/miscregs.hh	/^const int NumMiscRegs = MISCREG_NUMMISCREGS;$/;"	m	namespace:SparcISA
NumMiscRegs	src/arch/x86/registers.hh	/^const int NumMiscRegs = NUM_MISCREGS;$/;"	m	namespace:X86ISA
NumModes	src/arch/x86/intmessage.hh	/^            NumModes$/;"	e	enum:X86ISA::DeliveryMode::IntDeliveryMode
NumOutputBits	src/dev/x86/i8042.cc	/^const uint8_t NumOutputBits = 14;$/;"	v
NumPALShadowRegs	src/arch/alpha/registers.hh	/^const int NumPALShadowRegs = 8;$/;"	m	namespace:AlphaISA
NumRegClasses	src/cpu/reg_class.hh	/^const int NumRegClasses = MiscRegClass + 1;$/;"	v
NumSegments	src/arch/x86/x86_traits.hh	/^    const int NumSegments = 6;$/;"	m	namespace:X86ISA
NumStages	src/cpu/inorder/pipeline_traits.5stage.hh	/^    const unsigned NumStages = 5;$/;"	m	namespace:ThePipeline
NumStages	src/cpu/inorder/pipeline_traits.9stage.hh	/^    const unsigned NumStages = 9;$/;"	m	namespace:ThePipeline
NumStages	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^    const unsigned NumStages = 9;$/;"	m	namespace:ThePipeline
NumStages	src/cpu/inorder/pipeline_traits.hh	/^    const unsigned NumStages = 5;$/;"	m	namespace:ThePipeline
NumStages	src/cpu/o3/cpu.hh	/^        NumStages };$/;"	e	enum:FullO3CPU::StageIdx
NumStandardCpuidFuncs	src/arch/x86/cpuid.cc	/^        NumStandardCpuidFuncs$/;"	e	enum:X86ISA::StandardCpuidFunction	file:
NumStatus	src/cpu/base_dyn_inst.hh	/^        NumStatus$/;"	e	enum:BaseDynInst::Status
NumStatus	src/cpu/inorder/inorder_dyn_inst.hh	/^        NumStatus$/;"	e	enum:InOrderDynInst::Status
NumSysSegments	src/arch/x86/x86_traits.hh	/^    const int NumSysSegments = 4;$/;"	m	namespace:X86ISA
NumTaskId	src/mem/request.hh	/^        NumTaskId$/;"	e	enum:ContextSwitchTaskId::TaskId
NumWindowedRegs	src/arch/sparc/isa.hh	/^    static const int NumWindowedRegs = 24;$/;"	m	class:SparcISA::ISA
NumXMMRegs	src/arch/x86/x86_traits.hh	/^    const int NumXMMRegs = 16;$/;"	m	namespace:X86ISA
Num_Mach_Syscall_Descs	src/arch/alpha/tru64/process.hh	/^    const int Num_Mach_Syscall_Descs;$/;"	m	class:AlphaISA::AlphaTru64Process
Num_OpClasses	src/cpu/op_class.hh	/^const OpClass Num_OpClasses = Num_OpClass;$/;"	v
Num_Syscall32_Descs	src/arch/sparc/linux/process.hh	/^    static const int Num_Syscall32_Descs;$/;"	m	class:SparcISA::SparcLinuxProcess
Num_Syscall32_Descs	src/arch/sparc/linux/syscalls.cc	/^const int SparcLinuxProcess::Num_Syscall32_Descs =$/;"	m	class:SparcISA::SparcLinuxProcess	file:
Num_Syscall_Descs	src/arch/alpha/linux/process.hh	/^    const int Num_Syscall_Descs;$/;"	m	class:AlphaISA::AlphaLinuxProcess
Num_Syscall_Descs	src/arch/alpha/tru64/process.hh	/^    const int Num_Syscall_Descs;$/;"	m	class:AlphaISA::AlphaTru64Process
Num_Syscall_Descs	src/arch/mips/linux/process.hh	/^    const int Num_Syscall_Descs;$/;"	m	class:MipsLinuxProcess
Num_Syscall_Descs	src/arch/power/linux/process.hh	/^    const int Num_Syscall_Descs;$/;"	m	class:PowerLinuxProcess
Num_Syscall_Descs	src/arch/sparc/linux/process.hh	/^    static const int Num_Syscall_Descs;$/;"	m	class:SparcISA::SparcLinuxProcess
Num_Syscall_Descs	src/arch/sparc/linux/syscalls.cc	/^const int SparcLinuxProcess::Num_Syscall_Descs =$/;"	m	class:SparcISA::SparcLinuxProcess	file:
Num_Syscall_Descs	src/arch/sparc/solaris/process.hh	/^    const int Num_Syscall_Descs;$/;"	m	class:SparcISA::SparcSolarisProcess
Number	src/kern/linux/linux_syscalls.hh	/^        Number$/;"	e	enum:SystemCalls::__anon87
Number	src/kern/tru64/tru64_syscalls.hh	/^    static const int Number = StandardNumber + MachNumber;$/;"	m	class:SystemCalls
NumericParamValue	src/python/m5/params.py	/^class NumericParamValue(ParamValue):$/;"	c
NvFlags	src/dev/arm/rv_ctrl.hh	/^        NvFlags    = 0x38,$/;"	e	enum:RealViewCtrl::__anon67
NvFlagsClr	src/dev/arm/rv_ctrl.hh	/^        NvFlagsClr = 0x3C,$/;"	e	enum:RealViewCtrl::__anon67
O3CPU	src/cpu/o3/commit.hh	/^    typedef typename Impl::O3CPU O3CPU;$/;"	t	class:DefaultCommit
O3CPU	src/cpu/o3/cpu.hh	/^    typedef typename Impl::O3CPU O3CPU;$/;"	t	class:FullO3CPU
O3CPU	src/cpu/o3/decode.hh	/^    typedef typename Impl::O3CPU O3CPU;$/;"	t	class:DefaultDecode
O3CPU	src/cpu/o3/dyn_inst.hh	/^    typedef typename Impl::O3CPU O3CPU;$/;"	t	class:BaseO3DynInst
O3CPU	src/cpu/o3/fetch.hh	/^    typedef typename Impl::O3CPU O3CPU;$/;"	t	class:DefaultFetch
O3CPU	src/cpu/o3/iew.hh	/^    typedef typename Impl::O3CPU O3CPU;$/;"	t	class:DefaultIEW
O3CPU	src/cpu/o3/impl.hh	/^    typedef FullO3CPU<O3CPUImpl> O3CPU;$/;"	t	struct:O3CPUImpl
O3CPU	src/cpu/o3/inst_queue.hh	/^    typedef typename Impl::O3CPU O3CPU;$/;"	t	class:InstructionQueue
O3CPU	src/cpu/o3/lsq.hh	/^    typedef typename Impl::O3CPU O3CPU;$/;"	t	class:LSQ
O3CPU	src/cpu/o3/lsq_unit.hh	/^    typedef typename Impl::O3CPU O3CPU;$/;"	t	class:LSQUnit
O3CPU	src/cpu/o3/rename.hh	/^    typedef typename Impl::O3CPU O3CPU;$/;"	t	class:DefaultRename
O3CPU	src/cpu/o3/rob.hh	/^    typedef typename Impl::O3CPU O3CPU;$/;"	t	class:ROB
O3CPU	src/cpu/o3/thread_context.hh	/^    typedef typename Impl::O3CPU O3CPU;$/;"	t	class:O3ThreadContext
O3CPU	src/cpu/o3/thread_state.hh	/^    typedef typename Impl::O3CPU O3CPU;$/;"	t	struct:O3ThreadState
O3CPUImpl	src/cpu/o3/impl.hh	/^struct O3CPUImpl$/;"	s
O3Checker	src/cpu/o3/O3CPU.py	/^from O3Checker import O3Checker$/;"	i
O3Checker	src/cpu/o3/O3Checker.py	/^class O3Checker(CheckerCPU):$/;"	c
O3Checker	src/cpu/o3/checker.hh	/^    O3Checker(Params *p)$/;"	f	class:O3Checker
O3Checker	src/cpu/o3/checker.hh	/^class O3Checker : public Checker<O3CPUImpl>$/;"	c
O3DynInst	src/cpu/static_inst.hh	/^typedef BaseO3DynInst<O3CPUImpl> O3DynInst;$/;"	t
O3ThreadContext	src/cpu/o3/thread_context.hh	/^class O3ThreadContext : public ThreadContext$/;"	c
O3ThreadState	src/cpu/o3/thread_state.hh	/^    O3ThreadState(O3CPU *_cpu, int _thread_num, Process *_process)$/;"	f	struct:O3ThreadState
O3ThreadState	src/cpu/o3/thread_state.hh	/^struct O3ThreadState : public ThreadState {$/;"	s
OEBit	src/arch/x86/regs/misc.hh	/^        OEBit = 1 << 3,$/;"	e	enum:X86ISA::X87StatusBit
OF	src/arch/x86/insts/microop.hh	/^            OF,$/;"	e	enum:X86ISA::ConditionTests::CondTest
OFBit	src/arch/x86/regs/misc.hh	/^        OFBit = 1 << 11$/;"	e	enum:X86ISA::CondFlagBit
OMAGIC	src/base/loader/exec_aout.h	/^#define	OMAGIC	/;"	d
ONE_STAGE_ARB	src/mem/ruby/network/orion/Allocator/VCAllocator.hh	/^      ONE_STAGE_ARB,$/;"	e	enum:VCAllocator::VAModel
OO	src/arch/x86/decoder_tables.cc	/^    const uint8_t OO = OperandSizeOverride;$/;"	m	namespace:X86ISA	file:
OPDDiterator	src/cpu/func_unit.hh	/^typedef std::vector<OpDesc *>::const_iterator OPDDiterator;$/;"	t
OPTR	src/base/loader/coff_sym.h	/^} OPTR, *pOPTR;$/;"	t	typeref:struct:__anon45
OP_BEGIN	src/base/cp_annotate.hh	/^        OP_BEGIN           = 0x01,$/;"	e	enum:CPA::ops
OP_DEQUEUE	src/base/cp_annotate.hh	/^        OP_DEQUEUE         = 0x05,$/;"	e	enum:CPA::ops
OP_IDENT	src/base/cp_annotate.hh	/^        OP_IDENT           = 0x0B,$/;"	e	enum:CPA::ops
OP_LINK	src/base/cp_annotate.hh	/^        OP_LINK            = 0x0A,$/;"	e	enum:CPA::ops
OP_PEEK	src/base/cp_annotate.hh	/^        OP_PEEK            = 0x09,$/;"	e	enum:CPA::ops
OP_QUEUE	src/base/cp_annotate.hh	/^        OP_QUEUE           = 0x04,$/;"	e	enum:CPA::ops
OP_RESERVE	src/base/cp_annotate.hh	/^        OP_RESERVE         = 0x0C$/;"	e	enum:CPA::ops
OP_SIZE_QUEUE	src/base/cp_annotate.hh	/^        OP_SIZE_QUEUE      = 0x08,$/;"	e	enum:CPA::ops
OP_WAIT_EMPTY	src/base/cp_annotate.hh	/^        OP_WAIT_EMPTY      = 0x02,$/;"	e	enum:CPA::ops
OP_WAIT_FULL	src/base/cp_annotate.hh	/^        OP_WAIT_FULL       = 0x03,$/;"	e	enum:CPA::ops
OR	src/mem/ruby/common/NetDest.cc	/^NetDest::OR(const NetDest& orNetDest) const$/;"	f	class:NetDest
OR	src/mem/ruby/common/Set.cc	/^Set::OR(const Set& orSet) const$/;"	f	class:Set
OTHER	src/python/m5/util/dot_writer.py	/^    OTHER = 5$/;"	v	class:NodeType
OUTVAL	src/unittest/strnumtest.cc	/^#define OUTVAL(/;"	d	file:
OVA	src/arch/arm/faults.hh	/^        OVA,   \/\/ DataAbort, PrefetchAbort: stage 1 Virtual Address for stage 2 faults$/;"	e	enum:ArmISA::ArmFault::AnnotationIDs
OVAddr	src/arch/arm/faults.hh	/^    Addr OVAddr;$/;"	m	class:ArmISA::AbortFault
OW	src/arch/x86/decoder_tables.cc	/^        OW = OWordImm,$/;"	e	enum:X86ISA::SizeType	file:
OWN_LEGION	src/cpu/m5legion_interface.h	/^#define OWN_LEGION /;"	d
OWN_M5	src/cpu/m5legion_interface.h	/^#define OWN_M5 /;"	d
OWordImm	src/arch/x86/decoder_tables.cc	/^        OWordImm,$/;"	e	enum:X86ISA::SizeType	file:
ObjDeclAST	src/mem/slicc/ast/ObjDeclAST.py	/^class ObjDeclAST(DeclAST):$/;"	c
ObjectFile	src/base/loader/object_file.cc	/^ObjectFile::ObjectFile(const string &_filename, int _fd,$/;"	f	class:ObjectFile
ObjectFile	src/base/loader/object_file.hh	/^class ObjectFile$/;"	c
ObjectMatch	src/base/match.cc	/^ObjectMatch::ObjectMatch()$/;"	f	class:ObjectMatch
ObjectMatch	src/base/match.cc	/^ObjectMatch::ObjectMatch(const string &expr)$/;"	f	class:ObjectMatch
ObjectMatch	src/base/match.hh	/^class ObjectMatch$/;"	c
OffsetMask	src/arch/mips/pagetable.hh	/^    int OffsetMask;$/;"	m	struct:MipsISA::PTE
OffsetMask	src/arch/power/pagetable.hh	/^    int OffsetMask;$/;"	m	struct:PowerISA::PTE
OldestReady	src/cpu/o3/commit.hh	/^        OldestReady$/;"	e	enum:DefaultCommit::CommitPolicy
OneShot	src/dev/intel_8254_timer.hh	/^        OneShot,$/;"	e	enum:Intel8254Timer::ModeVal
OodAST	src/mem/slicc/ast/OodAST.py	/^class OodAST(ExprAST):$/;"	c
OpClass	src/cpu/FuncUnit.py	/^class OpClass(Enum):$/;"	c
OpDesc	src/cpu/FuncUnit.py	/^class OpDesc(SimObject):$/;"	c
OpDesc	src/cpu/func_unit.hh	/^    OpDesc(const OpDescParams *p)$/;"	f	class:OpDesc
OpDesc	src/cpu/func_unit.hh	/^class OpDesc : public SimObject$/;"	c
OpString	src/base/statistics.hh	/^struct OpString<std::divides<Result> >$/;"	s	namespace:Stats
OpString	src/base/statistics.hh	/^struct OpString<std::minus<Result> >$/;"	s	namespace:Stats
OpString	src/base/statistics.hh	/^struct OpString<std::modulus<Result> >$/;"	s	namespace:Stats
OpString	src/base/statistics.hh	/^struct OpString<std::multiplies<Result> >$/;"	s	namespace:Stats
OpString	src/base/statistics.hh	/^struct OpString<std::negate<Result> >$/;"	s	namespace:Stats
OpString	src/base/statistics.hh	/^struct OpString<std::plus<Result> >$/;"	s	namespace:Stats
OpSys	src/base/loader/object_file.hh	/^    enum OpSys {$/;"	g	class:ObjectFile
Opcode	src/arch/alpha/ev5.hh	/^inline int Opcode(MachInst inst) { return inst >> 26 & 0x3f; }$/;"	f	namespace:AlphaISA
OpcodeState	src/arch/x86/decoder.hh	/^        OpcodeState,$/;"	e	enum:X86ISA::Decoder::State
OpenFlagTransTable	src/kern/operatingsystem.hh	/^struct OpenFlagTransTable {$/;"	s
Operand	src/arch/isa_parser.py	/^class Operand(object):$/;"	c
OperandList	src/arch/isa_parser.py	/^class OperandList(object):$/;"	c
OperandSizeOverride	src/arch/x86/types.hh	/^        OperandSizeOverride,$/;"	e	enum:X86ISA::Prefixes
OperatingMode	src/arch/arm/types.hh	/^    enum OperatingMode {$/;"	g	namespace:ArmISA
OperatingSystem	src/kern/operatingsystem.hh	/^class OperatingSystem {$/;"	c
Option	src/python/m5/util/jobfile.py	/^class Option(Data):$/;"	c
OptionParser	src/python/m5/main.py	/^    from options import OptionParser$/;"	i
OptionParser	src/python/m5/options.py	/^class OptionParser(dict):$/;"	c
OrionConfig	src/mem/ruby/network/orion/OrionConfig.cc	/^OrionConfig::OrionConfig(const OrionConfig& orion_cfg_)$/;"	f	class:OrionConfig
OrionConfig	src/mem/ruby/network/orion/OrionConfig.cc	/^OrionConfig::OrionConfig(const string& cfg_fn_)$/;"	f	class:OrionConfig
OrionConfig	src/mem/ruby/network/orion/OrionConfig.hh	/^class OrionConfig$/;"	c
OrionLink	src/mem/ruby/network/orion/OrionLink.cc	/^OrionLink::OrionLink($/;"	f	class:OrionLink
OrionLink	src/mem/ruby/network/orion/OrionLink.hh	/^class OrionLink$/;"	c
OrionRouter	src/mem/ruby/network/orion/OrionRouter.cc	/^OrionRouter::OrionRouter($/;"	f	class:OrionRouter
OrionRouter	src/mem/ruby/network/orion/OrionRouter.hh	/^class OrionRouter$/;"	c
Osc0	src/dev/arm/rv_ctrl.hh	/^        Osc0       = 0x0C,$/;"	e	enum:RealViewCtrl::__anon67
Osc1	src/dev/arm/rv_ctrl.hh	/^        Osc1       = 0x10,$/;"	e	enum:RealViewCtrl::__anon67
Osc2	src/dev/arm/rv_ctrl.hh	/^        Osc2       = 0x14,$/;"	e	enum:RealViewCtrl::__anon67
Osc3	src/dev/arm/rv_ctrl.hh	/^        Osc3       = 0x18,$/;"	e	enum:RealViewCtrl::__anon67
Osc4	src/dev/arm/rv_ctrl.hh	/^        Osc4       = 0x1C,$/;"	e	enum:RealViewCtrl::__anon67
OtherFault	src/arch/sparc/tlb.hh	/^        OtherFault = 0,$/;"	e	enum:SparcISA::TLB::FaultTypes
OutPortDeclAST	src/mem/slicc/ast/OutPortDeclAST.py	/^class OutPortDeclAST(DeclAST):$/;"	c
OutVcState	src/mem/ruby/network/garnet/flexible-pipeline/OutVcState.cc	/^OutVcState::OutVcState(int id)$/;"	f	class:OutVcState
OutVcState	src/mem/ruby/network/garnet/flexible-pipeline/OutVcState.hh	/^class OutVcState$/;"	c
OutVcState_d	src/mem/ruby/network/garnet/fixed-pipeline/OutVcState_d.cc	/^OutVcState_d::OutVcState_d(int id, GarnetNetwork_d *network_ptr)$/;"	f	class:OutVcState_d
OutVcState_d	src/mem/ruby/network/garnet/fixed-pipeline/OutVcState_d.hh	/^class OutVcState_d$/;"	c
OutdrvModel	src/mem/ruby/network/orion/Buffer/OutdrvUnit.hh	/^    enum OutdrvModel$/;"	g	class:OutdrvUnit
OutdrvUnit	src/mem/ruby/network/orion/Buffer/OutdrvUnit.cc	/^OutdrvUnit::OutdrvUnit($/;"	f	class:OutdrvUnit
OutdrvUnit	src/mem/ruby/network/orion/Buffer/OutdrvUnit.hh	/^class OutdrvUnit$/;"	c
Output	src/base/stats/output.hh	/^struct Output$/;"	s	namespace:Stats
OutputDirectory	src/base/output.cc	/^OutputDirectory::OutputDirectory()$/;"	f	class:OutputDirectory
OutputDirectory	src/base/output.hh	/^class OutputDirectory$/;"	c
OutputUnit_d	src/mem/ruby/network/garnet/fixed-pipeline/OutputUnit_d.cc	/^OutputUnit_d::OutputUnit_d(int id, Router_d *router)$/;"	f	class:OutputUnit_d
OutputUnit_d	src/mem/ruby/network/garnet/fixed-pipeline/OutputUnit_d.hh	/^class OutputUnit_d : public Consumer$/;"	c
Overflow	src/arch/mips/registers.hh	/^    Overflow,$/;"	e	enum:MipsISA::FCSRBits
OverflowTrap	src/arch/x86/faults.hh	/^        OverflowTrap() :$/;"	f	class:X86ISA::OverflowTrap
OverflowTrap	src/arch/x86/faults.hh	/^    class OverflowTrap : public X86Trap$/;"	c	namespace:X86ISA
Overview	src/mem/slicc/doc/tutorial.tex	/^\\section*{Overview}$/;"	s
OzoneCPU	src/cpu/ozone/cpu.hh	/^class OzoneCPU : public BaseCPU$/;"	c
OzoneCPU	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::OzoneCPU(Params *p)$/;"	f	class:OzoneCPU
OzoneCPU	src/cpu/ozone/dyn_inst.hh	/^    typedef typename Impl::OzoneCPU OzoneCPU;$/;"	t	class:OzoneDynInst
OzoneCPU	src/cpu/ozone/lw_back_end.hh	/^    typedef typename Impl::OzoneCPU OzoneCPU;$/;"	t	class:LWBackEnd
OzoneCPU	src/cpu/ozone/lw_lsq.hh	/^    typedef typename Impl::OzoneCPU OzoneCPU;$/;"	t	class:OzoneLWLSQ
OzoneCPU	src/cpu/ozone/ozone_impl.hh	/^    typedef OzoneCPU<OzoneImpl> OzoneCPU;$/;"	t	struct:OzoneImpl
OzoneCPU	src/cpu/ozone/simple_impl.hh	/^    typedef OzoneCPU<SimpleImpl> OzoneCPU;$/;"	t	struct:SimpleImpl
OzoneChecker	src/cpu/ozone/OzoneCPU.py	/^from OzoneChecker import OzoneChecker$/;"	i
OzoneChecker	src/cpu/ozone/OzoneChecker.py	/^class OzoneChecker(BaseCPU):$/;"	c
OzoneChecker	src/cpu/ozone/checker_builder.cc	/^    OzoneChecker(Params *p)$/;"	f	class:OzoneChecker
OzoneChecker	src/cpu/ozone/checker_builder.cc	/^class OzoneChecker :$/;"	c	file:
OzoneDynInst	src/cpu/ozone/dyn_inst.hh	/^class OzoneDynInst : public BaseDynInst<Impl>$/;"	c
OzoneDynInst	src/cpu/ozone/dyn_inst_impl.hh	/^OzoneDynInst<Impl>::OzoneDynInst(OzoneCPU *cpu)$/;"	f	class:OzoneDynInst
OzoneDynInst	src/cpu/ozone/dyn_inst_impl.hh	/^OzoneDynInst<Impl>::OzoneDynInst(StaticInstPtr _staticInst)$/;"	f	class:OzoneDynInst
OzoneImpl	src/cpu/ozone/ozone_impl.hh	/^struct OzoneImpl {$/;"	s
OzoneLSQ	src/cpu/ozone/lsq_unit.hh	/^class OzoneLSQ {$/;"	c
OzoneLSQ	src/cpu/ozone/lsq_unit_impl.hh	/^OzoneLSQ<Impl>::OzoneLSQ()$/;"	f	class:OzoneLSQ
OzoneLWLSQ	src/cpu/ozone/lw_lsq.hh	/^class OzoneLWLSQ {$/;"	c
OzoneLWLSQ	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::OzoneLWLSQ()$/;"	f	class:OzoneLWLSQ
OzoneTC	src/cpu/ozone/cpu.hh	/^    class OzoneTC : public ThreadContext {$/;"	c	class:OzoneCPU
OzoneTC	src/cpu/ozone/front_end.hh	/^    typedef typename Impl::CPUType::OzoneTC OzoneTC;$/;"	t	class:FrontEnd
OzoneTC	src/cpu/ozone/inorder_back_end.hh	/^    typedef typename FullCPU::OzoneTC OzoneTC;$/;"	t	class:InorderBackEnd
OzoneThreadState	src/cpu/ozone/thread_state.hh	/^    OzoneThreadState(CPUType *_cpu, int _thread_num)$/;"	f	struct:OzoneThreadState
OzoneThreadState	src/cpu/ozone/thread_state.hh	/^    OzoneThreadState(CPUType *_cpu, int _thread_num, Process *_process)$/;"	f	struct:OzoneThreadState
OzoneThreadState	src/cpu/ozone/thread_state.hh	/^struct OzoneThreadState : public ThreadState {$/;"	s
P	src/arch/sparc/faults.hh	/^        P, Privileged = P,$/;"	e	enum:SparcISA::SparcFaultBase::PrivilegeLevel
PABits	src/arch/arm/isa_traits.hh	/^    const unsigned PABits = 32; \/\/ Is this correct?$/;"	m	namespace:ArmISA
PABits	src/arch/mips/isa_traits.hh	/^const unsigned PABits = 32; \/\/ Is this correct?$/;"	m	namespace:MipsISA
PAEPD	src/arch/x86/pagetable_walker.hh	/^                PAEPDP, PAEPD, PAEPTE,$/;"	e	enum:X86ISA::Walker::WalkerState::State
PAEPDP	src/arch/x86/pagetable_walker.hh	/^                PAEPDP, PAEPD, PAEPTE,$/;"	e	enum:X86ISA::Walker::WalkerState::State
PAEPTE	src/arch/x86/pagetable_walker.hh	/^                PAEPDP, PAEPD, PAEPTE,$/;"	e	enum:X86ISA::Walker::WalkerState::State
PAGE_SIZE	src/cpu/kvm/base.cc	/^#define PAGE_SIZE /;"	d	file:
PAGE_SIZE	src/mem/ruby/system/MemoryVector.hh	/^    static const uint32_t PAGE_SIZE = 4096;$/;"	m	class:MemoryVector
PAL	src/arch/alpha/osfpal.hh	/^struct PAL$/;"	s
PATH_SEPARATOR	src/base/output.hh	/^    static const char PATH_SEPARATOR = '\/';$/;"	m	class:OutputDirectory
PAWatchpoint	src/arch/sparc/faults.hh	/^class PAWatchpoint : public SparcFault<PAWatchpoint> {};$/;"	c	namespace:SparcISA
PAddrImplBits	src/arch/alpha/ev5.hh	/^const int PAddrImplBits = 44; \/\/ for Tsunami$/;"	m	namespace:AlphaISA
PAddrImplMask	src/arch/alpha/ev5.hh	/^const Addr PAddrImplMask = (ULL(1) << PAddrImplBits) - 1;$/;"	m	namespace:AlphaISA
PAddrImplMask	src/arch/arm/isa_traits.hh	/^    const Addr PAddrImplMask = (ULL(1) << PABits) - 1;$/;"	m	namespace:ArmISA
PAddrImplMask	src/arch/mips/isa_traits.hh	/^const Addr PAddrImplMask = (ULL(1) << PABits) - 1;$/;"	m	namespace:MipsISA
PAddrImplMask	src/arch/sparc/isa_traits.hh	/^const Addr PAddrImplMask = ULL(0x000000FFFFFFFFFF);$/;"	m	namespace:SparcISA
PAddrIprSpace	src/arch/alpha/ev5.hh	/^inline bool PAddrIprSpace(Addr a) { return a >= ULL(0xFFFFFF00000); }$/;"	f	namespace:AlphaISA
PAddrUncachedBit39	src/arch/alpha/ev5.hh	/^const Addr PAddrUncachedBit39 = ULL(0x8000000000);$/;"	m	namespace:AlphaISA
PAddrUncachedBit40	src/arch/alpha/ev5.hh	/^const Addr PAddrUncachedBit40 = ULL(0x10000000000);$/;"	m	namespace:AlphaISA
PAddrUncachedBit43	src/arch/alpha/ev5.hh	/^const Addr PAddrUncachedBit43 = ULL(0x80000000000);$/;"	m	namespace:AlphaISA
PAddrUncachedMask	src/arch/alpha/ev5.hh	/^const Addr PAddrUncachedMask = ULL(0x807ffffffff); \/\/ Clear PA<42:35>$/;"	m	namespace:AlphaISA
PBA	src/dev/i8254xGBe_defs.hh	/^    struct PBA : public Reg<uint32_t> { \/\/ 0x1000 PBA Register$/;"	s	struct:iGbReg::Regs
PC	src/cpu/ozone/front_end.hh	/^    Addr PC;$/;"	m	class:FrontEnd
PC	src/cpu/ozone/null_predictor.hh	/^        Addr PC;$/;"	m	struct:NullPredictor::BPredInfo
PC	src/cpu/ozone/thread_state.hh	/^    Addr PC;$/;"	m	struct:OzoneThreadState
PCAP_VERSION_MAJOR	src/dev/etherdump.cc	/^#define PCAP_VERSION_MAJOR /;"	d	file:
PCAP_VERSION_MINOR	src/dev/etherdump.cc	/^#define PCAP_VERSION_MINOR /;"	d	file:
PCAlignmentFault	src/arch/arm/faults.hh	/^    PCAlignmentFault(Addr _faultPC) : faultPC(_faultPC)$/;"	f	class:ArmISA::PCAlignmentFault
PCAlignmentFault	src/arch/arm/faults.hh	/^class PCAlignmentFault : public ArmFaultVals<PCAlignmentFault>$/;"	c	namespace:ArmISA
PCC	src/python/swig/pyobject.cc	/^#define PCC(/;"	d	file:
PCDependentDisassembly	src/arch/power/insts/branch.hh	/^    PCDependentDisassembly(const char *mnem, ExtMachInst _machInst,$/;"	f	class:PowerISA::PCDependentDisassembly
PCDependentDisassembly	src/arch/power/insts/branch.hh	/^class PCDependentDisassembly : public PowerStaticInst$/;"	c	namespace:PowerISA
PCEvent	src/cpu/pc_event.hh	/^PCEvent::PCEvent(PCEventQueue *q, const std::string &desc, Addr pc)$/;"	f	class:PCEvent
PCEvent	src/cpu/pc_event.hh	/^class PCEvent$/;"	c
PCEventQueue	src/cpu/pc_event.cc	/^PCEventQueue::PCEventQueue()$/;"	f	class:PCEventQueue
PCEventQueue	src/cpu/pc_event.hh	/^class PCEventQueue$/;"	c
PCH	src/mem/ruby/network/orion/TechParameter.hh	/^      PCH$/;"	e	enum:TechParameter::ChannelType
PCHIP_PCI0_IO	src/dev/alpha/tsunamireg.h	/^#define PCHIP_PCI0_IO /;"	d
PCHIP_PCI0_IO	src/dev/mips/maltareg.h	/^#define PCHIP_PCI0_IO /;"	d
PCHIP_PCI0_MEMORY	src/dev/alpha/tsunamireg.h	/^#define PCHIP_PCI0_MEMORY /;"	d
PCHIP_PCI0_MEMORY	src/dev/mips/maltareg.h	/^#define PCHIP_PCI0_MEMORY /;"	d
PCI0_BASE_ADDR0	src/dev/pcireg.h	/^#define PCI0_BASE_ADDR0 /;"	d
PCI0_BASE_ADDR1	src/dev/pcireg.h	/^#define PCI0_BASE_ADDR1 /;"	d
PCI0_BASE_ADDR2	src/dev/pcireg.h	/^#define PCI0_BASE_ADDR2 /;"	d
PCI0_BASE_ADDR3	src/dev/pcireg.h	/^#define PCI0_BASE_ADDR3 /;"	d
PCI0_BASE_ADDR4	src/dev/pcireg.h	/^#define PCI0_BASE_ADDR4 /;"	d
PCI0_BASE_ADDR5	src/dev/pcireg.h	/^#define PCI0_BASE_ADDR5 /;"	d
PCI0_CAP_PTR	src/dev/pcireg.h	/^#define PCI0_CAP_PTR /;"	d
PCI0_CIS	src/dev/pcireg.h	/^#define PCI0_CIS /;"	d
PCI0_INTERRUPT_LINE	src/dev/pcireg.h	/^#define PCI0_INTERRUPT_LINE /;"	d
PCI0_INTERRUPT_PIN	src/dev/pcireg.h	/^#define PCI0_INTERRUPT_PIN /;"	d
PCI0_MAXIMUM_LATENCY	src/dev/pcireg.h	/^#define PCI0_MAXIMUM_LATENCY /;"	d
PCI0_MINIMUM_GRANT	src/dev/pcireg.h	/^#define PCI0_MINIMUM_GRANT /;"	d
PCI0_RESERVED	src/dev/pcireg.h	/^#define PCI0_RESERVED /;"	d
PCI0_ROM_BASE_ADDR	src/dev/pcireg.h	/^#define PCI0_ROM_BASE_ADDR /;"	d
PCI0_SUB_SYSTEM_ID	src/dev/pcireg.h	/^#define PCI0_SUB_SYSTEM_ID /;"	d
PCI0_SUB_VENDOR_ID	src/dev/pcireg.h	/^#define PCI0_SUB_VENDOR_ID /;"	d
PCI1_BASE_ADDR0	src/dev/pcireg.h	/^#define PCI1_BASE_ADDR0 /;"	d
PCI1_BASE_ADDR1	src/dev/pcireg.h	/^#define PCI1_BASE_ADDR1 /;"	d
PCI1_BRIDGE_CTRL	src/dev/pcireg.h	/^#define PCI1_BRIDGE_CTRL /;"	d
PCI1_INTR_LINE	src/dev/pcireg.h	/^#define PCI1_INTR_LINE /;"	d
PCI1_INTR_PIN	src/dev/pcireg.h	/^#define PCI1_INTR_PIN /;"	d
PCI1_IO_BASE	src/dev/pcireg.h	/^#define PCI1_IO_BASE /;"	d
PCI1_IO_BASE_UPPER	src/dev/pcireg.h	/^#define PCI1_IO_BASE_UPPER /;"	d
PCI1_IO_LIMIT	src/dev/pcireg.h	/^#define PCI1_IO_LIMIT /;"	d
PCI1_IO_LIMIT_UPPER	src/dev/pcireg.h	/^#define PCI1_IO_LIMIT_UPPER /;"	d
PCI1_MEM_BASE	src/dev/pcireg.h	/^#define PCI1_MEM_BASE /;"	d
PCI1_MEM_LIMIT	src/dev/pcireg.h	/^#define PCI1_MEM_LIMIT /;"	d
PCI1_PRF_BASE_UPPER	src/dev/pcireg.h	/^#define PCI1_PRF_BASE_UPPER /;"	d
PCI1_PRF_LIMIT_UPPER	src/dev/pcireg.h	/^#define PCI1_PRF_LIMIT_UPPER /;"	d
PCI1_PRF_MEM_BASE	src/dev/pcireg.h	/^#define PCI1_PRF_MEM_BASE /;"	d
PCI1_PRF_MEM_LIMIT	src/dev/pcireg.h	/^#define PCI1_PRF_MEM_LIMIT /;"	d
PCI1_PRI_BUS_NUM	src/dev/pcireg.h	/^#define PCI1_PRI_BUS_NUM /;"	d
PCI1_RESERVED	src/dev/pcireg.h	/^#define PCI1_RESERVED /;"	d
PCI1_ROM_BASE_ADDR	src/dev/pcireg.h	/^#define PCI1_ROM_BASE_ADDR /;"	d
PCI1_SECONDARY_STATUS	src/dev/pcireg.h	/^#define PCI1_SECONDARY_STATUS /;"	d
PCI1_SEC_BUS_NUM	src/dev/pcireg.h	/^#define PCI1_SEC_BUS_NUM /;"	d
PCI1_SEC_LAT_TIMER	src/dev/pcireg.h	/^#define PCI1_SEC_LAT_TIMER /;"	d
PCI1_SUB_BUS_NUM	src/dev/pcireg.h	/^#define PCI1_SUB_BUS_NUM /;"	d
PCIConfig	src/dev/pcireg.h	/^union PCIConfig {$/;"	u
PCITestControlRegister	src/dev/ns_gige_reg.h	/^enum PCITestControlRegister {$/;"	g
PCI_BASE_CLASS_CODE	src/dev/pcireg.h	/^#define PCI_BASE_CLASS_CODE /;"	d
PCI_BIST	src/dev/pcireg.h	/^#define PCI_BIST /;"	d
PCI_CACHE_LINE_SIZE	src/dev/pcireg.h	/^#define PCI_CACHE_LINE_SIZE /;"	d
PCI_CLASS_CODE	src/dev/pcireg.h	/^#define PCI_CLASS_CODE /;"	d
PCI_CMD_BME	src/dev/pcireg.h	/^#define PCI_CMD_BME /;"	d
PCI_CMD_IOSE	src/dev/pcireg.h	/^#define PCI_CMD_IOSE /;"	d
PCI_CMD_MSE	src/dev/pcireg.h	/^#define PCI_CMD_MSE /;"	d
PCI_COMMAND	src/dev/pcireg.h	/^#define PCI_COMMAND /;"	d
PCI_CONFIG_SIZE	src/dev/pcireg.h	/^#define PCI_CONFIG_SIZE /;"	d
PCI_DEVICE_ID	src/dev/pcireg.h	/^#define PCI_DEVICE_ID /;"	d
PCI_DEVICE_SPECIFIC	src/dev/pcireg.h	/^#define PCI_DEVICE_SPECIFIC /;"	d
PCI_HEADER_TYPE	src/dev/pcireg.h	/^#define PCI_HEADER_TYPE /;"	d
PCI_LATENCY_TIMER	src/dev/pcireg.h	/^#define PCI_LATENCY_TIMER /;"	d
PCI_PRODUCT_DEC_PZA	src/dev/pcireg.h	/^#define PCI_PRODUCT_DEC_PZA /;"	d
PCI_PRODUCT_NCR_810	src/dev/pcireg.h	/^#define PCI_PRODUCT_NCR_810 /;"	d
PCI_PRODUCT_QLOGIC_ISP1020	src/dev/pcireg.h	/^#define PCI_PRODUCT_QLOGIC_ISP1020 /;"	d
PCI_PRODUCT_SIMOS_ETHER	src/dev/pcireg.h	/^#define PCI_PRODUCT_SIMOS_ETHER /;"	d
PCI_PRODUCT_SIMOS_SIMOS	src/dev/pcireg.h	/^#define PCI_PRODUCT_SIMOS_SIMOS /;"	d
PCI_REVISION_ID	src/dev/pcireg.h	/^#define PCI_REVISION_ID /;"	d
PCI_STATUS	src/dev/pcireg.h	/^#define PCI_STATUS /;"	d
PCI_SUB_CLASS_CODE	src/dev/pcireg.h	/^#define PCI_SUB_CLASS_CODE /;"	d
PCI_VENDOR_DEC	src/dev/pcireg.h	/^#define PCI_VENDOR_DEC /;"	d
PCI_VENDOR_ID	src/dev/pcireg.h	/^#define PCI_VENDOR_ID /;"	d
PCI_VENDOR_NCR	src/dev/pcireg.h	/^#define PCI_VENDOR_NCR /;"	d
PCI_VENDOR_QLOGIC	src/dev/pcireg.h	/^#define PCI_VENDOR_QLOGIC /;"	d
PCI_VENDOR_SIMOS	src/dev/pcireg.h	/^#define PCI_VENDOR_SIMOS /;"	d
PCMask	src/cpu/base.hh	/^    static const Addr PCMask = ~((Addr)sizeof(TheISA::MachInst) - 1);$/;"	m	class:BaseCPU
PCR	src/dev/ns_gige_reg.h	/^    PCR =               0x44,$/;"	e	enum:DeviceRegisterAddress
PCR_FFHI_8K	src/dev/ns_gige_reg.h	/^     PCR_FFHI_8K =      (3 << 21),$/;"	e	enum:PauseControlStatusRegister
PCR_FFLO_4K	src/dev/ns_gige_reg.h	/^     PCR_FFLO_4K =      (1 << 21),$/;"	e	enum:PauseControlStatusRegister
PCR_PAUSE_CNT	src/dev/ns_gige_reg.h	/^     PCR_PAUSE_CNT =    0xFFFE$/;"	e	enum:PauseControlStatusRegister
PCR_PSEN	src/dev/ns_gige_reg.h	/^     PCR_PSEN =         (1 << 31),$/;"	e	enum:PauseControlStatusRegister
PCR_PS_DA	src/dev/ns_gige_reg.h	/^     PCR_PS_DA =        (1 << 29),$/;"	e	enum:PauseControlStatusRegister
PCR_PS_MCAST	src/dev/ns_gige_reg.h	/^     PCR_PS_MCAST =     (1 << 30),$/;"	e	enum:PauseControlStatusRegister
PCR_STHI_8	src/dev/ns_gige_reg.h	/^     PCR_STHI_8 =       (3 << 23),$/;"	e	enum:PauseControlStatusRegister
PCR_STLO_4	src/dev/ns_gige_reg.h	/^     PCR_STLO_4 =       (1 << 23),$/;"	e	enum:PauseControlStatusRegister
PCReg	src/arch/arm/registers.hh	/^const int PCReg = INTREG_PC;$/;"	m	namespace:ArmISA
PCState	src/arch/alpha/types.hh	/^typedef GenericISA::SimplePCState<MachInst> PCState;$/;"	t	namespace:AlphaISA
PCState	src/arch/arm/types.hh	/^        PCState() : flags(0), nextFlags(0), _itstate(0), _nextItstate(0)$/;"	f	class:ArmISA::PCState
PCState	src/arch/arm/types.hh	/^        PCState(Addr val) : flags(0), nextFlags(0), _itstate(0), _nextItstate(0)$/;"	f	class:ArmISA::PCState
PCState	src/arch/arm/types.hh	/^    class PCState : public GenericISA::UPCState<MachInst>$/;"	c	namespace:ArmISA
PCState	src/arch/mips/types.hh	/^typedef GenericISA::DelaySlotPCState<MachInst> PCState;$/;"	t	namespace:MipsISA
PCState	src/arch/null/types.hh	/^    class PCState : public GenericISA::UPCState<MachInst>$/;"	c	namespace:NullISA
PCState	src/arch/power/types.hh	/^typedef GenericISA::SimplePCState<MachInst> PCState;$/;"	t	namespace:PowerISA
PCState	src/arch/sparc/types.hh	/^typedef GenericISA::DelaySlotUPCState<MachInst> PCState;$/;"	t	namespace:SparcISA
PCState	src/arch/x86/types.hh	/^        PCState() {}$/;"	f	class:X86ISA::PCState
PCState	src/arch/x86/types.hh	/^        PCState(Addr val) { set(val); }$/;"	f	class:X86ISA::PCState
PCState	src/arch/x86/types.hh	/^    class PCState : public GenericISA::UPCState<MachInst>$/;"	c	namespace:X86ISA
PCStateBase	src/arch/generic/types.hh	/^    PCStateBase() {}$/;"	f	class:GenericISA::PCStateBase
PCStateBase	src/arch/generic/types.hh	/^    PCStateBase(Addr val) { set(val); }$/;"	f	class:GenericISA::PCStateBase
PCStateBase	src/arch/generic/types.hh	/^class PCStateBase$/;"	c	namespace:GenericISA
PCStateOperand	src/arch/isa_parser.py	/^class PCStateOperand(Operand):$/;"	c
PClksPerLine	src/dev/arm/hdlcd.hh	/^    inline uint64_t PClksPerLine() const {$/;"	f	class:HDLcd
PD	src/arch/x86/pagetable_walker.hh	/^                PSEPD, PD, PTE$/;"	e	enum:X86ISA::Walker::WalkerState::State
PDR	src/base/loader/coff_sym.h	/^} PDR, *pPDR;$/;"	t	typeref:struct:pdr
PDtbMissFault	src/arch/alpha/faults.hh	/^    PDtbMissFault(VAddr vaddr, Request::Flags reqFlags, uint64_t flags)$/;"	f	class:AlphaISA::PDtbMissFault
PDtbMissFault	src/arch/alpha/faults.hh	/^class PDtbMissFault : public DtbFault$/;"	c	namespace:AlphaISA
PEBit	src/arch/x86/regs/misc.hh	/^        PEBit = 1 << 5,$/;"	e	enum:X86ISA::X87StatusBit
PF	src/arch/x86/insts/microop.hh	/^            PF,$/;"	e	enum:X86ISA::ConditionTests::CondTest
PFBit	src/arch/x86/regs/misc.hh	/^        PFBit = 1 << 2,$/;"	e	enum:X86ISA::CondFlagBit
PFN0	src/arch/mips/pagetable.hh	/^    Addr PFN0;  \/\/ Physical Frame Number - Even$/;"	m	struct:MipsISA::PTE
PFN0	src/arch/power/pagetable.hh	/^    Addr PFN0; \/\/ Physical Frame Number - Even$/;"	m	struct:PowerISA::PTE
PFN1	src/arch/mips/pagetable.hh	/^    Addr PFN1;  \/\/ Physical Frame Number - Odd$/;"	m	struct:MipsISA::PTE
PFN1	src/arch/power/pagetable.hh	/^    Addr PFN1; \/\/ Physical Frame Number - Odd$/;"	m	struct:PowerISA::PTE
PF_EXCLUSIVE	src/mem/request.hh	/^    static const FlagsType PF_EXCLUSIVE                = 0x02000000;$/;"	m	class:Request
PHASE_ABORTED	src/dev/ide_wdcreg.h	/^#define PHASE_ABORTED	/;"	d
PHASE_CMDOUT	src/dev/ide_wdcreg.h	/^#define PHASE_CMDOUT	/;"	d
PHASE_COMPLETED	src/dev/ide_wdcreg.h	/^#define PHASE_COMPLETED	/;"	d
PHASE_DATAIN	src/dev/ide_wdcreg.h	/^#define PHASE_DATAIN	/;"	d
PHASE_DATAOUT	src/dev/ide_wdcreg.h	/^#define PHASE_DATAOUT	/;"	d
PHYSICAL	src/mem/request.hh	/^    static const FlagsType PHYSICAL                    = 0x00000200;$/;"	m	class:Request
PHY_AGC	src/dev/i8254xGBe_defs.hh	/^const uint8_t PHY_AGC           = 18;$/;"	m	namespace:iGbReg
PHY_EPID	src/dev/i8254xGBe_defs.hh	/^const uint8_t PHY_EPID          = 0x3;$/;"	m	namespace:iGbReg
PHY_EPSTATUS	src/dev/i8254xGBe_defs.hh	/^const uint8_t PHY_EPSTATUS      = 15;$/;"	m	namespace:iGbReg
PHY_GSTATUS	src/dev/i8254xGBe_defs.hh	/^const uint8_t PHY_GSTATUS       = 10;$/;"	m	namespace:iGbReg
PHY_PID	src/dev/i8254xGBe_defs.hh	/^const uint8_t PHY_PID           = 0x2;$/;"	m	namespace:iGbReg
PHY_PSTATUS	src/dev/i8254xGBe_defs.hh	/^const uint8_t PHY_PSTATUS       = 0x1;$/;"	m	namespace:iGbReg
PIPE	src/python/m5/util/__init__.py	/^    from subprocess import Popen, PIPE, STDOUT$/;"	i
PIXEL_BUFFER_CAPACITY	src/dev/arm/hdlcd.hh	/^    static const size_t PIXEL_BUFFER_CAPACITY = 2048;$/;"	m	class:HDLcd
PL031	src/dev/arm/RealView.py	/^class PL031(AmbaIntDevice):$/;"	c
PL031	src/dev/arm/rtc_pl031.cc	/^PL031::PL031(Params *p)$/;"	f	class:PL031
PL031	src/dev/arm/rtc_pl031.hh	/^class PL031 : public AmbaIntDevice$/;"	c
PL_TO_SINGLE	src/arch/arm/types.hh	/^        PL_TO_SINGLE,$/;"	e	enum:ArmISA::ConvertType
PL_TO_SINGLE	src/arch/mips/types.hh	/^    PL_TO_SINGLE,$/;"	e	enum:MipsISA::ConvertType
PMCAP	src/dev/pcireg.h	/^struct PMCAP {$/;"	s
PMCAPBaseOffset	src/dev/Pci.py	/^        Param.UInt8(0x00, "Base offset of PMCAP in PCI Config space")$/;"	v	class:PciDevice
PMCAPCapId	src/dev/Pci.py	/^        Param.UInt8(0x00, "Specifies this is the Power Management capability")$/;"	v	class:PciDevice
PMCAPCapabilities	src/dev/Pci.py	/^        Param.UInt16(0x0000, "PCI Power Management Capabilities Register")$/;"	v	class:PciDevice
PMCAPCtrlStatus	src/dev/Pci.py	/^        Param.UInt16(0x0000, "PCI Power Management Control and Status")$/;"	v	class:PciDevice
PMCAPNextCapability	src/dev/Pci.py	/^        Param.UInt8(0x00, "Pointer to next capability block")$/;"	v	class:PciDevice
PMCAP_BASE	src/dev/pcidev.hh	/^    const int PMCAP_BASE;$/;"	m	class:PciDevice
PMCAP_ID	src/dev/pcireg.h	/^#define PMCAP_ID /;"	d
PMCAP_PC	src/dev/pcireg.h	/^#define PMCAP_PC /;"	d
PMCAP_PMCS	src/dev/pcireg.h	/^#define PMCAP_PMCS /;"	d
PMCAP_SIZE	src/dev/pcireg.h	/^#define PMCAP_SIZE /;"	d
PO	src/arch/x86/decoder_tables.cc	/^        PO = Pointer$/;"	e	enum:X86ISA::SizeType	file:
PORTB_SPKR_HIGH	src/dev/alpha/tsunamireg.h	/^#define PORTB_SPKR_HIGH /;"	d
PORTB_SPKR_HIGH	src/dev/mips/maltareg.h	/^#define PORTB_SPKR_HIGH /;"	d
POWER_TRACE_H	src/mem/ruby/network/orion/NetworkPower.hh	/^#define POWER_TRACE_H$/;"	d
PPI_MAX	src/dev/arm/gic_pl390.hh	/^    static const int PPI_MAX = 16;  \/\/ Number of Private Peripheral Interrupts$/;"	m	class:Pl390
PQCR	src/dev/ns_gige_reg.h	/^    PQCR =              0x3c,$/;"	e	enum:DeviceRegisterAddress
PRD_BASE_MASK	src/dev/ide_disk.hh	/^#define PRD_BASE_MASK /;"	d
PRD_COUNT_MASK	src/dev/ide_disk.hh	/^#define PRD_COUNT_MASK /;"	d
PRD_EOT_MASK	src/dev/ide_disk.hh	/^#define PRD_EOT_MASK /;"	d
PREFETCH	src/mem/request.hh	/^    static const FlagsType PREFETCH                    = 0x01000000;$/;"	m	class:Request
PREFETCHER_H	src/mem/ruby/structures/Prefetcher.hh	/^#define PREFETCHER_H$/;"	d
PRIORITY_SWITCH_LIMIT	src/mem/ruby/network/simple/PerfectSwitch.cc	/^const int PRIORITY_SWITCH_LIMIT = 128;$/;"	v
PRIORITY_SWITCH_LIMIT	src/mem/ruby/network/simple/Throttle.cc	/^const int PRIORITY_SWITCH_LIMIT = 128;$/;"	v
PRIVATE_FLAGS	src/mem/packet.hh	/^    static const FlagsType PRIVATE_FLAGS          = 0x00007F0F;$/;"	m	class:Packet
PRIVILEGED	src/mem/request.hh	/^    static const FlagsType PRIVILEGED                   = 0x00008000;$/;"	m	class:Request
PS2Device	src/dev/x86/i8042.hh	/^    PS2Device() : lastCommand(NoCommand)$/;"	f	class:X86ISA::PS2Device
PS2Device	src/dev/x86/i8042.hh	/^class PS2Device$/;"	c	namespace:X86ISA
PS2Keyboard	src/dev/x86/i8042.hh	/^class PS2Keyboard : public PS2Device$/;"	c	namespace:X86ISA
PS2Mouse	src/dev/x86/i8042.hh	/^    PS2Mouse() : PS2Device(), status(0), resolution(4), sampleRate(100)$/;"	f	class:X86ISA::PS2Mouse
PS2Mouse	src/dev/x86/i8042.hh	/^class PS2Mouse : public PS2Device$/;"	c	namespace:X86ISA
PSEPD	src/arch/x86/pagetable_walker.hh	/^                PSEPD, PD, PTE$/;"	e	enum:X86ISA::Walker::WalkerState::State
PTE	src/arch/arm/pagetable.hh	/^struct PTE$/;"	s	namespace:ArmISA
PTE	src/arch/mips/pagetable.hh	/^struct PTE$/;"	s	namespace:MipsISA
PTE	src/arch/power/pagetable.hh	/^struct PTE$/;"	s	namespace:PowerISA
PTE	src/arch/x86/pagetable_walker.hh	/^                PSEPD, PD, PTE$/;"	e	enum:X86ISA::Walker::WalkerState::State
PTSCR	src/dev/ns_gige_reg.h	/^    PTSCR =             0x0c,$/;"	e	enum:DeviceRegisterAddress
PTSCR_EEBIST_EN	src/dev/ns_gige_reg.h	/^     PTSCR_EEBIST_EN =          0x00000002,$/;"	e	enum:PCITestControlRegister
PTSCR_EEBIST_FAIL	src/dev/ns_gige_reg.h	/^     PTSCR_EEBIST_FAIL =        0x00000001,$/;"	e	enum:PCITestControlRegister
PTSCR_EELOAD_EN	src/dev/ns_gige_reg.h	/^     PTSCR_EELOAD_EN =          0x00000004,$/;"	e	enum:PCITestControlRegister
PTSCR_RBIST_DONE	src/dev/ns_gige_reg.h	/^     PTSCR_RBIST_DONE =         0x00000200,$/;"	e	enum:PCITestControlRegister
PTSCR_RBIST_EN	src/dev/ns_gige_reg.h	/^     PTSCR_RBIST_EN =           0x00000400,$/;"	e	enum:PCITestControlRegister
PTSCR_RBIST_FAIL	src/dev/ns_gige_reg.h	/^     PTSCR_RBIST_FAIL =         0x000001b8,$/;"	e	enum:PCITestControlRegister
PTSCR_RBIST_RDONLY	src/dev/ns_gige_reg.h	/^     PTSCR_RBIST_RDONLY =       0x000003f9$/;"	e	enum:PCITestControlRegister
PTSCR_RBIST_RST	src/dev/ns_gige_reg.h	/^     PTSCR_RBIST_RST =          0x00002000,$/;"	e	enum:PCITestControlRegister
PT_WALK	src/mem/request.hh	/^    static const FlagsType PT_WALK                     = 0x20000000;$/;"	m	class:Request
PTable	src/mem/page_table.hh	/^    typedef m5::hash_map<Addr, TheISA::TlbEntry> PTable;$/;"	t	class:PageTable
PTableItr	src/mem/page_table.hh	/^    typedef PTable::iterator PTableItr;$/;"	t	class:PageTable
PUBLIC_FLAGS	src/mem/packet.hh	/^    static const FlagsType PUBLIC_FLAGS           = 0x00000000;$/;"	m	class:Packet
PU_TO_SINGLE	src/arch/arm/types.hh	/^        PU_TO_SINGLE$/;"	e	enum:ArmISA::ConvertType
PU_TO_SINGLE	src/arch/mips/types.hh	/^    PU_TO_SINGLE$/;"	e	enum:MipsISA::ConvertType
PXCAP	src/dev/pcireg.h	/^struct PXCAP {$/;"	s
PXCAPBaseOffset	src/dev/Pci.py	/^        Param.UInt8(0x00, "Base offset of PXCAP in PCI Config space")$/;"	v	class:PciDevice
PXCAPCapId	src/dev/Pci.py	/^    PXCAPCapId = Param.UInt8(0x00, "Specifies this is the PCIe Capability")$/;"	v	class:PciDevice
PXCAPCapabilities	src/dev/Pci.py	/^    PXCAPCapabilities = Param.UInt16(0x0000, "PCIe Capabilities")$/;"	v	class:PciDevice
PXCAPDevCap2	src/dev/Pci.py	/^    PXCAPDevCap2 = Param.UInt32(0x00000000, "PCIe Device Capabilities 2")$/;"	v	class:PciDevice
PXCAPDevCapabilities	src/dev/Pci.py	/^    PXCAPDevCapabilities = Param.UInt32(0x00000000, "PCIe Device Capabilities")$/;"	v	class:PciDevice
PXCAPDevCtrl	src/dev/Pci.py	/^    PXCAPDevCtrl = Param.UInt16(0x0000, "PCIe Device Control")$/;"	v	class:PciDevice
PXCAPDevCtrl2	src/dev/Pci.py	/^    PXCAPDevCtrl2 = Param.UInt32(0x00000000, "PCIe Device Control 2")$/;"	v	class:PciDevice
PXCAPDevStatus	src/dev/Pci.py	/^    PXCAPDevStatus = Param.UInt16(0x0000, "PCIe Device Status")$/;"	v	class:PciDevice
PXCAPLinkCap	src/dev/Pci.py	/^    PXCAPLinkCap = Param.UInt32(0x00000000, "PCIe Link Capabilities")$/;"	v	class:PciDevice
PXCAPLinkCtrl	src/dev/Pci.py	/^    PXCAPLinkCtrl = Param.UInt16(0x0000, "PCIe Link Control")$/;"	v	class:PciDevice
PXCAPLinkStatus	src/dev/Pci.py	/^    PXCAPLinkStatus = Param.UInt16(0x0000, "PCIe Link Status")$/;"	v	class:PciDevice
PXCAPNextCapability	src/dev/Pci.py	/^    PXCAPNextCapability = Param.UInt8(0x00, "Pointer to next capability block")$/;"	v	class:PciDevice
PXCAP_BASE	src/dev/pcidev.hh	/^    const int PXCAP_BASE;$/;"	m	class:PciDevice
PXCAP_ID	src/dev/pcireg.h	/^#define PXCAP_ID /;"	d
PXCAP_PXCAP	src/dev/pcireg.h	/^#define PXCAP_PXCAP /;"	d
PXCAP_PXDC	src/dev/pcireg.h	/^#define PXCAP_PXDC /;"	d
PXCAP_PXDC2	src/dev/pcireg.h	/^#define PXCAP_PXDC2 /;"	d
PXCAP_PXDCAP	src/dev/pcireg.h	/^#define PXCAP_PXDCAP /;"	d
PXCAP_PXDCAP2	src/dev/pcireg.h	/^#define PXCAP_PXDCAP2 /;"	d
PXCAP_PXDS	src/dev/pcireg.h	/^#define PXCAP_PXDS /;"	d
PXCAP_PXLC	src/dev/pcireg.h	/^#define PXCAP_PXLC /;"	d
PXCAP_PXLCAP	src/dev/pcireg.h	/^#define PXCAP_PXLCAP /;"	d
PXCAP_PXLS	src/dev/pcireg.h	/^#define PXCAP_PXLS /;"	d
PXCAP_SIZE	src/dev/pcireg.h	/^#define PXCAP_SIZE /;"	d
Packet	src/mem/packet.hh	/^    Packet(Packet *pkt, bool clearFlags = false)$/;"	f	class:Packet
Packet	src/mem/packet.hh	/^    Packet(Request *_req, MemCmd _cmd)$/;"	f	class:Packet
Packet	src/mem/packet.hh	/^    Packet(Request *_req, MemCmd _cmd, int _blkSize)$/;"	f	class:Packet
Packet	src/mem/packet.hh	/^class Packet : public Printable$/;"	c
PacketDataPtr	src/mem/packet.hh	/^typedef uint8_t* PacketDataPtr;$/;"	t
PacketFifo	src/dev/pktfifo.hh	/^    explicit PacketFifo(int max)$/;"	f	class:PacketFifo
PacketFifo	src/dev/pktfifo.hh	/^class PacketFifo$/;"	c
PacketFifoEntry	src/dev/pktfifo.hh	/^    PacketFifoEntry()$/;"	f	struct:PacketFifoEntry
PacketFifoEntry	src/dev/pktfifo.hh	/^    PacketFifoEntry(EthPacketPtr p, uint64_t n)$/;"	f	struct:PacketFifoEntry
PacketFifoEntry	src/dev/pktfifo.hh	/^    PacketFifoEntry(const PacketFifoEntry &s)$/;"	f	struct:PacketFifoEntry
PacketFifoEntry	src/dev/pktfifo.hh	/^struct PacketFifoEntry$/;"	s
PacketList	src/mem/packet.hh	/^typedef std::list<PacketPtr> PacketList;$/;"	t
PacketPtr	src/mem/packet.hh	/^typedef Packet *PacketPtr;$/;"	t
PacketQueue	src/mem/packet_queue.cc	/^PacketQueue::PacketQueue(EventManager& _em, const std::string& _label)$/;"	f	class:PacketQueue
PacketQueue	src/mem/packet_queue.hh	/^class PacketQueue : public Drainable$/;"	c
Page	src/arch/arm/table_walker.hh	/^            Page$/;"	e	enum:ArmISA::TableWalker::LongDescriptor::EntryType
PageBytes	src/arch/alpha/isa_traits.hh	/^const Addr PageBytes = ULL(1) << PageShift;$/;"	m	namespace:AlphaISA
PageBytes	src/arch/arm/isa_traits.hh	/^    const Addr PageBytes = ULL(1) << PageShift;$/;"	m	namespace:ArmISA
PageBytes	src/arch/mips/isa_traits.hh	/^const Addr PageBytes = ULL(1) << PageShift;$/;"	m	namespace:MipsISA
PageBytes	src/arch/null/isa_traits.hh	/^    const Addr PageBytes = ULL(1) << PageShift;$/;"	m	namespace:NullISA
PageBytes	src/arch/power/isa_traits.hh	/^const Addr PageBytes = ULL(1) << PageShift;$/;"	m	namespace:PowerISA
PageBytes	src/arch/sparc/isa_traits.hh	/^const int PageBytes = 1ULL << PageShift;$/;"	m	namespace:SparcISA
PageBytes	src/arch/x86/isa_traits.hh	/^    const int PageBytes = 1ULL << PageShift;$/;"	m	namespace:X86ISA
PageFault	src/arch/x86/faults.hh	/^        PageFault(Addr _addr, bool present, BaseTLB::Mode mode,$/;"	f	class:X86ISA::PageFault
PageFault	src/arch/x86/faults.hh	/^        PageFault(Addr _addr, uint32_t _errorCode) :$/;"	f	class:X86ISA::PageFault
PageFault	src/arch/x86/faults.hh	/^    class PageFault : public X86Fault$/;"	c	namespace:X86ISA
PageIt	src/cpu/decode_cache.hh	/^    typedef typename PageMap::iterator PageIt;$/;"	t	class:DecodeCache::AddrMap
PageManage	src/mem/DRAMCtrl.py	/^class PageManage(Enum): vals = ['open', 'open_adaptive', 'close',$/;"	c
PageMap	src/cpu/decode_cache.hh	/^    typedef typename m5::hash_map<Addr, CachePage *> PageMap;$/;"	t	class:DecodeCache::AddrMap
PageMask	src/arch/alpha/isa_traits.hh	/^const Addr PageMask = ~(PageBytes - 1);$/;"	m	namespace:AlphaISA
PageOffset	src/arch/alpha/isa_traits.hh	/^const Addr PageOffset = PageBytes - 1;$/;"	m	namespace:AlphaISA
PageOffset	src/arch/arm/isa_traits.hh	/^    const Addr PageOffset = PageBytes - 1;$/;"	m	namespace:ArmISA
PageOffset	src/arch/mips/isa_traits.hh	/^const Addr PageOffset = PageBytes - 1;$/;"	m	namespace:MipsISA
PageOffset	src/arch/power/isa_traits.hh	/^const Addr PageOffset = PageBytes - 1;$/;"	m	namespace:PowerISA
PageShift	src/arch/alpha/isa_traits.hh	/^const Addr PageShift = 13;$/;"	m	namespace:AlphaISA
PageShift	src/arch/arm/isa_traits.hh	/^    const Addr PageShift = 12;$/;"	m	namespace:ArmISA
PageShift	src/arch/mips/isa_traits.hh	/^const Addr PageShift = 13;$/;"	m	namespace:MipsISA
PageShift	src/arch/null/isa_traits.hh	/^    const Addr PageShift = 12;$/;"	m	namespace:NullISA
PageShift	src/arch/power/isa_traits.hh	/^const Addr PageShift = 12;$/;"	m	namespace:PowerISA
PageShift	src/arch/sparc/isa_traits.hh	/^const int PageShift = 13;$/;"	m	namespace:SparcISA
PageShift	src/arch/x86/isa_traits.hh	/^    const int PageShift = 12;$/;"	m	namespace:X86ISA
PageTable	src/arch/alpha/tlb.hh	/^    typedef std::multimap<Addr, int> PageTable;$/;"	t	class:AlphaISA::TLB
PageTable	src/arch/arm/table_walker.hh	/^            PageTable,$/;"	e	enum:ArmISA::TableWalker::L1Descriptor::EntryType
PageTable	src/arch/mips/tlb.hh	/^    typedef std::multimap<Addr, int> PageTable;$/;"	t	class:MipsISA::TLB
PageTable	src/arch/power/tlb.hh	/^    typedef std::multimap<Addr, int> PageTable;$/;"	t	class:PowerISA::TLB
PageTable	src/mem/page_table.cc	/^PageTable::PageTable(const std::string &__name, uint64_t _pid, Addr _pageSize)$/;"	f	class:PageTable
PageTable	src/mem/page_table.hh	/^class PageTable$/;"	c
PageTableEntry	src/arch/alpha/pagetable.hh	/^    PageTableEntry(uint64_t e) : entry(e) {}$/;"	f	struct:AlphaISA::PageTableEntry
PageTableEntry	src/arch/alpha/pagetable.hh	/^struct PageTableEntry$/;"	s	namespace:AlphaISA
PageTableEntry	src/arch/sparc/pagetable.hh	/^    PageTableEntry() : entry(0), type(invalid), populated(false)$/;"	f	class:SparcISA::PageTableEntry
PageTableEntry	src/arch/sparc/pagetable.hh	/^    PageTableEntry(uint64_t e, EntryType t = sun4u)$/;"	f	class:SparcISA::PageTableEntry
PageTableEntry	src/arch/sparc/pagetable.hh	/^class PageTableEntry$/;"	c	namespace:SparcISA
Page_Mask	src/arch/arm/isa_traits.hh	/^    const Addr Page_Mask = ~(PageBytes - 1);$/;"	m	namespace:ArmISA
Page_Mask	src/arch/mips/isa_traits.hh	/^const Addr Page_Mask = ~(PageBytes - 1);$/;"	m	namespace:MipsISA
Page_Mask	src/arch/power/isa_traits.hh	/^const Addr Page_Mask = ~(PageBytes - 1);$/;"	m	namespace:PowerISA
PairAST	src/mem/slicc/ast/PairAST.py	/^class PairAST(AST):$/;"	c
PairContainer	src/mem/slicc/ast/AST.py	/^from slicc.util import PairContainer, Location$/;"	i
PairContainer	src/mem/slicc/symbols/Symbol.py	/^from slicc.util import PairContainer$/;"	i
PairContainer	src/mem/slicc/symbols/Type.py	/^from slicc.util import PairContainer$/;"	i
PairContainer	src/mem/slicc/util.py	/^class PairContainer(object):$/;"	c
PairListAST	src/mem/slicc/ast/PairListAST.py	/^class PairListAST(AST):$/;"	c
PairMemOp	src/arch/arm/insts/macromem.cc	/^PairMemOp::PairMemOp(const char *mnem, ExtMachInst machInst, OpClass __opClass,$/;"	f	class:ArmISA::PairMemOp
PairMemOp	src/arch/arm/insts/macromem.hh	/^class PairMemOp : public PredMacroOp$/;"	c	namespace:ArmISA
PalBase	src/arch/alpha/ev5.hh	/^const Addr PalBase = 0x4000;$/;"	m	namespace:AlphaISA
PalFault	src/arch/alpha/faults.hh	/^class PalFault : public AlphaFault$/;"	c	namespace:AlphaISA
PalMax	src/arch/alpha/ev5.hh	/^const Addr PalMax = 0x10000;$/;"	m	namespace:AlphaISA
PanicFunc	src/arch/generic/debugfaults.hh	/^        PanicFunc,$/;"	e	enum:GenericISA::M5DebugFault::DebugFunc
PanicPCEvent	src/cpu/pc_event.cc	/^PanicPCEvent::PanicPCEvent(PCEventQueue *q, const std::string &desc, Addr pc)$/;"	f	class:PanicPCEvent
PanicPCEvent	src/cpu/pc_event.hh	/^class PanicPCEvent : public PCEvent$/;"	c
Param	src/arch/alpha/linux/system.hh	/^    Addr Param() const { return ZeroPGE() + 0x0; }$/;"	f	class:LinuxAlphaSystem
Param	src/arch/mips/linux/system.hh	/^    Addr Param() const { return ZeroPGE() + 0x0; }$/;"	f	class:LinuxMipsSystem
Param	src/python/m5/params.py	/^Param = ParamFactory(ParamDesc)$/;"	v
ParamDesc	src/python/m5/SimObject.py	/^     isNullPointer, SimObjectVector, Port$/;"	i
ParamDesc	src/python/m5/params.py	/^class ParamDesc(object):$/;"	c
ParamFactory	src/python/m5/params.py	/^class ParamFactory(object):$/;"	c
ParamValue	src/python/m5/params.py	/^class ParamValue(object):$/;"	c
Params	src/arch/alpha/freebsd/system.hh	/^    typedef FreebsdAlphaSystemParams Params;$/;"	t	class:FreebsdAlphaSystem
Params	src/arch/alpha/interrupts.hh	/^    typedef AlphaInterruptsParams Params;$/;"	t	class:AlphaISA::Interrupts
Params	src/arch/alpha/isa.hh	/^        typedef AlphaISAParams Params;$/;"	t	class:AlphaISA::ISA
Params	src/arch/alpha/linux/system.hh	/^    typedef LinuxAlphaSystemParams Params;$/;"	t	class:LinuxAlphaSystem
Params	src/arch/alpha/system.hh	/^    typedef AlphaSystemParams Params;$/;"	t	class:AlphaSystem
Params	src/arch/alpha/tlb.hh	/^    typedef AlphaTLBParams Params;$/;"	t	class:AlphaISA::TLB
Params	src/arch/alpha/tru64/system.hh	/^    typedef Tru64AlphaSystemParams Params;$/;"	t	class:Tru64AlphaSystem
Params	src/arch/arm/interrupts.hh	/^    typedef ArmInterruptsParams Params;$/;"	t	class:ArmISA::Interrupts
Params	src/arch/arm/isa.hh	/^        typedef ArmISAParams Params;$/;"	t	class:ArmISA::ISA
Params	src/arch/arm/linux/system.hh	/^    typedef LinuxArmSystemParams Params;$/;"	t	class:LinuxArmSystem
Params	src/arch/arm/nativetrace.hh	/^    typedef ArmNativeTraceParams Params;$/;"	t	class:Trace::ArmNativeTrace
Params	src/arch/arm/stage2_mmu.hh	/^    typedef ArmStage2MMUParams Params;$/;"	t	class:ArmISA::Stage2MMU
Params	src/arch/arm/system.hh	/^    typedef ArmSystemParams Params;$/;"	t	class:ArmSystem
Params	src/arch/arm/table_walker.hh	/^   typedef ArmTableWalkerParams Params;$/;"	t	class:ArmISA::TableWalker
Params	src/arch/mips/interrupts.hh	/^    typedef MipsInterruptsParams Params;$/;"	t	class:MipsISA::Interrupts
Params	src/arch/mips/isa.hh	/^        typedef MipsISAParams Params;$/;"	t	class:MipsISA::ISA
Params	src/arch/mips/linux/system.hh	/^    typedef LinuxMipsSystemParams Params;$/;"	t	class:LinuxMipsSystem
Params	src/arch/mips/system.hh	/^    typedef MipsSystemParams Params;$/;"	t	class:MipsSystem
Params	src/arch/mips/tlb.hh	/^    typedef MipsTLBParams Params;$/;"	t	class:MipsISA::TLB
Params	src/arch/power/interrupts.hh	/^    typedef PowerInterruptsParams Params;$/;"	t	class:PowerISA::Interrupts
Params	src/arch/power/isa.hh	/^    typedef PowerISAParams Params;$/;"	t	class:PowerISA::ISA
Params	src/arch/power/tlb.hh	/^    typedef PowerTLBParams Params;$/;"	t	class:PowerISA::TLB
Params	src/arch/sparc/interrupts.hh	/^    typedef SparcInterruptsParams Params;$/;"	t	class:SparcISA::Interrupts
Params	src/arch/sparc/isa.hh	/^    typedef SparcISAParams Params;$/;"	t	class:SparcISA::ISA
Params	src/arch/sparc/system.hh	/^    typedef SparcSystemParams Params;$/;"	t	class:SparcSystem
Params	src/arch/sparc/tlb.hh	/^    typedef SparcTLBParams Params;$/;"	t	class:SparcISA::TLB
Params	src/arch/x86/bios/acpi.hh	/^    typedef X86ACPIRSDPParams Params;$/;"	t	class:X86ISA::ACPI::RSDP
Params	src/arch/x86/bios/acpi.hh	/^    typedef X86ACPIRSDTParams Params;$/;"	t	class:X86ISA::ACPI::RSDT
Params	src/arch/x86/bios/acpi.hh	/^    typedef X86ACPISysDescTableParams Params;$/;"	t	class:X86ISA::ACPI::SysDescTable
Params	src/arch/x86/bios/acpi.hh	/^    typedef X86ACPIXSDTParams Params;$/;"	t	class:X86ISA::ACPI::XSDT
Params	src/arch/x86/bios/e820.hh	/^        typedef X86E820EntryParams Params;$/;"	t	class:X86ISA::E820Entry
Params	src/arch/x86/bios/e820.hh	/^        typedef X86E820TableParams Params;$/;"	t	class:X86ISA::E820Table
Params	src/arch/x86/bios/intelmp.hh	/^    typedef X86IntelMPAddrSpaceMappingParams Params;$/;"	t	class:X86ISA::IntelMP::AddrSpaceMapping
Params	src/arch/x86/bios/intelmp.hh	/^    typedef X86IntelMPBaseConfigEntryParams Params;$/;"	t	class:X86ISA::IntelMP::BaseConfigEntry
Params	src/arch/x86/bios/intelmp.hh	/^    typedef X86IntelMPBusHierarchyParams Params;$/;"	t	class:X86ISA::IntelMP::BusHierarchy
Params	src/arch/x86/bios/intelmp.hh	/^    typedef X86IntelMPBusParams Params;$/;"	t	class:X86ISA::IntelMP::Bus
Params	src/arch/x86/bios/intelmp.hh	/^    typedef X86IntelMPCompatAddrSpaceModParams Params;$/;"	t	class:X86ISA::IntelMP::CompatAddrSpaceMod
Params	src/arch/x86/bios/intelmp.hh	/^    typedef X86IntelMPConfigTableParams Params;$/;"	t	class:X86ISA::IntelMP::ConfigTable
Params	src/arch/x86/bios/intelmp.hh	/^    typedef X86IntelMPExtConfigEntryParams Params;$/;"	t	class:X86ISA::IntelMP::ExtConfigEntry
Params	src/arch/x86/bios/intelmp.hh	/^    typedef X86IntelMPFloatingPointerParams Params;$/;"	t	class:X86ISA::IntelMP::FloatingPointer
Params	src/arch/x86/bios/intelmp.hh	/^    typedef X86IntelMPIOAPICParams Params;$/;"	t	class:X86ISA::IntelMP::IOAPIC
Params	src/arch/x86/bios/intelmp.hh	/^    typedef X86IntelMPIOIntAssignmentParams Params;$/;"	t	class:X86ISA::IntelMP::IOIntAssignment
Params	src/arch/x86/bios/intelmp.hh	/^    typedef X86IntelMPLocalIntAssignmentParams Params;$/;"	t	class:X86ISA::IntelMP::LocalIntAssignment
Params	src/arch/x86/bios/intelmp.hh	/^    typedef X86IntelMPProcessorParams Params;$/;"	t	class:X86ISA::IntelMP::Processor
Params	src/arch/x86/bios/smbios.hh	/^    typedef X86SMBiosBiosInformationParams Params;$/;"	t	class:X86ISA::SMBios::BiosInformation
Params	src/arch/x86/bios/smbios.hh	/^    typedef X86SMBiosSMBiosStructureParams Params;$/;"	t	class:X86ISA::SMBios::SMBiosStructure
Params	src/arch/x86/bios/smbios.hh	/^    typedef X86SMBiosSMBiosTableParams Params;$/;"	t	class:X86ISA::SMBios::SMBiosTable
Params	src/arch/x86/interrupts.hh	/^    typedef X86LocalApicParams Params;$/;"	t	class:X86ISA::Interrupts
Params	src/arch/x86/isa.hh	/^        typedef X86ISAParams Params;$/;"	t	class:X86ISA::ISA
Params	src/arch/x86/linux/system.hh	/^    typedef LinuxX86SystemParams Params;$/;"	t	class:LinuxX86System
Params	src/arch/x86/pagetable_walker.hh	/^        typedef X86PagetableWalkerParams Params;$/;"	t	class:X86ISA::Walker
Params	src/arch/x86/system.hh	/^    typedef X86SystemParams Params;$/;"	t	class:X86System
Params	src/arch/x86/tlb.hh	/^        typedef X86TLBParams Params;$/;"	t	class:X86ISA::TLB
Params	src/base/cp_annotate.hh	/^    typedef CPAParams Params;$/;"	t	class:CPA
Params	src/base/statistics.hh	/^        Params() : DistParams(Deviation) {}$/;"	f	struct:Stats::AvgSampleStor::Params
Params	src/base/statistics.hh	/^        Params() : DistParams(Deviation) {}$/;"	f	struct:Stats::SampleStor::Params
Params	src/base/statistics.hh	/^        Params() : DistParams(Dist) {}$/;"	f	struct:Stats::DistStor::Params
Params	src/base/statistics.hh	/^        Params() : DistParams(Hist) {}$/;"	f	struct:Stats::HistStor::Params
Params	src/base/statistics.hh	/^        Params() : DistParams(Hist) {}$/;"	f	struct:Stats::SparseHistStor::Params
Params	src/base/statistics.hh	/^    struct Params : public DistParams$/;"	s	class:Stats::AvgSampleStor
Params	src/base/statistics.hh	/^    struct Params : public DistParams$/;"	s	class:Stats::DistStor
Params	src/base/statistics.hh	/^    struct Params : public DistParams$/;"	s	class:Stats::HistStor
Params	src/base/statistics.hh	/^    struct Params : public DistParams$/;"	s	class:Stats::SampleStor
Params	src/base/statistics.hh	/^    struct Params : public DistParams$/;"	s	class:Stats::SparseHistStor
Params	src/base/statistics.hh	/^    struct Params : public StorageParams {};$/;"	s	class:Stats::AvgStor
Params	src/base/statistics.hh	/^    struct Params : public StorageParams {};$/;"	s	class:Stats::StatStor
Params	src/base/statistics.hh	/^    typedef typename Stor::Params Params;$/;"	t	class:Stats::DistBase
Params	src/base/statistics.hh	/^    typedef typename Stor::Params Params;$/;"	t	class:Stats::ScalarBase
Params	src/base/statistics.hh	/^    typedef typename Stor::Params Params;$/;"	t	class:Stats::SparseHistBase
Params	src/base/statistics.hh	/^    typedef typename Stor::Params Params;$/;"	t	class:Stats::Vector2dBase
Params	src/base/statistics.hh	/^    typedef typename Stor::Params Params;$/;"	t	class:Stats::VectorBase
Params	src/base/statistics.hh	/^    typedef typename Stor::Params Params;$/;"	t	class:Stats::VectorDistBase
Params	src/base/vnc/vncinput.hh	/^    typedef VncInputParams Params;$/;"	t	class:VncInput
Params	src/base/vnc/vncserver.hh	/^    typedef VncServerParams Params;$/;"	t	class:VncServer
Params	src/cpu/base.hh	/^    typedef BaseCPUParams Params;$/;"	t	class:BaseCPU
Params	src/cpu/checker/cpu.hh	/^    typedef CheckerCPUParams Params;$/;"	t	class:CheckerCPU
Params	src/cpu/exetrace.hh	/^    typedef ExeTracerParams Params;$/;"	t	class:Trace::ExeTracer
Params	src/cpu/inorder/cpu.hh	/^    typedef ThePipeline::Params Params;$/;"	t	class:InOrderCPU
Params	src/cpu/inorder/pipeline_stage.hh	/^    typedef ThePipeline::Params Params;$/;"	t	class:PipelineStage
Params	src/cpu/inorder/pipeline_traits.5stage.hh	/^    typedef InOrderCPUParams Params;$/;"	t	namespace:ThePipeline
Params	src/cpu/inorder/pipeline_traits.9stage.hh	/^    typedef InOrderCPUParams Params;$/;"	t	namespace:ThePipeline
Params	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^    typedef InOrderCPUParams Params;$/;"	t	namespace:ThePipeline
Params	src/cpu/inorder/pipeline_traits.hh	/^    typedef InOrderCPUParams Params;$/;"	t	namespace:ThePipeline
Params	src/cpu/intr_control.hh	/^    typedef IntrControlParams Params;$/;"	t	class:IntrControl
Params	src/cpu/legiontrace.hh	/^    typedef LegionTraceParams Params;$/;"	t	class:Trace::LegionTrace
Params	src/cpu/o3/fu_pool.hh	/^    typedef FUPoolParams Params;$/;"	t	class:FUPool
Params	src/cpu/ozone/back_end.hh	/^    typedef typename Impl::Params Params;$/;"	t	class:BackEnd
Params	src/cpu/ozone/cpu.hh	/^    typedef typename Impl::Params Params;$/;"	t	class:OzoneCPU
Params	src/cpu/ozone/front_end.hh	/^    typedef typename Impl::Params Params;$/;"	t	class:FrontEnd
Params	src/cpu/ozone/inorder_back_end.hh	/^    typedef typename Impl::Params Params;$/;"	t	class:InorderBackEnd
Params	src/cpu/ozone/inst_queue.hh	/^    typedef typename Impl::Params Params;$/;"	t	class:InstQueue
Params	src/cpu/ozone/lsq_unit.hh	/^    typedef typename Impl::Params Params;$/;"	t	class:OzoneLSQ
Params	src/cpu/ozone/lw_back_end.hh	/^    typedef typename Impl::Params Params;$/;"	t	class:LWBackEnd
Params	src/cpu/ozone/lw_lsq.hh	/^    typedef typename Impl::Params Params;$/;"	t	class:OzoneLWLSQ
Params	src/cpu/ozone/null_predictor.hh	/^    typedef typename Impl::Params Params;$/;"	t	class:NullPredictor
Params	src/cpu/ozone/ozone_impl.hh	/^    typedef SimpleParams Params;$/;"	t	struct:OzoneImpl
Params	src/cpu/ozone/simple_impl.hh	/^    typedef SimpleParams Params;$/;"	t	struct:SimpleImpl
Params	src/cpu/pred/bpred_unit.hh	/^      typedef BranchPredictorParams Params;$/;"	t	class:BPredUnit
Params	src/cpu/testers/directedtest/DirectedGenerator.hh	/^    typedef DirectedGeneratorParams Params;$/;"	t	class:DirectedGenerator
Params	src/cpu/testers/directedtest/InvalidateGenerator.hh	/^    typedef InvalidateGeneratorParams Params;$/;"	t	class:InvalidateGenerator
Params	src/cpu/testers/directedtest/RubyDirectedTester.hh	/^    typedef RubyDirectedTesterParams Params;$/;"	t	class:RubyDirectedTester
Params	src/cpu/testers/directedtest/SeriesRequestGenerator.hh	/^    typedef SeriesRequestGeneratorParams Params;$/;"	t	class:SeriesRequestGenerator
Params	src/cpu/testers/memtest/memtest.hh	/^    typedef MemTestParams Params;$/;"	t	class:MemTest
Params	src/cpu/testers/networktest/networktest.hh	/^    typedef NetworkTestParams Params;$/;"	t	class:NetworkTest
Params	src/cpu/testers/rubytest/RubyTester.hh	/^    typedef RubyTesterParams Params;$/;"	t	class:RubyTester
Params	src/dev/alpha/backdoor.hh	/^    typedef AlphaBackdoorParams Params;$/;"	t	class:AlphaBackdoor
Params	src/dev/alpha/tsunami.hh	/^    typedef TsunamiParams Params;$/;"	t	class:Tsunami
Params	src/dev/alpha/tsunami_cchip.hh	/^    typedef TsunamiCChipParams Params;$/;"	t	class:TsunamiCChip
Params	src/dev/alpha/tsunami_io.hh	/^    typedef TsunamiIOParams Params;$/;"	t	class:TsunamiIO
Params	src/dev/alpha/tsunami_pchip.hh	/^    typedef TsunamiPChipParams Params;$/;"	t	class:TsunamiPChip
Params	src/dev/arm/a9scu.hh	/^    typedef A9SCUParams Params;$/;"	t	class:A9SCU
Params	src/dev/arm/amba_device.hh	/^    typedef AmbaDmaDeviceParams Params;$/;"	t	class:AmbaDmaDevice
Params	src/dev/arm/amba_device.hh	/^    typedef AmbaIntDeviceParams Params;$/;"	t	class:AmbaIntDevice
Params	src/dev/arm/amba_device.hh	/^    typedef AmbaPioDeviceParams Params;$/;"	t	class:AmbaPioDevice
Params	src/dev/arm/amba_fake.hh	/^   typedef AmbaFakeParams Params;$/;"	t	class:AmbaFake
Params	src/dev/arm/base_gic.hh	/^    typedef struct BaseGicParams Params;$/;"	t	class:BaseGic	typeref:struct:BaseGic::BaseGicParams
Params	src/dev/arm/generic_timer.hh	/^    typedef GenericTimerParams Params;$/;"	t	class:GenericTimer
Params	src/dev/arm/gic_pl390.hh	/^    typedef Pl390Params Params;$/;"	t	class:Pl390
Params	src/dev/arm/hdlcd.hh	/^    typedef HDLcdParams Params;$/;"	t	class:HDLcd
Params	src/dev/arm/kmi.hh	/^    typedef Pl050Params Params;$/;"	t	class:Pl050
Params	src/dev/arm/pl011.hh	/^   typedef Pl011Params Params;$/;"	t	class:Pl011
Params	src/dev/arm/pl111.hh	/^    typedef Pl111Params Params;$/;"	t	class:Pl111
Params	src/dev/arm/realview.hh	/^    typedef RealViewParams Params;$/;"	t	class:RealView
Params	src/dev/arm/rtc_pl031.hh	/^    typedef PL031Params Params;$/;"	t	class:PL031
Params	src/dev/arm/rv_ctrl.hh	/^    typedef RealViewCtrlParams Params;$/;"	t	class:RealViewCtrl
Params	src/dev/arm/timer_cpulocal.hh	/^    typedef CpuLocalTimerParams Params;$/;"	t	class:CpuLocalTimer
Params	src/dev/arm/timer_sp804.hh	/^    typedef Sp804Params Params;$/;"	t	class:Sp804
Params	src/dev/arm/vgic.hh	/^   typedef VGicParams Params;$/;"	t	class:VGic
Params	src/dev/baddev.hh	/^    typedef BadDeviceParams Params;$/;"	t	class:BadDevice
Params	src/dev/copy_engine.hh	/^    typedef CopyEngineParams Params;$/;"	t	class:CopyEngine
Params	src/dev/disk_image.hh	/^    typedef CowDiskImageParams Params;$/;"	t	class:CowDiskImage
Params	src/dev/disk_image.hh	/^    typedef DiskImageParams Params;$/;"	t	class:DiskImage
Params	src/dev/disk_image.hh	/^    typedef RawDiskImageParams Params;$/;"	t	class:RawDiskImage
Params	src/dev/dma_device.hh	/^    typedef DmaDeviceParams Params;$/;"	t	class:DmaDevice
Params	src/dev/etherbus.hh	/^    typedef EtherBusParams Params;$/;"	t	class:EtherBus
Params	src/dev/etherdevice.hh	/^    typedef EtherDeviceParams Params;$/;"	t	class:EtherDevice
Params	src/dev/etherdump.hh	/^    typedef EtherDumpParams Params;$/;"	t	class:EtherDump
Params	src/dev/etherlink.hh	/^    typedef EtherLinkParams Params;$/;"	t	class:EtherLink
Params	src/dev/etherobject.hh	/^    typedef EtherObjectParams Params;$/;"	t	class:EtherObject
Params	src/dev/ethertap.hh	/^    typedef EtherTapParams Params;$/;"	t	class:EtherTap
Params	src/dev/i8254xGBe.hh	/^    typedef IGbEParams Params;$/;"	t	class:IGbE
Params	src/dev/ide_ctrl.hh	/^    typedef IdeControllerParams Params;$/;"	t	class:IdeController
Params	src/dev/ide_disk.hh	/^    typedef IdeDiskParams Params;$/;"	t	class:IdeDisk
Params	src/dev/io_device.hh	/^    typedef BasicPioDeviceParams Params;$/;"	t	class:BasicPioDevice
Params	src/dev/io_device.hh	/^    typedef PioDeviceParams Params;$/;"	t	class:PioDevice
Params	src/dev/isa_fake.hh	/^    typedef IsaFakeParams Params;$/;"	t	class:IsaFake
Params	src/dev/mips/malta.hh	/^    typedef MaltaParams Params;$/;"	t	class:Malta
Params	src/dev/mips/malta_cchip.hh	/^    typedef MaltaCChipParams Params;$/;"	t	class:MaltaCChip
Params	src/dev/mips/malta_io.hh	/^    typedef MaltaIOParams Params;$/;"	t	class:MaltaIO
Params	src/dev/mips/malta_pchip.hh	/^    typedef MaltaPChipParams Params;$/;"	t	class:MaltaPChip
Params	src/dev/ns_gige.hh	/^    typedef NSGigEParams Params;$/;"	t	class:NSGigE
Params	src/dev/pciconfigall.hh	/^    typedef PciConfigAllParams Params;$/;"	t	class:PciConfigAll
Params	src/dev/pcidev.hh	/^    typedef PciDeviceParams Params;$/;"	t	class:PciDevice
Params	src/dev/platform.hh	/^    typedef PlatformParams Params;$/;"	t	class:Platform
Params	src/dev/simple_disk.hh	/^    typedef SimpleDiskParams Params;$/;"	t	class:SimpleDisk
Params	src/dev/sinic.hh	/^    typedef SinicParams Params;$/;"	t	class:Sinic::Base
Params	src/dev/sparc/dtod.hh	/^    typedef DumbTODParams Params;$/;"	t	class:DumbTOD
Params	src/dev/sparc/iob.hh	/^    typedef IobParams Params;$/;"	t	class:Iob
Params	src/dev/sparc/mm_disk.hh	/^    typedef MmDiskParams Params;$/;"	t	class:MmDisk
Params	src/dev/sparc/t1000.hh	/^    typedef T1000Params Params;$/;"	t	class:T1000
Params	src/dev/terminal.hh	/^    typedef TerminalParams Params;$/;"	t	class:Terminal
Params	src/dev/uart.hh	/^    typedef UartParams Params;$/;"	t	class:Uart
Params	src/dev/uart8250.hh	/^    typedef Uart8250Params Params;$/;"	t	class:Uart8250
Params	src/dev/x86/cmos.hh	/^    typedef CmosParams Params;$/;"	t	class:X86ISA::Cmos
Params	src/dev/x86/i8042.hh	/^    typedef I8042Params Params;$/;"	t	class:X86ISA::I8042
Params	src/dev/x86/i82094aa.hh	/^    typedef I82094AAParams Params;$/;"	t	class:X86ISA::I82094AA
Params	src/dev/x86/i8237.hh	/^    typedef I8237Params Params;$/;"	t	class:X86ISA::I8237
Params	src/dev/x86/i8254.hh	/^    typedef I8254Params Params;$/;"	t	class:X86ISA::I8254
Params	src/dev/x86/i8259.hh	/^    typedef I8259Params Params;$/;"	t	class:X86ISA::I8259
Params	src/dev/x86/intdev.hh	/^    typedef X86IntLineParams Params;$/;"	t	class:X86ISA::IntLine
Params	src/dev/x86/intdev.hh	/^    typedef X86IntSinkPinParams Params;$/;"	t	class:X86ISA::IntSinkPin
Params	src/dev/x86/intdev.hh	/^    typedef X86IntSourcePinParams Params;$/;"	t	class:X86ISA::IntSourcePin
Params	src/dev/x86/pc.hh	/^    typedef PcParams Params;$/;"	t	class:Pc
Params	src/dev/x86/south_bridge.hh	/^    typedef SouthBridgeParams Params;$/;"	t	class:SouthBridge
Params	src/dev/x86/speaker.hh	/^    typedef PcSpeakerParams Params;$/;"	t	class:X86ISA::Speaker
Params	src/mem/abstract_mem.hh	/^    typedef AbstractMemoryParams Params;$/;"	t	class:AbstractMemory
Params	src/mem/bridge.hh	/^    typedef BridgeParams Params;$/;"	t	class:Bridge
Params	src/mem/cache/base.hh	/^    typedef BaseCacheParams Params;$/;"	t	class:BaseCache
Params	src/mem/cache/prefetch/base.hh	/^    typedef BasePrefetcherParams Params;$/;"	t	class:BasePrefetcher
Params	src/mem/cache/tags/base.hh	/^    typedef BaseTagsParams Params;$/;"	t	class:BaseTags
Params	src/mem/cache/tags/fa_lru.hh	/^    typedef FALRUParams Params;$/;"	t	class:FALRU
Params	src/mem/cache/tags/lru.hh	/^     typedef LRUParams Params;$/;"	t	class:LRU
Params	src/mem/comm_monitor.hh	/^    typedef CommMonitorParams Params;$/;"	t	class:CommMonitor
Params	src/mem/dramsim2.hh	/^    typedef DRAMSim2Params Params;$/;"	t	class:DRAMSim2
Params	src/mem/mem_object.hh	/^    typedef MemObjectParams Params;$/;"	t	class:MemObject
Params	src/mem/ruby/network/BasicLink.hh	/^    typedef BasicExtLinkParams Params;$/;"	t	class:BasicExtLink
Params	src/mem/ruby/network/BasicLink.hh	/^    typedef BasicIntLinkParams Params;$/;"	t	class:BasicIntLink
Params	src/mem/ruby/network/BasicLink.hh	/^    typedef BasicLinkParams Params;$/;"	t	class:BasicLink
Params	src/mem/ruby/network/BasicRouter.hh	/^    typedef BasicRouterParams Params;$/;"	t	class:BasicRouter
Params	src/mem/ruby/network/Network.hh	/^    typedef RubyNetworkParams Params;$/;"	t	class:Network
Params	src/mem/ruby/network/fault_model/FaultModel.hh	/^    typedef FaultModelParams Params;$/;"	t	class:FaultModel
Params	src/mem/ruby/network/garnet/BaseGarnetNetwork.hh	/^    typedef BaseGarnetNetworkParams Params;$/;"	t	class:BaseGarnetNetwork
Params	src/mem/ruby/network/garnet/fixed-pipeline/CreditLink_d.hh	/^    typedef CreditLink_dParams Params;$/;"	t	class:CreditLink_d
Params	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.hh	/^    typedef GarnetExtLink_dParams Params;$/;"	t	class:GarnetExtLink_d
Params	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.hh	/^    typedef GarnetIntLink_dParams Params;$/;"	t	class:GarnetIntLink_d
Params	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.hh	/^    typedef GarnetNetwork_dParams Params;$/;"	t	class:GarnetNetwork_d
Params	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.hh	/^    typedef GarnetNetworkInterface_dParams Params;$/;"	t	class:NetworkInterface_d
Params	src/mem/ruby/network/garnet/fixed-pipeline/NetworkLink_d.hh	/^    typedef NetworkLink_dParams Params;$/;"	t	class:NetworkLink_d
Params	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    typedef GarnetRouter_dParams Params;$/;"	t	class:Router_d
Params	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.hh	/^    typedef GarnetExtLinkParams Params;$/;"	t	class:GarnetExtLink
Params	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.hh	/^    typedef GarnetIntLinkParams Params;$/;"	t	class:GarnetIntLink
Params	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.hh	/^    typedef GarnetNetworkParams Params;$/;"	t	class:GarnetNetwork
Params	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.hh	/^    typedef GarnetNetworkInterfaceParams Params;$/;"	t	class:NetworkInterface
Params	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.hh	/^    typedef NetworkLinkParams Params;$/;"	t	class:NetworkLink
Params	src/mem/ruby/network/garnet/flexible-pipeline/Router.hh	/^    typedef GarnetRouterParams Params;$/;"	t	class:Router
Params	src/mem/ruby/network/simple/SimpleLink.hh	/^    typedef SimpleExtLinkParams Params;$/;"	t	class:SimpleExtLink
Params	src/mem/ruby/network/simple/SimpleLink.hh	/^    typedef SimpleIntLinkParams Params;$/;"	t	class:SimpleIntLink
Params	src/mem/ruby/network/simple/SimpleNetwork.hh	/^    typedef SimpleNetworkParams Params;$/;"	t	class:SimpleNetwork
Params	src/mem/ruby/network/simple/Switch.hh	/^    typedef SwitchParams Params;$/;"	t	class:Switch
Params	src/mem/ruby/slicc_interface/AbstractController.hh	/^    typedef RubyControllerParams Params;$/;"	t	class:AbstractController
Params	src/mem/ruby/structures/Prefetcher.hh	/^        typedef PrefetcherParams Params;$/;"	t	class:Prefetcher
Params	src/mem/ruby/system/CacheMemory.hh	/^    typedef RubyCacheParams Params;$/;"	t	class:CacheMemory
Params	src/mem/ruby/system/DMASequencer.hh	/^    typedef DMASequencerParams Params;$/;"	t	class:DMASequencer
Params	src/mem/ruby/system/DirectoryMemory.hh	/^    typedef RubyDirectoryMemoryParams Params;$/;"	t	class:DirectoryMemory
Params	src/mem/ruby/system/MemoryControl.hh	/^    typedef MemoryControlParams Params;$/;"	t	class:MemoryControl
Params	src/mem/ruby/system/RubyMemoryControl.hh	/^    typedef RubyMemoryControlParams Params;$/;"	t	class:RubyMemoryControl
Params	src/mem/ruby/system/RubyPort.hh	/^    typedef RubyPortParams Params;$/;"	t	class:RubyPort
Params	src/mem/ruby/system/Sequencer.hh	/^    typedef RubySequencerParams Params;$/;"	t	class:Sequencer
Params	src/mem/ruby/system/System.hh	/^    typedef RubySystemParams Params;$/;"	t	class:RubySystem
Params	src/mem/ruby/system/WireBuffer.hh	/^    typedef RubyWireBufferParams Params;$/;"	t	class:WireBuffer
Params	src/sim/clock_domain.hh	/^    typedef ClockDomainParams Params;$/;"	t	class:ClockDomain
Params	src/sim/clock_domain.hh	/^    typedef DerivedClockDomainParams Params;$/;"	t	class:DerivedClockDomain
Params	src/sim/clock_domain.hh	/^    typedef SrcClockDomainParams Params;$/;"	t	class:SrcClockDomain
Params	src/sim/root.hh	/^    typedef RootParams Params;$/;"	t	class:Root
Params	src/sim/sim_object.hh	/^    typedef SimObjectParams Params;$/;"	t	class:SimObject
Params	src/sim/system.hh	/^    typedef SystemParams Params;$/;"	t	class:System
Params	src/sim/voltage_domain.hh	/^    typedef VoltageDomainParams Params;$/;"	t	class:VoltageDomain
Parent	src/python/m5/proxy.py	/^Parent = ProxyFactory(search_self = False, search_up = True)$/;"	v
ParseError	src/mem/slicc/parser.py	/^from m5.util.grammar import Grammar, ParseError$/;"	i
ParseError	src/python/m5/util/grammar.py	/^class ParseError(Exception):$/;"	c
Partitioned	src/cpu/o3/inst_queue.hh	/^        Partitioned,$/;"	e	enum:InstructionQueue::IQPolicy
Partitioned	src/cpu/o3/lsq.hh	/^        Partitioned,$/;"	e	enum:LSQ::LSQPolicy
Partitioned	src/cpu/o3/rob.hh	/^        Partitioned,$/;"	e	enum:ROB::ROBPolicy
PauseControlStatusRegister	src/dev/ns_gige_reg.h	/^enum PauseControlStatusRegister {$/;"	g
Pc	src/dev/x86/Pc.py	/^class Pc(Platform):$/;"	c
Pc	src/dev/x86/pc.cc	/^Pc::Pc(const Params *p)$/;"	f	class:Pc
Pc	src/dev/x86/pc.hh	/^class Pc : public Platform$/;"	c
PcPAL	src/arch/alpha/utility.hh	/^inline bool PcPAL(Addr addr) { return addr & 0x3; }$/;"	f	namespace:AlphaISA
PcSpeaker	src/dev/x86/PcSpeaker.py	/^class PcSpeaker(BasicPioDevice):$/;"	c
PcSpeaker	src/dev/x86/SouthBridge.py	/^from PcSpeaker import PcSpeaker$/;"	i
PciConfigAll	src/dev/Pci.py	/^class PciConfigAll(BasicPioDevice):$/;"	c
PciConfigAll	src/dev/alpha/Tsunami.py	/^from Pci import PciConfigAll$/;"	i
PciConfigAll	src/dev/arm/RealView.py	/^from Pci import PciConfigAll$/;"	i
PciConfigAll	src/dev/mips/Malta.py	/^from Pci import PciConfigAll$/;"	i
PciConfigAll	src/dev/pciconfigall.cc	/^PciConfigAll::PciConfigAll(const Params *p)$/;"	f	class:PciConfigAll
PciConfigAll	src/dev/pciconfigall.hh	/^class PciConfigAll : public BasicPioDevice$/;"	c
PciConfigAll	src/dev/x86/Pc.py	/^from Pci import PciConfigAll$/;"	i
PciConfigPort	src/dev/pcidev.cc	/^PciDevice::PciConfigPort::PciConfigPort(PciDevice *dev, int busid, int devid,$/;"	f	class:PciDevice::PciConfigPort
PciConfigPort	src/dev/pcidev.hh	/^    class PciConfigPort : public SimpleTimingPort$/;"	c	class:PciDevice
PciCtl	src/dev/arm/rv_ctrl.hh	/^        PciCtl     = 0x44,$/;"	e	enum:RealViewCtrl::__anon67
PciDevice	src/dev/CopyEngine.py	/^from Pci import PciDevice$/;"	i
PciDevice	src/dev/Ethernet.py	/^from Pci import PciDevice$/;"	i
PciDevice	src/dev/Ide.py	/^from Pci import PciDevice$/;"	i
PciDevice	src/dev/Pci.py	/^class PciDevice(DmaDevice):$/;"	c
PciDevice	src/dev/pcidev.cc	/^PciDevice::PciDevice(const Params *p)$/;"	f	class:PciDevice
PciDevice	src/dev/pcidev.hh	/^class PciDevice : public DmaDevice$/;"	c
PeekStatementAST	src/mem/slicc/ast/PeekStatementAST.py	/^class PeekStatementAST(StatementAST):$/;"	c
Percent	src/python/m5/params.py	/^class Percent(CheckedInt):  cxx_type = 'int'; min = 0; max = 100$/;"	c
PerfKvmCounter	src/cpu/kvm/perfevent.cc	/^PerfKvmCounter::PerfKvmCounter()$/;"	f	class:PerfKvmCounter
PerfKvmCounter	src/cpu/kvm/perfevent.cc	/^PerfKvmCounter::PerfKvmCounter(PerfKvmCounterConfig &config, pid_t tid)$/;"	f	class:PerfKvmCounter
PerfKvmCounter	src/cpu/kvm/perfevent.cc	/^PerfKvmCounter::PerfKvmCounter(PerfKvmCounterConfig &config,$/;"	f	class:PerfKvmCounter
PerfKvmCounter	src/cpu/kvm/perfevent.hh	/^class PerfKvmCounter$/;"	c
PerfKvmCounterConfig	src/cpu/kvm/perfevent.cc	/^PerfKvmCounterConfig::PerfKvmCounterConfig(uint32_t type, uint64_t config)$/;"	f	class:PerfKvmCounterConfig
PerfKvmCounterConfig	src/cpu/kvm/perfevent.hh	/^class PerfKvmCounterConfig$/;"	c
PerfKvmTimer	src/cpu/kvm/timer.cc	/^PerfKvmTimer::PerfKvmTimer(PerfKvmCounter &ctr,$/;"	f	class:PerfKvmTimer
PerfKvmTimer	src/cpu/kvm/timer.hh	/^class PerfKvmTimer : public BaseKvmTimer$/;"	c
PerfectCacheLineState	src/mem/ruby/system/PerfectCacheMemory.hh	/^    PerfectCacheLineState() { m_permission = AccessPermission_NUM; }$/;"	f	struct:PerfectCacheLineState
PerfectCacheLineState	src/mem/ruby/system/PerfectCacheMemory.hh	/^struct PerfectCacheLineState$/;"	s
PerfectCacheMemory	src/mem/ruby/system/PerfectCacheMemory.hh	/^PerfectCacheMemory<ENTRY>::PerfectCacheMemory()$/;"	f	class:PerfectCacheMemory
PerfectCacheMemory	src/mem/ruby/system/PerfectCacheMemory.hh	/^class PerfectCacheMemory$/;"	c
PerfectSwitch	src/mem/ruby/network/simple/PerfectSwitch.cc	/^PerfectSwitch::PerfectSwitch(SwitchID sid, Switch *sw, uint32_t virt_nets)$/;"	f	class:PerfectSwitch
PerfectSwitch	src/mem/ruby/network/simple/PerfectSwitch.hh	/^class PerfectSwitch : public Consumer$/;"	c
PermissionLL	src/arch/arm/faults.hh	/^        PermissionLL = DomainLL + 4,$/;"	e	enum:ArmISA::ArmFault::FaultSource
PersistentTable	src/mem/ruby/system/PersistentTable.cc	/^PersistentTable::PersistentTable()$/;"	f	class:PersistentTable
PersistentTable	src/mem/ruby/system/PersistentTable.hh	/^class PersistentTable$/;"	c
PersistentTableEntry	src/mem/ruby/system/PersistentTable.hh	/^    PersistentTableEntry() {}$/;"	f	class:PersistentTableEntry
PersistentTableEntry	src/mem/ruby/system/PersistentTable.hh	/^class PersistentTableEntry$/;"	c
Phys2K0Seg	src/arch/alpha/ev5.hh	/^Phys2K0Seg(Addr addr)$/;"	f	namespace:AlphaISA
Phys2K0Seg	src/arch/mips/isa_traits.hh	/^inline Addr Phys2K0Seg(Addr addr)$/;"	f	namespace:MipsISA
PhysAddrAPICRangeSize	src/arch/x86/x86_traits.hh	/^    const Addr PhysAddrAPICRangeSize = 1 << 12;$/;"	m	namespace:X86ISA
PhysAddrPrefixIO	src/arch/x86/x86_traits.hh	/^    const Addr PhysAddrPrefixIO = ULL(0x8000000000000000);$/;"	m	namespace:X86ISA
PhysAddrPrefixInterrupts	src/arch/x86/x86_traits.hh	/^    const Addr PhysAddrPrefixInterrupts = ULL(0xA000000000000000);$/;"	m	namespace:X86ISA
PhysAddrPrefixLocalAPIC	src/arch/x86/x86_traits.hh	/^    const Addr PhysAddrPrefixLocalAPIC = ULL(0x2000000000000000);$/;"	m	namespace:X86ISA
PhysAddrPrefixPciConfig	src/arch/x86/x86_traits.hh	/^    const Addr PhysAddrPrefixPciConfig = ULL(0xC000000000000000);$/;"	m	namespace:X86ISA
PhysAddress	src/mem/ruby/common/Address.hh	/^typedef Address PhysAddress;$/;"	t
PhysFloatReg	src/cpu/o3/regfile.hh	/^    } PhysFloatReg;$/;"	t	class:PhysRegFile	typeref:union:PhysRegFile::__anon58
PhysRegFile	src/cpu/o3/regfile.cc	/^PhysRegFile::PhysRegFile(unsigned _numPhysicalIntRegs,$/;"	f	class:PhysRegFile
PhysRegFile	src/cpu/o3/regfile.hh	/^class PhysRegFile$/;"	c
PhysRegIndex	src/cpu/inorder/inorder_dyn_inst.hh	/^    typedef short int PhysRegIndex;$/;"	t	class:InOrderDynInst
PhysRegIndex	src/cpu/o3/comm.hh	/^typedef short int PhysRegIndex;$/;"	t
PhysicalMemory	src/mem/physical.cc	/^PhysicalMemory::PhysicalMemory(const string& _name,$/;"	f	class:PhysicalMemory
PhysicalMemory	src/mem/physical.hh	/^class PhysicalMemory : public Serializable$/;"	c
PioDevice	src/dev/Device.py	/^class PioDevice(MemObject):$/;"	c
PioDevice	src/dev/Pci.py	/^from Device import BasicPioDevice, DmaDevice, PioDevice$/;"	i
PioDevice	src/dev/arm/Gic.py	/^from Device import PioDevice$/;"	i
PioDevice	src/dev/arm/RealView.py	/^from Device import BasicPioDevice, PioDevice, IsaFake, BadAddr, DmaDevice$/;"	i
PioDevice	src/dev/io_device.cc	/^PioDevice::PioDevice(const Params *p)$/;"	f	class:PioDevice
PioDevice	src/dev/io_device.hh	/^class PioDevice : public MemObject$/;"	c
PioDevice	src/dev/sparc/T1000.py	/^from Device import BasicPioDevice, PioDevice, IsaFake, BadAddr$/;"	i
PioMasterPort	src/mem/ruby/system/RubyPort.cc	/^RubyPort::PioMasterPort::PioMasterPort(const std::string &_name,$/;"	f	class:RubyPort::PioMasterPort
PioMasterPort	src/mem/ruby/system/RubyPort.hh	/^    class PioMasterPort : public QueuedMasterPort$/;"	c	class:RubyPort
PioPort	src/dev/io_device.cc	/^PioPort::PioPort(PioDevice *dev)$/;"	f	class:PioPort
PioPort	src/dev/io_device.hh	/^class PioPort : public SimpleTimingPort$/;"	c
PioSlavePort	src/mem/ruby/system/RubyPort.cc	/^RubyPort::PioSlavePort::PioSlavePort(const std::string &_name,$/;"	f	class:RubyPort::PioSlavePort
PioSlavePort	src/mem/ruby/system/RubyPort.hh	/^    class PioSlavePort : public QueuedSlavePort$/;"	c	class:RubyPort
PipelineStage	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::PipelineStage(Params *params, unsigned stage_num)$/;"	f	class:PipelineStage
PipelineStage	src/cpu/inorder/pipeline_stage.hh	/^class PipelineStage$/;"	c
PixelEncodingsMessage	src/base/vnc/vncinput.hh	/^    struct PixelEncodingsMessage {$/;"	s	class:VncInput
PixelFormat	src/base/vnc/vncinput.hh	/^    struct PixelFormat {$/;"	s	class:VncInput
PixelFormatMessage	src/base/vnc/vncinput.hh	/^    struct PixelFormatMessage {$/;"	s	class:VncInput
Pixel_Format	src/dev/arm/hdlcd.hh	/^        Pixel_Format     = 0x0240,$/;"	e	enum:HDLcd::RegisterOffset
Pl011	src/dev/arm/RealView.py	/^class Pl011(Uart):$/;"	c
Pl011	src/dev/arm/pl011.cc	/^Pl011::Pl011(const Params *p)$/;"	f	class:Pl011
Pl011	src/dev/arm/pl011.hh	/^class Pl011 : public Uart, public AmbaDevice$/;"	c
Pl050	src/dev/arm/RealView.py	/^class Pl050(AmbaIntDevice):$/;"	c
Pl050	src/dev/arm/kmi.cc	/^Pl050::Pl050(const Params *p)$/;"	f	class:Pl050
Pl050	src/dev/arm/kmi.hh	/^class Pl050 : public AmbaIntDevice, public VncKeyboard, public VncMouse$/;"	c
Pl111	src/dev/arm/RealView.py	/^class Pl111(AmbaDmaDevice):$/;"	c
Pl111	src/dev/arm/pl111.cc	/^Pl111::Pl111(const Params *p)$/;"	f	class:Pl111
Pl111	src/dev/arm/pl111.hh	/^class Pl111: public AmbaDmaDevice$/;"	c
Pl390	src/dev/arm/Gic.py	/^class Pl390(BaseGic):$/;"	c
Pl390	src/dev/arm/gic_pl390.cc	/^Pl390::Pl390(const Params *p)$/;"	f	class:Pl390
Pl390	src/dev/arm/gic_pl390.hh	/^class Pl390 : public BaseGic$/;"	c
Planes	src/base/bitmap.hh	/^        uint16_t Planes;$/;"	m	struct:Bitmap::Info
Platform	src/dev/Platform.py	/^class Platform(SimObject):$/;"	c
Platform	src/dev/alpha/Tsunami.py	/^from Platform import Platform$/;"	i
Platform	src/dev/arm/Gic.py	/^from Platform import Platform$/;"	i
Platform	src/dev/arm/RealView.py	/^from Platform import Platform$/;"	i
Platform	src/dev/mips/Malta.py	/^from Platform import Platform$/;"	i
Platform	src/dev/platform.cc	/^Platform::Platform(const Params *p)$/;"	f	class:Platform
Platform	src/dev/platform.hh	/^class Platform : public SimObject$/;"	c
Platform	src/dev/sparc/T1000.py	/^from Platform import Platform$/;"	i
Platform	src/dev/x86/Pc.py	/^from Platform import Platform$/;"	i
Pointer	src/arch/x86/decoder_tables.cc	/^        Pointer,$/;"	e	enum:X86ISA::SizeType	file:
PointerEventMessage	src/base/vnc/vncinput.hh	/^    struct PointerEventMessage {$/;"	s	class:VncInput
Polarities	src/dev/arm/hdlcd.hh	/^        Polarities       = 0x0220,$/;"	e	enum:HDLcd::RegisterOffset
PollEvent	src/base/pollevent.cc	/^PollEvent::PollEvent(int _fd, int _events)$/;"	f	class:PollEvent
PollEvent	src/base/pollevent.hh	/^class PollEvent$/;"	c
PollQueue	src/base/pollevent.cc	/^PollQueue::PollQueue()$/;"	f	class:PollQueue
PollQueue	src/base/pollevent.hh	/^class PollQueue$/;"	c
Popen	src/python/m5/util/__init__.py	/^    from subprocess import Popen, PIPE, STDOUT$/;"	i
Port	src/mem/port.cc	/^Port::Port(const std::string &_name, MemObject& _owner, PortID _id)$/;"	f	class:Port
Port	src/mem/port.hh	/^class Port$/;"	c
Port	src/python/m5/SimObject.py	/^     isNullPointer, SimObjectVector, Port$/;"	i
Port	src/python/m5/params.py	/^class Port(object):$/;"	c
PortCache	src/mem/bus.hh	/^    struct PortCache {$/;"	s	class:BaseBus
PortID	src/base/types.hh	/^typedef int16_t PortID;$/;"	t
PortMapConstIter	src/mem/bus.hh	/^    typedef AddrRangeMap<PortID>::const_iterator PortMapConstIter;$/;"	t	class:BaseBus
PortMapIter	src/mem/bus.hh	/^    typedef AddrRangeMap<PortID>::iterator PortMapIter;$/;"	t	class:BaseBus
PortParamDesc	src/python/m5/params.py	/^class PortParamDesc(object):$/;"	c
PortProxy	src/mem/port_proxy.hh	/^    PortProxy(MasterPort &port, unsigned int cacheLineSize) :$/;"	f	class:PortProxy
PortProxy	src/mem/port_proxy.hh	/^class PortProxy$/;"	c
PortRef	src/python/m5/params.py	/^class PortRef(object):$/;"	c
PosixKvmTimer	src/cpu/kvm/timer.cc	/^PosixKvmTimer::PosixKvmTimer(int signo, clockid_t clockID,$/;"	f	class:PosixKvmTimer
PosixKvmTimer	src/cpu/kvm/timer.hh	/^class PosixKvmTimer : public BaseKvmTimer$/;"	c
PossibleLoadViolation	src/cpu/base_dyn_inst.hh	/^        PossibleLoadViolation,$/;"	e	enum:BaseDynInst::Flags
PostIntEvent	src/dev/arm/gic_pl390.hh	/^        PostIntEvent( uint32_t c, Platform* p)$/;"	f	class:Pl390::PostIntEvent
PostIntEvent	src/dev/arm/gic_pl390.hh	/^    class PostIntEvent : public Event$/;"	c	class:Pl390
PostVIntEvent	src/dev/arm/vgic.hh	/^        PostVIntEvent( uint32_t c, Platform* p)$/;"	f	class:VGic::PostVIntEvent
PostVIntEvent	src/dev/arm/vgic.hh	/^    class PostVIntEvent : public Event$/;"	c	class:VGic
Power	src/base/loader/object_file.hh	/^        Power$/;"	e	enum:ObjectFile::Arch
PowerFault	src/arch/power/faults.hh	/^    PowerFault(FaultName name)$/;"	f	class:PowerISA::PowerFault
PowerFault	src/arch/power/faults.hh	/^class PowerFault : public FaultBase$/;"	c	namespace:PowerISA
PowerISA	src/arch/power/PowerISA.py	/^class PowerISA(SimObject):$/;"	c
PowerISA	src/arch/power/decoder.cc	/^namespace PowerISA$/;"	n	file:
PowerISA	src/arch/power/decoder.hh	/^namespace PowerISA$/;"	n
PowerISA	src/arch/power/faults.hh	/^namespace PowerISA$/;"	n
PowerISA	src/arch/power/insts/branch.hh	/^namespace PowerISA$/;"	n
PowerISA	src/arch/power/insts/condition.hh	/^namespace PowerISA$/;"	n
PowerISA	src/arch/power/insts/floating.hh	/^namespace PowerISA$/;"	n
PowerISA	src/arch/power/insts/integer.hh	/^namespace PowerISA$/;"	n
PowerISA	src/arch/power/insts/mem.hh	/^namespace PowerISA$/;"	n
PowerISA	src/arch/power/insts/misc.hh	/^namespace PowerISA$/;"	n
PowerISA	src/arch/power/insts/static_inst.hh	/^namespace PowerISA$/;"	n
PowerISA	src/arch/power/interrupts.hh	/^namespace PowerISA {$/;"	n
PowerISA	src/arch/power/isa.cc	/^namespace PowerISA$/;"	n	file:
PowerISA	src/arch/power/isa.hh	/^namespace PowerISA$/;"	n
PowerISA	src/arch/power/isa_traits.hh	/^namespace PowerISA$/;"	n
PowerISA	src/arch/power/kernel_stats.hh	/^namespace PowerISA {$/;"	n
PowerISA	src/arch/power/locked_mem.hh	/^namespace PowerISA$/;"	n
PowerISA	src/arch/power/microcode_rom.hh	/^namespace PowerISA$/;"	n
PowerISA	src/arch/power/miscregs.hh	/^namespace PowerISA$/;"	n
PowerISA	src/arch/power/mmapped_ipr.hh	/^namespace PowerISA$/;"	n
PowerISA	src/arch/power/pagetable.cc	/^namespace PowerISA$/;"	n	file:
PowerISA	src/arch/power/pagetable.hh	/^namespace PowerISA {$/;"	n
PowerISA	src/arch/power/registers.hh	/^namespace PowerISA {$/;"	n
PowerISA	src/arch/power/remote_gdb.hh	/^namespace PowerISA$/;"	n
PowerISA	src/arch/power/stacktrace.cc	/^namespace PowerISA {$/;"	n	file:
PowerISA	src/arch/power/stacktrace.hh	/^namespace PowerISA$/;"	n
PowerISA	src/arch/power/tlb.hh	/^namespace PowerISA {$/;"	n
PowerISA	src/arch/power/types.hh	/^namespace PowerISA$/;"	n
PowerISA	src/arch/power/utility.cc	/^namespace PowerISA {$/;"	n	file:
PowerISA	src/arch/power/utility.hh	/^namespace PowerISA {$/;"	n
PowerISA	src/arch/power/vtophys.hh	/^namespace PowerISA {$/;"	n
PowerISA	src/cpu/BaseCPU.py	/^    from PowerISA import PowerISA$/;"	i
PowerInterrupts	src/arch/power/PowerInterrupts.py	/^class PowerInterrupts(SimObject):$/;"	c
PowerInterrupts	src/cpu/BaseCPU.py	/^    from PowerInterrupts import PowerInterrupts$/;"	i
PowerLinux	src/arch/power/linux/linux.hh	/^class PowerLinux : public Linux$/;"	c
PowerLinuxProcess	src/arch/power/linux/process.cc	/^PowerLinuxProcess::PowerLinuxProcess(LiveProcessParams * params,$/;"	f	class:PowerLinuxProcess
PowerLinuxProcess	src/arch/power/linux/process.hh	/^class PowerLinuxProcess : public PowerLiveProcess$/;"	c
PowerLiveProcess	src/arch/power/process.cc	/^PowerLiveProcess::PowerLiveProcess(LiveProcessParams *params,$/;"	f	class:PowerLiveProcess
PowerLiveProcess	src/arch/power/process.hh	/^class PowerLiveProcess : public LiveProcess$/;"	c
PowerOnReset	src/arch/sparc/faults.hh	/^class PowerOnReset : public SparcFault<PowerOnReset>$/;"	c	namespace:SparcISA
PowerStaticInst	src/arch/power/insts/static_inst.hh	/^    PowerStaticInst(const char *mnem, MachInst _machInst, OpClass __opClass)$/;"	f	class:PowerISA::PowerStaticInst
PowerStaticInst	src/arch/power/insts/static_inst.hh	/^class PowerStaticInst : public StaticInst$/;"	c	namespace:PowerISA
PowerTLB	src/arch/power/PowerTLB.py	/^class PowerTLB(SimObject):$/;"	c
PowerTLB	src/cpu/BaseCPU.py	/^    from PowerTLB import PowerTLB$/;"	i
PrdEntry	src/dev/ide_disk.hh	/^typedef struct PrdEntry {$/;"	s
PrdEntry_t	src/dev/ide_disk.hh	/^} PrdEntry_t;$/;"	t	typeref:struct:PrdEntry
PrdRead	src/dev/ide_disk.hh	/^    PrdRead,$/;"	e	enum:Events
PrdTableEntry	src/dev/ide_disk.hh	/^class PrdTableEntry {$/;"	c
PrechargeModel	src/mem/ruby/network/orion/Buffer/PrechargeUnit.hh	/^    enum PrechargeModel$/;"	g	class:PrechargeUnit
PrechargeUnit	src/mem/ruby/network/orion/Buffer/PrechargeUnit.cc	/^PrechargeUnit::PrechargeUnit($/;"	f	class:PrechargeUnit
PrechargeUnit	src/mem/ruby/network/orion/Buffer/PrechargeUnit.hh	/^class PrechargeUnit$/;"	c
PredImmOp	src/arch/arm/insts/pred_inst.hh	/^    PredImmOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass) :$/;"	f	class:ArmISA::PredImmOp
PredImmOp	src/arch/arm/insts/pred_inst.hh	/^class PredImmOp : public PredOp$/;"	c	namespace:ArmISA
PredIntOp	src/arch/arm/insts/pred_inst.hh	/^    PredIntOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass) :$/;"	f	class:ArmISA::PredIntOp
PredIntOp	src/arch/arm/insts/pred_inst.hh	/^class PredIntOp : public PredOp$/;"	c	namespace:ArmISA
PredMacroOp	src/arch/arm/insts/pred_inst.hh	/^    PredMacroOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass) :$/;"	f	class:ArmISA::PredMacroOp
PredMacroOp	src/arch/arm/insts/pred_inst.hh	/^class PredMacroOp : public PredOp$/;"	c	namespace:ArmISA
PredMicroop	src/arch/arm/insts/pred_inst.hh	/^    PredMicroop(const char *mnem, ExtMachInst _machInst, OpClass __opClass) :$/;"	f	class:ArmISA::PredMicroop
PredMicroop	src/arch/arm/insts/pred_inst.hh	/^class PredMicroop : public PredOp$/;"	c	namespace:ArmISA
PredOp	src/arch/arm/insts/pred_inst.hh	/^    PredOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass) :$/;"	f	class:ArmISA::PredOp
PredOp	src/arch/arm/insts/pred_inst.hh	/^class PredOp : public ArmStaticInst$/;"	c	namespace:ArmISA
PredTaken	src/cpu/base_dyn_inst.hh	/^        PredTaken,$/;"	e	enum:BaseDynInst::Flags
Predicate	src/cpu/base_dyn_inst.hh	/^        Predicate,$/;"	e	enum:BaseDynInst::Flags
PredictBranch	src/cpu/inorder/resources/branch_predictor.hh	/^        PredictBranch,$/;"	e	enum:BranchPredictor::Command
PredictorHistory	src/cpu/pred/bpred_unit.hh	/^        PredictorHistory(const InstSeqNum &seq_num, Addr instPC,$/;"	f	struct:BPredUnit::PredictorHistory
PredictorHistory	src/cpu/pred/bpred_unit.hh	/^    struct PredictorHistory {$/;"	s	class:BPredUnit
PrefetchAbort	src/arch/arm/faults.hh	/^    PrefetchAbort(Addr _addr, uint8_t _source, bool _stage2 = false,$/;"	f	class:ArmISA::PrefetchAbort
PrefetchAbort	src/arch/arm/faults.hh	/^class PrefetchAbort : public AbortFault<PrefetchAbort>$/;"	c	namespace:ArmISA
PrefetchEntry	src/mem/ruby/structures/Prefetcher.hh	/^        PrefetchEntry()$/;"	f	class:PrefetchEntry
PrefetchEntry	src/mem/ruby/structures/Prefetcher.hh	/^class PrefetchEntry$/;"	c
PrefetchTLBMiss	src/arch/arm/faults.hh	/^        PrefetchTLBMiss = AddressSizeLL + 4,$/;"	e	enum:ArmISA::ArmFault::FaultSource
PrefetchUncacheable	src/arch/arm/faults.hh	/^        PrefetchUncacheable,$/;"	e	enum:ArmISA::ArmFault::FaultSource
Prefetcher	src/mem/request.hh	/^        Prefetcher = 1022, \/* For cache lines brought in by prefetcher *\/$/;"	e	enum:ContextSwitchTaskId::TaskId
Prefetcher	src/mem/ruby/structures/Prefetcher.cc	/^Prefetcher::Prefetcher(const Params *p)$/;"	f	class:Prefetcher
Prefetcher	src/mem/ruby/structures/Prefetcher.hh	/^class Prefetcher : public SimObject$/;"	c
Prefetcher	src/mem/ruby/structures/RubyPrefetcher.py	/^class Prefetcher(SimObject):$/;"	c
PrefixOperatorExprAST	src/mem/slicc/ast/OperatorExprAST.py	/^class PrefixOperatorExprAST(ExprAST):$/;"	c
PrefixState	src/arch/x86/decoder.hh	/^        PrefixState,$/;"	e	enum:X86ISA::Decoder::State
Prefixes	src/arch/x86/decoder.hh	/^    static const uint8_t Prefixes[256];$/;"	m	class:X86ISA::Decoder
Prefixes	src/arch/x86/decoder_tables.cc	/^    const uint8_t Decoder::Prefixes[256] =$/;"	m	class:X86ISA::Decoder	file:
Prefixes	src/arch/x86/types.hh	/^    enum Prefixes {$/;"	g	namespace:X86ISA
Prepare_Data_Dma	src/dev/ide_disk.hh	/^    Prepare_Data_Dma,$/;"	e	enum:DevState
Prepare_Data_In	src/dev/ide_disk.hh	/^    Prepare_Data_In,$/;"	e	enum:DevState
Prepare_Data_Out	src/dev/ide_disk.hh	/^    Prepare_Data_Out,$/;"	e	enum:DevState
PreviousGlobalsOffset	src/arch/sparc/isa.hh	/^        PreviousGlobalsOffset = NextWindowOffset + NumWindowedRegs,$/;"	e	enum:SparcISA::ISA::InstIntRegOffsets
PreviousWindowOffset	src/arch/sparc/isa.hh	/^        PreviousWindowOffset = PreviousGlobalsOffset + NumGlobalRegs,$/;"	e	enum:SparcISA::ISA::InstIntRegOffsets
Primary	src/arch/sparc/tlb.hh	/^        Primary = 0,$/;"	e	enum:SparcISA::TLB::ContextType
PrimaryTiming	src/dev/ide_ctrl.cc	/^    PrimaryTiming = 0x40,$/;"	e	enum:ConfRegOffset	file:
Print	src/base/cprintf.cc	/^Print::Print(std::ostream &stream, const char *format)$/;"	f	class:cp::Print
Print	src/base/cprintf.cc	/^Print::Print(std::ostream &stream, const std::string &format)$/;"	f	class:cp::Print
Print	src/base/cprintf.hh	/^struct Print$/;"	s	namespace:cp
PrintReq	src/mem/packet.hh	/^        PrintReq,       \/\/ Print state matching address$/;"	e	enum:MemCmd::Command
PrintReqState	src/mem/packet.cc	/^Packet::PrintReqState::PrintReqState(ostream &_os, int _verbosity)$/;"	f	class:Packet::PrintReqState
PrintReqState	src/mem/packet.hh	/^    class PrintReqState : public SenderState$/;"	c	class:Packet
PrintThreadInfo	src/arch/alpha/linux/system.hh	/^        PrintThreadInfo(PCEventQueue *q, const std::string &desc, Addr addr)$/;"	f	struct:LinuxAlphaSystem::PrintThreadInfo
PrintThreadInfo	src/arch/alpha/linux/system.hh	/^    struct PrintThreadInfo : public PCEvent$/;"	s	class:LinuxAlphaSystem
PrintThreadInfo	src/arch/mips/linux/system.hh	/^        PrintThreadInfo(PCEventQueue *q, const std::string &desc, Addr addr)$/;"	f	class:LinuxMipsSystem::PrintThreadInfo
PrintThreadInfo	src/arch/mips/linux/system.hh	/^    class PrintThreadInfo : public PCEvent$/;"	c	class:LinuxMipsSystem
Printable	src/base/printable.hh	/^    Printable() {}$/;"	f	class:Printable
Printable	src/base/printable.hh	/^class Printable$/;"	c
Printf	src/kern/tru64/printf.cc	/^Printf(Arguments args)$/;"	f	namespace:tru64
PrintfEvent	src/kern/tru64/tru64_events.hh	/^    PrintfEvent(PCEventQueue *q, const std::string &desc, Addr addr)$/;"	f	class:PrintfEvent
PrintfEvent	src/kern/tru64/tru64_events.hh	/^class PrintfEvent : public PCEvent$/;"	c
Printk	src/kern/linux/printk.cc	/^Printk(stringstream &out, Arguments args)$/;"	f
Priority	src/dev/arm/vgic.hh	/^    Bitfield<27,23> Priority;$/;"	m	class:VGic
Priority	src/sim/eventq.hh	/^    typedef int8_t Priority;$/;"	t	class:EventBase
PrivViolation	src/arch/sparc/tlb.hh	/^        PrivViolation = 0x1,$/;"	e	enum:SparcISA::TLB::FaultTypes
PrivateFlags	src/mem/request.hh	/^    typedef ::Flags<PrivateFlagsType> PrivateFlags;$/;"	t	class:Request
PrivateFlagsType	src/mem/request.hh	/^    typedef uint8_t PrivateFlagsType;$/;"	t	class:Request
PrivilegeLevel	src/arch/sparc/faults.hh	/^    enum PrivilegeLevel$/;"	g	class:SparcISA::SparcFaultBase
Privileged	src/arch/sparc/faults.hh	/^        P, Privileged = P,$/;"	e	enum:SparcISA::SparcFaultBase::PrivilegeLevel
PrivilegedAction	src/arch/sparc/faults.hh	/^class PrivilegedAction : public SparcFault<PrivilegedAction> {};$/;"	c	namespace:SparcISA
PrivilegedOpcode	src/arch/sparc/faults.hh	/^class PrivilegedOpcode : public SparcFault<PrivilegedOpcode> {};$/;"	c	namespace:SparcISA
ProbeListener	src/sim/probe/probe.cc	/^ProbeListener::ProbeListener(ProbeManager *manager, const std::string &name)$/;"	f	class:ProbeListener
ProbeListener	src/sim/probe/probe.hh	/^class ProbeListener$/;"	c
ProbeListenerArg	src/sim/probe/probe.hh	/^    ProbeListenerArg(T *obj, const std::string &name, void (T::* func)(const Arg &))$/;"	f	class:ProbeListenerArg
ProbeListenerArg	src/sim/probe/probe.hh	/^class ProbeListenerArg : public ProbeListenerArgBase<Arg>$/;"	c
ProbeListenerArgBase	src/sim/probe/probe.hh	/^    ProbeListenerArgBase(ProbeManager *pm, const std::string &name)$/;"	f	class:ProbeListenerArgBase
ProbeListenerArgBase	src/sim/probe/probe.hh	/^class ProbeListenerArgBase : public ProbeListener$/;"	c
ProbeListenerObject	src/sim/probe/Probe.py	/^class ProbeListenerObject(SimObject):$/;"	c
ProbeListenerObject	src/sim/probe/probe.cc	/^ProbeListenerObject::ProbeListenerObject(const ProbeListenerObjectParams *params)$/;"	f	class:ProbeListenerObject
ProbeListenerObject	src/sim/probe/probe.hh	/^class ProbeListenerObject : public SimObject$/;"	c
ProbeManager	src/sim/probe/probe.hh	/^    ProbeManager(SimObject *obj)$/;"	f	class:ProbeManager
ProbeManager	src/sim/probe/probe.hh	/^class ProbeManager$/;"	c
ProbePoint	src/sim/probe/probe.cc	/^ProbePoint::ProbePoint(ProbeManager *manager, const std::string& _name)$/;"	f	class:ProbePoint
ProbePoint	src/sim/probe/probe.hh	/^class ProbePoint$/;"	c
ProbePointArg	src/sim/probe/probe.hh	/^    ProbePointArg(ProbeManager *manager, std::string name)$/;"	f	class:ProbePointArg
ProbePointArg	src/sim/probe/probe.hh	/^class ProbePointArg : public ProbePoint$/;"	c
ProcId0	src/dev/arm/rv_ctrl.hh	/^        ProcId0    = 0x84,$/;"	e	enum:RealViewCtrl::__anon67
ProcId1	src/dev/arm/rv_ctrl.hh	/^        ProcId1    = 0x88,$/;"	e	enum:RealViewCtrl::__anon67
ProcedureValueReg	src/arch/alpha/registers.hh	/^const RegIndex ProcedureValueReg = 27;$/;"	m	namespace:AlphaISA
Process	src/sim/Process.py	/^class Process(SimObject):$/;"	c
Process	src/sim/process.cc	/^Process::Process(ProcessParams * params)$/;"	f	class:Process
Process	src/sim/process.hh	/^class Process : public SimObject$/;"	c
ProcessInfo	src/arch/alpha/stacktrace.cc	/^ProcessInfo::ProcessInfo(ThreadContext *_tc)$/;"	f	class:AlphaISA::ProcessInfo
ProcessInfo	src/arch/alpha/stacktrace.hh	/^class ProcessInfo$/;"	c	namespace:AlphaISA
ProcessInfo	src/arch/arm/stacktrace.cc	/^    ProcessInfo::ProcessInfo(ThreadContext *_tc)$/;"	f	class:ArmISA::ProcessInfo
ProcessInfo	src/arch/arm/stacktrace.hh	/^class ProcessInfo$/;"	c	namespace:ArmISA
ProcessInfo	src/arch/mips/stacktrace.cc	/^ProcessInfo::ProcessInfo(ThreadContext *_tc) : tc(_tc)$/;"	f	class:ProcessInfo
ProcessInfo	src/arch/mips/stacktrace.hh	/^class ProcessInfo$/;"	c	namespace:MipsISA
ProcessInfo	src/arch/power/stacktrace.cc	/^ProcessInfo::ProcessInfo(ThreadContext *_tc)$/;"	f	class:PowerISA::ProcessInfo
ProcessInfo	src/arch/power/stacktrace.hh	/^class ProcessInfo$/;"	c	namespace:PowerISA
ProcessInfo	src/arch/x86/stacktrace.cc	/^    ProcessInfo::ProcessInfo(ThreadContext *_tc)$/;"	f	class:X86ISA::ProcessInfo
ProcessInfo	src/arch/x86/stacktrace.hh	/^    class ProcessInfo$/;"	c	namespace:X86ISA
Processor	src/arch/x86/bios/intelmp.cc	/^X86ISA::IntelMP::Processor::Processor(Params * p) : BaseConfigEntry(p, 0),$/;"	f	class:X86ISA::IntelMP::Processor
Processor	src/arch/x86/bios/intelmp.hh	/^class Processor : public BaseConfigEntry$/;"	c	namespace:X86ISA::IntelMP
ProfileEvent	src/cpu/base.cc	/^BaseCPU::ProfileEvent::ProfileEvent(BaseCPU *_cpu, Tick _interval)$/;"	f	class:BaseCPU::ProfileEvent
ProfileEvent	src/cpu/base.hh	/^    class ProfileEvent : public Event$/;"	c	class:BaseCPU
ProfileNode	src/cpu/profile.cc	/^ProfileNode::ProfileNode()$/;"	f	class:ProfileNode
ProfileNode	src/cpu/profile.hh	/^class ProfileNode$/;"	c
Profiler	src/mem/ruby/profiler/Profiler.cc	/^Profiler::Profiler(const RubySystemParams *p)$/;"	f	class:Profiler
Profiler	src/mem/ruby/profiler/Profiler.hh	/^class Profiler$/;"	c
ProgIF	src/dev/CopyEngine.py	/^    ProgIF = 0x00$/;"	v	class:CopyEngine
ProgIF	src/dev/Ethernet.py	/^    ProgIF = 0x00$/;"	v	class:IGbE
ProgIF	src/dev/Ethernet.py	/^    ProgIF = 0x00$/;"	v	class:NSGigE
ProgIF	src/dev/Ethernet.py	/^    ProgIF = 0x00$/;"	v	class:Sinic
ProgIF	src/dev/Ide.py	/^    ProgIF = 0x85$/;"	v	class:IdeController
ProgIF	src/dev/Pci.py	/^    ProgIF = Param.UInt8(0, "Programming Interface")$/;"	v	class:PciDevice
ProgressEvent	src/python/m5/event.py	/^class ProgressEvent(Event):$/;"	c
Progress_Event_Pri	src/sim/eventq.hh	/^    static const Priority Progress_Event_Pri =          95;$/;"	m	class:EventBase
ProtectedMode	src/arch/x86/types.hh	/^        ProtectedMode,$/;"	e	enum:X86ISA::X86SubMode
ProtoInputStream	src/proto/protoio.cc	/^ProtoInputStream::ProtoInputStream(const string& filename) :$/;"	f	class:ProtoInputStream
ProtoInputStream	src/proto/protoio.hh	/^class ProtoInputStream : public ProtoStream$/;"	c
ProtoOutputStream	src/proto/protoio.cc	/^ProtoOutputStream::ProtoOutputStream(const string& filename) :$/;"	f	class:ProtoOutputStream
ProtoOutputStream	src/proto/protoio.hh	/^class ProtoOutputStream : public ProtoStream$/;"	c
ProtoStream	src/proto/protoio.hh	/^    ProtoStream() {}$/;"	f	class:ProtoStream
ProtoStream	src/proto/protoio.hh	/^class ProtoStream$/;"	c
Protocol Description	src/mem/slicc/doc/tutorial.tex	/^\\section*{Protocol Description}$/;"	s
Proxy	src/base/statistics.hh	/^    typedef DistProxy<Derived> Proxy;$/;"	t	class:Stats::VectorDistBase
Proxy	src/base/statistics.hh	/^    typedef ScalarProxy<Derived> Proxy;$/;"	t	class:Stats::VectorBase
Proxy	src/base/statistics.hh	/^    typedef VectorProxy<Derived> Proxy;$/;"	t	class:Stats::Vector2dBase
ProxyFactory	src/python/m5/proxy.py	/^class ProxyFactory(object):$/;"	c
ProxyInfo	src/base/statistics.hh	/^class ProxyInfo : public ScalarInfo$/;"	c	namespace:Stats
ProxyThreadContext	src/cpu/thread_context.hh	/^    ProxyThreadContext(TC *actual_tc)$/;"	f	class:ProxyThreadContext
ProxyThreadContext	src/cpu/thread_context.hh	/^class ProxyThreadContext : public ThreadContext$/;"	c
Ps0	src/arch/sparc/tlb.hh	/^        Ps0,$/;"	e	enum:SparcISA::TLB::TsbPageSize
Ps1	src/arch/sparc/tlb.hh	/^        Ps1$/;"	e	enum:SparcISA::TLB::TsbPageSize
Ps2	src/dev/ps2.cc	/^namespace Ps2 {$/;"	n	file:
Ps2	src/dev/ps2.hh	/^namespace Ps2 {$/;"	n
Ps2Reset	src/dev/ps2.hh	/^    Ps2Reset        = 0xff,$/;"	e	enum:Ps2::__anon82
PseudoInst	src/sim/pseudo_inst.cc	/^namespace PseudoInst {$/;"	n	file:
PseudoInst	src/sim/pseudo_inst.hh	/^namespace PseudoInst {$/;"	n
PseudoLRUPolicy	src/mem/ruby/system/PseudoLRUPolicy.hh	/^PseudoLRUPolicy::PseudoLRUPolicy(Index num_sets, Index assoc)$/;"	f	class:PseudoLRUPolicy
PseudoLRUPolicy	src/mem/ruby/system/PseudoLRUPolicy.hh	/^class PseudoLRUPolicy : public AbstractReplacementPolicy$/;"	c
PstateMask	src/arch/sparc/isa.cc	/^static const PSTATE PstateMask = buildPstateMask();$/;"	m	namespace:SparcISA	file:
PteAddr	src/arch/alpha/utility.hh	/^inline Addr PteAddr(Addr a) { return (a & PteMask) << PteShift; }$/;"	f	namespace:AlphaISA
PteAddr	src/arch/arm/vtophys.hh	/^    inline Addr PteAddr(Addr a) { return (a & PteMask) << PteShift; }$/;"	f	namespace:ArmISA
PteAddr	src/arch/power/vtophys.hh	/^PteAddr(Addr a)$/;"	f	namespace:PowerISA
PteMask	src/arch/alpha/isa_traits.hh	/^const Addr PteMask = NPtePage - 1;$/;"	m	namespace:AlphaISA
PteMask	src/arch/arm/isa_traits.hh	/^    const Addr PteMask = NPtePage - 1;$/;"	m	namespace:ArmISA
PteMask	src/arch/mips/isa_traits.hh	/^const Addr PteMask = NPtePage - 1;$/;"	m	namespace:MipsISA
PteMask	src/arch/power/isa_traits.hh	/^const Addr PteMask = NPtePage - 1;$/;"	m	namespace:PowerISA
PteShift	src/arch/alpha/isa_traits.hh	/^const Addr PteShift = 3;$/;"	m	namespace:AlphaISA
PteShift	src/arch/arm/isa_traits.hh	/^    const Addr PteShift = 3;$/;"	m	namespace:ArmISA
PteShift	src/arch/mips/isa_traits.hh	/^const Addr PteShift = 3;$/;"	m	namespace:MipsISA
PteShift	src/arch/power/isa_traits.hh	/^const Addr PteShift = 3;$/;"	m	namespace:PowerISA
Ptr	src/unittest/refcnttest.cc	/^typedef RefCountingPtr<TestRC> Ptr;$/;"	t	namespace:__anon106	file:
PublicRead	src/sim/eventq.hh	/^    static const FlagsType PublicRead    = 0x003f; \/\/ public readable flags$/;"	m	class:EventBase
PublicWrite	src/sim/eventq.hh	/^    static const FlagsType PublicWrite   = 0x001d; \/\/ public writable flags$/;"	m	class:EventBase
PulseOutputBitBase	src/dev/x86/i8042.hh	/^        PulseOutputBitBase = 0xF0,$/;"	e	enum:X86ISA::I8042::Command
PyCC	src/sim/init.cc	/^#define PyCC(/;"	d	file:
PyObject	src/sim/init.hh	/^typedef _object PyObject;$/;"	t
PythonEvent	src/python/m5/event.py	/^from internal.event import PythonEvent, GlobalSimLoopExitEvent as SimExit$/;"	i
PythonEvent	src/python/swig/pyevent.cc	/^PythonEvent::PythonEvent(PyObject *obj, Priority priority)$/;"	f	class:PythonEvent
PythonEvent	src/python/swig/pyevent.hh	/^class PythonEvent : public Event$/;"	c
QW	src/arch/x86/decoder_tables.cc	/^        QW = QWordImm,$/;"	e	enum:X86ISA::SizeType	file:
QWordImm	src/arch/x86/decoder_tables.cc	/^        QWordImm,$/;"	e	enum:X86ISA::SizeType	file:
QueuedMasterPort	src/mem/qport.hh	/^    QueuedMasterPort(const std::string& name, MemObject* owner,$/;"	f	class:QueuedMasterPort
QueuedMasterPort	src/mem/qport.hh	/^class QueuedMasterPort : public MasterPort$/;"	c
QueuedSlavePort	src/mem/qport.hh	/^    QueuedSlavePort(const std::string& name, MemObject* owner,$/;"	f	class:QueuedSlavePort
QueuedSlavePort	src/mem/qport.hh	/^class QueuedSlavePort : public SlavePort$/;"	c
QuiescePending	src/cpu/o3/fetch.hh	/^        QuiescePending,$/;"	e	enum:DefaultFetch::ThreadStatus
QuiescePending	src/cpu/ozone/front_end.hh	/^        QuiescePending,$/;"	e	enum:FrontEnd::Status
R	src/arch/x86/regs/int.hh	/^        Bitfield<63,0> R;$/;"	m	namespace:X86ISA
RADV	src/dev/i8254xGBe_defs.hh	/^    struct RADV : public Reg<uint32_t> { \/\/ 0x282C RADV Register$/;"	s	struct:iGbReg::Regs
RAS	src/cpu/pred/bpred_unit.hh	/^    ReturnAddrStack *RAS;$/;"	m	class:BPredUnit
RASIncorrect	src/cpu/pred/bpred_unit.hh	/^    Stats::Scalar RASIncorrect;$/;"	m	class:BPredUnit
RASIndex	src/cpu/pred/bpred_unit.hh	/^        unsigned RASIndex;$/;"	m	struct:BPredUnit::PredictorHistory
RASSize	src/cpu/ozone/OzoneCPU.py	/^    RASSize = Param.Unsigned("RAS size")$/;"	v	class:DerivOzoneCPU
RASSize	src/cpu/ozone/SimpleOzoneCPU.py	/^    RASSize = Param.Unsigned("RAS size")$/;"	v	class:SimpleOzoneCPU
RASSize	src/cpu/ozone/simple_params.hh	/^    unsigned RASSize;$/;"	m	class:SimpleParams
RASSize	src/cpu/pred/BranchPredictor.py	/^    RASSize = Param.Unsigned(16, "RAS size")$/;"	v	class:BranchPredictor
RASTarget	src/cpu/pred/bpred_unit.hh	/^        TheISA::PCState RASTarget;$/;"	m	struct:BPredUnit::PredictorHistory
RAW_IPR_ALT_MODE	src/arch/alpha/ipr.hh	/^    RAW_IPR_ALT_MODE = 0x20c,       \/\/ alternate mode$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_ASTER	src/arch/alpha/ipr.hh	/^    RAW_IPR_ASTER = 0x10a,          \/\/ asynchronous system trap enable$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_ASTRR	src/arch/alpha/ipr.hh	/^    RAW_IPR_ASTRR = 0x109,          \/\/ asynchronous system trap request$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_CC	src/arch/alpha/ipr.hh	/^    RAW_IPR_CC = 0x20d,             \/\/ cycle counter$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_CC_CTL	src/arch/alpha/ipr.hh	/^    RAW_IPR_CC_CTL = 0x20e,         \/\/ cycle counter control$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_DC_FLUSH	src/arch/alpha/ipr.hh	/^    RAW_IPR_DC_FLUSH = 0x210,$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_DC_MODE	src/arch/alpha/ipr.hh	/^    RAW_IPR_DC_MODE = 0x216,        \/\/ Dcache mode$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_DC_PERR_STAT	src/arch/alpha/ipr.hh	/^    RAW_IPR_DC_PERR_STAT = 0x212,   \/\/ Dcache parity error status$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_DC_TEST_CTL	src/arch/alpha/ipr.hh	/^    RAW_IPR_DC_TEST_CTL = 0x213,    \/\/ Dcache test tag control$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_DC_TEST_TAG	src/arch/alpha/ipr.hh	/^    RAW_IPR_DC_TEST_TAG = 0x214,    \/\/ Dcache test tag$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_DC_TEST_TAG_TEMP	src/arch/alpha/ipr.hh	/^    RAW_IPR_DC_TEST_TAG_TEMP = 0x215, \/\/ Dcache test tag temporary$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_DTB_ASN	src/arch/alpha/ipr.hh	/^    RAW_IPR_DTB_ASN = 0x200,        \/\/ DTLB address space number$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_DTB_CM	src/arch/alpha/ipr.hh	/^    RAW_IPR_DTB_CM = 0x201,         \/\/ DTLB current mode$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_DTB_IA	src/arch/alpha/ipr.hh	/^    RAW_IPR_DTB_IA = 0x20a,         \/\/ DTLB invalidate all$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_DTB_IAP	src/arch/alpha/ipr.hh	/^    RAW_IPR_DTB_IAP = 0x209,        \/\/ DTLB invalidate all process$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_DTB_IS	src/arch/alpha/ipr.hh	/^    RAW_IPR_DTB_IS = 0x20b,         \/\/ DTLB invalidate single$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_DTB_PTE	src/arch/alpha/ipr.hh	/^    RAW_IPR_DTB_PTE = 0x203,        \/\/ DTLB page table entry$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_DTB_PTE_TEMP	src/arch/alpha/ipr.hh	/^    RAW_IPR_DTB_PTE_TEMP = 0x204,   \/\/ DTLB page table entry temporary$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_DTB_TAG	src/arch/alpha/ipr.hh	/^    RAW_IPR_DTB_TAG = 0x202,        \/\/ DTLB tag$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_EXC_ADDR	src/arch/alpha/ipr.hh	/^    RAW_IPR_EXC_ADDR = 0x10b,       \/\/ exception address$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_EXC_MASK	src/arch/alpha/ipr.hh	/^    RAW_IPR_EXC_MASK = 0x10d,       \/\/ exception mask$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_EXC_SUM	src/arch/alpha/ipr.hh	/^    RAW_IPR_EXC_SUM = 0x10c,        \/\/ exception summary$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_HWINT_CLR	src/arch/alpha/ipr.hh	/^    RAW_IPR_HWINT_CLR = 0x115,      \/\/ H\/W interrupt clear$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_ICM	src/arch/alpha/ipr.hh	/^    RAW_IPR_ICM = 0x10f,            \/\/ instruction current mode$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_ICSR	src/arch/alpha/ipr.hh	/^    RAW_IPR_ICSR = 0x118,           \/\/ instruction control and status$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_IC_FLUSH	src/arch/alpha/ipr.hh	/^    RAW_IPR_IC_FLUSH = 0x119,       \/\/ instruction cache flush control$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_IC_PERR_STAT	src/arch/alpha/ipr.hh	/^    RAW_IPR_IC_PERR_STAT = 0x11a,   \/\/ inst cache parity error status$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_IFAULT_VA_FORM	src/arch/alpha/ipr.hh	/^    RAW_IPR_IFAULT_VA_FORM = 0x112, \/\/ formatted faulting virtual addr$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_INTID	src/arch/alpha/ipr.hh	/^    RAW_IPR_INTID = 0x111,          \/\/ interrupt ID$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_IPLR	src/arch/alpha/ipr.hh	/^    RAW_IPR_IPLR = 0x110,           \/\/ interrupt priority level$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_ISR	src/arch/alpha/ipr.hh	/^    RAW_IPR_ISR = 0x100,            \/\/ interrupt summary$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_ITB_ASN	src/arch/alpha/ipr.hh	/^    RAW_IPR_ITB_ASN = 0x103,        \/\/ ITLB address space$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_ITB_IA	src/arch/alpha/ipr.hh	/^    RAW_IPR_ITB_IA = 0x105,         \/\/ ITLB invalidate all$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_ITB_IAP	src/arch/alpha/ipr.hh	/^    RAW_IPR_ITB_IAP = 0x106,        \/\/ ITLB invalidate all process$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_ITB_IS	src/arch/alpha/ipr.hh	/^    RAW_IPR_ITB_IS = 0x107,         \/\/ ITLB invalidate select$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_ITB_PTE	src/arch/alpha/ipr.hh	/^    RAW_IPR_ITB_PTE = 0x102,        \/\/ ITLB page table entry$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_ITB_PTE_TEMP	src/arch/alpha/ipr.hh	/^    RAW_IPR_ITB_PTE_TEMP = 0x104,   \/\/ ITLB page table entry temp$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_ITB_TAG	src/arch/alpha/ipr.hh	/^    RAW_IPR_ITB_TAG = 0x101,        \/\/ ITLB tag$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_IVPTBR	src/arch/alpha/ipr.hh	/^    RAW_IPR_IVPTBR = 0x113,         \/\/ virtual page table base$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_MAF_MODE	src/arch/alpha/ipr.hh	/^    RAW_IPR_MAF_MODE = 0x217,       \/\/ miss address file mode$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_MCSR	src/arch/alpha/ipr.hh	/^    RAW_IPR_MCSR = 0x20f,           \/\/ MTU control$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_MM_STAT	src/arch/alpha/ipr.hh	/^    RAW_IPR_MM_STAT = 0x205,        \/\/ data MMU fault status$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_MVPTBR	src/arch/alpha/ipr.hh	/^    RAW_IPR_MVPTBR = 0x208,         \/\/ MTU virtual page table base$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_PAL_BASE	src/arch/alpha/ipr.hh	/^    RAW_IPR_PAL_BASE = 0x10e,       \/\/ PAL base address$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_PALtemp0	src/arch/alpha/ipr.hh	/^    RAW_IPR_PALtemp0 = 0x140,       \/\/ local scratch$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_PALtemp1	src/arch/alpha/ipr.hh	/^    RAW_IPR_PALtemp1 = 0x141,       \/\/ local scratch$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_PALtemp10	src/arch/alpha/ipr.hh	/^    RAW_IPR_PALtemp10 = 0x14a,      \/\/ ??$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_PALtemp11	src/arch/alpha/ipr.hh	/^    RAW_IPR_PALtemp11 = 0x14b,      \/\/ entInt$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_PALtemp12	src/arch/alpha/ipr.hh	/^    RAW_IPR_PALtemp12 = 0x14c,      \/\/ entArith$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_PALtemp13	src/arch/alpha/ipr.hh	/^    RAW_IPR_PALtemp13 = 0x14d,      \/\/ reserved for platform specific PAL$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_PALtemp14	src/arch/alpha/ipr.hh	/^    RAW_IPR_PALtemp14 = 0x14e,      \/\/ reserved for platform specific PAL$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_PALtemp15	src/arch/alpha/ipr.hh	/^    RAW_IPR_PALtemp15 = 0x14f,      \/\/ reserved for platform specific PAL$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_PALtemp16	src/arch/alpha/ipr.hh	/^    RAW_IPR_PALtemp16 = 0x150,      \/\/ scratch \/ whami<7:0> \/ mces<4:0>$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_PALtemp17	src/arch/alpha/ipr.hh	/^    RAW_IPR_PALtemp17 = 0x151,      \/\/ sysval$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_PALtemp18	src/arch/alpha/ipr.hh	/^    RAW_IPR_PALtemp18 = 0x152,      \/\/ usp$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_PALtemp19	src/arch/alpha/ipr.hh	/^    RAW_IPR_PALtemp19 = 0x153,      \/\/ ksp$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_PALtemp2	src/arch/alpha/ipr.hh	/^    RAW_IPR_PALtemp2 = 0x142,       \/\/ entUna$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_PALtemp20	src/arch/alpha/ipr.hh	/^    RAW_IPR_PALtemp20 = 0x154,      \/\/ PTBR$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_PALtemp21	src/arch/alpha/ipr.hh	/^    RAW_IPR_PALtemp21 = 0x155,      \/\/ entMM$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_PALtemp22	src/arch/alpha/ipr.hh	/^    RAW_IPR_PALtemp22 = 0x156,      \/\/ kgp$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_PALtemp23	src/arch/alpha/ipr.hh	/^    RAW_IPR_PALtemp23 = 0x157,      \/\/ PCBB$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_PALtemp3	src/arch/alpha/ipr.hh	/^    RAW_IPR_PALtemp3 = 0x143,       \/\/ CPU specific impure area pointer$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_PALtemp4	src/arch/alpha/ipr.hh	/^    RAW_IPR_PALtemp4 = 0x144,       \/\/ memory management temp$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_PALtemp5	src/arch/alpha/ipr.hh	/^    RAW_IPR_PALtemp5 = 0x145,       \/\/ memory management temp$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_PALtemp6	src/arch/alpha/ipr.hh	/^    RAW_IPR_PALtemp6 = 0x146,       \/\/ memory management temp$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_PALtemp7	src/arch/alpha/ipr.hh	/^    RAW_IPR_PALtemp7 = 0x147,       \/\/ entIF$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_PALtemp8	src/arch/alpha/ipr.hh	/^    RAW_IPR_PALtemp8 = 0x148,       \/\/ intmask$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_PALtemp9	src/arch/alpha/ipr.hh	/^    RAW_IPR_PALtemp9 = 0x149,       \/\/ entSys$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_PMCTR	src/arch/alpha/ipr.hh	/^    RAW_IPR_PMCTR = 0x11c,          \/\/ performance counter$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_SIRR	src/arch/alpha/ipr.hh	/^    RAW_IPR_SIRR = 0x108,           \/\/ software interrupt request$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_SL_RCV	src/arch/alpha/ipr.hh	/^    RAW_IPR_SL_RCV = 0x117,         \/\/ serial line receive$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_SL_XMIT	src/arch/alpha/ipr.hh	/^    RAW_IPR_SL_XMIT = 0x116,        \/\/ serial line transmit$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_VA	src/arch/alpha/ipr.hh	/^    RAW_IPR_VA = 0x206,             \/\/ fault virtual address$/;"	e	enum:AlphaISA::md_ipr_names
RAW_IPR_VA_FORM	src/arch/alpha/ipr.hh	/^    RAW_IPR_VA_FORM = 0x207,        \/\/ formatted virtual address$/;"	e	enum:AlphaISA::md_ipr_names
RCTL	src/dev/i8254xGBe_defs.hh	/^    struct RCTL : public Reg<uint32_t> { \/\/ 0x0100 RCTL Register$/;"	s	struct:iGbReg::Regs
RCV_ADDRESS_TABLE_SIZE	src/dev/i8254xGBe_defs.hh	/^const uint8_t RCV_ADDRESS_TABLE_SIZE    = 24;$/;"	m	namespace:iGbReg
RC_stage	src/mem/ruby/network/garnet/fixed-pipeline/RoutingUnit_d.cc	/^RoutingUnit_d::RC_stage(flit_d *t_flit, InputUnit_d *in_unit, int invc)$/;"	f	class:RoutingUnit_d
RDBA	src/dev/i8254xGBe_defs.hh	/^    struct RDBA : public Reg<uint64_t> { \/\/ 0x2800 RDBA Register$/;"	s	struct:iGbReg::Regs
RDH	src/dev/i8254xGBe_defs.hh	/^    struct RDH : public Reg<uint32_t> { \/\/ 0x2810 RDH Register$/;"	s	struct:iGbReg::Regs
RDLEN	src/dev/i8254xGBe_defs.hh	/^    struct RDLEN : public Reg<uint32_t> { \/\/ 0x2808 RDLEN Register$/;"	s	struct:iGbReg::Regs
RDT	src/dev/i8254xGBe_defs.hh	/^    struct RDT : public Reg<uint32_t> { \/\/ 0x2818 RDT Register$/;"	s	struct:iGbReg::Regs
RDTR	src/dev/i8254xGBe_defs.hh	/^    struct RDTR : public Reg<uint32_t> { \/\/ 0x2820 RDTR Register$/;"	s	struct:iGbReg::Regs
RE	src/arch/x86/decoder_tables.cc	/^    const uint8_t RE = Rep;$/;"	m	namespace:X86ISA	file:
READ_MODE	src/mem/ruby/network/orion/NetworkPower.hh	/^#define READ_MODE /;"	d
RECEIVE_ERROR	src/dev/terminal.cc	/^#define RECEIVE_ERROR /;"	d	file:
RECEIVE_NONE	src/dev/terminal.cc	/^#define RECEIVE_NONE /;"	d	file:
RECEIVE_SUCCESS	src/dev/terminal.cc	/^#define RECEIVE_SUCCESS /;"	d	file:
REDStateException	src/arch/sparc/faults.hh	/^class REDStateException : public SparcFault<REDStateException> {};$/;"	c	namespace:SparcISA
REGISTER_SERIALIZEABLE	src/sim/serialize.hh	/^#define REGISTER_SERIALIZEABLE(/;"	d
REG_AIFS	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_AIFS     = 0x00458;$/;"	m	namespace:iGbReg
REG_CORE32	src/cpu/kvm/arm_cpu.cc	/^#define REG_CORE32(/;"	d	file:
REG_CORE_IDX	src/cpu/kvm/arm_cpu.cc	/^#define REG_CORE_IDX(/;"	d	file:
REG_CP	src/cpu/kvm/arm_cpu.cc	/^#define REG_CP(/;"	d	file:
REG_CP32	src/cpu/kvm/arm_cpu.cc	/^#define REG_CP32(/;"	d	file:
REG_CP64	src/cpu/kvm/arm_cpu.cc	/^#define REG_CP64(/;"	d	file:
REG_CPSR	src/arch/arm/remote_gdb.hh	/^const int REG_CPSR  = 8;   \/* bit 512 to bit 543  *\/$/;"	m	namespace:ArmISA
REG_CPSR_64	src/arch/arm/remote_gdb.hh	/^const int REG_CPSR_64 = 33;$/;"	m	namespace:ArmISA
REG_CRCERRS	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_CRCERRS  = 0x04000;$/;"	m	namespace:iGbReg
REG_CRM	src/cpu/kvm/arm_cpu.cc	/^#define REG_CRM(/;"	d	file:
REG_CRN	src/cpu/kvm/arm_cpu.cc	/^#define REG_CRN(/;"	d	file:
REG_CTRL	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_CTRL     = 0x00000;$/;"	m	namespace:iGbReg
REG_CTRL_EXT	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_CTRL_EXT = 0x00018;$/;"	m	namespace:iGbReg
REG_DEMUX32	src/cpu/kvm/arm_cpu.cc	/^#define REG_DEMUX32(/;"	d	file:
REG_EECD	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_EECD     = 0x00010;$/;"	m	namespace:iGbReg
REG_EERD	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_EERD     = 0x00014;$/;"	m	namespace:iGbReg
REG_EICR	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_EICR     = 0x01580;$/;"	m	namespace:iGbReg
REG_F0	src/arch/arm/remote_gdb.hh	/^const int REG_F0 = 8;$/;"	m	namespace:ArmISA
REG_FCAH	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_FCAH     = 0x0002C;$/;"	m	namespace:iGbReg
REG_FCAL	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_FCAL     = 0x00028;$/;"	m	namespace:iGbReg
REG_FCRTH	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_FCRTH    = 0x02168;$/;"	m	namespace:iGbReg
REG_FCRTL	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_FCRTL    = 0x02160;$/;"	m	namespace:iGbReg
REG_FCT	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_FCT      = 0x00030;$/;"	m	namespace:iGbReg
REG_FCTTV	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_FCTTV    = 0x00170;$/;"	m	namespace:iGbReg
REG_FPSCR	src/arch/arm/remote_gdb.hh	/^const int REG_FPSCR = 40;  \/* bit 2592 to bit 2623 *\/$/;"	m	namespace:ArmISA
REG_FWSM	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_FWSM     = 0x05B54;$/;"	m	namespace:iGbReg
REG_IAM	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_IAM      = 0x000E0;$/;"	m	namespace:iGbReg
REG_ICR	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_ICR      = 0x000C0;$/;"	m	namespace:iGbReg
REG_ICS	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_ICS      = 0x000C8;$/;"	m	namespace:iGbReg
REG_IMC	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_IMC      = 0x000D8;$/;"	m	namespace:iGbReg
REG_IMS	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_IMS      = 0x000D0;$/;"	m	namespace:iGbReg
REG_IS_32BIT	src/cpu/kvm/arm_cpu.cc	/^#define REG_IS_32BIT(/;"	d	file:
REG_IS_64BIT	src/cpu/kvm/arm_cpu.cc	/^#define REG_IS_64BIT(/;"	d	file:
REG_IS_ARM	src/cpu/kvm/arm_cpu.cc	/^#define REG_IS_ARM(/;"	d	file:
REG_IS_CORE	src/cpu/kvm/arm_cpu.cc	/^#define REG_IS_CORE(/;"	d	file:
REG_IS_CP	src/cpu/kvm/arm_cpu.cc	/^#define REG_IS_CP(/;"	d	file:
REG_IS_DEMUX	src/cpu/kvm/arm_cpu.cc	/^#define REG_IS_DEMUX(/;"	d	file:
REG_IS_VFP	src/cpu/kvm/arm_cpu.cc	/^#define REG_IS_VFP(/;"	d	file:
REG_IS_VFP_CTRL	src/cpu/kvm/arm_cpu.cc	/^#define REG_IS_VFP_CTRL(/;"	d	file:
REG_IS_VFP_REG	src/cpu/kvm/arm_cpu.cc	/^#define REG_IS_VFP_REG(/;"	d	file:
REG_ITR	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_ITR      = 0x000C4;$/;"	m	namespace:iGbReg
REG_IVAR0	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_IVAR0    = 0x01700;$/;"	m	namespace:iGbReg
REG_LEDCTL	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_LEDCTL   = 0x00e00;$/;"	m	namespace:iGbReg
REG_MANC	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_MANC     = 0x05820;$/;"	m	namespace:iGbReg
REG_MDIC	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_MDIC     = 0x00020;$/;"	m	namespace:iGbReg
REG_MTA	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_MTA      = 0x05200;$/;"	m	namespace:iGbReg
REG_OFFSET	src/dev/mips/access.h	/^#define REG_OFFSET /;"	d
REG_OPC1	src/cpu/kvm/arm_cpu.cc	/^#define REG_OPC1(/;"	d	file:
REG_OPC2	src/cpu/kvm/arm_cpu.cc	/^#define REG_OPC2(/;"	d	file:
REG_OUTDRV	src/mem/ruby/network/orion/Buffer/OutdrvUnit.hh	/^      REG_OUTDRV$/;"	e	enum:OutdrvUnit::OutdrvModel
REG_PBA	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_PBA      = 0x01000;$/;"	m	namespace:iGbReg
REG_PC_64	src/arch/arm/remote_gdb.hh	/^const int REG_PC_64 = 32;$/;"	m	namespace:ArmISA
REG_R0	src/arch/arm/remote_gdb.hh	/^const int REG_R0 = 0;$/;"	m	namespace:ArmISA
REG_RADV	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_RADV     = 0x0282C;$/;"	m	namespace:iGbReg
REG_RAH	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_RAH      = 0x05404;$/;"	m	namespace:iGbReg
REG_RAL	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_RAL      = 0x05400;$/;"	m	namespace:iGbReg
REG_RCTL	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_RCTL     = 0x00100;$/;"	m	namespace:iGbReg
REG_RDBAH	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_RDBAH    = 0x02804;$/;"	m	namespace:iGbReg
REG_RDBAL	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_RDBAL    = 0x02800;$/;"	m	namespace:iGbReg
REG_RDH	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_RDH      = 0x02810;$/;"	m	namespace:iGbReg
REG_RDLEN	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_RDLEN    = 0x02808;$/;"	m	namespace:iGbReg
REG_RDT	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_RDT      = 0x02818;$/;"	m	namespace:iGbReg
REG_RDTR	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_RDTR     = 0x02820;$/;"	m	namespace:iGbReg
REG_RFCTL	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_RFCTL    = 0x05008;$/;"	m	namespace:iGbReg
REG_RLPML	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_RLPML    = 0x05004;$/;"	m	namespace:iGbReg
REG_RXCSUM	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_RXCSUM   = 0x05000;$/;"	m	namespace:iGbReg
REG_RXDCTL	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_RXDCTL   = 0x02828;$/;"	m	namespace:iGbReg
REG_SRRCTL	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_SRRCTL   = 0x0280C;$/;"	m	namespace:iGbReg
REG_STATUS	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_STATUS   = 0x00008;$/;"	m	namespace:iGbReg
REG_SWFWSYNC	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_SWFWSYNC = 0x05B5C;$/;"	m	namespace:iGbReg
REG_SWSM	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_SWSM     = 0x05B50;$/;"	m	namespace:iGbReg
REG_TADV	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_TADV     = 0x0382C;$/;"	m	namespace:iGbReg
REG_TCTL	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_TCTL     = 0x00400;$/;"	m	namespace:iGbReg
REG_TDBAH	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_TDBAH    = 0x03804;$/;"	m	namespace:iGbReg
REG_TDBAL	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_TDBAL    = 0x03800;$/;"	m	namespace:iGbReg
REG_TDH	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_TDH      = 0x03810;$/;"	m	namespace:iGbReg
REG_TDLEN	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_TDLEN    = 0x03808;$/;"	m	namespace:iGbReg
REG_TDT	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_TDT      = 0x03818;$/;"	m	namespace:iGbReg
REG_TDWBAH	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_TDWBAH   = 0x0383C;$/;"	m	namespace:iGbReg
REG_TDWBAL	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_TDWBAL   = 0x03838;$/;"	m	namespace:iGbReg
REG_TIDV	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_TIDV     = 0x03820;$/;"	m	namespace:iGbReg
REG_TIPG	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_TIPG     = 0x00410;$/;"	m	namespace:iGbReg
REG_TXDCA_CTL	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_TXDCA_CTL = 0x03814;$/;"	m	namespace:iGbReg
REG_TXDCTL	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_TXDCTL   = 0x03828;$/;"	m	namespace:iGbReg
REG_V0	src/arch/arm/remote_gdb.hh	/^const int REG_V0 = 34;$/;"	m	namespace:ArmISA
REG_VET	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_VET      = 0x00038;$/;"	m	namespace:iGbReg
REG_VFP32	src/cpu/kvm/arm_cpu.cc	/^#define REG_VFP32(/;"	d	file:
REG_VFP64	src/cpu/kvm/arm_cpu.cc	/^#define REG_VFP64(/;"	d	file:
REG_VFP_REG	src/cpu/kvm/arm_cpu.cc	/^#define REG_VFP_REG(/;"	d	file:
REG_VFTA	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_VFTA     = 0x05600;$/;"	m	namespace:iGbReg
REG_WUC	src/dev/i8254xGBe_defs.hh	/^const uint32_t REG_WUC      = 0x05800;$/;"	m	namespace:iGbReg
REG_X0	src/arch/arm/remote_gdb.hh	/^const int REG_X0 = 0;$/;"	m	namespace:ArmISA
RESERVED	src/dev/ns_gige_reg.h	/^    RESERVED =          0xfc$/;"	e	enum:DeviceRegisterAddress
RETRY	src/mem/bus.hh	/^        enum State { IDLE, BUSY, RETRY };$/;"	e	enum:BaseBus::Layer::State
RFBit	src/arch/x86/regs/misc.hh	/^        RFBit = 1 << 16,$/;"	e	enum:X86ISA::RFLAGBit
RFCR	src/dev/ns_gige_reg.h	/^    RFCR =              0x48,$/;"	e	enum:DeviceRegisterAddress
RFCR_AAB	src/dev/ns_gige_reg.h	/^     RFCR_AAB =         0x40000000,$/;"	e	enum:ReceiveFilterMatchControlRegister
RFCR_AAM	src/dev/ns_gige_reg.h	/^     RFCR_AAM =         0x20000000,$/;"	e	enum:ReceiveFilterMatchControlRegister
RFCR_AARP	src/dev/ns_gige_reg.h	/^     RFCR_AARP =        0x00400000,$/;"	e	enum:ReceiveFilterMatchControlRegister
RFCR_AAU	src/dev/ns_gige_reg.h	/^     RFCR_AAU =         0x10000000,$/;"	e	enum:ReceiveFilterMatchControlRegister
RFCR_APAT	src/dev/ns_gige_reg.h	/^     RFCR_APAT =        0x07800000,$/;"	e	enum:ReceiveFilterMatchControlRegister
RFCR_APAT0	src/dev/ns_gige_reg.h	/^     RFCR_APAT0 =       0x00800000,$/;"	e	enum:ReceiveFilterMatchControlRegister
RFCR_APAT1	src/dev/ns_gige_reg.h	/^     RFCR_APAT1 =       0x01000000,$/;"	e	enum:ReceiveFilterMatchControlRegister
RFCR_APAT2	src/dev/ns_gige_reg.h	/^     RFCR_APAT2 =       0x02000000,$/;"	e	enum:ReceiveFilterMatchControlRegister
RFCR_APAT3	src/dev/ns_gige_reg.h	/^     RFCR_APAT3 =       0x04000000,$/;"	e	enum:ReceiveFilterMatchControlRegister
RFCR_APM	src/dev/ns_gige_reg.h	/^     RFCR_APM =         0x08000000,$/;"	e	enum:ReceiveFilterMatchControlRegister
RFCR_MHEN	src/dev/ns_gige_reg.h	/^     RFCR_MHEN =        0x00200000,$/;"	e	enum:ReceiveFilterMatchControlRegister
RFCR_RFADDR	src/dev/ns_gige_reg.h	/^     RFCR_RFADDR =      0x000003ff$/;"	e	enum:ReceiveFilterMatchControlRegister
RFCR_RFEN	src/dev/ns_gige_reg.h	/^     RFCR_RFEN =        0x80000000,$/;"	e	enum:ReceiveFilterMatchControlRegister
RFCR_UHEN	src/dev/ns_gige_reg.h	/^     RFCR_UHEN =        0x00100000,$/;"	e	enum:ReceiveFilterMatchControlRegister
RFCR_ULM	src/dev/ns_gige_reg.h	/^     RFCR_ULM =         0x00080000,$/;"	e	enum:ReceiveFilterMatchControlRegister
RFCTL	src/dev/i8254xGBe_defs.hh	/^    struct RFCTL : public Reg<uint32_t> { \/\/ 0x5008 RFCTL Register$/;"	s	struct:iGbReg::Regs
RFDR	src/dev/ns_gige_reg.h	/^    RFDR =              0x4c,$/;"	e	enum:DeviceRegisterAddress
RFDR_BMASK	src/dev/ns_gige_reg.h	/^     RFDR_BMASK =       0x00030000,$/;"	e	enum:ReceiveFilterMatchDataRegister
RFDR_RFDATA0	src/dev/ns_gige_reg.h	/^     RFDR_RFDATA0 =     0x000000ff,$/;"	e	enum:ReceiveFilterMatchDataRegister
RFDR_RFDATA1	src/dev/ns_gige_reg.h	/^     RFDR_RFDATA1 =     0x0000ff00$/;"	e	enum:ReceiveFilterMatchDataRegister
RFDT	src/base/loader/coff_sym.h	/^typedef coff_long RFDT, *pRFDT;$/;"	t
RFLAGBit	src/arch/x86/regs/misc.hh	/^    enum RFLAGBit {$/;"	g	namespace:X86ISA
RLIMIT_RSS	src/arch/mips/linux/linux.hh	/^    static const unsigned RLIMIT_RSS = 7;$/;"	m	class:MipsLinux
RN	src/arch/x86/decoder_tables.cc	/^    const uint8_t RN = Repne;$/;"	m	namespace:X86ISA	file:
RNDXR	src/base/loader/coff_sym.h	/^} RNDXR, *pRNDXR;$/;"	t	typeref:struct:__anon42
RND_DOWN	src/arch/arm/types.hh	/^        RND_DOWN,$/;"	e	enum:ArmISA::RoundMode
RND_DOWN	src/arch/mips/types.hh	/^    RND_DOWN,$/;"	e	enum:MipsISA::RoundMode
RND_NEAREST	src/arch/arm/types.hh	/^        RND_NEAREST$/;"	e	enum:ArmISA::RoundMode
RND_NEAREST	src/arch/mips/types.hh	/^    RND_NEAREST$/;"	e	enum:MipsISA::RoundMode
RND_UP	src/arch/arm/types.hh	/^        RND_UP,$/;"	e	enum:ArmISA::RoundMode
RND_UP	src/arch/mips/types.hh	/^    RND_UP,$/;"	e	enum:MipsISA::RoundMode
RND_ZERO	src/arch/arm/types.hh	/^        RND_ZERO,$/;"	e	enum:ArmISA::RoundMode
RND_ZERO	src/arch/mips/types.hh	/^    RND_ZERO,$/;"	e	enum:MipsISA::RoundMode
ROB	src/cpu/o3/commit.hh	/^    typedef typename CPUPol::ROB ROB;$/;"	t	class:DefaultCommit
ROB	src/cpu/o3/cpu_policy.hh	/^    typedef ::ROB<Impl> ROB;$/;"	t	struct:SimpleCPUPolicy
ROB	src/cpu/o3/rename.hh	/^        ROB,$/;"	e	enum:DefaultRename::FullSource
ROB	src/cpu/o3/rob.hh	/^class ROB$/;"	c
ROB	src/cpu/o3/rob_impl.hh	/^ROB<Impl>::ROB(O3CPU *_cpu, DerivO3CPUParams *params)$/;"	f	class:ROB
ROBCount	src/cpu/ozone/lw_back_end.hh	/^    Stats::Vector  ROBCount;   \/\/ cumulative ROB occupancy$/;"	m	class:LWBackEnd
ROBFcount	src/cpu/ozone/lw_back_end.hh	/^    Stats::Scalar ROBFcount;$/;"	m	class:LWBackEnd
ROBFullRate	src/cpu/ozone/lw_back_end.hh	/^    Stats::Formula ROBFullRate;$/;"	m	class:LWBackEnd
ROBOccRate	src/cpu/ozone/lw_back_end.hh	/^    Stats::Formula ROBOccRate;$/;"	m	class:LWBackEnd
ROBPolicy	src/cpu/o3/rob.hh	/^    enum ROBPolicy{$/;"	g	class:ROB
ROBSquashedInsts	src/cpu/ozone/lw_back_end.hh	/^    Stats::Vector ROBSquashedInsts;$/;"	m	class:LWBackEnd
ROBSquashing	src/cpu/o3/commit.hh	/^        ROBSquashing,$/;"	e	enum:DefaultCommit::ThreadStatus
ROBSquashing	src/cpu/o3/rob.hh	/^        ROBSquashing$/;"	e	enum:ROB::Status
ROB_count	src/cpu/ozone/back_end.hh	/^    Stats::Vector  ROB_count;  \/\/ cumulative ROB occupancy$/;"	m	class:BackEnd
ROB_fcount	src/cpu/ozone/back_end.hh	/^    Stats::Scalar ROB_fcount;$/;"	m	class:BackEnd
ROB_full_rate	src/cpu/ozone/back_end.hh	/^    Stats::Formula ROB_full_rate;$/;"	m	class:BackEnd
ROB_occ_dist	src/cpu/ozone/back_end.hh	/^    Stats::VectorDistribution ROB_occ_dist;$/;"	m	class:BackEnd
ROB_occ_rate	src/cpu/ozone/back_end.hh	/^    Stats::Formula ROB_occ_rate;$/;"	m	class:BackEnd
ROR	src/arch/arm/types.hh	/^        ROR$/;"	e	enum:ArmISA::ArmShiftType
ROUND	src/arch/mips/dsp.hh	/^enum { NOROUND, ROUND };$/;"	e	enum:MipsISA::__anon19
RRArbiter	src/mem/ruby/network/orion/Allocator/RRArbiter.cc	/^RRArbiter::RRArbiter($/;"	f	class:RRArbiter
RRArbiter	src/mem/ruby/network/orion/Allocator/RRArbiter.hh	/^class RRArbiter : public Arbiter$/;"	c
RR_ARBITER	src/mem/ruby/network/orion/Allocator/Arbiter.hh	/^      RR_ARBITER,$/;"	e	enum:Arbiter::ArbiterModel
RSDP	src/arch/x86/bios/acpi.cc	/^X86ISA::ACPI::RSDP::RSDP(Params *p) : SimObject(p), oemID(p->oem_id),$/;"	f	class:X86ISA::ACPI::RSDP
RSDP	src/arch/x86/bios/acpi.hh	/^class RSDP : public SimObject$/;"	c	namespace:X86ISA::ACPI
RSDT	src/arch/x86/bios/acpi.cc	/^X86ISA::ACPI::RSDT::RSDT(Params *p) :$/;"	f	class:X86ISA::ACPI::RSDT
RSDT	src/arch/x86/bios/acpi.hh	/^class RSDT : public SysDescTable$/;"	c	namespace:X86ISA::ACPI
RSRPD	src/dev/i8254xGBe_defs.hh	/^    struct RSRPD : public Reg<uint32_t> { \/\/ 0x2C00 RSRPD Register$/;"	s	struct:iGbReg::Regs
RSkedIt	src/cpu/inorder/resource_sked.hh	/^    RSkedIt()$/;"	f	class:RSkedIt
RSkedIt	src/cpu/inorder/resource_sked.hh	/^class RSkedIt$/;"	c
RSkedPtr	src/cpu/inorder/inorder_dyn_inst.hh	/^    typedef ThePipeline::RSkedPtr RSkedPtr;$/;"	t	class:InOrderDynInst
RSkedPtr	src/cpu/inorder/pipeline_traits.hh	/^    typedef ResourceSked* RSkedPtr;$/;"	t	namespace:ThePipeline
RTC	src/dev/alpha/tsunami_io.cc	/^TsunamiIO::RTC::RTC(const string &n, const TsunamiIOParams *p)$/;"	f	class:TsunamiIO::RTC
RTC	src/dev/alpha/tsunami_io.hh	/^    class RTC : public MC146818$/;"	c	class:TsunamiIO
RTC	src/dev/mips/malta_io.cc	/^MaltaIO::RTC::RTC(const string &name, const MaltaIOParams *p)$/;"	f	class:MaltaIO::RTC
RTC	src/dev/mips/malta_io.hh	/^    class RTC : public MC146818$/;"	c	class:MaltaIO
RTCA_DV_1048576HZ	src/dev/rtcreg.h	/^static const int RTCA_DV_1048576HZ = 0x1;$/;"	v
RTCA_DV_32768HZ	src/dev/rtcreg.h	/^static const int RTCA_DV_32768HZ = 0x2;$/;"	v
RTCA_DV_4194304HZ	src/dev/rtcreg.h	/^static const int RTCA_DV_4194304HZ = 0x0;$/;"	v
RTCA_DV_DISABLED0	src/dev/rtcreg.h	/^static const int RTCA_DV_DISABLED0 = 0x6;$/;"	v
RTCA_DV_DISABLED1	src/dev/rtcreg.h	/^static const int RTCA_DV_DISABLED1 = 0x7;$/;"	v
RTCA_RS_1024HZ	src/dev/rtcreg.h	/^static const int RTCA_RS_1024HZ = 0x6;$/;"	v
RTCA_RS_DISABLED	src/dev/rtcreg.h	/^static const int RTCA_RS_DISABLED = 0x0;$/;"	v
RTCEvent	src/dev/mc146818.cc	/^MC146818::RTCEvent::RTCEvent(MC146818 * _parent, Tick i)$/;"	f	class:MC146818::RTCEvent
RTCEvent	src/dev/mc146818.hh	/^    struct RTCEvent : public Event$/;"	s	class:MC146818
RTCTickEvent	src/dev/mc146818.hh	/^        RTCTickEvent(MC146818 * _parent) : parent(_parent)$/;"	f	struct:MC146818::RTCTickEvent
RTCTickEvent	src/dev/mc146818.hh	/^    struct RTCTickEvent : public Event$/;"	s	class:MC146818
RTC_DOM	src/dev/rtcreg.h	/^static const int RTC_DOM = 0x07;$/;"	v
RTC_DOW	src/dev/rtcreg.h	/^static const int RTC_DOW = 0x06;$/;"	v
RTC_HR	src/dev/rtcreg.h	/^static const int RTC_HR = 0x04;$/;"	v
RTC_HR_ALRM	src/dev/rtcreg.h	/^static const int RTC_HR_ALRM = 0x05;$/;"	v
RTC_MIN	src/dev/rtcreg.h	/^static const int RTC_MIN = 0x02;$/;"	v
RTC_MIN_ALRM	src/dev/rtcreg.h	/^static const int RTC_MIN_ALRM = 0x03;$/;"	v
RTC_MON	src/dev/rtcreg.h	/^static const int RTC_MON = 0x08;$/;"	v
RTC_SEC	src/dev/rtcreg.h	/^static const int RTC_SEC = 0x00;$/;"	v
RTC_SEC_ALRM	src/dev/rtcreg.h	/^static const int RTC_SEC_ALRM = 0x01;$/;"	v
RTC_STAT_REGA	src/dev/rtcreg.h	/^static const int RTC_STAT_REGA = 0x0A;$/;"	v
RTC_STAT_REGB	src/dev/rtcreg.h	/^static const int RTC_STAT_REGB = 0x0B;$/;"	v
RTC_STAT_REGC	src/dev/rtcreg.h	/^static const int RTC_STAT_REGC = 0x0C;$/;"	v
RTC_STAT_REGD	src/dev/rtcreg.h	/^static const int RTC_STAT_REGD = 0x0D;$/;"	v
RTC_YEAR	src/dev/rtcreg.h	/^static const int RTC_YEAR = 0x09;$/;"	v
RW_BITLINE	src/mem/ruby/network/orion/Buffer/BitlineUnit.hh	/^      RW_BITLINE,$/;"	e	enum:BitlineUnit::BitlineModel
RW_WORDLINE	src/mem/ruby/network/orion/Buffer/WordlineUnit.hh	/^      RW_WORDLINE,$/;"	e	enum:WordlineUnit::WordlineModel
RX	src/arch/x86/decoder_tables.cc	/^    const uint8_t RX = RexPrefix;$/;"	m	namespace:X86ISA	file:
RXCSUM	src/dev/i8254xGBe_defs.hh	/^    struct RXCSUM : public Reg<uint32_t> { \/\/ 0x5000 RXCSUM Register$/;"	s	struct:iGbReg::Regs
RXDCTL	src/dev/i8254xGBe_defs.hh	/^    struct RXDCTL : public Reg<uint32_t> { \/\/ 0x2828 RXDCTL Register$/;"	s	struct:iGbReg::Regs
RXDEE_CE	src/dev/i8254xGBe_defs.hh	/^const uint16_t RXDEE_CE        = 0x010;$/;"	m	namespace:iGbReg
RXDEE_HBO	src/dev/i8254xGBe_defs.hh	/^const uint16_t RXDEE_HBO       = 0x008;$/;"	m	namespace:iGbReg
RXDEE_IPE	src/dev/i8254xGBe_defs.hh	/^const uint16_t RXDEE_IPE       = 0x800;$/;"	m	namespace:iGbReg
RXDEE_LE	src/dev/i8254xGBe_defs.hh	/^const uint16_t RXDEE_LE        = 0x020;$/;"	m	namespace:iGbReg
RXDEE_OSE	src/dev/i8254xGBe_defs.hh	/^const uint16_t RXDEE_OSE       = 0x100;$/;"	m	namespace:iGbReg
RXDEE_PE	src/dev/i8254xGBe_defs.hh	/^const uint16_t RXDEE_PE        = 0x080;$/;"	m	namespace:iGbReg
RXDEE_TCPE	src/dev/i8254xGBe_defs.hh	/^const uint16_t RXDEE_TCPE      = 0x400;$/;"	m	namespace:iGbReg
RXDEE_USE	src/dev/i8254xGBe_defs.hh	/^const uint16_t RXDEE_USE       = 0x200;$/;"	m	namespace:iGbReg
RXDE_CE	src/dev/i8254xGBe_defs.hh	/^const uint8_t RXDE_CE          = 0x01;$/;"	m	namespace:iGbReg
RXDE_IPE	src/dev/i8254xGBe_defs.hh	/^const uint8_t RXDE_IPE         = 0x40;$/;"	m	namespace:iGbReg
RXDE_RXE	src/dev/i8254xGBe_defs.hh	/^const uint8_t RXDE_RXE         = 0x80;$/;"	m	namespace:iGbReg
RXDE_SE	src/dev/i8254xGBe_defs.hh	/^const uint8_t RXDE_SE          = 0x02;$/;"	m	namespace:iGbReg
RXDE_SEQ	src/dev/i8254xGBe_defs.hh	/^const uint8_t RXDE_SEQ         = 0x04;$/;"	m	namespace:iGbReg
RXDE_TCPE	src/dev/i8254xGBe_defs.hh	/^const uint8_t RXDE_TCPE        = 0x20;$/;"	m	namespace:iGbReg
RXDP	src/dev/ns_gige_reg.h	/^    RXDP =              0x30,$/;"	e	enum:DeviceRegisterAddress
RXDP_HI	src/dev/ns_gige_reg.h	/^    RXDP_HI =           0x34,$/;"	e	enum:DeviceRegisterAddress
RXDP_IPV4	src/dev/i8254xGBe_defs.hh	/^const uint16_t RXDP_IPV4       = 0x001;$/;"	m	namespace:iGbReg
RXDP_IPV4E	src/dev/i8254xGBe_defs.hh	/^const uint16_t RXDP_IPV4E      = 0x002;$/;"	m	namespace:iGbReg
RXDP_IPV6	src/dev/i8254xGBe_defs.hh	/^const uint16_t RXDP_IPV6       = 0x004;$/;"	m	namespace:iGbReg
RXDP_IPV6E	src/dev/i8254xGBe_defs.hh	/^const uint16_t RXDP_IPV6E      = 0x008;$/;"	m	namespace:iGbReg
RXDP_NFS	src/dev/i8254xGBe_defs.hh	/^const uint16_t RXDP_NFS        = 0x080;$/;"	m	namespace:iGbReg
RXDP_SCTP	src/dev/i8254xGBe_defs.hh	/^const uint16_t RXDP_SCTP       = 0x040;$/;"	m	namespace:iGbReg
RXDP_TCP	src/dev/i8254xGBe_defs.hh	/^const uint16_t RXDP_TCP        = 0x010;$/;"	m	namespace:iGbReg
RXDP_UDP	src/dev/i8254xGBe_defs.hh	/^const uint16_t RXDP_UDP        = 0x020;$/;"	m	namespace:iGbReg
RXDS_CRCV	src/dev/i8254xGBe_defs.hh	/^const uint16_t RXDS_CRCV        = 0x100;$/;"	m	namespace:iGbReg
RXDS_DD	src/dev/i8254xGBe_defs.hh	/^const uint16_t RXDS_DD          = 0x001;$/;"	m	namespace:iGbReg
RXDS_DYNINT	src/dev/i8254xGBe_defs.hh	/^const uint16_t RXDS_DYNINT      = 0x800;$/;"	m	namespace:iGbReg
RXDS_EOP	src/dev/i8254xGBe_defs.hh	/^const uint16_t RXDS_EOP         = 0x002;$/;"	m	namespace:iGbReg
RXDS_IPCS	src/dev/i8254xGBe_defs.hh	/^const uint16_t RXDS_IPCS        = 0x040;$/;"	m	namespace:iGbReg
RXDS_IXSM	src/dev/i8254xGBe_defs.hh	/^const uint16_t RXDS_IXSM        = 0x004;$/;"	m	namespace:iGbReg
RXDS_PIF	src/dev/i8254xGBe_defs.hh	/^const uint16_t RXDS_PIF         = 0x080;$/;"	m	namespace:iGbReg
RXDS_TCPCS	src/dev/i8254xGBe_defs.hh	/^const uint16_t RXDS_TCPCS       = 0x020;$/;"	m	namespace:iGbReg
RXDS_UDPCS	src/dev/i8254xGBe_defs.hh	/^const uint16_t RXDS_UDPCS       = 0x010;$/;"	m	namespace:iGbReg
RXDS_UDPV	src/dev/i8254xGBe_defs.hh	/^const uint16_t RXDS_UDPV        = 0x400;$/;"	m	namespace:iGbReg
RXDS_VP	src/dev/i8254xGBe_defs.hh	/^const uint16_t RXDS_VP          = 0x008;$/;"	m	namespace:iGbReg
RXDT_ADV_ONEBUF	src/dev/i8254xGBe_defs.hh	/^const uint8_t RXDT_ADV_ONEBUF  = 0x01;$/;"	m	namespace:iGbReg
RXDT_ADV_SPLIT_A	src/dev/i8254xGBe_defs.hh	/^const uint8_t RXDT_ADV_SPLIT_A = 0x05;$/;"	m	namespace:iGbReg
RXDT_LEGACY	src/dev/i8254xGBe_defs.hh	/^const uint8_t RXDT_LEGACY      = 0x00;$/;"	m	namespace:iGbReg
RX_CFG	src/dev/ns_gige_reg.h	/^    RX_CFG =            0x38,$/;"	e	enum:DeviceRegisterAddress
RX_CFG_AEP	src/dev/ns_gige_reg.h	/^     RX_CFG_AEP =       0x80000000,$/;"	e	enum:ReceiveConfigurationRegister
RX_CFG_AIRL	src/dev/ns_gige_reg.h	/^     RX_CFG_AIRL =      0x04000000,$/;"	e	enum:ReceiveConfigurationRegister
RX_CFG_ALP	src/dev/ns_gige_reg.h	/^     RX_CFG_ALP =       0x08000000,$/;"	e	enum:ReceiveConfigurationRegister
RX_CFG_ARP	src/dev/ns_gige_reg.h	/^     RX_CFG_ARP =       0x40000000,$/;"	e	enum:ReceiveConfigurationRegister
RX_CFG_DRTH	src/dev/ns_gige_reg.h	/^     RX_CFG_DRTH =      0x0000003e,$/;"	e	enum:ReceiveConfigurationRegister
RX_CFG_DRTH0	src/dev/ns_gige_reg.h	/^     RX_CFG_DRTH0 =     0x00000002$/;"	e	enum:ReceiveConfigurationRegister
RX_CFG_MXDMA	src/dev/ns_gige_reg.h	/^     RX_CFG_MXDMA =     0x00700000,$/;"	e	enum:ReceiveConfigurationRegister
RX_CFG_MXDMA512	src/dev/ns_gige_reg.h	/^     RX_CFG_MXDMA512 =  0x00700000,$/;"	e	enum:ReceiveConfigurationRegister
RX_CFG_RX_FD	src/dev/ns_gige_reg.h	/^     RX_CFG_RX_FD =     0x10000000,$/;"	e	enum:ReceiveConfigurationRegister
RX_CFG_STRIPCRC	src/dev/ns_gige_reg.h	/^     RX_CFG_STRIPCRC =  0x20000000,$/;"	e	enum:ReceiveConfigurationRegister
RX_INT	src/dev/uart.hh	/^const int RX_INT = 0x1;$/;"	v
Ra	src/arch/alpha/ev5.hh	/^inline int Ra(MachInst inst) { return inst >> 21 & 0x1f; }$/;"	f	namespace:AlphaISA
RamSize	src/dev/x86/i8042.cc	/^const uint8_t RamSize = 32;$/;"	v
Random	src/base/random.cc	/^Random::Random()$/;"	f	class:Random
Random	src/base/random.cc	/^Random::Random(uint32_t init_key[], int key_length)$/;"	f	class:Random
Random	src/base/random.cc	/^Random::Random(uint32_t s)$/;"	f	class:Random
Random	src/base/random.hh	/^class Random$/;"	c
RandomGen	src/cpu/testers/traffic_gen/generators.hh	/^    RandomGen(const std::string& _name, MasterID master_id, Tick _duration,$/;"	f	class:RandomGen
RandomGen	src/cpu/testers/traffic_gen/generators.hh	/^class RandomGen : public BaseGen$/;"	c
RangeAddrMapper	src/mem/AddrMapper.py	/^class RangeAddrMapper(AddrMapper):$/;"	c
RangeAddrMapper	src/mem/addr_mapper.cc	/^RangeAddrMapper::RangeAddrMapper(const RangeAddrMapperParams* p) :$/;"	f	class:RangeAddrMapper
RangeAddrMapper	src/mem/addr_mapper.hh	/^class RangeAddrMapper : public AddrMapper$/;"	c
RangeEx	src/base/addr_range.hh	/^RangeEx(Addr start, Addr end)$/;"	f
RangeIn	src/base/addr_range.hh	/^RangeIn(Addr start, Addr end)$/;"	f
RangeMap	src/arch/sparc/tlb_map.hh	/^    typedef std::map<TlbRange, TlbEntry*> RangeMap;$/;"	t	class:SparcISA::TlbMap
RangeMap	src/base/addr_range_map.hh	/^    typedef std::map<AddrRange, V> RangeMap;$/;"	t	class:AddrRangeMap
RangeSize	src/base/addr_range.hh	/^RangeSize(Addr start, Addr size)$/;"	f
RateGen	src/dev/intel_8254_timer.hh	/^        RateGen,$/;"	e	enum:Intel8254Timer::ModeVal
RawDiskImage	src/dev/DiskImage.py	/^class RawDiskImage(DiskImage):$/;"	c
RawDiskImage	src/dev/disk_image.cc	/^RawDiskImage::RawDiskImage(const Params* p)$/;"	f	class:RawDiskImage
RawDiskImage	src/dev/disk_image.hh	/^class RawDiskImage : public DiskImage$/;"	c
RawISR	src/dev/arm/rtc_pl031.hh	/^        RawISR     = 0x14,$/;"	e	enum:PL031::__anon66
RawISR	src/dev/arm/timer_sp804.hh	/^            RawISR     = 0x10,$/;"	e	enum:Sp804::Timer::__anon69
RawObject	src/base/loader/raw_object.cc	/^RawObject::RawObject(const std::string &_filename, int _fd, size_t _len,$/;"	f	class:RawObject
RawObject	src/base/loader/raw_object.hh	/^class RawObject: public ObjectFile$/;"	c
RdWrPort	src/cpu/o3/FuncUnitConfig.py	/^class RdWrPort(FUDesc):$/;"	c
ReExec	src/sim/faults.hh	/^    ReExec() {}$/;"	f	class:ReExec
ReExec	src/sim/faults.hh	/^class ReExec : public FaultBase$/;"	c
Read	src/sim/tlb.hh	/^    enum Mode { Read, Write, Execute };$/;"	e	enum:BaseTLB::Mode
ReadBackCommand	src/dev/intel_8254_timer.hh	/^        ReadBackCommand$/;"	e	enum:Intel8254Timer::SelectVal
ReadControllerRamBase	src/dev/x86/i8042.hh	/^        ReadControllerRamBase = 0x20,$/;"	e	enum:X86ISA::I8042::Command
ReadData	src/dev/x86/i8042.hh	/^        ReadData = 0xEB,$/;"	e	enum:X86ISA::PS2Mouse::Command
ReadExReq	src/mem/packet.hh	/^        ReadExReq,$/;"	e	enum:MemCmd::Command
ReadExResp	src/mem/packet.hh	/^        ReadExResp,$/;"	e	enum:MemCmd::Command
ReadID	src/dev/x86/i8042.hh	/^        ReadID = 0xF2,$/;"	e	enum:X86ISA::PS2Keyboard::Command
ReadID	src/dev/x86/i8042.hh	/^        ReadID = 0xF2,$/;"	e	enum:X86ISA::PS2Mouse::Command
ReadId	src/dev/ps2.hh	/^    ReadId          = 0xf2,$/;"	e	enum:Ps2::__anon82
ReadInputPort	src/dev/x86/i8042.hh	/^        ReadInputPort = 0xC0,$/;"	e	enum:X86ISA::I8042::Command
ReadOutputPort	src/dev/x86/i8042.hh	/^        ReadOutputPort = 0xD0,$/;"	e	enum:X86ISA::I8042::Command
ReadPort	src/cpu/o3/FuncUnitConfig.py	/^class ReadPort(FUDesc):$/;"	c
ReadReq	src/mem/packet.hh	/^        ReadReq,$/;"	e	enum:MemCmd::Command
ReadResp	src/mem/packet.hh	/^        ReadResp,$/;"	e	enum:MemCmd::Command
ReadRespWithInvalidate	src/mem/packet.hh	/^        ReadRespWithInvalidate,$/;"	e	enum:MemCmd::Command
ReadSrcReg	src/cpu/inorder/resources/use_def.hh	/^        ReadSrcReg,$/;"	e	enum:UseDefUnit::Command
ReadTestInputs	src/dev/x86/i8042.hh	/^        ReadTestInputs = 0xE0,$/;"	e	enum:X86ISA::I8042::Command
ReadWait	src/dev/ide_disk.hh	/^    ReadWait,$/;"	e	enum:Events
ReadWriteVal	src/dev/intel_8254_timer.hh	/^    enum ReadWriteVal {$/;"	g	class:Intel8254Timer
Ready	src/arch/x86/pagetable_walker.hh	/^                Ready,$/;"	e	enum:X86ISA::Walker::WalkerState::State
ReadyInstMap	src/cpu/ozone/inst_queue.hh	/^    typedef std::map<DynInstPtr, pqCompare> ReadyInstMap;$/;"	t	class:InstQueue
ReadyInstQueue	src/cpu/o3/inst_queue.hh	/^    ReadyInstQueue;$/;"	t	class:InstructionQueue
ReadyInstQueue	src/cpu/ozone/back_end.hh	/^        typedef typename std::priority_queue<DynInstPtr, std::vector<DynInstPtr>, pqCompare> ReadyInstQueue;$/;"	t	class:BackEnd::InstQueue
ReadyInstQueue	src/cpu/ozone/inst_queue.hh	/^    ReadyInstQueue;$/;"	t	class:InstQueue
ReadyInstQueue	src/cpu/ozone/lw_back_end.hh	/^    typedef typename std::priority_queue<DynInstPtr, std::vector<DynInstPtr>, pqCompare> ReadyInstQueue;$/;"	t	class:LWBackEnd
ReadyList	src/cpu/ozone/back_end.hh	/^            ReadyList,$/;"	e	enum:BackEnd::InstQueue::queue
ReadyMapIt	src/cpu/ozone/inst_queue.hh	/^    typedef typename std::map<DynInstPtr, pqCompare>::iterator ReadyMapIt;$/;"	t	class:InstQueue
RealMode	src/arch/x86/types.hh	/^        RealMode$/;"	e	enum:X86ISA::X86SubMode
RealView	src/dev/arm/RealView.py	/^class RealView(Platform):$/;"	c
RealView	src/dev/arm/realview.cc	/^RealView::RealView(const Params *p)$/;"	f	class:RealView
RealView	src/dev/arm/realview.hh	/^class RealView : public Platform$/;"	c
RealViewCtrl	src/dev/arm/RealView.py	/^class RealViewCtrl(BasicPioDevice):$/;"	c
RealViewCtrl	src/dev/arm/rv_ctrl.cc	/^RealViewCtrl::RealViewCtrl(Params *p)$/;"	f	class:RealViewCtrl
RealViewCtrl	src/dev/arm/rv_ctrl.hh	/^class RealViewCtrl : public BasicPioDevice$/;"	c
RealViewEB	src/dev/arm/RealView.py	/^class RealViewEB(RealView):$/;"	c
RealViewPBX	src/dev/arm/RealView.py	/^class RealViewPBX(RealView):$/;"	c
ReceiveConfigurationRegister	src/dev/ns_gige_reg.h	/^enum ReceiveConfigurationRegister {$/;"	g
ReceiveFilterMatchControlRegister	src/dev/ns_gige_reg.h	/^enum ReceiveFilterMatchControlRegister {$/;"	g
ReceiveFilterMatchDataRegister	src/dev/ns_gige_reg.h	/^enum ReceiveFilterMatchDataRegister {$/;"	g
RecordResult	src/cpu/base_dyn_inst.hh	/^        RecordResult,$/;"	e	enum:BaseDynInst::Flags
RecoverInst	src/cpu/base_dyn_inst.hh	/^        RecoverInst,             \/\/\/ Is a recover instruction$/;"	e	enum:BaseDynInst::Status
RecoverInst	src/cpu/inorder/inorder_dyn_inst.hh	/^        RecoverInst,             \/\/\/ Is a recover instruction$/;"	e	enum:InOrderDynInst::Status
Red_Select	src/dev/arm/hdlcd.hh	/^        Red_Select       = 0x0244,$/;"	e	enum:HDLcd::RegisterOffset
RefCounted	src/base/refcnt.hh	/^    RefCounted() : count(0) {}$/;"	f	class:RefCounted
RefCounted	src/base/refcnt.hh	/^class RefCounted$/;"	c
RefCountingPtr	src/base/refcnt.hh	/^    RefCountingPtr() : data(0) {}$/;"	f	class:RefCountingPtr
RefCountingPtr	src/base/refcnt.hh	/^    RefCountingPtr(T *data) { copy(data); }$/;"	f	class:RefCountingPtr
RefCountingPtr	src/base/refcnt.hh	/^    RefCountingPtr(const RefCountingPtr &r) { copy(r.data); }$/;"	f	class:RefCountingPtr
RefCountingPtr	src/base/refcnt.hh	/^class RefCountingPtr$/;"	c
Reg	src/dev/copy_engine_defs.hh	/^    Reg() { _data = 0; }$/;"	f	struct:CopyEngineReg::Reg
Reg	src/dev/copy_engine_defs.hh	/^struct Reg {$/;"	s	namespace:CopyEngineReg
Reg	src/dev/i8254xGBe_defs.hh	/^        Reg() { _data = 0; }$/;"	f	struct:iGbReg::Regs::Reg
Reg	src/dev/i8254xGBe_defs.hh	/^    struct Reg {$/;"	s	struct:iGbReg::Regs
Reg32Csr	src/arch/sparc/remote_gdb.hh	/^        Reg32Npc = 68, Reg32Fsr = 69, Reg32Csr = 70,$/;"	e	enum:SparcISA::RemoteGDB::RegisterConstants
Reg32Fsr	src/arch/sparc/remote_gdb.hh	/^        Reg32Npc = 68, Reg32Fsr = 69, Reg32Csr = 70,$/;"	e	enum:SparcISA::RemoteGDB::RegisterConstants
Reg32Npc	src/arch/sparc/remote_gdb.hh	/^        Reg32Npc = 68, Reg32Fsr = 69, Reg32Csr = 70,$/;"	e	enum:SparcISA::RemoteGDB::RegisterConstants
Reg32Pc	src/arch/sparc/remote_gdb.hh	/^        Reg32Y = 64, Reg32Psr = 65, Reg32Tbr = 66, Reg32Pc = 67,$/;"	e	enum:SparcISA::RemoteGDB::RegisterConstants
Reg32Psr	src/arch/sparc/remote_gdb.hh	/^        Reg32Y = 64, Reg32Psr = 65, Reg32Tbr = 66, Reg32Pc = 67,$/;"	e	enum:SparcISA::RemoteGDB::RegisterConstants
Reg32Tbr	src/arch/sparc/remote_gdb.hh	/^        Reg32Y = 64, Reg32Psr = 65, Reg32Tbr = 66, Reg32Pc = 67,$/;"	e	enum:SparcISA::RemoteGDB::RegisterConstants
Reg32Y	src/arch/sparc/remote_gdb.hh	/^        Reg32Y = 64, Reg32Psr = 65, Reg32Tbr = 66, Reg32Pc = 67,$/;"	e	enum:SparcISA::RemoteGDB::RegisterConstants
RegClass	src/cpu/reg_class.hh	/^enum RegClass {$/;"	g
RegClassStrings	src/cpu/reg_class.cc	/^const char *RegClassStrings[] = {$/;"	v
RegContextParam	src/arch/arm/types.hh	/^    typedef int RegContextParam;$/;"	t	namespace:ArmISA
RegContextVal	src/arch/arm/types.hh	/^    typedef int RegContextVal;$/;"	t	namespace:ArmISA
RegDepMap	src/cpu/inorder/reg_dep_map.cc	/^RegDepMap::RegDepMap(int size)$/;"	f	class:RegDepMap
RegDepMap	src/cpu/inorder/reg_dep_map.hh	/^class RegDepMap$/;"	c
RegDepMapEntry	src/cpu/inorder/inorder_dyn_inst.hh	/^        RegDepMapEntry,          \/\/\/ Instruction is entered onto the RegDepMap$/;"	e	enum:InOrderDynInst::Status
RegF0	src/arch/sparc/remote_gdb.hh	/^        RegF0 = 32,$/;"	e	enum:SparcISA::RemoteGDB::RegisterConstants
RegFprs	src/arch/sparc/remote_gdb.hh	/^        RegPc = 64, RegNpc, RegState, RegFsr, RegFprs, RegY,$/;"	e	enum:SparcISA::RemoteGDB::RegisterConstants
RegFsr	src/arch/sparc/remote_gdb.hh	/^        RegPc = 64, RegNpc, RegState, RegFsr, RegFprs, RegY,$/;"	e	enum:SparcISA::RemoteGDB::RegisterConstants
RegG0	src/arch/sparc/remote_gdb.hh	/^        RegG0 = 0, RegO0 = 8, RegL0 = 16, RegI0 = 24,$/;"	e	enum:SparcISA::RemoteGDB::RegisterConstants
RegI0	src/arch/sparc/remote_gdb.hh	/^        RegG0 = 0, RegO0 = 8, RegL0 = 16, RegI0 = 24,$/;"	e	enum:SparcISA::RemoteGDB::RegisterConstants
RegImmImmOp	src/arch/arm/insts/misc.hh	/^    RegImmImmOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:RegImmImmOp
RegImmImmOp	src/arch/arm/insts/misc.hh	/^class RegImmImmOp : public PredOp$/;"	c
RegImmOp	src/arch/arm/insts/misc.hh	/^    RegImmOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:RegImmOp
RegImmOp	src/arch/arm/insts/misc.hh	/^class RegImmOp : public PredOp$/;"	c
RegImmRegOp	src/arch/arm/insts/misc.hh	/^    RegImmRegOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:RegImmRegOp
RegImmRegOp	src/arch/arm/insts/misc.hh	/^class RegImmRegOp : public PredOp$/;"	c
RegImmRegShiftOp	src/arch/arm/insts/misc.hh	/^    RegImmRegShiftOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:RegImmRegShiftOp
RegImmRegShiftOp	src/arch/arm/insts/misc.hh	/^class RegImmRegShiftOp : public PredOp$/;"	c
RegIndex	src/arch/alpha/registers.hh	/^typedef uint8_t RegIndex;$/;"	t	namespace:AlphaISA
RegIndex	src/arch/arm/registers.hh	/^typedef uint16_t  RegIndex;$/;"	t	namespace:ArmISA
RegIndex	src/arch/mips/registers.hh	/^typedef uint16_t  RegIndex;$/;"	t	namespace:MipsISA
RegIndex	src/arch/power/registers.hh	/^typedef uint8_t RegIndex;$/;"	t	namespace:PowerISA
RegIndex	src/arch/sparc/registers.hh	/^typedef uint16_t RegIndex;$/;"	t	namespace:SparcISA
RegIndex	src/arch/x86/registers.hh	/^typedef uint16_t RegIndex;$/;"	t	namespace:X86ISA
RegIndex	src/cpu/base_dyn_inst.hh	/^    typedef TheISA::RegIndex RegIndex;$/;"	t	class:BaseDynInst
RegIndex	src/cpu/inorder/cpu.hh	/^    typedef TheISA::RegIndex RegIndex;$/;"	t	class:InOrderCPU
RegIndex	src/cpu/inorder/inorder_dyn_inst.hh	/^    typedef TheISA::RegIndex RegIndex;$/;"	t	class:InOrderDynInst
RegIndex	src/cpu/inorder/reg_dep_map.hh	/^    typedef TheISA::RegIndex RegIndex;$/;"	t	class:RegDepMap
RegIndex	src/cpu/inorder/resources/use_def.hh	/^    typedef TheISA::RegIndex RegIndex;$/;"	t	class:UseDefUnit
RegIndex	src/cpu/o3/dyn_inst.hh	/^    typedef TheISA::RegIndex RegIndex;$/;"	t	class:BaseO3DynInst
RegIndex	src/cpu/o3/rename.hh	/^    typedef TheISA::RegIndex RegIndex;$/;"	t	class:DefaultRename
RegIndex	src/cpu/o3/rename_map.hh	/^    typedef TheISA::RegIndex RegIndex;$/;"	t	class:SimpleRenameMap
RegIndex	src/cpu/o3/rename_map.hh	/^    typedef TheISA::RegIndex RegIndex;$/;"	t	class:UnifiedRenameMap
RegIndex	src/cpu/o3/rob.hh	/^    typedef TheISA::RegIndex RegIndex;$/;"	t	class:ROB
RegIndex	src/cpu/static_inst.hh	/^    typedef TheISA::RegIndex RegIndex;$/;"	t	class:StaticInst
RegIndexVector	src/cpu/kvm/arm_cpu.hh	/^    typedef std::vector<uint64_t> RegIndexVector;$/;"	t	class:ArmKvmCPU
RegL0	src/arch/sparc/remote_gdb.hh	/^        RegG0 = 0, RegO0 = 8, RegL0 = 16, RegI0 = 24,$/;"	e	enum:SparcISA::RemoteGDB::RegisterConstants
RegManager	src/cpu/inorder/pipeline_traits.5stage.hh	/^       RegManager,$/;"	e	enum:ThePipeline::ResourceList
RegManager	src/cpu/inorder/pipeline_traits.9stage.hh	/^       RegManager,$/;"	e	enum:ThePipeline::ResourceList
RegManager	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^       RegManager,$/;"	e	enum:ThePipeline::ResourceList
RegManager	src/cpu/inorder/pipeline_traits.hh	/^       RegManager,$/;"	e	enum:ThePipeline::ResourceId
RegNpc	src/arch/sparc/remote_gdb.hh	/^        RegPc = 64, RegNpc, RegState, RegFsr, RegFprs, RegY,$/;"	e	enum:SparcISA::RemoteGDB::RegisterConstants
RegO0	src/arch/sparc/remote_gdb.hh	/^        RegG0 = 0, RegO0 = 8, RegL0 = 16, RegI0 = 24,$/;"	e	enum:SparcISA::RemoteGDB::RegisterConstants
RegOp	src/arch/x86/insts/microregop.hh	/^        RegOp(ExtMachInst _machInst,$/;"	f	class:X86ISA::RegOp
RegOp	src/arch/x86/insts/microregop.hh	/^    class RegOp : public RegOpBase$/;"	c	namespace:X86ISA
RegOpBase	src/arch/x86/insts/microregop.hh	/^        RegOpBase(ExtMachInst _machInst,$/;"	f	class:X86ISA::RegOpBase
RegOpBase	src/arch/x86/insts/microregop.hh	/^    class RegOpBase : public X86MicroopBase$/;"	c	namespace:X86ISA
RegOpImm	src/arch/x86/insts/microregop.hh	/^        RegOpImm(ExtMachInst _machInst,$/;"	f	class:X86ISA::RegOpImm
RegOpImm	src/arch/x86/insts/microregop.hh	/^    class RegOpImm : public RegOpBase$/;"	c	namespace:X86ISA
RegPc	src/arch/sparc/remote_gdb.hh	/^        RegPc = 64, RegNpc, RegState, RegFsr, RegFprs, RegY,$/;"	e	enum:SparcISA::RemoteGDB::RegisterConstants
RegRegImmImmOp	src/arch/arm/insts/misc.hh	/^    RegRegImmImmOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:RegRegImmImmOp
RegRegImmImmOp	src/arch/arm/insts/misc.hh	/^class RegRegImmImmOp : public PredOp$/;"	c
RegRegImmImmOp64	src/arch/arm/insts/misc64.hh	/^    RegRegImmImmOp64(const char *mnem, ExtMachInst _machInst,$/;"	f	class:RegRegImmImmOp64
RegRegImmImmOp64	src/arch/arm/insts/misc64.hh	/^class RegRegImmImmOp64 : public ArmStaticInst$/;"	c
RegRegImmOp	src/arch/arm/insts/misc.hh	/^    RegRegImmOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:RegRegImmOp
RegRegImmOp	src/arch/arm/insts/misc.hh	/^class RegRegImmOp : public PredOp$/;"	c
RegRegOp	src/arch/arm/insts/misc.hh	/^    RegRegOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:RegRegOp
RegRegOp	src/arch/arm/insts/misc.hh	/^class RegRegOp : public PredOp$/;"	c
RegRegRegImmOp	src/arch/arm/insts/misc.hh	/^    RegRegRegImmOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:RegRegRegImmOp
RegRegRegImmOp	src/arch/arm/insts/misc.hh	/^class RegRegRegImmOp : public PredOp$/;"	c
RegRegRegImmOp64	src/arch/arm/insts/misc64.hh	/^    RegRegRegImmOp64(const char *mnem, ExtMachInst _machInst,$/;"	f	class:RegRegRegImmOp64
RegRegRegImmOp64	src/arch/arm/insts/misc64.hh	/^class RegRegRegImmOp64 : public ArmStaticInst$/;"	c
RegRegRegOp	src/arch/arm/insts/misc.hh	/^    RegRegRegOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:RegRegRegOp
RegRegRegOp	src/arch/arm/insts/misc.hh	/^class RegRegRegOp : public PredOp$/;"	c
RegRegRegRegOp	src/arch/arm/insts/misc.hh	/^    RegRegRegRegOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:RegRegRegRegOp
RegRegRegRegOp	src/arch/arm/insts/misc.hh	/^class RegRegRegRegOp : public PredOp$/;"	c
RegState	src/arch/sparc/remote_gdb.hh	/^        RegPc = 64, RegNpc, RegState, RegFsr, RegFprs, RegY,$/;"	e	enum:SparcISA::RemoteGDB::RegisterConstants
RegY	src/arch/sparc/remote_gdb.hh	/^        RegPc = 64, RegNpc, RegState, RegFsr, RegFprs, RegY,$/;"	e	enum:SparcISA::RemoteGDB::RegisterConstants
Region	src/python/m5/util/__init__.py	/^from region import neg_inf, pos_inf, Region, Regions$/;"	i
Region	src/python/m5/util/region.py	/^class Region(tuple):$/;"	c
Regions	src/python/m5/util/__init__.py	/^from region import neg_inf, pos_inf, Region, Regions$/;"	i
Regions	src/python/m5/util/region.py	/^class Regions(object):$/;"	c
Register	src/mem/ruby/network/orion/Buffer/Register.cc	/^Register::Register($/;"	f	class:Register
Register	src/mem/ruby/network/orion/Buffer/Register.hh	/^class Register$/;"	c
RegisterConstants	src/arch/sparc/remote_gdb.hh	/^    enum RegisterConstants$/;"	g	class:SparcISA::RemoteGDB
RegisterContants	src/arch/x86/remote_gdb.hh	/^        enum RegisterContants$/;"	g	class:X86ISA::RemoteGDB
RegisterOffset	src/dev/arm/hdlcd.hh	/^    enum RegisterOffset {$/;"	g	class:HDLcd
Regs	src/dev/copy_engine_defs.hh	/^struct Regs {$/;"	s	namespace:CopyEngineReg
Regs	src/dev/i8254xGBe_defs.hh	/^struct Regs {$/;"	s	namespace:iGbReg
Regs	src/dev/sinicreg.hh	/^namespace Regs {$/;"	n	namespace:Sinic
RegsPerWindow	src/arch/sparc/isa.hh	/^    static const int RegsPerWindow = NumWindowedRegs - WindowOverlap;$/;"	m	class:SparcISA::ISA
RegularBitfieldTypes	src/base/bitunion.hh	/^    class RegularBitfieldTypes$/;"	c	namespace:BitfieldBackend
RemoteGDB	src/arch/alpha/remote_gdb.cc	/^RemoteGDB::RemoteGDB(System *_system, ThreadContext *tc)$/;"	f	class:RemoteGDB
RemoteGDB	src/arch/alpha/remote_gdb.hh	/^class RemoteGDB : public BaseRemoteGDB$/;"	c	namespace:AlphaISA
RemoteGDB	src/arch/arm/remote_gdb.cc	/^RemoteGDB::RemoteGDB(System *_system, ThreadContext *tc)$/;"	f	class:RemoteGDB
RemoteGDB	src/arch/arm/remote_gdb.hh	/^class RemoteGDB : public BaseRemoteGDB$/;"	c	namespace:ArmISA
RemoteGDB	src/arch/mips/remote_gdb.cc	/^RemoteGDB::RemoteGDB(System *_system, ThreadContext *tc)$/;"	f	class:RemoteGDB
RemoteGDB	src/arch/mips/remote_gdb.hh	/^    class RemoteGDB : public BaseRemoteGDB$/;"	c	namespace:MipsISA
RemoteGDB	src/arch/power/remote_gdb.hh	/^    RemoteGDB(System *system, ThreadContext *context)$/;"	f	class:PowerISA::RemoteGDB
RemoteGDB	src/arch/power/remote_gdb.hh	/^class RemoteGDB : public BaseRemoteGDB$/;"	c	namespace:PowerISA
RemoteGDB	src/arch/sparc/remote_gdb.cc	/^RemoteGDB::RemoteGDB(System *_system, ThreadContext *c)$/;"	f	class:RemoteGDB
RemoteGDB	src/arch/sparc/remote_gdb.hh	/^class RemoteGDB : public BaseRemoteGDB$/;"	c	namespace:SparcISA
RemoteGDB	src/arch/x86/remote_gdb.cc	/^RemoteGDB::RemoteGDB(System *_system, ThreadContext *c)$/;"	f	class:RemoteGDB
RemoteGDB	src/arch/x86/remote_gdb.hh	/^    class RemoteGDB : public BaseRemoteGDB$/;"	c	namespace:X86ISA
RemoteMode	src/dev/x86/i8042.hh	/^        RemoteMode = 0xF0,$/;"	e	enum:X86ISA::PS2Mouse::Command
RemoveAddr	src/cpu/inorder/resources/inst_buffer.hh	/^        RemoveAddr,$/;"	e	enum:InstBuffer::Command
RemoveInst	src/cpu/inorder/resources/inst_buffer.hh	/^        RemoveInst,$/;"	e	enum:InstBuffer::Command
RemoveList	src/cpu/inorder/inorder_dyn_inst.hh	/^        RemoveList,               \/\/\/ Is Instruction on Remove List?$/;"	e	enum:InOrderDynInst::Status
Rename	src/cpu/o3/cpu_policy.hh	/^    typedef DefaultRename<Impl> Rename;$/;"	t	struct:SimpleCPUPolicy
RenameBlocked	src/cpu/ozone/front_end.hh	/^        RenameBlocked,$/;"	e	enum:FrontEnd::Status
RenameHistory	src/cpu/o3/rename.hh	/^        RenameHistory(InstSeqNum _instSeqNum, RegIndex _archReg,$/;"	f	struct:DefaultRename::RenameHistory
RenameHistory	src/cpu/o3/rename.hh	/^    struct RenameHistory {$/;"	s	class:DefaultRename
RenameIdx	src/cpu/o3/cpu.hh	/^        RenameIdx,$/;"	e	enum:FullO3CPU::StageIdx
RenameInfo	src/cpu/o3/rename_map.hh	/^    typedef SimpleRenameMap::RenameInfo RenameInfo;$/;"	t	class:UnifiedRenameMap
RenameInfo	src/cpu/o3/rename_map.hh	/^    typedef std::pair<PhysRegIndex, PhysRegIndex> RenameInfo;$/;"	t	class:SimpleRenameMap
RenameMap	src/cpu/o3/commit.hh	/^    typedef typename CPUPol::RenameMap RenameMap;$/;"	t	class:DefaultCommit
RenameMap	src/cpu/o3/cpu_policy.hh	/^    typedef UnifiedRenameMap RenameMap;$/;"	t	struct:SimpleCPUPolicy
RenameMap	src/cpu/o3/iew.hh	/^    typedef typename CPUPol::RenameMap RenameMap;$/;"	t	class:DefaultIEW
RenameMap	src/cpu/o3/rename.hh	/^    typedef typename CPUPol::RenameMap RenameMap;$/;"	t	class:DefaultRename
RenameStatus	src/cpu/o3/rename.hh	/^    enum RenameStatus {$/;"	g	class:DefaultRename
RenameStruct	src/cpu/o3/commit.hh	/^    typedef typename CPUPol::RenameStruct RenameStruct;$/;"	t	class:DefaultCommit
RenameStruct	src/cpu/o3/cpu.hh	/^    typedef typename CPUPolicy::RenameStruct RenameStruct;$/;"	t	class:FullO3CPU
RenameStruct	src/cpu/o3/cpu_policy.hh	/^    typedef DefaultRenameDefaultIEW<Impl> RenameStruct;$/;"	t	struct:SimpleCPUPolicy
RenameStruct	src/cpu/o3/iew.hh	/^    typedef typename CPUPol::RenameStruct RenameStruct;$/;"	t	class:DefaultIEW
RenameStruct	src/cpu/o3/rename.hh	/^    typedef typename CPUPol::RenameStruct RenameStruct;$/;"	t	class:DefaultRename
RenameTable	src/cpu/ozone/rename_table.hh	/^class RenameTable {$/;"	c
RenameTable	src/cpu/ozone/rename_table_impl.hh	/^RenameTable<Impl>::RenameTable()$/;"	f	class:RenameTable
Rep	src/arch/x86/types.hh	/^        Rep,$/;"	e	enum:X86ISA::Prefixes
ReplayList	src/cpu/ozone/back_end.hh	/^            ReplayList$/;"	e	enum:BackEnd::InstQueue::queue
Repne	src/arch/x86/types.hh	/^        Repne$/;"	e	enum:X86ISA::Prefixes
ReqLayer	src/mem/coherent_bus.hh	/^    typedef Layer<SlavePort,MasterPort> ReqLayer;$/;"	t	class:CoherentBus
ReqLayer	src/mem/noncoherent_bus.hh	/^    typedef Layer<SlavePort,MasterPort> ReqLayer;$/;"	t	class:NoncoherentBus
ReqMade	src/cpu/base_dyn_inst.hh	/^        ReqMade,$/;"	e	enum:BaseDynInst::Flags
Request	src/mem/request.hh	/^    Request()$/;"	f	class:Request
Request	src/mem/request.hh	/^    Request(Addr paddr, int size, Flags flags, MasterID mid)$/;"	f	class:Request
Request	src/mem/request.hh	/^    Request(Addr paddr, int size, Flags flags, MasterID mid, Tick time)$/;"	f	class:Request
Request	src/mem/request.hh	/^    Request(Addr paddr, int size, Flags flags, MasterID mid, Tick time, Addr pc)$/;"	f	class:Request
Request	src/mem/request.hh	/^    Request(int asid, Addr vaddr, int size, Flags flags, MasterID mid, Addr pc,$/;"	f	class:Request
Request	src/mem/request.hh	/^class Request$/;"	c
RequestCause	src/mem/cache/base.hh	/^    enum RequestCause {$/;"	g	class:BaseCache
RequestPtr	src/mem/request.hh	/^typedef Request* RequestPtr;$/;"	t
RequestState	src/mem/bridge.hh	/^        RequestState(PortID orig_src) : origSrc(orig_src)$/;"	f	class:Bridge::RequestState
RequestState	src/mem/bridge.hh	/^    class RequestState : public Packet::SenderState$/;"	c	class:Bridge
RequestTable	src/mem/ruby/system/Sequencer.hh	/^    typedef m5::hash_map<Address, SequencerRequest*> RequestTable;$/;"	t	class:Sequencer
RequestType	src/mem/slicc/ast/TypeFieldEnumAST.py	/^from slicc.symbols import Event, State, RequestType$/;"	i
RequestType	src/mem/slicc/symbols/RequestType.py	/^class RequestType(Symbol):$/;"	c
RequestType	src/mem/slicc/symbols/__init__.py	/^from slicc.symbols.RequestType import RequestType$/;"	i
Request_MSHR	src/mem/cache/base.hh	/^        Request_MSHR = MSHRQueue_MSHRs,$/;"	e	enum:BaseCache::RequestCause
Request_PF	src/mem/cache/base.hh	/^        Request_PF,$/;"	e	enum:BaseCache::RequestCause
Request_WB	src/mem/cache/base.hh	/^        Request_WB = MSHRQueue_WriteBuffer,$/;"	e	enum:BaseCache::RequestCause
ResGrad_Pri	src/cpu/inorder/resource_pool.hh	/^        ResGrad_Pri,$/;"	e	enum:ResourcePool::ResPoolEventPri
ResPoolEvent	src/cpu/inorder/resource_pool.9stage.cc	/^ResourcePool::ResPoolEvent::ResPoolEvent(ResourcePool *_resPool)$/;"	f	class:ResourcePool::ResPoolEvent
ResPoolEvent	src/cpu/inorder/resource_pool.cc	/^ResourcePool::ResPoolEvent::ResPoolEvent(ResourcePool *_resPool,$/;"	f	class:ResourcePool::ResPoolEvent
ResPoolEvent	src/cpu/inorder/resource_pool.hh	/^    class ResPoolEvent : public Event$/;"	c	class:ResourcePool
ResPoolEventPri	src/cpu/inorder/resource_pool.hh	/^    enum ResPoolEventPri {$/;"	g	class:ResourcePool
ResPoolEventType	src/cpu/inorder/resource_pool.hh	/^    enum ResPoolEventType {$/;"	g	class:ResourcePool
ResPool_Pri	src/cpu/inorder/resource_pool.hh	/^        ResPool_Pri =  InOrderCPU::InOrderCPU_Pri - 5,$/;"	e	enum:ResourcePool::ResPoolEventPri
ResReq	src/cpu/inorder/resource.hh	/^typedef ResourceRequest ResReq;$/;"	t
ResReqPtr	src/cpu/inorder/resource.hh	/^typedef ResourceRequest* ResReqPtr;$/;"	t
ResSchedule	src/cpu/inorder/pipeline_traits.5stage.hh	/^                                         entryCompare> ResSchedule;$/;"	t	namespace:ThePipeline
ResSchedule	src/cpu/inorder/pipeline_traits.9stage.hh	/^                                         entryCompare> ResSchedule;$/;"	t	namespace:ThePipeline
ResSchedule	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^                                         entryCompare> ResSchedule;$/;"	t	namespace:ThePipeline
ResSchedule	src/cpu/inorder/pipeline_traits.hh	/^    typedef ResourceSked ResSchedule;$/;"	t	namespace:ThePipeline
ResSquash_Pri	src/cpu/inorder/resource_pool.hh	/^        ResSquash_Pri$/;"	e	enum:ResourcePool::ResPoolEventPri
Resend	src/dev/x86/i8042.hh	/^        Resend = 0xFE,$/;"	e	enum:X86ISA::PS2Keyboard::Command
Resend	src/dev/x86/i8042.hh	/^        Resend = 0xFE,$/;"	e	enum:X86ISA::PS2Mouse::Command
Reserved	src/arch/arm/pagetable.hh	/^        Reserved,$/;"	m	class:ArmISA::TlbEntry::DomainType
Reserved	src/arch/arm/table_walker.hh	/^            Reserved$/;"	e	enum:ArmISA::TableWalker::L1Descriptor::EntryType
Reserved	src/dev/sparc/iob.hh	/^        Reserved = 3,$/;"	e	enum:Iob::DeviceId
ReservedInstructionFault	src/arch/mips/faults.hh	/^class ReservedInstructionFault : public MipsFault<ReservedInstructionFault> {};$/;"	c	namespace:MipsISA
Reset	src/arch/arm/faults.hh	/^class Reset : public ArmFaultVals<Reset>$/;"	c	namespace:ArmISA
Reset	src/dev/sparc/iob.hh	/^        Reset,$/;"	e	enum:Iob::Type
Reset	src/dev/x86/i8042.hh	/^        Reset = 0xFF$/;"	e	enum:X86ISA::PS2Keyboard::Command
Reset	src/dev/x86/i8042.hh	/^        Reset = 0xFF$/;"	e	enum:X86ISA::PS2Mouse::Command
ResetCtl	src/dev/arm/rv_ctrl.hh	/^        ResetCtl   = 0x40,$/;"	e	enum:RealViewCtrl::__anon67
ResetFault	src/arch/alpha/faults.hh	/^class ResetFault : public AlphaFault$/;"	c	namespace:AlphaISA
ResetFault	src/arch/mips/faults.hh	/^class ResetFault : public MipsFault<ResetFault>$/;"	c	namespace:MipsISA
ResetState	src/arch/x86/decoder.hh	/^        ResetState,$/;"	e	enum:X86ISA::Decoder::State
ResetWrapMode	src/dev/x86/i8042.hh	/^        ResetWrapMode = 0xEC,$/;"	e	enum:X86ISA::PS2Mouse::Command
Resource	src/cpu/inorder/resource.cc	/^Resource::Resource(string res_name, int res_id, int res_width,$/;"	f	class:Resource
Resource	src/cpu/inorder/resource.hh	/^class Resource {$/;"	c
ResourceEvent	src/cpu/inorder/resource.cc	/^ResourceEvent::ResourceEvent()$/;"	f	class:ResourceEvent
ResourceEvent	src/cpu/inorder/resource.cc	/^ResourceEvent::ResourceEvent(Resource *res, int slot_idx)$/;"	f	class:ResourceEvent
ResourceEvent	src/cpu/inorder/resource.hh	/^class ResourceEvent : public Event$/;"	c
ResourceId	src/cpu/inorder/pipeline_traits.hh	/^    enum ResourceId {$/;"	g	namespace:ThePipeline
ResourceList	src/cpu/inorder/pipeline_traits.5stage.hh	/^    enum ResourceList {$/;"	g	namespace:ThePipeline
ResourceList	src/cpu/inorder/pipeline_traits.9stage.hh	/^    enum ResourceList {$/;"	g	namespace:ThePipeline
ResourceList	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^    enum ResourceList {$/;"	g	namespace:ThePipeline
ResourcePool	src/cpu/inorder/resource_pool.9stage.cc	/^ResourcePool::ResourcePool(InOrderCPU *_cpu, InOrderCPUParams *params)$/;"	f	class:ResourcePool
ResourcePool	src/cpu/inorder/resource_pool.cc	/^ResourcePool::ResourcePool(InOrderCPU *_cpu, ThePipeline::Params *params)$/;"	f	class:ResourcePool
ResourcePool	src/cpu/inorder/resource_pool.hh	/^class ResourcePool {$/;"	c
ResourceRequest	src/cpu/inorder/resource.cc	/^ResourceRequest::ResourceRequest(Resource *_res)$/;"	f	class:ResourceRequest
ResourceRequest	src/cpu/inorder/resource.hh	/^class ResourceRequest$/;"	c
ResourceSked	src/cpu/inorder/resource_sked.cc	/^ResourceSked::ResourceSked()$/;"	f	class:ResourceSked
ResourceSked	src/cpu/inorder/resource_sked.hh	/^class ResourceSked {$/;"	c
Resource_Event_Pri	src/cpu/inorder/resource.hh	/^        Resource_Event_Pri = 45$/;"	e	enum:ResourceEvent::InOrderPriority
RespLayer	src/mem/coherent_bus.hh	/^    typedef Layer<MasterPort,SlavePort> RespLayer;$/;"	t	class:CoherentBus
RespLayer	src/mem/noncoherent_bus.hh	/^    typedef Layer<MasterPort,SlavePort> RespLayer;$/;"	t	class:NoncoherentBus
Result	src/base/stats/types.hh	/^typedef double Result;$/;"	t	namespace:Stats
Result	src/cpu/base_dyn_inst.hh	/^    union Result {$/;"	u	class:BaseDynInst
Result	src/cpu/checker/cpu.hh	/^    union Result {$/;"	u	class:CheckerCPU
ResultReady	src/cpu/base_dyn_inst.hh	/^        ResultReady,             \/\/\/ Instruction has its result$/;"	e	enum:BaseDynInst::Status
ResultReady	src/cpu/inorder/inorder_dyn_inst.hh	/^        ResultReady,             \/\/\/ Instruction has its result$/;"	e	enum:InOrderDynInst::Status
ResultType	src/cpu/inorder/inorder_dyn_inst.hh	/^    enum ResultType {$/;"	g	class:InOrderDynInst
ResumableError	src/arch/sparc/faults.hh	/^class ResumableError : public SparcFault<ResumableError> {};$/;"	c	namespace:SparcISA
Resume	src/dev/sparc/iob.hh	/^        Resume$/;"	e	enum:Iob::Type
ReturnAddrStack	src/cpu/pred/ras.hh	/^    ReturnAddrStack() {}$/;"	f	class:ReturnAddrStack
ReturnAddrStack	src/cpu/pred/ras.hh	/^class ReturnAddrStack$/;"	c
ReturnAddressReg	src/arch/alpha/registers.hh	/^const RegIndex ReturnAddressReg = 26;$/;"	m	namespace:AlphaISA
ReturnAddressReg	src/arch/arm/registers.hh	/^const int ReturnAddressReg = INTREG_LR;$/;"	m	namespace:ArmISA
ReturnAddressReg	src/arch/mips/registers.hh	/^const int ReturnAddressReg = 31;$/;"	m	namespace:MipsISA
ReturnAddressReg	src/arch/sparc/registers.hh	/^const int ReturnAddressReg = 31; \/\/ post call, precall is 15$/;"	m	namespace:SparcISA
ReturnAddressReg	src/arch/x86/registers.hh	/^const int ReturnAddressReg = 0;$/;"	m	namespace:X86ISA
ReturnStatementAST	src/mem/slicc/ast/ReturnStatementAST.py	/^class ReturnStatementAST(StatementAST):$/;"	c
ReturnValueReg	src/arch/alpha/registers.hh	/^const RegIndex ReturnValueReg = 0;$/;"	m	namespace:AlphaISA
ReturnValueReg	src/arch/arm/registers.hh	/^const int ReturnValueReg = 0;$/;"	m	namespace:ArmISA
ReturnValueReg	src/arch/mips/registers.hh	/^const int ReturnValueReg = 2;$/;"	m	namespace:MipsISA
ReturnValueReg	src/arch/power/registers.hh	/^const int ReturnValueReg = 3;$/;"	m	namespace:PowerISA
ReturnValueReg	src/arch/sparc/registers.hh	/^const int ReturnValueReg = 8;  \/\/ Post return, 24 is pre-return.$/;"	m	namespace:SparcISA
ReturnValueReg	src/arch/x86/registers.hh	/^const int ReturnValueReg = INTREG_RAX;$/;"	m	namespace:X86ISA
ReturnValueReg1	src/arch/arm/registers.hh	/^const int ReturnValueReg1 = 1;$/;"	m	namespace:ArmISA
ReturnValueReg2	src/arch/arm/registers.hh	/^const int ReturnValueReg2 = 2;$/;"	m	namespace:ArmISA
RevTag	src/arch/arm/linux/atag.hh	/^    RevTag    = 0x54410007,$/;"	e	enum:__anon5
Revision	src/dev/CopyEngine.py	/^    Revision = 0xA2 # CM2 stepping (newest listed)$/;"	v	class:CopyEngine
Revision	src/dev/Ide.py	/^    Revision = 0x0$/;"	v	class:IdeController
Revision	src/dev/Pci.py	/^    Revision = Param.UInt8(0, "Device")$/;"	v	class:PciDevice
RexPrefix	src/arch/x86/types.hh	/^        RexPrefix,$/;"	e	enum:X86ISA::Prefixes
RfeOp	src/arch/arm/insts/mem.hh	/^    RfeOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::RfeOp
RfeOp	src/arch/arm/insts/mem.hh	/^class RfeOp : public MightBeMicro$/;"	c	namespace:ArmISA
RobEntry	src/cpu/base_dyn_inst.hh	/^        RobEntry,                \/\/\/ Instruction is in the ROB$/;"	e	enum:BaseDynInst::Status
RobEntry	src/cpu/inorder/inorder_dyn_inst.hh	/^        RobEntry,                \/\/\/ Instruction is in the ROB$/;"	e	enum:InOrderDynInst::Status
Rom	src/arch/micro_asm.py	/^class Rom(Micro_Container):$/;"	c
Rom	src/arch/micro_asm_test.py	/^from micro_asm import MicroAssembler, Combinational_Macroop, Rom_Macroop, Rom$/;"	i
Rom_Macroop	src/arch/micro_asm.py	/^class Rom_Macroop(object):$/;"	c
Rom_Macroop	src/arch/micro_asm_test.py	/^from micro_asm import MicroAssembler, Combinational_Macroop, Rom_Macroop, Rom$/;"	i
Root	src/python/m5/SimObject.py	/^    from m5.objects import Root$/;"	i
Root	src/python/m5/stats/__init__.py	/^from m5.objects import Root$/;"	i
Root	src/sim/Root.py	/^class Root(SimObject):$/;"	c
Root	src/sim/root.cc	/^Root::Root(RootParams *p) : SimObject(p), _enabled(false),$/;"	f	class:Root
Root	src/sim/root.hh	/^class Root : public SimObject$/;"	c
RoundMode	src/arch/arm/types.hh	/^    enum RoundMode{$/;"	g	namespace:ArmISA
RoundMode	src/arch/mips/types.hh	/^enum RoundMode{$/;"	g	namespace:MipsISA
RoundPage	src/arch/alpha/utility.hh	/^RoundPage(Addr addr)$/;"	f	namespace:AlphaISA
RoundPage	src/arch/mips/utility.hh	/^RoundPage(Addr addr)$/;"	f	namespace:MipsISA
RoundRobin	src/cpu/inorder/first_stage.hh	/^        RoundRobin$/;"	e	enum:FirstStage::FetchPriority
RoundRobin	src/cpu/o3/commit.hh	/^        RoundRobin,$/;"	e	enum:DefaultCommit::CommitPolicy
RoundRobin	src/cpu/o3/fetch.hh	/^        RoundRobin,$/;"	e	enum:DefaultFetch::FetchPriority
Router	src/mem/ruby/network/garnet/flexible-pipeline/Router.cc	/^Router::Router(const Params *p)$/;"	f	class:Router
Router	src/mem/ruby/network/garnet/flexible-pipeline/Router.hh	/^class Router : public BasicRouter, public FlexibleConsumer$/;"	c
Router_d	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.cc	/^Router_d::Router_d(const Params *p)$/;"	f	class:Router_d
Router_d	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^class Router_d : public BasicRouter$/;"	c
RoutingUnit_d	src/mem/ruby/network/garnet/fixed-pipeline/RoutingUnit_d.cc	/^RoutingUnit_d::RoutingUnit_d(Router_d *router)$/;"	f	class:RoutingUnit_d
RoutingUnit_d	src/mem/ruby/network/garnet/fixed-pipeline/RoutingUnit_d.hh	/^class RoutingUnit_d$/;"	c
RubyCache	src/mem/ruby/system/Cache.py	/^class RubyCache(SimObject):$/;"	c
RubyController	src/mem/ruby/slicc_interface/Controller.py	/^class RubyController(ClockedObject):$/;"	c
RubyController	src/mem/ruby/system/Cache.py	/^from Controller import RubyController$/;"	i
RubyDirectedTester	src/cpu/testers/directedtest/RubyDirectedTester.cc	/^RubyDirectedTester::RubyDirectedTester(const Params *p)$/;"	f	class:RubyDirectedTester
RubyDirectedTester	src/cpu/testers/directedtest/RubyDirectedTester.hh	/^class RubyDirectedTester : public MemObject$/;"	c
RubyDirectedTester	src/cpu/testers/directedtest/RubyDirectedTester.py	/^class RubyDirectedTester(MemObject):$/;"	c
RubyDirectoryMemory	src/mem/ruby/system/DirectoryMemory.py	/^class RubyDirectoryMemory(SimObject):$/;"	c
RubyEvent	src/mem/ruby/system/System.hh	/^        RubyEvent(RubySystem* _ruby_system)$/;"	f	class:RubySystem::RubyEvent
RubyEvent	src/mem/ruby/system/System.hh	/^    class RubyEvent : public Event$/;"	c	class:RubySystem
RubyMemoryControl	src/mem/ruby/system/RubyMemoryControl.cc	/^RubyMemoryControl::RubyMemoryControl(const Params *p)$/;"	f	class:RubyMemoryControl
RubyMemoryControl	src/mem/ruby/system/RubyMemoryControl.hh	/^class RubyMemoryControl : public MemoryControl$/;"	c
RubyMemoryControl	src/mem/ruby/system/RubyMemoryControl.py	/^class RubyMemoryControl(MemoryControl):$/;"	c
RubyNetwork	src/mem/ruby/network/Network.py	/^class RubyNetwork(ClockedObject):$/;"	c
RubyNetwork	src/mem/ruby/network/garnet/BaseGarnetNetwork.py	/^from Network import RubyNetwork$/;"	i
RubyNetwork	src/mem/ruby/network/simple/SimpleNetwork.py	/^from Network import RubyNetwork$/;"	i
RubyPort	src/mem/ruby/system/RubyPort.cc	/^RubyPort::RubyPort(const Params *p)$/;"	f	class:RubyPort
RubyPort	src/mem/ruby/system/RubyPort.hh	/^class RubyPort : public MemObject$/;"	c
RubyPort	src/mem/ruby/system/Sequencer.py	/^class RubyPort(MemObject):$/;"	c
RubyPortProxy	src/mem/ruby/system/RubyPortProxy.cc	/^RubyPortProxy::RubyPortProxy(const RubyPortProxyParams* p) :$/;"	f	class:RubyPortProxy
RubyPortProxy	src/mem/ruby/system/RubyPortProxy.hh	/^class RubyPortProxy : public RubyPort$/;"	c
RubyPortProxy	src/mem/ruby/system/Sequencer.py	/^class RubyPortProxy(RubyPort):$/;"	c
RubyRequest	src/mem/ruby/slicc_interface/RubyRequest.hh	/^    RubyRequest(Tick curTime) : Message(curTime) {}$/;"	f	class:RubyRequest
RubyRequest	src/mem/ruby/slicc_interface/RubyRequest.hh	/^    RubyRequest(Tick curTime, uint64_t _paddr, uint8_t* _data, int _len,$/;"	f	class:RubyRequest
RubyRequest	src/mem/ruby/slicc_interface/RubyRequest.hh	/^class RubyRequest : public Message$/;"	c
RubySequencer	src/mem/ruby/system/Sequencer.py	/^class RubySequencer(RubyPort):$/;"	c
RubyStatsCallback	src/mem/ruby/system/System.hh	/^    RubyStatsCallback(RubySystem *system) : ruby_system(system) {}$/;"	f	class:RubyStatsCallback
RubyStatsCallback	src/mem/ruby/system/System.hh	/^class RubyStatsCallback : public Callback$/;"	c
RubySystem	src/mem/ruby/system/RubySystem.py	/^class RubySystem(ClockedObject):$/;"	c
RubySystem	src/mem/ruby/system/System.cc	/^RubySystem::RubySystem(const Params *p)$/;"	f	class:RubySystem
RubySystem	src/mem/ruby/system/System.hh	/^class RubySystem : public ClockedObject$/;"	c
RubyTester	src/cpu/testers/rubytest/RubyTester.cc	/^RubyTester::RubyTester(const Params *p)$/;"	f	class:RubyTester
RubyTester	src/cpu/testers/rubytest/RubyTester.hh	/^class RubyTester : public MemObject$/;"	c
RubyTester	src/cpu/testers/rubytest/RubyTester.py	/^class RubyTester(MemObject):$/;"	c
RubyWireBuffer	src/mem/ruby/system/WireBuffer.py	/^class RubyWireBuffer(SimObject):$/;"	c
Running	src/cpu/inorder/cpu.hh	/^        Running,$/;"	e	enum:InOrderCPU::Status
Running	src/cpu/inorder/pipeline_stage.hh	/^        Running,$/;"	e	enum:PipelineStage::ThreadStatus
Running	src/cpu/kvm/base.hh	/^        Running,$/;"	e	enum:BaseKvmCPU::Status
Running	src/cpu/o3/commit.hh	/^        Running,$/;"	e	enum:DefaultCommit::ThreadStatus
Running	src/cpu/o3/cpu.hh	/^        Running,$/;"	e	enum:FullO3CPU::Status
Running	src/cpu/o3/decode.hh	/^        Running,$/;"	e	enum:DefaultDecode::ThreadStatus
Running	src/cpu/o3/fetch.hh	/^        Running,$/;"	e	enum:DefaultFetch::ThreadStatus
Running	src/cpu/o3/iew.hh	/^        Running,$/;"	e	enum:DefaultIEW::StageStatus
Running	src/cpu/o3/rename.hh	/^        Running,$/;"	e	enum:DefaultRename::ThreadStatus
Running	src/cpu/o3/rob.hh	/^        Running,$/;"	e	enum:ROB::Status
Running	src/cpu/ozone/back_end.hh	/^        Running,$/;"	e	enum:BackEnd::Status
Running	src/cpu/ozone/cpu.hh	/^        Running,$/;"	e	enum:OzoneCPU::Status
Running	src/cpu/ozone/front_end.hh	/^        Running,$/;"	e	enum:FrontEnd::Status
Running	src/cpu/ozone/inorder_back_end.hh	/^        Running,$/;"	e	enum:InorderBackEnd::Status
Running	src/cpu/ozone/lsq_unit.hh	/^        Running,$/;"	e	enum:OzoneLSQ::Status
Running	src/cpu/ozone/lw_back_end.hh	/^        Running,$/;"	e	enum:LWBackEnd::Status
Running	src/cpu/ozone/lw_lsq.hh	/^        Running,$/;"	e	enum:OzoneLWLSQ::Status
Running	src/cpu/simple/base.hh	/^        Running,$/;"	e	enum:BaseSimpleCPU::Status
Running	src/sim/drain.hh	/^        Running,  \/** Running normally *\/$/;"	e	enum:Drainable::State
RunningService	src/cpu/kvm/base.hh	/^        RunningService,$/;"	e	enum:BaseKvmCPU::Status
RunningServiceCompletion	src/cpu/kvm/base.hh	/^        RunningServiceCompletion,$/;"	e	enum:BaseKvmCPU::Status
RxData	src/dev/sinic.hh	/^        uint64_t RxData;       \/\/ 0x40$/;"	m	struct:Sinic::Device::__anon83
RxData	src/dev/sinic.hh	/^        uint64_t RxData;$/;"	m	struct:Sinic::Device::VirtualReg
RxDesc	src/dev/i8254xGBe_defs.hh	/^struct RxDesc {$/;"	s	namespace:iGbReg
RxDescCache	src/dev/i8254xGBe.cc	/^IGbE::RxDescCache::RxDescCache(IGbE *i, const std::string n, int s)$/;"	f	class:IGbE::RxDescCache
RxDescCache	src/dev/i8254xGBe.hh	/^    class RxDescCache : public DescCache<iGbReg::RxDesc>$/;"	c	class:IGbE
RxDone	src/dev/sinic.hh	/^        uint64_t RxDone;       \/\/ 0x48$/;"	m	struct:Sinic::Device::__anon83
RxDone	src/dev/sinic.hh	/^        uint64_t RxDone;$/;"	m	struct:Sinic::Device::VirtualReg
RxFifoHigh	src/dev/sinic.hh	/^        uint32_t RxFifoHigh;   \/\/ 0x38$/;"	m	struct:Sinic::Device::__anon83
RxFifoLow	src/dev/sinic.hh	/^        uint32_t RxFifoLow;    \/\/ 0x30$/;"	m	struct:Sinic::Device::__anon83
RxFifoSize	src/dev/sinic.hh	/^        uint32_t RxFifoSize;   \/\/ 0x28$/;"	m	struct:Sinic::Device::__anon83
RxKickEvent	src/dev/ns_gige.hh	/^    typedef EventWrapper<NSGigE, &NSGigE::rxKick> RxKickEvent;$/;"	t	class:NSGigE
RxKickEvent	src/dev/sinic.hh	/^    typedef EventWrapper<Device, &Device::rxKick> RxKickEvent;$/;"	t	class:Sinic::Device
RxMaxCopy	src/dev/sinic.hh	/^        uint32_t RxMaxCopy;    \/\/ 0x10$/;"	m	struct:Sinic::Device::__anon83
RxMaxIntr	src/dev/sinic.hh	/^        uint32_t RxMaxIntr;    \/\/ 0x24$/;"	m	struct:Sinic::Device::__anon83
RxState	src/dev/ns_gige.hh	/^    enum RxState$/;"	g	class:NSGigE
RxState	src/dev/sinic.hh	/^    enum RxState {$/;"	g	class:Sinic::Device
RxStateStrings	src/dev/sinic.cc	/^const char *RxStateStrings[] =$/;"	m	namespace:Sinic	file:
RxStatus	src/dev/sinic.hh	/^        uint64_t RxStatus;     \/\/ 0x78$/;"	m	struct:Sinic::Device::__anon83
RxWait	src/dev/sinic.hh	/^        uint64_t RxWait;       \/\/ 0x50$/;"	m	struct:Sinic::Device::__anon83
S1CTran	src/arch/arm/tlb.hh	/^        S1CTran = 0x1,$/;"	e	enum:ArmISA::TLB::ArmTranslationType
S1PTW	src/arch/arm/faults.hh	/^        S1PTW, \/\/ DataAbort, PrefetchAbort: Stage 1 Page Table Walk,$/;"	e	enum:ArmISA::ArmFault::AnnotationIDs
S1S2NsTran	src/arch/arm/tlb.hh	/^        S1S2NsTran = 0x4$/;"	e	enum:ArmISA::TLB::ArmTranslationType
SAS	src/arch/arm/faults.hh	/^        SAS,   \/\/ DataAbort: Syndrome Access Size$/;"	e	enum:ArmISA::ArmFault::AnnotationIDs
SATA_DMA_SETUP_AUTO	src/dev/ide_atareg.h	/^#define SATA_DMA_SETUP_AUTO	/;"	d
SATA_DRIVE_PWR_MGMT	src/dev/ide_atareg.h	/^#define SATA_DRIVE_PWR_MGMT	/;"	d
SATA_HOST_PWR_MGMT	src/dev/ide_atareg.h	/^#define SATA_HOST_PWR_MGMT	/;"	d
SATA_NATIVE_CMDQ	src/dev/ide_atareg.h	/^#define SATA_NATIVE_CMDQ	/;"	d
SATA_NONZERO_OFFSETS	src/dev/ide_atareg.h	/^#define SATA_NONZERO_OFFSETS	/;"	d
SATA_SIGNAL_GEN1	src/dev/ide_atareg.h	/^#define SATA_SIGNAL_GEN1	/;"	d
SATA_SIGNAL_GEN2	src/dev/ide_atareg.h	/^#define SATA_SIGNAL_GEN2	/;"	d
SATURATE	src/arch/mips/dsp.hh	/^enum { NOSATURATE, SATURATE };$/;"	e	enum:MipsISA::__anon18
SA_	src/mem/ruby/network/garnet/NetworkHeader.hh	/^enum flit_stage {I_, VA_, SA_, ST_, LT_, NUM_FLIT_STAGE_};$/;"	e	enum:flit_stage
SCUpgradeFailReq	src/mem/packet.hh	/^        SCUpgradeFailReq,       \/\/ Failed SCUpgradeReq in MSHR (never sent)$/;"	e	enum:MemCmd::Command
SCUpgradeReq	src/mem/packet.hh	/^        SCUpgradeReq,           \/\/ Special "weak" upgrade for StoreCond$/;"	e	enum:MemCmd::Command
SCache	src/base/cp_annotate.hh	/^    typedef m5::hash_map<std::string, int> SCache;$/;"	t	class:CPA
SE	src/arch/x86/regs/int.hh	/^        SignedBitfield<31,0> SE;$/;"	m	namespace:X86ISA
SECTOR_OFFSET	src/dev/ide_disk.hh	/^#define SECTOR_OFFSET /;"	d
SECURE	src/mem/request.hh	/^    static const FlagsType SECURE                      = 0x10000000;$/;"	m	class:Request
SEGMENT_REG_CS	src/arch/x86/regs/segment.hh	/^        SEGMENT_REG_CS,$/;"	e	enum:X86ISA::SegmentRegIndex
SEGMENT_REG_DS	src/arch/x86/regs/segment.hh	/^        SEGMENT_REG_DS,$/;"	e	enum:X86ISA::SegmentRegIndex
SEGMENT_REG_ES	src/arch/x86/regs/segment.hh	/^        SEGMENT_REG_ES,$/;"	e	enum:X86ISA::SegmentRegIndex
SEGMENT_REG_FS	src/arch/x86/regs/segment.hh	/^        SEGMENT_REG_FS,$/;"	e	enum:X86ISA::SegmentRegIndex
SEGMENT_REG_GS	src/arch/x86/regs/segment.hh	/^        SEGMENT_REG_GS,$/;"	e	enum:X86ISA::SegmentRegIndex
SEGMENT_REG_HS	src/arch/x86/regs/segment.hh	/^        SEGMENT_REG_HS, \/\/ Temporary descriptor$/;"	e	enum:X86ISA::SegmentRegIndex
SEGMENT_REG_LS	src/arch/x86/regs/segment.hh	/^        SEGMENT_REG_LS, \/\/ Flat segment$/;"	e	enum:X86ISA::SegmentRegIndex
SEGMENT_REG_MS	src/arch/x86/regs/segment.hh	/^        SEGMENT_REG_MS, \/\/ Emulation memory$/;"	e	enum:X86ISA::SegmentRegIndex
SEGMENT_REG_SS	src/arch/x86/regs/segment.hh	/^        SEGMENT_REG_SS,$/;"	e	enum:X86ISA::SegmentRegIndex
SEGMENT_REG_TSG	src/arch/x86/regs/segment.hh	/^        SEGMENT_REG_TSG, \/\/ Global descriptor table$/;"	e	enum:X86ISA::SegmentRegIndex
SEGMENT_REG_TSL	src/arch/x86/regs/segment.hh	/^        SEGMENT_REG_TSL, \/\/ Local descriptor table$/;"	e	enum:X86ISA::SegmentRegIndex
SEG_CS_TYPE_ACCESSED	src/cpu/kvm/x86_cpu.cc	/^#define SEG_CS_TYPE_ACCESSED /;"	d	file:
SEG_CS_TYPE_READ_ACCESSED	src/cpu/kvm/x86_cpu.cc	/^#define SEG_CS_TYPE_READ_ACCESSED /;"	d	file:
SEG_SYS_TYPE_TSS_AVAILABLE	src/cpu/kvm/x86_cpu.cc	/^#define SEG_SYS_TYPE_TSS_AVAILABLE /;"	d	file:
SEG_SYS_TYPE_TSS_BUSY	src/cpu/kvm/x86_cpu.cc	/^#define SEG_SYS_TYPE_TSS_BUSY /;"	d	file:
SEG_TYPE_BIT_ACCESSED	src/cpu/kvm/x86_cpu.cc	/^#define SEG_TYPE_BIT_ACCESSED /;"	d	file:
SELECT_DEV_BIT	src/dev/ide_disk.hh	/^#define SELECT_DEV_BIT /;"	d
SELECT_OFFSET	src/dev/ide_disk.hh	/^#define SELECT_OFFSET /;"	d
SERIALIZE_ARRAY	src/sim/serialize.hh	/^#define SERIALIZE_ARRAY(/;"	d
SERIALIZE_ENUM	src/sim/serialize.hh	/^#define SERIALIZE_ENUM(/;"	d
SERIALIZE_OBJPTR	src/sim/serialize.hh	/^#define SERIALIZE_OBJPTR(/;"	d
SERIALIZE_SCALAR	src/sim/serialize.hh	/^#define SERIALIZE_SCALAR(/;"	d
SET1	src/mem/packet.cc	/^#define SET1(/;"	d	file:
SET2	src/mem/packet.cc	/^#define SET2(/;"	d	file:
SET3	src/mem/packet.cc	/^#define SET3(/;"	d	file:
SET4	src/mem/packet.cc	/^#define SET4(/;"	d	file:
SET5	src/mem/packet.cc	/^#define SET5(/;"	d	file:
SET6	src/mem/packet.cc	/^#define SET6(/;"	d	file:
SET_FEATURES	src/dev/ide_wdcreg.h	/^#define SET_FEATURES	/;"	d
SETranslatingPortProxy	src/mem/se_translating_port_proxy.cc	/^SETranslatingPortProxy::SETranslatingPortProxy(MasterPort& port, Process *p,$/;"	f	class:SETranslatingPortProxy
SETranslatingPortProxy	src/mem/se_translating_port_proxy.hh	/^class SETranslatingPortProxy : public PortProxy$/;"	c
SF	src/arch/arm/faults.hh	/^        SF,    \/\/ DataAbort: width of the accessed register is SixtyFour$/;"	e	enum:ArmISA::ArmFault::AnnotationIDs
SF	src/arch/x86/insts/microop.hh	/^            SF,$/;"	e	enum:X86ISA::ConditionTests::CondTest
SFBit	src/arch/x86/regs/misc.hh	/^        SFBit = 1 << 7,$/;"	e	enum:X86ISA::CondFlagBit
SGI_MASK	src/dev/arm/gic_pl390.hh	/^    static const int SGI_MASK = 0xFFFF0000;$/;"	m	class:Pl390
SGI_MAX	src/dev/arm/gic_pl390.hh	/^    static const int SGI_MAX = 16;  \/\/ Number of Software Gen Interrupts$/;"	m	class:Pl390
SH	src/arch/sparc/faults.hh	/^        SH = -1,$/;"	e	enum:SparcISA::SparcFaultBase::PrivilegeLevel
SH	src/arch/x86/regs/int.hh	/^        SignedBitfield<15,8> SH;$/;"	m	namespace:X86ISA
SHARED	src/mem/packet.hh	/^    static const FlagsType SHARED                 = 0x00000001;$/;"	m	class:Packet
SHOW_SIM_OUTPUT	src/mem/dramsim2_wrapper.cc	/^int SHOW_SIM_OUTPUT = 0;$/;"	v
SIBState	src/arch/x86/decoder.hh	/^        SIBState,$/;"	e	enum:X86ISA::Decoder::State
SIGNED	src/arch/mips/dsp.hh	/^enum { UNSIGNED, SIGNED };$/;"	e	enum:MipsISA::__anon17
SIMDFloatingPointFault	src/arch/x86/faults.hh	/^        SIMDFloatingPointFault() :$/;"	f	class:X86ISA::SIMDFloatingPointFault
SIMDFloatingPointFault	src/arch/x86/faults.hh	/^    class SIMDFloatingPointFault : public X86Fault$/;"	c	namespace:X86ISA
SIMD_FMT_L	src/arch/mips/dsp.hh	/^    SIMD_FMT_L,    \/\/ long word$/;"	e	enum:MipsISA::__anon13
SIMD_FMT_PH	src/arch/mips/dsp.hh	/^    SIMD_FMT_PH,   \/\/ paired halfword$/;"	e	enum:MipsISA::__anon13
SIMD_FMT_QB	src/arch/mips/dsp.hh	/^    SIMD_FMT_QB,   \/\/ quad byte$/;"	e	enum:MipsISA::__anon13
SIMD_FMT_W	src/arch/mips/dsp.hh	/^    SIMD_FMT_W,    \/\/ word$/;"	e	enum:MipsISA::__anon13
SIMD_LOG2N	src/arch/mips/dsp.hh	/^const uint32_t SIMD_LOG2N[SIMD_NUM_FMTS] = { 6, 5, 4, 3 };$/;"	m	namespace:MipsISA
SIMD_MAX_VALS	src/arch/mips/dsp.hh	/^const uint32_t SIMD_MAX_VALS = 4;$/;"	m	namespace:MipsISA
SIMD_NBITS	src/arch/mips/dsp.hh	/^const uint32_t SIMD_NBITS[SIMD_NUM_FMTS] = { 64, 32, 16, 8 };$/;"	m	namespace:MipsISA
SIMD_NUM_FMTS	src/arch/mips/dsp.hh	/^    SIMD_NUM_FMTS$/;"	e	enum:MipsISA::__anon13
SIMD_NVALS	src/arch/mips/dsp.hh	/^const uint32_t SIMD_NVALS[SIMD_NUM_FMTS] = { 1, 1, 2, 4 };$/;"	m	namespace:MipsISA
SIMD_Unit	src/cpu/o3/FuncUnitConfig.py	/^class SIMD_Unit(FUDesc):$/;"	c
SINGLE_BITLINE	src/mem/ruby/network/orion/Buffer/PrechargeUnit.hh	/^      SINGLE_BITLINE,$/;"	e	enum:PrechargeUnit::PrechargeModel
SINGLE_OTHER	src/mem/ruby/network/orion/Buffer/PrechargeUnit.hh	/^      SINGLE_OTHER$/;"	e	enum:PrechargeUnit::PrechargeModel
SINGLE_TO_DOUBLE	src/arch/arm/types.hh	/^        SINGLE_TO_DOUBLE,$/;"	e	enum:ArmISA::ConvertType
SINGLE_TO_DOUBLE	src/arch/mips/types.hh	/^    SINGLE_TO_DOUBLE,$/;"	e	enum:MipsISA::ConvertType
SINGLE_TO_LONG	src/arch/arm/types.hh	/^        SINGLE_TO_LONG,$/;"	e	enum:ArmISA::ConvertType
SINGLE_TO_LONG	src/arch/mips/types.hh	/^    SINGLE_TO_LONG,$/;"	e	enum:MipsISA::ConvertType
SINGLE_TO_WORD	src/arch/arm/types.hh	/^        SINGLE_TO_WORD,$/;"	e	enum:ArmISA::ConvertType
SINGLE_TO_WORD	src/arch/mips/types.hh	/^    SINGLE_TO_WORD,$/;"	e	enum:MipsISA::ConvertType
SIPI	src/arch/x86/intmessage.hh	/^            SIPI = 6,$/;"	e	enum:X86ISA::DeliveryMode::IntDeliveryMode
SL	src/arch/x86/regs/int.hh	/^        SignedBitfield<7, 0> SL;$/;"	m	namespace:X86ISA
SLICC	src/mem/slicc/main.py	/^from slicc.parser import SLICC$/;"	i
SLICC	src/mem/slicc/parser.py	/^class SLICC(Grammar):$/;"	c
SMBios	src/arch/x86/bios/smbios.hh	/^namespace SMBios$/;"	n	namespace:X86ISA
SMBios	src/arch/x86/system.hh	/^    namespace SMBios$/;"	n	namespace:X86ISA
SMBiosHeader	src/arch/x86/bios/smbios.hh	/^        SMBiosHeader()$/;"	f	struct:X86ISA::SMBios::SMBiosTable::SMBiosHeader
SMBiosHeader	src/arch/x86/bios/smbios.hh	/^    struct SMBiosHeader$/;"	s	class:X86ISA::SMBios::SMBiosTable
SMBiosStructure	src/arch/x86/bios/smbios.cc	/^X86ISA::SMBios::SMBiosStructure::SMBiosStructure(Params * p, uint8_t _type) :$/;"	f	class:X86ISA::SMBios::SMBiosStructure
SMBiosStructure	src/arch/x86/bios/smbios.hh	/^class SMBiosStructure : public SimObject$/;"	c	namespace:X86ISA::SMBios
SMBiosTable	src/arch/x86/bios/smbios.cc	/^X86ISA::SMBios::SMBiosTable::SMBiosTable(Params * p) :$/;"	f	class:X86ISA::SMBios::SMBiosTable
SMBiosTable	src/arch/x86/bios/smbios.hh	/^class SMBiosTable : public SimObject$/;"	c	namespace:X86ISA::SMBios
SMI	src/arch/x86/intmessage.hh	/^            SMI = 2,$/;"	e	enum:X86ISA::DeliveryMode::IntDeliveryMode
SMT	src/cpu/inorder/cpu.hh	/^        SMT,$/;"	e	enum:InOrderCPU::ThreadModel
SMT_MAX_THREADS	src/cpu/smt.hh	/^#define SMT_MAX_THREADS /;"	d
SNHash	src/cpu/o3/mem_dep_unit.hh	/^struct SNHash {$/;"	s
SPARC32	src/base/loader/object_file.hh	/^        SPARC32,$/;"	e	enum:ObjectFile::Arch
SPARC64	src/base/loader/object_file.hh	/^        SPARC64,$/;"	e	enum:ObjectFile::Arch
SPAlignmentCheckEnabled	src/arch/arm/utility.cc	/^SPAlignmentCheckEnabled(ThreadContext* tc)$/;"	f	namespace:ArmISA
SPAlignmentFault	src/arch/arm/faults.cc	/^SPAlignmentFault::SPAlignmentFault()$/;"	f	class:ArmISA::SPAlignmentFault
SPAlignmentFault	src/arch/arm/faults.hh	/^class SPAlignmentFault : public ArmFaultVals<SPAlignmentFault>$/;"	c	namespace:ArmISA
SPDSTS_POLARITY	src/dev/ns_gige_reg.h	/^SPDSTS_POLARITY(int lnksts)$/;"	f
SPURIOUS_INT	src/dev/arm/gic_pl390.hh	/^    static const int SPURIOUS_INT = 1023;$/;"	m	class:Pl390
SQEntries	src/cpu/o3/O3CPU.py	/^    SQEntries = Param.Unsigned(32, "Number of store queue entries")$/;"	v	class:DerivO3CPU
SQEntries	src/cpu/o3/lsq.hh	/^    unsigned SQEntries;$/;"	m	class:LSQ
SQEntries	src/cpu/o3/lsq_unit.hh	/^    unsigned SQEntries;$/;"	m	class:LSQUnit
SQEntries	src/cpu/ozone/OzoneCPU.py	/^    SQEntries = Param.Unsigned("Number of store queue entries")$/;"	v	class:DerivOzoneCPU
SQEntries	src/cpu/ozone/SimpleOzoneCPU.py	/^    SQEntries = Param.Unsigned("Number of store queue entries")$/;"	v	class:SimpleOzoneCPU
SQEntries	src/cpu/ozone/lsq_unit.hh	/^    unsigned SQEntries;$/;"	m	class:OzoneLSQ
SQEntries	src/cpu/ozone/lw_lsq.hh	/^    unsigned SQEntries;$/;"	m	class:OzoneLWLSQ
SQEntries	src/cpu/ozone/simple_params.hh	/^    unsigned SQEntries;$/;"	m	class:SimpleParams
SQEntry	src/cpu/o3/lsq_unit.hh	/^        SQEntry()$/;"	f	struct:LSQUnit::SQEntry
SQEntry	src/cpu/o3/lsq_unit.hh	/^        SQEntry(DynInstPtr &_inst)$/;"	f	struct:LSQUnit::SQEntry
SQEntry	src/cpu/o3/lsq_unit.hh	/^    struct SQEntry {$/;"	s	class:LSQUnit
SQEntry	src/cpu/ozone/lsq_unit.hh	/^        SQEntry()$/;"	f	struct:OzoneLSQ::SQEntry
SQEntry	src/cpu/ozone/lsq_unit.hh	/^        SQEntry(DynInstPtr &_inst)$/;"	f	struct:OzoneLSQ::SQEntry
SQEntry	src/cpu/ozone/lsq_unit.hh	/^    struct SQEntry {$/;"	s	class:OzoneLSQ
SQEntry	src/cpu/ozone/lw_lsq.hh	/^        SQEntry()$/;"	f	struct:OzoneLWLSQ::SQEntry
SQEntry	src/cpu/ozone/lw_lsq.hh	/^        SQEntry(DynInstPtr &_inst)$/;"	f	struct:OzoneLWLSQ::SQEntry
SQEntry	src/cpu/ozone/lw_lsq.hh	/^    struct SQEntry {$/;"	s	class:OzoneLWLSQ
SQHashIt	src/cpu/ozone/lw_lsq.hh	/^    typedef typename m5::hash_map<int, SQIt, HashFn>::iterator SQHashIt;$/;"	t	class:OzoneLWLSQ
SQIndices	src/cpu/ozone/lw_lsq.hh	/^    std::queue<int> SQIndices;$/;"	m	class:OzoneLWLSQ
SQIt	src/cpu/ozone/lw_lsq.hh	/^    typedef typename std::list<SQEntry>::iterator SQIt;$/;"	t	class:OzoneLWLSQ
SQItHash	src/cpu/ozone/lw_lsq.hh	/^    m5::hash_map<int, SQIt, HashFn> SQItHash;$/;"	m	class:OzoneLWLSQ
SR	src/arch/x86/regs/int.hh	/^        SignedBitfield<63,0> SR;$/;"	m	namespace:X86ISA
SRAM	src/mem/ruby/network/orion/Buffer/SRAM.cc	/^SRAM::SRAM($/;"	f	class:SRAM
SRAM	src/mem/ruby/network/orion/Buffer/SRAM.hh	/^class SRAM$/;"	c
SRR	src/dev/ns_gige_reg.h	/^    SRR =               0x58,$/;"	e	enum:DeviceRegisterAddress
SRRCTL	src/dev/i8254xGBe_defs.hh	/^    struct SRRCTL : public Reg<uint32_t> { \/\/ 0x280C SRRCTL Register$/;"	s	struct:iGbReg::Regs
SRT	src/arch/arm/faults.hh	/^        SRT,   \/\/ DataAbort: Syndrome Register Transfer$/;"	e	enum:ArmISA::ArmFault::AnnotationIDs
SS	src/arch/x86/decoder_tables.cc	/^    const uint8_t SS = SSOverride;$/;"	m	namespace:X86ISA	file:
SSE	src/arch/arm/faults.hh	/^        SSE,   \/\/ DataAbort: Syndrome Sign Extend$/;"	e	enum:ArmISA::ArmFault::AnnotationIDs
SSI	src/dev/sparc/iob.hh	/^        SSI = 2,$/;"	e	enum:Iob::DeviceId
SSID	src/cpu/o3/store_set.hh	/^    typedef unsigned SSID;$/;"	t	class:StoreSet
SSIT	src/cpu/o3/store_set.hh	/^    std::vector<SSID> SSIT;$/;"	m	class:StoreSet
SSITSize	src/cpu/o3/O3CPU.py	/^    SSITSize = Param.Unsigned(1024, "Store set ID table size")$/;"	v	class:DerivO3CPU
SSITSize	src/cpu/o3/store_set.hh	/^    int SSITSize;$/;"	m	class:StoreSet
SSITSize	src/cpu/ozone/OzoneCPU.py	/^    SSITSize = Param.Unsigned("Store set ID table size")$/;"	v	class:DerivOzoneCPU
SSITSize	src/cpu/ozone/SimpleOzoneCPU.py	/^    SSITSize = Param.Unsigned("Store set ID table size")$/;"	v	class:SimpleOzoneCPU
SSITSize	src/cpu/ozone/simple_params.hh	/^    unsigned SSITSize;$/;"	m	class:SimpleParams
SSI_IEEE_FP_CONTROL	src/arch/alpha/linux/linux.hh	/^    static const unsigned SSI_IEEE_FP_CONTROL = 14; \/\/!< ieee_set_fp_control()$/;"	m	class:AlphaLinux
SSI_IEEE_FP_CONTROL	src/arch/alpha/tru64/tru64.hh	/^    static const unsigned SSI_IEEE_FP_CONTROL = 14; \/\/!< ieee_set_fp_control()$/;"	m	class:AlphaTru64
SSI_IEEE_FP_CONTROL	src/arch/mips/linux/linux.hh	/^    static const unsigned SSI_IEEE_FP_CONTROL = 14; \/\/!< ieee_set_fp_control()$/;"	m	class:MipsLinux
SSOverride	src/arch/x86/types.hh	/^        SSOverride,$/;"	e	enum:X86ISA::Prefixes
STAGGERED	src/mem/ruby/network/orion/Wire.hh	/^      STAGGERED$/;"	e	enum:Wire::BufferScheme
STATE_CPSR	src/arch/arm/nativetrace.hh	/^        STATE_CPSR,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_F0	src/arch/arm/nativetrace.hh	/^        STATE_F0, STATE_F1, STATE_F2, STATE_F3, STATE_F4, STATE_F5, STATE_F6,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_F1	src/arch/arm/nativetrace.hh	/^        STATE_F0, STATE_F1, STATE_F2, STATE_F3, STATE_F4, STATE_F5, STATE_F6,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_F10	src/arch/arm/nativetrace.hh	/^        STATE_F7, STATE_F8, STATE_F9, STATE_F10, STATE_F11, STATE_F12,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_F11	src/arch/arm/nativetrace.hh	/^        STATE_F7, STATE_F8, STATE_F9, STATE_F10, STATE_F11, STATE_F12,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_F12	src/arch/arm/nativetrace.hh	/^        STATE_F7, STATE_F8, STATE_F9, STATE_F10, STATE_F11, STATE_F12,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_F13	src/arch/arm/nativetrace.hh	/^        STATE_F13, STATE_F14, STATE_F15, STATE_F16, STATE_F17, STATE_F18,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_F14	src/arch/arm/nativetrace.hh	/^        STATE_F13, STATE_F14, STATE_F15, STATE_F16, STATE_F17, STATE_F18,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_F15	src/arch/arm/nativetrace.hh	/^        STATE_F13, STATE_F14, STATE_F15, STATE_F16, STATE_F17, STATE_F18,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_F16	src/arch/arm/nativetrace.hh	/^        STATE_F13, STATE_F14, STATE_F15, STATE_F16, STATE_F17, STATE_F18,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_F17	src/arch/arm/nativetrace.hh	/^        STATE_F13, STATE_F14, STATE_F15, STATE_F16, STATE_F17, STATE_F18,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_F18	src/arch/arm/nativetrace.hh	/^        STATE_F13, STATE_F14, STATE_F15, STATE_F16, STATE_F17, STATE_F18,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_F19	src/arch/arm/nativetrace.hh	/^        STATE_F19, STATE_F20, STATE_F21, STATE_F22, STATE_F23, STATE_F24,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_F2	src/arch/arm/nativetrace.hh	/^        STATE_F0, STATE_F1, STATE_F2, STATE_F3, STATE_F4, STATE_F5, STATE_F6,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_F20	src/arch/arm/nativetrace.hh	/^        STATE_F19, STATE_F20, STATE_F21, STATE_F22, STATE_F23, STATE_F24,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_F21	src/arch/arm/nativetrace.hh	/^        STATE_F19, STATE_F20, STATE_F21, STATE_F22, STATE_F23, STATE_F24,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_F22	src/arch/arm/nativetrace.hh	/^        STATE_F19, STATE_F20, STATE_F21, STATE_F22, STATE_F23, STATE_F24,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_F23	src/arch/arm/nativetrace.hh	/^        STATE_F19, STATE_F20, STATE_F21, STATE_F22, STATE_F23, STATE_F24,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_F24	src/arch/arm/nativetrace.hh	/^        STATE_F19, STATE_F20, STATE_F21, STATE_F22, STATE_F23, STATE_F24,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_F25	src/arch/arm/nativetrace.hh	/^        STATE_F25, STATE_F26, STATE_F27, STATE_F28, STATE_F29, STATE_F30,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_F26	src/arch/arm/nativetrace.hh	/^        STATE_F25, STATE_F26, STATE_F27, STATE_F28, STATE_F29, STATE_F30,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_F27	src/arch/arm/nativetrace.hh	/^        STATE_F25, STATE_F26, STATE_F27, STATE_F28, STATE_F29, STATE_F30,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_F28	src/arch/arm/nativetrace.hh	/^        STATE_F25, STATE_F26, STATE_F27, STATE_F28, STATE_F29, STATE_F30,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_F29	src/arch/arm/nativetrace.hh	/^        STATE_F25, STATE_F26, STATE_F27, STATE_F28, STATE_F29, STATE_F30,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_F3	src/arch/arm/nativetrace.hh	/^        STATE_F0, STATE_F1, STATE_F2, STATE_F3, STATE_F4, STATE_F5, STATE_F6,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_F30	src/arch/arm/nativetrace.hh	/^        STATE_F25, STATE_F26, STATE_F27, STATE_F28, STATE_F29, STATE_F30,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_F31	src/arch/arm/nativetrace.hh	/^        STATE_F31, STATE_FPSCR,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_F4	src/arch/arm/nativetrace.hh	/^        STATE_F0, STATE_F1, STATE_F2, STATE_F3, STATE_F4, STATE_F5, STATE_F6,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_F5	src/arch/arm/nativetrace.hh	/^        STATE_F0, STATE_F1, STATE_F2, STATE_F3, STATE_F4, STATE_F5, STATE_F6,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_F6	src/arch/arm/nativetrace.hh	/^        STATE_F0, STATE_F1, STATE_F2, STATE_F3, STATE_F4, STATE_F5, STATE_F6,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_F7	src/arch/arm/nativetrace.hh	/^        STATE_F7, STATE_F8, STATE_F9, STATE_F10, STATE_F11, STATE_F12,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_F8	src/arch/arm/nativetrace.hh	/^        STATE_F7, STATE_F8, STATE_F9, STATE_F10, STATE_F11, STATE_F12,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_F9	src/arch/arm/nativetrace.hh	/^        STATE_F7, STATE_F8, STATE_F9, STATE_F10, STATE_F11, STATE_F12,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_FP	src/arch/arm/nativetrace.hh	/^        STATE_FP = STATE_R11,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_FPSCR	src/arch/arm/nativetrace.hh	/^        STATE_F31, STATE_FPSCR,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_LR	src/arch/arm/nativetrace.hh	/^        STATE_LR = STATE_R14,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_NUMVALS	src/arch/arm/nativetrace.hh	/^        STATE_NUMVALS$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_PC	src/arch/arm/nativetrace.hh	/^        STATE_PC = STATE_R15,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_R0	src/arch/arm/nativetrace.hh	/^        STATE_R0,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_R1	src/arch/arm/nativetrace.hh	/^        STATE_R1,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_R10	src/arch/arm/nativetrace.hh	/^        STATE_R10,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_R11	src/arch/arm/nativetrace.hh	/^        STATE_R11,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_R12	src/arch/arm/nativetrace.hh	/^        STATE_R12,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_R13	src/arch/arm/nativetrace.hh	/^        STATE_R13,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_R14	src/arch/arm/nativetrace.hh	/^        STATE_R14,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_R15	src/arch/arm/nativetrace.hh	/^        STATE_R15,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_R2	src/arch/arm/nativetrace.hh	/^        STATE_R2,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_R3	src/arch/arm/nativetrace.hh	/^        STATE_R3,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_R4	src/arch/arm/nativetrace.hh	/^        STATE_R4,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_R5	src/arch/arm/nativetrace.hh	/^        STATE_R5,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_R6	src/arch/arm/nativetrace.hh	/^        STATE_R6,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_R7	src/arch/arm/nativetrace.hh	/^        STATE_R7,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_R8	src/arch/arm/nativetrace.hh	/^        STATE_R8,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_R9	src/arch/arm/nativetrace.hh	/^        STATE_R9,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATE_SP	src/arch/arm/nativetrace.hh	/^        STATE_SP = STATE_R13,$/;"	e	enum:Trace::ArmNativeTrace::StateID
STATIC_DATA	src/mem/packet.hh	/^    static const FlagsType STATIC_DATA            = 0x00001000;$/;"	m	class:Packet
STATS_REGS_SIZE	src/dev/i8254xGBe_defs.hh	/^const uint32_t STATS_REGS_SIZE           = 0x228;$/;"	m	namespace:iGbReg
STATUS	src/dev/i8254xGBe_defs.hh	/^    struct STATUS : public Reg<uint32_t> { \/\/ 0x0008 STATUS Register$/;"	s	struct:iGbReg::Regs
STATUS_BSY_BIT	src/dev/ide_disk.hh	/^#define STATUS_BSY_BIT /;"	d
STATUS_DF_BIT	src/dev/ide_disk.hh	/^#define STATUS_DF_BIT /;"	d
STATUS_DRDY_BIT	src/dev/ide_disk.hh	/^#define STATUS_DRDY_BIT /;"	d
STATUS_DRQ_BIT	src/dev/ide_disk.hh	/^#define STATUS_DRQ_BIT /;"	d
STATUS_OFFSET	src/dev/ide_disk.hh	/^#define STATUS_OFFSET /;"	d
STATUS_SEEK_BIT	src/dev/ide_disk.hh	/^#define STATUS_SEEK_BIT /;"	d
STDFMemAddressNotAligned	src/arch/sparc/faults.hh	/^class STDFMemAddressNotAligned : public SparcFault<STDFMemAddressNotAligned> {};$/;"	c	namespace:SparcISA
STDOUT	src/python/m5/util/__init__.py	/^    from subprocess import Popen, PIPE, STDOUT$/;"	i
STICKY_FLAGS	src/mem/request.hh	/^    static const FlagsType STICKY_FLAGS = INST_FETCH;$/;"	m	class:Request
STICKY_PRIVATE_FLAGS	src/mem/request.hh	/^    static const PrivateFlagsType STICKY_PRIVATE_FLAGS =$/;"	m	class:Request
STN	src/base/str.cc	/^#define STN(/;"	d	file:
STQFMemAddressNotAligned	src/arch/sparc/faults.hh	/^class STQFMemAddressNotAligned : public SparcFault<STQFMemAddressNotAligned> {};$/;"	c	namespace:SparcISA
STRZ	src/arch/x86/insts/microop.hh	/^            STRZ,$/;"	e	enum:X86ISA::ConditionTests::CondTest
STRZnEZF	src/arch/x86/insts/microop.hh	/^            STRZnEZF,$/;"	e	enum:X86ISA::ConditionTests::CondTest
STRnZnEZF	src/arch/x86/insts/microop.hh	/^            STRnZnEZF,$/;"	e	enum:X86ISA::ConditionTests::CondTest
STS	src/arch/sparc/miscregs.hh	/^struct STS$/;"	s	namespace:SparcISA
ST_	src/mem/ruby/network/garnet/NetworkHeader.hh	/^enum flit_stage {I_, VA_, SA_, ST_, LT_, NUM_FLIT_STAGE_};$/;"	e	enum:flit_stage
STable	src/base/loader/symtab.hh	/^    typedef std::map<std::string, Addr> STable;$/;"	t	class:SymbolTable
STickCompareEvent	src/arch/sparc/isa.hh	/^            &ISA::processSTickCompare> STickCompareEvent;$/;"	t	class:SparcISA::ISA
SUM_DEMAND	src/mem/cache/base.cc	/^#define SUM_DEMAND(/;"	d	file:
SUM_NON_DEMAND	src/mem/cache/base.cc	/^#define SUM_NON_DEMAND(/;"	d	file:
SUPPLY_EXCLUSIVE	src/mem/packet.hh	/^    static const FlagsType SUPPLY_EXCLUSIVE       = 0x00000004;$/;"	m	class:Packet
SUPPRESS_FUNC_ERROR	src/mem/packet.hh	/^    static const FlagsType SUPPRESS_FUNC_ERROR    = 0x00008000;$/;"	m	class:Packet
SWAllocator	src/mem/ruby/network/orion/Allocator/SWAllocator.cc	/^SWAllocator::SWAllocator($/;"	f	class:SWAllocator
SWAllocator	src/mem/ruby/network/orion/Allocator/SWAllocator.hh	/^class SWAllocator$/;"	c
SWIDTH_DSPACE	src/mem/ruby/network/orion/Wire.hh	/^      SWIDTH_DSPACE,$/;"	e	enum:Wire::WidthSpacingModel
SWIDTH_SSPACE	src/mem/ruby/network/orion/Wire.hh	/^      SWIDTH_SSPACE,$/;"	e	enum:Wire::WidthSpacingModel
SWSM	src/dev/i8254xGBe_defs.hh	/^    struct SWSM : public Reg<uint32_t> { \/\/ 0x5B50 SWSM register$/;"	s	struct:iGbReg::Regs
SWallocator_d	src/mem/ruby/network/garnet/fixed-pipeline/SWallocator_d.cc	/^SWallocator_d::SWallocator_d(Router_d *router)$/;"	f	class:SWallocator_d
SWallocator_d	src/mem/ruby/network/garnet/fixed-pipeline/SWallocator_d.hh	/^class SWallocator_d : public Consumer$/;"	c
SX	src/arch/x86/regs/int.hh	/^        SignedBitfield<15,0> SX;$/;"	m	namespace:X86ISA
SXTB	src/arch/arm/types.hh	/^        SXTB = 4,$/;"	e	enum:ArmISA::ArmExtendType
SXTH	src/arch/arm/types.hh	/^        SXTH = 5,$/;"	e	enum:ArmISA::ArmExtendType
SXTW	src/arch/arm/types.hh	/^        SXTW = 6,$/;"	e	enum:ArmISA::ArmExtendType
SXTX	src/arch/arm/types.hh	/^        SXTX = 7$/;"	e	enum:ArmISA::ArmExtendType
SYMR	src/base/loader/coff_sym.h	/^} SYMR, *pSYMR;$/;"	t	typeref:struct:ecoff_sym
SYS	src/python/m5/util/dot_writer.py	/^    SYS = 0$/;"	v	class:NodeType
SYS_SEGMENT_REG_IDTR	src/arch/x86/regs/segment.hh	/^        SYS_SEGMENT_REG_IDTR,$/;"	e	enum:X86ISA::SegmentRegIndex
SYS_SEGMENT_REG_TR	src/arch/x86/regs/segment.hh	/^        SYS_SEGMENT_REG_TR,$/;"	e	enum:X86ISA::SegmentRegIndex
SZnZF	src/arch/x86/insts/microop.hh	/^            SZnZF,$/;"	e	enum:X86ISA::ConditionTests::CondTest
SafeRead	src/dev/disk_image.cc	/^SafeRead(ifstream &stream, T &data)$/;"	f
SafeRead	src/dev/disk_image.cc	/^SafeRead(ifstream &stream, void *data, int count)$/;"	f
SafeReadSwap	src/dev/disk_image.cc	/^SafeReadSwap(ifstream &stream, T &data)$/;"	f
SafeWrite	src/dev/disk_image.cc	/^SafeWrite(ofstream &stream, const T &data)$/;"	f
SafeWrite	src/dev/disk_image.cc	/^SafeWrite(ofstream &stream, const void *data, int count)$/;"	f
SafeWriteSwap	src/dev/disk_image.cc	/^SafeWriteSwap(ofstream &stream, const T &data)$/;"	f
SampleRate	src/dev/x86/i8042.hh	/^        SampleRate = 0xF3,$/;"	e	enum:X86ISA::PS2Mouse::Command
SampleStor	src/base/statistics.hh	/^    SampleStor(Info *info)$/;"	f	class:Stats::SampleStor
SampleStor	src/base/statistics.hh	/^class SampleStor$/;"	c	namespace:Stats
SatCounter	src/cpu/pred/sat_counter.hh	/^    SatCounter()$/;"	f	class:SatCounter
SatCounter	src/cpu/pred/sat_counter.hh	/^    SatCounter(unsigned bits)$/;"	f	class:SatCounter
SatCounter	src/cpu/pred/sat_counter.hh	/^    SatCounter(unsigned bits, uint8_t initial_val)$/;"	f	class:SatCounter
SatCounter	src/cpu/pred/sat_counter.hh	/^class SatCounter$/;"	c
ScCache	src/base/cp_annotate.hh	/^    typedef std::vector<ScHCache> ScCache;$/;"	t	class:CPA
ScHCache	src/base/cp_annotate.hh	/^    typedef m5::hash_map<Id, AnnDataPtr> ScHCache;$/;"	t	class:CPA
Scalar	src/base/statistics.hh	/^class Scalar : public ScalarBase<Scalar, StatStor>$/;"	c	namespace:Stats
ScalarBase	src/base/statistics.hh	/^    ScalarBase()$/;"	f	class:Stats::ScalarBase
ScalarBase	src/base/statistics.hh	/^class ScalarBase : public DataWrap<Derived, ScalarInfoProxy>$/;"	c	namespace:Stats
ScalarInfo	src/base/stats/info.hh	/^class ScalarInfo : public Info$/;"	c	namespace:Stats
ScalarInfoProxy	src/base/statistics.hh	/^    ScalarInfoProxy(Stat &stat) : InfoProxy<Stat, ScalarInfo>(stat) {}$/;"	f	class:Stats::ScalarInfoProxy
ScalarInfoProxy	src/base/statistics.hh	/^class ScalarInfoProxy : public InfoProxy<Stat, ScalarInfo>$/;"	c	namespace:Stats
ScalarPrint	src/base/stats/text.cc	/^struct ScalarPrint$/;"	s	namespace:Stats	file:
ScalarProxy	src/base/statistics.hh	/^    ScalarProxy(Stat &s, off_type i)$/;"	f	class:Stats::ScalarProxy
ScalarProxy	src/base/statistics.hh	/^    ScalarProxy(const ScalarProxy &sp)$/;"	f	class:Stats::ScalarProxy
ScalarProxy	src/base/statistics.hh	/^class ScalarProxy$/;"	c	namespace:Stats
ScalarProxyNode	src/base/statistics.hh	/^    ScalarProxyNode(const ScalarProxy<Stat> &p)$/;"	f	class:Stats::ScalarProxyNode
ScalarProxyNode	src/base/statistics.hh	/^class ScalarProxyNode : public Node$/;"	c	namespace:Stats
ScalarStatNode	src/base/statistics.hh	/^    ScalarStatNode(const ScalarInfo *d) : data(d), vresult(1) {}$/;"	f	class:Stats::ScalarStatNode
ScalarStatNode	src/base/statistics.hh	/^class ScalarStatNode : public Node$/;"	c	namespace:Stats
Scale1to1	src/dev/x86/i8042.hh	/^        Scale1to1 = 0xE6,$/;"	e	enum:X86ISA::PS2Mouse::Command
Scale2to1	src/dev/x86/i8042.hh	/^        Scale2to1 = 0xE7,$/;"	e	enum:X86ISA::PS2Mouse::Command
ScheduleEntry	src/cpu/inorder/pipeline_traits.5stage.hh	/^        ScheduleEntry(int stage_num, int _priority, int res_num, int _cmd = 0,$/;"	f	struct:ThePipeline::ScheduleEntry
ScheduleEntry	src/cpu/inorder/pipeline_traits.5stage.hh	/^    struct ScheduleEntry {$/;"	s	namespace:ThePipeline
ScheduleEntry	src/cpu/inorder/pipeline_traits.9stage.hh	/^        ScheduleEntry(int stage_num, int _priority, int res_num, int _cmd = 0,$/;"	f	struct:ThePipeline::ScheduleEntry
ScheduleEntry	src/cpu/inorder/pipeline_traits.9stage.hh	/^    struct ScheduleEntry {$/;"	s	namespace:ThePipeline
ScheduleEntry	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^        ScheduleEntry(int stage_num, int _priority, int res_num, int _cmd = 0,$/;"	f	struct:ThePipeline::ScheduleEntry
ScheduleEntry	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^    struct ScheduleEntry {$/;"	s	namespace:ThePipeline
ScheduleEntry	src/cpu/inorder/resource_sked.hh	/^    ScheduleEntry(int stage_num, int _priority, int res_num, int _cmd = 0,$/;"	f	class:ScheduleEntry
ScheduleEntry	src/cpu/inorder/resource_sked.hh	/^class ScheduleEntry {$/;"	c
ScheduleOrBypass	src/cpu/inorder/resources/inst_buffer.hh	/^        ScheduleOrBypass$/;"	e	enum:InstBuffer::Command
Scheduled	src/sim/eventq.hh	/^    static const FlagsType Scheduled     = 0x0002; \/\/ has been scheduled$/;"	m	class:EventBase
Scoreboard	src/cpu/o3/scoreboard.cc	/^Scoreboard::Scoreboard(const std::string &_my_name,$/;"	f	class:Scoreboard
Scoreboard	src/cpu/o3/scoreboard.hh	/^class Scoreboard$/;"	c
Secondary	src/arch/sparc/tlb.hh	/^        Secondary = 1,$/;"	e	enum:SparcISA::TLB::ContextType
SecondaryTiming	src/dev/ide_ctrl.cc	/^    SecondaryTiming = 0x42,$/;"	e	enum:ConfRegOffset	file:
Section	src/arch/arm/table_walker.hh	/^            Section,$/;"	e	enum:ArmISA::TableWalker::L1Descriptor::EntryType
Section	src/base/inifile.hh	/^        Section()$/;"	f	class:IniFile::Section
Section	src/base/inifile.hh	/^    class Section$/;"	c	class:IniFile
Section	src/base/loader/object_file.hh	/^    struct Section {$/;"	s	class:ObjectFile
SectionTable	src/base/inifile.hh	/^    typedef m5::hash_map<std::string, Section *> SectionTable;$/;"	t	class:IniFile
Sector	src/dev/disk_image.hh	/^    struct Sector {$/;"	s	class:CowDiskImage
SectorSize	src/dev/disk_image.hh	/^#define SectorSize /;"	d
SectorTable	src/dev/disk_image.hh	/^    typedef m5::hash_map<uint64_t, Sector *> SectorTable;$/;"	t	class:CowDiskImage
SecureMonitorCall	src/arch/arm/faults.hh	/^    SecureMonitorCall(ExtMachInst _machInst) :$/;"	f	class:ArmISA::SecureMonitorCall
SecureMonitorCall	src/arch/arm/faults.hh	/^class SecureMonitorCall : public ArmFaultVals<SecureMonitorCall>$/;"	c	namespace:ArmISA
SecureMonitorTrap	src/arch/arm/faults.hh	/^    SecureMonitorTrap(ExtMachInst _machInst, uint32_t _iss,$/;"	f	class:ArmISA::SecureMonitorTrap
SecureMonitorTrap	src/arch/arm/faults.hh	/^class SecureMonitorTrap : public ArmFaultVals<SecureMonitorTrap>$/;"	c	namespace:ArmISA
SecurityException	src/arch/x86/faults.hh	/^        SecurityException() :$/;"	f	class:X86ISA::SecurityException
SecurityException	src/arch/x86/faults.hh	/^    class SecurityException : public X86FaultBase$/;"	c	namespace:X86ISA
SegKPMBase	src/arch/sparc/isa_traits.hh	/^const Addr SegKPMBase = ULL(0xfffffac000000000);$/;"	m	namespace:SparcISA
SegKPMEnd	src/arch/sparc/isa_traits.hh	/^const Addr SegKPMEnd  = ULL(0xfffffffc00000000);$/;"	m	namespace:SparcISA
Segment	src/base/loader/elf_object.hh	/^    typedef ObjectFile::Section Segment;$/;"	t	class:ElfObject
SegmentFlagMask	src/arch/x86/insts/microldstop.hh	/^    const Request::FlagsType SegmentFlagMask = mask(4);$/;"	m	namespace:X86ISA
SegmentNotPresent	src/arch/x86/faults.hh	/^        SegmentNotPresent(uint32_t _errorCode) :$/;"	f	class:X86ISA::SegmentNotPresent
SegmentNotPresent	src/arch/x86/faults.hh	/^    class SegmentNotPresent : public X86Fault$/;"	c	namespace:X86ISA
SegmentRegIndex	src/arch/x86/regs/segment.hh	/^    enum SegmentRegIndex$/;"	g	namespace:X86ISA
SelectCounter0	src/dev/intel_8254_timer.hh	/^        SelectCounter0,$/;"	e	enum:Intel8254Timer::SelectVal
SelectCounter1	src/dev/intel_8254_timer.hh	/^        SelectCounter1,$/;"	e	enum:Intel8254Timer::SelectVal
SelectCounter2	src/dev/intel_8254_timer.hh	/^        SelectCounter2,$/;"	e	enum:Intel8254Timer::SelectVal
SelectVal	src/dev/intel_8254_timer.hh	/^    enum SelectVal {$/;"	g	class:Intel8254Timer
Self	src/python/m5/proxy.py	/^Self = ProxyFactory(search_self = True, search_up = False)$/;"	v
SelfTest	src/dev/x86/i8042.hh	/^        SelfTest = 0xAA,$/;"	e	enum:X86ISA::I8042::Command
SelfTestPass	src/dev/ps2.hh	/^    SelfTestPass    = 0xAA,$/;"	e	enum:Ps2::__anon82
SenderState	src/cpu/testers/rubytest/Check.cc	/^typedef RubyTester::SenderState SenderState;$/;"	t	file:
SenderState	src/cpu/testers/rubytest/RubyTester.hh	/^        SenderState(Address addr, int size) : subBlock(addr, size) {}$/;"	f	struct:RubyTester::SenderState
SenderState	src/cpu/testers/rubytest/RubyTester.hh	/^    struct SenderState : public Packet::SenderState$/;"	s	class:RubyTester
SenderState	src/mem/packet.hh	/^        SenderState() : predecessor(NULL) {}$/;"	f	struct:Packet::SenderState
SenderState	src/mem/packet.hh	/^    struct SenderState$/;"	s	class:Packet
SenderState	src/mem/ruby/system/RubyPort.hh	/^        SenderState(MemSlavePort * _port) : port(_port)$/;"	f	struct:RubyPort::SenderState
SenderState	src/mem/ruby/system/RubyPort.hh	/^    struct SenderState : public Packet::SenderState$/;"	s	class:RubyPort
SeqNumMapIt	src/cpu/o3/store_set.hh	/^    typedef std::map<InstSeqNum, int, ltseqnum>::iterator SeqNumMapIt;$/;"	t	class:StoreSet
Sequencer	src/mem/ruby/system/Sequencer.cc	/^Sequencer::Sequencer(const Params *p)$/;"	f	class:Sequencer
Sequencer	src/mem/ruby/system/Sequencer.hh	/^class Sequencer : public RubyPort$/;"	c
SequencerRequest	src/mem/ruby/system/Sequencer.hh	/^    SequencerRequest(PacketPtr _pkt, RubyRequestType _m_type,$/;"	f	struct:SequencerRequest
SequencerRequest	src/mem/ruby/system/Sequencer.hh	/^struct SequencerRequest$/;"	s
SequencerWakeupEvent	src/mem/ruby/system/Sequencer.hh	/^        SequencerWakeupEvent(Sequencer *_seq) : m_sequencer_ptr(_seq) {}$/;"	f	class:Sequencer::SequencerWakeupEvent
SequencerWakeupEvent	src/mem/ruby/system/Sequencer.hh	/^    class SequencerWakeupEvent : public Event$/;"	c	class:Sequencer
SerialTag	src/arch/arm/linux/atag.hh	/^    SerialTag = 0x54410006,$/;"	e	enum:__anon5
Serializable	src/sim/serialize.cc	/^Serializable::Serializable()$/;"	f	class:Serializable
Serializable	src/sim/serialize.hh	/^class Serializable$/;"	c
SerializableBuilder	src/sim/serialize.hh	/^    SerializableBuilder() {}$/;"	f	class:SerializableBuilder
SerializableBuilder	src/sim/serialize.hh	/^class SerializableBuilder$/;"	c
SerializableClass	src/sim/serialize.cc	/^SerializableClass::SerializableClass(const string &className,$/;"	f	class:SerializableClass
SerializableClass	src/sim/serialize.hh	/^class SerializableClass$/;"	c
SerializeAfter	src/cpu/base_dyn_inst.hh	/^        SerializeAfter,          \/\/\/ Needs to serialize instructions behind it$/;"	e	enum:BaseDynInst::Status
SerializeAfter	src/cpu/inorder/inorder_dyn_inst.hh	/^        SerializeAfter,          \/\/\/ Needs to serialize instructions behind it$/;"	e	enum:InOrderDynInst::Status
SerializeBefore	src/cpu/base_dyn_inst.hh	/^        SerializeBefore,         \/\/\/ Needs to serialize on$/;"	e	enum:BaseDynInst::Status
SerializeBefore	src/cpu/inorder/inorder_dyn_inst.hh	/^        SerializeBefore,         \/\/\/ Needs to serialize on$/;"	e	enum:InOrderDynInst::Status
SerializeBlocked	src/cpu/ozone/front_end.hh	/^        SerializeBlocked,$/;"	e	enum:FrontEnd::Status
SerializeComplete	src/cpu/ozone/front_end.hh	/^        SerializeComplete,$/;"	e	enum:FrontEnd::Status
SerializeHandled	src/cpu/base_dyn_inst.hh	/^        SerializeHandled,        \/\/\/ Serialization has been handled$/;"	e	enum:BaseDynInst::Status
SerializeHandled	src/cpu/inorder/inorder_dyn_inst.hh	/^        SerializeHandled,        \/\/\/ Serialization has been handled$/;"	e	enum:InOrderDynInst::Status
SerializeStall	src/cpu/o3/rename.hh	/^        SerializeStall$/;"	e	enum:DefaultRename::ThreadStatus
Serialize_Pri	src/sim/eventq.hh	/^    static const Priority Serialize_Pri =               32;$/;"	m	class:EventBase
SeriesRequestGenerator	src/cpu/testers/directedtest/RubyDirectedTester.py	/^class SeriesRequestGenerator(DirectedGenerator):$/;"	c
SeriesRequestGenerator	src/cpu/testers/directedtest/SeriesRequestGenerator.cc	/^SeriesRequestGenerator::SeriesRequestGenerator(const Params *p)$/;"	f	class:SeriesRequestGenerator
SeriesRequestGenerator	src/cpu/testers/directedtest/SeriesRequestGenerator.hh	/^class SeriesRequestGenerator : public DirectedGenerator $/;"	c
ServerBell	src/base/vnc/vncserver.hh	/^        ServerBell                  = 2,$/;"	e	enum:VncServer::ServerMessages
ServerCutText	src/base/vnc/vncserver.hh	/^        ServerCutText               = 3$/;"	e	enum:VncServer::ServerMessages
ServerCutText	src/base/vnc/vncserver.hh	/^    struct ServerCutText {$/;"	s	class:VncServer
ServerFrameBufferUpdate	src/base/vnc/vncserver.hh	/^        ServerFrameBufferUpdate     = 0,$/;"	e	enum:VncServer::ServerMessages
ServerInitMsg	src/base/vnc/vncserver.hh	/^    struct ServerInitMsg {$/;"	s	class:VncServer
ServerMessages	src/base/vnc/vncserver.hh	/^    enum ServerMessages {$/;"	g	class:VncServer
ServerSetColorMapEntries	src/base/vnc/vncserver.hh	/^        ServerSetColorMapEntries    = 1,$/;"	e	enum:VncServer::ServerMessages
Set	src/mem/ruby/common/Set.cc	/^Set::Set()$/;"	f	class:Set
Set	src/mem/ruby/common/Set.cc	/^Set::Set(const Set& obj)$/;"	f	class:Set
Set	src/mem/ruby/common/Set.cc	/^Set::Set(int size)$/;"	f	class:Set
Set	src/mem/ruby/common/Set.hh	/^class Set$/;"	c
SetDefaults	src/dev/ps2.hh	/^    SetDefaults     = 0xf6,$/;"	e	enum:Ps2::__anon82
SetRate	src/dev/ps2.hh	/^    SetRate         = 0xf3,$/;"	e	enum:Ps2::__anon82
SetResolution	src/dev/ps2.hh	/^    SetResolution   = 0xe8,$/;"	e	enum:Ps2::__anon82
SetResolution	src/dev/x86/i8042.hh	/^        SetResolution = 0xE8,$/;"	e	enum:X86ISA::PS2Mouse::Command
SetScaling1_1	src/dev/ps2.hh	/^    SetScaling1_1   = 0xe6,$/;"	e	enum:Ps2::__anon82
SetScaling1_2	src/dev/ps2.hh	/^    SetScaling1_2   = 0xe7,$/;"	e	enum:Ps2::__anon82
SetStatusLed	src/dev/ps2.hh	/^    SetStatusLed    = 0xed,$/;"	e	enum:Ps2::__anon82
SetType	src/mem/cache/tags/lru.hh	/^    typedef CacheSet<CacheBlk> SetType;$/;"	t	class:LRU
SharedData	src/cpu/m5legion_interface.h	/^} SharedData;$/;"	t	typeref:struct:__anon55
ShiftKey	src/dev/ps2.cc	/^const uint8_t ShiftKey = 0x12;$/;"	m	namespace:Ps2	file:
ShouldntHappen	src/arch/sparc/faults.hh	/^        ShouldntHappen = SH$/;"	e	enum:SparcISA::SparcFaultBase::PrivilegeLevel
SideEffect	src/arch/sparc/tlb.hh	/^        SideEffect = 0x2,$/;"	e	enum:SparcISA::TLB::FaultTypes
SignedBitfield	src/base/bitunion.hh	/^        class SignedBitfield : public BitfieldBase<Type>$/;"	c	class:BitfieldBackend::SignedBitfieldTypes
SignedBitfieldRO	src/base/bitunion.hh	/^        class SignedBitfieldRO : public SignedBitfield<first, last>$/;"	c	class:BitfieldBackend::SignedBitfieldTypes
SignedBitfieldTypes	src/base/bitunion.hh	/^    class SignedBitfieldTypes$/;"	c	namespace:BitfieldBackend
SignedBitfieldWO	src/base/bitunion.hh	/^        class SignedBitfieldWO : public SignedBitfield<first, last>$/;"	c	class:BitfieldBackend::SignedBitfieldTypes
SignedSubBitUnion	src/base/bitunion.hh	/^#define SignedSubBitUnion(/;"	d
SimClock	src/sim/core.cc	/^namespace SimClock {$/;"	n	file:
SimClock	src/sim/core.hh	/^namespace SimClock {$/;"	n
SimExit	src/python/m5/event.py	/^from internal.event import PythonEvent, GlobalSimLoopExitEvent as SimExit$/;"	i
SimObject	src/arch/alpha/AlphaISA.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/arch/alpha/AlphaInterrupts.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/arch/alpha/AlphaTLB.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/arch/arm/ArmISA.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/arch/arm/ArmInterrupts.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/arch/arm/ArmNativeTrace.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/arch/arm/ArmTLB.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/arch/mips/MipsISA.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/arch/mips/MipsInterrupts.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/arch/mips/MipsTLB.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/arch/power/PowerISA.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/arch/power/PowerInterrupts.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/arch/power/PowerTLB.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/arch/sparc/SparcISA.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/arch/sparc/SparcInterrupts.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/arch/sparc/SparcNativeTrace.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/arch/sparc/SparcTLB.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/arch/x86/X86ISA.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/arch/x86/X86NativeTrace.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/arch/x86/bios/ACPI.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/arch/x86/bios/E820.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/arch/x86/bios/IntelMP.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/arch/x86/bios/SMBios.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/base/CPA.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/base/vnc/Vnc.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/cpu/ExeTracer.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/cpu/FuncUnit.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/cpu/IntelTrace.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/cpu/IntrControl.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/cpu/LegionTrace.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/cpu/NativeTrace.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/cpu/inorder/InOrderTrace.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/cpu/kvm/KvmVM.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/cpu/o3/FUPool.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/cpu/o3/FuncUnitConfig.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/cpu/pred/BranchPredictor.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/cpu/testers/directedtest/RubyDirectedTester.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/dev/CopyEngine.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/dev/DiskImage.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/dev/Ethernet.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/dev/Ide.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/dev/Pci.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/dev/Platform.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/dev/SimpleDisk.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/dev/Terminal.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/dev/x86/SouthBridge.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/dev/x86/X86IntPin.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/mem/ruby/network/BasicLink.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/mem/ruby/network/Network.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/mem/ruby/network/fault_model/FaultModel.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/mem/ruby/network/simple/SimpleLink.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/mem/ruby/structures/RubyPrefetcher.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/mem/ruby/system/Cache.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/mem/ruby/system/DirectoryMemory.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/mem/ruby/system/RubyMemoryControl.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/mem/ruby/system/WireBuffer.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/python/m5/SimObject.py	/^class SimObject(object):$/;"	c
SimObject	src/python/m5/__init__.py	/^    import SimObject$/;"	i
SimObject	src/python/m5/main.py	/^        import SimObject$/;"	i
SimObject	src/python/m5/params.py	/^import SimObject$/;"	i
SimObject	src/python/m5/simulate.py	/^import SimObject$/;"	i
SimObject	src/sim/BaseTLB.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/sim/ClockDomain.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/sim/ClockedObject.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/sim/InstTracer.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/sim/Process.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/sim/Root.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/sim/System.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/sim/VoltageDomain.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/sim/probe/Probe.py	/^from m5.SimObject import SimObject$/;"	i
SimObject	src/sim/sim_object.cc	/^SimObject::SimObject(const Params *p)$/;"	f	class:SimObject
SimObject	src/sim/sim_object.hh	/^class SimObject : public EventManager, public Serializable, public Drainable$/;"	c
SimObjectList	src/sim/sim_object.hh	/^    typedef std::vector<SimObject *> SimObjectList;$/;"	t	class:SimObject
SimObjectVector	src/python/m5/SimObject.py	/^     isNullPointer, SimObjectVector, Port$/;"	i
SimObjectVector	src/python/m5/params.py	/^class SimObjectVector(VectorParamValue):$/;"	c
SimTicksReset	src/sim/stat_control.cc	/^struct SimTicksReset : public Callback$/;"	s	namespace:Stats	file:
Sim_Exit_Pri	src/sim/eventq.hh	/^    static const Priority Sim_Exit_Pri =               100;$/;"	m	class:EventBase
SimdAddAccOp	src/cpu/op_class.hh	/^const OpClass SimdAddAccOp = Enums::SimdAddAcc;$/;"	v
SimdAddOp	src/cpu/op_class.hh	/^const OpClass SimdAddOp = Enums::SimdAdd;$/;"	v
SimdAluOp	src/cpu/op_class.hh	/^const OpClass SimdAluOp = Enums::SimdAlu;$/;"	v
SimdCmpOp	src/cpu/op_class.hh	/^const OpClass SimdCmpOp = Enums::SimdCmp;$/;"	v
SimdCvtOp	src/cpu/op_class.hh	/^const OpClass SimdCvtOp = Enums::SimdCvt;$/;"	v
SimdFloatAddOp	src/cpu/op_class.hh	/^const OpClass SimdFloatAddOp = Enums::SimdFloatAdd;$/;"	v
SimdFloatAluOp	src/cpu/op_class.hh	/^const OpClass SimdFloatAluOp = Enums::SimdFloatAlu;$/;"	v
SimdFloatCmpOp	src/cpu/op_class.hh	/^const OpClass SimdFloatCmpOp = Enums::SimdFloatCmp;$/;"	v
SimdFloatCvtOp	src/cpu/op_class.hh	/^const OpClass SimdFloatCvtOp = Enums::SimdFloatCvt;$/;"	v
SimdFloatDivOp	src/cpu/op_class.hh	/^const OpClass SimdFloatDivOp = Enums::SimdFloatDiv;$/;"	v
SimdFloatMiscOp	src/cpu/op_class.hh	/^const OpClass SimdFloatMiscOp = Enums::SimdFloatMisc;$/;"	v
SimdFloatMultAccOp	src/cpu/op_class.hh	/^const OpClass SimdFloatMultAccOp = Enums::SimdFloatMultAcc;$/;"	v
SimdFloatMultOp	src/cpu/op_class.hh	/^const OpClass SimdFloatMultOp = Enums::SimdFloatMult;$/;"	v
SimdFloatSqrtOp	src/cpu/op_class.hh	/^const OpClass SimdFloatSqrtOp = Enums::SimdFloatSqrt;$/;"	v
SimdMiscOp	src/cpu/op_class.hh	/^const OpClass SimdMiscOp = Enums::SimdMisc;$/;"	v
SimdMultAccOp	src/cpu/op_class.hh	/^const OpClass SimdMultAccOp = Enums::SimdMultAcc;$/;"	v
SimdMultOp	src/cpu/op_class.hh	/^const OpClass SimdMultOp = Enums::SimdMult;$/;"	v
SimdShiftAccOp	src/cpu/op_class.hh	/^const OpClass SimdShiftAccOp = Enums::SimdShiftAcc;$/;"	v
SimdShiftOp	src/cpu/op_class.hh	/^const OpClass SimdShiftOp = Enums::SimdShift;$/;"	v
SimdSqrtOp	src/cpu/op_class.hh	/^const OpClass SimdSqrtOp = Enums::SimdSqrt;$/;"	v
SimpleCPUPolicy	src/cpu/o3/cpu_policy.hh	/^struct SimpleCPUPolicy$/;"	s
SimpleDisk	src/dev/SimpleDisk.py	/^class SimpleDisk(SimObject):$/;"	c
SimpleDisk	src/dev/simple_disk.cc	/^SimpleDisk::SimpleDisk(const Params *p)$/;"	f	class:SimpleDisk
SimpleDisk	src/dev/simple_disk.hh	/^class SimpleDisk : public SimObject$/;"	c
SimpleExtLink	src/mem/ruby/network/simple/SimpleLink.cc	/^SimpleExtLink::SimpleExtLink(const Params *p)$/;"	f	class:SimpleExtLink
SimpleExtLink	src/mem/ruby/network/simple/SimpleLink.hh	/^class SimpleExtLink : public BasicExtLink$/;"	c
SimpleExtLink	src/mem/ruby/network/simple/SimpleLink.py	/^class SimpleExtLink(BasicExtLink):$/;"	c
SimpleFlag	src/base/debug.hh	/^    SimpleFlag(const char *name, const char *desc)$/;"	f	class:Debug::SimpleFlag
SimpleFlag	src/base/debug.hh	/^class SimpleFlag : public Flag$/;"	c	namespace:Debug
SimpleFlag	src/python/m5/debug.py	/^from internal.debug import SimpleFlag, CompoundFlag$/;"	i
SimpleFreeList	src/cpu/o3/free_list.hh	/^    SimpleFreeList() {};$/;"	f	class:SimpleFreeList
SimpleFreeList	src/cpu/o3/free_list.hh	/^class SimpleFreeList$/;"	c
SimpleImpl	src/cpu/ozone/simple_impl.hh	/^struct SimpleImpl {$/;"	s
SimpleIntLink	src/mem/ruby/network/simple/SimpleLink.cc	/^SimpleIntLink::SimpleIntLink(const Params *p)$/;"	f	class:SimpleIntLink
SimpleIntLink	src/mem/ruby/network/simple/SimpleLink.hh	/^class SimpleIntLink : public BasicIntLink$/;"	c
SimpleIntLink	src/mem/ruby/network/simple/SimpleLink.py	/^class SimpleIntLink(BasicIntLink):$/;"	c
SimpleMemory	src/arch/sparc/SparcSystem.py	/^from SimpleMemory import SimpleMemory$/;"	i
SimpleMemory	src/dev/arm/RealView.py	/^from SimpleMemory import SimpleMemory$/;"	i
SimpleMemory	src/mem/SimpleMemory.py	/^class SimpleMemory(AbstractMemory):$/;"	c
SimpleMemory	src/mem/simple_mem.cc	/^SimpleMemory::SimpleMemory(const SimpleMemoryParams* p) :$/;"	f	class:SimpleMemory
SimpleMemory	src/mem/simple_mem.hh	/^class SimpleMemory : public AbstractMemory$/;"	c
SimpleNetwork	src/mem/ruby/network/simple/SimpleNetwork.cc	/^SimpleNetwork::SimpleNetwork(const Params *p)$/;"	f	class:SimpleNetwork
SimpleNetwork	src/mem/ruby/network/simple/SimpleNetwork.hh	/^class SimpleNetwork : public Network$/;"	c
SimpleNetwork	src/mem/ruby/network/simple/SimpleNetwork.py	/^class SimpleNetwork(RubyNetwork):$/;"	c
SimpleOzoneCPU	src/cpu/ozone/SimpleOzoneCPU.py	/^class SimpleOzoneCPU(BaseCPU):$/;"	c
SimpleOzoneCPU	src/cpu/ozone/simple_cpu_builder.cc	/^    SimpleOzoneCPU(SimpleParams *p)$/;"	f	class:SimpleOzoneCPU
SimpleOzoneCPU	src/cpu/ozone/simple_cpu_builder.cc	/^class SimpleOzoneCPU : public OzoneCPU<SimpleImpl>$/;"	c	file:
SimplePCState	src/arch/generic/types.hh	/^    SimplePCState() {}$/;"	f	class:GenericISA::SimplePCState
SimplePCState	src/arch/generic/types.hh	/^    SimplePCState(Addr val) { set(val); }$/;"	f	class:GenericISA::SimplePCState
SimplePCState	src/arch/generic/types.hh	/^class SimplePCState : public PCStateBase$/;"	c	namespace:GenericISA
SimpleParams	src/cpu/ozone/simple_params.hh	/^class SimpleParams : public BaseCPU::Params$/;"	c
SimpleRenameMap	src/cpu/o3/rename_map.cc	/^SimpleRenameMap::SimpleRenameMap()$/;"	f	class:SimpleRenameMap
SimpleRenameMap	src/cpu/o3/rename_map.hh	/^class SimpleRenameMap$/;"	c
SimpleThread	src/cpu/simple_thread.cc	/^SimpleThread::SimpleThread(BaseCPU *_cpu, int _thread_num, System *_sys,$/;"	f	class:SimpleThread
SimpleThread	src/cpu/simple_thread.hh	/^class SimpleThread : public ThreadState$/;"	c
SimpleTimingPort	src/mem/tport.cc	/^SimpleTimingPort::SimpleTimingPort(const std::string& _name,$/;"	f	class:SimpleTimingPort
SimpleTimingPort	src/mem/tport.hh	/^class SimpleTimingPort : public QueuedSlavePort$/;"	c
SimpleTrace	src/cpu/o3/probe/SimpleTrace.py	/^class SimpleTrace(ProbeListenerObject):$/;"	c
SimpleTrace	src/cpu/o3/probe/simple_trace.hh	/^    SimpleTrace(const SimpleTraceParams *params):$/;"	f	class:SimpleTrace
SimpleTrace	src/cpu/o3/probe/simple_trace.hh	/^class SimpleTrace : public ProbeListenerObject {$/;"	c
Single	src/cpu/inorder/cpu.hh	/^        Single,$/;"	e	enum:InOrderCPU::ThreadModel
SingleThread	src/cpu/inorder/first_stage.hh	/^        SingleThread,$/;"	e	enum:FirstStage::FetchPriority
SingleThread	src/cpu/o3/fetch.hh	/^        SingleThread,$/;"	e	enum:DefaultFetch::FetchPriority
Singleton	src/python/m5/util/__init__.py	/^class Singleton(type):$/;"	c
Sinic	src/dev/Ethernet.py	/^class Sinic(EtherDevBase):$/;"	c
Sinic	src/dev/sinic.cc	/^namespace Sinic {$/;"	n	file:
Sinic	src/dev/sinic.hh	/^namespace Sinic {$/;"	n
Sinic	src/dev/sinicreg.hh	/^namespace Sinic {$/;"	n
SixtyFourBitMode	src/arch/x86/types.hh	/^        SixtyFourBitMode,$/;"	e	enum:X86ISA::X86SubMode
Size	src/arch/arm/linux/atag.hh	/^    static const uint32_t Size = 2;$/;"	m	class:AtagNone
Size	src/arch/arm/linux/atag.hh	/^    static const uint32_t Size = 3;$/;"	m	class:AtagCmdline
Size	src/arch/arm/linux/atag.hh	/^    static const uint32_t Size = 3;$/;"	m	class:AtagRev
Size	src/arch/arm/linux/atag.hh	/^    static const uint32_t Size = 4;$/;"	m	class:AtagMem
Size	src/arch/arm/linux/atag.hh	/^    static const uint32_t Size = 4;$/;"	m	class:AtagSerial
Size	src/arch/arm/linux/atag.hh	/^    static const uint32_t Size = 5;$/;"	m	class:AtagCore
Size	src/base/bitmap.hh	/^        uint32_t Size;$/;"	m	struct:Bitmap::Info
Size	src/dev/arm/timer_cpulocal.hh	/^            Size                   = 0x38$/;"	e	enum:CpuLocalTimer::Timer::__anon68
Size	src/dev/arm/timer_sp804.hh	/^            Size       = 0x20$/;"	e	enum:Sp804::Timer::__anon69
SizeImage	src/base/bitmap.hh	/^        uint32_t SizeImage;$/;"	m	struct:Bitmap::Info
SizeStruct	src/cpu/ozone/back_end.hh	/^    struct SizeStruct {$/;"	s	class:BackEnd
SizeStruct	src/cpu/ozone/lw_back_end.hh	/^    struct SizeStruct {$/;"	s	class:LWBackEnd
SizeType	src/arch/x86/decoder_tables.cc	/^    enum SizeType {$/;"	g	namespace:X86ISA	file:
SizeTypeToSize	src/arch/x86/decoder.hh	/^    static const uint8_t SizeTypeToSize[3][10];$/;"	m	class:X86ISA::Decoder
SizeTypeToSize	src/arch/x86/decoder_tables.cc	/^    const uint8_t Decoder::SizeTypeToSize[3][10] =$/;"	m	class:X86ISA::Decoder	file:
SkedCacheIt	src/cpu/inorder/cpu.hh	/^    typedef m5::hash_map<SkedID, ThePipeline::RSkedPtr>::iterator SkedCacheIt;$/;"	t	class:InOrderCPU
SkedID	src/cpu/inorder/cpu.hh	/^    typedef uint32_t SkedID;$/;"	t	class:InOrderCPU
SkedIt	src/cpu/inorder/resource_sked.hh	/^    typedef std::list<ScheduleEntry*>::iterator SkedIt;$/;"	t	class:ResourceSked
SkipCalibrateClocksEvent	src/arch/alpha/freebsd/system.hh	/^        SkipCalibrateClocksEvent(PCEventQueue *q, const std::string &desc,$/;"	f	class:FreebsdAlphaSystem::SkipCalibrateClocksEvent
SkipCalibrateClocksEvent	src/arch/alpha/freebsd/system.hh	/^    class SkipCalibrateClocksEvent : public SkipFuncEvent$/;"	c	class:FreebsdAlphaSystem
SkipDelayLoopEvent	src/arch/alpha/linux/system.hh	/^        SkipDelayLoopEvent(PCEventQueue *q, const std::string &desc, Addr addr)$/;"	f	struct:LinuxAlphaSystem::SkipDelayLoopEvent
SkipDelayLoopEvent	src/arch/alpha/linux/system.hh	/^    struct SkipDelayLoopEvent : public SkipFuncEvent$/;"	s	class:LinuxAlphaSystem
SkipDelayLoopEvent	src/arch/mips/linux/system.hh	/^        SkipDelayLoopEvent(PCEventQueue *q, const std::string &desc, Addr addr)$/;"	f	class:LinuxMipsSystem::SkipDelayLoopEvent
SkipDelayLoopEvent	src/arch/mips/linux/system.hh	/^    class SkipDelayLoopEvent : public SkipFuncEvent$/;"	c	class:LinuxMipsSystem
SkipFuncEvent	src/kern/system_events.hh	/^    SkipFuncEvent(PCEventQueue *q, const std::string &desc, Addr addr)$/;"	f	class:SkipFuncEvent
SkipFuncEvent	src/kern/system_events.hh	/^class SkipFuncEvent : public PCEvent$/;"	c
SlavePacketQueue	src/mem/packet_queue.cc	/^SlavePacketQueue::SlavePacketQueue(EventManager& _em, SlavePort& _slavePort,$/;"	f	class:SlavePacketQueue
SlavePacketQueue	src/mem/packet_queue.hh	/^class SlavePacketQueue : public PacketQueue$/;"	c
SlavePort	src/mem/port.cc	/^SlavePort::SlavePort(const std::string& name, MemObject* owner, PortID id)$/;"	f	class:SlavePort
SlavePort	src/mem/port.hh	/^class SlavePort : public BaseSlavePort$/;"	c
SlavePort	src/python/m5/params.py	/^class SlavePort(Port):$/;"	c
SlavePortConstIter	src/mem/bus.hh	/^    typedef std::vector<SlavePort*>::const_iterator SlavePortConstIter;$/;"	t	class:BaseBus
SlavePortIter	src/mem/bus.hh	/^    typedef std::vector<SlavePort*>::iterator SlavePortIter;$/;"	t	class:BaseBus
SmStack	src/base/cp_annotate.hh	/^    typedef std::map<StackId, std::vector<int> > SmStack;$/;"	t	class:CPA
SmartDict	src/python/m5/util/__init__.py	/^from smartdict import SmartDict$/;"	i
SmartDict	src/python/m5/util/smartdict.py	/^class SmartDict(attrdict):$/;"	c
SnoopLayer	src/mem/coherent_bus.hh	/^    typedef Layer<SlavePort,MasterPort> SnoopLayer;$/;"	t	class:CoherentBus
SnoopRespPort	src/mem/coherent_bus.hh	/^        SnoopRespPort(SlavePort& slave_port, CoherentBus& _bus) :$/;"	f	class:CoherentBus::SnoopRespPort
SnoopRespPort	src/mem/coherent_bus.hh	/^    class SnoopRespPort : public MasterPort$/;"	c	class:CoherentBus
SnoopingDmaPort	src/arch/arm/table_walker.hh	/^        SnoopingDmaPort(MemObject *dev, System *s) :$/;"	f	class:ArmISA::TableWalker::SnoopingDmaPort
SnoopingDmaPort	src/arch/arm/table_walker.hh	/^    class SnoopingDmaPort : public DmaPort$/;"	c	class:ArmISA::TableWalker
SoftPFReq	src/mem/packet.hh	/^        SoftPFReq,$/;"	e	enum:MemCmd::Command
SoftPFResp	src/mem/packet.hh	/^        SoftPFResp,$/;"	e	enum:MemCmd::Command
SoftResetFault	src/arch/mips/faults.hh	/^class SoftResetFault : public MipsFault<SoftResetFault>$/;"	c	namespace:MipsISA
SoftwareInitiatedReset	src/arch/sparc/faults.hh	/^class SoftwareInitiatedReset : public SparcFault<SoftwareInitiatedReset> {};$/;"	c	namespace:SparcISA
SoftwareInterrupt	src/arch/x86/faults.hh	/^        SoftwareInterrupt(uint8_t _vector) :$/;"	f	class:X86ISA::SoftwareInterrupt
SoftwareInterrupt	src/arch/x86/faults.hh	/^    class SoftwareInterrupt : public X86Interrupt$/;"	c	namespace:X86ISA
SoftwareStrobe	src/dev/intel_8254_timer.hh	/^        SoftwareStrobe,$/;"	e	enum:Intel8254Timer::ModeVal
Solaris	src/base/loader/object_file.hh	/^        Solaris,$/;"	e	enum:ObjectFile::OpSys
Solaris	src/kern/solaris/solaris.hh	/^class Solaris : public OperatingSystem$/;"	c
SortedDict	src/python/m5/util/__init__.py	/^from sorteddict import SortedDict$/;"	i
SortedDict	src/python/m5/util/sorteddict.py	/^class SortedDict(dict):$/;"	c
Source	src/mem/cache/mshr.hh	/^        enum Source {$/;"	g	class:MSHR::Target
SouthBridge	src/dev/x86/Pc.py	/^from SouthBridge import SouthBridge$/;"	i
SouthBridge	src/dev/x86/SouthBridge.py	/^class SouthBridge(SimObject):$/;"	c
SouthBridge	src/dev/x86/south_bridge.cc	/^SouthBridge::SouthBridge(const Params *p) : SimObject(p),$/;"	f	class:SouthBridge
SouthBridge	src/dev/x86/south_bridge.hh	/^class SouthBridge : public SimObject$/;"	c
Sp804	src/dev/arm/RealView.py	/^class Sp804(AmbaPioDevice):$/;"	c
Sp804	src/dev/arm/timer_sp804.cc	/^Sp804::Sp804(Params *p)$/;"	f	class:Sp804
Sp804	src/dev/arm/timer_sp804.hh	/^class Sp804 : public AmbaPioDevice$/;"	c
Sparc32Linux	src/arch/sparc/linux/linux.hh	/^class Sparc32Linux : public SparcLinux$/;"	c
Sparc32LinuxProcess	src/arch/sparc/linux/process.cc	/^Sparc32LinuxProcess::Sparc32LinuxProcess(LiveProcessParams * params,$/;"	f	class:Sparc32LinuxProcess
Sparc32LinuxProcess	src/arch/sparc/linux/process.hh	/^class Sparc32LinuxProcess : public SparcLinuxProcess, public Sparc32LiveProcess$/;"	c	namespace:SparcISA
Sparc32LiveProcess	src/arch/sparc/process.hh	/^    Sparc32LiveProcess(LiveProcessParams * params, ObjectFile *objFile) :$/;"	f	class:Sparc32LiveProcess
Sparc32LiveProcess	src/arch/sparc/process.hh	/^class Sparc32LiveProcess : public SparcLiveProcess$/;"	c
Sparc64LinuxProcess	src/arch/sparc/linux/process.cc	/^Sparc64LinuxProcess::Sparc64LinuxProcess(LiveProcessParams * params,$/;"	f	class:Sparc64LinuxProcess
Sparc64LinuxProcess	src/arch/sparc/linux/process.hh	/^class Sparc64LinuxProcess : public SparcLinuxProcess, public Sparc64LiveProcess$/;"	c	namespace:SparcISA
Sparc64LiveProcess	src/arch/sparc/process.hh	/^    Sparc64LiveProcess(LiveProcessParams * params, ObjectFile *objFile) :$/;"	f	class:Sparc64LiveProcess
Sparc64LiveProcess	src/arch/sparc/process.hh	/^class Sparc64LiveProcess : public SparcLiveProcess$/;"	c
SparcFault	src/arch/sparc/faults.hh	/^class SparcFault : public SparcFaultBase$/;"	c	namespace:SparcISA
SparcFaultBase	src/arch/sparc/faults.hh	/^class SparcFaultBase : public FaultBase$/;"	c	namespace:SparcISA
SparcISA	src/arch/sparc/SparcISA.py	/^class SparcISA(SimObject):$/;"	c
SparcISA	src/arch/sparc/asi.cc	/^namespace SparcISA$/;"	n	file:
SparcISA	src/arch/sparc/asi.hh	/^namespace SparcISA$/;"	n
SparcISA	src/arch/sparc/decoder.cc	/^namespace SparcISA$/;"	n	file:
SparcISA	src/arch/sparc/decoder.hh	/^namespace SparcISA$/;"	n
SparcISA	src/arch/sparc/faults.cc	/^namespace SparcISA$/;"	n	file:
SparcISA	src/arch/sparc/faults.hh	/^namespace SparcISA$/;"	n
SparcISA	src/arch/sparc/handlers.hh	/^namespace SparcISA {$/;"	n
SparcISA	src/arch/sparc/interrupts.hh	/^namespace SparcISA$/;"	n
SparcISA	src/arch/sparc/isa.cc	/^namespace SparcISA$/;"	n	file:
SparcISA	src/arch/sparc/isa.hh	/^namespace SparcISA$/;"	n
SparcISA	src/arch/sparc/isa_traits.hh	/^namespace SparcISA$/;"	n
SparcISA	src/arch/sparc/kernel_stats.hh	/^namespace SparcISA {$/;"	n
SparcISA	src/arch/sparc/linux/process.hh	/^namespace SparcISA {$/;"	n
SparcISA	src/arch/sparc/linux/syscalls.cc	/^namespace SparcISA {$/;"	n	file:
SparcISA	src/arch/sparc/locked_mem.hh	/^namespace SparcISA$/;"	n
SparcISA	src/arch/sparc/microcode_rom.hh	/^namespace SparcISA$/;"	n
SparcISA	src/arch/sparc/miscregs.hh	/^namespace SparcISA$/;"	n
SparcISA	src/arch/sparc/mmapped_ipr.hh	/^namespace SparcISA$/;"	n
SparcISA	src/arch/sparc/mt.hh	/^namespace SparcISA$/;"	n
SparcISA	src/arch/sparc/pagetable.cc	/^namespace SparcISA$/;"	n	file:
SparcISA	src/arch/sparc/pagetable.hh	/^namespace SparcISA {$/;"	n
SparcISA	src/arch/sparc/registers.hh	/^namespace SparcISA$/;"	n
SparcISA	src/arch/sparc/remote_gdb.hh	/^namespace SparcISA$/;"	n
SparcISA	src/arch/sparc/solaris/process.hh	/^namespace SparcISA {$/;"	n
SparcISA	src/arch/sparc/sparc_traits.hh	/^namespace SparcISA$/;"	n
SparcISA	src/arch/sparc/stacktrace.hh	/^namespace SparcISA$/;"	n
SparcISA	src/arch/sparc/tlb.cc	/^namespace SparcISA {$/;"	n	file:
SparcISA	src/arch/sparc/tlb.hh	/^namespace SparcISA$/;"	n
SparcISA	src/arch/sparc/tlb_map.hh	/^namespace SparcISA$/;"	n
SparcISA	src/arch/sparc/types.hh	/^namespace SparcISA$/;"	n
SparcISA	src/arch/sparc/utility.cc	/^namespace SparcISA {$/;"	n	file:
SparcISA	src/arch/sparc/utility.hh	/^namespace SparcISA$/;"	n
SparcISA	src/arch/sparc/vtophys.cc	/^namespace SparcISA {$/;"	n	file:
SparcISA	src/arch/sparc/vtophys.hh	/^namespace SparcISA {$/;"	n
SparcISA	src/cpu/BaseCPU.py	/^    from SparcISA import SparcISA$/;"	i
SparcInterrupts	src/arch/sparc/SparcInterrupts.py	/^class SparcInterrupts(SimObject):$/;"	c
SparcInterrupts	src/cpu/BaseCPU.py	/^    from SparcInterrupts import SparcInterrupts$/;"	i
SparcLinux	src/arch/sparc/linux/linux.hh	/^class SparcLinux : public Linux$/;"	c
SparcLinuxProcess	src/arch/sparc/linux/process.hh	/^class SparcLinuxProcess$/;"	c	namespace:SparcISA
SparcLiveProcess	src/arch/sparc/process.cc	/^SparcLiveProcess::SparcLiveProcess(LiveProcessParams * params,$/;"	f	class:SparcLiveProcess
SparcLiveProcess	src/arch/sparc/process.hh	/^class SparcLiveProcess : public LiveProcess$/;"	c
SparcNativeTrace	src/arch/sparc/SparcNativeTrace.py	/^class SparcNativeTrace(NativeTrace):$/;"	c
SparcNativeTrace	src/arch/sparc/nativetrace.hh	/^    SparcNativeTrace(const Params *p) : NativeTrace(p)$/;"	f	class:Trace::SparcNativeTrace
SparcNativeTrace	src/arch/sparc/nativetrace.hh	/^class SparcNativeTrace : public NativeTrace$/;"	c	namespace:Trace
SparcSolaris	src/arch/sparc/solaris/solaris.hh	/^class SparcSolaris : public Solaris$/;"	c
SparcSolarisProcess	src/arch/sparc/solaris/process.cc	/^SparcSolarisProcess::SparcSolarisProcess(LiveProcessParams * params,$/;"	f	class:SparcSolarisProcess
SparcSolarisProcess	src/arch/sparc/solaris/process.hh	/^class SparcSolarisProcess : public Sparc64LiveProcess$/;"	c	namespace:SparcISA
SparcSystem	src/arch/sparc/SparcSystem.py	/^class SparcSystem(System):$/;"	c
SparcSystem	src/arch/sparc/system.cc	/^SparcSystem::SparcSystem(Params *p)$/;"	f	class:SparcSystem
SparcSystem	src/arch/sparc/system.hh	/^class SparcSystem : public System$/;"	c
SparcTLB	src/arch/sparc/SparcTLB.py	/^class SparcTLB(BaseTLB):$/;"	c
SparcTLB	src/cpu/BaseCPU.py	/^    from SparcTLB import SparcTLB$/;"	i
SparseHistBase	src/base/statistics.hh	/^    SparseHistBase() { }$/;"	f	class:Stats::SparseHistBase
SparseHistBase	src/base/statistics.hh	/^class SparseHistBase : public DataWrap<Derived, SparseHistInfoProxy>$/;"	c	namespace:Stats
SparseHistData	src/base/stats/info.hh	/^struct SparseHistData$/;"	s	namespace:Stats
SparseHistInfo	src/base/stats/info.hh	/^class SparseHistInfo : public Info$/;"	c	namespace:Stats
SparseHistInfoProxy	src/base/statistics.hh	/^    SparseHistInfoProxy(Stat &stat) : InfoProxy<Stat, SparseHistInfo>(stat) {}$/;"	f	class:Stats::SparseHistInfoProxy
SparseHistInfoProxy	src/base/statistics.hh	/^class SparseHistInfoProxy : public InfoProxy<Stat, SparseHistInfo>$/;"	c	namespace:Stats
SparseHistPrint	src/base/stats/text.cc	/^SparseHistPrint::SparseHistPrint(const Text *text, const SparseHistInfo &info)$/;"	f	class:Stats::SparseHistPrint
SparseHistPrint	src/base/stats/text.cc	/^struct SparseHistPrint$/;"	s	namespace:Stats	file:
SparseHistStor	src/base/statistics.hh	/^    SparseHistStor(Info *info)$/;"	f	class:Stats::SparseHistStor
SparseHistStor	src/base/statistics.hh	/^class SparseHistStor$/;"	c	namespace:Stats
SparseHistogram	src/base/statistics.hh	/^class SparseHistogram : public SparseHistBase<SparseHistogram, SparseHistStor>$/;"	c	namespace:Stats
SparseMapType	src/mem/ruby/system/SparseMemory.hh	/^typedef m5::hash_map<Address, SparseMemEntry> SparseMapType;$/;"	t
SparseMemEntry	src/mem/ruby/system/SparseMemory.hh	/^typedef void* SparseMemEntry;$/;"	t
SparseMemory	src/mem/ruby/system/SparseMemory.cc	/^SparseMemory::SparseMemory(int number_of_levels)$/;"	f	class:SparseMemory
SparseMemory	src/mem/ruby/system/SparseMemory.hh	/^class SparseMemory$/;"	c
Speaker	src/dev/x86/speaker.hh	/^    Speaker(Params *p) : BasicPioDevice(p, 1),$/;"	f	class:X86ISA::Speaker
Speaker	src/dev/x86/speaker.hh	/^class Speaker : public BasicPioDevice$/;"	c	namespace:X86ISA
SpillNNormal	src/arch/sparc/faults.hh	/^    SpillNNormal(uint32_t n) : EnumeratedFault<SpillNNormal>(n) {;}$/;"	f	class:SparcISA::SpillNNormal
SpillNNormal	src/arch/sparc/faults.hh	/^class SpillNNormal : public EnumeratedFault<SpillNNormal>$/;"	c	namespace:SparcISA
SpillNOther	src/arch/sparc/faults.hh	/^    SpillNOther(uint32_t n) : EnumeratedFault<SpillNOther>(n)$/;"	f	class:SparcISA::SpillNOther
SpillNOther	src/arch/sparc/faults.hh	/^class SpillNOther : public EnumeratedFault<SpillNOther>$/;"	c	namespace:SparcISA
SplitFragmentSenderState	src/cpu/simple/timing.hh	/^        SplitFragmentSenderState(PacketPtr _bigPkt, int _index) :$/;"	f	class:TimingSimpleCPU::SplitFragmentSenderState
SplitFragmentSenderState	src/cpu/simple/timing.hh	/^    class SplitFragmentSenderState : public Packet::SenderState$/;"	c	class:TimingSimpleCPU
SplitMainSenderState	src/cpu/simple/timing.hh	/^    class SplitMainSenderState : public Packet::SenderState$/;"	c	class:TimingSimpleCPU
SquareWave	src/dev/intel_8254_timer.hh	/^        SquareWave,$/;"	e	enum:Intel8254Timer::ModeVal
SquashAfterPending	src/cpu/o3/commit.hh	/^        SquashAfterPending, \/\/< Committing instructions before a squash.$/;"	e	enum:DefaultCommit::ThreadStatus
SquashAll	src/cpu/inorder/resource_pool.hh	/^        SquashAll,$/;"	e	enum:ResourcePool::ResPoolEventType
SquashFromMemStall	src/cpu/inorder/cpu.hh	/^        SquashFromMemStall,$/;"	e	enum:InOrderCPU::CPUEventType
Squashed	src/cpu/base_dyn_inst.hh	/^        Squashed,                \/\/\/ Instruction is squashed$/;"	e	enum:BaseDynInst::Status
Squashed	src/cpu/inorder/inorder_dyn_inst.hh	/^        Squashed,                \/\/\/ Instruction is squashed$/;"	e	enum:InOrderDynInst::Status
Squashed	src/sim/eventq.hh	/^    static const FlagsType Squashed      = 0x0001; \/\/ has been squashed$/;"	m	class:EventBase
SquashedInIQ	src/cpu/base_dyn_inst.hh	/^        SquashedInIQ,            \/\/\/ Instruction is squashed in the IQ$/;"	e	enum:BaseDynInst::Status
SquashedInIQ	src/cpu/inorder/inorder_dyn_inst.hh	/^        SquashedInIQ,            \/\/\/ Instruction is squashed in the IQ$/;"	e	enum:InOrderDynInst::Status
SquashedInLSQ	src/cpu/base_dyn_inst.hh	/^        SquashedInLSQ,           \/\/\/ Instruction is squashed in the LSQ$/;"	e	enum:BaseDynInst::Status
SquashedInLSQ	src/cpu/inorder/inorder_dyn_inst.hh	/^        SquashedInLSQ,           \/\/\/ Instruction is squashed in the LSQ$/;"	e	enum:InOrderDynInst::Status
SquashedInROB	src/cpu/base_dyn_inst.hh	/^        SquashedInROB,           \/\/\/ Instruction is squashed in the ROB$/;"	e	enum:BaseDynInst::Status
SquashedInROB	src/cpu/inorder/inorder_dyn_inst.hh	/^        SquashedInROB,           \/\/\/ Instruction is squashed in the ROB$/;"	e	enum:InOrderDynInst::Status
Squashing	src/cpu/inorder/pipeline_stage.hh	/^        Squashing,$/;"	e	enum:PipelineStage::ThreadStatus
Squashing	src/cpu/o3/decode.hh	/^        Squashing,$/;"	e	enum:DefaultDecode::ThreadStatus
Squashing	src/cpu/o3/fetch.hh	/^        Squashing,$/;"	e	enum:DefaultFetch::ThreadStatus
Squashing	src/cpu/o3/iew.hh	/^        Squashing,$/;"	e	enum:DefaultIEW::StageStatus
Squashing	src/cpu/o3/rename.hh	/^        Squashing,$/;"	e	enum:DefaultRename::ThreadStatus
SrcClockDomain	src/sim/ClockDomain.py	/^class SrcClockDomain(ClockDomain):$/;"	c
SrcClockDomain	src/sim/clock_domain.cc	/^SrcClockDomain::SrcClockDomain(const Params *p) :$/;"	f	class:SrcClockDomain
SrcClockDomain	src/sim/clock_domain.hh	/^class SrcClockDomain : public ClockDomain$/;"	c
SrsOp	src/arch/arm/insts/mem.hh	/^    SrsOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::SrsOp
SrsOp	src/arch/arm/insts/mem.hh	/^class SrsOp : public MightBeMicro$/;"	c	namespace:ArmISA
StCache	src/base/cp_annotate.hh	/^    typedef std::vector<SCache> StCache;$/;"	t	class:CPA
Stack	src/arch/isa_parser.py	/^class Stack(list):$/;"	c
StackBias	src/arch/sparc/process.hh	/^    const Addr StackBias;$/;"	m	class:SparcLiveProcess
StackFault	src/arch/x86/faults.hh	/^        StackFault(uint32_t _errorCode) :$/;"	f	class:X86ISA::StackFault
StackFault	src/arch/x86/faults.hh	/^    class StackFault : public X86Fault$/;"	c	namespace:X86ISA
StackFaultBit	src/arch/x86/regs/misc.hh	/^        StackFaultBit = 1 << 6,$/;"	e	enum:X86ISA::X87StatusBit
StackId	src/base/cp_annotate.hh	/^    typedef std::pair<int, uint64_t> StackId;$/;"	t	class:CPA
StackPointerReg	src/arch/alpha/registers.hh	/^const RegIndex StackPointerReg = 30;$/;"	m	namespace:AlphaISA
StackPointerReg	src/arch/arm/registers.hh	/^const int StackPointerReg = INTREG_SP;$/;"	m	namespace:ArmISA
StackPointerReg	src/arch/mips/registers.hh	/^const int StackPointerReg = 29;$/;"	m	namespace:MipsISA
StackPointerReg	src/arch/power/registers.hh	/^const int StackPointerReg = 1;$/;"	m	namespace:PowerISA
StackPointerReg	src/arch/sparc/registers.hh	/^const int StackPointerReg = 14;$/;"	m	namespace:SparcISA
StackPointerReg	src/arch/x86/registers.hh	/^const int StackPointerReg = INTREG_RSP;$/;"	m	namespace:X86ISA
StackTrace	src/arch/alpha/stacktrace.cc	/^StackTrace::StackTrace()$/;"	f	class:AlphaISA::StackTrace
StackTrace	src/arch/alpha/stacktrace.cc	/^StackTrace::StackTrace(ThreadContext *_tc, StaticInstPtr inst)$/;"	f	class:AlphaISA::StackTrace
StackTrace	src/arch/alpha/stacktrace.hh	/^class StackTrace$/;"	c	namespace:AlphaISA
StackTrace	src/arch/arm/stacktrace.cc	/^    StackTrace::StackTrace()$/;"	f	class:ArmISA::StackTrace
StackTrace	src/arch/arm/stacktrace.cc	/^    StackTrace::StackTrace(ThreadContext *_tc, StaticInstPtr inst)$/;"	f	class:ArmISA::StackTrace
StackTrace	src/arch/arm/stacktrace.hh	/^class StackTrace$/;"	c	namespace:ArmISA
StackTrace	src/arch/mips/stacktrace.cc	/^StackTrace::StackTrace()$/;"	f	class:StackTrace
StackTrace	src/arch/mips/stacktrace.cc	/^StackTrace::StackTrace(ThreadContext *_tc, StaticInstPtr inst)$/;"	f	class:StackTrace
StackTrace	src/arch/mips/stacktrace.hh	/^class StackTrace$/;"	c	namespace:MipsISA
StackTrace	src/arch/power/stacktrace.cc	/^StackTrace::StackTrace()$/;"	f	class:PowerISA::StackTrace
StackTrace	src/arch/power/stacktrace.cc	/^StackTrace::StackTrace(ThreadContext *_tc, StaticInstPtr inst)$/;"	f	class:PowerISA::StackTrace
StackTrace	src/arch/power/stacktrace.hh	/^class StackTrace$/;"	c	namespace:PowerISA
StackTrace	src/arch/sparc/stacktrace.hh	/^class StackTrace$/;"	c	namespace:SparcISA
StackTrace	src/arch/x86/stacktrace.cc	/^    StackTrace::StackTrace()$/;"	f	class:X86ISA::StackTrace
StackTrace	src/arch/x86/stacktrace.cc	/^    StackTrace::StackTrace(ThreadContext *_tc, StaticInstPtr inst)$/;"	f	class:X86ISA::StackTrace
StackTrace	src/arch/x86/stacktrace.hh	/^    class StackTrace$/;"	c	namespace:X86ISA
Stage2LookUp	src/arch/arm/stage2_lookup.hh	/^    Stage2LookUp(TLB *s1Tlb, TLB *s2Tlb, TlbEntry s1Te, RequestPtr _req,$/;"	f	class:ArmISA::Stage2LookUp
Stage2LookUp	src/arch/arm/stage2_lookup.hh	/^class Stage2LookUp : public BaseTLB::Translation$/;"	c	namespace:ArmISA
Stage2MMU	src/arch/arm/stage2_mmu.cc	/^Stage2MMU::Stage2MMU(const Params *p)$/;"	f	class:Stage2MMU
Stage2MMU	src/arch/arm/stage2_mmu.hh	/^class Stage2MMU : public SimObject$/;"	c	namespace:ArmISA
Stage2Translation	src/arch/arm/stage2_mmu.cc	/^Stage2MMU::Stage2Translation::Stage2Translation(Stage2MMU &_parent,$/;"	f	class:Stage2MMU::Stage2Translation
Stage2Translation	src/arch/arm/stage2_mmu.hh	/^    class Stage2Translation : public BaseTLB::Translation$/;"	c	class:ArmISA::Stage2MMU
StageComm	src/cpu/inorder/comm.hh	/^        StageComm()$/;"	f	struct:TimeStruct::StageComm
StageComm	src/cpu/inorder/comm.hh	/^    struct StageComm {$/;"	s	struct:TimeStruct
StageIdx	src/cpu/o3/cpu.hh	/^    enum StageIdx {$/;"	g	class:FullO3CPU
StageList	src/cpu/inorder/resource_sked.hh	/^    typedef std::vector<std::list<ScheduleEntry*> > StageList;$/;"	t	class:ResourceSked
StageQueue	src/cpu/inorder/cpu.hh	/^    typedef TimeBuffer<InterStageStruct> StageQueue;$/;"	t	class:InOrderCPU
StageScheduler	src/cpu/inorder/cpu.hh	/^        StageScheduler(ThePipeline::RSkedPtr _rsked, int stage_num)$/;"	f	class:InOrderCPU::StageScheduler
StageScheduler	src/cpu/inorder/cpu.hh	/^    class StageScheduler {$/;"	c	class:InOrderCPU
StageStatus	src/cpu/inorder/pipeline_stage.hh	/^    enum StageStatus {$/;"	g	class:PipelineStage
StageStatus	src/cpu/o3/iew.hh	/^    enum StageStatus {$/;"	g	class:DefaultIEW
StageWidth	src/cpu/inorder/pipeline_traits.5stage.hh	/^    const unsigned StageWidth = 1;$/;"	m	namespace:ThePipeline
StageWidth	src/cpu/inorder/pipeline_traits.9stage.hh	/^    const unsigned StageWidth = 2;$/;"	m	namespace:ThePipeline
StageWidth	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^    const unsigned StageWidth = 1;$/;"	m	namespace:ThePipeline
StallAndWaitStatementAST	src/mem/slicc/ast/StallAndWaitStatementAST.py	/^class StallAndWaitStatementAST(StatementAST):$/;"	c
StallMsgMapType	src/mem/ruby/buffers/MessageBuffer.hh	/^    typedef std::map< Address, std::list<MsgPtr> > StallMsgMapType;$/;"	t	class:MessageBuffer
Stalls	src/cpu/inorder/pipeline_stage.hh	/^    struct Stalls {$/;"	s	class:PipelineStage
Stalls	src/cpu/o3/decode.hh	/^    struct Stalls {$/;"	s	class:DefaultDecode
Stalls	src/cpu/o3/fetch.hh	/^    struct Stalls {$/;"	s	class:DefaultFetch
Stalls	src/cpu/o3/iew.hh	/^    struct Stalls {$/;"	s	class:DefaultIEW
Stalls	src/cpu/o3/rename.hh	/^    struct Stalls {$/;"	s	class:DefaultRename
StandardCpuidFunction	src/arch/x86/cpuid.cc	/^    enum StandardCpuidFunction {$/;"	g	namespace:X86ISA	file:
StandardDeviation	src/base/statistics.hh	/^    StandardDeviation()$/;"	f	class:Stats::StandardDeviation
StandardDeviation	src/base/statistics.hh	/^class StandardDeviation : public DistBase<StandardDeviation, SampleStor>$/;"	c	namespace:Stats
StandardNumber	src/kern/tru64/tru64_syscalls.hh	/^        StandardNumber$/;"	e	enum:SystemCalls::__anon102
StartAddr	src/arch/alpha/linux/system.hh	/^    Addr StartAddr() const { return KernelStart + 0x10000; }$/;"	f	class:LinuxAlphaSystem
StartAddr	src/arch/mips/linux/system.hh	/^    Addr StartAddr() const { return KernelStart + 0x10000; }$/;"	f	class:LinuxMipsSystem
StartMultDiv	src/cpu/inorder/resources/mult_div_unit.hh	/^        StartMultDiv,$/;"	e	enum:MultDivUnit::Command
StartSquash	src/cpu/inorder/pipeline_stage.hh	/^        StartSquash,$/;"	e	enum:PipelineStage::ThreadStatus
StartSquash	src/cpu/o3/decode.hh	/^        StartSquash,$/;"	e	enum:DefaultDecode::ThreadStatus
StartSquash	src/cpu/o3/iew.hh	/^        StartSquash,$/;"	e	enum:DefaultIEW::StageStatus
StartSquash	src/cpu/o3/rename.hh	/^        StartSquash,$/;"	e	enum:DefaultRename::ThreadStatus
StartVAddrHole	src/arch/sparc/isa_traits.hh	/^const Addr StartVAddrHole = ULL(0x0000800000000000);$/;"	m	namespace:SparcISA
StartupInterrupt	src/arch/x86/faults.hh	/^        StartupInterrupt(uint8_t _vector) :$/;"	f	class:X86ISA::StartupInterrupt
StartupInterrupt	src/arch/x86/faults.hh	/^    class StartupInterrupt : public X86Interrupt$/;"	c	namespace:X86ISA
StatEvent	src/sim/stat_control.cc	/^    StatEvent(Tick _when, bool _dump, bool _reset, Tick _repeat)$/;"	f	class:Stats::StatEvent
StatEvent	src/sim/stat_control.cc	/^class StatEvent : public GlobalEvent$/;"	c	namespace:Stats	file:
StatStor	src/base/statistics.hh	/^    StatStor(Info *info)$/;"	f	class:Stats::StatStor
StatStor	src/base/statistics.hh	/^class StatStor$/;"	c	namespace:Stats
StatTest	src/unittest/stattest.cc	/^struct StatTest$/;"	s	file:
Stat_Event_Pri	src/sim/eventq.hh	/^    static const Priority Stat_Event_Pri =              90;$/;"	m	class:EventBase
State	src/arch/x86/decoder.hh	/^    enum State {$/;"	g	class:X86ISA::Decoder
State	src/arch/x86/pagetable_walker.hh	/^            enum State {$/;"	g	class:X86ISA::Walker::WalkerState
State	src/dev/arm/vgic.hh	/^    Bitfield<29,28> State;$/;"	m	class:VGic
State	src/mem/bus.hh	/^        enum State { IDLE, BUSY, RETRY };$/;"	g	class:BaseBus::Layer
State	src/mem/cache/blk.hh	/^    typedef unsigned State;$/;"	t	class:CacheBlk
State	src/mem/slicc/ast/TypeFieldEnumAST.py	/^from slicc.symbols import Event, State, RequestType$/;"	i
State	src/mem/slicc/ast/TypeFieldStateAST.py	/^from slicc.symbols import Event, State$/;"	i
State	src/mem/slicc/symbols/State.py	/^class State(Symbol):$/;"	c
State	src/mem/slicc/symbols/__init__.py	/^from slicc.symbols.State import State$/;"	i
State	src/sim/drain.hh	/^    enum State {$/;"	g	class:Drainable
StateDeclAST	src/mem/slicc/ast/StateDeclAST.py	/^class StateDeclAST(DeclAST):$/;"	c
StateID	src/arch/arm/nativetrace.hh	/^    enum StateID {$/;"	g	class:Trace::ArmNativeTrace
StateMachine	src/mem/slicc/ast/MachineAST.py	/^from slicc.symbols import StateMachine, Type$/;"	i
StateMachine	src/mem/slicc/symbols/StateMachine.py	/^class StateMachine(Symbol):$/;"	c
StateMachine	src/mem/slicc/symbols/SymbolTable.py	/^from slicc.symbols.StateMachine import StateMachine$/;"	i
StateMachine	src/mem/slicc/symbols/__init__.py	/^from slicc.symbols.StateMachine import StateMachine$/;"	i
Statement	src/arch/micro_asm.py	/^class Statement(object):$/;"	c
StatementAST	src/mem/slicc/ast/AssignStatementAST.py	/^from slicc.ast.StatementAST import StatementAST$/;"	i
StatementAST	src/mem/slicc/ast/CheckAllocateStatementAST.py	/^from slicc.ast.StatementAST import StatementAST$/;"	i
StatementAST	src/mem/slicc/ast/EnqueueStatementAST.py	/^from slicc.ast.StatementAST import StatementAST$/;"	i
StatementAST	src/mem/slicc/ast/ExprStatementAST.py	/^from slicc.ast.StatementAST import StatementAST$/;"	i
StatementAST	src/mem/slicc/ast/IfStatementAST.py	/^from slicc.ast.StatementAST import StatementAST$/;"	i
StatementAST	src/mem/slicc/ast/LocalVariableAST.py	/^from slicc.ast.StatementAST import StatementAST$/;"	i
StatementAST	src/mem/slicc/ast/PeekStatementAST.py	/^from slicc.ast.StatementAST import StatementAST$/;"	i
StatementAST	src/mem/slicc/ast/ReturnStatementAST.py	/^from slicc.ast.StatementAST import StatementAST$/;"	i
StatementAST	src/mem/slicc/ast/StallAndWaitStatementAST.py	/^from slicc.ast.StatementAST import StatementAST$/;"	i
StatementAST	src/mem/slicc/ast/StatementAST.py	/^class StatementAST(AST):$/;"	c
StatementListAST	src/mem/slicc/ast/StatementListAST.py	/^class StatementListAST(AST):$/;"	c
StaticCastAST	src/mem/slicc/ast/StaticCastAST.py	/^class StaticCastAST(ExprAST):$/;"	c
StaticInst	src/cpu/static_inst.hh	/^    StaticInst(const char *_mnemonic, ExtMachInst _machInst, OpClass __opClass)$/;"	f	class:StaticInst
StaticInst	src/cpu/static_inst.hh	/^class StaticInst : public RefCounted$/;"	c
StaticInstPtr	src/cpu/static_inst_fwd.hh	/^typedef RefCountingPtr<StaticInst> StaticInstPtr;$/;"	t
Statistics	src/arch/alpha/kernel_stats.cc	/^Statistics::Statistics(System *system)$/;"	f	class:AlphaISA::Kernel::Statistics
Statistics	src/arch/alpha/kernel_stats.hh	/^class Statistics : public ::Kernel::Statistics$/;"	c	namespace:AlphaISA::Kernel
Statistics	src/arch/arm/kernel_stats.hh	/^    Statistics(System *system) : ::Kernel::Statistics(system)$/;"	f	class:ArmISA::Kernel::Statistics
Statistics	src/arch/arm/kernel_stats.hh	/^class Statistics : public ::Kernel::Statistics$/;"	c	namespace:ArmISA::Kernel
Statistics	src/arch/mips/kernel_stats.hh	/^    Statistics(System *system) : ::Kernel::Statistics(system)$/;"	f	class:MipsISA::Kernel::Statistics
Statistics	src/arch/mips/kernel_stats.hh	/^class Statistics : public ::Kernel::Statistics$/;"	c	namespace:MipsISA::Kernel
Statistics	src/arch/power/kernel_stats.hh	/^    Statistics(System *system) : ::Kernel::Statistics(system)$/;"	f	class:PowerISA::Kernel::Statistics
Statistics	src/arch/power/kernel_stats.hh	/^class Statistics : public ::Kernel::Statistics$/;"	c	namespace:PowerISA::Kernel
Statistics	src/arch/sparc/kernel_stats.hh	/^    Statistics(System *system) : ::Kernel::Statistics(system)$/;"	f	class:SparcISA::Kernel::Statistics
Statistics	src/arch/sparc/kernel_stats.hh	/^class Statistics : public ::Kernel::Statistics$/;"	c	namespace:SparcISA::Kernel
Statistics	src/arch/x86/kernel_stats.hh	/^    Statistics(System * system) : ::Kernel::Statistics(system)$/;"	f	class:X86ISA::Kernel::Statistics
Statistics	src/arch/x86/kernel_stats.hh	/^class Statistics : public ::Kernel::Statistics$/;"	c	namespace:X86ISA::Kernel
Statistics	src/kern/kernel_stats.cc	/^Statistics::Statistics(System *system)$/;"	f	class:Kernel::Statistics
Statistics	src/kern/kernel_stats.hh	/^class Statistics : public Serializable$/;"	c	namespace:Kernel
Stats	src/base/statistics.cc	/^namespace Stats {$/;"	n	file:
Stats	src/base/statistics.hh	/^namespace Stats {$/;"	n
Stats	src/base/stats/info.hh	/^namespace Stats {$/;"	n
Stats	src/base/stats/output.hh	/^namespace Stats {$/;"	n
Stats	src/base/stats/text.cc	/^namespace Stats {$/;"	n	file:
Stats	src/base/stats/text.hh	/^namespace Stats {$/;"	n
Stats	src/base/stats/types.hh	/^namespace Stats {$/;"	n
Stats	src/sim/stat_control.cc	/^namespace Stats {$/;"	n	file:
Stats	src/sim/stat_control.hh	/^namespace Stats {$/;"	n
StatsCallback	src/mem/ruby/network/Network.hh	/^        StatsCallback(Network *_ctr)$/;"	f	class:Network::StatsCallback
StatsCallback	src/mem/ruby/network/Network.hh	/^    class StatsCallback : public Callback$/;"	c	class:Network
StatsCallback	src/mem/ruby/slicc_interface/AbstractController.hh	/^        StatsCallback(AbstractController *_ctr) : ctr(_ctr) {}$/;"	f	class:AbstractController::StatsCallback
StatsCallback	src/mem/ruby/slicc_interface/AbstractController.hh	/^    class StatsCallback : public Callback$/;"	c	class:AbstractController
Status	src/cpu/base_dyn_inst.hh	/^    enum Status {$/;"	g	class:BaseDynInst
Status	src/cpu/inorder/cpu.hh	/^    enum Status {$/;"	g	class:InOrderCPU
Status	src/cpu/inorder/inorder_dyn_inst.hh	/^    enum Status {$/;"	g	class:InOrderDynInst
Status	src/cpu/inorder/thread_state.hh	/^    typedef ThreadContext::Status Status;$/;"	t	class:InOrderThreadState
Status	src/cpu/kvm/base.hh	/^    enum Status {$/;"	g	class:BaseKvmCPU
Status	src/cpu/o3/cpu.hh	/^    enum Status {$/;"	g	class:FullO3CPU
Status	src/cpu/o3/iew.hh	/^    enum Status {$/;"	g	class:DefaultIEW
Status	src/cpu/o3/rob.hh	/^    enum Status {$/;"	g	class:ROB
Status	src/cpu/o3/thread_state.hh	/^    typedef ThreadContext::Status Status;$/;"	t	struct:O3ThreadState
Status	src/cpu/ozone/back_end.hh	/^    enum Status {$/;"	g	class:BackEnd
Status	src/cpu/ozone/cpu.hh	/^    enum Status {$/;"	g	class:OzoneCPU
Status	src/cpu/ozone/front_end.hh	/^    enum Status {$/;"	g	class:FrontEnd
Status	src/cpu/ozone/inorder_back_end.hh	/^    enum Status {$/;"	g	class:InorderBackEnd
Status	src/cpu/ozone/lsq_unit.hh	/^    enum Status {$/;"	g	class:OzoneLSQ
Status	src/cpu/ozone/lw_back_end.hh	/^    enum Status {$/;"	g	class:LWBackEnd
Status	src/cpu/ozone/lw_lsq.hh	/^    enum Status {$/;"	g	class:OzoneLWLSQ
Status	src/cpu/ozone/thread_state.hh	/^    typedef typename ThreadContext::Status Status;$/;"	t	struct:OzoneThreadState
Status	src/cpu/simple/base.hh	/^    enum Status {$/;"	g	class:BaseSimpleCPU
Status	src/cpu/simple_thread.hh	/^    typedef ThreadContext::Status Status;$/;"	t	class:SimpleThread
Status	src/cpu/thread_context.hh	/^    enum Status$/;"	g	class:ThreadContext
Status	src/cpu/thread_state.hh	/^    typedef ThreadContext::Status Status;$/;"	t	struct:ThreadState
Status	src/dev/CopyEngine.py	/^    Status = 0x0000$/;"	v	class:CopyEngine
Status	src/dev/Ethernet.py	/^    Status = 0x0000$/;"	v	class:IGbE
Status	src/dev/Ethernet.py	/^    Status = 0x0290$/;"	v	class:NSGigE
Status	src/dev/Ethernet.py	/^    Status = 0x0290$/;"	v	class:Sinic
Status	src/dev/Ide.py	/^    Status = 0x280$/;"	v	class:IdeController
Status	src/dev/Pci.py	/^    Status = Param.UInt16(0, "Status")$/;"	v	class:PciDevice
StatusRequest	src/dev/ps2.hh	/^    StatusRequest   = 0xe9,$/;"	e	enum:Ps2::__anon82
Storage	src/base/statistics.hh	/^    typedef Stor Storage;$/;"	t	class:Stats::DistBase
Storage	src/base/statistics.hh	/^    typedef Stor Storage;$/;"	t	class:Stats::ScalarBase
Storage	src/base/statistics.hh	/^    typedef Stor Storage;$/;"	t	class:Stats::SparseHistBase
Storage	src/base/statistics.hh	/^    typedef Stor Storage;$/;"	t	class:Stats::Vector2dBase
Storage	src/base/statistics.hh	/^    typedef Stor Storage;$/;"	t	class:Stats::VectorBase
Storage	src/base/statistics.hh	/^    typedef Stor Storage;$/;"	t	class:Stats::VectorDistBase
StorageParams	src/base/statistics.hh	/^struct StorageParams$/;"	s	namespace:Stats
StoreCheck	src/arch/x86/insts/microldstop.hh	/^        StoreCheck = 4$/;"	e	enum:X86ISA::FlagBit
StoreCompletionEvent	src/cpu/ozone/lsq_unit.hh	/^    class StoreCompletionEvent : public Event {$/;"	c	class:OzoneLSQ
StoreCompletionEvent	src/cpu/ozone/lsq_unit_impl.hh	/^OzoneLSQ<Impl>::StoreCompletionEvent::StoreCompletionEvent(int store_idx,$/;"	f	class:OzoneLSQ::StoreCompletionEvent
StoreCondFailReq	src/mem/packet.hh	/^        StoreCondFailReq,       \/\/ Failed StoreCondReq in MSHR (never sent)$/;"	e	enum:MemCmd::Command
StoreCondReq	src/mem/packet.hh	/^        StoreCondReq,$/;"	e	enum:MemCmd::Command
StoreCondResp	src/mem/packet.hh	/^        StoreCondResp,$/;"	e	enum:MemCmd::Command
StoreError	src/arch/sparc/faults.hh	/^class StoreError : public SparcFault<StoreError> {};$/;"	c	namespace:SparcISA
StoreSet	src/cpu/o3/store_set.cc	/^StoreSet::StoreSet(uint64_t clear_period, int _SSIT_size, int _LFST_size)$/;"	f	class:StoreSet
StoreSet	src/cpu/o3/store_set.hh	/^    StoreSet() { };$/;"	f	class:StoreSet
StoreSet	src/cpu/o3/store_set.hh	/^class StoreSet$/;"	c
StoreTrace	src/mem/ruby/profiler/StoreTrace.cc	/^StoreTrace::StoreTrace(const Address& addr)$/;"	f	class:StoreTrace
StoreTrace	src/mem/ruby/profiler/StoreTrace.hh	/^    StoreTrace() { }$/;"	f	class:StoreTrace
StoreTrace	src/mem/ruby/profiler/StoreTrace.hh	/^class StoreTrace$/;"	c
StrideEntry	src/mem/cache/prefetch/stride.hh	/^    class StrideEntry$/;"	c	class:StridePrefetcher
StridePrefetcher	src/mem/cache/prefetch/Prefetcher.py	/^class StridePrefetcher(BasePrefetcher):$/;"	c
StridePrefetcher	src/mem/cache/prefetch/stride.hh	/^    StridePrefetcher(const Params *p)$/;"	f	class:StridePrefetcher
StridePrefetcher	src/mem/cache/prefetch/stride.hh	/^class StridePrefetcher : public BasePrefetcher$/;"	c
String	src/python/m5/params.py	/^class String(ParamValue,str):$/;"	c
StringWrap	src/base/trace.hh	/^    StringWrap(const std::string &s) : str(s) {}$/;"	f	struct:StringWrap
StringWrap	src/base/trace.hh	/^struct StringWrap$/;"	s
StronglyOrdered	src/arch/arm/pagetable.hh	/^        StronglyOrdered,$/;"	m	class:ArmISA::TlbEntry::MemoryType
SubBitUnion	src/base/bitunion.hh	/^#define SubBitUnion(/;"	d
SubBlock	src/mem/ruby/common/SubBlock.cc	/^SubBlock::SubBlock(const Address& addr, int size)$/;"	f	class:SubBlock
SubBlock	src/mem/ruby/common/SubBlock.hh	/^    SubBlock() { }$/;"	f	class:SubBlock
SubBlock	src/mem/ruby/common/SubBlock.hh	/^class SubBlock$/;"	c
SubClassCode	src/dev/CopyEngine.py	/^    SubClassCode = 0x08$/;"	v	class:CopyEngine
SubClassCode	src/dev/Ethernet.py	/^    SubClassCode = 0x00$/;"	v	class:IGbE
SubClassCode	src/dev/Ethernet.py	/^    SubClassCode = 0x00$/;"	v	class:NSGigE
SubClassCode	src/dev/Ethernet.py	/^    SubClassCode = 0x00$/;"	v	class:Sinic
SubClassCode	src/dev/Ide.py	/^    SubClassCode = 0x01$/;"	v	class:IdeController
SubClassCode	src/dev/Pci.py	/^    SubClassCode = Param.UInt8(0, "Sub-Class Code")$/;"	v	class:PciDevice
SubOperandList	src/arch/isa_parser.py	/^class SubOperandList(OperandList):$/;"	c
SubOption	src/python/m5/util/jobfile.py	/^class SubOption(Data):$/;"	c
SubsystemID	src/dev/CopyEngine.py	/^    SubsystemID = 0$/;"	v	class:CopyEngine
SubsystemID	src/dev/Ethernet.py	/^    SubsystemID = 0x1008$/;"	v	class:IGbE
SubsystemID	src/dev/Pci.py	/^    SubsystemID = Param.UInt16(0x00, "Subsystem ID")$/;"	v	class:PciDevice
SubsystemVendorID	src/dev/CopyEngine.py	/^    SubsystemVendorID = 0$/;"	v	class:CopyEngine
SubsystemVendorID	src/dev/Ethernet.py	/^    SubsystemVendorID = 0x8086$/;"	v	class:IGbE
SubsystemVendorID	src/dev/Pci.py	/^    SubsystemVendorID = Param.UInt16(0x00, "Subsystem Vendor ID")$/;"	v	class:PciDevice
SumNode	src/base/statistics.hh	/^    SumNode(NodePtr &p) : l(p), vresult(1) {}$/;"	f	class:Stats::SumNode
SumNode	src/base/statistics.hh	/^class SumNode : public Node$/;"	c	namespace:Stats
SupervisorCall	src/arch/arm/faults.hh	/^    SupervisorCall(ExtMachInst _machInst, uint32_t _iss,$/;"	f	class:ArmISA::SupervisorCall
SupervisorCall	src/arch/arm/faults.hh	/^class SupervisorCall : public ArmFaultVals<SupervisorCall>$/;"	c	namespace:ArmISA
SupervisorTrap	src/arch/arm/faults.hh	/^    SupervisorTrap(ExtMachInst _machInst, uint32_t _iss,$/;"	f	class:ArmISA::SupervisorTrap
SupervisorTrap	src/arch/arm/faults.hh	/^class SupervisorTrap : public ArmFaultVals<SupervisorTrap>$/;"	c	namespace:ArmISA
SuppressReturnValue	src/sim/syscall_emul.hh	/^        SuppressReturnValue = 1$/;"	e	enum:SyscallDesc::Flags
SuspendThread	src/cpu/inorder/cpu.hh	/^        SuspendThread,$/;"	e	enum:InOrderCPU::CPUEventType
Suspended	src/cpu/thread_context.hh	/^        Suspended,$/;"	e	enum:ThreadContext::Status
SwExpl	src/base/cp_annotate.hh	/^    typedef std::map<StackId, bool> SwExpl;$/;"	t	class:CPA
SwReg	src/dev/arm/rv_ctrl.hh	/^        SwReg      = 0x04,$/;"	e	enum:RealViewCtrl::__anon67
Swap	src/arch/arm/insts/mem.hh	/^    Swap(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::Swap
Swap	src/arch/arm/insts/mem.hh	/^class Swap : public PredOp$/;"	c	namespace:ArmISA
SwapReq	src/mem/packet.hh	/^        SwapReq,$/;"	e	enum:MemCmd::Command
SwapResp	src/mem/packet.hh	/^        SwapResp,$/;"	e	enum:MemCmd::Command
Switch	src/mem/ruby/network/simple/SimpleNetwork.py	/^class Switch(BasicRouter):$/;"	c
Switch	src/mem/ruby/network/simple/Switch.cc	/^Switch::Switch(const Params *p) : BasicRouter(p)$/;"	f	class:Switch
Switch	src/mem/ruby/network/simple/Switch.hh	/^class Switch : public BasicRouter$/;"	c
SwitchID	src/mem/ruby/common/TypeDefines.hh	/^typedef unsigned int SwitchID;$/;"	t
SwitchOnCacheMiss	src/cpu/inorder/cpu.hh	/^        SwitchOnCacheMiss$/;"	e	enum:InOrderCPU::ThreadModel
Switch_d	src/mem/ruby/network/garnet/fixed-pipeline/Switch_d.cc	/^Switch_d::Switch_d(Router_d *router)$/;"	f	class:Switch_d
Switch_d	src/mem/ruby/network/garnet/fixed-pipeline/Switch_d.hh	/^class Switch_d : public Consumer$/;"	c
SwitchedOut	src/cpu/inorder/cpu.hh	/^        SwitchedOut$/;"	e	enum:InOrderCPU::Status
SwitchedOut	src/cpu/o3/cpu.hh	/^        SwitchedOut$/;"	e	enum:FullO3CPU::Status
SwitchedOut	src/cpu/ozone/cpu.hh	/^        SwitchedOut$/;"	e	enum:OzoneCPU::Status
SxOF	src/arch/x86/insts/microop.hh	/^            SxOF,$/;"	e	enum:X86ISA::ConditionTests::CondTest
SxOvZF	src/arch/x86/insts/microop.hh	/^            SxOvZF,$/;"	e	enum:X86ISA::ConditionTests::CondTest
Symbol	src/mem/slicc/symbols/Action.py	/^from slicc.symbols.Symbol import Symbol$/;"	i
Symbol	src/mem/slicc/symbols/Event.py	/^from slicc.symbols.Symbol import Symbol$/;"	i
Symbol	src/mem/slicc/symbols/Func.py	/^from slicc.symbols.Symbol import Symbol$/;"	i
Symbol	src/mem/slicc/symbols/RequestType.py	/^from slicc.symbols.Symbol import Symbol$/;"	i
Symbol	src/mem/slicc/symbols/State.py	/^from slicc.symbols.Symbol import Symbol$/;"	i
Symbol	src/mem/slicc/symbols/StateMachine.py	/^from slicc.symbols.Symbol import Symbol$/;"	i
Symbol	src/mem/slicc/symbols/Symbol.py	/^class Symbol(PairContainer):$/;"	c
Symbol	src/mem/slicc/symbols/Transition.py	/^from slicc.symbols.Symbol import Symbol$/;"	i
Symbol	src/mem/slicc/symbols/Type.py	/^from slicc.symbols.Symbol import Symbol$/;"	i
Symbol	src/mem/slicc/symbols/Var.py	/^from slicc.symbols.Symbol import Symbol$/;"	i
Symbol	src/mem/slicc/symbols/__init__.py	/^from slicc.symbols.Symbol import Symbol$/;"	i
SymbolTable	src/base/loader/symtab.hh	/^    SymbolTable() {}$/;"	f	class:SymbolTable
SymbolTable	src/base/loader/symtab.hh	/^    SymbolTable(const std::string &file) { load(file); }$/;"	f	class:SymbolTable
SymbolTable	src/base/loader/symtab.hh	/^class SymbolTable$/;"	c
SymbolTable	src/mem/slicc/parser.py	/^from slicc.symbols import SymbolTable$/;"	i
SymbolTable	src/mem/slicc/symbols/Symbol.py	/^        from slicc.symbols import SymbolTable$/;"	i
SymbolTable	src/mem/slicc/symbols/SymbolTable.py	/^class SymbolTable(object):$/;"	c
SymbolTable	src/mem/slicc/symbols/__init__.py	/^from slicc.symbols.SymbolTable import SymbolTable$/;"	i
SynchExtAbtOnTranslTableWalkLL	src/arch/arm/faults.hh	/^        SynchExtAbtOnTranslTableWalkLL,$/;"	e	enum:ArmISA::ArmFault::FaultSource
SynchPtyErrOnMemoryAccess	src/arch/arm/faults.hh	/^        SynchPtyErrOnMemoryAccess,$/;"	e	enum:ArmISA::ArmFault::FaultSource
SynchPtyErrOnTranslTableWalkLL	src/arch/arm/faults.hh	/^        SynchPtyErrOnTranslTableWalkLL = SynchExtAbtOnTranslTableWalkLL + 4,$/;"	e	enum:ArmISA::ArmFault::FaultSource
SynchronousExternalAbort	src/arch/arm/faults.hh	/^        SynchronousExternalAbort,$/;"	e	enum:ArmISA::ArmFault::FaultSource
SysDC64	src/arch/arm/insts/mem64.hh	/^    SysDC64(const char *mnem, ExtMachInst _machInst, OpClass __opClass,$/;"	f	class:ArmISA::SysDC64
SysDC64	src/arch/arm/insts/mem64.hh	/^class SysDC64 : public ArmStaticInst$/;"	c	namespace:ArmISA
SysDescTable	src/arch/x86/bios/acpi.cc	/^X86ISA::ACPI::SysDescTable::SysDescTable(Params *p,$/;"	f	class:X86ISA::ACPI::SysDescTable
SysDescTable	src/arch/x86/bios/acpi.hh	/^class SysDescTable : public SimObject$/;"	c	namespace:X86ISA::ACPI
Syscall	src/cpu/inorder/cpu.hh	/^        Syscall,$/;"	e	enum:InOrderCPU::CPUEventType
SyscallDesc	src/sim/syscall_emul.hh	/^    SyscallDesc(const char *_name, FuncPtr _funcPtr, int _flags = 0)$/;"	f	class:SyscallDesc
SyscallDesc	src/sim/syscall_emul.hh	/^class SyscallDesc {$/;"	c
SyscallNumReg	src/arch/alpha/registers.hh	/^const RegIndex SyscallNumReg = 0;$/;"	m	namespace:AlphaISA
SyscallNumReg	src/arch/arm/registers.hh	/^const int SyscallNumReg = ReturnValueReg;$/;"	m	namespace:ArmISA
SyscallNumReg	src/arch/power/registers.hh	/^const int SyscallNumReg = 0;$/;"	m	namespace:PowerISA
SyscallPseudoReturnReg	src/arch/alpha/registers.hh	/^const RegIndex SyscallPseudoReturnReg = 20;$/;"	m	namespace:AlphaISA
SyscallPseudoReturnReg	src/arch/arm/registers.hh	/^const int SyscallPseudoReturnReg = ReturnValueReg;$/;"	m	namespace:ArmISA
SyscallPseudoReturnReg	src/arch/mips/registers.hh	/^const int SyscallPseudoReturnReg = 3;$/;"	m	namespace:MipsISA
SyscallPseudoReturnReg	src/arch/power/registers.hh	/^const int SyscallPseudoReturnReg = 3;$/;"	m	namespace:PowerISA
SyscallPseudoReturnReg	src/arch/sparc/registers.hh	/^const int SyscallPseudoReturnReg = 9;$/;"	m	namespace:SparcISA
SyscallPseudoReturnReg	src/arch/x86/registers.hh	/^const int SyscallPseudoReturnReg = INTREG_RDX;$/;"	m	namespace:X86ISA
SyscallReturn	src/sim/syscallreturn.hh	/^    SyscallReturn(T v)$/;"	f	class:SyscallReturn
SyscallReturn	src/sim/syscallreturn.hh	/^    SyscallReturn(T v, bool s)$/;"	f	class:SyscallReturn
SyscallReturn	src/sim/syscallreturn.hh	/^class SyscallReturn$/;"	c
SyscallSuccessReg	src/arch/alpha/registers.hh	/^const RegIndex SyscallSuccessReg = 19;$/;"	m	namespace:AlphaISA
SyscallSuccessReg	src/arch/arm/registers.hh	/^const int SyscallSuccessReg = ReturnValueReg;$/;"	m	namespace:ArmISA
SyscallSuccessReg	src/arch/mips/registers.hh	/^const int SyscallSuccessReg = 7;$/;"	m	namespace:MipsISA
SyscallSuccessReg	src/arch/power/registers.hh	/^const int SyscallSuccessReg = 3;$/;"	m	namespace:PowerISA
SyscallTable	src/arch/arm/linux/process.hh	/^    struct SyscallTable$/;"	s	class:ArmLinuxProcessBits
Syscall_Pri	src/cpu/inorder/cpu.hh	/^        Syscall_Pri                    = Event::CPU_Tick_Pri + 9,$/;"	e	enum:InOrderCPU::CPUEventPri
System	src/arch/alpha/AlphaSystem.py	/^from System import System$/;"	i
System	src/arch/arm/ArmSystem.py	/^from System import System$/;"	i
System	src/arch/mips/MipsSystem.py	/^from System import System$/;"	i
System	src/arch/sparc/SparcSystem.py	/^from System import System$/;"	i
System	src/arch/x86/X86System.py	/^from System import System$/;"	i
System	src/mem/Bus.py	/^from System import System$/;"	i
System	src/mem/CommMonitor.py	/^from System import System$/;"	i
System	src/sim/System.py	/^class System(MemObject):$/;"	c
System	src/sim/system.cc	/^System::System(Params *p)$/;"	f	class:System
System	src/sim/system.hh	/^class System : public MemObject$/;"	c
SystemCallFault	src/arch/mips/faults.hh	/^class SystemCallFault : public MipsFault<SystemCallFault> {};$/;"	c	namespace:MipsISA
SystemCalls	src/kern/linux/linux_syscalls.hh	/^class SystemCalls<Linux>$/;"	c
SystemCalls	src/kern/tru64/tru64_syscalls.hh	/^class SystemCalls<Tru64>$/;"	c
SystemCounter	src/dev/arm/generic_timer.hh	/^        SystemCounter()$/;"	f	class:GenericTimer::SystemCounter
SystemCounter	src/dev/arm/generic_timer.hh	/^    class SystemCounter$/;"	c	class:GenericTimer
SystemError	src/arch/arm/faults.cc	/^SystemError::SystemError()$/;"	f	class:ArmISA::SystemError
SystemError	src/arch/arm/faults.hh	/^class SystemError : public ArmFaultVals<SystemError>$/;"	c	namespace:ArmISA
SystemManagementInterrupt	src/arch/x86/faults.hh	/^        SystemManagementInterrupt() :$/;"	f	class:X86ISA::SystemManagementInterrupt
SystemManagementInterrupt	src/arch/x86/faults.hh	/^    class SystemManagementInterrupt : public X86Interrupt$/;"	c	namespace:X86ISA
SystemPort	src/sim/system.hh	/^        SystemPort(const std::string &_name, MemObject *_owner)$/;"	f	class:System::SystemPort
SystemPort	src/sim/system.hh	/^    class SystemPort : public MasterPort$/;"	c	class:System
SystemReset	src/dev/x86/i8042.hh	/^        SystemReset = 0xFE$/;"	e	enum:X86ISA::I8042::Command
T1000	src/dev/sparc/T1000.py	/^class T1000(Platform):$/;"	c
T1000	src/dev/sparc/t1000.cc	/^T1000::T1000(const Params *p)$/;"	f	class:T1000
T1000	src/dev/sparc/t1000.hh	/^class T1000 : public Platform$/;"	c
TADV	src/dev/i8254xGBe_defs.hh	/^    struct TADV : public Reg<uint32_t> { \/\/ 0x382C TADV Register$/;"	s	struct:iGbReg::Regs
TAIL_	src/mem/ruby/network/garnet/NetworkHeader.hh	/^enum flit_type {HEAD_, BODY_, TAIL_, HEAD_TAIL_, NUM_FLIT_TYPE_};$/;"	e	enum:flit_type
TANAR	src/dev/ns_gige_reg.h	/^    TANAR =             0xe8,$/;"	e	enum:DeviceRegisterAddress
TANAR_FULL_DUP	src/dev/ns_gige_reg.h	/^     TANAR_FULL_DUP =   0x00000020,$/;"	e	enum:TBIAutoNegotiationAdvertisementRegister
TANAR_HALF_DUP	src/dev/ns_gige_reg.h	/^     TANAR_HALF_DUP =   0x00000040,$/;"	e	enum:TBIAutoNegotiationAdvertisementRegister
TANAR_NP	src/dev/ns_gige_reg.h	/^     TANAR_NP =         0x00008000,$/;"	e	enum:TBIAutoNegotiationAdvertisementRegister
TANAR_PS1	src/dev/ns_gige_reg.h	/^     TANAR_PS1 =        0x00000080,$/;"	e	enum:TBIAutoNegotiationAdvertisementRegister
TANAR_PS2	src/dev/ns_gige_reg.h	/^     TANAR_PS2 =        0x00000100,$/;"	e	enum:TBIAutoNegotiationAdvertisementRegister
TANAR_RF1	src/dev/ns_gige_reg.h	/^     TANAR_RF1 =        0x00001000,$/;"	e	enum:TBIAutoNegotiationAdvertisementRegister
TANAR_RF2	src/dev/ns_gige_reg.h	/^     TANAR_RF2 =        0x00002000,$/;"	e	enum:TBIAutoNegotiationAdvertisementRegister
TANAR_UNUSED	src/dev/ns_gige_reg.h	/^     TANAR_UNUSED =     0x00000E1F$/;"	e	enum:TBIAutoNegotiationAdvertisementRegister
TANER	src/dev/ns_gige_reg.h	/^    TANER =             0xf0,$/;"	e	enum:DeviceRegisterAddress
TANLPAR	src/dev/ns_gige_reg.h	/^    TANLPAR =           0xec,$/;"	e	enum:DeviceRegisterAddress
TARGET_ARM	src/arch/arm/isa_traits.hh	/^#define TARGET_ARM$/;"	d
TBETable	src/mem/ruby/system/TBETable.hh	/^    TBETable(int number_of_TBEs)$/;"	f	class:TBETable
TBETable	src/mem/ruby/system/TBETable.hh	/^class TBETable$/;"	c
TBIAutoNegotiationAdvertisementRegister	src/dev/ns_gige_reg.h	/^enum TBIAutoNegotiationAdvertisementRegister {$/;"	g
TBICR	src/dev/ns_gige_reg.h	/^    TBICR =             0xe0,$/;"	e	enum:DeviceRegisterAddress
TBICR_MR_AN_ENABLE	src/dev/ns_gige_reg.h	/^     TBICR_MR_AN_ENABLE =       0x00001000,$/;"	e	enum:TBIControlRegister
TBICR_MR_LOOPBACK	src/dev/ns_gige_reg.h	/^     TBICR_MR_LOOPBACK =        0x00004000,$/;"	e	enum:TBIControlRegister
TBICR_MR_RESTART_AN	src/dev/ns_gige_reg.h	/^     TBICR_MR_RESTART_AN =      0x00000200$/;"	e	enum:TBIControlRegister
TBIControlRegister	src/dev/ns_gige_reg.h	/^enum TBIControlRegister {$/;"	g
TBISR	src/dev/ns_gige_reg.h	/^    TBISR =             0xe4,$/;"	e	enum:DeviceRegisterAddress
TBISR_MR_AN_COMPLETE	src/dev/ns_gige_reg.h	/^     TBISR_MR_AN_COMPLETE =     0x00000004$/;"	e	enum:TBIStatusRegister
TBISR_MR_LINK_STATUS	src/dev/ns_gige_reg.h	/^     TBISR_MR_LINK_STATUS =     0x00000020,$/;"	e	enum:TBIStatusRegister
TBIStatusRegister	src/dev/ns_gige_reg.h	/^enum TBIStatusRegister {$/;"	g
TBL_SYSINFO	src/arch/alpha/linux/linux.hh	/^    static const int TBL_SYSINFO = 12;$/;"	m	class:AlphaLinux
TBL_SYSINFO	src/arch/alpha/tru64/tru64.hh	/^    static const int TBL_SYSINFO = 12;$/;"	m	class:AlphaTru64
TBL_SYSINFO	src/arch/arm/linux/linux.hh	/^    static const int TBL_SYSINFO = 12;$/;"	m	class:ArmLinux32
TBL_SYSINFO	src/arch/arm/linux/linux.hh	/^    static const int TBL_SYSINFO = 12;$/;"	m	class:ArmLinux64
TBL_SYSINFO	src/arch/mips/linux/linux.hh	/^    static const int TBL_SYSINFO = 12;$/;"	m	class:MipsLinux
TCPDUMP_MAGIC	src/dev/etherdump.cc	/^#define TCPDUMP_MAGIC /;"	d	file:
TCSETAW_	src/arch/arm/linux/linux.hh	/^    static const unsigned TCSETAW_    = 0x5407;     \/\/ 2.6.15 kernel$/;"	m	class:ArmLinux64
TCTL	src/dev/i8254xGBe_defs.hh	/^    struct TCTL : public Reg<uint32_t> { \/\/ 0x0400 TCTL Register$/;"	s	struct:iGbReg::Regs
TDBA	src/dev/i8254xGBe_defs.hh	/^    struct TDBA : public Reg<uint64_t> { \/\/ 0x3800 TDBAL Register$/;"	s	struct:iGbReg::Regs
TDH	src/dev/i8254xGBe_defs.hh	/^    struct TDH : public Reg<uint32_t> { \/\/ 0x3810 TDH Register$/;"	s	struct:iGbReg::Regs
TDLEN	src/dev/i8254xGBe_defs.hh	/^    struct TDLEN : public Reg<uint32_t> { \/\/ 0x3808 TDLEN Register$/;"	s	struct:iGbReg::Regs
TDT	src/dev/i8254xGBe_defs.hh	/^    struct TDT : public Reg<uint32_t> { \/\/ 0x3818 TDT Register$/;"	s	struct:iGbReg::Regs
TESR	src/dev/ns_gige_reg.h	/^    TESR =              0xf4,$/;"	e	enum:DeviceRegisterAddress
TESTER_ALLOCATOR	src/cpu/testers/memtest/memtest.cc	/^int TESTER_ALLOCATOR=0;$/;"	v
TESTER_NETWORK	src/cpu/testers/networktest/networktest.cc	/^int TESTER_NETWORK=0;$/;"	v
TFBit	src/arch/x86/regs/misc.hh	/^        TFBit = 1 << 8,$/;"	e	enum:X86ISA::RFLAGBit
TGT_AT_FDCWD	src/kern/linux/linux.hh	/^    static const int TGT_AT_FDCWD   = -100;$/;"	m	class:Linux
TGT_EAGAIN	src/arch/alpha/linux/linux.hh	/^    static const unsigned TGT_EAGAIN      = 35;$/;"	m	class:AlphaLinux
TGT_EAGAIN	src/kern/linux/linux.hh	/^    static const unsigned TGT_EAGAIN      = 11;$/;"	m	class:Linux
TGT_EWOULDBLOCK	src/arch/alpha/linux/linux.hh	/^    static const unsigned TGT_EWOULDBLOCK = TGT_EAGAIN;$/;"	m	class:AlphaLinux
TGT_EWOULDBLOCK	src/kern/linux/linux.hh	/^    static const unsigned TGT_EWOULDBLOCK = TGT_EAGAIN;$/;"	m	class:Linux
TGT_FASYNC	src/arch/arm/linux/linux.hh	/^    static const int TGT_FASYNC      = 00020000; \/\/!< FASYNC$/;"	m	class:ArmLinux32
TGT_FASYNC	src/arch/arm/linux/linux.hh	/^    static const int TGT_FASYNC      = 00020000; \/\/!< FASYNC$/;"	m	class:ArmLinux64
TGT_FASYNC	src/arch/power/linux/linux.hh	/^    static const int TGT_FASYNC      = 00020000; \/\/!< FASYNC$/;"	m	class:PowerLinux
TGT_FIONREAD	src/arch/alpha/linux/linux.hh	/^    static const unsigned TGT_FIONREAD   = 0x4004667f;$/;"	m	class:AlphaLinux
TGT_FIONREAD	src/arch/alpha/tru64/tru64.hh	/^    static const unsigned TGT_FIONREAD   = 0x4004667f;$/;"	m	class:AlphaTru64
TGT_FIONREAD	src/arch/mips/linux/linux.hh	/^    static const unsigned TGT_FIONREAD   = 0x467f;$/;"	m	class:MipsLinux
TGT_FIONREAD	src/arch/power/linux/linux.hh	/^    static const unsigned TGT_FIONREAD   = 0x4004667f;$/;"	m	class:PowerLinux
TGT_FIONREAD	src/arch/sparc/linux/linux.hh	/^    static const unsigned TGT_FIONREAD  = 0x4004667f;$/;"	m	class:SparcLinux
TGT_FIONREAD	src/kern/linux/linux.hh	/^    static const unsigned TGT_FIONREAD   = 0x541B;$/;"	m	class:Linux
TGT_FUTEX_PRIVATE_FLAG	src/kern/linux/linux.hh	/^    static const unsigned TGT_FUTEX_PRIVATE_FLAG = 128;$/;"	m	class:Linux
TGT_FUTEX_WAIT	src/kern/linux/linux.hh	/^    static const unsigned TGT_FUTEX_WAIT  = 0;$/;"	m	class:Linux
TGT_FUTEX_WAKE	src/kern/linux/linux.hh	/^    static const unsigned TGT_FUTEX_WAKE  = 1;$/;"	m	class:Linux
TGT_MAP_ANONYMOUS	src/arch/alpha/linux/linux.hh	/^    static const unsigned TGT_MAP_ANONYMOUS = 0x10;$/;"	m	class:AlphaLinux
TGT_MAP_ANONYMOUS	src/arch/alpha/tru64/tru64.hh	/^    static const unsigned TGT_MAP_ANONYMOUS = 0x10;$/;"	m	class:AlphaTru64
TGT_MAP_ANONYMOUS	src/arch/arm/linux/linux.hh	/^    static const unsigned TGT_MAP_ANONYMOUS = 0x20;$/;"	m	class:ArmLinux32
TGT_MAP_ANONYMOUS	src/arch/arm/linux/linux.hh	/^    static const unsigned TGT_MAP_ANONYMOUS = 0x20;$/;"	m	class:ArmLinux64
TGT_MAP_ANONYMOUS	src/arch/mips/linux/linux.hh	/^    static const unsigned TGT_MAP_ANONYMOUS = 0x800;$/;"	m	class:MipsLinux
TGT_MAP_ANONYMOUS	src/arch/power/linux/linux.hh	/^    static const unsigned TGT_MAP_ANONYMOUS = 0x20;$/;"	m	class:PowerLinux
TGT_MAP_ANONYMOUS	src/arch/sparc/linux/linux.hh	/^    static const unsigned TGT_MAP_ANONYMOUS = 0x20;$/;"	m	class:SparcLinux
TGT_MAP_ANONYMOUS	src/arch/sparc/solaris/solaris.hh	/^    static const unsigned TGT_MAP_ANONYMOUS = 0x100;$/;"	m	class:SparcSolaris
TGT_MAP_ANONYMOUS	src/arch/x86/linux/linux.hh	/^    static const unsigned TGT_MAP_ANONYMOUS = 0x20;$/;"	m	class:X86Linux32
TGT_MAP_ANONYMOUS	src/arch/x86/linux/linux.hh	/^    static const unsigned TGT_MAP_ANONYMOUS = 0x20;$/;"	m	class:X86Linux64
TGT_MAP_FIXED	src/arch/alpha/linux/linux.hh	/^    static const unsigned TGT_MAP_FIXED     = 0x100;$/;"	m	class:AlphaLinux
TGT_MAP_FIXED	src/arch/alpha/tru64/tru64.hh	/^    static const unsigned TGT_MAP_FIXED     = 0x100;$/;"	m	class:AlphaTru64
TGT_MAP_FIXED	src/arch/arm/linux/linux.hh	/^    static const unsigned TGT_MAP_FIXED     = 0x10;$/;"	m	class:ArmLinux32
TGT_MAP_FIXED	src/arch/arm/linux/linux.hh	/^    static const unsigned TGT_MAP_FIXED     = 0x10;$/;"	m	class:ArmLinux64
TGT_MAP_FIXED	src/arch/mips/linux/linux.hh	/^    static const unsigned TGT_MAP_FIXED     = 0x10;$/;"	m	class:MipsLinux
TGT_MAP_FIXED	src/arch/power/linux/linux.hh	/^    static const unsigned TGT_MAP_FIXED     = 0x10;$/;"	m	class:PowerLinux
TGT_MAP_FIXED	src/arch/sparc/linux/linux.hh	/^    static const unsigned TGT_MAP_FIXED     = 0x10;$/;"	m	class:SparcLinux
TGT_MAP_FIXED	src/arch/sparc/solaris/solaris.hh	/^    static const unsigned TGT_MAP_FIXED     = 0x10;$/;"	m	class:SparcSolaris
TGT_MAP_FIXED	src/arch/x86/linux/linux.hh	/^    static const unsigned TGT_MAP_FIXED     = 0x10;$/;"	m	class:X86Linux32
TGT_MAP_FIXED	src/arch/x86/linux/linux.hh	/^    static const unsigned TGT_MAP_FIXED     = 0x10;$/;"	m	class:X86Linux64
TGT_MREMAP_FIXED	src/kern/linux/linux.hh	/^    static const unsigned TGT_MREMAP_FIXED      = 0x2;$/;"	m	class:Linux
TGT_MREMAP_MAYMOVE	src/kern/linux/linux.hh	/^    static const unsigned TGT_MREMAP_MAYMOVE    = 0x1;$/;"	m	class:Linux
TGT_O_APPEND	src/arch/alpha/linux/linux.hh	/^    static const int TGT_O_APPEND       = 00000010;     \/\/!< O_APPEND$/;"	m	class:AlphaLinux
TGT_O_APPEND	src/arch/alpha/tru64/tru64.hh	/^    static const int TGT_O_APPEND       = 00000010;     \/\/!< O_APPEND$/;"	m	class:AlphaTru64
TGT_O_APPEND	src/arch/arm/linux/linux.hh	/^    static const int TGT_O_APPEND    = 00002000; \/\/!< O_APPEND$/;"	m	class:ArmLinux32
TGT_O_APPEND	src/arch/arm/linux/linux.hh	/^    static const int TGT_O_APPEND    = 00002000; \/\/!< O_APPEND$/;"	m	class:ArmLinux64
TGT_O_APPEND	src/arch/mips/linux/linux.hh	/^    static const int TGT_O_APPEND       = 0x00000008;   \/\/!< O_APPEND$/;"	m	class:MipsLinux
TGT_O_APPEND	src/arch/power/linux/linux.hh	/^    static const int TGT_O_APPEND    = 00002000; \/\/!< O_APPEND$/;"	m	class:PowerLinux
TGT_O_APPEND	src/arch/sparc/linux/linux.hh	/^    static const int TGT_O_APPEND       = 0x00000008;   \/\/!< O_APPEND$/;"	m	class:SparcLinux
TGT_O_APPEND	src/arch/sparc/solaris/solaris.hh	/^    static const int TGT_O_APPEND       = 0x00000008;   \/\/!< O_APPEND$/;"	m	class:SparcSolaris
TGT_O_APPEND	src/arch/x86/linux/linux.hh	/^    static const int TGT_O_APPEND       = 00002000;     \/\/!< O_APPEND$/;"	m	class:X86Linux32
TGT_O_APPEND	src/arch/x86/linux/linux.hh	/^    static const int TGT_O_APPEND       = 00002000;     \/\/!< O_APPEND$/;"	m	class:X86Linux64
TGT_O_ASYNC	src/arch/x86/linux/linux.hh	/^    static const int TGT_O_ASYNC        = 00020000;$/;"	m	class:X86Linux32
TGT_O_ASYNC	src/arch/x86/linux/linux.hh	/^    static const int TGT_O_ASYNC        = 00020000;$/;"	m	class:X86Linux64
TGT_O_CACHE	src/arch/alpha/linux/linux.hh	/^    static const int TGT_O_CACHE        = 00400000;     \/\/!< O_CACHE$/;"	m	class:AlphaLinux
TGT_O_CACHE	src/arch/alpha/tru64/tru64.hh	/^    static const int TGT_O_CACHE        = 00400000;     \/\/!< O_CACHE$/;"	m	class:AlphaTru64
TGT_O_CACHE	src/arch/mips/linux/linux.hh	/^    static const int TGT_O_CACHE        = 0x00002000;   \/\/!< O_CACHE$/;"	m	class:MipsLinux
TGT_O_CLOEXEC	src/arch/arm/linux/linux.hh	/^    static const int TGT_O_CLOEXEC   = 02000000; \/\/!< O_NOATIME$/;"	m	class:ArmLinux32
TGT_O_CLOEXEC	src/arch/arm/linux/linux.hh	/^    static const int TGT_O_CLOEXEC   = 02000000; \/\/!< O_NOATIME$/;"	m	class:ArmLinux64
TGT_O_CLOEXEC	src/arch/x86/linux/linux.hh	/^    static const int TGT_O_CLOEXEC      = 02000000;$/;"	m	class:X86Linux32
TGT_O_CLOEXEC	src/arch/x86/linux/linux.hh	/^    static const int TGT_O_CLOEXEC      = 02000000;$/;"	m	class:X86Linux64
TGT_O_CREAT	src/arch/alpha/linux/linux.hh	/^    static const int TGT_O_CREAT        = 00001000;     \/\/!< O_CREAT$/;"	m	class:AlphaLinux
TGT_O_CREAT	src/arch/alpha/tru64/tru64.hh	/^    static const int TGT_O_CREAT        = 00001000;     \/\/!< O_CREAT$/;"	m	class:AlphaTru64
TGT_O_CREAT	src/arch/arm/linux/linux.hh	/^    static const int TGT_O_CREAT     = 00000100; \/\/!< O_CREAT$/;"	m	class:ArmLinux32
TGT_O_CREAT	src/arch/arm/linux/linux.hh	/^    static const int TGT_O_CREAT     = 00000100; \/\/!< O_CREAT$/;"	m	class:ArmLinux64
TGT_O_CREAT	src/arch/mips/linux/linux.hh	/^    static const int TGT_O_CREAT        = 0x00000100;   \/\/!< O_CREAT$/;"	m	class:MipsLinux
TGT_O_CREAT	src/arch/power/linux/linux.hh	/^    static const int TGT_O_CREAT     = 00000100; \/\/!< O_CREAT$/;"	m	class:PowerLinux
TGT_O_CREAT	src/arch/sparc/linux/linux.hh	/^    static const int TGT_O_CREAT        = 0x00000200;   \/\/!< O_CREAT$/;"	m	class:SparcLinux
TGT_O_CREAT	src/arch/sparc/solaris/solaris.hh	/^    static const int TGT_O_CREAT        = 0x00000100;   \/\/!< O_CREAT$/;"	m	class:SparcSolaris
TGT_O_CREAT	src/arch/x86/linux/linux.hh	/^    static const int TGT_O_CREAT        = 00000100;     \/\/!< O_CREAT$/;"	m	class:X86Linux32
TGT_O_CREAT	src/arch/x86/linux/linux.hh	/^    static const int TGT_O_CREAT        = 00000100;     \/\/!< O_CREAT$/;"	m	class:X86Linux64
TGT_O_DIRECT	src/arch/arm/linux/linux.hh	/^    static const int TGT_O_DIRECT    = 00040000; \/\/!< O_DIRECT$/;"	m	class:ArmLinux32
TGT_O_DIRECT	src/arch/arm/linux/linux.hh	/^    static const int TGT_O_DIRECT    = 00040000; \/\/!< O_DIRECT$/;"	m	class:ArmLinux64
TGT_O_DIRECT	src/arch/power/linux/linux.hh	/^    static const int TGT_O_DIRECT    = 00400000; \/\/!< O_DIRECT$/;"	m	class:PowerLinux
TGT_O_DIRECT	src/arch/x86/linux/linux.hh	/^    static const int TGT_O_DIRECT       = 00040000;     \/\/!< O_DIRECTIO$/;"	m	class:X86Linux32
TGT_O_DIRECT	src/arch/x86/linux/linux.hh	/^    static const int TGT_O_DIRECT       = 00040000;     \/\/!< O_DIRECTIO$/;"	m	class:X86Linux64
TGT_O_DIRECTIO	src/arch/alpha/linux/linux.hh	/^    static const int TGT_O_DIRECTIO     = 00200000;     \/\/!< O_DIRECTIO$/;"	m	class:AlphaLinux
TGT_O_DIRECTIO	src/arch/alpha/tru64/tru64.hh	/^    static const int TGT_O_DIRECTIO     = 00200000;     \/\/!< O_DIRECTIO$/;"	m	class:AlphaTru64
TGT_O_DIRECTIO	src/arch/mips/linux/linux.hh	/^    static const int TGT_O_DIRECTIO     = 0x00020000;   \/\/!< O_DIRECTIO$/;"	m	class:MipsLinux
TGT_O_DIRECTORY	src/arch/arm/linux/linux.hh	/^    static const int TGT_O_DIRECTORY = 00200000; \/\/!< O_DIRECTORY$/;"	m	class:ArmLinux32
TGT_O_DIRECTORY	src/arch/arm/linux/linux.hh	/^    static const int TGT_O_DIRECTORY = 00200000; \/\/!< O_DIRECTORY$/;"	m	class:ArmLinux64
TGT_O_DIRECTORY	src/arch/power/linux/linux.hh	/^    static const int TGT_O_DIRECTORY = 00040000; \/\/!< O_DIRECTORY$/;"	m	class:PowerLinux
TGT_O_DIRECTORY	src/arch/x86/linux/linux.hh	/^    static const int TGT_O_DIRECTORY    = 00200000;$/;"	m	class:X86Linux32
TGT_O_DIRECTORY	src/arch/x86/linux/linux.hh	/^    static const int TGT_O_DIRECTORY    = 00200000;$/;"	m	class:X86Linux64
TGT_O_DRD	src/arch/alpha/linux/linux.hh	/^    static const int TGT_O_DRD          = 00100000;     \/\/!< O_DRD$/;"	m	class:AlphaLinux
TGT_O_DRD	src/arch/alpha/tru64/tru64.hh	/^    static const int TGT_O_DRD          = 00100000;     \/\/!< O_DRD$/;"	m	class:AlphaTru64
TGT_O_DRD	src/arch/mips/linux/linux.hh	/^    static const int TGT_O_DRD          = 0x00010000;   \/\/!< O_DRD$/;"	m	class:MipsLinux
TGT_O_DSYNC	src/arch/alpha/linux/linux.hh	/^    static const int TGT_O_DSYNC        = 02000000;     \/\/!< O_DSYNC$/;"	m	class:AlphaLinux
TGT_O_DSYNC	src/arch/alpha/tru64/tru64.hh	/^    static const int TGT_O_DSYNC        = 02000000;     \/\/!< O_DSYNC$/;"	m	class:AlphaTru64
TGT_O_DSYNC	src/arch/mips/linux/linux.hh	/^    static const int TGT_O_DSYNC        = 0x00008000;   \/\/!< O_DSYNC$/;"	m	class:MipsLinux
TGT_O_DSYNC	src/arch/sparc/solaris/solaris.hh	/^    static const int TGT_O_DSYNC        = 0x00000040;   \/\/!< O_SYNC$/;"	m	class:SparcSolaris
TGT_O_EXCL	src/arch/alpha/linux/linux.hh	/^    static const int TGT_O_EXCL         = 00004000;     \/\/!< O_EXCL$/;"	m	class:AlphaLinux
TGT_O_EXCL	src/arch/alpha/tru64/tru64.hh	/^    static const int TGT_O_EXCL         = 00004000;     \/\/!< O_EXCL$/;"	m	class:AlphaTru64
TGT_O_EXCL	src/arch/arm/linux/linux.hh	/^    static const int TGT_O_EXCL      = 00000200; \/\/!< O_EXCL$/;"	m	class:ArmLinux32
TGT_O_EXCL	src/arch/arm/linux/linux.hh	/^    static const int TGT_O_EXCL      = 00000200; \/\/!< O_EXCL$/;"	m	class:ArmLinux64
TGT_O_EXCL	src/arch/mips/linux/linux.hh	/^    static const int TGT_O_EXCL         = 0x00000400;   \/\/!< O_EXCL$/;"	m	class:MipsLinux
TGT_O_EXCL	src/arch/power/linux/linux.hh	/^    static const int TGT_O_EXCL      = 00000200; \/\/!< O_EXCL$/;"	m	class:PowerLinux
TGT_O_EXCL	src/arch/sparc/linux/linux.hh	/^    static const int TGT_O_EXCL         = 0x00000800;   \/\/!< O_EXCL$/;"	m	class:SparcLinux
TGT_O_EXCL	src/arch/sparc/solaris/solaris.hh	/^    static const int TGT_O_EXCL         = 0x00000400;   \/\/!< O_EXCL$/;"	m	class:SparcSolaris
TGT_O_EXCL	src/arch/x86/linux/linux.hh	/^    static const int TGT_O_EXCL         = 00000200;     \/\/!< O_EXCL$/;"	m	class:X86Linux32
TGT_O_EXCL	src/arch/x86/linux/linux.hh	/^    static const int TGT_O_EXCL         = 00000200;     \/\/!< O_EXCL$/;"	m	class:X86Linux64
TGT_O_LARGEFILE	src/arch/arm/linux/linux.hh	/^    static const int TGT_O_LARGEFILE = 00100000; \/\/!< O_LARGEFILE$/;"	m	class:ArmLinux32
TGT_O_LARGEFILE	src/arch/arm/linux/linux.hh	/^    static const int TGT_O_LARGEFILE = 00100000; \/\/!< O_LARGEFILE$/;"	m	class:ArmLinux64
TGT_O_LARGEFILE	src/arch/power/linux/linux.hh	/^    static const int TGT_O_LARGEFILE = 00200000; \/\/!< O_LARGEFILE$/;"	m	class:PowerLinux
TGT_O_LARGEFILE	src/arch/sparc/solaris/solaris.hh	/^    static const int TGT_O_LARGEFILE    = 0x00002000;   \/\/??$/;"	m	class:SparcSolaris
TGT_O_LARGEFILE	src/arch/x86/linux/linux.hh	/^    static const int TGT_O_LARGEFILE    = 00100000;$/;"	m	class:X86Linux32
TGT_O_LARGEFILE	src/arch/x86/linux/linux.hh	/^    static const int TGT_O_LARGEFILE    = 00100000;$/;"	m	class:X86Linux64
TGT_O_NDELAY	src/arch/sparc/solaris/solaris.hh	/^    static const int TGT_O_NDELAY       = 0x00000004;   \/\/!< O_NONBLOCK$/;"	m	class:SparcSolaris
TGT_O_NOATIME	src/arch/arm/linux/linux.hh	/^    static const int TGT_O_NOATIME   = 01000000; \/\/!< O_NOATIME$/;"	m	class:ArmLinux32
TGT_O_NOATIME	src/arch/arm/linux/linux.hh	/^    static const int TGT_O_NOATIME   = 01000000; \/\/!< O_NOATIME$/;"	m	class:ArmLinux64
TGT_O_NOATIME	src/arch/power/linux/linux.hh	/^    static const int TGT_O_NOATIME   = 01000000; \/\/!< O_NOATIME$/;"	m	class:PowerLinux
TGT_O_NOATIME	src/arch/x86/linux/linux.hh	/^    static const int TGT_O_NOATIME      = 01000000;$/;"	m	class:X86Linux32
TGT_O_NOATIME	src/arch/x86/linux/linux.hh	/^    static const int TGT_O_NOATIME      = 01000000;$/;"	m	class:X86Linux64
TGT_O_NOCTTY	src/arch/alpha/linux/linux.hh	/^    static const int TGT_O_NOCTTY       = 00010000;     \/\/!< O_NOCTTY$/;"	m	class:AlphaLinux
TGT_O_NOCTTY	src/arch/alpha/tru64/tru64.hh	/^    static const int TGT_O_NOCTTY       = 00010000;     \/\/!< O_NOCTTY$/;"	m	class:AlphaTru64
TGT_O_NOCTTY	src/arch/arm/linux/linux.hh	/^    static const int TGT_O_NOCTTY    = 00000400; \/\/!< O_NOCTTY$/;"	m	class:ArmLinux32
TGT_O_NOCTTY	src/arch/arm/linux/linux.hh	/^    static const int TGT_O_NOCTTY    = 00000400; \/\/!< O_NOCTTY$/;"	m	class:ArmLinux64
TGT_O_NOCTTY	src/arch/mips/linux/linux.hh	/^    static const int TGT_O_NOCTTY       = 0x00000800;   \/\/!< O_NOCTTY$/;"	m	class:MipsLinux
TGT_O_NOCTTY	src/arch/power/linux/linux.hh	/^    static const int TGT_O_NOCTTY    = 00000400; \/\/!< O_NOCTTY$/;"	m	class:PowerLinux
TGT_O_NOCTTY	src/arch/sparc/linux/linux.hh	/^    static const int TGT_O_NOCTTY       = 0x00008000;   \/\/!< O_NOCTTY$/;"	m	class:SparcLinux
TGT_O_NOCTTY	src/arch/sparc/solaris/solaris.hh	/^    static const int TGT_O_NOCTTY       = 0x00000800;   \/\/!< O_NOCTTY$/;"	m	class:SparcSolaris
TGT_O_NOCTTY	src/arch/x86/linux/linux.hh	/^    static const int TGT_O_NOCTTY       = 00000400;     \/\/!< O_NOCTTY$/;"	m	class:X86Linux32
TGT_O_NOCTTY	src/arch/x86/linux/linux.hh	/^    static const int TGT_O_NOCTTY       = 00000400;     \/\/!< O_NOCTTY$/;"	m	class:X86Linux64
TGT_O_NOFOLLOW	src/arch/arm/linux/linux.hh	/^    static const int TGT_O_NOFOLLOW  = 00400000; \/\/!< O_NOFOLLOW$/;"	m	class:ArmLinux32
TGT_O_NOFOLLOW	src/arch/arm/linux/linux.hh	/^    static const int TGT_O_NOFOLLOW  = 00400000; \/\/!< O_NOFOLLOW$/;"	m	class:ArmLinux64
TGT_O_NOFOLLOW	src/arch/power/linux/linux.hh	/^    static const int TGT_O_NOFOLLOW  = 00100000; \/\/!< O_NOFOLLOW$/;"	m	class:PowerLinux
TGT_O_NOFOLLOW	src/arch/x86/linux/linux.hh	/^    static const int TGT_O_NOFOLLOW     = 00400000;$/;"	m	class:X86Linux32
TGT_O_NOFOLLOW	src/arch/x86/linux/linux.hh	/^    static const int TGT_O_NOFOLLOW     = 00400000;$/;"	m	class:X86Linux64
TGT_O_NONBLOCK	src/arch/alpha/linux/linux.hh	/^    static const int TGT_O_NONBLOCK     = 00000004;     \/\/!< O_NONBLOCK$/;"	m	class:AlphaLinux
TGT_O_NONBLOCK	src/arch/alpha/tru64/tru64.hh	/^    static const int TGT_O_NONBLOCK     = 00000004;     \/\/!< O_NONBLOCK$/;"	m	class:AlphaTru64
TGT_O_NONBLOCK	src/arch/arm/linux/linux.hh	/^    static const int TGT_O_NONBLOCK  = 00004000; \/\/!< O_NONBLOCK$/;"	m	class:ArmLinux32
TGT_O_NONBLOCK	src/arch/arm/linux/linux.hh	/^    static const int TGT_O_NONBLOCK  = 00004000; \/\/!< O_NONBLOCK$/;"	m	class:ArmLinux64
TGT_O_NONBLOCK	src/arch/mips/linux/linux.hh	/^    static const int TGT_O_NONBLOCK     = 0x00000080;   \/\/!< O_NONBLOCK$/;"	m	class:MipsLinux
TGT_O_NONBLOCK	src/arch/power/linux/linux.hh	/^    static const int TGT_O_NONBLOCK  = 00004000; \/\/!< O_NONBLOCK$/;"	m	class:PowerLinux
TGT_O_NONBLOCK	src/arch/sparc/linux/linux.hh	/^    static const int TGT_O_NONBLOCK     = 0x00004000;   \/\/!< O_NONBLOCK$/;"	m	class:SparcLinux
TGT_O_NONBLOCK	src/arch/sparc/solaris/solaris.hh	/^    static const int TGT_O_NONBLOCK     = 0x00000080;   \/\/!< O_NONBLOCK$/;"	m	class:SparcSolaris
TGT_O_NONBLOCK	src/arch/x86/linux/linux.hh	/^    static const int TGT_O_NONBLOCK     = 00004000;     \/\/!< O_NONBLOCK$/;"	m	class:X86Linux32
TGT_O_NONBLOCK	src/arch/x86/linux/linux.hh	/^    static const int TGT_O_NONBLOCK     = 00004000;     \/\/!< O_NONBLOCK$/;"	m	class:X86Linux64
TGT_O_PRIV	src/arch/sparc/solaris/solaris.hh	/^    static const int TGT_O_PRIV         = 0x00001000;   \/\/??$/;"	m	class:SparcSolaris
TGT_O_RDONLY	src/arch/alpha/linux/linux.hh	/^    static const int TGT_O_RDONLY       = 00000000;     \/\/!< O_RDONLY$/;"	m	class:AlphaLinux
TGT_O_RDONLY	src/arch/alpha/tru64/tru64.hh	/^    static const int TGT_O_RDONLY       = 00000000;     \/\/!< O_RDONLY$/;"	m	class:AlphaTru64
TGT_O_RDONLY	src/arch/arm/linux/linux.hh	/^    static const int TGT_O_RDONLY    = 00000000; \/\/!< O_RDONLY$/;"	m	class:ArmLinux32
TGT_O_RDONLY	src/arch/arm/linux/linux.hh	/^    static const int TGT_O_RDONLY    = 00000000; \/\/!< O_RDONLY$/;"	m	class:ArmLinux64
TGT_O_RDONLY	src/arch/mips/linux/linux.hh	/^    static const int TGT_O_RDONLY       = 0x00000000;   \/\/!< O_RDONLY$/;"	m	class:MipsLinux
TGT_O_RDONLY	src/arch/power/linux/linux.hh	/^    static const int TGT_O_RDONLY    = 00000000; \/\/!< O_RDONLY$/;"	m	class:PowerLinux
TGT_O_RDONLY	src/arch/sparc/linux/linux.hh	/^    static const int TGT_O_RDONLY       = 0x00000000;   \/\/!< O_RDONLY$/;"	m	class:SparcLinux
TGT_O_RDONLY	src/arch/sparc/solaris/solaris.hh	/^    static const int TGT_O_RDONLY       = 0x00000000;   \/\/!< O_RDONLY$/;"	m	class:SparcSolaris
TGT_O_RDONLY	src/arch/x86/linux/linux.hh	/^    static const int TGT_O_RDONLY       = 00000000;     \/\/!< O_RDONLY$/;"	m	class:X86Linux32
TGT_O_RDONLY	src/arch/x86/linux/linux.hh	/^    static const int TGT_O_RDONLY       = 00000000;     \/\/!< O_RDONLY$/;"	m	class:X86Linux64
TGT_O_RDWR	src/arch/alpha/linux/linux.hh	/^    static const int TGT_O_RDWR         = 00000002;     \/\/!< O_RDWR$/;"	m	class:AlphaLinux
TGT_O_RDWR	src/arch/alpha/tru64/tru64.hh	/^    static const int TGT_O_RDWR         = 00000002;     \/\/!< O_RDWR$/;"	m	class:AlphaTru64
TGT_O_RDWR	src/arch/arm/linux/linux.hh	/^    static const int TGT_O_RDWR      = 00000002; \/\/!< O_RDWR$/;"	m	class:ArmLinux32
TGT_O_RDWR	src/arch/arm/linux/linux.hh	/^    static const int TGT_O_RDWR      = 00000002; \/\/!< O_RDWR$/;"	m	class:ArmLinux64
TGT_O_RDWR	src/arch/mips/linux/linux.hh	/^    static const int TGT_O_RDWR         = 0x00000002;   \/\/!< O_RDWR$/;"	m	class:MipsLinux
TGT_O_RDWR	src/arch/power/linux/linux.hh	/^    static const int TGT_O_RDWR      = 00000002; \/\/!< O_RDWR$/;"	m	class:PowerLinux
TGT_O_RDWR	src/arch/sparc/linux/linux.hh	/^    static const int TGT_O_RDWR         = 0x00000002;   \/\/!< O_RDWR$/;"	m	class:SparcLinux
TGT_O_RDWR	src/arch/sparc/solaris/solaris.hh	/^    static const int TGT_O_RDWR         = 0x00000002;   \/\/!< O_RDWR$/;"	m	class:SparcSolaris
TGT_O_RDWR	src/arch/x86/linux/linux.hh	/^    static const int TGT_O_RDWR         = 00000002;     \/\/!< O_RDWR$/;"	m	class:X86Linux32
TGT_O_RDWR	src/arch/x86/linux/linux.hh	/^    static const int TGT_O_RDWR         = 00000002;     \/\/!< O_RDWR$/;"	m	class:X86Linux64
TGT_O_RSYNC	src/arch/alpha/linux/linux.hh	/^    static const int TGT_O_RSYNC        = 04000000;     \/\/!< O_RSYNC$/;"	m	class:AlphaLinux
TGT_O_RSYNC	src/arch/alpha/tru64/tru64.hh	/^    static const int TGT_O_RSYNC        = 04000000;     \/\/!< O_RSYNC$/;"	m	class:AlphaTru64
TGT_O_RSYNC	src/arch/mips/linux/linux.hh	/^    static const int TGT_O_RSYNC        = 0x00040000;   \/\/!< O_RSYNC$/;"	m	class:MipsLinux
TGT_O_RSYNC	src/arch/sparc/solaris/solaris.hh	/^    static const int TGT_O_RSYNC        = 0x00008000;   \/\/!< O_SYNC$/;"	m	class:SparcSolaris
TGT_O_SYNC	src/arch/alpha/linux/linux.hh	/^    static const int TGT_O_SYNC         = 00040000;     \/\/!< O_SYNC$/;"	m	class:AlphaLinux
TGT_O_SYNC	src/arch/alpha/tru64/tru64.hh	/^    static const int TGT_O_SYNC         = 00040000;     \/\/!< O_SYNC$/;"	m	class:AlphaTru64
TGT_O_SYNC	src/arch/arm/linux/linux.hh	/^    static const int TGT_O_SYNC      = 00010000; \/\/!< O_SYNC$/;"	m	class:ArmLinux32
TGT_O_SYNC	src/arch/arm/linux/linux.hh	/^    static const int TGT_O_SYNC      = 00010000; \/\/!< O_SYNC$/;"	m	class:ArmLinux64
TGT_O_SYNC	src/arch/mips/linux/linux.hh	/^    static const int TGT_O_SYNC         = 0x00000010;   \/\/!< O_SYNC$/;"	m	class:MipsLinux
TGT_O_SYNC	src/arch/power/linux/linux.hh	/^    static const int TGT_O_SYNC      = 00010000; \/\/!< O_SYNC$/;"	m	class:PowerLinux
TGT_O_SYNC	src/arch/sparc/linux/linux.hh	/^    static const int TGT_O_SYNC         = 0x00002000;   \/\/!< O_SYNC$/;"	m	class:SparcLinux
TGT_O_SYNC	src/arch/sparc/solaris/solaris.hh	/^    static const int TGT_O_SYNC         = 0x00000010;   \/\/!< O_SYNC$/;"	m	class:SparcSolaris
TGT_O_SYNC	src/arch/x86/linux/linux.hh	/^    static const int TGT_O_SYNC         = 00010000;     \/\/!< O_SYNC$/;"	m	class:X86Linux32
TGT_O_SYNC	src/arch/x86/linux/linux.hh	/^    static const int TGT_O_SYNC         = 00010000;     \/\/!< O_SYNC$/;"	m	class:X86Linux64
TGT_O_TRUNC	src/arch/alpha/linux/linux.hh	/^    static const int TGT_O_TRUNC        = 00002000;     \/\/!< O_TRUNC$/;"	m	class:AlphaLinux
TGT_O_TRUNC	src/arch/alpha/tru64/tru64.hh	/^    static const int TGT_O_TRUNC        = 00002000;     \/\/!< O_TRUNC$/;"	m	class:AlphaTru64
TGT_O_TRUNC	src/arch/arm/linux/linux.hh	/^    static const int TGT_O_TRUNC     = 00001000; \/\/!< O_TRUNC$/;"	m	class:ArmLinux32
TGT_O_TRUNC	src/arch/arm/linux/linux.hh	/^    static const int TGT_O_TRUNC     = 00001000; \/\/!< O_TRUNC$/;"	m	class:ArmLinux64
TGT_O_TRUNC	src/arch/mips/linux/linux.hh	/^    static const int TGT_O_TRUNC        = 0x00000200;   \/\/!< O_TRUNC$/;"	m	class:MipsLinux
TGT_O_TRUNC	src/arch/power/linux/linux.hh	/^    static const int TGT_O_TRUNC     = 00001000; \/\/!< O_TRUNC$/;"	m	class:PowerLinux
TGT_O_TRUNC	src/arch/sparc/linux/linux.hh	/^    static const int TGT_O_TRUNC        = 0x00000400;   \/\/!< O_TRUNC$/;"	m	class:SparcLinux
TGT_O_TRUNC	src/arch/sparc/solaris/solaris.hh	/^    static const int TGT_O_TRUNC        = 0x00000200;   \/\/!< O_TRUNC$/;"	m	class:SparcSolaris
TGT_O_TRUNC	src/arch/x86/linux/linux.hh	/^    static const int TGT_O_TRUNC        = 00001000;     \/\/!< O_TRUNC$/;"	m	class:X86Linux32
TGT_O_TRUNC	src/arch/x86/linux/linux.hh	/^    static const int TGT_O_TRUNC        = 00001000;     \/\/!< O_TRUNC$/;"	m	class:X86Linux64
TGT_O_WRONLY	src/arch/alpha/linux/linux.hh	/^    static const int TGT_O_WRONLY       = 00000001;     \/\/!< O_WRONLY$/;"	m	class:AlphaLinux
TGT_O_WRONLY	src/arch/alpha/tru64/tru64.hh	/^    static const int TGT_O_WRONLY       = 00000001;     \/\/!< O_WRONLY$/;"	m	class:AlphaTru64
TGT_O_WRONLY	src/arch/arm/linux/linux.hh	/^    static const int TGT_O_WRONLY    = 00000001; \/\/!< O_WRONLY$/;"	m	class:ArmLinux32
TGT_O_WRONLY	src/arch/arm/linux/linux.hh	/^    static const int TGT_O_WRONLY    = 00000001; \/\/!< O_WRONLY$/;"	m	class:ArmLinux64
TGT_O_WRONLY	src/arch/mips/linux/linux.hh	/^    static const int TGT_O_WRONLY       = 0x00000001;   \/\/!< O_WRONLY$/;"	m	class:MipsLinux
TGT_O_WRONLY	src/arch/power/linux/linux.hh	/^    static const int TGT_O_WRONLY    = 00000001; \/\/!< O_WRONLY$/;"	m	class:PowerLinux
TGT_O_WRONLY	src/arch/sparc/linux/linux.hh	/^    static const int TGT_O_WRONLY       = 0x00000001;   \/\/!< O_WRONLY$/;"	m	class:SparcLinux
TGT_O_WRONLY	src/arch/sparc/solaris/solaris.hh	/^    static const int TGT_O_WRONLY       = 0x00000001;   \/\/!< O_WRONLY$/;"	m	class:SparcSolaris
TGT_O_WRONLY	src/arch/x86/linux/linux.hh	/^    static const int TGT_O_WRONLY       = 00000001;     \/\/!< O_WRONLY$/;"	m	class:X86Linux32
TGT_O_WRONLY	src/arch/x86/linux/linux.hh	/^    static const int TGT_O_WRONLY       = 00000001;     \/\/!< O_WRONLY$/;"	m	class:X86Linux64
TGT_O_XATTR	src/arch/sparc/solaris/solaris.hh	/^    static const int TGT_O_XATTR        = 0x00004000;   \/\/??$/;"	m	class:SparcSolaris
TGT_RLIMIT_AS	src/arch/alpha/linux/linux.hh	/^    static const unsigned TGT_RLIMIT_AS = 7;$/;"	m	class:AlphaLinux
TGT_RLIMIT_AS	src/arch/alpha/tru64/tru64.hh	/^        TGT_RLIMIT_AS = 7,$/;"	e	enum:AlphaTru64::rlimit_resources
TGT_RLIMIT_AS	src/arch/arm/linux/linux.hh	/^        TGT_RLIMIT_AS = 9,$/;"	e	enum:ArmLinux64::rlimit_resources
TGT_RLIMIT_AS	src/arch/mips/linux/linux.hh	/^    static const unsigned TGT_RLIMIT_AS = 6;$/;"	m	class:MipsLinux
TGT_RLIMIT_AS	src/kern/linux/linux.hh	/^    static const unsigned TGT_RLIMIT_AS = 9;$/;"	m	class:Linux
TGT_RLIMIT_CORE	src/arch/alpha/tru64/tru64.hh	/^        TGT_RLIMIT_CORE = 4,$/;"	e	enum:AlphaTru64::rlimit_resources
TGT_RLIMIT_CORE	src/arch/arm/linux/linux.hh	/^        TGT_RLIMIT_CORE = 4,$/;"	e	enum:ArmLinux64::rlimit_resources
TGT_RLIMIT_CORE	src/kern/linux/linux.hh	/^    static const unsigned TGT_RLIMIT_CORE = 4;$/;"	m	class:Linux
TGT_RLIMIT_CPU	src/arch/alpha/tru64/tru64.hh	/^        TGT_RLIMIT_CPU = 0,$/;"	e	enum:AlphaTru64::rlimit_resources
TGT_RLIMIT_CPU	src/arch/arm/linux/linux.hh	/^        TGT_RLIMIT_CPU = 0,$/;"	e	enum:ArmLinux64::rlimit_resources
TGT_RLIMIT_CPU	src/kern/linux/linux.hh	/^    static const unsigned TGT_RLIMIT_CPU = 0;$/;"	m	class:Linux
TGT_RLIMIT_DATA	src/arch/alpha/tru64/tru64.hh	/^        TGT_RLIMIT_DATA = 2,$/;"	e	enum:AlphaTru64::rlimit_resources
TGT_RLIMIT_DATA	src/arch/arm/linux/linux.hh	/^        TGT_RLIMIT_DATA = 2,$/;"	e	enum:ArmLinux64::rlimit_resources
TGT_RLIMIT_DATA	src/kern/linux/linux.hh	/^    static const unsigned TGT_RLIMIT_DATA = 2;$/;"	m	class:Linux
TGT_RLIMIT_FSIZE	src/arch/alpha/tru64/tru64.hh	/^        TGT_RLIMIT_FSIZE = 1,$/;"	e	enum:AlphaTru64::rlimit_resources
TGT_RLIMIT_FSIZE	src/arch/arm/linux/linux.hh	/^        TGT_RLIMIT_FSIZE = 1,$/;"	e	enum:ArmLinux64::rlimit_resources
TGT_RLIMIT_FSIZE	src/kern/linux/linux.hh	/^    static const unsigned TGT_RLIMIT_FSIZE = 1;$/;"	m	class:Linux
TGT_RLIMIT_LOCKS	src/arch/alpha/tru64/tru64.hh	/^        TGT_RLIMIT_LOCKS = 10$/;"	e	enum:AlphaTru64::rlimit_resources
TGT_RLIMIT_LOCKS	src/arch/arm/linux/linux.hh	/^        TGT_RLIMIT_LOCKS = 10$/;"	e	enum:ArmLinux64::rlimit_resources
TGT_RLIMIT_LOCKS	src/kern/linux/linux.hh	/^    static const unsigned TGT_RLIMIT_LOCKS = 10;$/;"	m	class:Linux
TGT_RLIMIT_MEMLOCK	src/arch/alpha/linux/linux.hh	/^    static const unsigned TGT_RLIMIT_MEMLOCK = 9;$/;"	m	class:AlphaLinux
TGT_RLIMIT_MEMLOCK	src/arch/alpha/tru64/tru64.hh	/^        TGT_RLIMIT_MEMLOCK = 9,$/;"	e	enum:AlphaTru64::rlimit_resources
TGT_RLIMIT_MEMLOCK	src/arch/arm/linux/linux.hh	/^        TGT_RLIMIT_MEMLOCK = 8,$/;"	e	enum:ArmLinux64::rlimit_resources
TGT_RLIMIT_MEMLOCK	src/arch/mips/linux/linux.hh	/^    static const unsigned TGT_RLIMIT_MEMLOCK = 9;$/;"	m	class:MipsLinux
TGT_RLIMIT_MEMLOCK	src/kern/linux/linux.hh	/^    static const unsigned TGT_RLIMIT_MEMLOCK = 8;$/;"	m	class:Linux
TGT_RLIMIT_MSGQUEUE	src/kern/linux/linux.hh	/^    static const unsigned TGT_RLIMIT_MSGQUEUE = 12;$/;"	m	class:Linux
TGT_RLIMIT_NICE	src/kern/linux/linux.hh	/^    static const unsigned TGT_RLIMIT_NICE = 13;$/;"	m	class:Linux
TGT_RLIMIT_NOFILE	src/arch/alpha/linux/linux.hh	/^    static const unsigned TGT_RLIMIT_NOFILE = 6;$/;"	m	class:AlphaLinux
TGT_RLIMIT_NOFILE	src/arch/alpha/tru64/tru64.hh	/^        TGT_RLIMIT_NOFILE = 6,$/;"	e	enum:AlphaTru64::rlimit_resources
TGT_RLIMIT_NOFILE	src/arch/arm/linux/linux.hh	/^        TGT_RLIMIT_NOFILE = 7,$/;"	e	enum:ArmLinux64::rlimit_resources
TGT_RLIMIT_NOFILE	src/arch/mips/linux/linux.hh	/^    static const unsigned TGT_RLIMIT_NOFILE = 5;$/;"	m	class:MipsLinux
TGT_RLIMIT_NOFILE	src/arch/sparc/linux/linux.hh	/^    static const unsigned TGT_RLIMIT_NOFILE = 6;$/;"	m	class:Sparc32Linux
TGT_RLIMIT_NOFILE	src/kern/linux/linux.hh	/^    static const unsigned TGT_RLIMIT_NOFILE = 7;$/;"	m	class:Linux
TGT_RLIMIT_NPROC	src/arch/alpha/linux/linux.hh	/^    static const unsigned TGT_RLIMIT_NPROC = 8;$/;"	m	class:AlphaLinux
TGT_RLIMIT_NPROC	src/arch/alpha/tru64/tru64.hh	/^        TGT_RLIMIT_NPROC = 8,$/;"	e	enum:AlphaTru64::rlimit_resources
TGT_RLIMIT_NPROC	src/arch/arm/linux/linux.hh	/^        TGT_RLIMIT_NPROC = 6,$/;"	e	enum:ArmLinux64::rlimit_resources
TGT_RLIMIT_NPROC	src/arch/mips/linux/linux.hh	/^    static const unsigned TGT_RLIMIT_NPROC = 8;$/;"	m	class:MipsLinux
TGT_RLIMIT_NPROC	src/arch/sparc/linux/linux.hh	/^    static const unsigned TGT_RLIMIT_NPROC = 7;$/;"	m	class:Sparc32Linux
TGT_RLIMIT_NPROC	src/kern/linux/linux.hh	/^    static const unsigned TGT_RLIMIT_NPROC = 6;$/;"	m	class:Linux
TGT_RLIMIT_RSS	src/arch/alpha/tru64/tru64.hh	/^        TGT_RLIMIT_RSS = 5,$/;"	e	enum:AlphaTru64::rlimit_resources
TGT_RLIMIT_RSS	src/arch/arm/linux/linux.hh	/^        TGT_RLIMIT_RSS = 5,$/;"	e	enum:ArmLinux64::rlimit_resources
TGT_RLIMIT_RSS	src/kern/linux/linux.hh	/^    static const unsigned TGT_RLIMIT_RSS = 5;$/;"	m	class:Linux
TGT_RLIMIT_RTPRIO	src/kern/linux/linux.hh	/^    static const unsigned TGT_RLIMIT_RTPRIO = 14;$/;"	m	class:Linux
TGT_RLIMIT_RTTIME	src/kern/linux/linux.hh	/^    static const unsigned TGT_RLIMIT_RTTIME = 15;$/;"	m	class:Linux
TGT_RLIMIT_SIGPENDING	src/kern/linux/linux.hh	/^    static const unsigned TGT_RLIMIT_SIGPENDING = 11;$/;"	m	class:Linux
TGT_RLIMIT_STACK	src/arch/alpha/tru64/tru64.hh	/^        TGT_RLIMIT_STACK = 3,$/;"	e	enum:AlphaTru64::rlimit_resources
TGT_RLIMIT_STACK	src/arch/arm/linux/linux.hh	/^        TGT_RLIMIT_STACK = 3,$/;"	e	enum:ArmLinux64::rlimit_resources
TGT_RLIMIT_STACK	src/kern/linux/linux.hh	/^    static const unsigned TGT_RLIMIT_STACK = 3;$/;"	m	class:Linux
TGT_RLIMIT_VMEM	src/arch/alpha/tru64/tru64.hh	/^        TGT_RLIMIT_VMEM = 7,$/;"	e	enum:AlphaTru64::rlimit_resources
TGT_RLIM_NLIMITS	src/kern/linux/linux.hh	/^    static const unsigned TGT_RLIM_NLIMITS = 16;$/;"	m	class:Linux
TGT_RUSAGE_BOTH	src/arch/arm/linux/linux.hh	/^    static const int TGT_RUSAGE_BOTH = -2;$/;"	m	class:ArmLinux64
TGT_RUSAGE_BOTH	src/kern/linux/linux.hh	/^    static const int TGT_RUSAGE_BOTH     = -2;$/;"	m	class:Linux
TGT_RUSAGE_CHILDREN	src/arch/alpha/tru64/tru64.hh	/^    static const int TGT_RUSAGE_CHILDREN = -1;$/;"	m	class:AlphaTru64
TGT_RUSAGE_CHILDREN	src/arch/arm/linux/linux.hh	/^    static const int TGT_RUSAGE_CHILDREN = -1;$/;"	m	class:ArmLinux64
TGT_RUSAGE_CHILDREN	src/kern/linux/linux.hh	/^    static const int TGT_RUSAGE_CHILDREN = -1;$/;"	m	class:Linux
TGT_RUSAGE_SELF	src/arch/alpha/tru64/tru64.hh	/^    static const int TGT_RUSAGE_SELF = 0;$/;"	m	class:AlphaTru64
TGT_RUSAGE_SELF	src/arch/arm/linux/linux.hh	/^    static const int TGT_RUSAGE_SELF = 0;$/;"	m	class:ArmLinux64
TGT_RUSAGE_SELF	src/kern/linux/linux.hh	/^    static const int TGT_RUSAGE_SELF     = 0;$/;"	m	class:Linux
TGT_RUSAGE_THREAD	src/arch/alpha/tru64/tru64.hh	/^    static const int TGT_RUSAGE_THREAD = 1;$/;"	m	class:AlphaTru64
TGT_TCGETA	src/arch/alpha/linux/linux.hh	/^    static const unsigned TGT_TCGETA     = 0x40127417;$/;"	m	class:AlphaLinux
TGT_TCGETA	src/arch/alpha/tru64/tru64.hh	/^    static const unsigned TGT_TCGETA     = 0x40127417;$/;"	m	class:AlphaTru64
TGT_TCGETA	src/arch/mips/linux/linux.hh	/^    static const unsigned TGT_TCGETA     = 0x5401;$/;"	m	class:MipsLinux
TGT_TCGETA	src/arch/power/linux/linux.hh	/^    static const unsigned TGT_TCGETA     = 0x40127417;$/;"	m	class:PowerLinux
TGT_TCGETA	src/arch/sparc/linux/linux.hh	/^    static const unsigned TGT_TCGETA    = 0x40125401;$/;"	m	class:SparcLinux
TGT_TCGETA	src/kern/linux/linux.hh	/^    static const unsigned TGT_TCGETA     = 0x5405;$/;"	m	class:Linux
TGT_TCGETS	src/arch/alpha/linux/linux.hh	/^    static const unsigned TGT_TCGETS     = 0x402c7413;$/;"	m	class:AlphaLinux
TGT_TCGETS	src/arch/alpha/tru64/tru64.hh	/^    static const unsigned TGT_TCGETS     = 0x402c7413;$/;"	m	class:AlphaTru64
TGT_TCGETS	src/arch/mips/linux/linux.hh	/^    static const unsigned TGT_TCGETS     = 0x540d;$/;"	m	class:MipsLinux
TGT_TCGETS	src/arch/power/linux/linux.hh	/^    static const unsigned TGT_TCGETS     = 0x402c7413;$/;"	m	class:PowerLinux
TGT_TCGETS	src/arch/sparc/linux/linux.hh	/^    static const unsigned TGT_TCGETS    = 0x40385408;$/;"	m	class:SparcLinux
TGT_TCGETS	src/kern/linux/linux.hh	/^    static const unsigned TGT_TCGETS     = 0x5401;$/;"	m	class:Linux
TGT_TCSETAW	src/arch/alpha/linux/linux.hh	/^    static const unsigned TGT_TCSETAW    = 0x80147419; \/\/ 2.6.15 kernel$/;"	m	class:AlphaLinux
TGT_TCSETAW	src/arch/alpha/tru64/tru64.hh	/^    static const unsigned TGT_TCSETAW    = 0x80147419; \/\/ 2.6.15 kernel$/;"	m	class:AlphaTru64
TGT_TCSETAW	src/arch/mips/linux/linux.hh	/^    static const unsigned TGT_TCSETAW    = 0x5403;$/;"	m	class:MipsLinux
TGT_TCSETAW	src/arch/power/linux/linux.hh	/^    static const unsigned TGT_TCSETAW    = 0x80147419; \/\/ 2.6.15 kernel$/;"	m	class:PowerLinux
TGT_TCSETAW	src/arch/sparc/linux/linux.hh	/^    static const unsigned TGT_TCSETAW   = 0x80125403;$/;"	m	class:SparcLinux
TGT_TCSETAW	src/kern/linux/linux.hh	/^    static const unsigned TGT_TCSETAW    = 0x5407;$/;"	m	class:Linux
TGT_TIOCGETC	src/arch/alpha/linux/linux.hh	/^    static const unsigned TGT_TIOCGETC   = 0x40067412;$/;"	m	class:AlphaLinux
TGT_TIOCGETC	src/arch/alpha/tru64/tru64.hh	/^    static const unsigned TGT_TIOCGETC   = 0x40067412;$/;"	m	class:AlphaTru64
TGT_TIOCGETC	src/arch/power/linux/linux.hh	/^    static const unsigned TGT_TIOCGETC   = 0x40067412;$/;"	m	class:PowerLinux
TGT_TIOCGETP	src/arch/alpha/linux/linux.hh	/^    static const unsigned TGT_TIOCGETP   = 0x40067408;$/;"	m	class:AlphaLinux
TGT_TIOCGETP	src/arch/alpha/tru64/tru64.hh	/^    static const unsigned TGT_TIOCGETP   = 0x40067408;$/;"	m	class:AlphaTru64
TGT_TIOCGETP	src/arch/mips/linux/linux.hh	/^    static const unsigned TGT_TIOCGETP   = 0x7408;$/;"	m	class:MipsLinux
TGT_TIOCGETP	src/arch/power/linux/linux.hh	/^    static const unsigned TGT_TIOCGETP   = 0x40067408;$/;"	m	class:PowerLinux
TGT_TIOCGETP	src/arch/sparc/linux/linux.hh	/^    static const unsigned TGT_TIOCGETP  = 0x40067408;$/;"	m	class:SparcLinux
TGT_TIOCISATTY	src/arch/alpha/tru64/tru64.hh	/^    static const unsigned TGT_TIOCISATTY = 0x2000745e;$/;"	m	class:AlphaTru64
TGT_TIOCSETC	src/arch/alpha/linux/linux.hh	/^    static const unsigned TGT_TIOCSETC   = 0x80067411;$/;"	m	class:AlphaLinux
TGT_TIOCSETC	src/arch/alpha/tru64/tru64.hh	/^    static const unsigned TGT_TIOCSETC   = 0x80067411;$/;"	m	class:AlphaTru64
TGT_TIOCSETC	src/arch/power/linux/linux.hh	/^    static const unsigned TGT_TIOCSETC   = 0x80067411;$/;"	m	class:PowerLinux
TGT_TIOCSETN	src/arch/alpha/linux/linux.hh	/^    static const unsigned TGT_TIOCSETN   = 0x8006740a;$/;"	m	class:AlphaLinux
TGT_TIOCSETN	src/arch/alpha/tru64/tru64.hh	/^    static const unsigned TGT_TIOCSETN   = 0x8006740a;$/;"	m	class:AlphaTru64
TGT_TIOCSETN	src/arch/mips/linux/linux.hh	/^    static const unsigned TGT_TIOCSETN   = 0x740a;$/;"	m	class:MipsLinux
TGT_TIOCSETN	src/arch/power/linux/linux.hh	/^    static const unsigned TGT_TIOCSETN   = 0x8006740a;$/;"	m	class:PowerLinux
TGT_TIOCSETN	src/arch/sparc/linux/linux.hh	/^    static const unsigned TGT_TIOCSETN  = 0x8006740a;$/;"	m	class:SparcLinux
TGT_TIOCSETP	src/arch/alpha/linux/linux.hh	/^    static const unsigned TGT_TIOCSETP   = 0x80067409;$/;"	m	class:AlphaLinux
TGT_TIOCSETP	src/arch/alpha/tru64/tru64.hh	/^    static const unsigned TGT_TIOCSETP   = 0x80067409;$/;"	m	class:AlphaTru64
TGT_TIOCSETP	src/arch/mips/linux/linux.hh	/^    static const unsigned TGT_TIOCSETP   = 0x7409;$/;"	m	class:MipsLinux
TGT_TIOCSETP	src/arch/power/linux/linux.hh	/^    static const unsigned TGT_TIOCSETP   = 0x80067409;$/;"	m	class:PowerLinux
TGT_TIOCSETP	src/arch/sparc/linux/linux.hh	/^    static const unsigned TGT_TIOCSETP  = 0x80067409;$/;"	m	class:SparcLinux
TIDV	src/dev/i8254xGBe_defs.hh	/^    struct TIDV : public Reg<uint32_t> { \/\/ 0x3820 TIDV Register$/;"	s	struct:iGbReg::Regs
TIMER_FREQUENCY	src/arch/alpha/freebsd/system.cc	/^#define TIMER_FREQUENCY /;"	d	file:
TIOCGETA_	src/arch/arm/linux/linux.hh	/^    static const unsigned TIOCGETA_   = 0x5405;$/;"	m	class:ArmLinux64
TIOCGETC_	src/arch/arm/linux/linux.hh	/^    static const unsigned TIOCGETC_   = 0x40067412;$/;"	m	class:ArmLinux64
TIOCGETP_	src/arch/arm/linux/linux.hh	/^    static const unsigned TIOCGETP_   = 0x5401;$/;"	m	class:ArmLinux64
TIOCGETS_	src/arch/arm/linux/linux.hh	/^    static const unsigned TIOCGETS_   = 0x402c7413;$/;"	m	class:ArmLinux64
TIOCISATTY_	src/arch/arm/linux/linux.hh	/^    static const unsigned TIOCISATTY_ = 0x2000745e;$/;"	m	class:ArmLinux64
TIOCSETC_	src/arch/arm/linux/linux.hh	/^    static const unsigned TIOCSETC_   = 0x80067411;$/;"	m	class:ArmLinux64
TIOCSETN_	src/arch/arm/linux/linux.hh	/^    static const unsigned TIOCSETN_   = 0x8006740a;$/;"	m	class:ArmLinux64
TIOCSETP_	src/arch/arm/linux/linux.hh	/^    static const unsigned TIOCSETP_   = 0x80067409;$/;"	m	class:ArmLinux64
TIR	src/base/loader/coff_sym.h	/^} TIR, *pTIR;$/;"	t	typeref:struct:__anon41
TLB	src/arch/alpha/tlb.cc	/^TLB::TLB(const Params *p)$/;"	f	class:AlphaISA::TLB
TLB	src/arch/alpha/tlb.hh	/^class TLB : public BaseTLB$/;"	c	namespace:AlphaISA
TLB	src/arch/arm/tlb.cc	/^TLB::TLB(const ArmTLBParams *p)$/;"	f	class:TLB
TLB	src/arch/arm/tlb.hh	/^class TLB : public BaseTLB$/;"	c	namespace:ArmISA
TLB	src/arch/mips/tlb.cc	/^TLB::TLB(const Params *p)$/;"	f	class:TLB
TLB	src/arch/mips/tlb.hh	/^class TLB : public BaseTLB$/;"	c	namespace:MipsISA
TLB	src/arch/power/tlb.cc	/^TLB::TLB(const Params *p)$/;"	f	class:TLB
TLB	src/arch/power/tlb.hh	/^class TLB : public BaseTLB$/;"	c	namespace:PowerISA
TLB	src/arch/sparc/tlb.cc	/^TLB::TLB(const Params *p)$/;"	f	class:SparcISA::TLB
TLB	src/arch/sparc/tlb.hh	/^class TLB : public BaseTLB$/;"	c	namespace:SparcISA
TLB	src/arch/x86/tlb.cc	/^TLB::TLB(const Params *p) : BaseTLB(p), configAddress(0), size(p->size),$/;"	f	class:X86ISA::TLB
TLB	src/arch/x86/tlb.hh	/^    class TLB : public BaseTLB$/;"	c	namespace:X86ISA
TLBCommand	src/cpu/inorder/resources/tlb_unit.hh	/^    enum TLBCommand {$/;"	g	class:TLBUnit
TLBConflictAbort	src/arch/arm/faults.hh	/^        TLBConflictAbort,  \/\/ Requires LPAE$/;"	e	enum:ArmISA::ArmFault::FaultSource
TLBUnit	src/cpu/inorder/resources/tlb_unit.cc	/^TLBUnit::TLBUnit(string res_name, int res_id, int res_width,$/;"	f	class:TLBUnit
TLBUnit	src/cpu/inorder/resources/tlb_unit.hh	/^class TLBUnit : public Resource$/;"	c
TLBUnitEvent	src/cpu/inorder/resources/tlb_unit.cc	/^TLBUnitEvent::TLBUnitEvent()$/;"	f	class:TLBUnitEvent
TLBUnitEvent	src/cpu/inorder/resources/tlb_unit.hh	/^class TLBUnitEvent : public ResourceEvent {$/;"	c
TLBUnitRequest	src/cpu/inorder/resources/tlb_unit.hh	/^    TLBUnitRequest(TLBUnit *res)$/;"	f	class:TLBUnitRequest
TLBUnitRequest	src/cpu/inorder/resources/tlb_unit.hh	/^class TLBUnitRequest : public ResourceRequest {$/;"	c
TRACE_PACKET	src/mem/abstract_mem.cc	/^#define TRACE_PACKET(/;"	d	file:
TRANS_GATE	src/mem/ruby/network/orion/Crossbar/Crossbar.hh	/^      TRANS_GATE,$/;"	e	enum:Crossbar::ConnectType
TRISTATE_GATE	src/mem/ruby/network/orion/Crossbar/Crossbar.hh	/^      TRISTATE_GATE$/;"	e	enum:Crossbar::ConnectType
TSDEV_CC_AAR0	src/dev/alpha/tsunamireg.h	/^#define TSDEV_CC_AAR0 /;"	d
TSDEV_CC_AAR0	src/dev/mips/maltareg.h	/^#define TSDEV_CC_AAR0 /;"	d
TSDEV_CC_AAR1	src/dev/alpha/tsunamireg.h	/^#define TSDEV_CC_AAR1 /;"	d
TSDEV_CC_AAR1	src/dev/mips/maltareg.h	/^#define TSDEV_CC_AAR1 /;"	d
TSDEV_CC_AAR2	src/dev/alpha/tsunamireg.h	/^#define TSDEV_CC_AAR2 /;"	d
TSDEV_CC_AAR2	src/dev/mips/maltareg.h	/^#define TSDEV_CC_AAR2 /;"	d
TSDEV_CC_AAR3	src/dev/alpha/tsunamireg.h	/^#define TSDEV_CC_AAR3 /;"	d
TSDEV_CC_AAR3	src/dev/mips/maltareg.h	/^#define TSDEV_CC_AAR3 /;"	d
TSDEV_CC_BDIMS	src/dev/alpha/tsunamireg.h	/^#define TSDEV_CC_BDIMS /;"	d
TSDEV_CC_BDIMS	src/dev/mips/maltareg.h	/^#define TSDEV_CC_BDIMS /;"	d
TSDEV_CC_BDIRS	src/dev/alpha/tsunamireg.h	/^#define TSDEV_CC_BDIRS /;"	d
TSDEV_CC_BDIRS	src/dev/mips/maltareg.h	/^#define TSDEV_CC_BDIRS /;"	d
TSDEV_CC_CSR	src/dev/alpha/tsunamireg.h	/^#define TSDEV_CC_CSR /;"	d
TSDEV_CC_CSR	src/dev/mips/maltareg.h	/^#define TSDEV_CC_CSR /;"	d
TSDEV_CC_DIM0	src/dev/alpha/tsunamireg.h	/^#define TSDEV_CC_DIM0 /;"	d
TSDEV_CC_DIM0	src/dev/mips/maltareg.h	/^#define TSDEV_CC_DIM0 /;"	d
TSDEV_CC_DIM1	src/dev/alpha/tsunamireg.h	/^#define TSDEV_CC_DIM1 /;"	d
TSDEV_CC_DIM1	src/dev/mips/maltareg.h	/^#define TSDEV_CC_DIM1 /;"	d
TSDEV_CC_DIM2	src/dev/alpha/tsunamireg.h	/^#define TSDEV_CC_DIM2 /;"	d
TSDEV_CC_DIM2	src/dev/mips/maltareg.h	/^#define TSDEV_CC_DIM2 /;"	d
TSDEV_CC_DIM3	src/dev/alpha/tsunamireg.h	/^#define TSDEV_CC_DIM3 /;"	d
TSDEV_CC_DIM3	src/dev/mips/maltareg.h	/^#define TSDEV_CC_DIM3 /;"	d
TSDEV_CC_DIR0	src/dev/alpha/tsunamireg.h	/^#define TSDEV_CC_DIR0 /;"	d
TSDEV_CC_DIR0	src/dev/mips/maltareg.h	/^#define TSDEV_CC_DIR0 /;"	d
TSDEV_CC_DIR1	src/dev/alpha/tsunamireg.h	/^#define TSDEV_CC_DIR1 /;"	d
TSDEV_CC_DIR1	src/dev/mips/maltareg.h	/^#define TSDEV_CC_DIR1 /;"	d
TSDEV_CC_DIR2	src/dev/alpha/tsunamireg.h	/^#define TSDEV_CC_DIR2 /;"	d
TSDEV_CC_DIR2	src/dev/mips/maltareg.h	/^#define TSDEV_CC_DIR2 /;"	d
TSDEV_CC_DIR3	src/dev/alpha/tsunamireg.h	/^#define TSDEV_CC_DIR3 /;"	d
TSDEV_CC_DIR3	src/dev/mips/maltareg.h	/^#define TSDEV_CC_DIR3 /;"	d
TSDEV_CC_DRIR	src/dev/alpha/tsunamireg.h	/^#define TSDEV_CC_DRIR /;"	d
TSDEV_CC_DRIR	src/dev/mips/maltareg.h	/^#define TSDEV_CC_DRIR /;"	d
TSDEV_CC_IIC0	src/dev/alpha/tsunamireg.h	/^#define TSDEV_CC_IIC0 /;"	d
TSDEV_CC_IIC0	src/dev/mips/maltareg.h	/^#define TSDEV_CC_IIC0 /;"	d
TSDEV_CC_IIC1	src/dev/alpha/tsunamireg.h	/^#define TSDEV_CC_IIC1 /;"	d
TSDEV_CC_IIC1	src/dev/mips/maltareg.h	/^#define TSDEV_CC_IIC1 /;"	d
TSDEV_CC_IIC2	src/dev/alpha/tsunamireg.h	/^#define TSDEV_CC_IIC2 /;"	d
TSDEV_CC_IIC2	src/dev/mips/maltareg.h	/^#define TSDEV_CC_IIC2 /;"	d
TSDEV_CC_IIC3	src/dev/alpha/tsunamireg.h	/^#define TSDEV_CC_IIC3 /;"	d
TSDEV_CC_IIC3	src/dev/mips/maltareg.h	/^#define TSDEV_CC_IIC3 /;"	d
TSDEV_CC_IPIQ	src/dev/alpha/tsunamireg.h	/^#define TSDEV_CC_IPIQ /;"	d
TSDEV_CC_IPIQ	src/dev/mips/maltareg.h	/^#define TSDEV_CC_IPIQ /;"	d
TSDEV_CC_IPIR	src/dev/alpha/tsunamireg.h	/^#define TSDEV_CC_IPIR /;"	d
TSDEV_CC_IPIR	src/dev/mips/maltareg.h	/^#define TSDEV_CC_IPIR /;"	d
TSDEV_CC_ITIR	src/dev/alpha/tsunamireg.h	/^#define TSDEV_CC_ITIR /;"	d
TSDEV_CC_ITIR	src/dev/mips/maltareg.h	/^#define TSDEV_CC_ITIR /;"	d
TSDEV_CC_MISC	src/dev/alpha/tsunamireg.h	/^#define TSDEV_CC_MISC /;"	d
TSDEV_CC_MISC	src/dev/mips/maltareg.h	/^#define TSDEV_CC_MISC /;"	d
TSDEV_CC_MPR0	src/dev/alpha/tsunamireg.h	/^#define TSDEV_CC_MPR0 /;"	d
TSDEV_CC_MPR0	src/dev/mips/maltareg.h	/^#define TSDEV_CC_MPR0 /;"	d
TSDEV_CC_MPR1	src/dev/alpha/tsunamireg.h	/^#define TSDEV_CC_MPR1 /;"	d
TSDEV_CC_MPR1	src/dev/mips/maltareg.h	/^#define TSDEV_CC_MPR1 /;"	d
TSDEV_CC_MPR2	src/dev/alpha/tsunamireg.h	/^#define TSDEV_CC_MPR2 /;"	d
TSDEV_CC_MPR2	src/dev/mips/maltareg.h	/^#define TSDEV_CC_MPR2 /;"	d
TSDEV_CC_MPR3	src/dev/alpha/tsunamireg.h	/^#define TSDEV_CC_MPR3 /;"	d
TSDEV_CC_MPR3	src/dev/mips/maltareg.h	/^#define TSDEV_CC_MPR3 /;"	d
TSDEV_CC_MTR	src/dev/alpha/tsunamireg.h	/^#define TSDEV_CC_MTR /;"	d
TSDEV_CC_MTR	src/dev/mips/maltareg.h	/^#define TSDEV_CC_MTR /;"	d
TSDEV_CC_PRBEN	src/dev/alpha/tsunamireg.h	/^#define TSDEV_CC_PRBEN /;"	d
TSDEV_CC_PRBEN	src/dev/mips/maltareg.h	/^#define TSDEV_CC_PRBEN /;"	d
TSDEV_CTRL_PORTB	src/dev/alpha/tsunamireg.h	/^#define TSDEV_CTRL_PORTB /;"	d
TSDEV_CTRL_PORTB	src/dev/mips/maltareg.h	/^#define TSDEV_CTRL_PORTB /;"	d
TSDEV_DC_DREV	src/dev/alpha/tsunamireg.h	/^#define TSDEV_DC_DREV /;"	d
TSDEV_DC_DREV	src/dev/mips/maltareg.h	/^#define TSDEV_DC_DREV /;"	d
TSDEV_DC_DSC	src/dev/alpha/tsunamireg.h	/^#define TSDEV_DC_DSC /;"	d
TSDEV_DC_DSC	src/dev/mips/maltareg.h	/^#define TSDEV_DC_DSC /;"	d
TSDEV_DC_DSC2	src/dev/alpha/tsunamireg.h	/^#define TSDEV_DC_DSC2 /;"	d
TSDEV_DC_DSC2	src/dev/mips/maltareg.h	/^#define TSDEV_DC_DSC2 /;"	d
TSDEV_DC_STR	src/dev/alpha/tsunamireg.h	/^#define TSDEV_DC_STR /;"	d
TSDEV_DC_STR	src/dev/mips/maltareg.h	/^#define TSDEV_DC_STR /;"	d
TSDEV_DMA1_CMND	src/dev/alpha/tsunamireg.h	/^#define TSDEV_DMA1_CMND /;"	d
TSDEV_DMA1_CMND	src/dev/mips/maltareg.h	/^#define TSDEV_DMA1_CMND /;"	d
TSDEV_DMA1_MASK	src/dev/alpha/tsunamireg.h	/^#define TSDEV_DMA1_MASK /;"	d
TSDEV_DMA1_MASK	src/dev/mips/maltareg.h	/^#define TSDEV_DMA1_MASK /;"	d
TSDEV_DMA1_MMASK	src/dev/alpha/tsunamireg.h	/^#define TSDEV_DMA1_MMASK /;"	d
TSDEV_DMA1_MMASK	src/dev/mips/maltareg.h	/^#define TSDEV_DMA1_MMASK /;"	d
TSDEV_DMA1_MODE	src/dev/alpha/tsunamireg.h	/^#define TSDEV_DMA1_MODE /;"	d
TSDEV_DMA1_MODE	src/dev/mips/maltareg.h	/^#define TSDEV_DMA1_MODE /;"	d
TSDEV_DMA1_RESET	src/dev/alpha/tsunamireg.h	/^#define TSDEV_DMA1_RESET /;"	d
TSDEV_DMA1_RESET	src/dev/mips/maltareg.h	/^#define TSDEV_DMA1_RESET /;"	d
TSDEV_DMA1_STAT	src/dev/alpha/tsunamireg.h	/^#define TSDEV_DMA1_STAT /;"	d
TSDEV_DMA1_STAT	src/dev/mips/maltareg.h	/^#define TSDEV_DMA1_STAT /;"	d
TSDEV_DMA2_CMND	src/dev/alpha/tsunamireg.h	/^#define TSDEV_DMA2_CMND /;"	d
TSDEV_DMA2_CMND	src/dev/mips/maltareg.h	/^#define TSDEV_DMA2_CMND /;"	d
TSDEV_DMA2_MASK	src/dev/alpha/tsunamireg.h	/^#define TSDEV_DMA2_MASK /;"	d
TSDEV_DMA2_MASK	src/dev/mips/maltareg.h	/^#define TSDEV_DMA2_MASK /;"	d
TSDEV_DMA2_MMASK	src/dev/alpha/tsunamireg.h	/^#define TSDEV_DMA2_MMASK /;"	d
TSDEV_DMA2_MMASK	src/dev/mips/maltareg.h	/^#define TSDEV_DMA2_MMASK /;"	d
TSDEV_DMA2_MODE	src/dev/alpha/tsunamireg.h	/^#define TSDEV_DMA2_MODE /;"	d
TSDEV_DMA2_MODE	src/dev/mips/maltareg.h	/^#define TSDEV_DMA2_MODE /;"	d
TSDEV_DMA2_RESET	src/dev/alpha/tsunamireg.h	/^#define TSDEV_DMA2_RESET /;"	d
TSDEV_DMA2_RESET	src/dev/mips/maltareg.h	/^#define TSDEV_DMA2_RESET /;"	d
TSDEV_DMA2_STAT	src/dev/alpha/tsunamireg.h	/^#define TSDEV_DMA2_STAT /;"	d
TSDEV_DMA2_STAT	src/dev/mips/maltareg.h	/^#define TSDEV_DMA2_STAT /;"	d
TSDEV_KBD	src/dev/alpha/tsunamireg.h	/^#define TSDEV_KBD /;"	d
TSDEV_KBD	src/dev/mips/maltareg.h	/^#define TSDEV_KBD /;"	d
TSDEV_PC_PCTL	src/dev/alpha/tsunamireg.h	/^#define TSDEV_PC_PCTL /;"	d
TSDEV_PC_PCTL	src/dev/mips/maltareg.h	/^#define TSDEV_PC_PCTL /;"	d
TSDEV_PC_PERRMASK	src/dev/alpha/tsunamireg.h	/^#define TSDEV_PC_PERRMASK /;"	d
TSDEV_PC_PERRMASK	src/dev/mips/maltareg.h	/^#define TSDEV_PC_PERRMASK /;"	d
TSDEV_PC_PERROR	src/dev/alpha/tsunamireg.h	/^#define TSDEV_PC_PERROR /;"	d
TSDEV_PC_PERROR	src/dev/mips/maltareg.h	/^#define TSDEV_PC_PERROR /;"	d
TSDEV_PC_PERRSET	src/dev/alpha/tsunamireg.h	/^#define TSDEV_PC_PERRSET /;"	d
TSDEV_PC_PERRSET	src/dev/mips/maltareg.h	/^#define TSDEV_PC_PERRSET /;"	d
TSDEV_PC_PLAT	src/dev/alpha/tsunamireg.h	/^#define TSDEV_PC_PLAT /;"	d
TSDEV_PC_PLAT	src/dev/mips/maltareg.h	/^#define TSDEV_PC_PLAT /;"	d
TSDEV_PC_PMONCNT	src/dev/alpha/tsunamireg.h	/^#define TSDEV_PC_PMONCNT /;"	d
TSDEV_PC_PMONCNT	src/dev/mips/maltareg.h	/^#define TSDEV_PC_PMONCNT /;"	d
TSDEV_PC_PMONCTL	src/dev/alpha/tsunamireg.h	/^#define TSDEV_PC_PMONCTL /;"	d
TSDEV_PC_PMONCTL	src/dev/mips/maltareg.h	/^#define TSDEV_PC_PMONCTL /;"	d
TSDEV_PC_RES	src/dev/alpha/tsunamireg.h	/^#define TSDEV_PC_RES /;"	d
TSDEV_PC_RES	src/dev/mips/maltareg.h	/^#define TSDEV_PC_RES /;"	d
TSDEV_PC_SPST	src/dev/alpha/tsunamireg.h	/^#define TSDEV_PC_SPST /;"	d
TSDEV_PC_SPST	src/dev/mips/maltareg.h	/^#define TSDEV_PC_SPST /;"	d
TSDEV_PC_TBA0	src/dev/alpha/tsunamireg.h	/^#define TSDEV_PC_TBA0 /;"	d
TSDEV_PC_TBA0	src/dev/mips/maltareg.h	/^#define TSDEV_PC_TBA0 /;"	d
TSDEV_PC_TBA1	src/dev/alpha/tsunamireg.h	/^#define TSDEV_PC_TBA1 /;"	d
TSDEV_PC_TBA1	src/dev/mips/maltareg.h	/^#define TSDEV_PC_TBA1 /;"	d
TSDEV_PC_TBA2	src/dev/alpha/tsunamireg.h	/^#define TSDEV_PC_TBA2 /;"	d
TSDEV_PC_TBA2	src/dev/mips/maltareg.h	/^#define TSDEV_PC_TBA2 /;"	d
TSDEV_PC_TBA3	src/dev/alpha/tsunamireg.h	/^#define TSDEV_PC_TBA3 /;"	d
TSDEV_PC_TBA3	src/dev/mips/maltareg.h	/^#define TSDEV_PC_TBA3 /;"	d
TSDEV_PC_TLBIA	src/dev/alpha/tsunamireg.h	/^#define TSDEV_PC_TLBIA /;"	d
TSDEV_PC_TLBIA	src/dev/mips/maltareg.h	/^#define TSDEV_PC_TLBIA /;"	d
TSDEV_PC_TLBIV	src/dev/alpha/tsunamireg.h	/^#define TSDEV_PC_TLBIV /;"	d
TSDEV_PC_TLBIV	src/dev/mips/maltareg.h	/^#define TSDEV_PC_TLBIV /;"	d
TSDEV_PC_WSBA0	src/dev/alpha/tsunamireg.h	/^#define TSDEV_PC_WSBA0 /;"	d
TSDEV_PC_WSBA0	src/dev/mips/maltareg.h	/^#define TSDEV_PC_WSBA0 /;"	d
TSDEV_PC_WSBA1	src/dev/alpha/tsunamireg.h	/^#define TSDEV_PC_WSBA1 /;"	d
TSDEV_PC_WSBA1	src/dev/mips/maltareg.h	/^#define TSDEV_PC_WSBA1 /;"	d
TSDEV_PC_WSBA2	src/dev/alpha/tsunamireg.h	/^#define TSDEV_PC_WSBA2 /;"	d
TSDEV_PC_WSBA2	src/dev/mips/maltareg.h	/^#define TSDEV_PC_WSBA2 /;"	d
TSDEV_PC_WSBA3	src/dev/alpha/tsunamireg.h	/^#define TSDEV_PC_WSBA3 /;"	d
TSDEV_PC_WSBA3	src/dev/mips/maltareg.h	/^#define TSDEV_PC_WSBA3 /;"	d
TSDEV_PC_WSM0	src/dev/alpha/tsunamireg.h	/^#define TSDEV_PC_WSM0 /;"	d
TSDEV_PC_WSM0	src/dev/mips/maltareg.h	/^#define TSDEV_PC_WSM0 /;"	d
TSDEV_PC_WSM1	src/dev/alpha/tsunamireg.h	/^#define TSDEV_PC_WSM1 /;"	d
TSDEV_PC_WSM1	src/dev/mips/maltareg.h	/^#define TSDEV_PC_WSM1 /;"	d
TSDEV_PC_WSM2	src/dev/alpha/tsunamireg.h	/^#define TSDEV_PC_WSM2 /;"	d
TSDEV_PC_WSM2	src/dev/mips/maltareg.h	/^#define TSDEV_PC_WSM2 /;"	d
TSDEV_PC_WSM3	src/dev/alpha/tsunamireg.h	/^#define TSDEV_PC_WSM3 /;"	d
TSDEV_PC_WSM3	src/dev/mips/maltareg.h	/^#define TSDEV_PC_WSM3 /;"	d
TSDEV_PIC1_ACK	src/dev/alpha/tsunamireg.h	/^#define TSDEV_PIC1_ACK /;"	d
TSDEV_PIC1_ACK	src/dev/mips/maltareg.h	/^#define TSDEV_PIC1_ACK /;"	d
TSDEV_PIC1_ISR	src/dev/alpha/tsunamireg.h	/^#define TSDEV_PIC1_ISR /;"	d
TSDEV_PIC1_ISR	src/dev/mips/maltareg.h	/^#define TSDEV_PIC1_ISR /;"	d
TSDEV_PIC1_MASK	src/dev/alpha/tsunamireg.h	/^#define TSDEV_PIC1_MASK /;"	d
TSDEV_PIC1_MASK	src/dev/mips/maltareg.h	/^#define TSDEV_PIC1_MASK /;"	d
TSDEV_PIC2_ACK	src/dev/alpha/tsunamireg.h	/^#define TSDEV_PIC2_ACK /;"	d
TSDEV_PIC2_ACK	src/dev/mips/maltareg.h	/^#define TSDEV_PIC2_ACK /;"	d
TSDEV_PIC2_ISR	src/dev/alpha/tsunamireg.h	/^#define TSDEV_PIC2_ISR /;"	d
TSDEV_PIC2_ISR	src/dev/mips/maltareg.h	/^#define TSDEV_PIC2_ISR /;"	d
TSDEV_PIC2_MASK	src/dev/alpha/tsunamireg.h	/^#define TSDEV_PIC2_MASK /;"	d
TSDEV_PIC2_MASK	src/dev/mips/maltareg.h	/^#define TSDEV_PIC2_MASK /;"	d
TSDEV_RTC_ADDR	src/dev/alpha/tsunamireg.h	/^#define TSDEV_RTC_ADDR /;"	d
TSDEV_RTC_ADDR	src/dev/mips/maltareg.h	/^#define TSDEV_RTC_ADDR /;"	d
TSDEV_RTC_DATA	src/dev/alpha/tsunamireg.h	/^#define TSDEV_RTC_DATA /;"	d
TSDEV_RTC_DATA	src/dev/mips/maltareg.h	/^#define TSDEV_RTC_DATA /;"	d
TSDEV_TMR0_DATA	src/dev/alpha/tsunamireg.h	/^#define TSDEV_TMR0_DATA /;"	d
TSDEV_TMR0_DATA	src/dev/mips/maltareg.h	/^#define TSDEV_TMR0_DATA /;"	d
TSDEV_TMR1_DATA	src/dev/alpha/tsunamireg.h	/^#define TSDEV_TMR1_DATA /;"	d
TSDEV_TMR1_DATA	src/dev/mips/maltareg.h	/^#define TSDEV_TMR1_DATA /;"	d
TSDEV_TMR2_DATA	src/dev/alpha/tsunamireg.h	/^#define TSDEV_TMR2_DATA /;"	d
TSDEV_TMR2_DATA	src/dev/mips/maltareg.h	/^#define TSDEV_TMR2_DATA /;"	d
TSDEV_TMR_CTRL	src/dev/alpha/tsunamireg.h	/^#define TSDEV_TMR_CTRL /;"	d
TSDEV_TMR_CTRL	src/dev/mips/maltareg.h	/^#define TSDEV_TMR_CTRL /;"	d
TSUNAMI_PCI0_IO	src/dev/alpha/tsunamireg.h	/^#define TSUNAMI_PCI0_IO /;"	d
TSUNAMI_PCI0_IO	src/dev/mips/maltareg.h	/^#define TSUNAMI_PCI0_IO /;"	d
TSUNAMI_PCI0_MEMORY	src/dev/alpha/tsunamireg.h	/^#define TSUNAMI_PCI0_MEMORY /;"	d
TSUNAMI_PCI0_MEMORY	src/dev/mips/maltareg.h	/^#define TSUNAMI_PCI0_MEMORY /;"	d
TSUNAMI_UNCACHABLE_BIT	src/dev/alpha/tsunamireg.h	/^#define TSUNAMI_UNCACHABLE_BIT /;"	d
TSUNAMI_UNCACHABLE_BIT	src/dev/mips/maltareg.h	/^#define TSUNAMI_UNCACHABLE_BIT /;"	d
TWO_STAGE_ARB	src/mem/ruby/network/orion/Allocator/VCAllocator.hh	/^      TWO_STAGE_ARB,$/;"	e	enum:VCAllocator::VAModel
TXDCA_CTL	src/dev/i8254xGBe_defs.hh	/^    struct TXDCA_CTL : public Reg<uint32_t> { \/\/ 0x3814 TXDCA_CTL Register$/;"	s	struct:iGbReg::Regs
TXDCTL	src/dev/i8254xGBe_defs.hh	/^    struct TXDCTL : public Reg<uint32_t> { \/\/ 0x3828 TXDCTL Register$/;"	s	struct:iGbReg::Regs
TXDP	src/dev/ns_gige_reg.h	/^    TXDP =              0x20,$/;"	e	enum:DeviceRegisterAddress
TXDP_HI	src/dev/ns_gige_reg.h	/^    TXDP_HI =           0x24,$/;"	e	enum:DeviceRegisterAddress
TXD_ADVCNXT	src/dev/i8254xGBe_defs.hh	/^const uint8_t TXD_ADVCNXT = 0x2;$/;"	m	namespace:iGbReg::TxdOp
TXD_ADVDATA	src/dev/i8254xGBe_defs.hh	/^const uint8_t TXD_ADVDATA = 0x3;$/;"	m	namespace:iGbReg::TxdOp
TXD_CNXT	src/dev/i8254xGBe_defs.hh	/^const uint8_t TXD_CNXT = 0x0;$/;"	m	namespace:iGbReg::TxdOp
TXD_DATA	src/dev/i8254xGBe_defs.hh	/^const uint8_t TXD_DATA = 0x1;$/;"	m	namespace:iGbReg::TxdOp
TX_CFG	src/dev/ns_gige_reg.h	/^    TX_CFG =            0x28,$/;"	e	enum:DeviceRegisterAddress
TX_CFG_ATP	src/dev/ns_gige_reg.h	/^     TX_CFG_ATP =       0x10000000,$/;"	e	enum:TransmitConfigurationRegister
TX_CFG_BRST_DIS	src/dev/ns_gige_reg.h	/^     TX_CFG_BRST_DIS =  0x00080000,$/;"	e	enum:TransmitConfigurationRegister
TX_CFG_CSI	src/dev/ns_gige_reg.h	/^     TX_CFG_CSI =       0x80000000,$/;"	e	enum:TransmitConfigurationRegister
TX_CFG_DRTH_MASK	src/dev/ns_gige_reg.h	/^     TX_CFG_DRTH_MASK = 0x000000ff$/;"	e	enum:TransmitConfigurationRegister
TX_CFG_ECRETRY	src/dev/ns_gige_reg.h	/^     TX_CFG_ECRETRY =   0x00800000,$/;"	e	enum:TransmitConfigurationRegister
TX_CFG_FLTH_MASK	src/dev/ns_gige_reg.h	/^     TX_CFG_FLTH_MASK = 0x0000ff00,$/;"	e	enum:TransmitConfigurationRegister
TX_CFG_HBI	src/dev/ns_gige_reg.h	/^     TX_CFG_HBI =       0x40000000,$/;"	e	enum:TransmitConfigurationRegister
TX_CFG_MLB	src/dev/ns_gige_reg.h	/^     TX_CFG_MLB =       0x20000000,$/;"	e	enum:TransmitConfigurationRegister
TX_CFG_MXDMA	src/dev/ns_gige_reg.h	/^     TX_CFG_MXDMA =     0x00700000,$/;"	e	enum:TransmitConfigurationRegister
TX_CFG_MXDMA1024	src/dev/ns_gige_reg.h	/^     TX_CFG_MXDMA1024 = 0x00000000,$/;"	e	enum:TransmitConfigurationRegister
TX_CFG_MXDMA128	src/dev/ns_gige_reg.h	/^     TX_CFG_MXDMA128 =  0x00500000,$/;"	e	enum:TransmitConfigurationRegister
TX_CFG_MXDMA16	src/dev/ns_gige_reg.h	/^     TX_CFG_MXDMA16 =   0x00200000,$/;"	e	enum:TransmitConfigurationRegister
TX_CFG_MXDMA256	src/dev/ns_gige_reg.h	/^     TX_CFG_MXDMA256 =  0x00600000,$/;"	e	enum:TransmitConfigurationRegister
TX_CFG_MXDMA32	src/dev/ns_gige_reg.h	/^     TX_CFG_MXDMA32 =   0x00300000,$/;"	e	enum:TransmitConfigurationRegister
TX_CFG_MXDMA512	src/dev/ns_gige_reg.h	/^     TX_CFG_MXDMA512 =  0x00700000,$/;"	e	enum:TransmitConfigurationRegister
TX_CFG_MXDMA64	src/dev/ns_gige_reg.h	/^     TX_CFG_MXDMA64 =   0x00400000,$/;"	e	enum:TransmitConfigurationRegister
TX_CFG_MXDMA8	src/dev/ns_gige_reg.h	/^     TX_CFG_MXDMA8 =    0x00100000,$/;"	e	enum:TransmitConfigurationRegister
TX_INT	src/dev/uart.hh	/^const int TX_INT = 0x2;$/;"	v
TYPEDEFINES_H	src/mem/ruby/common/TypeDefines.hh	/^#define TYPEDEFINES_H$/;"	d
T_as_string	src/mem/ruby/network/orion/ConfigFile.hh	/^string ConfigFile::T_as_string( const T& t )$/;"	f	class:ConfigFile
T_as_string	src/mem/ruby/network/orion/OrionConfig.hh	/^string OrionConfig::T_as_string(const T& t)$/;"	f	class:OrionConfig
Table	src/arch/arm/table_walker.hh	/^            Table,$/;"	e	enum:ArmISA::TableWalker::LongDescriptor::EntryType
TableSize	src/dev/x86/i82094aa.hh	/^    static const uint8_t TableSize = 24;$/;"	m	class:X86ISA::I82094AA
TableWalker	src/arch/arm/table_walker.cc	/^TableWalker::TableWalker(const Params *p)$/;"	f	class:TableWalker
TableWalker	src/arch/arm/table_walker.hh	/^class TableWalker : public MemObject$/;"	c	namespace:ArmISA
TagOverflow	src/arch/sparc/faults.hh	/^class TagOverflow : public SparcFault<TagOverflow> {};$/;"	c	namespace:SparcISA
TagRead	src/arch/sparc/tlb.cc	/^TLB::TagRead(int entry)$/;"	f	class:SparcISA::TLB
TaggedPrefetcher	src/mem/cache/prefetch/Prefetcher.py	/^class TaggedPrefetcher(BasePrefetcher):$/;"	c
TaggedPrefetcher	src/mem/cache/prefetch/tagged.cc	/^TaggedPrefetcher::TaggedPrefetcher(const Params *p)$/;"	f	class:TaggedPrefetcher
TaggedPrefetcher	src/mem/cache/prefetch/tagged.hh	/^class TaggedPrefetcher : public BasePrefetcher$/;"	c
TapEvent	src/dev/ethertap.cc	/^    TapEvent(EtherTap *_tap, int fd, int e)$/;"	f	class:TapEvent
TapEvent	src/dev/ethertap.cc	/^class TapEvent : public PollEvent$/;"	c	file:
TapListener	src/dev/ethertap.cc	/^    TapListener(EtherTap *t, int p)$/;"	f	class:TapListener
TapListener	src/dev/ethertap.cc	/^class TapListener$/;"	c	file:
Target	src/mem/cache/mshr.hh	/^        Target(PacketPtr _pkt, Tick _readyTime, Counter _order,$/;"	f	class:MSHR::Target
Target	src/mem/cache/mshr.hh	/^    class Target {$/;"	c	class:MSHR
TargetList	src/mem/cache/mshr.cc	/^MSHR::TargetList::TargetList()$/;"	f	class:MSHR::TargetList
TargetList	src/mem/cache/mshr.hh	/^    class TargetList : public std::list<Target> {$/;"	c	class:MSHR
TaskId	src/mem/request.hh	/^    enum TaskId {$/;"	g	namespace:ContextSwitchTaskId
TcpHdr	src/base/inet.hh	/^struct TcpHdr : public tcp_hdr$/;"	s	namespace:Net
TcpOpt	src/base/inet.hh	/^struct TcpOpt : public tcp_opt$/;"	s	namespace:Net
TcpPort	src/python/m5/params.py	/^class TcpPort(CheckedInt):  cxx_type = 'uint16_t'; size = 16; unsigned = True$/;"	c
TcpPtr	src/base/inet.hh	/^    TcpPtr() : p(0), _off(0) {}$/;"	f	class:Net::TcpPtr
TcpPtr	src/base/inet.hh	/^    TcpPtr(const Ip6Ptr &ptr) : p(0), _off(0) { set(ptr); }$/;"	f	class:Net::TcpPtr
TcpPtr	src/base/inet.hh	/^    TcpPtr(const IpPtr &ptr) : p(0), _off(0) { set(ptr); }$/;"	f	class:Net::TcpPtr
TcpPtr	src/base/inet.hh	/^    TcpPtr(const TcpPtr &ptr) : p(ptr.p), _off(ptr._off) {}$/;"	f	class:Net::TcpPtr
TcpPtr	src/base/inet.hh	/^class TcpPtr$/;"	c	namespace:Net
TechParameter	src/mem/ruby/network/orion/TechParameter.cc	/^TechParameter::TechParameter($/;"	f	class:TechParameter
TechParameter	src/mem/ruby/network/orion/TechParameter.hh	/^class TechParameter$/;"	c
Temp	src/base/statistics.hh	/^    Temp(NodePtr n) : node(n) { }$/;"	f	class:Stats::Temp
Temp	src/base/statistics.hh	/^    Temp(const Average &s)$/;"	f	class:Stats::Temp
Temp	src/base/statistics.hh	/^    Temp(const AverageVector &s)$/;"	f	class:Stats::Temp
Temp	src/base/statistics.hh	/^    Temp(const Formula &f)$/;"	f	class:Stats::Temp
Temp	src/base/statistics.hh	/^    Temp(const Scalar &s)$/;"	f	class:Stats::Temp
Temp	src/base/statistics.hh	/^    Temp(const ScalarProxy<Stat> &p)$/;"	f	class:Stats::Temp
Temp	src/base/statistics.hh	/^    Temp(const Value &s)$/;"	f	class:Stats::Temp
Temp	src/base/statistics.hh	/^    Temp(const Vector &s)$/;"	f	class:Stats::Temp
Temp	src/base/statistics.hh	/^    Temp(double value)$/;"	f	class:Stats::Temp
Temp	src/base/statistics.hh	/^    Temp(float value)$/;"	f	class:Stats::Temp
Temp	src/base/statistics.hh	/^    Temp(signed char value)$/;"	f	class:Stats::Temp
Temp	src/base/statistics.hh	/^    Temp(signed int value)$/;"	f	class:Stats::Temp
Temp	src/base/statistics.hh	/^    Temp(signed long long value)$/;"	f	class:Stats::Temp
Temp	src/base/statistics.hh	/^    Temp(signed long value)$/;"	f	class:Stats::Temp
Temp	src/base/statistics.hh	/^    Temp(signed short value)$/;"	f	class:Stats::Temp
Temp	src/base/statistics.hh	/^    Temp(unsigned char value)$/;"	f	class:Stats::Temp
Temp	src/base/statistics.hh	/^    Temp(unsigned int value)$/;"	f	class:Stats::Temp
Temp	src/base/statistics.hh	/^    Temp(unsigned long long value)$/;"	f	class:Stats::Temp
Temp	src/base/statistics.hh	/^    Temp(unsigned long value)$/;"	f	class:Stats::Temp
Temp	src/base/statistics.hh	/^    Temp(unsigned short value)$/;"	f	class:Stats::Temp
Temp	src/base/statistics.hh	/^class Temp$/;"	c	namespace:Stats
Template	src/arch/isa_parser.py	/^class Template(object):$/;"	c
Terminal	src/dev/Terminal.py	/^class Terminal(SimObject):$/;"	c
Terminal	src/dev/arm/RealView.py	/^from Terminal import Terminal$/;"	i
Terminal	src/dev/sparc/T1000.py	/^from Terminal import Terminal$/;"	i
Terminal	src/dev/terminal.cc	/^Terminal::Terminal(const Params *p)$/;"	f	class:Terminal
Terminal	src/dev/terminal.hh	/^class Terminal : public SimObject$/;"	c
Terminal	src/dev/x86/Pc.py	/^from Terminal import Terminal$/;"	i
TestClass	src/unittest/stattest.cc	/^class TestClass {$/;"	c	file:
TestMacroop	src/arch/micro_asm_test.py	/^class TestMacroop(Combinational_Macroop):$/;"	c
TestMouse	src/dev/x86/i8042.hh	/^        TestMouse = 0xA9,$/;"	e	enum:X86ISA::I8042::Command
TestOsc0	src/dev/arm/rv_ctrl.hh	/^        TestOsc0   = 0xC0,$/;"	e	enum:RealViewCtrl::__anon67
TestOsc1	src/dev/arm/rv_ctrl.hh	/^        TestOsc1   = 0xC4,$/;"	e	enum:RealViewCtrl::__anon67
TestOsc2	src/dev/arm/rv_ctrl.hh	/^        TestOsc2   = 0xC8,$/;"	e	enum:RealViewCtrl::__anon67
TestOsc3	src/dev/arm/rv_ctrl.hh	/^        TestOsc3   = 0xCC,$/;"	e	enum:RealViewCtrl::__anon67
TestOsc4	src/dev/arm/rv_ctrl.hh	/^        TestOsc4   = 0xD0$/;"	e	enum:RealViewCtrl::__anon67
TestRC	src/unittest/refcnttest.cc	/^    TestRC(const char *newTag) : _tag(newTag)$/;"	f	class:__anon106::TestRC
TestRC	src/unittest/refcnttest.cc	/^class TestRC : public RefCounted$/;"	c	namespace:__anon106	file:
TestTrie	src/unittest/trietest.cc	/^typedef Trie<Addr, uint32_t> TestTrie;$/;"	t	file:
Text	src/base/stats/text.cc	/^Text::Text()$/;"	f	class:Stats::Text
Text	src/base/stats/text.cc	/^Text::Text(const std::string &file)$/;"	f	class:Stats::Text
Text	src/base/stats/text.cc	/^Text::Text(std::ostream &stream)$/;"	f	class:Stats::Text
Text	src/base/stats/text.hh	/^class Text : public Output$/;"	c	namespace:Stats
TheISA	src/arch/generic/decode_cache.hh	/^namespace TheISA$/;"	n
TheISA	src/cpu/checker/cpu.hh	/^namespace TheISA$/;"	n
TheISA	src/cpu/checker/thread_context.hh	/^namespace TheISA {$/;"	n
TheISA	src/cpu/decode_cache.hh	/^namespace TheISA$/;"	n
TheISA	src/cpu/ozone/cpu.hh	/^namespace TheISA {$/;"	n
TheISA	src/cpu/ozone/simple_params.hh	/^namespace TheISA$/;"	n
TheISA	src/cpu/simple/base.hh	/^namespace TheISA$/;"	n
TheISA	src/cpu/simple_thread.hh	/^namespace TheISA {$/;"	n
TheISA	src/cpu/thread_context.hh	/^namespace TheISA {$/;"	n
TheISA	src/cpu/thread_context.hh	/^namespace TheISA$/;"	n
TheISA	src/cpu/thread_state.hh	/^namespace TheISA {$/;"	n
ThePipeline	src/cpu/inorder/pipeline_traits.5stage.cc	/^namespace ThePipeline {$/;"	n	file:
ThePipeline	src/cpu/inorder/pipeline_traits.5stage.hh	/^namespace ThePipeline {$/;"	n
ThePipeline	src/cpu/inorder/pipeline_traits.9stage.cc	/^namespace ThePipeline {$/;"	n	file:
ThePipeline	src/cpu/inorder/pipeline_traits.9stage.hh	/^namespace ThePipeline {$/;"	n
ThePipeline	src/cpu/inorder/pipeline_traits.9stage.smt2.cc	/^namespace ThePipeline {$/;"	n	file:
ThePipeline	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^namespace ThePipeline {$/;"	n
ThePipeline	src/cpu/inorder/pipeline_traits.hh	/^namespace ThePipeline {$/;"	n
Thread	src/cpu/inorder/cpu.hh	/^    typedef InOrderThreadState Thread;$/;"	t	class:InOrderCPU
Thread	src/cpu/o3/commit.hh	/^    typedef O3ThreadState<Impl> Thread;$/;"	t	class:DefaultCommit
Thread	src/cpu/o3/cpu.hh	/^    typedef O3ThreadState<Impl> Thread;$/;"	t	class:FullO3CPU
Thread	src/cpu/ozone/back_end.hh	/^    typedef OzoneThreadState<Impl> Thread;$/;"	t	class:BackEnd
Thread	src/cpu/ozone/lw_back_end.hh	/^    typedef OzoneThreadState<Impl> Thread;$/;"	t	class:LWBackEnd
ThreadContext	src/cpu/thread_context.hh	/^class ThreadContext$/;"	c
ThreadFault	src/arch/mips/faults.hh	/^class ThreadFault : public MipsFault<ThreadFault> {};$/;"	c	namespace:MipsISA
ThreadID	src/base/types.hh	/^typedef int16_t ThreadID;$/;"	t
ThreadInfo	src/arch/generic/linux/threadinfo.hh	/^    ThreadInfo(ThreadContext *_tc, Addr _pcbb = 0)$/;"	f	class:Linux::ThreadInfo
ThreadInfo	src/arch/generic/linux/threadinfo.hh	/^class ThreadInfo$/;"	c	namespace:Linux
ThreadModel	src/cpu/inorder/InOrderCPU.py	/^class ThreadModel(Enum):$/;"	c
ThreadModel	src/cpu/inorder/cpu.hh	/^    enum ThreadModel {$/;"	g	class:InOrderCPU
ThreadState	src/arch/arm/nativetrace.hh	/^        ThreadState()$/;"	f	struct:Trace::ArmNativeTrace::ThreadState
ThreadState	src/arch/arm/nativetrace.hh	/^    struct ThreadState {$/;"	s	class:Trace::ArmNativeTrace
ThreadState	src/arch/x86/nativetrace.hh	/^    struct ThreadState {$/;"	s	class:Trace::X86NativeTrace
ThreadState	src/cpu/thread_state.cc	/^ThreadState::ThreadState(BaseCPU *cpu, ThreadID _tid, Process *_process)$/;"	f	class:ThreadState
ThreadState	src/cpu/thread_state.hh	/^struct ThreadState {$/;"	s
ThreadStatus	src/cpu/inorder/pipeline_stage.hh	/^    enum ThreadStatus {$/;"	g	class:PipelineStage
ThreadStatus	src/cpu/o3/commit.hh	/^    enum ThreadStatus {$/;"	g	class:DefaultCommit
ThreadStatus	src/cpu/o3/decode.hh	/^    enum ThreadStatus {$/;"	g	class:DefaultDecode
ThreadStatus	src/cpu/o3/fetch.hh	/^    enum ThreadStatus {$/;"	g	class:DefaultFetch
ThreadStatus	src/cpu/o3/rename.hh	/^    enum ThreadStatus {$/;"	g	class:DefaultRename
ThreadsyncWait	src/cpu/base_dyn_inst.hh	/^        ThreadsyncWait,          \/\/\/ Is a thread synchronization instruction$/;"	e	enum:BaseDynInst::Status
ThreadsyncWait	src/cpu/inorder/inorder_dyn_inst.hh	/^        ThreadsyncWait,          \/\/\/ Is a thread synchronization instruction$/;"	e	enum:InOrderDynInst::Status
Threshold	src/cpu/o3/inst_queue.hh	/^        Threshold$/;"	e	enum:InstructionQueue::IQPolicy
Threshold	src/cpu/o3/lsq.hh	/^        Threshold$/;"	e	enum:LSQ::LSQPolicy
Threshold	src/cpu/o3/rob.hh	/^        Threshold$/;"	e	enum:ROB::ROBPolicy
Throttle	src/mem/ruby/network/simple/Throttle.cc	/^Throttle::Throttle(NodeID node, Cycles link_latency,$/;"	f	class:Throttle
Throttle	src/mem/ruby/network/simple/Throttle.cc	/^Throttle::Throttle(int sID, NodeID node, Cycles link_latency,$/;"	f	class:Throttle
Throttle	src/mem/ruby/network/simple/Throttle.hh	/^class Throttle : public Consumer$/;"	c
Thumb	src/base/loader/object_file.hh	/^        Thumb,$/;"	e	enum:ObjectFile::Arch
ThumbBit	src/arch/arm/types.hh	/^            ThumbBit = (1 << 0),$/;"	e	enum:ArmISA::PCState::FlagBits
Tick	src/base/types.hh	/^typedef uint64_t Tick;$/;"	t
Tick	src/python/m5/params.py	/^class Tick(CheckedInt):     cxx_type = 'Tick';     size = 64; unsigned = True$/;"	c
TickCompareEvent	src/arch/sparc/isa.hh	/^            &ISA::processTickCompare> TickCompareEvent;$/;"	t	class:SparcISA::ISA
TickEvent	src/cpu/inorder/cpu.cc	/^InOrderCPU::TickEvent::TickEvent(InOrderCPU *c)$/;"	f	class:InOrderCPU::TickEvent
TickEvent	src/cpu/inorder/cpu.hh	/^    class TickEvent : public Event$/;"	c	class:InOrderCPU
TickEvent	src/cpu/kvm/base.hh	/^        TickEvent(BaseKvmCPU &c)$/;"	f	struct:BaseKvmCPU::TickEvent
TickEvent	src/cpu/kvm/base.hh	/^    struct TickEvent : public Event$/;"	s	class:BaseKvmCPU
TickEvent	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::TickEvent::TickEvent(FullO3CPU<Impl> *c)$/;"	f	class:FullO3CPU::TickEvent
TickEvent	src/cpu/o3/cpu.hh	/^    class TickEvent : public Event$/;"	c	class:FullO3CPU
TickEvent	src/cpu/ozone/cpu.hh	/^    struct TickEvent : public Event$/;"	s	class:OzoneCPU
TickEvent	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::TickEvent::TickEvent(OzoneCPU *c, int w)$/;"	f	class:OzoneCPU::TickEvent
TickEvent	src/cpu/simple/atomic.cc	/^AtomicSimpleCPU::TickEvent::TickEvent(AtomicSimpleCPU *c)$/;"	f	class:AtomicSimpleCPU::TickEvent
TickEvent	src/cpu/simple/atomic.hh	/^    struct TickEvent : public Event$/;"	s	class:AtomicSimpleCPU
TickEvent	src/cpu/simple/timing.hh	/^            TickEvent(TimingSimpleCPU *_cpu) : pkt(NULL), cpu(_cpu) {}$/;"	f	struct:TimingSimpleCPU::TimingCPUPort::TickEvent
TickEvent	src/cpu/simple/timing.hh	/^        struct TickEvent : public Event$/;"	s	class:TimingSimpleCPU::TimingCPUPort
TickEvent	src/cpu/testers/memtest/memtest.hh	/^        TickEvent(MemTest *c) : Event(CPU_Tick_Pri), cpu(c) {}$/;"	f	class:MemTest::TickEvent
TickEvent	src/cpu/testers/memtest/memtest.hh	/^    class TickEvent : public Event$/;"	c	class:MemTest
TickEvent	src/cpu/testers/networktest/networktest.hh	/^        TickEvent(NetworkTest *c) : Event(CPU_Tick_Pri), cpu(c) {}$/;"	f	class:NetworkTest::TickEvent
TickEvent	src/cpu/testers/networktest/networktest.hh	/^    class TickEvent : public Event$/;"	c	class:NetworkTest
TickParamValue	src/python/m5/params.py	/^class TickParamValue(NumericParamValue):$/;"	c
Time	src/base/time.hh	/^    Time(const Time &val) : _time(val._time) { }$/;"	f	class:Time
Time	src/base/time.hh	/^    Time(const timespec &ts) { operator=(ts); }$/;"	f	class:Time
Time	src/base/time.hh	/^    Time(const timeval &tv) { operator=(tv); }$/;"	f	class:Time
Time	src/base/time.hh	/^    Time(uint64_t sec, uint64_t nsec) { set(sec, nsec); }$/;"	f	class:Time
Time	src/base/time.hh	/^    explicit Time() { clear(); }$/;"	f	class:Time
Time	src/base/time.hh	/^    explicit Time(double sec) { operator=(sec); }$/;"	f	class:Time
Time	src/base/time.hh	/^class Time$/;"	c
Time	src/mem/ruby/common/TypeDefines.hh	/^typedef int64 Time;$/;"	t
Time	src/python/m5/params.py	/^class Time(ParamValue):$/;"	c
TimeBufStruct	src/cpu/o3/comm.hh	/^struct TimeBufStruct {$/;"	s
TimeBuffer	src/cpu/timebuf.hh	/^    TimeBuffer()$/;"	f	class:TimeBuffer
TimeBuffer	src/cpu/timebuf.hh	/^    TimeBuffer(int p, int f)$/;"	f	class:TimeBuffer
TimeBuffer	src/cpu/timebuf.hh	/^class TimeBuffer$/;"	c
TimeStruct	src/cpu/inorder/comm.hh	/^    TimeStruct()$/;"	f	struct:TimeStruct
TimeStruct	src/cpu/inorder/comm.hh	/^struct TimeStruct {$/;"	s
TimeStruct	src/cpu/o3/commit.hh	/^    typedef typename CPUPol::TimeStruct TimeStruct;$/;"	t	class:DefaultCommit
TimeStruct	src/cpu/o3/cpu.hh	/^    typedef typename CPUPolicy::TimeStruct TimeStruct;$/;"	t	class:FullO3CPU
TimeStruct	src/cpu/o3/cpu_policy.hh	/^    typedef TimeBufStruct<Impl> TimeStruct;$/;"	t	struct:SimpleCPUPolicy
TimeStruct	src/cpu/o3/decode.hh	/^    typedef typename CPUPol::TimeStruct TimeStruct;$/;"	t	class:DefaultDecode
TimeStruct	src/cpu/o3/fetch.hh	/^    typedef typename CPUPol::TimeStruct TimeStruct;$/;"	t	class:DefaultFetch
TimeStruct	src/cpu/o3/iew.hh	/^    typedef typename CPUPol::TimeStruct TimeStruct;$/;"	t	class:DefaultIEW
TimeStruct	src/cpu/o3/inst_queue.hh	/^    typedef typename Impl::CPUPol::TimeStruct TimeStruct;$/;"	t	class:InstructionQueue
TimeStruct	src/cpu/o3/rename.hh	/^    typedef typename CPUPol::TimeStruct TimeStruct;$/;"	t	class:DefaultRename
TimeToCycles	src/mem/ruby/slicc_interface/RubySlicc_Util.hh	/^inline Cycles TimeToCycles(Time t) { return Cycles(t); }$/;"	f
Timer	src/dev/arm/timer_cpulocal.cc	/^CpuLocalTimer::Timer::Timer()$/;"	f	class:CpuLocalTimer::Timer
Timer	src/dev/arm/timer_cpulocal.hh	/^    class Timer$/;"	c	class:CpuLocalTimer
Timer	src/dev/arm/timer_sp804.cc	/^Sp804::Timer::Timer(std::string __name, Sp804 *_parent, int int_num, Tick _clock)$/;"	f	class:Sp804::Timer
Timer	src/dev/arm/timer_sp804.hh	/^    class Timer$/;"	c	class:Sp804
TimerControlReg	src/dev/arm/timer_cpulocal.hh	/^            TimerControlReg 	   = 0x08,$/;"	e	enum:CpuLocalTimer::Timer::__anon68
TimerCounterReg	src/dev/arm/timer_cpulocal.hh	/^            TimerCounterReg 	   = 0x04,$/;"	e	enum:CpuLocalTimer::Timer::__anon68
TimerIntStatusReg	src/dev/arm/timer_cpulocal.hh	/^            TimerIntStatusReg      = 0x0C,$/;"	e	enum:CpuLocalTimer::Timer::__anon68
TimerLoadReg	src/dev/arm/timer_cpulocal.hh	/^            TimerLoadReg    	   = 0x00,$/;"	e	enum:CpuLocalTimer::Timer::__anon68
TimerTable	src/mem/ruby/system/TimerTable.cc	/^TimerTable::TimerTable()$/;"	f	class:TimerTable
TimerTable	src/mem/ruby/system/TimerTable.hh	/^class TimerTable$/;"	c
TimingCPUPort	src/cpu/simple/timing.hh	/^        TimingCPUPort(const std::string& _name, TimingSimpleCPU* _cpu)$/;"	f	class:TimingSimpleCPU::TimingCPUPort
TimingCPUPort	src/cpu/simple/timing.hh	/^    class TimingCPUPort : public MasterPort$/;"	c	class:TimingSimpleCPU
TimingSimpleCPU	src/cpu/simple/TimingSimpleCPU.py	/^class TimingSimpleCPU(BaseSimpleCPU):$/;"	c
TimingSimpleCPU	src/cpu/simple/timing.cc	/^TimingSimpleCPU::TimingSimpleCPU(TimingSimpleCPUParams *p)$/;"	f	class:TimingSimpleCPU
TimingSimpleCPU	src/cpu/simple/timing.hh	/^class TimingSimpleCPU : public BaseSimpleCPU$/;"	c
TlbEntry	src/arch/alpha/pagetable.hh	/^    TlbEntry()$/;"	f	struct:AlphaISA::TlbEntry
TlbEntry	src/arch/alpha/pagetable.hh	/^    TlbEntry(Addr _asn, Addr _vaddr, Addr _paddr)$/;"	f	struct:AlphaISA::TlbEntry
TlbEntry	src/arch/alpha/pagetable.hh	/^struct TlbEntry$/;"	s	namespace:AlphaISA
TlbEntry	src/arch/arm/pagetable.hh	/^    TlbEntry() :$/;"	f	struct:ArmISA::TlbEntry
TlbEntry	src/arch/arm/pagetable.hh	/^    TlbEntry(Addr _asn, Addr _vaddr, Addr _paddr) :$/;"	f	struct:ArmISA::TlbEntry
TlbEntry	src/arch/arm/pagetable.hh	/^struct TlbEntry$/;"	s	namespace:ArmISA
TlbEntry	src/arch/mips/pagetable.hh	/^    TlbEntry() {}$/;"	f	struct:MipsISA::TlbEntry
TlbEntry	src/arch/mips/pagetable.hh	/^    TlbEntry(Addr asn, Addr vaddr, Addr paddr) : _pageStart(paddr) {}$/;"	f	struct:MipsISA::TlbEntry
TlbEntry	src/arch/mips/pagetable.hh	/^struct TlbEntry$/;"	s	namespace:MipsISA
TlbEntry	src/arch/power/tlb.hh	/^    TlbEntry()$/;"	f	struct:PowerISA::TlbEntry
TlbEntry	src/arch/power/tlb.hh	/^    TlbEntry(Addr asn, Addr vaddr, Addr paddr)$/;"	f	struct:PowerISA::TlbEntry
TlbEntry	src/arch/power/tlb.hh	/^struct TlbEntry$/;"	s	namespace:PowerISA
TlbEntry	src/arch/sparc/pagetable.hh	/^    TlbEntry()$/;"	f	struct:SparcISA::TlbEntry
TlbEntry	src/arch/sparc/pagetable.hh	/^    TlbEntry(Addr asn, Addr vaddr, Addr paddr)$/;"	f	struct:SparcISA::TlbEntry
TlbEntry	src/arch/sparc/pagetable.hh	/^struct TlbEntry$/;"	s	namespace:SparcISA
TlbEntry	src/arch/x86/pagetable.cc	/^TlbEntry::TlbEntry(Addr asn, Addr _vaddr, Addr _paddr) :$/;"	f	class:X86ISA::TlbEntry
TlbEntry	src/arch/x86/pagetable.hh	/^        TlbEntry() {}$/;"	f	struct:X86ISA::TlbEntry
TlbEntry	src/arch/x86/pagetable.hh	/^    struct TlbEntry$/;"	s	namespace:X86ISA
TlbEntryTrie	src/arch/x86/pagetable.hh	/^typedef Trie<Addr, X86ISA::TlbEntry> TlbEntryTrie;$/;"	t
TlbFault	src/arch/mips/faults.hh	/^    TlbFault(Addr _asid, Addr _vaddr, Addr _vpn, bool _store) :$/;"	f	class:MipsISA::TlbFault
TlbFault	src/arch/mips/faults.hh	/^class TlbFault : public AddressFault<T>$/;"	c	namespace:MipsISA
TlbInvalidFault	src/arch/mips/faults.hh	/^    TlbInvalidFault(Addr asid, Addr vaddr, Addr vpn, bool store) :$/;"	f	class:MipsISA::TlbInvalidFault
TlbInvalidFault	src/arch/mips/faults.hh	/^class TlbInvalidFault : public TlbFault<TlbInvalidFault>$/;"	c	namespace:MipsISA
TlbMap	src/arch/sparc/tlb_map.hh	/^class TlbMap$/;"	c	namespace:SparcISA
TlbModifiedFault	src/arch/mips/faults.hh	/^    TlbModifiedFault(Addr asid, Addr vaddr, Addr vpn) :$/;"	f	class:MipsISA::TlbModifiedFault
TlbModifiedFault	src/arch/mips/faults.hh	/^class TlbModifiedFault : public TlbFault<TlbModifiedFault>$/;"	c	namespace:MipsISA
TlbRange	src/arch/sparc/pagetable.hh	/^struct TlbRange$/;"	s	namespace:SparcISA
TlbRefillFault	src/arch/mips/faults.hh	/^    TlbRefillFault(Addr asid, Addr vaddr, Addr vpn, bool store) :$/;"	f	class:MipsISA::TlbRefillFault
TlbRefillFault	src/arch/mips/faults.hh	/^class TlbRefillFault : public TlbFault<TlbRefillFault>$/;"	c	namespace:MipsISA
ToBeScheduled	src/cpu/ozone/back_end.hh	/^            ToBeScheduled,$/;"	e	enum:BackEnd::InstQueue::queue
Topology	src/mem/ruby/network/Topology.cc	/^Topology::Topology(uint32_t num_routers, vector<BasicExtLink *> ext_links,$/;"	f	class:Topology
Topology	src/mem/ruby/network/Topology.hh	/^class Topology$/;"	c
TotalGlobals	src/arch/sparc/isa.hh	/^    static const int TotalGlobals = (MaxGL + 1) * NumGlobalRegs;$/;"	m	class:SparcISA::ISA
TotalInstIntRegs	src/arch/sparc/isa.hh	/^        TotalInstIntRegs = PreviousWindowOffset + NumWindowedRegs$/;"	e	enum:SparcISA::ISA::InstIntRegOffsets
TotalNumRegs	src/arch/alpha/registers.hh	/^const int TotalNumRegs =$/;"	m	namespace:AlphaISA
TotalNumRegs	src/arch/arm/registers.hh	/^const int TotalNumRegs = NumIntRegs + NumFloatRegs + NumMiscRegs;$/;"	m	namespace:ArmISA
TotalNumRegs	src/arch/mips/registers.hh	/^const int TotalNumRegs = NumIntRegs + NumFloatRegs + NumMiscRegs;$/;"	m	namespace:MipsISA
TotalNumRegs	src/arch/sparc/registers.hh	/^const int TotalNumRegs = NumIntRegs + NumFloatRegs + NumMiscRegs;$/;"	m	namespace:SparcISA
TotalWindowed	src/arch/sparc/isa.hh	/^    static const int TotalWindowed = NWindows * RegsPerWindow;$/;"	m	class:SparcISA::ISA
TouchKitId	src/dev/ps2.hh	/^    TouchKitId      = 0x0a,$/;"	e	enum:Ps2::__anon82
TournamentBP	src/cpu/pred/tournament.cc	/^TournamentBP::TournamentBP(const Params *params)$/;"	f	class:TournamentBP
TournamentBP	src/cpu/pred/tournament.hh	/^class TournamentBP : public BPredUnit$/;"	c
TpReadId	src/dev/ps2.hh	/^    TpReadId        = 0xe1,$/;"	e	enum:Ps2::__anon82
Trace	src/arch/arm/nativetrace.cc	/^namespace Trace {$/;"	n	file:
Trace	src/arch/arm/nativetrace.hh	/^namespace Trace {$/;"	n
Trace	src/arch/sparc/nativetrace.cc	/^namespace Trace {$/;"	n	file:
Trace	src/arch/sparc/nativetrace.hh	/^namespace Trace {$/;"	n
Trace	src/arch/x86/nativetrace.cc	/^namespace Trace {$/;"	n	file:
Trace	src/arch/x86/nativetrace.hh	/^namespace Trace {$/;"	n
Trace	src/base/trace.cc	/^namespace Trace {$/;"	n	file:
Trace	src/base/trace.hh	/^namespace Trace {$/;"	n
Trace	src/cpu/exetrace.cc	/^namespace Trace {$/;"	n	file:
Trace	src/cpu/exetrace.hh	/^namespace Trace {$/;"	n
Trace	src/cpu/inorder/inorder_trace.cc	/^namespace Trace {$/;"	n	file:
Trace	src/cpu/inorder/inorder_trace.hh	/^namespace Trace {$/;"	n
Trace	src/cpu/inteltrace.cc	/^namespace Trace {$/;"	n	file:
Trace	src/cpu/inteltrace.hh	/^namespace Trace {$/;"	n
Trace	src/cpu/legiontrace.cc	/^namespace Trace {$/;"	n	file:
Trace	src/cpu/legiontrace.hh	/^namespace Trace {$/;"	n
Trace	src/cpu/nativetrace.cc	/^namespace Trace {$/;"	n	file:
Trace	src/cpu/nativetrace.hh	/^namespace Trace {$/;"	n
Trace	src/cpu/ozone/cpu.hh	/^namespace Trace {$/;"	n
Trace	src/cpu/simple/base.hh	/^namespace Trace {$/;"	n
Trace	src/cpu/static_inst.hh	/^namespace Trace {$/;"	n
Trace	src/sim/insttracer.hh	/^namespace Trace {$/;"	n
TraceElement	src/cpu/testers/traffic_gen/generators.hh	/^    struct TraceElement {$/;"	s	class:TraceGen
TraceGen	src/cpu/testers/traffic_gen/generators.hh	/^    TraceGen(const std::string& _name, MasterID master_id, Tick _duration,$/;"	f	class:TraceGen
TraceGen	src/cpu/testers/traffic_gen/generators.hh	/^class TraceGen : public BaseGen$/;"	c
TraceRecord	src/mem/ruby/recorder/CacheRecorder.hh	/^class TraceRecord {$/;"	c
TrafficGen	src/cpu/testers/traffic_gen/TrafficGen.py	/^class TrafficGen(MemObject):$/;"	c
TrafficGen	src/cpu/testers/traffic_gen/traffic_gen.cc	/^TrafficGen::TrafficGen(const TrafficGenParams* p)$/;"	f	class:TrafficGen
TrafficGen	src/cpu/testers/traffic_gen/traffic_gen.hh	/^class TrafficGen : public MemObject$/;"	c
TrafficGenPort	src/cpu/testers/traffic_gen/traffic_gen.hh	/^        TrafficGenPort(const std::string& name, TrafficGen& traffic_gen)$/;"	f	class:TrafficGen::TrafficGenPort
TrafficGenPort	src/cpu/testers/traffic_gen/traffic_gen.hh	/^    class TrafficGenPort : public MasterPort$/;"	c	class:TrafficGen
Traits	src/base/varargs.hh	/^struct Traits$/;"	s	namespace:VarArgs
Traits	src/base/varargs.hh	/^struct Traits<Null>$/;"	s	namespace:VarArgs
TranMethod	src/arch/arm/faults.hh	/^    enum TranMethod$/;"	g	class:ArmISA::ArmFault
TransType	src/mem/ruby/network/orion/Crossbar/Crossbar.hh	/^    enum TransType$/;"	g	class:Crossbar
Transfer	src/dev/ide_disk.hh	/^    Transfer,$/;"	e	enum:Events
Transfer_Data_Dma	src/dev/ide_disk.hh	/^    Transfer_Data_Dma,$/;"	e	enum:DevState
Transfer_Data_In	src/dev/ide_disk.hh	/^    Transfer_Data_In,$/;"	e	enum:DevState
Transfer_Data_Out	src/dev/ide_disk.hh	/^    Transfer_Data_Out,$/;"	e	enum:DevState
TransistorType	src/mem/ruby/network/orion/TechParameter.hh	/^    enum TransistorType$/;"	g	class:TechParameter
Transition	src/cpu/testers/traffic_gen/traffic_gen.hh	/^    struct Transition {$/;"	s	class:TrafficGen
Transition	src/mem/slicc/ast/TransitionDeclAST.py	/^from slicc.symbols import Transition$/;"	i
Transition	src/mem/slicc/symbols/Transition.py	/^class Transition(Symbol):$/;"	c
Transition	src/mem/slicc/symbols/__init__.py	/^from slicc.symbols.Transition import Transition$/;"	i
TransitionDeclAST	src/mem/slicc/ast/TransitionDeclAST.py	/^class TransitionDeclAST(DeclAST):$/;"	c
Translation	src/sim/tlb.hh	/^    class Translation$/;"	c	class:BaseTLB
TranslationCompleted	src/cpu/base_dyn_inst.hh	/^        TranslationCompleted,$/;"	e	enum:BaseDynInst::Flags
TranslationLL	src/arch/arm/faults.hh	/^        TranslationLL = SynchPtyErrOnTranslTableWalkLL + 4,$/;"	e	enum:ArmISA::ArmFault::FaultSource
TranslationStarted	src/cpu/base_dyn_inst.hh	/^        TranslationStarted,$/;"	e	enum:BaseDynInst::Flags
TransmitConfigurationRegister	src/dev/ns_gige_reg.h	/^enum TransmitConfigurationRegister {$/;"	g
Trap	src/cpu/inorder/cpu.hh	/^        Trap,$/;"	e	enum:InOrderCPU::CPUEventType
TrapEvent	src/cpu/o3/commit.hh	/^    class TrapEvent : public Event {$/;"	c	class:DefaultCommit
TrapEvent	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::TrapEvent::TrapEvent(DefaultCommit<Impl> *_commit,$/;"	f	class:DefaultCommit::TrapEvent
TrapEvent	src/cpu/ozone/lw_back_end.hh	/^    class TrapEvent : public Event {$/;"	c	class:LWBackEnd
TrapEvent	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::TrapEvent::TrapEvent(LWBackEnd<Impl> *_be)$/;"	f	class:LWBackEnd::TrapEvent
TrapFault	src/arch/mips/faults.hh	/^class TrapFault : public MipsFault<TrapFault> {};$/;"	c	namespace:MipsISA
TrapInstruction	src/arch/sparc/faults.hh	/^    TrapInstruction(uint32_t n) : EnumeratedFault<TrapInstruction>(n)$/;"	f	class:SparcISA::TrapInstruction
TrapInstruction	src/arch/sparc/faults.hh	/^class TrapInstruction : public EnumeratedFault<TrapInstruction>$/;"	c	namespace:SparcISA
TrapLevelZero	src/arch/sparc/faults.hh	/^class TrapLevelZero : public SparcFault<TrapLevelZero> {};$/;"	c	namespace:SparcISA
TrapPending	src/cpu/o3/commit.hh	/^        TrapPending,$/;"	e	enum:DefaultCommit::ThreadStatus
TrapPending	src/cpu/o3/fetch.hh	/^        TrapPending,$/;"	e	enum:DefaultFetch::ThreadStatus
TrapPending	src/cpu/ozone/front_end.hh	/^        TrapPending,$/;"	e	enum:FrontEnd::Status
TrapPending	src/cpu/ozone/lw_back_end.hh	/^        TrapPending$/;"	e	enum:LWBackEnd::Status
TrapType	src/arch/sparc/faults.hh	/^typedef uint32_t TrapType;$/;"	t	namespace:SparcISA
Trie	src/base/trie.hh	/^    Trie() : head(0, 0, NULL)$/;"	f	class:Trie
Trie	src/base/trie.hh	/^class Trie$/;"	c
TriggerIntOffset	src/arch/x86/intmessage.hh	/^    static const Addr TriggerIntOffset = 0;$/;"	m	namespace:X86ISA
Tru64	src/base/loader/object_file.hh	/^        Tru64,$/;"	e	enum:ObjectFile::OpSys
Tru64	src/kern/tru64/tru64.hh	/^class Tru64 : public OperatingSystem$/;"	c
Tru64AlphaSystem	src/arch/alpha/AlphaSystem.py	/^class Tru64AlphaSystem(AlphaSystem):$/;"	c
Tru64AlphaSystem	src/arch/alpha/tru64/system.cc	/^Tru64AlphaSystem::Tru64AlphaSystem(Tru64AlphaSystem::Params *p)$/;"	f	class:Tru64AlphaSystem
Tru64AlphaSystem	src/arch/alpha/tru64/system.hh	/^class Tru64AlphaSystem : public AlphaSystem$/;"	c
Tru64_F64	src/kern/tru64/tru64.hh	/^class Tru64_F64 : public Tru64$/;"	c
Tru64_PreF64	src/kern/tru64/tru64.hh	/^class Tru64_PreF64 : public Tru64$/;"	c
True	src/arch/x86/insts/microop.hh	/^            True,$/;"	e	enum:X86ISA::ConditionTests::CondTest
TruncPage	src/arch/alpha/utility.hh	/^TruncPage(Addr addr)$/;"	f	namespace:AlphaISA
TruncPage	src/arch/mips/utility.hh	/^TruncPage(Addr addr)$/;"	f	namespace:MipsISA
TsbPageSize	src/arch/sparc/tlb.hh	/^    enum TsbPageSize {$/;"	g	class:SparcISA::TLB
Tsunami	src/dev/alpha/Tsunami.py	/^class Tsunami(Platform):$/;"	c
Tsunami	src/dev/alpha/tsunami.cc	/^Tsunami::Tsunami(const Params *p)$/;"	f	class:Tsunami
Tsunami	src/dev/alpha/tsunami.hh	/^class Tsunami : public Platform$/;"	c
TsunamiCChip	src/dev/alpha/Tsunami.py	/^class TsunamiCChip(BasicPioDevice):$/;"	c
TsunamiCChip	src/dev/alpha/tsunami_cchip.cc	/^TsunamiCChip::TsunamiCChip(const Params *p)$/;"	f	class:TsunamiCChip
TsunamiCChip	src/dev/alpha/tsunami_cchip.hh	/^class TsunamiCChip : public BasicPioDevice$/;"	c
TsunamiIO	src/dev/alpha/Tsunami.py	/^class TsunamiIO(BasicPioDevice):$/;"	c
TsunamiIO	src/dev/alpha/tsunami_io.cc	/^TsunamiIO::TsunamiIO(const Params *p)$/;"	f	class:TsunamiIO
TsunamiIO	src/dev/alpha/tsunami_io.hh	/^class TsunamiIO : public BasicPioDevice$/;"	c
TsunamiPChip	src/dev/alpha/Tsunami.py	/^class TsunamiPChip(BasicPioDevice):$/;"	c
TsunamiPChip	src/dev/alpha/tsunami_pchip.cc	/^TsunamiPChip::TsunamiPChip(const Params *p)$/;"	f	class:TsunamiPChip
TsunamiPChip	src/dev/alpha/tsunami_pchip.hh	/^class TsunamiPChip : public BasicPioDevice$/;"	c
TsunamiPciBus0Config	src/dev/alpha/tsunami_pchip.hh	/^    static const Addr TsunamiPciBus0Config = ULL(0x801fe000000);$/;"	m	class:TsunamiPChip
TteRead	src/arch/sparc/tlb.cc	/^TLB::TteRead(int entry)$/;"	f	class:SparcISA::TLB
TteTag	src/arch/sparc/pagetable.hh	/^    TteTag() : entry(0), populated(false) {}$/;"	f	class:SparcISA::TteTag
TteTag	src/arch/sparc/pagetable.hh	/^    TteTag(uint64_t e) : entry(e), populated(true) {}$/;"	f	class:SparcISA::TteTag
TteTag	src/arch/sparc/pagetable.hh	/^class TteTag$/;"	c	namespace:SparcISA
Twin32_t	src/base/bigint.hh	/^typedef m5_twin32_t Twin32_t;$/;"	t
Twin64_t	src/base/bigint.hh	/^typedef m5_twin64_t Twin64_t;$/;"	t
TwoPhase	src/dev/intel_8254_timer.hh	/^        TwoPhase$/;"	e	enum:Intel8254Timer::ReadWriteVal
TxData	src/dev/sinic.hh	/^        uint64_t TxData;       \/\/ 0x58$/;"	m	struct:Sinic::Device::__anon83
TxData	src/dev/sinic.hh	/^        uint64_t TxData;$/;"	m	struct:Sinic::Device::VirtualReg
TxDesc	src/dev/i8254xGBe_defs.hh	/^struct TxDesc {$/;"	s	namespace:iGbReg
TxDescCache	src/dev/i8254xGBe.cc	/^IGbE::TxDescCache::TxDescCache(IGbE *i, const std::string n, int s)$/;"	f	class:IGbE::TxDescCache
TxDescCache	src/dev/i8254xGBe.hh	/^    class TxDescCache  : public DescCache<iGbReg::TxDesc>$/;"	c	class:IGbE
TxDone	src/dev/sinic.hh	/^        uint64_t TxDone;       \/\/ 0x60$/;"	m	struct:Sinic::Device::__anon83
TxDone	src/dev/sinic.hh	/^        uint64_t TxDone;$/;"	m	struct:Sinic::Device::VirtualReg
TxEvent	src/dev/ethertap.hh	/^        TxEvent(EtherTap *_tap) : tap(_tap) {}$/;"	f	class:EtherTap::TxEvent
TxEvent	src/dev/ethertap.hh	/^    class TxEvent : public Event$/;"	c	class:EtherTap
TxEvent	src/dev/ns_gige.hh	/^    typedef EventWrapper<NSGigE, &NSGigE::txEventTransmit> TxEvent;$/;"	t	class:NSGigE
TxEvent	src/dev/sinic.hh	/^    typedef EventWrapper<Device, &Device::txEventTransmit> TxEvent;$/;"	t	class:Sinic::Device
TxFifoHigh	src/dev/sinic.hh	/^        uint32_t TxFifoHigh;   \/\/ 0x3c$/;"	m	struct:Sinic::Device::__anon83
TxFifoLow	src/dev/sinic.hh	/^        uint32_t TxFifoLow;    \/\/ 0x34$/;"	m	struct:Sinic::Device::__anon83
TxFifoSize	src/dev/sinic.hh	/^        uint32_t TxFifoSize;   \/\/ 0x2c$/;"	m	struct:Sinic::Device::__anon83
TxKickEvent	src/dev/ns_gige.hh	/^    typedef EventWrapper<NSGigE, &NSGigE::txKick> TxKickEvent;$/;"	t	class:NSGigE
TxKickEvent	src/dev/sinic.hh	/^    typedef EventWrapper<Device, &Device::txKick> TxKickEvent;$/;"	t	class:Sinic::Device
TxMaxCopy	src/dev/sinic.hh	/^        uint32_t TxMaxCopy;    \/\/ 0x14$/;"	m	struct:Sinic::Device::__anon83
TxState	src/dev/ns_gige.hh	/^    enum TxState$/;"	g	class:NSGigE
TxState	src/dev/sinic.hh	/^    enum TxState {$/;"	g	class:Sinic::Device
TxStateStrings	src/dev/sinic.cc	/^const char *TxStateStrings[] =$/;"	m	namespace:Sinic	file:
TxWait	src/dev/sinic.hh	/^        uint64_t TxWait;       \/\/ 0x68$/;"	m	struct:Sinic::Device::__anon83
TxdOp	src/dev/i8254xGBe_defs.hh	/^namespace TxdOp {$/;"	n	namespace:iGbReg
Type	src/arch/x86/bios/smbios.hh	/^    const static uint8_t Type = 0;$/;"	m	class:X86ISA::SMBios::BiosInformation
Type	src/base/flags.hh	/^    typedef T Type;$/;"	t	class:Flags
Type	src/dev/sparc/iob.hh	/^    enum Type {$/;"	g	class:Iob
Type	src/mem/slicc/ast/ActionDeclAST.py	/^from slicc.symbols import Action, Type, Var$/;"	i
Type	src/mem/slicc/ast/EnumDeclAST.py	/^from slicc.symbols import Func, Type$/;"	i
Type	src/mem/slicc/ast/ExprStatementAST.py	/^from slicc.symbols import Type$/;"	i
Type	src/mem/slicc/ast/FuncCallExprAST.py	/^from slicc.symbols import Func, Type$/;"	i
Type	src/mem/slicc/ast/FuncDeclAST.py	/^from slicc.symbols import Func, Type$/;"	i
Type	src/mem/slicc/ast/IfStatementAST.py	/^from slicc.symbols import Type$/;"	i
Type	src/mem/slicc/ast/InPortDeclAST.py	/^from slicc.symbols import Func, Type, Var$/;"	i
Type	src/mem/slicc/ast/IsValidPtrExprAST.py	/^from slicc.symbols import Type$/;"	i
Type	src/mem/slicc/ast/LiteralExprAST.py	/^from slicc.symbols import Type$/;"	i
Type	src/mem/slicc/ast/MachineAST.py	/^from slicc.symbols import StateMachine, Type$/;"	i
Type	src/mem/slicc/ast/OperatorExprAST.py	/^from slicc.symbols import Type$/;"	i
Type	src/mem/slicc/ast/OutPortDeclAST.py	/^from slicc.symbols import Type$/;"	i
Type	src/mem/slicc/ast/StateDeclAST.py	/^from slicc.symbols import Func, Type$/;"	i
Type	src/mem/slicc/ast/TypeAST.py	/^from slicc.symbols import Type$/;"	i
Type	src/mem/slicc/ast/TypeDeclAST.py	/^from slicc.symbols.Type import Type$/;"	i
Type	src/mem/slicc/ast/VarExprAST.py	/^from slicc.symbols import Type, Var$/;"	i
Type	src/mem/slicc/symbols/Func.py	/^from slicc.symbols.Type import Type$/;"	i
Type	src/mem/slicc/symbols/SymbolTable.py	/^from slicc.symbols.Type import Type$/;"	i
Type	src/mem/slicc/symbols/Type.py	/^class Type(Symbol):$/;"	c
Type	src/mem/slicc/symbols/__init__.py	/^from slicc.symbols.Type import Type$/;"	i
Type	src/sim/vptr.hh	/^    typedef T Type;$/;"	t	class:VPtr
TypeAST	src/mem/slicc/ast/InPortDeclAST.py	/^from slicc.ast.TypeAST import TypeAST$/;"	i
TypeAST	src/mem/slicc/ast/OutPortDeclAST.py	/^from slicc.ast.TypeAST import TypeAST$/;"	i
TypeAST	src/mem/slicc/ast/TypeAST.py	/^class TypeAST(AST):$/;"	c
TypeDeclAST	src/mem/slicc/ast/TypeDeclAST.py	/^class TypeDeclAST(DeclAST):$/;"	c
TypeFieldAST	src/mem/slicc/ast/TypeFieldAST.py	/^class TypeFieldAST(AST):$/;"	c
TypeFieldAST	src/mem/slicc/ast/TypeFieldEnumAST.py	/^from slicc.ast.TypeFieldAST import TypeFieldAST$/;"	i
TypeFieldAST	src/mem/slicc/ast/TypeFieldMemberAST.py	/^from slicc.ast.TypeFieldAST import TypeFieldAST$/;"	i
TypeFieldAST	src/mem/slicc/ast/TypeFieldMethodAST.py	/^from slicc.ast.TypeFieldAST import TypeFieldAST$/;"	i
TypeFieldAST	src/mem/slicc/ast/TypeFieldStateAST.py	/^from slicc.ast.TypeFieldAST import TypeFieldAST$/;"	i
TypeFieldEnumAST	src/mem/slicc/ast/TypeFieldEnumAST.py	/^class TypeFieldEnumAST(TypeFieldAST):$/;"	c
TypeFieldMemberAST	src/mem/slicc/ast/TypeFieldMemberAST.py	/^class TypeFieldMemberAST(TypeFieldAST):$/;"	c
TypeFieldMethodAST	src/mem/slicc/ast/TypeFieldMethodAST.py	/^class TypeFieldMethodAST(TypeFieldAST):$/;"	c
TypeFieldStateAST	src/mem/slicc/ast/TypeFieldStateAST.py	/^class TypeFieldStateAST(TypeFieldAST):$/;"	c
TypedBufferArg	src/sim/syscall_emul.hh	/^    TypedBufferArg(Addr _addr, int _size = sizeof(T))$/;"	f	class:TypedBufferArg
TypedBufferArg	src/sim/syscall_emul.hh	/^class TypedBufferArg : public BaseBufferArg$/;"	c
TypematicInfo	src/dev/x86/i8042.hh	/^        TypematicInfo = 0xF3,$/;"	e	enum:X86ISA::PS2Keyboard::Command
U	src/arch/sparc/faults.hh	/^        U, User = U,$/;"	e	enum:SparcISA::SparcFaultBase::PrivilegeLevel
UART8250_BASE	src/dev/mips/access.h	/^#define UART8250_BASE /;"	d
UART8250_END	src/dev/mips/access.h	/^#define UART8250_END /;"	d
UART_CR	src/dev/arm/pl011.hh	/^    static const int UART_CR   = 0x030;$/;"	m	class:Pl011
UART_DR	src/dev/arm/pl011.hh	/^    static const int UART_DR = 0x000;$/;"	m	class:Pl011
UART_FBRD	src/dev/arm/pl011.hh	/^    static const int UART_FBRD = 0x028;$/;"	m	class:Pl011
UART_FR	src/dev/arm/pl011.hh	/^    static const int UART_FR = 0x018;$/;"	m	class:Pl011
UART_FR_CTS	src/dev/arm/pl011.hh	/^    static const int UART_FR_CTS  = 0x001;$/;"	m	class:Pl011
UART_FR_RXFE	src/dev/arm/pl011.hh	/^    static const int UART_FR_RXFE = 0x010;$/;"	m	class:Pl011
UART_FR_TXFE	src/dev/arm/pl011.hh	/^    static const int UART_FR_TXFE = 0x080;$/;"	m	class:Pl011
UART_IBRD	src/dev/arm/pl011.hh	/^    static const int UART_IBRD = 0x024;$/;"	m	class:Pl011
UART_ICR	src/dev/arm/pl011.hh	/^    static const int UART_ICR  = 0x044;$/;"	m	class:Pl011
UART_IER_RDI	src/dev/mips/maltareg.h	/^#define UART_IER_RDI /;"	d
UART_IER_RDI	src/dev/uart8250.hh	/^const uint8_t UART_IER_RDI  = 0x01;$/;"	v
UART_IER_RLSI	src/dev/mips/maltareg.h	/^#define UART_IER_RLSI /;"	d
UART_IER_RLSI	src/dev/uart8250.hh	/^const uint8_t UART_IER_RLSI = 0x04;$/;"	v
UART_IER_THRI	src/dev/mips/maltareg.h	/^#define UART_IER_THRI /;"	d
UART_IER_THRI	src/dev/uart8250.hh	/^const uint8_t UART_IER_THRI = 0x02;$/;"	v
UART_IFLS	src/dev/arm/pl011.hh	/^    static const int UART_IFLS = 0x034;$/;"	m	class:Pl011
UART_IMSC	src/dev/arm/pl011.hh	/^    static const int UART_IMSC = 0x038;$/;"	m	class:Pl011
UART_LCRH	src/dev/arm/pl011.hh	/^    static const int UART_LCRH = 0x02C;$/;"	m	class:Pl011
UART_LSR_DR	src/dev/mips/maltareg.h	/^#define UART_LSR_DR /;"	d
UART_LSR_DR	src/dev/uart8250.hh	/^const uint8_t UART_LSR_DR   = 0x01;$/;"	v
UART_LSR_TEMT	src/dev/mips/maltareg.h	/^#define UART_LSR_TEMT /;"	d
UART_LSR_TEMT	src/dev/uart8250.hh	/^const uint8_t UART_LSR_TEMT = 0x40;$/;"	v
UART_LSR_THRE	src/dev/mips/maltareg.h	/^#define UART_LSR_THRE /;"	d
UART_LSR_THRE	src/dev/uart8250.hh	/^const uint8_t UART_LSR_THRE = 0x20;$/;"	v
UART_MCR_LOOP	src/dev/mips/maltareg.h	/^#define UART_MCR_LOOP /;"	d
UART_MCR_LOOP	src/dev/uart8250.hh	/^const uint8_t UART_MCR_LOOP = 0x10;$/;"	v
UART_MIS	src/dev/arm/pl011.hh	/^    static const int UART_MIS  = 0x040;$/;"	m	class:Pl011
UART_RIS	src/dev/arm/pl011.hh	/^    static const int UART_RIS  = 0x03C;$/;"	m	class:Pl011
UDMAControl	src/dev/ide_ctrl.cc	/^    UDMAControl = 0x48,$/;"	e	enum:ConfRegOffset	file:
UDMATiming	src/dev/ide_ctrl.cc	/^    UDMATiming = 0x4A,$/;"	e	enum:ConfRegOffset	file:
UDelayEvent	src/kern/linux/events.hh	/^    UDelayEvent(PCEventQueue *q, const std::string &desc, Addr addr,$/;"	f	class:Linux::UDelayEvent
UDelayEvent	src/kern/linux/events.hh	/^class UDelayEvent : public SkipFuncEvent$/;"	c	namespace:Linux
UEBit	src/arch/x86/regs/misc.hh	/^        UEBit = 1 << 4,$/;"	e	enum:X86ISA::X87StatusBit
UIE	src/dev/arm/vgic.hh	/^    Bitfield<1> UIE;$/;"	m	class:VGic
UInt16	src/python/m5/params.py	/^class UInt16(CheckedInt):   cxx_type = 'uint16_t'; size = 16; unsigned = True$/;"	c
UInt32	src/python/m5/params.py	/^class UInt32(CheckedInt):   cxx_type = 'uint32_t'; size = 32; unsigned = True$/;"	c
UInt64	src/python/m5/params.py	/^class UInt64(CheckedInt):   cxx_type = 'uint64_t'; size = 64; unsigned = True$/;"	c
UInt8	src/python/m5/params.py	/^class UInt8(CheckedInt):    cxx_type =  'uint8_t'; size =  8; unsigned = True$/;"	c
ULL	src/base/types.hh	/^#define ULL(/;"	d
UNCACHEABLE	src/mem/request.hh	/^    static const FlagsType UNCACHEABLE                 = 0x00001000;$/;"	m	class:Request
UNSERIALIZE_ARRAY	src/sim/serialize.hh	/^#define UNSERIALIZE_ARRAY(/;"	d
UNSERIALIZE_ENUM	src/sim/serialize.hh	/^#define UNSERIALIZE_ENUM(/;"	d
UNSERIALIZE_OBJPTR	src/sim/serialize.hh	/^#define UNSERIALIZE_OBJPTR(/;"	d
UNSERIALIZE_OPT_SCALAR	src/sim/serialize.hh	/^#define UNSERIALIZE_OPT_SCALAR(/;"	d
UNSERIALIZE_SCALAR	src/sim/serialize.hh	/^#define UNSERIALIZE_SCALAR(/;"	d
UNSIGNED	src/arch/mips/dsp.hh	/^enum { UNSIGNED, SIGNED };$/;"	e	enum:MipsISA::__anon17
UPCState	src/arch/generic/types.hh	/^    UPCState() {}$/;"	f	class:GenericISA::UPCState
UPCState	src/arch/generic/types.hh	/^    UPCState(Addr val) { set(val); }$/;"	f	class:GenericISA::UPCState
UPCState	src/arch/generic/types.hh	/^class UPCState : public SimplePCState<MachInst>$/;"	c	namespace:GenericISA
UPPER_MASK	src/base/random.hh	/^    static const uint32_t UPPER_MASK = (uint32_t)0x80000000;$/;"	m	class:Random
US_ASYNC_NOCANCEL	src/kern/tru64/tru64.hh	/^#define US_ASYNC_NOCANCEL /;"	d
US_CANCEL	src/kern/tru64/tru64.hh	/^#define US_CANCEL /;"	d
US_CANCEL_BITS	src/kern/tru64/tru64.hh	/^#define US_CANCEL_BITS /;"	d
US_CANCEL_MASK	src/kern/tru64/tru64.hh	/^#define US_CANCEL_MASK /;"	d
US_FP_OWNED	src/kern/tru64/tru64.hh	/^#define US_FP_OWNED /;"	d
US_NOCANCEL	src/kern/tru64/tru64.hh	/^#define US_NOCANCEL /;"	d
US_ONSTACK	src/kern/tru64/tru64.hh	/^#define US_ONSTACK /;"	d
US_PROFILE	src/kern/tru64/tru64.hh	/^#define US_PROFILE /;"	d
US_SIGSTACK	src/kern/tru64/tru64.hh	/^#define US_SIGSTACK /;"	d
US_SYSCALL	src/kern/tru64/tru64.hh	/^#define US_SYSCALL /;"	d
US_SYS_NOCANCEL	src/kern/tru64/tru64.hh	/^#define US_SYS_NOCANCEL /;"	d
US_TRAP	src/kern/tru64/tru64.hh	/^#define US_TRAP /;"	d
US_YELLOW	src/kern/tru64/tru64.hh	/^#define US_YELLOW /;"	d
US_YZONE	src/kern/tru64/tru64.hh	/^#define US_YZONE /;"	d
USegBase	src/arch/alpha/isa_traits.hh	/^const Addr USegBase = ULL(0x0);$/;"	m	namespace:AlphaISA
USegBase	src/arch/arm/isa_traits.hh	/^    const Addr USegBase = ULL(0x0);$/;"	m	namespace:ArmISA
USegBase	src/arch/mips/isa_traits.hh	/^const Addr USegBase = ULL(0x0);$/;"	m	namespace:MipsISA
USegEnd	src/arch/alpha/isa_traits.hh	/^const Addr USegEnd = ULL(0x000003ffffffffff);$/;"	m	namespace:AlphaISA
USegEnd	src/arch/arm/isa_traits.hh	/^    const Addr USegEnd = ULL(0x7FFFFFFF);$/;"	m	namespace:ArmISA
USegEnd	src/arch/mips/isa_traits.hh	/^const Addr USegEnd = ULL(0x7FFFFFFF);$/;"	m	namespace:MipsISA
UXTB	src/arch/arm/types.hh	/^        UXTB = 0,$/;"	e	enum:ArmISA::ArmExtendType
UXTH	src/arch/arm/types.hh	/^        UXTH = 1,$/;"	e	enum:ArmISA::ArmExtendType
UXTW	src/arch/arm/types.hh	/^        UXTW = 2,$/;"	e	enum:ArmISA::ArmExtendType
UXTX	src/arch/arm/types.hh	/^        UXTX = 3,$/;"	e	enum:ArmISA::ArmExtendType
Uart	src/dev/Uart.py	/^class Uart(BasicPioDevice):$/;"	c
Uart	src/dev/arm/RealView.py	/^from Uart import Uart$/;"	i
Uart	src/dev/uart.cc	/^Uart::Uart(const Params *p, Addr pio_size)$/;"	f	class:Uart
Uart	src/dev/uart.hh	/^class Uart : public BasicPioDevice$/;"	c
Uart8250	src/dev/Uart.py	/^class Uart8250(Uart):$/;"	c
Uart8250	src/dev/alpha/Tsunami.py	/^from Uart import Uart8250$/;"	i
Uart8250	src/dev/mips/Malta.py	/^from Uart import Uart8250$/;"	i
Uart8250	src/dev/sparc/T1000.py	/^from Uart import Uart8250$/;"	i
Uart8250	src/dev/uart8250.cc	/^Uart8250::Uart8250(const Params *p)$/;"	f	class:Uart8250
Uart8250	src/dev/uart8250.hh	/^class Uart8250 : public Uart$/;"	c
Uart8250	src/dev/x86/Pc.py	/^from Uart import Uart8250$/;"	i
UdpHdr	src/base/inet.hh	/^struct UdpHdr : public udp_hdr$/;"	s	namespace:Net
UdpPort	src/python/m5/params.py	/^class UdpPort(CheckedInt):  cxx_type = 'uint16_t'; size = 16; unsigned = True$/;"	c
UdpPtr	src/base/inet.hh	/^    UdpPtr() : p(0), _off(0) {}$/;"	f	class:Net::UdpPtr
UdpPtr	src/base/inet.hh	/^    UdpPtr(const Ip6Ptr &ptr) : p(0), _off(0) { set(ptr); }$/;"	f	class:Net::UdpPtr
UdpPtr	src/base/inet.hh	/^    UdpPtr(const IpPtr &ptr) : p(0), _off(0) { set(ptr); }$/;"	f	class:Net::UdpPtr
UdpPtr	src/base/inet.hh	/^    UdpPtr(const UdpPtr &ptr) : p(ptr.p), _off(ptr._off) {}$/;"	f	class:Net::UdpPtr
UdpPtr	src/base/inet.hh	/^class UdpPtr$/;"	c	namespace:Net
UnImplMask	src/arch/alpha/pagetable.hh	/^    static const Addr UnImplMask = ~ImplMask;$/;"	m	struct:AlphaISA::VAddr
UnImplMask	src/arch/power/pagetable.hh	/^    static const Addr UnImplMask = ~ImplMask;$/;"	m	struct:PowerISA::VAddr
UnaryNode	src/base/statistics.hh	/^    UnaryNode(NodePtr &p) : l(p) {}$/;"	f	class:Stats::UnaryNode
UnaryNode	src/base/statistics.hh	/^class UnaryNode : public Node$/;"	c	namespace:Stats
Unblocking	src/cpu/inorder/pipeline_stage.hh	/^        Unblocking,$/;"	e	enum:PipelineStage::ThreadStatus
Unblocking	src/cpu/o3/decode.hh	/^        Unblocking$/;"	e	enum:DefaultDecode::ThreadStatus
Unblocking	src/cpu/o3/iew.hh	/^        Unblocking$/;"	e	enum:DefaultIEW::StageStatus
Unblocking	src/cpu/o3/rename.hh	/^        Unblocking,$/;"	e	enum:DefaultRename::ThreadStatus
UndefinedInstruction	src/arch/arm/faults.hh	/^    UndefinedInstruction(ExtMachInst _machInst, uint32_t _iss, ExceptionClass _overrideEc) :$/;"	f	class:ArmISA::UndefinedInstruction
UndefinedInstruction	src/arch/arm/faults.hh	/^    UndefinedInstruction(ExtMachInst _machInst,$/;"	f	class:ArmISA::UndefinedInstruction
UndefinedInstruction	src/arch/arm/faults.hh	/^class UndefinedInstruction : public ArmFaultVals<UndefinedInstruction>$/;"	c	namespace:ArmISA
UndefinedVariable	src/python/m5/util/smartdict.py	/^class UndefinedVariable(object):$/;"	c
Underflow	src/arch/mips/registers.hh	/^    Underflow,$/;"	e	enum:MipsISA::FCSRBits
UnifiedFreeList	src/cpu/o3/free_list.cc	/^UnifiedFreeList::UnifiedFreeList(const std::string &_my_name,$/;"	f	class:UnifiedFreeList
UnifiedFreeList	src/cpu/o3/free_list.hh	/^class UnifiedFreeList$/;"	c
UnifiedRenameMap	src/cpu/o3/rename_map.hh	/^    UnifiedRenameMap() {};$/;"	f	class:UnifiedRenameMap
UnifiedRenameMap	src/cpu/o3/rename_map.hh	/^class UnifiedRenameMap$/;"	c
UnimpFault	src/sim/faults.hh	/^    UnimpFault(std::string _str)$/;"	f	class:UnimpFault
UnimpFault	src/sim/faults.hh	/^class UnimpFault : public FaultBase$/;"	c
UnimpInstFault	src/arch/x86/faults.hh	/^    class UnimpInstFault : public FaultBase$/;"	c	namespace:X86ISA
Unimplemented	src/arch/mips/registers.hh	/^    Unimplemented$/;"	e	enum:MipsISA::FCSRBits
UnimplementedOpcodeFault	src/arch/alpha/faults.hh	/^class UnimplementedOpcodeFault : public AlphaFault$/;"	c	namespace:AlphaISA
UnimplementedOpcodeFault	src/arch/power/faults.hh	/^    UnimplementedOpcodeFault()$/;"	f	class:PowerISA::UnimplementedOpcodeFault
UnimplementedOpcodeFault	src/arch/power/faults.hh	/^class UnimplementedOpcodeFault : public PowerFault$/;"	c	namespace:PowerISA
UnitTest	src/unittest/unittest.cc	/^namespace UnitTest {$/;"	n	file:
UnitTest	src/unittest/unittest.hh	/^namespace UnitTest {$/;"	n
Unknown	src/mem/request.hh	/^        Unknown = 1024,$/;"	e	enum:ContextSwitchTaskId::TaskId
UnknownArch	src/base/loader/object_file.hh	/^        UnknownArch,$/;"	e	enum:ObjectFile::Arch
UnknownMode	src/base/vnc/convert.hh	/^        UnknownMode,$/;"	e	enum:VideoConvert::Mode
UnknownOp	src/arch/arm/insts/misc.hh	/^    UnknownOp(const char *mnem, ExtMachInst _machInst, OpClass __opClass) :$/;"	f	class:UnknownOp
UnknownOp	src/arch/arm/insts/misc.hh	/^class UnknownOp : public PredOp$/;"	c
UnknownOp64	src/arch/arm/insts/misc64.hh	/^    UnknownOp64(const char *mnem, ExtMachInst _machInst, OpClass __opClass) :$/;"	f	class:UnknownOp64
UnknownOp64	src/arch/arm/insts/misc64.hh	/^class UnknownOp64 : public ArmStaticInst$/;"	c
UnknownOpSys	src/base/loader/object_file.hh	/^        UnknownOpSys,$/;"	e	enum:ObjectFile::OpSys
UnknownTran	src/arch/arm/faults.hh	/^        UnknownTran$/;"	e	enum:ArmISA::ArmFault::TranMethod
UnmapInfo	src/cpu/o3/rob.hh	/^    typedef std::pair<RegIndex, PhysRegIndex> UnmapInfo;$/;"	t	class:ROB
Unsigned	src/python/m5/params.py	/^class Unsigned(CheckedInt): cxx_type = 'unsigned'; size = 32; unsigned = True$/;"	c
UpdateAfterContextSwitch	src/cpu/inorder/resource_pool.hh	/^        UpdateAfterContextSwitch,$/;"	e	enum:ResourcePool::ResPoolEventType
UpdateCP0	src/arch/mips/isa.hh	/^            UpdateCP0$/;"	e	enum:MipsISA::ISA::CP0EventType
UpdatePCs	src/cpu/inorder/cpu.hh	/^        UpdatePCs,$/;"	e	enum:InOrderCPU::CPUEventType
UpdatePredictor	src/cpu/inorder/resources/branch_predictor.hh	/^        UpdatePredictor$/;"	e	enum:BranchPredictor::Command
UpdateTargetPC	src/cpu/inorder/resources/fetch_seq_unit.hh	/^        UpdateTargetPC$/;"	e	enum:FetchSeqUnit::Command
UpgradeFailResp	src/mem/packet.hh	/^        UpgradeFailResp,        \/\/ Valid for SCUpgradeReq only$/;"	e	enum:MemCmd::Command
UpgradeReq	src/mem/packet.hh	/^        UpgradeReq,$/;"	e	enum:MemCmd::Command
UpgradeResp	src/mem/packet.hh	/^        UpgradeResp,$/;"	e	enum:MemCmd::Command
UpperKeys	src/dev/ps2.cc	/^const uint32_t UpperKeys = 0xff00;$/;"	m	namespace:Ps2	file:
UseDefRequest	src/cpu/inorder/resources/use_def.hh	/^        UseDefRequest(UseDefUnit *res)$/;"	f	class:UseDefUnit::UseDefRequest
UseDefRequest	src/cpu/inorder/resources/use_def.hh	/^    class UseDefRequest : public ResourceRequest {$/;"	c	class:UseDefUnit
UseDefUnit	src/cpu/inorder/resources/use_def.cc	/^UseDefUnit::UseDefUnit(string res_name, int res_id, int res_width,$/;"	f	class:UseDefUnit
UseDefUnit	src/cpu/inorder/resources/use_def.hh	/^class UseDefUnit : public Resource {$/;"	c
User	src/arch/sparc/faults.hh	/^        U, User = U,$/;"	e	enum:SparcISA::SparcFaultBase::PrivilegeLevel
UserDesc32	src/arch/x86/linux/syscalls.cc	/^struct UserDesc32 {$/;"	s	file:
UserDesc64	src/arch/x86/linux/syscalls.cc	/^struct UserDesc64 {$/;"	s	file:
UserMode	src/arch/arm/tlb.hh	/^        UserMode = 0x10,$/;"	e	enum:ArmISA::TLB::ArmFlags
UsesModRM	src/arch/x86/decoder.hh	/^    static const uint8_t UsesModRM[2][256];$/;"	m	class:X86ISA::Decoder
UsesModRM	src/arch/x86/decoder_tables.cc	/^    const uint8_t Decoder::UsesModRM[2][256] =$/;"	m	class:X86ISA::Decoder	file:
V0	src/arch/mips/pagetable.hh	/^    bool V0;    \/\/ Even entry Valid Bit$/;"	m	struct:MipsISA::PTE
V0	src/arch/power/pagetable.hh	/^    bool V0;   \/\/ Even entry Valid Bit$/;"	m	struct:PowerISA::PTE
V1	src/arch/mips/pagetable.hh	/^    bool V1;    \/\/ Odd entry Valid Bit$/;"	m	struct:MipsISA::PTE
V1	src/arch/power/pagetable.hh	/^    bool V1;   \/\/ Odd entry Valid Bit$/;"	m	struct:PowerISA::PTE
VABits	src/arch/arm/isa_traits.hh	/^    const unsigned VABits = 32;$/;"	m	namespace:ArmISA
VABits	src/arch/mips/isa_traits.hh	/^const unsigned VABits = 32;$/;"	m	namespace:MipsISA
VALID_ADDR	src/mem/packet.hh	/^    static const FlagsType VALID_ADDR             = 0x00000100;$/;"	m	class:Packet
VALID_CONTEXT_ID	src/mem/request.hh	/^    static const PrivateFlagsType VALID_CONTEXT_ID     = 0x00000020;$/;"	m	class:Request
VALID_EXTRA_DATA	src/mem/request.hh	/^    static const PrivateFlagsType VALID_EXTRA_DATA     = 0x00000080;$/;"	m	class:Request
VALID_PADDR	src/mem/request.hh	/^    static const PrivateFlagsType VALID_PADDR          = 0x00000002;$/;"	m	class:Request
VALID_PC	src/mem/request.hh	/^    static const PrivateFlagsType VALID_PC             = 0x00000010;$/;"	m	class:Request
VALID_SIZE	src/mem/packet.hh	/^    static const FlagsType VALID_SIZE             = 0x00000200;$/;"	m	class:Packet
VALID_SIZE	src/mem/request.hh	/^    static const PrivateFlagsType VALID_SIZE           = 0x00000001;$/;"	m	class:Request
VALID_THREAD_ID	src/mem/request.hh	/^    static const PrivateFlagsType VALID_THREAD_ID      = 0x00000040;$/;"	m	class:Request
VALID_VADDR	src/mem/request.hh	/^    static const PrivateFlagsType VALID_VADDR          = 0x00000004;$/;"	m	class:Request
VAModel	src/mem/ruby/network/orion/Allocator/VCAllocator.hh	/^    enum VAModel$/;"	g	class:VCAllocator
VARARGS_ADDARGS	src/base/varargs.hh	/^#define VARARGS_ADDARGS(/;"	d
VARARGS_ALLARGS	src/base/varargs.hh	/^#define VARARGS_ALLARGS /;"	d
VARARGS_DECLARATION	src/base/varargs.hh	/^#define VARARGS_DECLARATION(/;"	d
VARARGS_DEFINITION	src/base/varargs.hh	/^#define VARARGS_DEFINITION(/;"	d
VAWatchpoint	src/arch/sparc/faults.hh	/^class VAWatchpoint : public SparcFault<VAWatchpoint> {};$/;"	c	namespace:SparcISA
VA_	src/mem/ruby/network/garnet/NetworkHeader.hh	/^enum flit_stage {I_, VA_, SA_, ST_, LT_, NUM_FLIT_STAGE_};$/;"	e	enum:flit_stage
VAddr	src/arch/alpha/pagetable.hh	/^    VAddr(Addr a) : addr(a) {}$/;"	f	struct:AlphaISA::VAddr
VAddr	src/arch/alpha/pagetable.hh	/^struct VAddr$/;"	s	namespace:AlphaISA
VAddr	src/arch/arm/pagetable.hh	/^    VAddr(Addr a) { panic("not implemented yet."); }$/;"	f	struct:ArmISA::VAddr
VAddr	src/arch/arm/pagetable.hh	/^struct VAddr$/;"	s	namespace:ArmISA
VAddr	src/arch/mips/pagetable.hh	/^struct VAddr$/;"	s	namespace:MipsISA
VAddr	src/arch/power/pagetable.hh	/^    VAddr(Addr a)$/;"	f	struct:PowerISA::VAddr
VAddr	src/arch/power/pagetable.hh	/^struct VAddr$/;"	s	namespace:PowerISA
VAddr	src/arch/sparc/pagetable.hh	/^    VAddr(Addr a) { panic("not implemented yet."); }$/;"	f	struct:SparcISA::VAddr
VAddr	src/arch/sparc/pagetable.hh	/^struct VAddr$/;"	s	namespace:SparcISA
VAddrAMask	src/arch/sparc/isa_traits.hh	/^const Addr VAddrAMask = ULL(0xFFFFFFFF);$/;"	m	namespace:SparcISA
VAddrImpl	src/arch/alpha/ev5.hh	/^inline Addr VAddrImpl(Addr a) { return a & VAddrImplMask; }$/;"	f	namespace:AlphaISA
VAddrImpl	src/arch/arm/isa_traits.hh	/^    inline Addr VAddrImpl(Addr a) { return a & VAddrImplMask; }$/;"	f	namespace:ArmISA
VAddrImpl	src/arch/mips/isa_traits.hh	/^inline Addr VAddrImpl(Addr a) { return a & VAddrImplMask; }$/;"	f	namespace:MipsISA
VAddrImplBits	src/arch/alpha/ev5.hh	/^const int VAddrImplBits = 43;$/;"	m	namespace:AlphaISA
VAddrImplMask	src/arch/alpha/ev5.hh	/^const Addr VAddrImplMask = (ULL(1) << VAddrImplBits) - 1;$/;"	m	namespace:AlphaISA
VAddrImplMask	src/arch/arm/isa_traits.hh	/^    const Addr VAddrImplMask = (ULL(1) << VABits) - 1;$/;"	m	namespace:ArmISA
VAddrImplMask	src/arch/mips/isa_traits.hh	/^const Addr VAddrImplMask = (ULL(1) << VABits) - 1;$/;"	m	namespace:MipsISA
VAddrOffset	src/arch/alpha/ev5.hh	/^inline Addr VAddrOffset(Addr a) { return a & PageOffset; }$/;"	f	namespace:AlphaISA
VAddrOffset	src/arch/arm/isa_traits.hh	/^    inline Addr VAddrOffset(Addr a) { return a & ArmISA::PageOffset; }$/;"	f	namespace:ArmISA
VAddrOffset	src/arch/mips/isa_traits.hh	/^inline Addr VAddrOffset(Addr a) { return a & MipsISA::PageOffset; }$/;"	f	namespace:MipsISA
VAddrSpaceEV5	src/arch/alpha/ev5.hh	/^inline Addr VAddrSpaceEV5(Addr a) { return a >> 41 & 0x3; }$/;"	f	namespace:AlphaISA
VAddrSpaceEV6	src/arch/alpha/ev5.hh	/^inline Addr VAddrSpaceEV6(Addr a) { return a >> 41 & 0x7f; }$/;"	f	namespace:AlphaISA
VAddrUnImplMask	src/arch/alpha/ev5.hh	/^const Addr VAddrUnImplMask = ~VAddrImplMask;$/;"	m	namespace:AlphaISA
VAddrUnImplMask	src/arch/arm/isa_traits.hh	/^    const Addr VAddrUnImplMask = ~VAddrImplMask;$/;"	m	namespace:ArmISA
VAddrUnImplMask	src/arch/mips/isa_traits.hh	/^const Addr VAddrUnImplMask = ~VAddrImplMask;$/;"	m	namespace:MipsISA
VAddrVPN	src/arch/alpha/ev5.hh	/^inline Addr VAddrVPN(Addr a) { return a >> PageShift; }$/;"	f	namespace:AlphaISA
VAddrVPN	src/arch/arm/isa_traits.hh	/^    inline Addr VAddrVPN(Addr a) { return a >> ArmISA::PageShift; }$/;"	f	namespace:ArmISA
VAddrVPN	src/arch/mips/isa_traits.hh	/^inline Addr VAddrVPN(Addr a) { return a >> MipsISA::PageShift; }$/;"	f	namespace:MipsISA
VCAllocator	src/mem/ruby/network/orion/Allocator/VCAllocator.cc	/^VCAllocator::VCAllocator($/;"	f	class:VCAllocator
VCAllocator	src/mem/ruby/network/orion/Allocator/VCAllocator.hh	/^class VCAllocator$/;"	c
VC_AB_	src/mem/ruby/network/garnet/NetworkHeader.hh	/^enum VC_state_type {IDLE_, VC_AB_, ACTIVE_, NUM_VC_STATE_TYPE_};$/;"	e	enum:VC_state_type
VC_SELECT	src/mem/ruby/network/orion/Allocator/VCAllocator.hh	/^      VC_SELECT$/;"	e	enum:VCAllocator::VAModel
VC_state_type	src/mem/ruby/network/garnet/NetworkHeader.hh	/^enum VC_state_type {IDLE_, VC_AB_, ACTIVE_, NUM_VC_STATE_TYPE_};$/;"	g
VCallocator_d	src/mem/ruby/network/garnet/fixed-pipeline/VCallocator_d.cc	/^VCallocator_d::VCallocator_d(Router_d *router)$/;"	f	class:VCallocator_d
VCallocator_d	src/mem/ruby/network/garnet/fixed-pipeline/VCallocator_d.hh	/^class VCallocator_d : public Consumer$/;"	c
VCarbiter	src/mem/ruby/network/garnet/flexible-pipeline/VCarbiter.cc	/^VCarbiter::VCarbiter(Router *router)$/;"	f	class:VCarbiter
VCarbiter	src/mem/ruby/network/garnet/flexible-pipeline/VCarbiter.hh	/^class VCarbiter : public Consumer$/;"	c
VCounter	src/base/stats/types.hh	/^typedef std::vector<Counter> VCounter;$/;"	t	namespace:Stats
VDR	src/dev/ns_gige_reg.h	/^    VDR =               0xc4,$/;"	e	enum:DeviceRegisterAddress
VEM	src/dev/arm/vgic.hh	/^        uint8_t VEM;$/;"	m	struct:VGic::vcpuIntData
VERSION	src/cpu/m5legion_interface.h	/^#define VERSION /;"	d
VERSION_RESETV	src/dev/arm/hdlcd.hh	/^    static const size_t VERSION_RESETV = 0x1CDC0000;$/;"	m	class:HDLcd
VExpress_EMM	src/dev/arm/RealView.py	/^class VExpress_EMM(RealView):$/;"	c
VExpress_EMM64	src/dev/arm/RealView.py	/^class VExpress_EMM64(VExpress_EMM):$/;"	c
VGIC_CPU_MAX	src/dev/arm/vgic.hh	/^    static const int VGIC_CPU_MAX       = 256;$/;"	m	class:VGic
VGic	src/dev/arm/RealView.py	/^class VGic(PioDevice):$/;"	c
VGic	src/dev/arm/vgic.cc	/^VGic::VGic(const Params *p)$/;"	f	class:VGic
VGic	src/dev/arm/vgic.hh	/^class VGic : public PioDevice$/;"	c
VGrp0DIE	src/dev/arm/vgic.hh	/^    Bitfield<5> VGrp0DIE;$/;"	m	class:VGic
VGrp0EIE	src/dev/arm/vgic.hh	/^    Bitfield<4> VGrp0EIE;$/;"	m	class:VGic
VGrp1DIE	src/dev/arm/vgic.hh	/^    Bitfield<7> VGrp1DIE;$/;"	m	class:VGic
VGrp1EIE	src/dev/arm/vgic.hh	/^    Bitfield<6> VGrp1EIE;$/;"	m	class:VGic
VIFBit	src/arch/x86/regs/misc.hh	/^        VIFBit = 1 << 19,$/;"	e	enum:X86ISA::RFLAGBit
VIPBit	src/arch/x86/regs/misc.hh	/^        VIPBit = 1 << 20,$/;"	e	enum:X86ISA::RFLAGBit
VLANIPReceiveControlRegister	src/dev/ns_gige_reg.h	/^enum VLANIPReceiveControlRegister {$/;"	g
VLANIPTransmitControlRegister	src/dev/ns_gige_reg.h	/^enum VLANIPTransmitControlRegister {$/;"	g
VLAN_FILTER_TABLE_SIZE	src/dev/i8254xGBe_defs.hh	/^const uint8_t VLAN_FILTER_TABLE_SIZE    = 128;$/;"	m	namespace:iGbReg
VMABP	src/dev/arm/vgic.hh	/^        uint8_t VMABP;$/;"	m	struct:VGic::vcpuIntData
VMAckCtl	src/dev/arm/vgic.hh	/^        uint8_t VMAckCtl;$/;"	m	struct:VGic::vcpuIntData
VMBP	src/dev/arm/vgic.hh	/^        uint8_t VMBP;$/;"	m	struct:VGic::vcpuIntData
VMBit	src/arch/x86/regs/misc.hh	/^        VMBit = 1 << 17,$/;"	e	enum:X86ISA::RFLAGBit
VMCBPR	src/dev/arm/vgic.hh	/^        uint8_t VMCBPR;$/;"	m	struct:VGic::vcpuIntData
VMFiqEn	src/dev/arm/vgic.hh	/^        uint8_t VMFiqEn;$/;"	m	struct:VGic::vcpuIntData
VMGrp0En	src/dev/arm/vgic.hh	/^        uint8_t VMGrp0En;$/;"	m	struct:VGic::vcpuIntData
VMGrp1En	src/dev/arm/vgic.hh	/^        uint8_t VMGrp1En;$/;"	m	struct:VGic::vcpuIntData
VMPageSize	src/arch/alpha/isa_traits.hh	/^    VMPageSize = (1 << LogVMPageSize),$/;"	e	enum:AlphaISA::__anon1
VMPageSize	src/arch/arm/isa_traits.hh	/^    const int VMPageSize = (1 << LogVMPageSize);$/;"	m	namespace:ArmISA
VMPageSize	src/arch/mips/isa_traits.hh	/^const int VMPageSize = (1 << LogVMPageSize);$/;"	m	namespace:MipsISA
VMPageSize	src/arch/null/isa_traits.hh	/^    const int VMPageSize = (1 << LogVMPageSize);$/;"	m	namespace:NullISA
VMPageSize	src/arch/power/isa_traits.hh	/^const int VMPageSize = (1 << LogVMPageSize);$/;"	m	namespace:PowerISA
VMPageSize	src/arch/sparc/isa_traits.hh	/^const int VMPageSize = (1 << LogVMPageSize);$/;"	m	namespace:SparcISA
VMPageSize	src/arch/x86/isa_traits.hh	/^    const int VMPageSize = (1 << LogVMPageSize);$/;"	m	namespace:X86ISA
VMPriMask	src/dev/arm/vgic.hh	/^        uint8_t VMPriMask;$/;"	m	struct:VGic::vcpuIntData
VNET_type	src/mem/ruby/network/garnet/NetworkHeader.hh	/^enum VNET_type {CTRL_VNET_, DATA_VNET_, NULL_VNET_, NUM_VNET_TYPE_};$/;"	g
VPN	src/arch/mips/pagetable.hh	/^    Addr VPN;$/;"	m	struct:MipsISA::PTE
VPN	src/arch/power/pagetable.hh	/^    Addr VPN;$/;"	m	struct:PowerISA::PTE
VPTE	src/mem/request.hh	/^    static const FlagsType VPTE                        = 0x00000400;$/;"	m	class:Request
VPtr	src/sim/vptr.hh	/^    VPtr(const VPtr<U> &vp)$/;"	f	class:VPtr
VPtr	src/sim/vptr.hh	/^    explicit VPtr(ThreadContext *_tc, Addr p = 0)$/;"	f	class:VPtr
VPtr	src/sim/vptr.hh	/^class VPtr$/;"	c
VRCR	src/dev/ns_gige_reg.h	/^    VRCR =              0xbc,$/;"	e	enum:DeviceRegisterAddress
VRCR_DUTF	src/dev/ns_gige_reg.h	/^     VRCR_DUTF =        0x00000008,$/;"	e	enum:VLANIPReceiveControlRegister
VRCR_DVTF	src/dev/ns_gige_reg.h	/^     VRCR_DVTF =        0x00000004,$/;"	e	enum:VLANIPReceiveControlRegister
VRCR_IPEN	src/dev/ns_gige_reg.h	/^     VRCR_IPEN =        0x00000010,$/;"	e	enum:VLANIPReceiveControlRegister
VRCR_RIPE	src/dev/ns_gige_reg.h	/^     VRCR_RIPE =        0x00000020,$/;"	e	enum:VLANIPReceiveControlRegister
VRCR_RTCPE	src/dev/ns_gige_reg.h	/^     VRCR_RTCPE =       0x00000040,$/;"	e	enum:VLANIPReceiveControlRegister
VRCR_RUDPE	src/dev/ns_gige_reg.h	/^     VRCR_RUDPE =       0x00000080,$/;"	e	enum:VLANIPReceiveControlRegister
VRCR_VTDEN	src/dev/ns_gige_reg.h	/^     VRCR_VTDEN =       0x00000001$/;"	e	enum:VLANIPReceiveControlRegister
VRCR_VTREN	src/dev/ns_gige_reg.h	/^     VRCR_VTREN =       0x00000002,$/;"	e	enum:VLANIPReceiveControlRegister
VReg	src/arch/arm/insts/neon64_mem.hh	/^struct VReg {$/;"	s	namespace:ArmISA
VResult	src/base/stats/types.hh	/^typedef std::vector<Result> VResult;$/;"	t	namespace:Stats
VSyscallPage	src/arch/x86/process.hh	/^        class VSyscallPage$/;"	c	class:X86ISA::I386LiveProcess
VSyscallPage	src/arch/x86/process.hh	/^        class VSyscallPage$/;"	c	class:X86ISA::X86_64LiveProcess
VTCR	src/dev/ns_gige_reg.h	/^    VTCR =              0xc0,$/;"	e	enum:DeviceRegisterAddress
VTCR_GCHK	src/dev/ns_gige_reg.h	/^     VTCR_GCHK =        0x00000004,$/;"	e	enum:VLANIPTransmitControlRegister
VTCR_PPCHK	src/dev/ns_gige_reg.h	/^     VTCR_PPCHK =       0x00000008,$/;"	e	enum:VLANIPTransmitControlRegister
VTCR_VGTI	src/dev/ns_gige_reg.h	/^     VTCR_VGTI =        0x00000001$/;"	e	enum:VLANIPTransmitControlRegister
VTCR_VPPTI	src/dev/ns_gige_reg.h	/^     VTCR_VPPTI =       0x00000002,$/;"	e	enum:VLANIPTransmitControlRegister
VW	src/arch/x86/decoder_tables.cc	/^        VW = VWordImm,$/;"	e	enum:X86ISA::SizeType	file:
VWordImm	src/arch/x86/decoder_tables.cc	/^        VWordImm,$/;"	e	enum:X86ISA::SizeType	file:
V_Back_Porch	src/dev/arm/hdlcd.hh	/^        V_Back_Porch     = 0x0204,$/;"	e	enum:HDLcd::RegisterOffset
V_Data	src/dev/arm/hdlcd.hh	/^        V_Data           = 0x0208,$/;"	e	enum:HDLcd::RegisterOffset
V_Front_Porch	src/dev/arm/hdlcd.hh	/^        V_Front_Porch    = 0x020C,$/;"	e	enum:HDLcd::RegisterOffset
V_Sync	src/dev/arm/hdlcd.hh	/^        V_Sync           = 0x0200,$/;"	e	enum:HDLcd::RegisterOffset
VaOutOfRange	src/arch/sparc/tlb.hh	/^        VaOutOfRange = 0x20,$/;"	e	enum:SparcISA::TLB::FaultTypes
VaOutOfRangeJmp	src/arch/sparc/tlb.hh	/^        VaOutOfRangeJmp = 0x40$/;"	e	enum:SparcISA::TLB::FaultTypes
Valid	src/arch/mips/pagetable.hh	/^    bool Valid() { return (V0 | V1); };$/;"	f	struct:MipsISA::PTE
Valid	src/arch/power/pagetable.hh	/^    Valid()$/;"	f	struct:PowerISA::PTE
Value	src/base/statistics.hh	/^class Value : public ValueBase<Value>$/;"	c	namespace:Stats
ValueBase	src/base/statistics.hh	/^    ValueBase() : proxy(NULL) { }$/;"	f	class:Stats::ValueBase
ValueBase	src/base/statistics.hh	/^class ValueBase : public DataWrap<Derived, ScalarInfoProxy>$/;"	c	namespace:Stats
ValueProxy	src/base/statistics.hh	/^    ValueProxy(T &val) : scalar(&val) {}$/;"	f	class:Stats::ValueProxy
ValueProxy	src/base/statistics.hh	/^class ValueProxy : public ProxyInfo$/;"	c	namespace:Stats
ValueToString	src/base/stats/text.cc	/^ValueToString(Result value, int precision)$/;"	f	namespace:Stats
Var	src/mem/slicc/ast/ActionDeclAST.py	/^from slicc.symbols import Action, Type, Var$/;"	i
Var	src/mem/slicc/ast/EnqueueStatementAST.py	/^from slicc.symbols import Var$/;"	i
Var	src/mem/slicc/ast/FormalParamAST.py	/^from slicc.symbols import Var$/;"	i
Var	src/mem/slicc/ast/InPortDeclAST.py	/^from slicc.symbols import Func, Type, Var$/;"	i
Var	src/mem/slicc/ast/LocalVariableAST.py	/^from slicc.symbols import Var$/;"	i
Var	src/mem/slicc/ast/ObjDeclAST.py	/^from slicc.symbols import Var$/;"	i
Var	src/mem/slicc/ast/OutPortDeclAST.py	/^from slicc.symbols import Var$/;"	i
Var	src/mem/slicc/ast/PeekStatementAST.py	/^from slicc.symbols import Var$/;"	i
Var	src/mem/slicc/ast/VarExprAST.py	/^from slicc.symbols import Type, Var$/;"	i
Var	src/mem/slicc/symbols/StateMachine.py	/^from slicc.symbols.Var import Var$/;"	i
Var	src/mem/slicc/symbols/Type.py	/^from slicc.symbols.Var import Var$/;"	i
Var	src/mem/slicc/symbols/Var.py	/^class Var(Symbol):$/;"	c
Var	src/mem/slicc/symbols/__init__.py	/^from slicc.symbols.Var import Var$/;"	i
VarArgs	src/base/varargs.hh	/^namespace VarArgs {$/;"	n
VarExprAST	src/mem/slicc/ast/VarExprAST.py	/^class VarExprAST(ExprAST):$/;"	c
Variable	src/python/m5/util/smartdict.py	/^class Variable(str):$/;"	c
Vector	src/base/statistics.hh	/^class Vector : public VectorBase<Vector, StatStor>$/;"	c	namespace:Stats
Vector2d	src/base/statistics.hh	/^class Vector2d : public Vector2dBase<Vector2d, StatStor>$/;"	c	namespace:Stats
Vector2dBase	src/base/statistics.hh	/^    Vector2dBase()$/;"	f	class:Stats::Vector2dBase
Vector2dBase	src/base/statistics.hh	/^class Vector2dBase : public DataWrapVec2d<Derived, Vector2dInfoProxy>$/;"	c	namespace:Stats
Vector2dInfo	src/base/stats/info.hh	/^class Vector2dInfo : public Info$/;"	c	namespace:Stats
Vector2dInfoProxy	src/base/statistics.hh	/^    Vector2dInfoProxy(Stat &stat) : InfoProxy<Stat, Vector2dInfo>(stat) {}$/;"	f	class:Stats::Vector2dInfoProxy
Vector2dInfoProxy	src/base/statistics.hh	/^class Vector2dInfoProxy : public InfoProxy<Stat, Vector2dInfo>$/;"	c	namespace:Stats
VectorAverageDeviation	src/base/statistics.hh	/^class VectorAverageDeviation$/;"	c	namespace:Stats
VectorBase	src/base/statistics.hh	/^    VectorBase()$/;"	f	class:Stats::VectorBase
VectorBase	src/base/statistics.hh	/^class VectorBase : public DataWrapVec<Derived, VectorInfoProxy>$/;"	c	namespace:Stats
VectorDistBase	src/base/statistics.hh	/^    VectorDistBase()$/;"	f	class:Stats::VectorDistBase
VectorDistBase	src/base/statistics.hh	/^class VectorDistBase : public DataWrapVec<Derived, VectorDistInfoProxy>$/;"	c	namespace:Stats
VectorDistInfo	src/base/stats/info.hh	/^class VectorDistInfo : public Info$/;"	c	namespace:Stats
VectorDistInfoProxy	src/base/statistics.hh	/^    VectorDistInfoProxy(Stat &stat) : InfoProxy<Stat, VectorDistInfo>(stat) {}$/;"	f	class:Stats::VectorDistInfoProxy
VectorDistInfoProxy	src/base/statistics.hh	/^class VectorDistInfoProxy : public InfoProxy<Stat, VectorDistInfo>$/;"	c	namespace:Stats
VectorDistribution	src/base/statistics.hh	/^class VectorDistribution : public VectorDistBase<VectorDistribution, DistStor>$/;"	c	namespace:Stats
VectorInfo	src/base/stats/info.hh	/^class VectorInfo : public Info$/;"	c	namespace:Stats
VectorInfoProxy	src/base/statistics.hh	/^    VectorInfoProxy(Stat &stat) : InfoProxy<Stat, VectorInfo>(stat) {}$/;"	f	class:Stats::VectorInfoProxy
VectorInfoProxy	src/base/statistics.hh	/^class VectorInfoProxy : public InfoProxy<Stat, VectorInfo>$/;"	c	namespace:Stats
VectorMasterPort	src/python/m5/params.py	/^class VectorMasterPort(VectorPort):$/;"	c
VectorParam	src/python/m5/params.py	/^VectorParam = ParamFactory(VectorParamDesc)$/;"	v
VectorParamDesc	src/python/m5/SimObject.py	/^     isNullPointer, SimObjectVector, Port$/;"	i
VectorParamDesc	src/python/m5/params.py	/^class VectorParamDesc(ParamDesc):$/;"	c
VectorParamValue	src/python/m5/params.py	/^class VectorParamValue(list):$/;"	c
VectorPort	src/python/m5/params.py	/^class VectorPort(Port):$/;"	c
VectorPortElementRef	src/python/m5/params.py	/^class VectorPortElementRef(PortRef):$/;"	c
VectorPortRef	src/python/m5/params.py	/^class VectorPortRef(object):$/;"	c
VectorPrint	src/base/stats/text.cc	/^struct VectorPrint$/;"	s	namespace:Stats	file:
VectorProxy	src/base/statistics.hh	/^    VectorProxy(Stat &s, off_type o, size_type l)$/;"	f	class:Stats::VectorProxy
VectorProxy	src/base/statistics.hh	/^    VectorProxy(const VectorProxy &sp)$/;"	f	class:Stats::VectorProxy
VectorProxy	src/base/statistics.hh	/^class VectorProxy$/;"	c	namespace:Stats
VectorSlavePort	src/python/m5/params.py	/^class VectorSlavePort(VectorPort):$/;"	c
VectorStandardDeviation	src/base/statistics.hh	/^class VectorStandardDeviation$/;"	c	namespace:Stats
VectorStatNode	src/base/statistics.hh	/^    VectorStatNode(const VectorInfo *d) : data(d) { }$/;"	f	class:Stats::VectorStatNode
VectorStatNode	src/base/statistics.hh	/^class VectorStatNode : public Node$/;"	c	namespace:Stats
VendorAndLargestExtFunc	src/arch/x86/cpuid.cc	/^        VendorAndLargestExtFunc,$/;"	e	enum:X86ISA::ExtendedCpuidFunctions	file:
VendorAndLargestStdFunc	src/arch/x86/cpuid.cc	/^        VendorAndLargestStdFunc,$/;"	e	enum:X86ISA::StandardCpuidFunction	file:
VendorID	src/dev/CopyEngine.py	/^    VendorID = 0x8086$/;"	v	class:CopyEngine
VendorID	src/dev/Ethernet.py	/^    VendorID = 0x100B$/;"	v	class:NSGigE
VendorID	src/dev/Ethernet.py	/^    VendorID = 0x1291$/;"	v	class:Sinic
VendorID	src/dev/Ethernet.py	/^    VendorID = 0x8086$/;"	v	class:IGbE
VendorID	src/dev/Ide.py	/^    VendorID = 0x8086$/;"	v	class:IdeController
VendorID	src/dev/Pci.py	/^    VendorID = Param.UInt16("Vendor ID")$/;"	v	class:PciDevice
Version	src/dev/arm/hdlcd.hh	/^        Version          = 0x0000,$/;"	e	enum:HDLcd::RegisterOffset
VersionMajor	src/dev/disk_image.cc	/^const uint32_t CowDiskImage::VersionMajor = 1;$/;"	m	class:CowDiskImage	file:
VersionMajor	src/dev/disk_image.hh	/^    static const uint32_t VersionMajor;$/;"	m	class:CowDiskImage
VersionMinor	src/dev/disk_image.cc	/^const uint32_t CowDiskImage::VersionMinor = 0;$/;"	m	class:CowDiskImage	file:
VersionMinor	src/dev/disk_image.hh	/^    static const uint32_t VersionMinor;$/;"	m	class:CowDiskImage
VfpFirstMicroop	src/arch/arm/insts/vfp.hh	/^    VfpFirstMicroop,$/;"	e	enum:ArmISA::VfpMicroMode
VfpLastMicroop	src/arch/arm/insts/vfp.hh	/^    VfpLastMicroop$/;"	e	enum:ArmISA::VfpMicroMode
VfpMacroOp	src/arch/arm/insts/vfp.hh	/^    VfpMacroOp(const char *mnem, ExtMachInst _machInst,$/;"	f	class:ArmISA::VfpMacroOp
VfpMacroOp	src/arch/arm/insts/vfp.hh	/^class VfpMacroOp : public PredMacroOp$/;"	c	namespace:ArmISA
VfpMicroMode	src/arch/arm/insts/vfp.hh	/^enum VfpMicroMode {$/;"	g	namespace:ArmISA
VfpMicroop	src/arch/arm/insts/vfp.hh	/^    VfpMicroop,$/;"	e	enum:ArmISA::VfpMicroMode
VfpNotAMicroop	src/arch/arm/insts/vfp.hh	/^    VfpNotAMicroop,$/;"	e	enum:ArmISA::VfpMicroMode
VfpRoundAway	src/arch/arm/insts/vfp.hh	/^    VfpRoundAway = 4$/;"	e	enum:ArmISA::VfpRoundingMode
VfpRoundDown	src/arch/arm/insts/vfp.hh	/^    VfpRoundDown = 2,$/;"	e	enum:ArmISA::VfpRoundingMode
VfpRoundNearest	src/arch/arm/insts/vfp.hh	/^    VfpRoundNearest = 0,$/;"	e	enum:ArmISA::VfpRoundingMode
VfpRoundUpward	src/arch/arm/insts/vfp.hh	/^    VfpRoundUpward = 1,$/;"	e	enum:ArmISA::VfpRoundingMode
VfpRoundZero	src/arch/arm/insts/vfp.hh	/^    VfpRoundZero = 3,$/;"	e	enum:ArmISA::VfpRoundingMode
VfpRoundingMode	src/arch/arm/insts/vfp.hh	/^enum VfpRoundingMode$/;"	g	namespace:ArmISA
VfpSavedState	src/arch/arm/insts/vfp.hh	/^typedef int VfpSavedState;$/;"	t	namespace:ArmISA
VideoConvert	src/base/vnc/convert.cc	/^VideoConvert::VideoConvert(Mode input_mode, Mode output_mode, int _width,$/;"	f	class:VideoConvert
VideoConvert	src/base/vnc/convert.hh	/^class VideoConvert$/;"	c
VirtAddress	src/mem/ruby/common/Address.hh	/^typedef Address VirtAddress;$/;"	t
Virtual8086Mode	src/arch/x86/types.hh	/^        Virtual8086Mode,$/;"	e	enum:X86ISA::X86SubMode
VirtualChannel_d	src/mem/ruby/network/garnet/fixed-pipeline/VirtualChannel_d.cc	/^VirtualChannel_d::VirtualChannel_d(int id)$/;"	f	class:VirtualChannel_d
VirtualChannel_d	src/mem/ruby/network/garnet/fixed-pipeline/VirtualChannel_d.hh	/^class VirtualChannel_d$/;"	c
VirtualCount	src/dev/sinic.hh	/^        uint32_t VirtualCount; \/\/ 0x20$/;"	m	struct:Sinic::Device::__anon83
VirtualDataAbort	src/arch/arm/faults.hh	/^    VirtualDataAbort(Addr _addr, TlbEntry::DomainType _domain, bool _write,$/;"	f	class:ArmISA::VirtualDataAbort
VirtualDataAbort	src/arch/arm/faults.hh	/^class VirtualDataAbort : public AbortFault<VirtualDataAbort>$/;"	c	namespace:ArmISA
VirtualFastInterrupt	src/arch/arm/faults.cc	/^VirtualFastInterrupt::VirtualFastInterrupt()$/;"	f	class:ArmISA::VirtualFastInterrupt
VirtualFastInterrupt	src/arch/arm/faults.hh	/^class VirtualFastInterrupt : public ArmFaultVals<VirtualFastInterrupt>$/;"	c	namespace:ArmISA
VirtualID	src/dev/arm/vgic.hh	/^    Bitfield<9,0> VirtualID;$/;"	m	class:VGic
VirtualInterrupt	src/arch/arm/faults.cc	/^VirtualInterrupt::VirtualInterrupt()$/;"	f	class:ArmISA::VirtualInterrupt
VirtualInterrupt	src/arch/arm/faults.hh	/^class VirtualInterrupt : public ArmFaultVals<VirtualInterrupt>$/;"	c	namespace:ArmISA
VirtualList	src/dev/sinic.hh	/^    typedef std::list<unsigned> VirtualList;$/;"	t	class:Sinic::Device
VirtualMask	src/dev/sinicreg.hh	/^static const int VirtualMask = 0xff;$/;"	m	namespace:Sinic::Regs
VirtualReg	src/dev/sinic.hh	/^        VirtualReg()$/;"	f	struct:Sinic::Device::VirtualReg
VirtualReg	src/dev/sinic.hh	/^    struct VirtualReg {$/;"	s	class:Sinic::Device
VirtualRegs	src/dev/sinic.hh	/^    typedef std::vector<VirtualReg> VirtualRegs;$/;"	t	class:Sinic::Device
VirtualShift	src/dev/sinicreg.hh	/^static const int VirtualShift = 8;$/;"	m	namespace:Sinic::Regs
VldMultOp	src/arch/arm/insts/macromem.cc	/^VldMultOp::VldMultOp(const char *mnem, ExtMachInst machInst, OpClass __opClass,$/;"	f	class:ArmISA::VldMultOp
VldMultOp	src/arch/arm/insts/macromem.hh	/^class VldMultOp : public PredMacroOp$/;"	c	namespace:ArmISA
VldMultOp64	src/arch/arm/insts/macromem.cc	/^VldMultOp64::VldMultOp64(const char *mnem, ExtMachInst machInst,$/;"	f	class:ArmISA::VldMultOp64
VldMultOp64	src/arch/arm/insts/macromem.hh	/^class VldMultOp64 : public PredMacroOp$/;"	c	namespace:ArmISA
VldSingleOp	src/arch/arm/insts/macromem.cc	/^VldSingleOp::VldSingleOp(const char *mnem, ExtMachInst machInst,$/;"	f	class:ArmISA::VldSingleOp
VldSingleOp	src/arch/arm/insts/macromem.hh	/^class VldSingleOp : public PredMacroOp$/;"	c	namespace:ArmISA
VldSingleOp64	src/arch/arm/insts/macromem.cc	/^VldSingleOp64::VldSingleOp64(const char *mnem, ExtMachInst machInst,$/;"	f	class:ArmISA::VldSingleOp64
VldSingleOp64	src/arch/arm/insts/macromem.hh	/^class VldSingleOp64 : public PredMacroOp$/;"	c	namespace:ArmISA
VmsaTran	src/arch/arm/faults.hh	/^        VmsaTran,$/;"	e	enum:ArmISA::ArmFault::TranMethod
VncInput	src/base/vnc/Vnc.py	/^class VncInput(SimObject):$/;"	c
VncInput	src/base/vnc/vncinput.cc	/^VncInput::VncInput(const Params *p)$/;"	f	class:VncInput
VncInput	src/base/vnc/vncinput.hh	/^class VncInput : public SimObject$/;"	c
VncKeyboard	src/base/vnc/vncinput.hh	/^class VncKeyboard$/;"	c
VncMouse	src/base/vnc/vncinput.hh	/^class VncMouse$/;"	c
VncOK	src/base/vnc/vncserver.hh	/^    const static uint32_t VncOK   = 0;$/;"	m	class:VncServer
VncServer	src/base/vnc/Vnc.py	/^class VncServer(VncInput):$/;"	c
VncServer	src/base/vnc/vncserver.cc	/^VncServer::VncServer(const Params *p)$/;"	f	class:VncServer
VncServer	src/base/vnc/vncserver.hh	/^class VncServer : public VncInput$/;"	c
Voltage	src/python/m5/params.py	/^class Voltage(float,ParamValue):$/;"	c
VoltageDomain	src/sim/VoltageDomain.py	/^class VoltageDomain(SimObject):$/;"	c
VoltageDomain	src/sim/voltage_domain.cc	/^VoltageDomain::VoltageDomain(const Params *p)$/;"	f	class:VoltageDomain
VoltageDomain	src/sim/voltage_domain.hh	/^class VoltageDomain : public SimObject$/;"	c
VstMultOp	src/arch/arm/insts/macromem.cc	/^VstMultOp::VstMultOp(const char *mnem, ExtMachInst machInst, OpClass __opClass,$/;"	f	class:ArmISA::VstMultOp
VstMultOp	src/arch/arm/insts/macromem.hh	/^class VstMultOp : public PredMacroOp$/;"	c	namespace:ArmISA
VstMultOp64	src/arch/arm/insts/macromem.cc	/^VstMultOp64::VstMultOp64(const char *mnem, ExtMachInst machInst,$/;"	f	class:ArmISA::VstMultOp64
VstMultOp64	src/arch/arm/insts/macromem.hh	/^class VstMultOp64 : public PredMacroOp$/;"	c	namespace:ArmISA
VstSingleOp	src/arch/arm/insts/macromem.cc	/^VstSingleOp::VstSingleOp(const char *mnem, ExtMachInst machInst,$/;"	f	class:ArmISA::VstSingleOp
VstSingleOp	src/arch/arm/insts/macromem.hh	/^class VstSingleOp : public PredMacroOp$/;"	c	namespace:ArmISA
VstSingleOp64	src/arch/arm/insts/macromem.cc	/^VstSingleOp64::VstSingleOp64(const char *mnem, ExtMachInst machInst,$/;"	f	class:ArmISA::VstSingleOp64
VstSingleOp64	src/arch/arm/insts/macromem.hh	/^class VstSingleOp64 : public PredMacroOp$/;"	c	namespace:ArmISA
WCSR	src/dev/ns_gige_reg.h	/^    WCSR =              0x40,$/;"	e	enum:DeviceRegisterAddress
WDCC_ACKMC	src/dev/ide_wdcreg.h	/^#define WDCC_ACKMC	/;"	d
WDCC_CHECK_PWR	src/dev/ide_wdcreg.h	/^#define WDCC_CHECK_PWR	/;"	d
WDCC_DIAGNOSE	src/dev/ide_wdcreg.h	/^#define WDCC_DIAGNOSE	/;"	d
WDCC_FLUSHCACHE	src/dev/ide_wdcreg.h	/^#define WDCC_FLUSHCACHE	/;"	d
WDCC_FLUSHCACHE_EXT	src/dev/ide_wdcreg.h	/^#define WDCC_FLUSHCACHE_EXT	/;"	d
WDCC_FORMAT	src/dev/ide_wdcreg.h	/^#define WDCC_FORMAT	/;"	d
WDCC_IDENTIFY	src/dev/ide_wdcreg.h	/^#define WDCC_IDENTIFY	/;"	d
WDCC_IDLE	src/dev/ide_wdcreg.h	/^#define WDCC_IDLE	/;"	d
WDCC_IDLE_IMMED	src/dev/ide_wdcreg.h	/^#define WDCC_IDLE_IMMED	/;"	d
WDCC_IDP	src/dev/ide_wdcreg.h	/^#define WDCC_IDP	/;"	d
WDCC_LOCK	src/dev/ide_wdcreg.h	/^#define WDCC_LOCK	/;"	d
WDCC_NOP	src/dev/ide_wdcreg.h	/^#define WDCC_NOP	/;"	d
WDCC_READ	src/dev/ide_wdcreg.h	/^#define WDCC_READ	/;"	d
WDCC_READDMA	src/dev/ide_wdcreg.h	/^#define WDCC_READDMA	/;"	d
WDCC_READDMA_EXT	src/dev/ide_wdcreg.h	/^#define WDCC_READDMA_EXT	/;"	d
WDCC_READMULTI	src/dev/ide_wdcreg.h	/^#define WDCC_READMULTI	/;"	d
WDCC_READMULTI_EXT	src/dev/ide_wdcreg.h	/^#define WDCC_READMULTI_EXT	/;"	d
WDCC_READ_EXT	src/dev/ide_wdcreg.h	/^#define WDCC_READ_EXT	/;"	d
WDCC_RECAL	src/dev/ide_wdcreg.h	/^#define WDCC_RECAL	/;"	d
WDCC_SETMULTI	src/dev/ide_wdcreg.h	/^#define WDCC_SETMULTI	/;"	d
WDCC_SLEEP	src/dev/ide_wdcreg.h	/^#define WDCC_SLEEP	/;"	d
WDCC_STANDBY	src/dev/ide_wdcreg.h	/^#define WDCC_STANDBY	/;"	d
WDCC_STANDBY_IMMED	src/dev/ide_wdcreg.h	/^#define WDCC_STANDBY_IMMED /;"	d
WDCC_UNLOCK	src/dev/ide_wdcreg.h	/^#define WDCC_UNLOCK	/;"	d
WDCC_WRITE	src/dev/ide_wdcreg.h	/^#define WDCC_WRITE	/;"	d
WDCC_WRITEDMA	src/dev/ide_wdcreg.h	/^#define WDCC_WRITEDMA	/;"	d
WDCC_WRITEDMA_EXT	src/dev/ide_wdcreg.h	/^#define WDCC_WRITEDMA_EXT	/;"	d
WDCC_WRITEMULTI	src/dev/ide_wdcreg.h	/^#define WDCC_WRITEMULTI	/;"	d
WDCC_WRITEMULTI_EXT	src/dev/ide_wdcreg.h	/^#define WDCC_WRITEMULTI_EXT	/;"	d
WDCC_WRITE_EXT	src/dev/ide_wdcreg.h	/^#define WDCC_WRITE_EXT	/;"	d
WDCC__LONG	src/dev/ide_wdcreg.h	/^#define WDCC__LONG	/;"	d
WDCC__NORETRY	src/dev/ide_wdcreg.h	/^#define WDCC__NORETRY	/;"	d
WDCE_ABRT	src/dev/ide_wdcreg.h	/^#define WDCE_ABRT	/;"	d
WDCE_AMNF	src/dev/ide_wdcreg.h	/^#define WDCE_AMNF	/;"	d
WDCE_BBK	src/dev/ide_wdcreg.h	/^#define WDCE_BBK	/;"	d
WDCE_CRC	src/dev/ide_wdcreg.h	/^#define WDCE_CRC	/;"	d
WDCE_IDNF	src/dev/ide_wdcreg.h	/^#define WDCE_IDNF	/;"	d
WDCE_MC	src/dev/ide_wdcreg.h	/^#define WDCE_MC	/;"	d
WDCE_MCR	src/dev/ide_wdcreg.h	/^#define WDCE_MCR	/;"	d
WDCE_TK0NF	src/dev/ide_wdcreg.h	/^#define WDCE_TK0NF	/;"	d
WDCE_UNC	src/dev/ide_wdcreg.h	/^#define WDCE_UNC	/;"	d
WDCI_CMD	src/dev/ide_wdcreg.h	/^#define WDCI_CMD	/;"	d
WDCI_IN	src/dev/ide_wdcreg.h	/^#define WDCI_IN	/;"	d
WDCI_RELEASE	src/dev/ide_wdcreg.h	/^#define WDCI_RELEASE	/;"	d
WDCS_BITS	src/dev/ide_wdcreg.h	/^#define WDCS_BITS	/;"	d
WDCS_BSY	src/dev/ide_wdcreg.h	/^#define WDCS_BSY	/;"	d
WDCS_CORR	src/dev/ide_wdcreg.h	/^#define WDCS_CORR	/;"	d
WDCS_DRDY	src/dev/ide_wdcreg.h	/^#define WDCS_DRDY	/;"	d
WDCS_DRQ	src/dev/ide_wdcreg.h	/^#define WDCS_DRQ	/;"	d
WDCS_DSC	src/dev/ide_wdcreg.h	/^#define WDCS_DSC	/;"	d
WDCS_DWF	src/dev/ide_wdcreg.h	/^#define WDCS_DWF	/;"	d
WDCS_ERR	src/dev/ide_wdcreg.h	/^#define WDCS_ERR	/;"	d
WDCS_IDX	src/dev/ide_wdcreg.h	/^#define WDCS_IDX	/;"	d
WDCTL_4BIT	src/dev/ide_wdcreg.h	/^#define WDCTL_4BIT	/;"	d
WDCTL_IDS	src/dev/ide_wdcreg.h	/^#define WDCTL_IDS	/;"	d
WDCTL_RST	src/dev/ide_wdcreg.h	/^#define WDCTL_RST	/;"	d
WDC_CAP_DMA	src/dev/ide_atareg.h	/^#define WDC_CAP_DMA	/;"	d
WDC_CAP_IORDY	src/dev/ide_atareg.h	/^#define WDC_CAP_IORDY	/;"	d
WDC_CAP_IORDY_DSBL	src/dev/ide_atareg.h	/^#define WDC_CAP_IORDY_DSBL /;"	d
WDC_CAP_LBA	src/dev/ide_atareg.h	/^#define WDC_CAP_LBA	/;"	d
WDC_CFG_ATAPI	src/dev/ide_atareg.h	/^#define WDC_CFG_ATAPI	/;"	d
WDC_CFG_ATAPI_MASK	src/dev/ide_atareg.h	/^#define WDC_CFG_ATAPI_MASK	/;"	d
WDC_CMD1_AHEAD	src/dev/ide_atareg.h	/^#define WDC_CMD1_AHEAD	/;"	d
WDC_CMD1_CACHE	src/dev/ide_atareg.h	/^#define WDC_CMD1_CACHE	/;"	d
WDC_CMD1_DVRST	src/dev/ide_atareg.h	/^#define WDC_CMD1_DVRST	/;"	d
WDC_CMD1_HPA	src/dev/ide_atareg.h	/^#define WDC_CMD1_HPA	/;"	d
WDC_CMD1_NOP	src/dev/ide_atareg.h	/^#define WDC_CMD1_NOP	/;"	d
WDC_CMD1_PKT	src/dev/ide_atareg.h	/^#define WDC_CMD1_PKT	/;"	d
WDC_CMD1_PM	src/dev/ide_atareg.h	/^#define WDC_CMD1_PM	/;"	d
WDC_CMD1_RB	src/dev/ide_atareg.h	/^#define WDC_CMD1_RB	/;"	d
WDC_CMD1_REMOV	src/dev/ide_atareg.h	/^#define WDC_CMD1_REMOV	/;"	d
WDC_CMD1_RLSE	src/dev/ide_atareg.h	/^#define WDC_CMD1_RLSE	/;"	d
WDC_CMD1_SEC	src/dev/ide_atareg.h	/^#define WDC_CMD1_SEC	/;"	d
WDC_CMD1_SMART	src/dev/ide_atareg.h	/^#define WDC_CMD1_SMART	/;"	d
WDC_CMD1_SRV	src/dev/ide_atareg.h	/^#define WDC_CMD1_SRV	/;"	d
WDC_CMD1_WB	src/dev/ide_atareg.h	/^#define WDC_CMD1_WB	/;"	d
WDC_CMD2_DM	src/dev/ide_atareg.h	/^#define WDC_CMD2_DM	/;"	d
WDC_CMD2_RMSN	src/dev/ide_atareg.h	/^#define WDC_CMD2_RMSN	/;"	d
WDC_EXT_GEOM	src/dev/ide_atareg.h	/^#define WDC_EXT_GEOM	/;"	d
WDC_EXT_MODES	src/dev/ide_atareg.h	/^#define WDC_EXT_MODES	/;"	d
WDC_EXT_UDMA_MODES	src/dev/ide_atareg.h	/^#define WDC_EXT_UDMA_MODES	/;"	d
WDC_MULTI_MASK	src/dev/ide_atareg.h	/^#define WDC_MULTI_MASK /;"	d
WDC_MULTI_VALID	src/dev/ide_atareg.h	/^#define WDC_MULTI_VALID /;"	d
WDC_QUEUE_DEPTH_MASK	src/dev/ide_atareg.h	/^#define WDC_QUEUE_DEPTH_MASK /;"	d
WDC_RMSN_SUPP	src/dev/ide_atareg.h	/^#define WDC_RMSN_SUPP /;"	d
WDC_RMSN_SUPP_MASK	src/dev/ide_atareg.h	/^#define WDC_RMSN_SUPP_MASK /;"	d
WDC_SEC_EN	src/dev/ide_atareg.h	/^#define WDC_SEC_EN	/;"	d
WDC_SEC_ESE_SUPP	src/dev/ide_atareg.h	/^#define WDC_SEC_ESE_SUPP /;"	d
WDC_SEC_EXP	src/dev/ide_atareg.h	/^#define WDC_SEC_EXP	/;"	d
WDC_SEC_FROZEN	src/dev/ide_atareg.h	/^#define WDC_SEC_FROZEN	/;"	d
WDC_SEC_LEV_MAX	src/dev/ide_atareg.h	/^#define WDC_SEC_LEV_MAX	/;"	d
WDC_SEC_LOCKED	src/dev/ide_atareg.h	/^#define WDC_SEC_LOCKED	/;"	d
WDC_SEC_SUPP	src/dev/ide_atareg.h	/^#define WDC_SEC_SUPP	/;"	d
WDC_VER_ATA1	src/dev/ide_atareg.h	/^#define WDC_VER_ATA1	/;"	d
WDC_VER_ATA10	src/dev/ide_atareg.h	/^#define WDC_VER_ATA10	/;"	d
WDC_VER_ATA11	src/dev/ide_atareg.h	/^#define WDC_VER_ATA11	/;"	d
WDC_VER_ATA12	src/dev/ide_atareg.h	/^#define WDC_VER_ATA12	/;"	d
WDC_VER_ATA13	src/dev/ide_atareg.h	/^#define WDC_VER_ATA13	/;"	d
WDC_VER_ATA14	src/dev/ide_atareg.h	/^#define WDC_VER_ATA14	/;"	d
WDC_VER_ATA2	src/dev/ide_atareg.h	/^#define WDC_VER_ATA2	/;"	d
WDC_VER_ATA3	src/dev/ide_atareg.h	/^#define WDC_VER_ATA3	/;"	d
WDC_VER_ATA4	src/dev/ide_atareg.h	/^#define WDC_VER_ATA4	/;"	d
WDC_VER_ATA5	src/dev/ide_atareg.h	/^#define WDC_VER_ATA5	/;"	d
WDC_VER_ATA6	src/dev/ide_atareg.h	/^#define WDC_VER_ATA6	/;"	d
WDC_VER_ATA7	src/dev/ide_atareg.h	/^#define WDC_VER_ATA7	/;"	d
WDC_VER_ATA8	src/dev/ide_atareg.h	/^#define WDC_VER_ATA8	/;"	d
WDC_VER_ATA9	src/dev/ide_atareg.h	/^#define WDC_VER_ATA9	/;"	d
WDSD_CHS	src/dev/ide_wdcreg.h	/^#define WDSD_CHS	/;"	d
WDSD_IBM	src/dev/ide_wdcreg.h	/^#define WDSD_IBM	/;"	d
WDSD_LBA	src/dev/ide_wdcreg.h	/^#define WDSD_LBA	/;"	d
WDSF_8BIT_PIO_DS	src/dev/ide_wdcreg.h	/^#define WDSF_8BIT_PIO_DS	/;"	d
WDSF_8BIT_PIO_EN	src/dev/ide_wdcreg.h	/^#define WDSF_8BIT_PIO_EN	/;"	d
WDSF_AAM_DS	src/dev/ide_wdcreg.h	/^#define WDSF_AAM_DS	/;"	d
WDSF_AAM_EN	src/dev/ide_wdcreg.h	/^#define WDSF_AAM_EN	/;"	d
WDSF_APM_DS	src/dev/ide_wdcreg.h	/^#define WDSF_APM_DS	/;"	d
WDSF_APM_EN	src/dev/ide_wdcreg.h	/^#define WDSF_APM_EN	/;"	d
WDSF_CFA_MODE1_DS	src/dev/ide_wdcreg.h	/^#define WDSF_CFA_MODE1_DS	/;"	d
WDSF_CFA_MODE1_EN	src/dev/ide_wdcreg.h	/^#define WDSF_CFA_MODE1_EN	/;"	d
WDSF_ECC_DS	src/dev/ide_wdcreg.h	/^#define WDSF_ECC_DS	/;"	d
WDSF_ECC_EN	src/dev/ide_wdcreg.h	/^#define WDSF_ECC_EN	/;"	d
WDSF_EN_WR_CACHE	src/dev/ide_wdcreg.h	/^#define WDSF_EN_WR_CACHE	/;"	d
WDSF_POD_DS	src/dev/ide_wdcreg.h	/^#define WDSF_POD_DS	/;"	d
WDSF_POD_EN	src/dev/ide_wdcreg.h	/^#define WDSF_POD_EN	/;"	d
WDSF_PREFETCH_SET	src/dev/ide_wdcreg.h	/^#define WDSF_PREFETCH_SET	/;"	d
WDSF_PUIS_DS	src/dev/ide_wdcreg.h	/^#define WDSF_PUIS_DS	/;"	d
WDSF_PUIS_EN	src/dev/ide_wdcreg.h	/^#define WDSF_PUIS_EN	/;"	d
WDSF_PUIS_SPINUP	src/dev/ide_wdcreg.h	/^#define WDSF_PUIS_SPINUP	/;"	d
WDSF_READAHEAD_DS	src/dev/ide_wdcreg.h	/^#define WDSF_READAHEAD_DS	/;"	d
WDSF_READAHEAD_EN	src/dev/ide_wdcreg.h	/^#define WDSF_READAHEAD_EN	/;"	d
WDSF_READ_NATIVE_MAX	src/dev/ide_wdcreg.h	/^#define WDSF_READ_NATIVE_MAX /;"	d
WDSF_REASSIGN_DS	src/dev/ide_wdcreg.h	/^#define WDSF_REASSIGN_DS	/;"	d
WDSF_REASSIGN_EN	src/dev/ide_wdcreg.h	/^#define WDSF_REASSIGN_EN	/;"	d
WDSF_RETRY_DS	src/dev/ide_wdcreg.h	/^#define WDSF_RETRY_DS	/;"	d
WDSF_RETRY_EN	src/dev/ide_wdcreg.h	/^#define WDSF_RETRY_EN	/;"	d
WDSF_RLSE_DS	src/dev/ide_wdcreg.h	/^#define WDSF_RLSE_DS	/;"	d
WDSF_RLSE_EN	src/dev/ide_wdcreg.h	/^#define WDSF_RLSE_EN	/;"	d
WDSF_RMSN_DS	src/dev/ide_wdcreg.h	/^#define WDSF_RMSN_DS	/;"	d
WDSF_RMSN_EN	src/dev/ide_wdcreg.h	/^#define WDSF_RMSN_EN	/;"	d
WDSF_SEEK	src/dev/ide_wdcreg.h	/^#define WDSF_SEEK /;"	d
WDSF_SET_CACHE_SGMT	src/dev/ide_wdcreg.h	/^#define WDSF_SET_CACHE_SGMT	/;"	d
WDSF_SET_CURRENT	src/dev/ide_wdcreg.h	/^#define WDSF_SET_CURRENT	/;"	d
WDSF_SET_MODE	src/dev/ide_wdcreg.h	/^#define WDSF_SET_MODE	/;"	d
WDSF_SRV_DS	src/dev/ide_wdcreg.h	/^#define WDSF_SRV_DS	/;"	d
WDSF_SRV_EN	src/dev/ide_wdcreg.h	/^#define WDSF_SRV_EN	/;"	d
WDSF_VERIFY	src/dev/ide_wdcreg.h	/^#define WDSF_VERIFY /;"	d
WDSF_WRITE_CACHE_DS	src/dev/ide_wdcreg.h	/^#define WDSF_WRITE_CACHE_DS	/;"	d
WO	src/arch/x86/decoder_tables.cc	/^        WO = WordImm,$/;"	e	enum:X86ISA::SizeType	file:
WORD_TO_DOUBLE	src/arch/arm/types.hh	/^        WORD_TO_DOUBLE,$/;"	e	enum:ArmISA::ConvertType
WORD_TO_DOUBLE	src/arch/mips/types.hh	/^    WORD_TO_DOUBLE,$/;"	e	enum:MipsISA::ConvertType
WORD_TO_LONG	src/arch/arm/types.hh	/^        WORD_TO_LONG,$/;"	e	enum:ArmISA::ConvertType
WORD_TO_LONG	src/arch/mips/types.hh	/^    WORD_TO_LONG,$/;"	e	enum:MipsISA::ConvertType
WORD_TO_PS	src/arch/arm/types.hh	/^        WORD_TO_PS,$/;"	e	enum:ArmISA::ConvertType
WORD_TO_PS	src/arch/mips/types.hh	/^    WORD_TO_PS,$/;"	e	enum:MipsISA::ConvertType
WORD_TO_SINGLE	src/arch/arm/types.hh	/^        WORD_TO_SINGLE,$/;"	e	enum:ArmISA::ConvertType
WORD_TO_SINGLE	src/arch/mips/types.hh	/^    WORD_TO_SINGLE,$/;"	e	enum:MipsISA::ConvertType
WO_BITLINE	src/mem/ruby/network/orion/Buffer/BitlineUnit.hh	/^      WO_BITLINE$/;"	e	enum:BitlineUnit::BitlineModel
WO_WORDLINE	src/mem/ruby/network/orion/Buffer/WordlineUnit.hh	/^      WO_WORDLINE$/;"	e	enum:WordlineUnit::WordlineModel
WRITE_MODE	src/mem/ruby/network/orion/NetworkPower.hh	/^#define WRITE_MODE /;"	d
WaitForClientInit	src/base/vnc/vncserver.hh	/^        WaitForClientInit,$/;"	e	enum:VncServer::ConnectionState
WaitForProtocolVersion	src/base/vnc/vncserver.hh	/^        WaitForProtocolVersion,$/;"	e	enum:VncServer::ConnectionState
WaitForSecurityResponse	src/base/vnc/vncserver.hh	/^        WaitForSecurityResponse,$/;"	e	enum:VncServer::ConnectionState
WaitRec	src/sim/process.hh	/^        WaitRec(Addr chan, ThreadContext *ctx)$/;"	f	struct:Process::WaitRec
WaitRec	src/sim/process.hh	/^    struct WaitRec$/;"	s	class:Process
Waiting	src/arch/x86/pagetable_walker.hh	/^                Waiting,$/;"	e	enum:X86ISA::Walker::WalkerState::State
WaitingBufType	src/mem/ruby/slicc_interface/AbstractController.hh	/^    typedef std::map< Address, MsgVecType* > WaitingBufType;$/;"	t	class:AbstractController
Walker	src/arch/x86/pagetable_walker.hh	/^        Walker(const Params *params) :$/;"	f	class:X86ISA::Walker
Walker	src/arch/x86/pagetable_walker.hh	/^    class Walker : public MemObject$/;"	c	namespace:X86ISA
WalkerPort	src/arch/x86/pagetable_walker.hh	/^            WalkerPort(const std::string &_name, Walker * _walker) :$/;"	f	class:X86ISA::Walker::WalkerPort
WalkerPort	src/arch/x86/pagetable_walker.hh	/^        class WalkerPort : public MasterPort$/;"	c	class:X86ISA::Walker
WalkerSenderState	src/arch/x86/pagetable_walker.hh	/^            WalkerSenderState(WalkerState * _senderWalk) :$/;"	f	struct:X86ISA::Walker::WalkerSenderState
WalkerSenderState	src/arch/x86/pagetable_walker.hh	/^        struct WalkerSenderState : public Packet::SenderState$/;"	s	class:X86ISA::Walker
WalkerState	src/arch/arm/table_walker.cc	/^TableWalker::WalkerState::WalkerState() : stage2Tran(NULL), l2Desc(l1Desc)$/;"	f	class:TableWalker::WalkerState
WalkerState	src/arch/arm/table_walker.hh	/^    class WalkerState$/;"	c	class:ArmISA::TableWalker
WalkerState	src/arch/x86/pagetable_walker.hh	/^            WalkerState(Walker * _walker, BaseTLB::Translation *_translation,$/;"	f	class:X86ISA::Walker::WalkerState
WalkerState	src/arch/x86/pagetable_walker.hh	/^        class WalkerState$/;"	c	class:X86ISA::Walker
WarnFunc	src/arch/generic/debugfaults.hh	/^        WarnFunc,$/;"	e	enum:GenericISA::M5DebugFault::DebugFunc
WarnOnceFunc	src/arch/generic/debugfaults.hh	/^        WarnOnceFunc$/;"	e	enum:GenericISA::M5DebugFault::DebugFunc
WatchDogReset	src/arch/sparc/faults.hh	/^class WatchDogReset : public SparcFault<WatchDogReset> {};$/;"	c	namespace:SparcISA
WatchdogControlReg	src/dev/arm/timer_cpulocal.hh	/^            WatchdogControlReg     = 0x28,$/;"	e	enum:CpuLocalTimer::Timer::__anon68
WatchdogCounterReg	src/dev/arm/timer_cpulocal.hh	/^            WatchdogCounterReg     = 0x24,$/;"	e	enum:CpuLocalTimer::Timer::__anon68
WatchdogDisableReg	src/dev/arm/timer_cpulocal.hh	/^            WatchdogDisableReg     = 0x34,$/;"	e	enum:CpuLocalTimer::Timer::__anon68
WatchdogIntStatusReg	src/dev/arm/timer_cpulocal.hh	/^            WatchdogIntStatusReg   = 0x2C,$/;"	e	enum:CpuLocalTimer::Timer::__anon68
WatchdogLoadReg	src/dev/arm/timer_cpulocal.hh	/^            WatchdogLoadReg        = 0x20,$/;"	e	enum:CpuLocalTimer::Timer::__anon68
WatchdogResetStatusReg	src/dev/arm/timer_cpulocal.hh	/^            WatchdogResetStatusReg = 0x30,$/;"	e	enum:CpuLocalTimer::Timer::__anon68
WholeTranslationState	src/cpu/translation.hh	/^    WholeTranslationState(RequestPtr _req, RequestPtr _sreqLow,$/;"	f	class:WholeTranslationState
WholeTranslationState	src/cpu/translation.hh	/^    WholeTranslationState(RequestPtr _req, uint8_t *_data, uint64_t *_res,$/;"	f	class:WholeTranslationState
WholeTranslationState	src/cpu/translation.hh	/^class WholeTranslationState$/;"	c
WideIO_200_x128	src/mem/DRAMCtrl.py	/^class WideIO_200_x128(DRAMCtrl):$/;"	c
Width	src/base/bitmap.hh	/^        uint32_t Width;$/;"	m	struct:Bitmap::Info
WidthSpacingModel	src/mem/ruby/network/orion/Wire.hh	/^    enum WidthSpacingModel$/;"	g	class:Wire
WindowOverlap	src/arch/sparc/isa.hh	/^    static const int WindowOverlap = 8;$/;"	m	class:SparcISA::ISA
Wire	src/mem/ruby/network/orion/Wire.cc	/^Wire::Wire($/;"	f	class:Wire
Wire	src/mem/ruby/network/orion/Wire.hh	/^class Wire$/;"	c
WireBuffer	src/mem/ruby/system/WireBuffer.cc	/^WireBuffer::WireBuffer(const Params *p)$/;"	f	class:WireBuffer
WireBuffer	src/mem/ruby/system/WireBuffer.hh	/^class WireBuffer : public SimObject$/;"	c
WireLayerType	src/mem/ruby/network/orion/TechParameter.hh	/^    enum WireLayerType$/;"	g	class:TechParameter
WordBytes	src/arch/alpha/isa_traits.hh	/^    WordBytes = 4,$/;"	e	enum:AlphaISA::__anon1
WordBytes	src/arch/arm/isa_traits.hh	/^    const int WordBytes = 4;$/;"	m	namespace:ArmISA
WordBytes	src/arch/mips/isa_traits.hh	/^const int WordBytes = 4;$/;"	m	namespace:MipsISA
WordImm	src/arch/x86/decoder_tables.cc	/^        WordImm,$/;"	e	enum:X86ISA::SizeType	file:
WordlineModel	src/mem/ruby/network/orion/Buffer/WordlineUnit.hh	/^    enum WordlineModel$/;"	g	class:WordlineUnit
WordlineUnit	src/mem/ruby/network/orion/Buffer/WordlineUnit.cc	/^WordlineUnit::WordlineUnit($/;"	f	class:WordlineUnit
WordlineUnit	src/mem/ruby/network/orion/Buffer/WordlineUnit.hh	/^class WordlineUnit$/;"	c
WrapMode	src/dev/x86/i8042.hh	/^        WrapMode = 0xEE,$/;"	e	enum:X86ISA::PS2Mouse::Command
WrappedBlkVisitor	src/mem/cache/cache.hh	/^    typedef CacheBlkVisitorWrapper<Cache<TagStore>, BlkType> WrappedBlkVisitor;$/;"	t	class:Cache
Write	src/sim/tlb.hh	/^    enum Mode { Read, Write, Execute };$/;"	e	enum:BaseTLB::Mode
WriteCommandByte	src/dev/x86/i8042.hh	/^        WriteCommandByte = 0x60,$/;"	e	enum:X86ISA::I8042::Command
WriteControllerRamBase	src/dev/x86/i8042.hh	/^        WriteControllerRamBase = 0x60,$/;"	e	enum:X86ISA::I8042::Command
WriteDestReg	src/cpu/inorder/resources/use_def.hh	/^        WriteDestReg,$/;"	e	enum:UseDefUnit::Command
WriteInvalidateReq	src/mem/packet.hh	/^        WriteInvalidateReq,$/;"	e	enum:MemCmd::Command
WriteInvalidateResp	src/mem/packet.hh	/^        WriteInvalidateResp,$/;"	e	enum:MemCmd::Command
WriteKeyboardOutputBuff	src/dev/x86/i8042.hh	/^        WriteKeyboardOutputBuff = 0xD2,$/;"	e	enum:X86ISA::I8042::Command
WriteMouseOutputBuff	src/dev/x86/i8042.hh	/^        WriteMouseOutputBuff = 0xD3,$/;"	e	enum:X86ISA::I8042::Command
WriteOutputPort	src/dev/x86/i8042.hh	/^        WriteOutputPort = 0xD1,$/;"	e	enum:X86ISA::I8042::Command
WritePort	src/cpu/o3/FuncUnitConfig.py	/^class WritePort(FUDesc):$/;"	c
WriteReq	src/mem/packet.hh	/^        WriteReq,$/;"	e	enum:MemCmd::Command
WriteResp	src/mem/packet.hh	/^        WriteResp,$/;"	e	enum:MemCmd::Command
WriteToMouse	src/dev/x86/i8042.hh	/^        WriteToMouse = 0xD4,$/;"	e	enum:X86ISA::I8042::Command
WriteWait	src/dev/ide_disk.hh	/^    WriteWait,$/;"	e	enum:Events
Writeback	src/cpu/ozone/back_end.hh	/^    typedef SizeStruct Writeback;$/;"	t	class:BackEnd
Writeback	src/cpu/ozone/lw_back_end.hh	/^    typedef SizeStruct Writeback;$/;"	t	class:LWBackEnd
Writeback	src/mem/packet.hh	/^        Writeback,$/;"	e	enum:MemCmd::Command
WritebackEvent	src/cpu/o3/lsq_unit.hh	/^    class WritebackEvent : public Event {$/;"	c	class:LSQUnit
WritebackEvent	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::WritebackEvent::WritebackEvent(DynInstPtr &_inst, PacketPtr _pkt,$/;"	f	class:LSQUnit::WritebackEvent
WritebackEvent	src/cpu/ozone/lw_lsq.hh	/^    class WritebackEvent : public Event {$/;"	c	class:OzoneLWLSQ
WritebackEvent	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::WritebackEvent::WritebackEvent(DynInstPtr &_inst, PacketPtr _pkt,$/;"	f	class:OzoneLWLSQ::WritebackEvent
X	src/arch/x86/regs/int.hh	/^        Bitfield<15,0> X;$/;"	m	namespace:X86ISA
X86ACPIRSDP	src/arch/x86/X86System.py	/^from ACPI import X86ACPIRSDP$/;"	i
X86ACPIRSDP	src/arch/x86/bios/ACPI.py	/^class X86ACPIRSDP(SimObject):$/;"	c
X86ACPIRSDT	src/arch/x86/bios/ACPI.py	/^class X86ACPIRSDT(X86ACPISysDescTable):$/;"	c
X86ACPISysDescTable	src/arch/x86/bios/ACPI.py	/^class X86ACPISysDescTable(SimObject):$/;"	c
X86ACPIXSDT	src/arch/x86/bios/ACPI.py	/^class X86ACPIXSDT(X86ACPISysDescTable):$/;"	c
X86Abort	src/arch/x86/faults.hh	/^        X86Abort(const char * name, const char * mnem,$/;"	f	class:X86ISA::X86Abort
X86Abort	src/arch/x86/faults.hh	/^    class X86Abort : public X86FaultBase$/;"	c	namespace:X86ISA
X86AuxiliaryVectorTypes	src/arch/x86/process.hh	/^    enum X86AuxiliaryVectorTypes {$/;"	g	namespace:X86ISA
X86E820Entry	src/arch/x86/X86System.py	/^from E820 import X86E820Table, X86E820Entry$/;"	i
X86E820Entry	src/arch/x86/bios/E820.py	/^class X86E820Entry(SimObject):$/;"	c
X86E820Table	src/arch/x86/X86System.py	/^from E820 import X86E820Table, X86E820Entry$/;"	i
X86E820Table	src/arch/x86/bios/E820.py	/^class X86E820Table(SimObject):$/;"	c
X86Fault	src/arch/x86/faults.hh	/^        X86Fault(const char * name, const char * mnem,$/;"	f	class:X86ISA::X86Fault
X86Fault	src/arch/x86/faults.hh	/^    class X86Fault : public X86FaultBase$/;"	c	namespace:X86ISA
X86FaultBase	src/arch/x86/faults.hh	/^        X86FaultBase(const char * _faultName, const char * _mnem,$/;"	f	class:X86ISA::X86FaultBase
X86FaultBase	src/arch/x86/faults.hh	/^    class X86FaultBase : public FaultBase$/;"	c	namespace:X86ISA
X86I8259CascadeMode	src/dev/x86/I8259.py	/^class X86I8259CascadeMode(Enum):$/;"	c
X86ISA	src/arch/x86/X86ISA.py	/^class X86ISA(SimObject):$/;"	c
X86ISA	src/arch/x86/bios/acpi.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/bios/e820.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/bios/intelmp.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/bios/smbios.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/cpuid.cc	/^namespace X86ISA {$/;"	n	file:
X86ISA	src/arch/x86/cpuid.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/decoder.cc	/^namespace X86ISA$/;"	n	file:
X86ISA	src/arch/x86/decoder.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/decoder_tables.cc	/^namespace X86ISA$/;"	n	file:
X86ISA	src/arch/x86/emulenv.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/faults.cc	/^namespace X86ISA$/;"	n	file:
X86ISA	src/arch/x86/faults.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/insts/badmicroop.cc	/^namespace X86ISA$/;"	n	file:
X86ISA	src/arch/x86/insts/badmicroop.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/insts/macroop.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/insts/microfpop.cc	/^namespace X86ISA$/;"	n	file:
X86ISA	src/arch/x86/insts/microfpop.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/insts/microldstop.cc	/^namespace X86ISA$/;"	n	file:
X86ISA	src/arch/x86/insts/microldstop.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/insts/micromediaop.cc	/^namespace X86ISA$/;"	n	file:
X86ISA	src/arch/x86/insts/micromediaop.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/insts/microop.cc	/^namespace X86ISA$/;"	n	file:
X86ISA	src/arch/x86/insts/microop.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/insts/microregop.cc	/^namespace X86ISA$/;"	n	file:
X86ISA	src/arch/x86/insts/microregop.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/insts/static_inst.cc	/^namespace X86ISA$/;"	n	file:
X86ISA	src/arch/x86/insts/static_inst.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/interrupts.cc	/^namespace X86ISA$/;"	n	file:
X86ISA	src/arch/x86/interrupts.hh	/^namespace X86ISA {$/;"	n
X86ISA	src/arch/x86/intmessage.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/isa.cc	/^namespace X86ISA$/;"	n	file:
X86ISA	src/arch/x86/isa.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/isa_traits.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/kernel_stats.hh	/^namespace X86ISA {$/;"	n
X86ISA	src/arch/x86/linux/process.hh	/^namespace X86ISA {$/;"	n
X86ISA	src/arch/x86/locked_mem.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/memhelpers.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/microcode_rom.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/mmapped_ipr.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/pagetable.cc	/^namespace X86ISA$/;"	n	file:
X86ISA	src/arch/x86/pagetable.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/pagetable_walker.cc	/^namespace X86ISA {$/;"	n	file:
X86ISA	src/arch/x86/pagetable_walker.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/process.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/registers.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/regs/apic.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/regs/ccr.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/regs/float.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/regs/int.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/regs/misc.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/regs/msr.cc	/^namespace X86ISA$/;"	n	file:
X86ISA	src/arch/x86/regs/msr.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/regs/segment.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/remote_gdb.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/stacktrace.cc	/^namespace X86ISA$/;"	n	file:
X86ISA	src/arch/x86/stacktrace.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/system.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/tlb.cc	/^namespace X86ISA {$/;"	n	file:
X86ISA	src/arch/x86/tlb.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/types.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/utility.cc	/^namespace X86ISA {$/;"	n	file:
X86ISA	src/arch/x86/utility.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/vtophys.cc	/^namespace X86ISA$/;"	n	file:
X86ISA	src/arch/x86/vtophys.hh	/^namespace X86ISA$/;"	n
X86ISA	src/arch/x86/x86_traits.hh	/^namespace X86ISA$/;"	n
X86ISA	src/cpu/BaseCPU.py	/^    from X86ISA import X86ISA$/;"	i
X86ISA	src/dev/x86/cmos.hh	/^namespace X86ISA$/;"	n
X86ISA	src/dev/x86/i8042.hh	/^namespace X86ISA$/;"	n
X86ISA	src/dev/x86/i82094aa.hh	/^namespace X86ISA$/;"	n
X86ISA	src/dev/x86/i8237.hh	/^namespace X86ISA$/;"	n
X86ISA	src/dev/x86/i8254.hh	/^namespace X86ISA$/;"	n
X86ISA	src/dev/x86/i8259.hh	/^namespace X86ISA$/;"	n
X86ISA	src/dev/x86/intdev.hh	/^namespace X86ISA {$/;"	n
X86ISA	src/dev/x86/south_bridge.hh	/^namespace X86ISA$/;"	n
X86ISA	src/dev/x86/speaker.hh	/^namespace X86ISA$/;"	n
X86ISAInst	src/arch/x86/microcode_rom.hh	/^namespace X86ISAInst$/;"	n
X86IntLine	src/dev/x86/SouthBridge.py	/^from X86IntPin import X86IntLine$/;"	i
X86IntLine	src/dev/x86/X86IntPin.py	/^class X86IntLine(SimObject):$/;"	c
X86IntSinkPin	src/dev/x86/I82094AA.py	/^from X86IntPin import X86IntSinkPin$/;"	i
X86IntSinkPin	src/dev/x86/I8259.py	/^from X86IntPin import X86IntSourcePin, X86IntSinkPin$/;"	i
X86IntSinkPin	src/dev/x86/X86IntPin.py	/^class X86IntSinkPin(SimObject):$/;"	c
X86IntSourcePin	src/dev/x86/Cmos.py	/^from X86IntPin import X86IntSourcePin$/;"	i
X86IntSourcePin	src/dev/x86/I8042.py	/^from X86IntPin import X86IntSourcePin$/;"	i
X86IntSourcePin	src/dev/x86/I8254.py	/^from X86IntPin import X86IntSourcePin$/;"	i
X86IntSourcePin	src/dev/x86/I8259.py	/^from X86IntPin import X86IntSourcePin, X86IntSinkPin$/;"	i
X86IntSourcePin	src/dev/x86/X86IntPin.py	/^class X86IntSourcePin(SimObject):$/;"	c
X86Intel8254Timer	src/dev/x86/i8254.hh	/^        X86Intel8254Timer(const std::string &name, I8254 * _parent) :$/;"	f	class:X86ISA::I8254::X86Intel8254Timer
X86Intel8254Timer	src/dev/x86/i8254.hh	/^    class X86Intel8254Timer : public Intel8254Timer$/;"	c	class:X86ISA::I8254
X86IntelMPAddrSpaceMapping	src/arch/x86/bios/IntelMP.py	/^class X86IntelMPAddrSpaceMapping(X86IntelMPExtConfigEntry):$/;"	c
X86IntelMPAddressType	src/arch/x86/bios/IntelMP.py	/^class X86IntelMPAddressType(Enum):$/;"	c
X86IntelMPBaseConfigEntry	src/arch/x86/bios/IntelMP.py	/^class X86IntelMPBaseConfigEntry(SimObject):$/;"	c
X86IntelMPBus	src/arch/x86/bios/IntelMP.py	/^class X86IntelMPBus(X86IntelMPBaseConfigEntry):$/;"	c
X86IntelMPBusHierarchy	src/arch/x86/bios/IntelMP.py	/^class X86IntelMPBusHierarchy(X86IntelMPExtConfigEntry):$/;"	c
X86IntelMPCompatAddrSpaceMod	src/arch/x86/bios/IntelMP.py	/^class X86IntelMPCompatAddrSpaceMod(X86IntelMPExtConfigEntry):$/;"	c
X86IntelMPConfigTable	src/arch/x86/X86System.py	/^from IntelMP import X86IntelMPFloatingPointer, X86IntelMPConfigTable$/;"	i
X86IntelMPConfigTable	src/arch/x86/bios/IntelMP.py	/^class X86IntelMPConfigTable(SimObject):$/;"	c
X86IntelMPExtConfigEntry	src/arch/x86/bios/IntelMP.py	/^class X86IntelMPExtConfigEntry(SimObject):$/;"	c
X86IntelMPFloatingPointer	src/arch/x86/X86System.py	/^from IntelMP import X86IntelMPFloatingPointer, X86IntelMPConfigTable$/;"	i
X86IntelMPFloatingPointer	src/arch/x86/bios/IntelMP.py	/^class X86IntelMPFloatingPointer(SimObject):$/;"	c
X86IntelMPIOAPIC	src/arch/x86/bios/IntelMP.py	/^class X86IntelMPIOAPIC(X86IntelMPBaseConfigEntry):$/;"	c
X86IntelMPIOIntAssignment	src/arch/x86/bios/IntelMP.py	/^class X86IntelMPIOIntAssignment(X86IntelMPBaseConfigEntry):$/;"	c
X86IntelMPInterruptType	src/arch/x86/bios/IntelMP.py	/^class X86IntelMPInterruptType(Enum):$/;"	c
X86IntelMPLocalIntAssignment	src/arch/x86/bios/IntelMP.py	/^class X86IntelMPLocalIntAssignment(X86IntelMPBaseConfigEntry):$/;"	c
X86IntelMPPolarity	src/arch/x86/bios/IntelMP.py	/^class X86IntelMPPolarity(Enum):$/;"	c
X86IntelMPProcessor	src/arch/x86/bios/IntelMP.py	/^class X86IntelMPProcessor(X86IntelMPBaseConfigEntry):$/;"	c
X86IntelMPRangeList	src/arch/x86/bios/IntelMP.py	/^class X86IntelMPRangeList(Enum):$/;"	c
X86IntelMPTriggerMode	src/arch/x86/bios/IntelMP.py	/^class X86IntelMPTriggerMode(Enum):$/;"	c
X86Interrupt	src/arch/x86/faults.hh	/^        X86Interrupt(const char * name, const char * mnem,$/;"	f	class:X86ISA::X86Interrupt
X86Interrupt	src/arch/x86/faults.hh	/^    class X86Interrupt : public X86FaultBase$/;"	c	namespace:X86ISA
X86KvmCPU	src/cpu/kvm/X86KvmCPU.py	/^class X86KvmCPU(BaseKvmCPU):$/;"	c
X86KvmCPU	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::X86KvmCPU(X86KvmCPUParams *params)$/;"	f	class:X86KvmCPU
X86KvmCPU	src/cpu/kvm/x86_cpu.hh	/^class X86KvmCPU : public BaseKvmCPU$/;"	c
X86Linux32	src/arch/x86/linux/linux.hh	/^class X86Linux32 : public Linux$/;"	c
X86Linux64	src/arch/x86/linux/linux.hh	/^class X86Linux64 : public Linux$/;"	c
X86LiveProcess	src/arch/x86/process.cc	/^X86LiveProcess::X86LiveProcess(LiveProcessParams * params, ObjectFile *objFile,$/;"	f	class:X86LiveProcess
X86LiveProcess	src/arch/x86/process.hh	/^    class X86LiveProcess : public LiveProcess$/;"	c	namespace:X86ISA
X86LocalApic	src/arch/x86/X86LocalApic.py	/^class X86LocalApic(BasicPioDevice):$/;"	c
X86LocalApic	src/cpu/BaseCPU.py	/^    from X86LocalApic import X86LocalApic$/;"	i
X86MicroopBase	src/arch/x86/insts/microop.hh	/^        X86MicroopBase(ExtMachInst _machInst,$/;"	f	class:X86ISA::X86MicroopBase
X86MicroopBase	src/arch/x86/insts/microop.hh	/^    class X86MicroopBase : public X86StaticInst$/;"	c	namespace:X86ISA
X86Mode	src/arch/x86/types.hh	/^    enum X86Mode {$/;"	g	namespace:X86ISA
X86NativeTrace	src/arch/x86/X86NativeTrace.py	/^class X86NativeTrace(NativeTrace):$/;"	c
X86NativeTrace	src/arch/x86/nativetrace.cc	/^X86NativeTrace::X86NativeTrace(const Params *p)$/;"	f	class:Trace::X86NativeTrace
X86NativeTrace	src/arch/x86/nativetrace.hh	/^class X86NativeTrace : public NativeTrace$/;"	c	namespace:Trace
X86PagetableWalker	src/arch/x86/X86TLB.py	/^class X86PagetableWalker(MemObject):$/;"	c
X86RTC	src/dev/x86/cmos.hh	/^        X86RTC(EventManager *em, const std::string &n, const struct tm time,$/;"	f	class:X86ISA::Cmos::X86RTC
X86RTC	src/dev/x86/cmos.hh	/^    class X86RTC : public MC146818$/;"	c	class:X86ISA::Cmos
X86SMBiosBiosInformation	src/arch/x86/bios/SMBios.py	/^class X86SMBiosBiosInformation(X86SMBiosSMBiosStructure):$/;"	c
X86SMBiosSMBiosStructure	src/arch/x86/bios/SMBios.py	/^class X86SMBiosSMBiosStructure(SimObject):$/;"	c
X86SMBiosSMBiosTable	src/arch/x86/X86System.py	/^from SMBios import X86SMBiosSMBiosTable$/;"	i
X86SMBiosSMBiosTable	src/arch/x86/bios/SMBios.py	/^class X86SMBiosSMBiosTable(SimObject):$/;"	c
X86StaticInst	src/arch/x86/insts/static_inst.hh	/^        X86StaticInst(const char *mnem,$/;"	f	class:X86ISA::X86StaticInst
X86StaticInst	src/arch/x86/insts/static_inst.hh	/^    class X86StaticInst : public StaticInst$/;"	c	namespace:X86ISA
X86SubMode	src/arch/x86/types.hh	/^    enum X86SubMode {$/;"	g	namespace:X86ISA
X86System	src/arch/x86/X86System.py	/^class X86System(System):$/;"	c
X86System	src/arch/x86/system.cc	/^X86System::X86System(Params *p) :$/;"	f	class:X86System
X86System	src/arch/x86/system.hh	/^class X86System : public System$/;"	c
X86TLB	src/arch/x86/X86TLB.py	/^class X86TLB(BaseTLB):$/;"	c
X86TLB	src/cpu/BaseCPU.py	/^    from X86TLB import X86TLB$/;"	i
X86Trap	src/arch/x86/faults.hh	/^        X86Trap(const char * name, const char * mnem,$/;"	f	class:X86ISA::X86Trap
X86Trap	src/arch/x86/faults.hh	/^    class X86Trap : public X86FaultBase$/;"	c	namespace:X86ISA
X86_64	src/base/loader/object_file.hh	/^        X86_64,$/;"	e	enum:ObjectFile::Arch
X86_64LinuxProcess	src/arch/x86/linux/process.cc	/^X86_64LinuxProcess::X86_64LinuxProcess(LiveProcessParams * params,$/;"	f	class:X86_64LinuxProcess
X86_64LinuxProcess	src/arch/x86/linux/process.hh	/^class X86_64LinuxProcess : public X86_64LiveProcess$/;"	c	namespace:X86ISA
X86_64LiveProcess	src/arch/x86/process.cc	/^X86_64LiveProcess::X86_64LiveProcess(LiveProcessParams *params,$/;"	f	class:X86_64LiveProcess
X86_64LiveProcess	src/arch/x86/process.hh	/^    class X86_64LiveProcess : public X86LiveProcess$/;"	c	namespace:X86ISA
X87FpExceptionPending	src/arch/x86/faults.hh	/^        X87FpExceptionPending() :$/;"	f	class:X86ISA::X87FpExceptionPending
X87FpExceptionPending	src/arch/x86/faults.hh	/^    class X87FpExceptionPending : public X86Fault$/;"	c	namespace:X86ISA
X87StatusBit	src/arch/x86/regs/misc.hh	/^    enum X87StatusBit {$/;"	g	namespace:X86ISA
XPelsPerMeter	src/base/bitmap.hh	/^        uint32_t XPelsPerMeter;$/;"	m	struct:Bitmap::Info
XReg	src/arch/arm/insts/neon64_mem.hh	/^typedef uint64_t XReg;$/;"	t	namespace:ArmISA
XSDT	src/arch/x86/bios/acpi.cc	/^X86ISA::ACPI::XSDT::XSDT(Params *p) :$/;"	f	class:X86ISA::ACPI::XSDT
XSDT	src/arch/x86/bios/acpi.hh	/^class XSDT : public SysDescTable$/;"	c	namespace:X86ISA::ACPI
XferCap	src/dev/CopyEngine.py	/^    XferCap = Param.MemorySize('4kB', "Number of bits of transfer size that are supported")$/;"	v	class:CopyEngine
YPelsPerMeter	src/base/bitmap.hh	/^        uint32_t YPelsPerMeter;$/;"	m	struct:Bitmap::Info
ZEBit	src/arch/x86/regs/misc.hh	/^        ZEBit = 1 << 2,$/;"	e	enum:X86ISA::X87StatusBit
ZF	src/arch/x86/insts/microop.hh	/^            ZF,$/;"	e	enum:X86ISA::ConditionTests::CondTest
ZFBit	src/arch/x86/regs/misc.hh	/^        ZFBit = 1 << 6,$/;"	e	enum:X86ISA::CondFlagBit
ZMAGIC	src/base/loader/exec_aout.h	/^#define	ZMAGIC	/;"	d
ZW	src/arch/x86/decoder_tables.cc	/^        ZW = ZWordImm,$/;"	e	enum:X86ISA::SizeType	file:
ZWordImm	src/arch/x86/decoder_tables.cc	/^        ZWordImm,$/;"	e	enum:X86ISA::SizeType	file:
ZeroCopyMark	src/dev/sinic.hh	/^        uint32_t ZeroCopyMark; \/\/ 0x1c$/;"	m	struct:Sinic::Device::__anon83
ZeroCopySize	src/dev/sinic.hh	/^        uint32_t ZeroCopySize; \/\/ 0x18$/;"	m	struct:Sinic::Device::__anon83
ZeroPGE	src/arch/alpha/linux/system.hh	/^    Addr ZeroPGE() const   { return KernelStart + 0x0A000; }$/;"	f	class:LinuxAlphaSystem
ZeroPGE	src/arch/mips/linux/system.hh	/^    Addr ZeroPGE() const   { return KernelStart + 0x0A000; }$/;"	f	class:LinuxMipsSystem
ZeroReg	src/arch/alpha/registers.hh	/^const RegIndex ZeroReg = 31;     \/\/ architecturally meaningful$/;"	m	namespace:AlphaISA
ZeroReg	src/arch/arm/registers.hh	/^const int ZeroReg = INTREG_ZERO;$/;"	m	namespace:ArmISA
ZeroReg	src/arch/mips/registers.hh	/^const int ZeroReg = 0;$/;"	m	namespace:MipsISA
ZeroReg	src/arch/power/registers.hh	/^const int ZeroReg = NumIntRegs - 1;$/;"	m	namespace:PowerISA
ZeroReg	src/arch/sparc/registers.hh	/^const int ZeroReg = 0;      \/\/ architecturally meaningful$/;"	m	namespace:SparcISA
ZeroReg	src/arch/x86/registers.hh	/^const int ZeroReg = NUM_INTREGS;$/;"	m	namespace:X86ISA
_DEV_ATA_ATAREG_H_	src/dev/ide_atareg.h	/^#define _DEV_ATA_ATAREG_H_$/;"	d
_DEV_IC_WDCREG_H_	src/dev/ide_wdcreg.h	/^#define _DEV_IC_WDCREG_H_$/;"	d
_F64_readv	src/kern/tru64/tru64_syscalls.hh	/^        _F64_readv = 263,$/;"	e	enum:SystemCalls::__anon102
_F64_writev	src/kern/tru64/tru64_syscalls.hh	/^        _F64_writev = 264,$/;"	e	enum:SystemCalls::__anon102
_GLIBCPP_USE_C99	src/base/stats/text.cc	/^#define _GLIBCPP_USE_C99 /;"	d	file:
_NextEthernetAddr	src/python/m5/params.py	/^_NextEthernetAddr = "00:90:00:00:00:01"$/;"	v
_SYM_H	src/base/loader/coff_sym.h	/^#define _SYM_H$/;"	d
_SYS_EXEC_AOUT_H_	src/base/loader/exec_aout.h	/^#define _SYS_EXEC_AOUT_H_$/;"	d
_SYS_EXEC_ECOFF_H_	src/base/loader/exec_ecoff.h	/^#define	_SYS_EXEC_ECOFF_H_$/;"	d
_SYS_NMLN	src/kern/linux/linux.hh	/^    static const int _SYS_NMLN = 65;$/;"	m	class:Linux
_SYS_NMLN	src/kern/operatingsystem.hh	/^    static const int _SYS_NMLN = 65;$/;"	m	class:OperatingSystem
_SYS_NMLN	src/kern/solaris/solaris.hh	/^    static const int _SYS_NMLN = 257;$/;"	m	class:Solaris
_SYS_NMLN	src/kern/tru64/tru64.hh	/^    static const int _SYS_NMLN = 32;$/;"	m	class:Tru64
__ABSTRACT_MEMORY_HH__	src/mem/abstract_mem.hh	/^#define __ABSTRACT_MEMORY_HH__$/;"	d
__ALPHA_ACCESS_H__	src/dev/alpha/access.h	/^#define __ALPHA_ACCESS_H__$/;"	d
__ALPHA_ALPHA_LINUX_LINUX_HH__	src/arch/alpha/linux/linux.hh	/^#define __ALPHA_ALPHA_LINUX_LINUX_HH__$/;"	d
__ALPHA_ALPHA_TRU64_TRU64_HH__	src/arch/alpha/tru64/tru64.hh	/^#define __ALPHA_ALPHA_TRU64_TRU64_HH__$/;"	d
__ALPHA_LINUX_PROCESS_HH__	src/arch/alpha/linux/process.hh	/^#define __ALPHA_LINUX_PROCESS_HH__$/;"	d
__AMPUNIT_H__	src/mem/ruby/network/orion/Buffer/AmpUnit.hh	/^#define __AMPUNIT_H__$/;"	d
__AOUT_MACHDEP_H__	src/arch/alpha/aout_machdep.h	/^#define __AOUT_MACHDEP_H__$/;"	d
__AOUT_OBJECT_HH__	src/base/loader/aout_object.hh	/^#define __AOUT_OBJECT_HH__$/;"	d
__ARBITER_H__	src/mem/ruby/network/orion/Allocator/Arbiter.hh	/^#define __ARBITER_H__$/;"	d
__ARCH_ALPHA_DECODER_HH__	src/arch/alpha/decoder.hh	/^#define __ARCH_ALPHA_DECODER_HH__$/;"	d
__ARCH_ALPHA_EV5_HH__	src/arch/alpha/ev5.hh	/^#define __ARCH_ALPHA_EV5_HH__$/;"	d
__ARCH_ALPHA_FAULTS_HH__	src/arch/alpha/faults.hh	/^#define __ARCH_ALPHA_FAULTS_HH__$/;"	d
__ARCH_ALPHA_FREEBSD_SYSTEM_HH__	src/arch/alpha/freebsd/system.hh	/^#define __ARCH_ALPHA_FREEBSD_SYSTEM_HH__$/;"	d
__ARCH_ALPHA_INTERRUPT_HH__	src/arch/alpha/interrupts.hh	/^#define __ARCH_ALPHA_INTERRUPT_HH__$/;"	d
__ARCH_ALPHA_IPR_HH__	src/arch/alpha/ipr.hh	/^#define __ARCH_ALPHA_IPR_HH__$/;"	d
__ARCH_ALPHA_ISA_HH__	src/arch/alpha/isa.hh	/^#define __ARCH_ALPHA_ISA_HH__$/;"	d
__ARCH_ALPHA_ISA_TRAITS_HH__	src/arch/alpha/isa_traits.hh	/^#define __ARCH_ALPHA_ISA_TRAITS_HH__$/;"	d
__ARCH_ALPHA_KERNEL_STATS_HH__	src/arch/alpha/kernel_stats.hh	/^#define __ARCH_ALPHA_KERNEL_STATS_HH__$/;"	d
__ARCH_ALPHA_LINUX_SYSTEM_HH__	src/arch/alpha/linux/system.hh	/^#define __ARCH_ALPHA_LINUX_SYSTEM_HH__$/;"	d
__ARCH_ALPHA_LOCKED_MEM_HH__	src/arch/alpha/locked_mem.hh	/^#define __ARCH_ALPHA_LOCKED_MEM_HH__$/;"	d
__ARCH_ALPHA_MICROCODE_ROM_HH__	src/arch/alpha/microcode_rom.hh	/^#define __ARCH_ALPHA_MICROCODE_ROM_HH__$/;"	d
__ARCH_ALPHA_MMAPPED_IPR_HH__	src/arch/alpha/mmapped_ipr.hh	/^#define __ARCH_ALPHA_MMAPPED_IPR_HH__$/;"	d
__ARCH_ALPHA_MT_HH__	src/arch/alpha/mt.hh	/^#define __ARCH_ALPHA_MT_HH__$/;"	d
__ARCH_ALPHA_OSFPAL_HH__	src/arch/alpha/osfpal.hh	/^#define __ARCH_ALPHA_OSFPAL_HH__$/;"	d
__ARCH_ALPHA_PAGETABLE_H__	src/arch/alpha/pagetable.hh	/^#define __ARCH_ALPHA_PAGETABLE_H__$/;"	d
__ARCH_ALPHA_PROCESS_HH__	src/arch/alpha/process.hh	/^#define __ARCH_ALPHA_PROCESS_HH__$/;"	d
__ARCH_ALPHA_REGISTERS_HH__	src/arch/alpha/registers.hh	/^#define __ARCH_ALPHA_REGISTERS_HH__$/;"	d
__ARCH_ALPHA_REGREDIR_HH__	src/arch/alpha/regredir.hh	/^#define __ARCH_ALPHA_REGREDIR_HH__$/;"	d
__ARCH_ALPHA_REMOTE_GDB_HH__	src/arch/alpha/remote_gdb.hh	/^#define __ARCH_ALPHA_REMOTE_GDB_HH__$/;"	d
__ARCH_ALPHA_STACKTRACE_HH__	src/arch/alpha/stacktrace.hh	/^#define __ARCH_ALPHA_STACKTRACE_HH__$/;"	d
__ARCH_ALPHA_SYSTEM_HH__	src/arch/alpha/system.hh	/^#define __ARCH_ALPHA_SYSTEM_HH__$/;"	d
__ARCH_ALPHA_TLB_HH__	src/arch/alpha/tlb.hh	/^#define __ARCH_ALPHA_TLB_HH__$/;"	d
__ARCH_ALPHA_TRU64_PROCESS_HH__	src/arch/alpha/tru64/process.hh	/^#define __ARCH_ALPHA_TRU64_PROCESS_HH__$/;"	d
__ARCH_ALPHA_TRU64_SYSTEM_HH__	src/arch/alpha/tru64/system.hh	/^#define __ARCH_ALPHA_TRU64_SYSTEM_HH__$/;"	d
__ARCH_ALPHA_TYPES_HH__	src/arch/alpha/types.hh	/^#define __ARCH_ALPHA_TYPES_HH__$/;"	d
__ARCH_ALPHA_UTILITY_HH__	src/arch/alpha/utility.hh	/^#define __ARCH_ALPHA_UTILITY_HH__$/;"	d
__ARCH_ALPHA_VPTR_HH__	src/sim/vptr.hh	/^#define __ARCH_ALPHA_VPTR_HH__$/;"	d
__ARCH_ALPHA_VTOPHYS_H__	src/arch/alpha/vtophys.hh	/^#define __ARCH_ALPHA_VTOPHYS_H__$/;"	d
__ARCH_ARM_DECODER_HH__	src/arch/arm/decoder.hh	/^#define __ARCH_ARM_DECODER_HH__$/;"	d
__ARCH_ARM_INSTS_BRANCH64_HH__	src/arch/arm/insts/branch64.hh	/^#define __ARCH_ARM_INSTS_BRANCH64_HH__$/;"	d
__ARCH_ARM_INSTS_BRANCH_HH__	src/arch/arm/insts/branch.hh	/^#define __ARCH_ARM_INSTS_BRANCH_HH__$/;"	d
__ARCH_ARM_INSTS_DATA64_HH__	src/arch/arm/insts/data64.hh	/^#define __ARCH_ARM_INSTS_DATA64_HH__$/;"	d
__ARCH_ARM_INSTS_FPLIB_HH__	src/arch/arm/insts/fplib.hh	/^#define __ARCH_ARM_INSTS_FPLIB_HH__$/;"	d
__ARCH_ARM_INSTS_MISC64_HH__	src/arch/arm/insts/misc64.hh	/^#define __ARCH_ARM_INSTS_MISC64_HH__$/;"	d
__ARCH_ARM_INSTS_MISC_HH__	src/arch/arm/insts/misc.hh	/^#define __ARCH_ARM_INSTS_MISC_HH__$/;"	d
__ARCH_ARM_INSTS_MULT_HH__	src/arch/arm/insts/mult.hh	/^#define __ARCH_ARM_INSTS_MULT_HH__$/;"	d
__ARCH_ARM_INSTS_NEON64_MEM_HH__	src/arch/arm/insts/neon64_mem.hh	/^#define __ARCH_ARM_INSTS_NEON64_MEM_HH__$/;"	d
__ARCH_ARM_INSTS_PREDINST_HH__	src/arch/arm/insts/pred_inst.hh	/^#define __ARCH_ARM_INSTS_PREDINST_HH__$/;"	d
__ARCH_ARM_INSTS_STATICINST_HH__	src/arch/arm/insts/static_inst.hh	/^#define __ARCH_ARM_INSTS_STATICINST_HH__$/;"	d
__ARCH_ARM_INSTS_VFP_HH__	src/arch/arm/insts/vfp.hh	/^#define __ARCH_ARM_INSTS_VFP_HH__$/;"	d
__ARCH_ARM_INTERRUPT_HH__	src/arch/arm/interrupts.hh	/^#define __ARCH_ARM_INTERRUPT_HH__$/;"	d
__ARCH_ARM_INTREGS_HH__	src/arch/arm/intregs.hh	/^#define __ARCH_ARM_INTREGS_HH__$/;"	d
__ARCH_ARM_ISA_HH__	src/arch/arm/isa.hh	/^#define __ARCH_ARM_ISA_HH__$/;"	d
__ARCH_ARM_ISA_TRAITS_HH__	src/arch/arm/isa_traits.hh	/^#define __ARCH_ARM_ISA_TRAITS_HH__$/;"	d
__ARCH_ARM_KERNEL_STATS_HH__	src/arch/arm/kernel_stats.hh	/^#define __ARCH_ARM_KERNEL_STATS_HH__$/;"	d
__ARCH_ARM_LINUX_ATAG_HH__	src/arch/arm/linux/atag.hh	/^#define __ARCH_ARM_LINUX_ATAG_HH__$/;"	d
__ARCH_ARM_LINUX_LINUX_HH__	src/arch/arm/linux/linux.hh	/^#define __ARCH_ARM_LINUX_LINUX_HH__$/;"	d
__ARCH_ARM_LINUX_SYSTEM_HH__	src/arch/arm/linux/system.hh	/^#define __ARCH_ARM_LINUX_SYSTEM_HH__$/;"	d
__ARCH_ARM_LOCKED_MEM_HH__	src/arch/arm/locked_mem.hh	/^#define __ARCH_ARM_LOCKED_MEM_HH__$/;"	d
__ARCH_ARM_MACROMEM_HH__	src/arch/arm/insts/macromem.hh	/^#define __ARCH_ARM_MACROMEM_HH__$/;"	d
__ARCH_ARM_MEM64_HH__	src/arch/arm/insts/mem64.hh	/^#define __ARCH_ARM_MEM64_HH__$/;"	d
__ARCH_ARM_MEM_HH__	src/arch/arm/insts/mem.hh	/^#define __ARCH_ARM_MEM_HH__$/;"	d
__ARCH_ARM_MICROCODE_ROM_HH__	src/arch/arm/microcode_rom.hh	/^#define __ARCH_ARM_MICROCODE_ROM_HH__$/;"	d
__ARCH_ARM_MISCREGS_HH__	src/arch/arm/miscregs.hh	/^#define __ARCH_ARM_MISCREGS_HH__$/;"	d
__ARCH_ARM_MMAPPED_IPR_HH__	src/arch/arm/mmapped_ipr.hh	/^#define __ARCH_ARM_MMAPPED_IPR_HH__$/;"	d
__ARCH_ARM_NATIVETRACE_HH__	src/arch/arm/nativetrace.hh	/^#define __ARCH_ARM_NATIVETRACE_HH__$/;"	d
__ARCH_ARM_PAGETABLE_H__	src/arch/arm/pagetable.hh	/^#define __ARCH_ARM_PAGETABLE_H__$/;"	d
__ARCH_ARM_REGISTERS_HH__	src/arch/arm/registers.hh	/^#define __ARCH_ARM_REGISTERS_HH__$/;"	d
__ARCH_ARM_REMOTE_GDB_HH__	src/arch/arm/remote_gdb.hh	/^#define __ARCH_ARM_REMOTE_GDB_HH__$/;"	d
__ARCH_ARM_REMOTE_GDB_HH__	src/arch/power/remote_gdb.hh	/^#define __ARCH_ARM_REMOTE_GDB_HH__$/;"	d
__ARCH_ARM_STACKTRACE_HH__	src/arch/arm/stacktrace.hh	/^#define __ARCH_ARM_STACKTRACE_HH__$/;"	d
__ARCH_ARM_STAGE2_LOOKUP_HH__	src/arch/arm/stage2_lookup.hh	/^#define __ARCH_ARM_STAGE2_LOOKUP_HH__$/;"	d
__ARCH_ARM_STAGE2_MMU_HH__	src/arch/arm/stage2_mmu.hh	/^#define __ARCH_ARM_STAGE2_MMU_HH__$/;"	d
__ARCH_ARM_SYSTEM_HH__	src/arch/arm/system.hh	/^#define __ARCH_ARM_SYSTEM_HH__$/;"	d
__ARCH_ARM_TABLE_WALKER_HH__	src/arch/arm/table_walker.hh	/^#define __ARCH_ARM_TABLE_WALKER_HH__$/;"	d
__ARCH_ARM_TLB_HH__	src/arch/arm/tlb.hh	/^#define __ARCH_ARM_TLB_HH__$/;"	d
__ARCH_ARM_TYPES_HH__	src/arch/arm/types.hh	/^#define __ARCH_ARM_TYPES_HH__$/;"	d
__ARCH_ARM_UTILITY_HH__	src/arch/arm/utility.hh	/^#define __ARCH_ARM_UTILITY_HH__$/;"	d
__ARCH_ARM_VTOPHYS_H__	src/arch/arm/vtophys.hh	/^#define __ARCH_ARM_VTOPHYS_H__$/;"	d
__ARCH_GENERIC_DEBUGFAULTS_HH__	src/arch/generic/debugfaults.hh	/^#define __ARCH_GENERIC_DEBUGFAULTS_HH__$/;"	d
__ARCH_GENERIC_DECODE_CACHE_HH__	src/arch/generic/decode_cache.hh	/^#define __ARCH_GENERIC_DECODE_CACHE_HH__$/;"	d
__ARCH_GENERIC_LINUX_THREADINFO_HH__	src/arch/generic/linux/threadinfo.hh	/^#define __ARCH_GENERIC_LINUX_THREADINFO_HH__$/;"	d
__ARCH_GENERIC_MEMHELPERS_HH__	src/arch/generic/memhelpers.hh	/^#define __ARCH_GENERIC_MEMHELPERS_HH__$/;"	d
__ARCH_GENERIC_MMAPPED_IPR_HH__	src/arch/generic/mmapped_ipr.hh	/^#define __ARCH_GENERIC_MMAPPED_IPR_HH__$/;"	d
__ARCH_GENERIC_TYPES_HH__	src/arch/generic/types.hh	/^#define __ARCH_GENERIC_TYPES_HH__$/;"	d
__ARCH_LINUX_X86_SYSTEM_HH__	src/arch/x86/linux/system.hh	/^#define __ARCH_LINUX_X86_SYSTEM_HH__$/;"	d
__ARCH_MIPS_BARE_IRON_SYSTEM_HH__	src/arch/mips/bare_iron/system.hh	/^#define __ARCH_MIPS_BARE_IRON_SYSTEM_HH__$/;"	d
__ARCH_MIPS_DECODER_HH__	src/arch/mips/decoder.hh	/^#define __ARCH_MIPS_DECODER_HH__$/;"	d
__ARCH_MIPS_DSP_HH__	src/arch/mips/dsp.hh	/^#define __ARCH_MIPS_DSP_HH__$/;"	d
__ARCH_MIPS_DT_CONSTANTS_HH__	src/arch/mips/dt_constants.hh	/^#define __ARCH_MIPS_DT_CONSTANTS_HH__$/;"	d
__ARCH_MIPS_INTERRUPT_HH__	src/arch/mips/interrupts.hh	/^#define __ARCH_MIPS_INTERRUPT_HH__$/;"	d
__ARCH_MIPS_ISA_HH__	src/arch/mips/isa.hh	/^#define __ARCH_MIPS_ISA_HH__$/;"	d
__ARCH_MIPS_ISA_TRAITS_HH__	src/arch/mips/isa_traits.hh	/^#define __ARCH_MIPS_ISA_TRAITS_HH__$/;"	d
__ARCH_MIPS_KERNEL_STATS_HH__	src/arch/mips/kernel_stats.hh	/^#define __ARCH_MIPS_KERNEL_STATS_HH__$/;"	d
__ARCH_MIPS_LINUX_ALIGNED_HH__	src/arch/mips/linux/aligned.hh	/^#define __ARCH_MIPS_LINUX_ALIGNED_HH__$/;"	d
__ARCH_MIPS_LINUX_HWRPB_HH__	src/arch/mips/linux/hwrpb.hh	/^#define __ARCH_MIPS_LINUX_HWRPB_HH__$/;"	d
__ARCH_MIPS_LINUX_LINUX_HH__	src/arch/mips/linux/linux.hh	/^#define __ARCH_MIPS_LINUX_LINUX_HH__$/;"	d
__ARCH_MIPS_LINUX_SYSTEM_HH__	src/arch/mips/linux/system.hh	/^#define __ARCH_MIPS_LINUX_SYSTEM_HH__$/;"	d
__ARCH_MIPS_LINUX_THREAD_INFO_H__	src/arch/mips/linux/thread_info.hh	/^#define __ARCH_MIPS_LINUX_THREAD_INFO_H__$/;"	d
__ARCH_MIPS_LOCKED_MEM_HH__	src/arch/mips/locked_mem.hh	/^#define __ARCH_MIPS_LOCKED_MEM_HH__$/;"	d
__ARCH_MIPS_MICROCODE_ROM_HH__	src/arch/mips/microcode_rom.hh	/^#define __ARCH_MIPS_MICROCODE_ROM_HH__$/;"	d
__ARCH_MIPS_MMAPPED_IPR_HH__	src/arch/mips/mmapped_ipr.hh	/^#define __ARCH_MIPS_MMAPPED_IPR_HH__$/;"	d
__ARCH_MIPS_MT_CONSTANTS_HH__	src/arch/mips/mt_constants.hh	/^#define __ARCH_MIPS_MT_CONSTANTS_HH__$/;"	d
__ARCH_MIPS_MT_HH__	src/arch/mips/mt.hh	/^#define __ARCH_MIPS_MT_HH__$/;"	d
__ARCH_MIPS_PAGETABLE_H__	src/arch/mips/pagetable.hh	/^#define __ARCH_MIPS_PAGETABLE_H__$/;"	d
__ARCH_MIPS_PRA_CONSTANTS_HH__	src/arch/mips/pra_constants.hh	/^#define __ARCH_MIPS_PRA_CONSTANTS_HH__$/;"	d
__ARCH_MIPS_REGISTERS_HH__	src/arch/mips/registers.hh	/^#define __ARCH_MIPS_REGISTERS_HH__$/;"	d
__ARCH_MIPS_REMOTE_GDB_HH__	src/arch/mips/remote_gdb.hh	/^#define __ARCH_MIPS_REMOTE_GDB_HH__$/;"	d
__ARCH_MIPS_STACKTRACE_HH__	src/arch/mips/stacktrace.hh	/^#define __ARCH_MIPS_STACKTRACE_HH__$/;"	d
__ARCH_MIPS_SYSTEM_HH__	src/arch/mips/system.hh	/^#define __ARCH_MIPS_SYSTEM_HH__$/;"	d
__ARCH_MIPS_TLB_HH__	src/arch/mips/tlb.hh	/^#define __ARCH_MIPS_TLB_HH__$/;"	d
__ARCH_MIPS_TYPES_HH__	src/arch/mips/types.hh	/^#define __ARCH_MIPS_TYPES_HH__$/;"	d
__ARCH_MIPS_UTILITY_HH__	src/arch/mips/utility.hh	/^#define __ARCH_MIPS_UTILITY_HH__$/;"	d
__ARCH_MIPS_VTOPHYS_H__	src/arch/mips/vtophys.hh	/^#define __ARCH_MIPS_VTOPHYS_H__$/;"	d
__ARCH_NULL_CPU_DUMMY_HH__	src/arch/null/cpu_dummy.hh	/^#define __ARCH_NULL_CPU_DUMMY_HH__$/;"	d
__ARCH_NULL_ISA_TRAITS_HH__	src/arch/null/isa_traits.hh	/^#define __ARCH_NULL_ISA_TRAITS_HH__$/;"	d
__ARCH_NULL_REGISTERS_HH__	src/arch/null/registers.hh	/^#define __ARCH_NULL_REGISTERS_HH__$/;"	d
__ARCH_NULL_REMOTE_GDB_HH__	src/arch/null/remote_gdb.hh	/^#define __ARCH_NULL_REMOTE_GDB_HH__$/;"	d
__ARCH_NULL_TYPES_HH__	src/arch/null/types.hh	/^#define __ARCH_NULL_TYPES_HH__$/;"	d
__ARCH_NULL_UTILITY_HH__	src/arch/null/utility.hh	/^#define __ARCH_NULL_UTILITY_HH__$/;"	d
__ARCH_POWER_DECODER_HH__	src/arch/power/decoder.hh	/^#define __ARCH_POWER_DECODER_HH__$/;"	d
__ARCH_POWER_FAULTS_HH__	src/arch/power/faults.hh	/^#define __ARCH_POWER_FAULTS_HH__$/;"	d
__ARCH_POWER_INSTS_BRANCH_HH__	src/arch/power/insts/branch.hh	/^#define __ARCH_POWER_INSTS_BRANCH_HH__$/;"	d
__ARCH_POWER_INSTS_CONDITION_HH__	src/arch/power/insts/condition.hh	/^#define __ARCH_POWER_INSTS_CONDITION_HH__$/;"	d
__ARCH_POWER_INSTS_FLOATING_HH__	src/arch/power/insts/floating.hh	/^#define __ARCH_POWER_INSTS_FLOATING_HH__$/;"	d
__ARCH_POWER_INSTS_INTEGER_HH__	src/arch/power/insts/integer.hh	/^#define __ARCH_POWER_INSTS_INTEGER_HH__$/;"	d
__ARCH_POWER_INSTS_MISC_HH__	src/arch/power/insts/misc.hh	/^#define __ARCH_POWER_INSTS_MISC_HH__$/;"	d
__ARCH_POWER_INSTS_STATICINST_HH__	src/arch/power/insts/static_inst.hh	/^#define __ARCH_POWER_INSTS_STATICINST_HH__$/;"	d
__ARCH_POWER_INTERRUPT_HH__	src/arch/power/interrupts.hh	/^#define __ARCH_POWER_INTERRUPT_HH__$/;"	d
__ARCH_POWER_ISA_HH__	src/arch/power/isa.hh	/^#define __ARCH_POWER_ISA_HH__$/;"	d
__ARCH_POWER_ISA_TRAITS_HH__	src/arch/power/isa_traits.hh	/^#define __ARCH_POWER_ISA_TRAITS_HH__$/;"	d
__ARCH_POWER_KERNEL_STATS_HH__	src/arch/power/kernel_stats.hh	/^#define __ARCH_POWER_KERNEL_STATS_HH__$/;"	d
__ARCH_POWER_LINUX_LINUX_HH__	src/arch/power/linux/linux.hh	/^#define __ARCH_POWER_LINUX_LINUX_HH__$/;"	d
__ARCH_POWER_LOCKED_MEM_HH__	src/arch/power/locked_mem.hh	/^#define __ARCH_POWER_LOCKED_MEM_HH__$/;"	d
__ARCH_POWER_MEM_HH__	src/arch/power/insts/mem.hh	/^#define __ARCH_POWER_MEM_HH__$/;"	d
__ARCH_POWER_MICROCODE_ROM_HH__	src/arch/power/microcode_rom.hh	/^#define __ARCH_POWER_MICROCODE_ROM_HH__$/;"	d
__ARCH_POWER_MISCREGS_HH__	src/arch/power/miscregs.hh	/^#define __ARCH_POWER_MISCREGS_HH__$/;"	d
__ARCH_POWER_MMAPPED_IPR_HH__	src/arch/power/mmapped_ipr.hh	/^#define __ARCH_POWER_MMAPPED_IPR_HH__$/;"	d
__ARCH_POWER_PAGETABLE_H__	src/arch/power/pagetable.hh	/^#define __ARCH_POWER_PAGETABLE_H__$/;"	d
__ARCH_POWER_REGISTERS_HH__	src/arch/power/registers.hh	/^#define __ARCH_POWER_REGISTERS_HH__$/;"	d
__ARCH_POWER_STACKTRACE_HH__	src/arch/power/stacktrace.hh	/^#define __ARCH_POWER_STACKTRACE_HH__$/;"	d
__ARCH_POWER_TLB_HH__	src/arch/power/tlb.hh	/^#define __ARCH_POWER_TLB_HH__$/;"	d
__ARCH_POWER_TYPES_HH__	src/arch/power/types.hh	/^#define __ARCH_POWER_TYPES_HH__$/;"	d
__ARCH_POWER_UTILITY_HH__	src/arch/power/utility.hh	/^#define __ARCH_POWER_UTILITY_HH__$/;"	d
__ARCH_POWER_VTOPHYS_HH__	src/arch/power/vtophys.hh	/^#define __ARCH_POWER_VTOPHYS_HH__$/;"	d
__ARCH_SPARC_ASI_HH__	src/arch/sparc/asi.hh	/^#define __ARCH_SPARC_ASI_HH__$/;"	d
__ARCH_SPARC_DECODER_HH__	src/arch/sparc/decoder.hh	/^#define __ARCH_SPARC_DECODER_HH__$/;"	d
__ARCH_SPARC_HANDLERS_HH__	src/arch/sparc/handlers.hh	/^#define __ARCH_SPARC_HANDLERS_HH__$/;"	d
__ARCH_SPARC_INTERRUPT_HH__	src/arch/sparc/interrupts.hh	/^#define __ARCH_SPARC_INTERRUPT_HH__$/;"	d
__ARCH_SPARC_ISA_HH__	src/arch/sparc/isa.hh	/^#define __ARCH_SPARC_ISA_HH__$/;"	d
__ARCH_SPARC_ISA_TRAITS_HH__	src/arch/sparc/isa_traits.hh	/^#define __ARCH_SPARC_ISA_TRAITS_HH__$/;"	d
__ARCH_SPARC_KERNEL_STATS_HH__	src/arch/sparc/kernel_stats.hh	/^#define __ARCH_SPARC_KERNEL_STATS_HH__$/;"	d
__ARCH_SPARC_LINUX_LINUX_HH__	src/arch/sparc/linux/linux.hh	/^#define __ARCH_SPARC_LINUX_LINUX_HH__$/;"	d
__ARCH_SPARC_LOCKED_MEM_HH__	src/arch/sparc/locked_mem.hh	/^#define __ARCH_SPARC_LOCKED_MEM_HH__$/;"	d
__ARCH_SPARC_MICROCODE_ROM_HH__	src/arch/sparc/microcode_rom.hh	/^#define __ARCH_SPARC_MICROCODE_ROM_HH__$/;"	d
__ARCH_SPARC_MISCREGS_HH__	src/arch/sparc/miscregs.hh	/^#define __ARCH_SPARC_MISCREGS_HH__$/;"	d
__ARCH_SPARC_MMAPPED_IPR_HH__	src/arch/sparc/mmapped_ipr.hh	/^#define __ARCH_SPARC_MMAPPED_IPR_HH__$/;"	d
__ARCH_SPARC_MT_HH__	src/arch/sparc/mt.hh	/^#define __ARCH_SPARC_MT_HH__$/;"	d
__ARCH_SPARC_NATIVETRACE_HH__	src/arch/sparc/nativetrace.hh	/^#define __ARCH_SPARC_NATIVETRACE_HH__$/;"	d
__ARCH_SPARC_PAGETABLE_HH__	src/arch/sparc/pagetable.hh	/^#define __ARCH_SPARC_PAGETABLE_HH__$/;"	d
__ARCH_SPARC_REGISTERS_HH__	src/arch/sparc/registers.hh	/^#define __ARCH_SPARC_REGISTERS_HH__$/;"	d
__ARCH_SPARC_REMOTE_GDB_HH__	src/arch/sparc/remote_gdb.hh	/^#define __ARCH_SPARC_REMOTE_GDB_HH__$/;"	d
__ARCH_SPARC_SOLARIS_SOLARIS_HH__	src/arch/sparc/solaris/solaris.hh	/^#define __ARCH_SPARC_SOLARIS_SOLARIS_HH__$/;"	d
__ARCH_SPARC_SPARC_TRAITS_HH__	src/arch/sparc/sparc_traits.hh	/^#define __ARCH_SPARC_SPARC_TRAITS_HH__$/;"	d
__ARCH_SPARC_STACKTRACE_HH__	src/arch/sparc/stacktrace.hh	/^#define __ARCH_SPARC_STACKTRACE_HH__$/;"	d
__ARCH_SPARC_SYSTEM_HH__	src/arch/sparc/system.hh	/^#define __ARCH_SPARC_SYSTEM_HH__$/;"	d
__ARCH_SPARC_TLB_HH__	src/arch/sparc/tlb.hh	/^#define __ARCH_SPARC_TLB_HH__$/;"	d
__ARCH_SPARC_TLB_MAP_HH__	src/arch/sparc/tlb_map.hh	/^#define __ARCH_SPARC_TLB_MAP_HH__$/;"	d
__ARCH_SPARC_TYPES_HH__	src/arch/sparc/types.hh	/^#define __ARCH_SPARC_TYPES_HH__$/;"	d
__ARCH_SPARC_UTILITY_HH__	src/arch/sparc/utility.hh	/^#define __ARCH_SPARC_UTILITY_HH__$/;"	d
__ARCH_SPARC_VTOPHYS_H__	src/arch/sparc/vtophys.hh	/^#define __ARCH_SPARC_VTOPHYS_H__$/;"	d
__ARCH_X86_APICREGS_HH__	src/arch/x86/regs/apic.hh	/^#define __ARCH_X86_APICREGS_HH__$/;"	d
__ARCH_X86_BIOS_ACPI_HH__	src/arch/x86/bios/acpi.hh	/^#define __ARCH_X86_BIOS_ACPI_HH__$/;"	d
__ARCH_X86_BIOS_E820_HH__	src/arch/x86/bios/e820.hh	/^#define __ARCH_X86_BIOS_E820_HH__$/;"	d
__ARCH_X86_BIOS_INTELMP_HH__	src/arch/x86/bios/intelmp.hh	/^#define __ARCH_X86_BIOS_INTELMP_HH__$/;"	d
__ARCH_X86_BIOS_SMBIOS_HH__	src/arch/x86/bios/smbios.hh	/^#define __ARCH_X86_BIOS_SMBIOS_HH__$/;"	d
__ARCH_X86_CCREGS_HH__	src/arch/x86/regs/ccr.hh	/^#define __ARCH_X86_CCREGS_HH__$/;"	d
__ARCH_X86_CPUID_HH__	src/arch/x86/cpuid.hh	/^#define __ARCH_X86_CPUID_HH__$/;"	d
__ARCH_X86_DECODER_HH__	src/arch/x86/decoder.hh	/^#define __ARCH_X86_DECODER_HH__$/;"	d
__ARCH_X86_EMULENV_HH__	src/arch/x86/emulenv.hh	/^#define __ARCH_X86_EMULENV_HH__$/;"	d
__ARCH_X86_FAULTS_HH__	src/arch/x86/faults.hh	/^#define __ARCH_X86_FAULTS_HH__$/;"	d
__ARCH_X86_FLOATREGS_HH__	src/arch/x86/regs/float.hh	/^#define __ARCH_X86_FLOATREGS_HH__$/;"	d
__ARCH_X86_INSTS_BADMICROOP_HH__	src/arch/x86/insts/badmicroop.hh	/^#define __ARCH_X86_INSTS_BADMICROOP_HH__$/;"	d
__ARCH_X86_INSTS_MACROOP_HH__	src/arch/x86/insts/macroop.hh	/^#define __ARCH_X86_INSTS_MACROOP_HH__$/;"	d
__ARCH_X86_INSTS_MICROFPOP_HH__	src/arch/x86/insts/microfpop.hh	/^#define __ARCH_X86_INSTS_MICROFPOP_HH__$/;"	d
__ARCH_X86_INSTS_MICROLDSTOP_HH__	src/arch/x86/insts/microldstop.hh	/^#define __ARCH_X86_INSTS_MICROLDSTOP_HH__$/;"	d
__ARCH_X86_INSTS_MICROMEDIAOP_HH__	src/arch/x86/insts/micromediaop.hh	/^#define __ARCH_X86_INSTS_MICROMEDIAOP_HH__$/;"	d
__ARCH_X86_INSTS_MICROOP_HH__	src/arch/x86/insts/microop.hh	/^#define __ARCH_X86_INSTS_MICROOP_HH__$/;"	d
__ARCH_X86_INSTS_MICROREGOP_HH__	src/arch/x86/insts/microregop.hh	/^#define __ARCH_X86_INSTS_MICROREGOP_HH__$/;"	d
__ARCH_X86_INSTS_STATICINST_HH__	src/arch/x86/insts/static_inst.hh	/^#define __ARCH_X86_INSTS_STATICINST_HH__$/;"	d
__ARCH_X86_INTERRUPTS_HH__	src/arch/x86/interrupts.hh	/^#define __ARCH_X86_INTERRUPTS_HH__$/;"	d
__ARCH_X86_INTMESSAGE_HH__	src/arch/x86/intmessage.hh	/^#define __ARCH_X86_INTMESSAGE_HH__$/;"	d
__ARCH_X86_INTREGS_HH__	src/arch/x86/regs/int.hh	/^#define __ARCH_X86_INTREGS_HH__$/;"	d
__ARCH_X86_ISATRAITS_HH__	src/arch/x86/isa_traits.hh	/^#define __ARCH_X86_ISATRAITS_HH__$/;"	d
__ARCH_X86_ISA_HH__	src/arch/x86/isa.hh	/^#define __ARCH_X86_ISA_HH__$/;"	d
__ARCH_X86_KERNELSTATS_HH__	src/arch/x86/kernel_stats.hh	/^#define __ARCH_X86_KERNELSTATS_HH__$/;"	d
__ARCH_X86_LINUX_LINUX_HH__	src/arch/x86/linux/linux.hh	/^#define __ARCH_X86_LINUX_LINUX_HH__$/;"	d
__ARCH_X86_LOCKEDMEM_HH__	src/arch/x86/locked_mem.hh	/^#define __ARCH_X86_LOCKEDMEM_HH__$/;"	d
__ARCH_X86_MEMHELPERS_HH__	src/arch/x86/memhelpers.hh	/^#define __ARCH_X86_MEMHELPERS_HH__$/;"	d
__ARCH_X86_MICROCODE_ROM_HH__	src/arch/x86/microcode_rom.hh	/^#define __ARCH_X86_MICROCODE_ROM_HH__$/;"	d
__ARCH_X86_MISCREGS_HH__	src/arch/x86/regs/misc.hh	/^#define __ARCH_X86_MISCREGS_HH__$/;"	d
__ARCH_X86_MMAPPEDIPR_HH__	src/arch/x86/mmapped_ipr.hh	/^#define __ARCH_X86_MMAPPEDIPR_HH__$/;"	d
__ARCH_X86_NATIVETRACE_HH__	src/arch/x86/nativetrace.hh	/^#define __ARCH_X86_NATIVETRACE_HH__$/;"	d
__ARCH_X86_PAGETABLE_HH__	src/arch/x86/pagetable.hh	/^#define __ARCH_X86_PAGETABLE_HH__$/;"	d
__ARCH_X86_PAGE_TABLE_WALKER_HH__	src/arch/x86/pagetable_walker.hh	/^#define __ARCH_X86_PAGE_TABLE_WALKER_HH__$/;"	d
__ARCH_X86_PROCESS_HH__	src/arch/x86/process.hh	/^#define __ARCH_X86_PROCESS_HH__$/;"	d
__ARCH_X86_REGISTERS_HH__	src/arch/x86/registers.hh	/^#define __ARCH_X86_REGISTERS_HH__$/;"	d
__ARCH_X86_REG_MSR_HH__	src/arch/x86/regs/msr.hh	/^#define __ARCH_X86_REG_MSR_HH__$/;"	d
__ARCH_X86_REMOTEGDB_HH__	src/arch/x86/remote_gdb.hh	/^#define __ARCH_X86_REMOTEGDB_HH__$/;"	d
__ARCH_X86_SEGMENTREGS_HH__	src/arch/x86/regs/segment.hh	/^#define __ARCH_X86_SEGMENTREGS_HH__$/;"	d
__ARCH_X86_STACKTRACE_HH__	src/arch/x86/stacktrace.hh	/^#define __ARCH_X86_STACKTRACE_HH__$/;"	d
__ARCH_X86_SYSTEM_HH__	src/arch/x86/system.hh	/^#define __ARCH_X86_SYSTEM_HH__$/;"	d
__ARCH_X86_TLB_HH__	src/arch/x86/tlb.hh	/^#define __ARCH_X86_TLB_HH__$/;"	d
__ARCH_X86_TYPES_HH__	src/arch/x86/types.hh	/^#define __ARCH_X86_TYPES_HH__$/;"	d
__ARCH_X86_UTILITY_HH__	src/arch/x86/utility.hh	/^#define __ARCH_X86_UTILITY_HH__$/;"	d
__ARCH_X86_VTOPHYS_HH__	src/arch/x86/vtophys.hh	/^#define __ARCH_X86_VTOPHYS_HH__$/;"	d
__ARCH_X86_X86TRAITS_HH__	src/arch/x86/x86_traits.hh	/^#define __ARCH_X86_X86TRAITS_HH__$/;"	d
__ARM_FAULTS_HH__	src/arch/arm/faults.hh	/^#define __ARM_FAULTS_HH__$/;"	d
__ARM_LINUX_PROCESS_HH__	src/arch/arm/linux/process.hh	/^#define __ARM_LINUX_PROCESS_HH__$/;"	d
__ARM_PROCESS_HH__	src/arch/arm/process.hh	/^#define __ARM_PROCESS_HH__$/;"	d
__ASYNC_HH__	src/sim/async.hh	/^#define __ASYNC_HH__$/;"	d
__BASE_ADDR_RANGE_HH__	src/base/addr_range.hh	/^#define __BASE_ADDR_RANGE_HH__$/;"	d
__BASE_ADDR_RANGE_MAP_HH__	src/base/addr_range_map.hh	/^#define __BASE_ADDR_RANGE_MAP_HH__$/;"	d
__BASE_ATOMICIO_HH__	src/base/atomicio.hh	/^#define __BASE_ATOMICIO_HH__$/;"	d
__BASE_BARRIER_HH__	src/base/barrier.hh	/^#define __BASE_BARRIER_HH__$/;"	d
__BASE_BIGINT_HH__	src/base/bigint.hh	/^#define __BASE_BIGINT_HH__$/;"	d
__BASE_BITFIELD_HH__	src/base/bitfield.hh	/^#define __BASE_BITFIELD_HH__$/;"	d
__BASE_BITMAP_HH__	src/base/bitmap.hh	/^#define __BASE_BITMAP_HH__$/;"	d
__BASE_BITUNION_HH__	src/base/bitunion.hh	/^#define __BASE_BITUNION_HH__$/;"	d
__BASE_CACHE_HH__	src/mem/cache/base.hh	/^#define __BASE_CACHE_HH__$/;"	d
__BASE_CALLBACK_HH__	src/base/callback.hh	/^#define __BASE_CALLBACK_HH__$/;"	d
__BASE_CAST_HH__	src/base/cast.hh	/^#define __BASE_CAST_HH__$/;"	d
__BASE_COMPILER_HH__	src/base/compiler.hh	/^#define __BASE_COMPILER_HH__$/;"	d
__BASE_CONDCODE_HH__	src/base/condcodes.hh	/^#define __BASE_CONDCODE_HH__$/;"	d
__BASE_CPRINTF_FORMATS_HH__	src/base/cprintf_formats.hh	/^#define __BASE_CPRINTF_FORMATS_HH__$/;"	d
__BASE_CPRINTF_HH__	src/base/cprintf.hh	/^#define __BASE_CPRINTF_HH__$/;"	d
__BASE_DEBUG_HH__	src/base/debug.hh	/^#define __BASE_DEBUG_HH__$/;"	d
__BASE_FENV_HH__	src/base/fenv.hh	/^#define __BASE_FENV_HH__$/;"	d
__BASE_FLAGS_HH__	src/base/flags.hh	/^#define __BASE_FLAGS_HH__$/;"	d
__BASE_INET_HH__	src/base/inet.hh	/^#define __BASE_INET_HH__$/;"	d
__BASE_INTMATH_HH__	src/base/intmath.hh	/^#define __BASE_INTMATH_HH__$/;"	d
__BASE_LOADER_HEX_FILE_HH__	src/base/loader/hex_file.hh	/^#define __BASE_LOADER_HEX_FILE_HH__$/;"	d
__BASE_LOADER_RAW_OBJECT_HH__	src/base/loader/raw_object.hh	/^#define __BASE_LOADER_RAW_OBJECT_HH__$/;"	d
__BASE_MATCH_HH__	src/base/match.hh	/^#define __BASE_MATCH_HH__$/;"	d
__BASE_MISC_HH__	src/base/misc.hh	/^#define __BASE_MISC_HH__$/;"	d
__BASE_OUTPUT_HH__	src/base/output.hh	/^#define __BASE_OUTPUT_HH__$/;"	d
__BASE_RANDOM_HH__	src/base/random.hh	/^#define __BASE_RANDOM_HH__$/;"	d
__BASE_REFCNT_HH__	src/base/refcnt.hh	/^#define __BASE_REFCNT_HH__$/;"	d
__BASE_STATISTICS_HH__	src/base/statistics.hh	/^#define __BASE_STATISTICS_HH__$/;"	d
__BASE_STATS_INFO_HH__	src/base/stats/info.hh	/^#define __BASE_STATS_INFO_HH__$/;"	d
__BASE_STATS_OUTPUT_HH__	src/base/stats/output.hh	/^#define __BASE_STATS_OUTPUT_HH__$/;"	d
__BASE_STATS_TEXT_HH__	src/base/stats/text.hh	/^#define __BASE_STATS_TEXT_HH__$/;"	d
__BASE_STATS_TYPES_HH__	src/base/stats/types.hh	/^#define __BASE_STATS_TYPES_HH__$/;"	d
__BASE_STL_HELPERS_HH__	src/base/stl_helpers.hh	/^#define __BASE_STL_HELPERS_HH__$/;"	d
__BASE_TAGS_HH__	src/mem/cache/tags/base.hh	/^#define __BASE_TAGS_HH__$/;"	d
__BASE_TIMEBUF_HH__	src/cpu/timebuf.hh	/^#define __BASE_TIMEBUF_HH__$/;"	d
__BASE_TIME_HH__	src/base/time.hh	/^#define __BASE_TIME_HH__$/;"	d
__BASE_TRACE_HH__	src/base/trace.hh	/^#define __BASE_TRACE_HH__$/;"	d
__BASE_TRIE_HH__	src/base/trie.hh	/^#define __BASE_TRIE_HH__$/;"	d
__BASE_TYPES_HH__	src/base/types.hh	/^#define __BASE_TYPES_HH__$/;"	d
__BASE_USERINFO_HH__	src/base/userinfo.hh	/^#define __BASE_USERINFO_HH__$/;"	d
__BASE_VARARGS_HH__	src/base/varargs.hh	/^#define __BASE_VARARGS_HH__$/;"	d
__BASE_VNC_CONVERT_HH__	src/base/vnc/convert.hh	/^#define __BASE_VNC_CONVERT_HH__$/;"	d
__BASE_VNC_VNC_INPUT_HH__	src/base/vnc/vncinput.hh	/^#define __BASE_VNC_VNC_INPUT_HH__$/;"	d
__BASE_VNC_VNC_SERVER_HH__	src/base/vnc/vncserver.hh	/^#define __BASE_VNC_VNC_SERVER_HH__$/;"	d
__BASE__CHUNK_GENERATOR_HH__	src/base/chunk_generator.hh	/^#define __BASE__CHUNK_GENERATOR_HH__$/;"	d
__BASE__CP_ANNOTATE_HH__	src/base/cp_annotate.hh	/^#define __BASE__CP_ANNOTATE_HH__$/;"	d
__BITLINEUNIT_H__	src/mem/ruby/network/orion/Buffer/BitlineUnit.hh	/^#define __BITLINEUNIT_H__$/;"	d
__BUFFER_H__	src/mem/ruby/network/orion/Buffer/Buffer.hh	/^#define __BUFFER_H__$/;"	d
__BitUnion	src/base/bitunion.hh	/^#define __BitUnion(/;"	d
__CACHESET_HH__	src/mem/cache/tags/cacheset.hh	/^#define __CACHESET_HH__$/;"	d
__CACHE_BLK_HH__	src/mem/cache/blk.hh	/^#define __CACHE_BLK_HH__$/;"	d
__CACHE_HH__	src/mem/cache/cache.hh	/^#define __CACHE_HH__$/;"	d
__CIRCLEBUF_HH__	src/base/circlebuf.hh	/^#define __CIRCLEBUF_HH__$/;"	d
__CLOCK_H__	src/mem/ruby/network/orion/Clock.hh	/^#define __CLOCK_H__$/;"	d
__CPU_ACTIVITY_HH__	src/cpu/activity.hh	/^#define __CPU_ACTIVITY_HH__$/;"	d
__CPU_BASE_DYN_INST_HH__	src/cpu/base_dyn_inst.hh	/^#define __CPU_BASE_DYN_INST_HH__$/;"	d
__CPU_BASE_DYN_INST_IMPL_HH__	src/cpu/base_dyn_inst_impl.hh	/^#define __CPU_BASE_DYN_INST_IMPL_HH__$/;"	d
__CPU_BASE_HH__	src/cpu/base.hh	/^#define __CPU_BASE_HH__$/;"	d
__CPU_CHECKER_CPU_HH__	src/cpu/checker/cpu.hh	/^#define __CPU_CHECKER_CPU_HH__$/;"	d
__CPU_CHECKER_CPU_IMPL_HH__	src/cpu/checker/cpu_impl.hh	/^#define __CPU_CHECKER_CPU_IMPL_HH__$/;"	d
__CPU_CHECKER_THREAD_CONTEXT_HH__	src/cpu/checker/thread_context.hh	/^#define __CPU_CHECKER_THREAD_CONTEXT_HH__$/;"	d
__CPU_CPUEVENT_HH__	src/cpu/cpuevent.hh	/^#define __CPU_CPUEVENT_HH__$/;"	d
__CPU_DECODE_CACHE_HH__	src/cpu/decode_cache.hh	/^#define __CPU_DECODE_CACHE_HH__$/;"	d
__CPU_DIRECTEDTEST_DIRECTEDGENERATOR_HH__	src/cpu/testers/directedtest/DirectedGenerator.hh	/^#define __CPU_DIRECTEDTEST_DIRECTEDGENERATOR_HH__$/;"	d
__CPU_DIRECTEDTEST_INVALIDATEGENERATOR_HH__	src/cpu/testers/directedtest/InvalidateGenerator.hh	/^#define __CPU_DIRECTEDTEST_INVALIDATEGENERATOR_HH__$/;"	d
__CPU_DIRECTEDTEST_RUBYDIRECTEDTESTER_HH__	src/cpu/testers/directedtest/RubyDirectedTester.hh	/^#define __CPU_DIRECTEDTEST_RUBYDIRECTEDTESTER_HH__$/;"	d
__CPU_DIRECTEDTEST_SERIESREQUESTGENERATOR_HH__	src/cpu/testers/directedtest/SeriesRequestGenerator.hh	/^#define __CPU_DIRECTEDTEST_SERIESREQUESTGENERATOR_HH__$/;"	d
__CPU_DUMMY_CHECKER_HH__	src/cpu/dummy_checker.hh	/^#define __CPU_DUMMY_CHECKER_HH__$/;"	d
__CPU_EA_LIST_HH__	src/cpu/ozone/ea_list.hh	/^#define __CPU_EA_LIST_HH__$/;"	d
__CPU_EXETRACE_HH__	src/cpu/exetrace.hh	/^#define __CPU_EXETRACE_HH__$/;"	d
__CPU_FUNC_UNIT_HH__	src/cpu/func_unit.hh	/^#define __CPU_FUNC_UNIT_HH__$/;"	d
__CPU_INORDER_AGEN_UNIT_HH__	src/cpu/inorder/resources/agen_unit.hh	/^#define __CPU_INORDER_AGEN_UNIT_HH__$/;"	d
__CPU_INORDER_BRANCH_PREDICTOR_HH__	src/cpu/inorder/resources/branch_predictor.hh	/^#define __CPU_INORDER_BRANCH_PREDICTOR_HH__$/;"	d
__CPU_INORDER_CACHE_UNIT_HH__	src/cpu/inorder/resources/cache_unit.hh	/^#define __CPU_INORDER_CACHE_UNIT_HH__$/;"	d
__CPU_INORDER_COMM_HH__	src/cpu/inorder/comm.hh	/^#define __CPU_INORDER_COMM_HH__$/;"	d
__CPU_INORDER_CPU_HH__	src/cpu/inorder/cpu.hh	/^#define __CPU_INORDER_CPU_HH__$/;"	d
__CPU_INORDER_DECODE_UNIT_HH__	src/cpu/inorder/resources/decode_unit.hh	/^#define __CPU_INORDER_DECODE_UNIT_HH__$/;"	d
__CPU_INORDER_DYN_INST_HH__	src/cpu/inorder/inorder_dyn_inst.hh	/^#define __CPU_INORDER_DYN_INST_HH__$/;"	d
__CPU_INORDER_EXECUTION_UNIT_HH__	src/cpu/inorder/resources/execution_unit.hh	/^#define __CPU_INORDER_EXECUTION_UNIT_HH__$/;"	d
__CPU_INORDER_FETCH_SEQ_UNIT_HH__	src/cpu/inorder/resources/fetch_seq_unit.hh	/^#define __CPU_INORDER_FETCH_SEQ_UNIT_HH__$/;"	d
__CPU_INORDER_FETCH_UNIT_HH__	src/cpu/inorder/resources/fetch_unit.hh	/^#define __CPU_INORDER_FETCH_UNIT_HH__$/;"	d
__CPU_INORDER_FIRST_STAGE_HH__	src/cpu/inorder/first_stage.hh	/^#define __CPU_INORDER_FIRST_STAGE_HH__$/;"	d
__CPU_INORDER_GRAD_UNIT_HH__	src/cpu/inorder/resources/graduation_unit.hh	/^#define __CPU_INORDER_GRAD_UNIT_HH__$/;"	d
__CPU_INORDER_INORDER_TRACE_HH__	src/cpu/inorder/inorder_trace.hh	/^#define __CPU_INORDER_INORDER_TRACE_HH__$/;"	d
__CPU_INORDER_INST_BUFF_UNIT_HH__	src/cpu/inorder/resources/inst_buffer.hh	/^#define __CPU_INORDER_INST_BUFF_UNIT_HH__$/;"	d
__CPU_INORDER_MEM_DEP_UNIT_HH__	src/cpu/inorder/resources/mem_dep_unit.hh	/^#define __CPU_INORDER_MEM_DEP_UNIT_HH__$/;"	d
__CPU_INORDER_MULT_DIV_UNIT_HH__	src/cpu/inorder/resources/mult_div_unit.hh	/^#define __CPU_INORDER_MULT_DIV_UNIT_HH__$/;"	d
__CPU_INORDER_PIPELINE_IMPL_HH__	src/cpu/inorder/pipeline_traits.5stage.hh	/^#define __CPU_INORDER_PIPELINE_IMPL_HH__$/;"	d
__CPU_INORDER_PIPELINE_IMPL_HH__	src/cpu/inorder/pipeline_traits.9stage.hh	/^#define __CPU_INORDER_PIPELINE_IMPL_HH__$/;"	d
__CPU_INORDER_PIPELINE_IMPL_HH__	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^#define __CPU_INORDER_PIPELINE_IMPL_HH__$/;"	d
__CPU_INORDER_PIPELINE_IMPL_HH__	src/cpu/inorder/pipeline_traits.hh	/^#define __CPU_INORDER_PIPELINE_IMPL_HH__$/;"	d
__CPU_INORDER_PIPELINE_STAGE_HH__	src/cpu/inorder/pipeline_stage.hh	/^#define __CPU_INORDER_PIPELINE_STAGE_HH__$/;"	d
__CPU_INORDER_RESOURCE_HH__	src/cpu/inorder/resource.hh	/^#define __CPU_INORDER_RESOURCE_HH__$/;"	d
__CPU_INORDER_RESOURCE_POOL_HH__	src/cpu/inorder/resource_pool.hh	/^#define __CPU_INORDER_RESOURCE_POOL_HH__$/;"	d
__CPU_INORDER_RESOURCE_SKED_HH__	src/cpu/inorder/resource_sked.hh	/^#define __CPU_INORDER_RESOURCE_SKED_HH__$/;"	d
__CPU_INORDER_THREAD_CONTEXT_HH__	src/cpu/inorder/thread_context.hh	/^#define __CPU_INORDER_THREAD_CONTEXT_HH__$/;"	d
__CPU_INORDER_THREAD_STATE_HH__	src/cpu/inorder/thread_state.hh	/^#define __CPU_INORDER_THREAD_STATE_HH__$/;"	d
__CPU_INORDER_TLB_UNIT_HH__	src/cpu/inorder/resources/tlb_unit.hh	/^#define __CPU_INORDER_TLB_UNIT_HH__$/;"	d
__CPU_INORDER_USE_DEF_UNIT_HH__	src/cpu/inorder/resources/use_def.hh	/^#define __CPU_INORDER_USE_DEF_UNIT_HH__$/;"	d
__CPU_INTELTRACE_HH__	src/cpu/inteltrace.hh	/^#define __CPU_INTELTRACE_HH__$/;"	d
__CPU_KVM_ARM_CPU_HH__	src/cpu/kvm/arm_cpu.hh	/^#define __CPU_KVM_ARM_CPU_HH__$/;"	d
__CPU_KVM_BASE_HH__	src/cpu/kvm/base.hh	/^#define __CPU_KVM_BASE_HH__$/;"	d
__CPU_KVM_KVMVM_HH__	src/cpu/kvm/vm.hh	/^#define __CPU_KVM_KVMVM_HH__$/;"	d
__CPU_KVM_PERFEVENT_HH__	src/cpu/kvm/perfevent.hh	/^#define __CPU_KVM_PERFEVENT_HH__$/;"	d
__CPU_KVM_TIMER_HH__	src/cpu/kvm/timer.hh	/^#define __CPU_KVM_TIMER_HH__$/;"	d
__CPU_KVM_X86_CPU_HH__	src/cpu/kvm/x86_cpu.hh	/^#define __CPU_KVM_X86_CPU_HH__$/;"	d
__CPU_LEGIONTRACE_HH__	src/cpu/legiontrace.hh	/^#define __CPU_LEGIONTRACE_HH__$/;"	d
__CPU_MEMTEST_MEMTEST_HH__	src/cpu/testers/memtest/memtest.hh	/^#define __CPU_MEMTEST_MEMTEST_HH__$/;"	d
__CPU_NATIVETRACE_HH__	src/cpu/nativetrace.hh	/^#define __CPU_NATIVETRACE_HH__$/;"	d
__CPU_NETWORKTEST_NETWORKTEST_HH__	src/cpu/testers/networktest/networktest.hh	/^#define __CPU_NETWORKTEST_NETWORKTEST_HH__$/;"	d
__CPU_O3_CHECKER_HH__	src/cpu/o3/checker.hh	/^#define __CPU_O3_CHECKER_HH__$/;"	d
__CPU_O3_COMMIT_HH__	src/cpu/o3/commit.hh	/^#define __CPU_O3_COMMIT_HH__$/;"	d
__CPU_O3_COMMIT_IMPL_HH__	src/cpu/o3/commit_impl.hh	/^#define __CPU_O3_COMMIT_IMPL_HH__$/;"	d
__CPU_O3_COMM_HH__	src/cpu/o3/comm.hh	/^#define __CPU_O3_COMM_HH__$/;"	d
__CPU_O3_CPU_HH__	src/cpu/o3/cpu.hh	/^#define __CPU_O3_CPU_HH__$/;"	d
__CPU_O3_CPU_POLICY_HH__	src/cpu/o3/cpu_policy.hh	/^#define __CPU_O3_CPU_POLICY_HH__$/;"	d
__CPU_O3_DECODE_HH__	src/cpu/o3/decode.hh	/^#define __CPU_O3_DECODE_HH__$/;"	d
__CPU_O3_DECODE_IMPL_HH__	src/cpu/o3/decode_impl.hh	/^#define __CPU_O3_DECODE_IMPL_HH__$/;"	d
__CPU_O3_DEP_GRAPH_HH__	src/cpu/o3/dep_graph.hh	/^#define __CPU_O3_DEP_GRAPH_HH__$/;"	d
__CPU_O3_DERIV_HH__	src/cpu/o3/deriv.hh	/^#define __CPU_O3_DERIV_HH__$/;"	d
__CPU_O3_DYN_INST_HH__	src/cpu/o3/dyn_inst.hh	/^#define __CPU_O3_DYN_INST_HH__$/;"	d
__CPU_O3_DYN_INST_IMPL_HH__	src/cpu/o3/dyn_inst_impl.hh	/^#define __CPU_O3_DYN_INST_IMPL_HH__$/;"	d
__CPU_O3_FETCH_HH__	src/cpu/o3/fetch.hh	/^#define __CPU_O3_FETCH_HH__$/;"	d
__CPU_O3_FETCH_IMPL_HH__	src/cpu/o3/fetch_impl.hh	/^#define __CPU_O3_FETCH_IMPL_HH__$/;"	d
__CPU_O3_FREE_LIST_HH__	src/cpu/o3/free_list.hh	/^#define __CPU_O3_FREE_LIST_HH__$/;"	d
__CPU_O3_FU_POOL_HH__	src/cpu/o3/fu_pool.hh	/^#define __CPU_O3_FU_POOL_HH__$/;"	d
__CPU_O3_IEW_HH__	src/cpu/o3/iew.hh	/^#define __CPU_O3_IEW_HH__$/;"	d
__CPU_O3_IEW_IMPL_IMPL_HH__	src/cpu/o3/iew_impl.hh	/^#define __CPU_O3_IEW_IMPL_IMPL_HH__$/;"	d
__CPU_O3_IMPL_HH__	src/cpu/o3/impl.hh	/^#define __CPU_O3_IMPL_HH__$/;"	d
__CPU_O3_INST_QUEUE_HH__	src/cpu/o3/inst_queue.hh	/^#define __CPU_O3_INST_QUEUE_HH__$/;"	d
__CPU_O3_INST_QUEUE_IMPL_HH__	src/cpu/o3/inst_queue_impl.hh	/^#define __CPU_O3_INST_QUEUE_IMPL_HH__$/;"	d
__CPU_O3_LSQ_HH__	src/cpu/o3/lsq.hh	/^#define __CPU_O3_LSQ_HH__$/;"	d
__CPU_O3_LSQ_IMPL_HH__	src/cpu/o3/lsq_impl.hh	/^#define __CPU_O3_LSQ_IMPL_HH__$/;"	d
__CPU_O3_LSQ_UNIT_HH__	src/cpu/o3/lsq_unit.hh	/^#define __CPU_O3_LSQ_UNIT_HH__$/;"	d
__CPU_O3_LSQ_UNIT_IMPL_HH__	src/cpu/o3/lsq_unit_impl.hh	/^#define __CPU_O3_LSQ_UNIT_IMPL_HH__$/;"	d
__CPU_O3_MEM_DEP_UNIT_HH__	src/cpu/o3/mem_dep_unit.hh	/^#define __CPU_O3_MEM_DEP_UNIT_HH__$/;"	d
__CPU_O3_MEM_DEP_UNIT_IMPL_HH__	src/cpu/o3/mem_dep_unit_impl.hh	/^#define __CPU_O3_MEM_DEP_UNIT_IMPL_HH__$/;"	d
__CPU_O3_PROBE_SIMPLE_TRACE_HH__	src/cpu/o3/probe/simple_trace.hh	/^#define __CPU_O3_PROBE_SIMPLE_TRACE_HH__$/;"	d
__CPU_O3_REGFILE_HH__	src/cpu/o3/regfile.hh	/^#define __CPU_O3_REGFILE_HH__$/;"	d
__CPU_O3_RENAME_HH__	src/cpu/o3/rename.hh	/^#define __CPU_O3_RENAME_HH__$/;"	d
__CPU_O3_RENAME_IMPL_HH__	src/cpu/o3/rename_impl.hh	/^#define __CPU_O3_RENAME_IMPL_HH__$/;"	d
__CPU_O3_RENAME_MAP_HH__	src/cpu/o3/rename_map.hh	/^#define __CPU_O3_RENAME_MAP_HH__$/;"	d
__CPU_O3_ROB_HH__	src/cpu/o3/rob.hh	/^#define __CPU_O3_ROB_HH__$/;"	d
__CPU_O3_ROB_IMPL_HH__	src/cpu/o3/rob_impl.hh	/^#define __CPU_O3_ROB_IMPL_HH__$/;"	d
__CPU_O3_SCOREBOARD_HH__	src/cpu/o3/scoreboard.hh	/^#define __CPU_O3_SCOREBOARD_HH__$/;"	d
__CPU_O3_STORE_SET_HH__	src/cpu/o3/store_set.hh	/^#define __CPU_O3_STORE_SET_HH__$/;"	d
__CPU_O3_THREAD_CONTEXT_HH__	src/cpu/o3/thread_context.hh	/^#define __CPU_O3_THREAD_CONTEXT_HH__$/;"	d
__CPU_O3_THREAD_CONTEXT_IMPL_HH__	src/cpu/o3/thread_context_impl.hh	/^#define __CPU_O3_THREAD_CONTEXT_IMPL_HH__$/;"	d
__CPU_O3_THREAD_STATE_HH__	src/cpu/o3/thread_state.hh	/^#define __CPU_O3_THREAD_STATE_HH__$/;"	d
__CPU_OZONE_BACK_END_HH__	src/cpu/ozone/back_end.hh	/^#define __CPU_OZONE_BACK_END_HH__$/;"	d
__CPU_OZONE_BACK_END_IMPL_HH__	src/cpu/ozone/back_end_impl.hh	/^#define __CPU_OZONE_BACK_END_IMPL_HH__$/;"	d
__CPU_OZONE_BACK_END_IMPL_HH__	src/cpu/ozone/front_end_impl.hh	/^#define __CPU_OZONE_BACK_END_IMPL_HH__$/;"	d
__CPU_OZONE_CPU_HH__	src/cpu/ozone/cpu.hh	/^#define __CPU_OZONE_CPU_HH__$/;"	d
__CPU_OZONE_CPU_IMPL_HH__	src/cpu/ozone/cpu_impl.hh	/^#define __CPU_OZONE_CPU_IMPL_HH__$/;"	d
__CPU_OZONE_DYN_INST_HH__	src/cpu/ozone/dyn_inst.hh	/^#define __CPU_OZONE_DYN_INST_HH__$/;"	d
__CPU_OZONE_DYN_INST_IMPL_HH__	src/cpu/ozone/dyn_inst_impl.hh	/^#define __CPU_OZONE_DYN_INST_IMPL_HH__$/;"	d
__CPU_OZONE_FRONT_END_HH__	src/cpu/ozone/front_end.hh	/^#define __CPU_OZONE_FRONT_END_HH__$/;"	d
__CPU_OZONE_INORDER_BACK_END_HH__	src/cpu/ozone/inorder_back_end.hh	/^#define __CPU_OZONE_INORDER_BACK_END_HH__$/;"	d
__CPU_OZONE_INORDER_BACK_END_IMPL_HH__	src/cpu/ozone/inorder_back_end_impl.hh	/^#define __CPU_OZONE_INORDER_BACK_END_IMPL_HH__$/;"	d
__CPU_OZONE_INST_QUEUE_HH__	src/cpu/ozone/inst_queue.hh	/^#define __CPU_OZONE_INST_QUEUE_HH__$/;"	d
__CPU_OZONE_INST_QUEUE_IMPL_HH__	src/cpu/ozone/inst_queue_impl.hh	/^#define __CPU_OZONE_INST_QUEUE_IMPL_HH__$/;"	d
__CPU_OZONE_LSQ_UNIT_HH__	src/cpu/ozone/lsq_unit.hh	/^#define __CPU_OZONE_LSQ_UNIT_HH__$/;"	d
__CPU_OZONE_LSQ_UNIT_IMPL_HH__	src/cpu/ozone/lsq_unit_impl.hh	/^#define __CPU_OZONE_LSQ_UNIT_IMPL_HH__$/;"	d
__CPU_OZONE_LW_BACK_END_HH__	src/cpu/ozone/lw_back_end.hh	/^#define __CPU_OZONE_LW_BACK_END_HH__$/;"	d
__CPU_OZONE_LW_BACK_END_IMPL_HH__	src/cpu/ozone/lw_back_end_impl.hh	/^#define __CPU_OZONE_LW_BACK_END_IMPL_HH__$/;"	d
__CPU_OZONE_LW_LSQ_HH__	src/cpu/ozone/lw_lsq.hh	/^#define __CPU_OZONE_LW_LSQ_HH__$/;"	d
__CPU_OZONE_LW_LSQ_IMPL_HH__	src/cpu/ozone/lw_lsq_impl.hh	/^#define __CPU_OZONE_LW_LSQ_IMPL_HH__$/;"	d
__CPU_OZONE_NULL_PREDICTOR_HH__	src/cpu/ozone/null_predictor.hh	/^#define __CPU_OZONE_NULL_PREDICTOR_HH__$/;"	d
__CPU_OZONE_OZONE_IMPL_HH__	src/cpu/ozone/ozone_impl.hh	/^#define __CPU_OZONE_OZONE_IMPL_HH__$/;"	d
__CPU_OZONE_RENAME_TABLE_HH__	src/cpu/ozone/rename_table.hh	/^#define __CPU_OZONE_RENAME_TABLE_HH__$/;"	d
__CPU_OZONE_RENAME_TABLE_IMPL_HH__	src/cpu/ozone/rename_table_impl.hh	/^#define __CPU_OZONE_RENAME_TABLE_IMPL_HH__$/;"	d
__CPU_OZONE_SIMPLE_IMPL_HH__	src/cpu/ozone/simple_impl.hh	/^#define __CPU_OZONE_SIMPLE_IMPL_HH__$/;"	d
__CPU_OZONE_SIMPLE_PARAMS_HH__	src/cpu/ozone/simple_params.hh	/^#define __CPU_OZONE_SIMPLE_PARAMS_HH__$/;"	d
__CPU_OZONE_THREAD_STATE_HH__	src/cpu/ozone/thread_state.hh	/^#define __CPU_OZONE_THREAD_STATE_HH__$/;"	d
__CPU_PRED_2BIT_LOCAL_PRED_HH__	src/cpu/pred/2bit_local.hh	/^#define __CPU_PRED_2BIT_LOCAL_PRED_HH__$/;"	d
__CPU_PRED_BPRED_UNIT_HH__	src/cpu/pred/bpred_unit.hh	/^#define __CPU_PRED_BPRED_UNIT_HH__$/;"	d
__CPU_PRED_BPRED_UNIT_IMPL_HH__	src/cpu/pred/bpred_unit_impl.hh	/^#define __CPU_PRED_BPRED_UNIT_IMPL_HH__$/;"	d
__CPU_PRED_BTB_HH__	src/cpu/pred/btb.hh	/^#define __CPU_PRED_BTB_HH__$/;"	d
__CPU_PRED_RAS_HH__	src/cpu/pred/ras.hh	/^#define __CPU_PRED_RAS_HH__$/;"	d
__CPU_PRED_SAT_COUNTER_HH__	src/cpu/pred/sat_counter.hh	/^#define __CPU_PRED_SAT_COUNTER_HH__$/;"	d
__CPU_PRED_TOURNAMENT_PRED_HH__	src/cpu/pred/tournament.hh	/^#define __CPU_PRED_TOURNAMENT_PRED_HH__$/;"	d
__CPU_PROFILE_HH__	src/cpu/profile.hh	/^#define __CPU_PROFILE_HH__$/;"	d
__CPU_QUIESCE_EVENT_HH__	src/cpu/quiesce_event.hh	/^#define __CPU_QUIESCE_EVENT_HH__$/;"	d
__CPU_RUBYTEST_CHECKTABLE_HH__	src/cpu/testers/rubytest/CheckTable.hh	/^#define __CPU_RUBYTEST_CHECKTABLE_HH__$/;"	d
__CPU_RUBYTEST_CHECK_HH__	src/cpu/testers/rubytest/Check.hh	/^#define __CPU_RUBYTEST_CHECK_HH__$/;"	d
__CPU_RUBYTEST_RUBYTESTER_HH__	src/cpu/testers/rubytest/RubyTester.hh	/^#define __CPU_RUBYTEST_RUBYTESTER_HH__$/;"	d
__CPU_SIMPLE_ATOMIC_HH__	src/cpu/simple/atomic.hh	/^#define __CPU_SIMPLE_ATOMIC_HH__$/;"	d
__CPU_SIMPLE_BASE_HH__	src/cpu/simple/base.hh	/^#define __CPU_SIMPLE_BASE_HH__$/;"	d
__CPU_SIMPLE_THREAD_HH__	src/cpu/simple_thread.hh	/^#define __CPU_SIMPLE_THREAD_HH__$/;"	d
__CPU_SIMPLE_TIMING_HH__	src/cpu/simple/timing.hh	/^#define __CPU_SIMPLE_TIMING_HH__$/;"	d
__CPU_STATIC_INST_FWD_HH__	src/cpu/static_inst_fwd.hh	/^#define __CPU_STATIC_INST_FWD_HH__$/;"	d
__CPU_STATIC_INST_HH__	src/cpu/static_inst.hh	/^#define __CPU_STATIC_INST_HH__$/;"	d
__CPU_THREAD_CONTEXT_HH__	src/cpu/thread_context.hh	/^#define __CPU_THREAD_CONTEXT_HH__$/;"	d
__CPU_THREAD_STATE_HH__	src/cpu/thread_state.hh	/^#define __CPU_THREAD_STATE_HH__$/;"	d
__CPU_TRAFFIC_GEN_GENERATORS_HH__	src/cpu/testers/traffic_gen/generators.hh	/^#define __CPU_TRAFFIC_GEN_GENERATORS_HH__$/;"	d
__CPU_TRAFFIC_GEN_TRAFFIC_GEN_HH__	src/cpu/testers/traffic_gen/traffic_gen.hh	/^#define __CPU_TRAFFIC_GEN_TRAFFIC_GEN_HH__$/;"	d
__CPU_TRANSLATION_HH__	src/cpu/translation.hh	/^#define __CPU_TRANSLATION_HH__$/;"	d
__CPU__OP_CLASS_HH__	src/cpu/op_class.hh	/^#define __CPU__OP_CLASS_HH__$/;"	d
__CPU__REG_CLASS_HH__	src/cpu/reg_class.hh	/^#define __CPU__REG_CLASS_HH__$/;"	d
__CROSSBAR_H__	src/mem/ruby/network/orion/Crossbar/Crossbar.hh	/^#define __CROSSBAR_H__$/;"	d
__DECODERUNIT_H__	src/mem/ruby/network/orion/Buffer/DecoderUnit.hh	/^#define __DECODERUNIT_H__$/;"	d
__DEV_8254_HH__	src/dev/intel_8254_timer.hh	/^#define __DEV_8254_HH__$/;"	d
__DEV_ALPHA_BACKDOOR_HH__	src/dev/alpha/backdoor.hh	/^#define __DEV_ALPHA_BACKDOOR_HH__$/;"	d
__DEV_ARM_A9SCU_HH__	src/dev/arm/a9scu.hh	/^#define __DEV_ARM_A9SCU_HH__$/;"	d
__DEV_ARM_AMBA_DEVICE_HH__	src/dev/arm/amba_device.hh	/^#define __DEV_ARM_AMBA_DEVICE_HH__$/;"	d
__DEV_ARM_AMBA_FAKE_H__	src/dev/arm/amba_fake.hh	/^#define __DEV_ARM_AMBA_FAKE_H__$/;"	d
__DEV_ARM_BASE_GIC_H__	src/dev/arm/base_gic.hh	/^#define __DEV_ARM_BASE_GIC_H__$/;"	d
__DEV_ARM_GENERIC_TIMER_HH__	src/dev/arm/generic_timer.hh	/^#define __DEV_ARM_GENERIC_TIMER_HH__$/;"	d
__DEV_ARM_GIC_PL390_H__	src/dev/arm/gic_pl390.hh	/^#define __DEV_ARM_GIC_PL390_H__$/;"	d
__DEV_ARM_HDLCD_HH__	src/dev/arm/hdlcd.hh	/^#define __DEV_ARM_HDLCD_HH__$/;"	d
__DEV_ARM_LOCALTIMER_HH__	src/dev/arm/timer_cpulocal.hh	/^#define __DEV_ARM_LOCALTIMER_HH__$/;"	d
__DEV_ARM_PL011_H__	src/dev/arm/pl011.hh	/^#define __DEV_ARM_PL011_H__$/;"	d
__DEV_ARM_PL050_HH__	src/dev/arm/kmi.hh	/^#define __DEV_ARM_PL050_HH__$/;"	d
__DEV_ARM_PL111_HH__	src/dev/arm/pl111.hh	/^#define __DEV_ARM_PL111_HH__$/;"	d
__DEV_ARM_RTC_PL310_HH__	src/dev/arm/rtc_pl031.hh	/^#define __DEV_ARM_RTC_PL310_HH__$/;"	d
__DEV_ARM_RV_HH__	src/dev/arm/rv_ctrl.hh	/^#define __DEV_ARM_RV_HH__$/;"	d
__DEV_ARM_RealView_HH__	src/dev/arm/realview.hh	/^#define __DEV_ARM_RealView_HH__$/;"	d
__DEV_ARM_SP804_HH__	src/dev/arm/timer_sp804.hh	/^#define __DEV_ARM_SP804_HH__$/;"	d
__DEV_ARM_VGIC_H__	src/dev/arm/vgic.hh	/^#define __DEV_ARM_VGIC_H__$/;"	d
__DEV_BADDEV_HH__	src/dev/baddev.hh	/^#define __DEV_BADDEV_HH__$/;"	d
__DEV_COPY_ENGINE_HH__	src/dev/copy_engine.hh	/^#define __DEV_COPY_ENGINE_HH__$/;"	d
__DEV_DMA_DEVICE_HH__	src/dev/dma_device.hh	/^#define __DEV_DMA_DEVICE_HH__$/;"	d
__DEV_ETHERDEVICE_HH__	src/dev/etherdevice.hh	/^#define __DEV_ETHERDEVICE_HH__$/;"	d
__DEV_ETHERINT_HH__	src/dev/etherint.hh	/^#define __DEV_ETHERINT_HH__$/;"	d
__DEV_ETHERLINK_HH__	src/dev/etherlink.hh	/^#define __DEV_ETHERLINK_HH__$/;"	d
__DEV_ETHEROBJECT_HH__	src/dev/etherobject.hh	/^#define __DEV_ETHEROBJECT_HH__$/;"	d
__DEV_I8254XGBE_HH__	src/dev/i8254xGBe.hh	/^#define __DEV_I8254XGBE_HH__$/;"	d
__DEV_IO_DEVICE_HH__	src/dev/io_device.hh	/^#define __DEV_IO_DEVICE_HH__$/;"	d
__DEV_MALTA_HH__	src/dev/mips/malta.hh	/^#define __DEV_MALTA_HH__$/;"	d
__DEV_MALTA_IO_HH__	src/dev/mips/malta_io.hh	/^#define __DEV_MALTA_IO_HH__$/;"	d
__DEV_MC146818_HH__	src/dev/mc146818.hh	/^#define __DEV_MC146818_HH__$/;"	d
__DEV_NS_GIGE_HH__	src/dev/ns_gige.hh	/^#define __DEV_NS_GIGE_HH__$/;"	d
__DEV_NS_GIGE_REG_H__	src/dev/ns_gige_reg.h	/^#define __DEV_NS_GIGE_REG_H__$/;"	d
__DEV_PCIDEV_HH__	src/dev/pcidev.hh	/^#define __DEV_PCIDEV_HH__$/;"	d
__DEV_PC_HH__	src/dev/x86/pc.hh	/^#define __DEV_PC_HH__$/;"	d
__DEV_PKTFIFO_HH__	src/dev/pktfifo.hh	/^#define __DEV_PKTFIFO_HH__$/;"	d
__DEV_PLATFORM_HH__	src/dev/platform.hh	/^#define __DEV_PLATFORM_HH__$/;"	d
__DEV_PS2_HH__	src/dev/ps2.hh	/^#define __DEV_PS2_HH__$/;"	d
__DEV_SIMPLE_DISK_HH__	src/dev/simple_disk.hh	/^#define __DEV_SIMPLE_DISK_HH__$/;"	d
__DEV_SINICREG_HH__	src/dev/sinicreg.hh	/^#define __DEV_SINICREG_HH__$/;"	d
__DEV_SINIC_HH__	src/dev/sinic.hh	/^#define __DEV_SINIC_HH__$/;"	d
__DEV_SPARC_DTOD_HH__	src/dev/sparc/dtod.hh	/^#define __DEV_SPARC_DTOD_HH__$/;"	d
__DEV_SPARC_IOB_HH__	src/dev/sparc/iob.hh	/^#define __DEV_SPARC_IOB_HH__$/;"	d
__DEV_SPARC_MM_DISK_HH__	src/dev/sparc/mm_disk.hh	/^#define __DEV_SPARC_MM_DISK_HH__$/;"	d
__DEV_T1000_HH__	src/dev/sparc/t1000.hh	/^#define __DEV_T1000_HH__$/;"	d
__DEV_TERMINAL_HH__	src/dev/terminal.hh	/^#define __DEV_TERMINAL_HH__$/;"	d
__DEV_TSUNAMI_HH__	src/dev/alpha/tsunami.hh	/^#define __DEV_TSUNAMI_HH__$/;"	d
__DEV_TSUNAMI_IO_HH__	src/dev/alpha/tsunami_io.hh	/^#define __DEV_TSUNAMI_IO_HH__$/;"	d
__DEV_UART8250_HH__	src/dev/uart8250.hh	/^#define __DEV_UART8250_HH__$/;"	d
__DEV_X86_CMOS_HH__	src/dev/x86/cmos.hh	/^#define __DEV_X86_CMOS_HH__$/;"	d
__DEV_X86_I8042_HH__	src/dev/x86/i8042.hh	/^#define __DEV_X86_I8042_HH__$/;"	d
__DEV_X86_I82094AA_HH__	src/dev/x86/i82094aa.hh	/^#define __DEV_X86_I82094AA_HH__$/;"	d
__DEV_X86_I8237_HH__	src/dev/x86/i8237.hh	/^#define __DEV_X86_I8237_HH__$/;"	d
__DEV_X86_I8254_HH__	src/dev/x86/i8254.hh	/^#define __DEV_X86_I8254_HH__$/;"	d
__DEV_X86_I8259_HH__	src/dev/x86/i8259.hh	/^#define __DEV_X86_I8259_HH__$/;"	d
__DEV_X86_INTDEV_HH__	src/dev/x86/intdev.hh	/^#define __DEV_X86_INTDEV_HH__$/;"	d
__DEV_X86_SOUTH_BRIDGE_HH__	src/dev/x86/south_bridge.hh	/^#define __DEV_X86_SOUTH_BRIDGE_HH__$/;"	d
__DEV_X86_SPEAKER_HH__	src/dev/x86/speaker.hh	/^#define __DEV_X86_SPEAKER_HH__$/;"	d
__DISK_IMAGE_HH__	src/dev/disk_image.hh	/^#define __DISK_IMAGE_HH__$/;"	d
__DTB_OBJECT_HH__	src/base/loader/dtb_object.hh	/^#define __DTB_OBJECT_HH__$/;"	d
__DUMP_MBUF_HH__	src/kern/tru64/dump_mbuf.hh	/^#define __DUMP_MBUF_HH__$/;"	d
__ECOFF_OBJECT_HH__	src/base/loader/ecoff_object.hh	/^#define __ECOFF_OBJECT_HH__$/;"	d
__ELF_OBJECT_HH__	src/base/loader/elf_object.hh	/^#define __ELF_OBJECT_HH__$/;"	d
__ETHERBUS_H__	src/dev/etherbus.hh	/^#define __ETHERBUS_H__$/;"	d
__ETHERDUMP_H__	src/dev/etherdump.hh	/^#define __ETHERDUMP_H__$/;"	d
__ETHERPKT_HH__	src/dev/etherpkt.hh	/^#define __ETHERPKT_HH__$/;"	d
__ETHERTAP_HH__	src/dev/ethertap.hh	/^#define __ETHERTAP_HH__$/;"	d
__FAULTS_HH__	src/sim/faults.hh	/^#define __FAULTS_HH__$/;"	d
__FLIPFLOP_H__	src/mem/ruby/network/orion/FlipFlop.hh	/^#define __FLIPFLOP_H__$/;"	d
__FUNCTION__	src/base/misc.hh	/^#define __FUNCTION__ /;"	d
__HASHMAP_HH__	src/base/hashmap.hh	/^#define __HASHMAP_HH__$/;"	d
__HOSTINFO_HH__	src/base/hostinfo.hh	/^#define __HOSTINFO_HH__$/;"	d
__IDE_CTRL_HH__	src/dev/ide_ctrl.hh	/^#define __IDE_CTRL_HH__$/;"	d
__IDE_DISK_HH__	src/dev/ide_disk.hh	/^#define __IDE_DISK_HH__$/;"	d
__INIFILE_HH__	src/base/inifile.hh	/^#define __INIFILE_HH__$/;"	d
__INSTRECORD_HH__	src/sim/insttracer.hh	/^#define __INSTRECORD_HH__$/;"	d
__INTR_CONTROL_HH__	src/cpu/intr_control.hh	/^#define __INTR_CONTROL_HH__$/;"	d
__ISA_FAKE_HH__	src/dev/isa_fake.hh	/^#define __ISA_FAKE_HH__$/;"	d
__KERNEL_STATS_HH__	src/kern/kernel_stats.hh	/^#define __KERNEL_STATS_HH__$/;"	d
__KERN_ALPHA_IDLE_EVENT_HH__	src/arch/alpha/idle_event.hh	/^#define __KERN_ALPHA_IDLE_EVENT_HH__$/;"	d
__KERN_LINUX_EVENTS_HH__	src/kern/linux/events.hh	/^#define __KERN_LINUX_EVENTS_HH__$/;"	d
__KERN_LINUX_LINUX_SYSCALLS_HH__	src/kern/linux/linux_syscalls.hh	/^#define __KERN_LINUX_LINUX_SYSCALLS_HH__$/;"	d
__KERN_MIPS_IDLE_EVENT_HH__	src/arch/mips/idle_event.hh	/^#define __KERN_MIPS_IDLE_EVENT_HH__$/;"	d
__KERN_OPERATINGSYSTEM_HH__	src/kern/operatingsystem.hh	/^#define __KERN_OPERATINGSYSTEM_HH__$/;"	d
__KERN_TRU64_TRU64_SYSCALLS_HH__	src/kern/tru64/tru64_syscalls.hh	/^#define __KERN_TRU64_TRU64_SYSCALLS_HH__$/;"	d
__KGDB_H__	src/arch/alpha/kgdb.h	/^#define __KGDB_H__$/;"	d
__LINUX_HH__	src/kern/linux/linux.hh	/^#define __LINUX_HH__$/;"	d
__M5_NAN	src/base/stats/text.cc	/^#define __M5_NAN$/;"	d	file:
__MALTAREG_H__	src/dev/mips/maltareg.h	/^#define __MALTAREG_H__$/;"	d
__MALTA_CCHIP_HH__	src/dev/mips/malta_cchip.hh	/^#define __MALTA_CCHIP_HH__$/;"	d
__MALTA_PCHIP_HH__	src/dev/mips/malta_pchip.hh	/^#define __MALTA_PCHIP_HH__$/;"	d
__MATRIXARBITER_H__	src/mem/ruby/network/orion/Allocator/MatrixArbiter.hh	/^#define __MATRIXARBITER_H__$/;"	d
__MATRIXCROSSBAR_H__	src/mem/ruby/network/orion/Crossbar/MatrixCrossbar.hh	/^#define __MATRIXCROSSBAR_H__$/;"	d
__MBUF_HH__	src/kern/tru64/mbuf.hh	/^#define __MBUF_HH__$/;"	d
__MEMUNIT_H__	src/mem/ruby/network/orion/Buffer/MemUnit.hh	/^#define __MEMUNIT_H__$/;"	d
__MEM_ADDR_MAPPER_HH__	src/mem/addr_mapper.hh	/^#define __MEM_ADDR_MAPPER_HH__$/;"	d
__MEM_BRIDGE_HH__	src/mem/bridge.hh	/^#define __MEM_BRIDGE_HH__$/;"	d
__MEM_BUS_HH__	src/mem/bus.hh	/^#define __MEM_BUS_HH__$/;"	d
__MEM_CACHE_CACHE_IMPL_HH__	src/mem/cache/cache_impl.hh	/^#define __MEM_CACHE_CACHE_IMPL_HH__$/;"	d
__MEM_CACHE_PREFETCH_BASE_PREFETCHER_HH__	src/mem/cache/prefetch/base.hh	/^#define __MEM_CACHE_PREFETCH_BASE_PREFETCHER_HH__$/;"	d
__MEM_CACHE_PREFETCH_GHB_PREFETCHER_HH__	src/mem/cache/prefetch/ghb.hh	/^#define __MEM_CACHE_PREFETCH_GHB_PREFETCHER_HH__$/;"	d
__MEM_CACHE_PREFETCH_STRIDE_PREFETCHER_HH__	src/mem/cache/prefetch/stride.hh	/^#define __MEM_CACHE_PREFETCH_STRIDE_PREFETCHER_HH__$/;"	d
__MEM_CACHE_PREFETCH_TAGGED_PREFETCHER_HH__	src/mem/cache/prefetch/tagged.hh	/^#define __MEM_CACHE_PREFETCH_TAGGED_PREFETCHER_HH__$/;"	d
__MEM_CACHE_TAGS_FA_LRU_HH__	src/mem/cache/tags/fa_lru.hh	/^#define __MEM_CACHE_TAGS_FA_LRU_HH__$/;"	d
__MEM_CACHE_TAGS_LRU_HH__	src/mem/cache/tags/lru.hh	/^#define __MEM_CACHE_TAGS_LRU_HH__$/;"	d
__MEM_COHERENT_BUS_HH__	src/mem/coherent_bus.hh	/^#define __MEM_COHERENT_BUS_HH__$/;"	d
__MEM_COMM_MONITOR_HH__	src/mem/comm_monitor.hh	/^#define __MEM_COMM_MONITOR_HH__$/;"	d
__MEM_DRAMSIM2_HH__	src/mem/dramsim2.hh	/^#define __MEM_DRAMSIM2_HH__$/;"	d
__MEM_DRAMSIM2_WRAPPER_HH__	src/mem/dramsim2_wrapper.hh	/^#define __MEM_DRAMSIM2_WRAPPER_HH__$/;"	d
__MEM_DRAM_CTRL_HH__	src/mem/dram_ctrl.hh	/^#define __MEM_DRAM_CTRL_HH__$/;"	d
__MEM_FS_PORT_PROXY_HH__	src/mem/fs_translating_port_proxy.hh	/^#define __MEM_FS_PORT_PROXY_HH__$/;"	d
__MEM_MEM_OBJECT_HH__	src/mem/mem_object.hh	/^#define __MEM_MEM_OBJECT_HH__$/;"	d
__MEM_MPORT_HH__	src/mem/mport.hh	/^#define __MEM_MPORT_HH__$/;"	d
__MEM_NONCOHERENT_BUS_HH__	src/mem/noncoherent_bus.hh	/^#define __MEM_NONCOHERENT_BUS_HH__$/;"	d
__MEM_PACKET_ACCESS_HH__	src/mem/packet_access.hh	/^#define __MEM_PACKET_ACCESS_HH__$/;"	d
__MEM_PACKET_HH__	src/mem/packet.hh	/^#define __MEM_PACKET_HH__$/;"	d
__MEM_PACKET_QUEUE_HH__	src/mem/packet_queue.hh	/^#define __MEM_PACKET_QUEUE_HH__$/;"	d
__MEM_PAGE_TABLE_HH__	src/mem/page_table.hh	/^#define __MEM_PAGE_TABLE_HH__$/;"	d
__MEM_PORT_HH__	src/mem/port.hh	/^#define __MEM_PORT_HH__$/;"	d
__MEM_PORT_PROXY_HH__	src/mem/port_proxy.hh	/^#define __MEM_PORT_PROXY_HH__$/;"	d
__MEM_QPORT_HH__	src/mem/qport.hh	/^#define __MEM_QPORT_HH__$/;"	d
__MEM_REQUEST_HH__	src/mem/request.hh	/^#define __MEM_REQUEST_HH__$/;"	d
__MEM_RUBY_BUFFERS_MESSAGEBUFFERNODE_HH__	src/mem/ruby/buffers/MessageBufferNode.hh	/^#define __MEM_RUBY_BUFFERS_MESSAGEBUFFERNODE_HH__$/;"	d
__MEM_RUBY_BUFFERS_MESSAGEBUFFER_HH__	src/mem/ruby/buffers/MessageBuffer.hh	/^#define __MEM_RUBY_BUFFERS_MESSAGEBUFFER_HH__$/;"	d
__MEM_RUBY_COMMON_ADDRESS_HH__	src/mem/ruby/common/Address.hh	/^#define __MEM_RUBY_COMMON_ADDRESS_HH__$/;"	d
__MEM_RUBY_COMMON_CONSUMER_HH__	src/mem/ruby/common/Consumer.hh	/^#define __MEM_RUBY_COMMON_CONSUMER_HH__$/;"	d
__MEM_RUBY_COMMON_DATABLOCK_HH__	src/mem/ruby/common/DataBlock.hh	/^#define __MEM_RUBY_COMMON_DATABLOCK_HH__$/;"	d
__MEM_RUBY_COMMON_GLOBAL_HH__	src/mem/ruby/common/Global.hh	/^#define __MEM_RUBY_COMMON_GLOBAL_HH__$/;"	d
__MEM_RUBY_COMMON_HISTOGRAM_HH__	src/mem/ruby/common/Histogram.hh	/^#define __MEM_RUBY_COMMON_HISTOGRAM_HH__$/;"	d
__MEM_RUBY_COMMON_NETDEST_HH__	src/mem/ruby/common/NetDest.hh	/^#define __MEM_RUBY_COMMON_NETDEST_HH__$/;"	d
__MEM_RUBY_COMMON_SET_HH__	src/mem/ruby/common/Set.hh	/^#define __MEM_RUBY_COMMON_SET_HH__$/;"	d
__MEM_RUBY_COMMON_SUBBLOCK_HH__	src/mem/ruby/common/SubBlock.hh	/^#define __MEM_RUBY_COMMON_SUBBLOCK_HH__$/;"	d
__MEM_RUBY_FILTERS_ABSTRACTBLOOMFILTER_HH__	src/mem/ruby/filters/AbstractBloomFilter.hh	/^#define __MEM_RUBY_FILTERS_ABSTRACTBLOOMFILTER_HH__$/;"	d
__MEM_RUBY_FILTERS_BLOCKBLOOMFILTER_HH__	src/mem/ruby/filters/BlockBloomFilter.hh	/^#define __MEM_RUBY_FILTERS_BLOCKBLOOMFILTER_HH__$/;"	d
__MEM_RUBY_FILTERS_BULKBLOOMFILTER_HH__	src/mem/ruby/filters/BulkBloomFilter.hh	/^#define __MEM_RUBY_FILTERS_BULKBLOOMFILTER_HH__$/;"	d
__MEM_RUBY_FILTERS_GENERICBLOOMFILTER_HH__	src/mem/ruby/filters/GenericBloomFilter.hh	/^#define __MEM_RUBY_FILTERS_GENERICBLOOMFILTER_HH__$/;"	d
__MEM_RUBY_FILTERS_H3BLOOMFILTER_HH__	src/mem/ruby/filters/H3BloomFilter.hh	/^#define __MEM_RUBY_FILTERS_H3BLOOMFILTER_HH__$/;"	d
__MEM_RUBY_FILTERS_LSBCOUNTINGBLOOMFILTER_HH__	src/mem/ruby/filters/LSB_CountingBloomFilter.hh	/^#define __MEM_RUBY_FILTERS_LSBCOUNTINGBLOOMFILTER_HH__$/;"	d
__MEM_RUBY_FILTERS_MULTIBITSELBLOOMFILTER_HH__	src/mem/ruby/filters/MultiBitSelBloomFilter.hh	/^#define __MEM_RUBY_FILTERS_MULTIBITSELBLOOMFILTER_HH__$/;"	d
__MEM_RUBY_FILTERS_MULTIGRAINBLOOMFILTER_HH__	src/mem/ruby/filters/MultiGrainBloomFilter.hh	/^#define __MEM_RUBY_FILTERS_MULTIGRAINBLOOMFILTER_HH__$/;"	d
__MEM_RUBY_FILTERS_NONCOUNTINGBLOOMFILTER_HH__	src/mem/ruby/filters/NonCountingBloomFilter.hh	/^#define __MEM_RUBY_FILTERS_NONCOUNTINGBLOOMFILTER_HH__$/;"	d
__MEM_RUBY_NETWORK_BASIC_LINK_HH__	src/mem/ruby/network/BasicLink.hh	/^#define __MEM_RUBY_NETWORK_BASIC_LINK_HH__$/;"	d
__MEM_RUBY_NETWORK_BASIC_ROUTER_HH__	src/mem/ruby/network/BasicRouter.hh	/^#define __MEM_RUBY_NETWORK_BASIC_ROUTER_HH__$/;"	d
__MEM_RUBY_NETWORK_FAULT_MODEL_HH__	src/mem/ruby/network/fault_model/FaultModel.hh	/^#define __MEM_RUBY_NETWORK_FAULT_MODEL_HH__$/;"	d
__MEM_RUBY_NETWORK_GARNET_BASEGARNETNETWORK_HH__	src/mem/ruby/network/garnet/BaseGarnetNetwork.hh	/^#define __MEM_RUBY_NETWORK_GARNET_BASEGARNETNETWORK_HH__$/;"	d
__MEM_RUBY_NETWORK_GARNET_FIXED_PIPELINE_CREDIT_LINK_D_HH__	src/mem/ruby/network/garnet/fixed-pipeline/CreditLink_d.hh	/^#define __MEM_RUBY_NETWORK_GARNET_FIXED_PIPELINE_CREDIT_LINK_D_HH__$/;"	d
__MEM_RUBY_NETWORK_GARNET_FIXED_PIPELINE_FLIT_BUFFER_D_HH__	src/mem/ruby/network/garnet/fixed-pipeline/flitBuffer_d.hh	/^#define __MEM_RUBY_NETWORK_GARNET_FIXED_PIPELINE_FLIT_BUFFER_D_HH__$/;"	d
__MEM_RUBY_NETWORK_GARNET_FIXED_PIPELINE_FLIT_D_HH__	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.hh	/^#define __MEM_RUBY_NETWORK_GARNET_FIXED_PIPELINE_FLIT_D_HH__$/;"	d
__MEM_RUBY_NETWORK_GARNET_FIXED_PIPELINE_GARNETNETWORK_D_HH__	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.hh	/^#define __MEM_RUBY_NETWORK_GARNET_FIXED_PIPELINE_GARNETNETWORK_D_HH__$/;"	d
__MEM_RUBY_NETWORK_GARNET_FIXED_PIPELINE_INPUT_UNIT_D_HH__	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.hh	/^#define __MEM_RUBY_NETWORK_GARNET_FIXED_PIPELINE_INPUT_UNIT_D_HH__$/;"	d
__MEM_RUBY_NETWORK_GARNET_FIXED_PIPELINE_LINK_HH__	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.hh	/^#define __MEM_RUBY_NETWORK_GARNET_FIXED_PIPELINE_LINK_HH__$/;"	d
__MEM_RUBY_NETWORK_GARNET_FIXED_PIPELINE_NETWORK_INTERFACE_D_HH__	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.hh	/^#define __MEM_RUBY_NETWORK_GARNET_FIXED_PIPELINE_NETWORK_INTERFACE_D_HH__$/;"	d
__MEM_RUBY_NETWORK_GARNET_FIXED_PIPELINE_NETWORK_LINK_D_HH__	src/mem/ruby/network/garnet/fixed-pipeline/NetworkLink_d.hh	/^#define __MEM_RUBY_NETWORK_GARNET_FIXED_PIPELINE_NETWORK_LINK_D_HH__$/;"	d
__MEM_RUBY_NETWORK_GARNET_FIXED_PIPELINE_OUTPUT_UNIT_D_HH__	src/mem/ruby/network/garnet/fixed-pipeline/OutputUnit_d.hh	/^#define __MEM_RUBY_NETWORK_GARNET_FIXED_PIPELINE_OUTPUT_UNIT_D_HH__$/;"	d
__MEM_RUBY_NETWORK_GARNET_FIXED_PIPELINE_OUT_VC_STATE_D_HH__	src/mem/ruby/network/garnet/fixed-pipeline/OutVcState_d.hh	/^#define __MEM_RUBY_NETWORK_GARNET_FIXED_PIPELINE_OUT_VC_STATE_D_HH__$/;"	d
__MEM_RUBY_NETWORK_GARNET_FIXED_PIPELINE_ROUTER_D_HH__	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^#define __MEM_RUBY_NETWORK_GARNET_FIXED_PIPELINE_ROUTER_D_HH__$/;"	d
__MEM_RUBY_NETWORK_GARNET_FIXED_PIPELINE_ROUTING_UNIT_D_HH__	src/mem/ruby/network/garnet/fixed-pipeline/RoutingUnit_d.hh	/^#define __MEM_RUBY_NETWORK_GARNET_FIXED_PIPELINE_ROUTING_UNIT_D_HH__$/;"	d
__MEM_RUBY_NETWORK_GARNET_FIXED_PIPELINE_SWITCH_D_HH__	src/mem/ruby/network/garnet/fixed-pipeline/Switch_d.hh	/^#define __MEM_RUBY_NETWORK_GARNET_FIXED_PIPELINE_SWITCH_D_HH__$/;"	d
__MEM_RUBY_NETWORK_GARNET_FIXED_PIPELINE_SW_ALLOCATOR_D_HH__	src/mem/ruby/network/garnet/fixed-pipeline/SWallocator_d.hh	/^#define __MEM_RUBY_NETWORK_GARNET_FIXED_PIPELINE_SW_ALLOCATOR_D_HH__$/;"	d
__MEM_RUBY_NETWORK_GARNET_FIXED_PIPELINE_VC_ALLOCATOR_D_HH__	src/mem/ruby/network/garnet/fixed-pipeline/VCallocator_d.hh	/^#define __MEM_RUBY_NETWORK_GARNET_FIXED_PIPELINE_VC_ALLOCATOR_D_HH__$/;"	d
__MEM_RUBY_NETWORK_GARNET_FIXED_PIPELINE_VIRTUAL_CHANNEL_D_HH__	src/mem/ruby/network/garnet/fixed-pipeline/VirtualChannel_d.hh	/^#define __MEM_RUBY_NETWORK_GARNET_FIXED_PIPELINE_VIRTUAL_CHANNEL_D_HH__$/;"	d
__MEM_RUBY_NETWORK_GARNET_FLEXIBLE_PIPELINE_FLEXIBLE_CONSUMER_HH__	src/mem/ruby/network/garnet/flexible-pipeline/FlexibleConsumer.hh	/^#define __MEM_RUBY_NETWORK_GARNET_FLEXIBLE_PIPELINE_FLEXIBLE_CONSUMER_HH__$/;"	d
__MEM_RUBY_NETWORK_GARNET_FLEXIBLE_PIPELINE_FLIT_BUFFER_HH__	src/mem/ruby/network/garnet/flexible-pipeline/flitBuffer.hh	/^#define __MEM_RUBY_NETWORK_GARNET_FLEXIBLE_PIPELINE_FLIT_BUFFER_HH__$/;"	d
__MEM_RUBY_NETWORK_GARNET_FLEXIBLE_PIPELINE_FLIT_HH__	src/mem/ruby/network/garnet/flexible-pipeline/flit.hh	/^#define __MEM_RUBY_NETWORK_GARNET_FLEXIBLE_PIPELINE_FLIT_HH__$/;"	d
__MEM_RUBY_NETWORK_GARNET_FLEXIBLE_PIPELINE_GARNET_NETWORK_HH__	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.hh	/^#define __MEM_RUBY_NETWORK_GARNET_FLEXIBLE_PIPELINE_GARNET_NETWORK_HH__$/;"	d
__MEM_RUBY_NETWORK_GARNET_FLEXIBLE_PIPELINE_IN_VC_STATE_HH__	src/mem/ruby/network/garnet/flexible-pipeline/InVcState.hh	/^#define __MEM_RUBY_NETWORK_GARNET_FLEXIBLE_PIPELINE_IN_VC_STATE_HH__$/;"	d
__MEM_RUBY_NETWORK_GARNET_FLEXIBLE_PIPELINE_LINK_HH__	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.hh	/^#define __MEM_RUBY_NETWORK_GARNET_FLEXIBLE_PIPELINE_LINK_HH__$/;"	d
__MEM_RUBY_NETWORK_GARNET_FLEXIBLE_PIPELINE_NETWORK_INTERFACE_HH__	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.hh	/^#define __MEM_RUBY_NETWORK_GARNET_FLEXIBLE_PIPELINE_NETWORK_INTERFACE_HH__$/;"	d
__MEM_RUBY_NETWORK_GARNET_FLEXIBLE_PIPELINE_NETWORK_LINK_HH__	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.hh	/^#define __MEM_RUBY_NETWORK_GARNET_FLEXIBLE_PIPELINE_NETWORK_LINK_HH__$/;"	d
__MEM_RUBY_NETWORK_GARNET_FLEXIBLE_PIPELINE_OUT_VC_STATE_HH__	src/mem/ruby/network/garnet/flexible-pipeline/OutVcState.hh	/^#define __MEM_RUBY_NETWORK_GARNET_FLEXIBLE_PIPELINE_OUT_VC_STATE_HH__$/;"	d
__MEM_RUBY_NETWORK_GARNET_FLEXIBLE_PIPELINE_ROUTER_HH__	src/mem/ruby/network/garnet/flexible-pipeline/Router.hh	/^#define __MEM_RUBY_NETWORK_GARNET_FLEXIBLE_PIPELINE_ROUTER_HH__$/;"	d
__MEM_RUBY_NETWORK_GARNET_FLEXIBLE_PIPELINE_VC_ARBITER_HH__	src/mem/ruby/network/garnet/flexible-pipeline/VCarbiter.hh	/^#define __MEM_RUBY_NETWORK_GARNET_FLEXIBLE_PIPELINE_VC_ARBITER_HH__$/;"	d
__MEM_RUBY_NETWORK_GARNET_NETWORKHEADER_HH__	src/mem/ruby/network/garnet/NetworkHeader.hh	/^#define __MEM_RUBY_NETWORK_GARNET_NETWORKHEADER_HH__$/;"	d
__MEM_RUBY_NETWORK_NETWORK_HH__	src/mem/ruby/network/Network.hh	/^#define __MEM_RUBY_NETWORK_NETWORK_HH__$/;"	d
__MEM_RUBY_NETWORK_SIMPLE_LINK_HH__	src/mem/ruby/network/simple/SimpleLink.hh	/^#define __MEM_RUBY_NETWORK_SIMPLE_LINK_HH__$/;"	d
__MEM_RUBY_NETWORK_SIMPLE_PERFECTSWITCH_HH__	src/mem/ruby/network/simple/PerfectSwitch.hh	/^#define __MEM_RUBY_NETWORK_SIMPLE_PERFECTSWITCH_HH__$/;"	d
__MEM_RUBY_NETWORK_SIMPLE_SIMPLENETWORK_HH__	src/mem/ruby/network/simple/SimpleNetwork.hh	/^#define __MEM_RUBY_NETWORK_SIMPLE_SIMPLENETWORK_HH__$/;"	d
__MEM_RUBY_NETWORK_SIMPLE_SWITCH_HH__	src/mem/ruby/network/simple/Switch.hh	/^#define __MEM_RUBY_NETWORK_SIMPLE_SWITCH_HH__$/;"	d
__MEM_RUBY_NETWORK_SIMPLE_THROTTLE_HH__	src/mem/ruby/network/simple/Throttle.hh	/^#define __MEM_RUBY_NETWORK_SIMPLE_THROTTLE_HH__$/;"	d
__MEM_RUBY_NETWORK_TOPOLOGY_HH__	src/mem/ruby/network/Topology.hh	/^#define __MEM_RUBY_NETWORK_TOPOLOGY_HH__$/;"	d
__MEM_RUBY_PROFILER_ACCESSTRACEFORADDRESS_HH__	src/mem/ruby/profiler/AccessTraceForAddress.hh	/^#define __MEM_RUBY_PROFILER_ACCESSTRACEFORADDRESS_HH__$/;"	d
__MEM_RUBY_PROFILER_ADDRESSPROFILER_HH__	src/mem/ruby/profiler/AddressProfiler.hh	/^#define __MEM_RUBY_PROFILER_ADDRESSPROFILER_HH__$/;"	d
__MEM_RUBY_PROFILER_MEMCNTRLPROFILER_HH__	src/mem/ruby/profiler/MemCntrlProfiler.hh	/^#define __MEM_RUBY_PROFILER_MEMCNTRLPROFILER_HH__$/;"	d
__MEM_RUBY_PROFILER_PROFILER_HH__	src/mem/ruby/profiler/Profiler.hh	/^#define __MEM_RUBY_PROFILER_PROFILER_HH__$/;"	d
__MEM_RUBY_PROFILER_STORETRACE_HH__	src/mem/ruby/profiler/StoreTrace.hh	/^#define __MEM_RUBY_PROFILER_STORETRACE_HH__$/;"	d
__MEM_RUBY_RECORDER_CACHERECORDER_HH__	src/mem/ruby/recorder/CacheRecorder.hh	/^#define __MEM_RUBY_RECORDER_CACHERECORDER_HH__$/;"	d
__MEM_RUBY_SLICC_INTERFACE_ABSTRACTCACHEENTRY_HH__	src/mem/ruby/slicc_interface/AbstractCacheEntry.hh	/^#define __MEM_RUBY_SLICC_INTERFACE_ABSTRACTCACHEENTRY_HH__$/;"	d
__MEM_RUBY_SLICC_INTERFACE_ABSTRACTCONTROLLER_HH__	src/mem/ruby/slicc_interface/AbstractController.hh	/^#define __MEM_RUBY_SLICC_INTERFACE_ABSTRACTCONTROLLER_HH__$/;"	d
__MEM_RUBY_SLICC_INTERFACE_ABSTRACTENTRY_HH__	src/mem/ruby/slicc_interface/AbstractEntry.hh	/^#define __MEM_RUBY_SLICC_INTERFACE_ABSTRACTENTRY_HH__$/;"	d
__MEM_RUBY_SLICC_INTERFACE_MESSAGE_HH__	src/mem/ruby/slicc_interface/Message.hh	/^#define __MEM_RUBY_SLICC_INTERFACE_MESSAGE_HH__$/;"	d
__MEM_RUBY_SLICC_INTERFACE_NETWORKMESSAGE_HH__	src/mem/ruby/slicc_interface/NetworkMessage.hh	/^#define __MEM_RUBY_SLICC_INTERFACE_NETWORKMESSAGE_HH__$/;"	d
__MEM_RUBY_SLICC_INTERFACE_RUBYSLICCUTIL_HH__	src/mem/ruby/slicc_interface/RubySlicc_Util.hh	/^#define __MEM_RUBY_SLICC_INTERFACE_RUBYSLICCUTIL_HH__$/;"	d
__MEM_RUBY_SLICC_INTERFACE_RUBYSLICC_COMPONENTMAPPINGS_HH__	src/mem/ruby/slicc_interface/RubySlicc_ComponentMapping.hh	/^#define __MEM_RUBY_SLICC_INTERFACE_RUBYSLICC_COMPONENTMAPPINGS_HH__$/;"	d
__MEM_RUBY_SLICC_INTERFACE_RUBYSLICC_INCLUDES_HH__	src/mem/ruby/slicc_interface/RubySlicc_includes.hh	/^#define __MEM_RUBY_SLICC_INTERFACE_RUBYSLICC_INCLUDES_HH__$/;"	d
__MEM_RUBY_SLICC_INTERFACE_RUBY_REQUEST_HH__	src/mem/ruby/slicc_interface/RubyRequest.hh	/^#define __MEM_RUBY_SLICC_INTERFACE_RUBY_REQUEST_HH__$/;"	d
__MEM_RUBY_SYSTEM_ABSTRACTREPLACEMENTPOLICY_HH__	src/mem/ruby/system/AbstractReplacementPolicy.hh	/^#define __MEM_RUBY_SYSTEM_ABSTRACTREPLACEMENTPOLICY_HH__$/;"	d
__MEM_RUBY_SYSTEM_ABSTRACT_MEMORY_CONTROL_HH__	src/mem/ruby/system/MemoryControl.hh	/^#define __MEM_RUBY_SYSTEM_ABSTRACT_MEMORY_CONTROL_HH__$/;"	d
__MEM_RUBY_SYSTEM_BANKEDARRAY_HH__	src/mem/ruby/system/BankedArray.hh	/^#define __MEM_RUBY_SYSTEM_BANKEDARRAY_HH__$/;"	d
__MEM_RUBY_SYSTEM_CACHEMEMORY_HH__	src/mem/ruby/system/CacheMemory.hh	/^#define __MEM_RUBY_SYSTEM_CACHEMEMORY_HH__$/;"	d
__MEM_RUBY_SYSTEM_DIRECTORYMEMORY_HH__	src/mem/ruby/system/DirectoryMemory.hh	/^#define __MEM_RUBY_SYSTEM_DIRECTORYMEMORY_HH__$/;"	d
__MEM_RUBY_SYSTEM_DMASEQUENCER_HH__	src/mem/ruby/system/DMASequencer.hh	/^#define __MEM_RUBY_SYSTEM_DMASEQUENCER_HH__$/;"	d
__MEM_RUBY_SYSTEM_LRUPOLICY_HH__	src/mem/ruby/system/LRUPolicy.hh	/^#define __MEM_RUBY_SYSTEM_LRUPOLICY_HH__$/;"	d
__MEM_RUBY_SYSTEM_MACHINEID_HH__	src/mem/ruby/system/MachineID.hh	/^#define __MEM_RUBY_SYSTEM_MACHINEID_HH__$/;"	d
__MEM_RUBY_SYSTEM_MEMORYNODE_HH__	src/mem/ruby/system/MemoryNode.hh	/^#define __MEM_RUBY_SYSTEM_MEMORYNODE_HH__$/;"	d
__MEM_RUBY_SYSTEM_MEMORYVECTOR_HH__	src/mem/ruby/system/MemoryVector.hh	/^#define __MEM_RUBY_SYSTEM_MEMORYVECTOR_HH__$/;"	d
__MEM_RUBY_SYSTEM_MEMORY_CONTROL_HH__	src/mem/ruby/system/RubyMemoryControl.hh	/^#define __MEM_RUBY_SYSTEM_MEMORY_CONTROL_HH__$/;"	d
__MEM_RUBY_SYSTEM_PERFECTCACHEMEMORY_HH__	src/mem/ruby/system/PerfectCacheMemory.hh	/^#define __MEM_RUBY_SYSTEM_PERFECTCACHEMEMORY_HH__$/;"	d
__MEM_RUBY_SYSTEM_PERSISTENTTABLE_HH__	src/mem/ruby/system/PersistentTable.hh	/^#define __MEM_RUBY_SYSTEM_PERSISTENTTABLE_HH__$/;"	d
__MEM_RUBY_SYSTEM_PSEUDOLRUPOLICY_HH__	src/mem/ruby/system/PseudoLRUPolicy.hh	/^#define __MEM_RUBY_SYSTEM_PSEUDOLRUPOLICY_HH__$/;"	d
__MEM_RUBY_SYSTEM_RUBYPORTPROXY_HH__	src/mem/ruby/system/RubyPortProxy.hh	/^#define __MEM_RUBY_SYSTEM_RUBYPORTPROXY_HH__$/;"	d
__MEM_RUBY_SYSTEM_RUBYPORT_HH__	src/mem/ruby/system/RubyPort.hh	/^#define __MEM_RUBY_SYSTEM_RUBYPORT_HH__$/;"	d
__MEM_RUBY_SYSTEM_SEQUENCER_HH__	src/mem/ruby/system/Sequencer.hh	/^#define __MEM_RUBY_SYSTEM_SEQUENCER_HH__$/;"	d
__MEM_RUBY_SYSTEM_SPARSEMEMORY_HH__	src/mem/ruby/system/SparseMemory.hh	/^#define __MEM_RUBY_SYSTEM_SPARSEMEMORY_HH__$/;"	d
__MEM_RUBY_SYSTEM_SYSTEM_HH__	src/mem/ruby/system/System.hh	/^#define __MEM_RUBY_SYSTEM_SYSTEM_HH__$/;"	d
__MEM_RUBY_SYSTEM_TBETABLE_HH__	src/mem/ruby/system/TBETable.hh	/^#define __MEM_RUBY_SYSTEM_TBETABLE_HH__$/;"	d
__MEM_RUBY_SYSTEM_TIMERTABLE_HH__	src/mem/ruby/system/TimerTable.hh	/^#define __MEM_RUBY_SYSTEM_TIMERTABLE_HH__$/;"	d
__MEM_RUBY_SYSTEM_WIREBUFFER_HH__	src/mem/ruby/system/WireBuffer.hh	/^#define __MEM_RUBY_SYSTEM_WIREBUFFER_HH__$/;"	d
__MEM_SE_TRANSLATING_PORT_PROXY_HH__	src/mem/se_translating_port_proxy.hh	/^#define __MEM_SE_TRANSLATING_PORT_PROXY_HH__$/;"	d
__MEM_TPORT_HH__	src/mem/tport.hh	/^#define __MEM_TPORT_HH__$/;"	d
__MEM__CACHE__MISS__MSHR_QUEUE_HH__	src/mem/cache/mshr_queue.hh	/^#define __MEM__CACHE__MISS__MSHR_QUEUE_HH__$/;"	d
__MIPS_ACCESS_H__	src/dev/mips/access.h	/^#define __MIPS_ACCESS_H__$/;"	d
__MIPS_FAULTS_HH__	src/arch/mips/faults.hh	/^#define __MIPS_FAULTS_HH__$/;"	d
__MIPS_LINUX_PROCESS_HH__	src/arch/mips/linux/process.hh	/^#define __MIPS_LINUX_PROCESS_HH__$/;"	d
__MIPS_PROCESS_HH__	src/arch/mips/process.hh	/^#define __MIPS_PROCESS_HH__$/;"	d
__MSHR_HH__	src/mem/cache/mshr.hh	/^#define __MSHR_HH__$/;"	d
__MULTREECROSSBAR_H__	src/mem/ruby/network/orion/Crossbar/MultreeCrossbar.hh	/^#define __MULTREECROSSBAR_H__$/;"	d
__OBJECT_FILE_HH__	src/base/loader/object_file.hh	/^#define __OBJECT_FILE_HH__$/;"	d
__ORIONCONFIG_H__	src/mem/ruby/network/orion/OrionConfig.hh	/^#define __ORIONCONFIG_H__$/;"	d
__ORIONLINK_H__	src/mem/ruby/network/orion/OrionLink.hh	/^#define __ORIONLINK_H__$/;"	d
__ORIONROUTER_H__	src/mem/ruby/network/orion/OrionRouter.hh	/^#define __ORIONROUTER_H__$/;"	d
__ORION_H__	src/mem/ruby/network/orion/orion.hh	/^#define __ORION_H__$/;"	d
__OUTDRVUNIT_H__	src/mem/ruby/network/orion/Buffer/OutdrvUnit.hh	/^#define __OUTDRVUNIT_H__$/;"	d
__PCICONFIGALL_HH__	src/dev/pciconfigall.hh	/^#define __PCICONFIGALL_HH__$/;"	d
__PCIREG_H__	src/dev/pcireg.h	/^#define __PCIREG_H__$/;"	d
__PC_EVENT_HH__	src/cpu/pc_event.hh	/^#define __PC_EVENT_HH__$/;"	d
__PHYSICAL_MEMORY_HH__	src/mem/physical.hh	/^#define __PHYSICAL_MEMORY_HH__$/;"	d
__POLLEVENT_H__	src/base/pollevent.hh	/^#define __POLLEVENT_H__$/;"	d
__POWER_LINUX_PROCESS_HH__	src/arch/power/linux/process.hh	/^#define __POWER_LINUX_PROCESS_HH__$/;"	d
__POWER_PROCESS_HH__	src/arch/power/process.hh	/^#define __POWER_PROCESS_HH__$/;"	d
__PRECHARGEUNIT_H__	src/mem/ruby/network/orion/Buffer/PrechargeUnit.hh	/^#define __PRECHARGEUNIT_H__$/;"	d
__PRINTABLE_HH__	src/base/printable.hh	/^#define __PRINTABLE_HH__$/;"	d
__PRINTF_HH__	src/kern/tru64/printf.hh	/^#define __PRINTF_HH__$/;"	d
__PRINTK_HH__	src/kern/linux/printk.hh	/^#define __PRINTK_HH__$/;"	d
__PROCESS_HH__	src/sim/process.hh	/^#define __PROCESS_HH__$/;"	d
__PROTO_PROTOIO_HH__	src/proto/protoio.hh	/^#define __PROTO_PROTOIO_HH__$/;"	d
__PYTHON_SWIG_PYEVENT_HH__	src/python/swig/pyevent.hh	/^#define __PYTHON_SWIG_PYEVENT_HH__$/;"	d
__REGISTER_H__	src/mem/ruby/network/orion/Buffer/Register.hh	/^#define __REGISTER_H__$/;"	d
__REMOTE_GDB_HH__	src/base/remote_gdb.hh	/^#define __REMOTE_GDB_HH__$/;"	d
__RRARBITER_H__	src/mem/ruby/network/orion/Allocator/RRArbiter.hh	/^#define __RRARBITER_H__$/;"	d
__SERIALIZE_HH__	src/sim/serialize.hh	/^#define __SERIALIZE_HH__$/;"	d
__SIMPLE_MEMORY_HH__	src/mem/simple_mem.hh	/^#define __SIMPLE_MEMORY_HH__$/;"	d
__SIM_ARGUMENTS_HH__	src/sim/arguments.hh	/^#define __SIM_ARGUMENTS_HH__$/;"	d
__SIM_BYTE_SWAP_HH__	src/sim/byteswap.hh	/^#define __SIM_BYTE_SWAP_HH__$/;"	d
__SIM_CLOCKED_OBJECT_HH__	src/sim/clocked_object.hh	/^#define __SIM_CLOCKED_OBJECT_HH__$/;"	d
__SIM_CLOCK_DOMAIN_HH__	src/sim/clock_domain.hh	/^#define __SIM_CLOCK_DOMAIN_HH__$/;"	d
__SIM_CORE_HH__	src/sim/core.hh	/^#define __SIM_CORE_HH__$/;"	d
__SIM_DEBUG_HH__	src/sim/debug.hh	/^#define __SIM_DEBUG_HH__$/;"	d
__SIM_DRAIN_HH__	src/sim/drain.hh	/^#define __SIM_DRAIN_HH__$/;"	d
__SIM_EVENTQ_HH__	src/sim/eventq.hh	/^#define __SIM_EVENTQ_HH__$/;"	d
__SIM_EVENTQ_IMPL_HH__	src/sim/eventq_impl.hh	/^#define __SIM_EVENTQ_IMPL_HH__$/;"	d
__SIM_EXIT_HH__	src/sim/sim_exit.hh	/^#define __SIM_EXIT_HH__$/;"	d
__SIM_FAULT_FWD_HH__	src/sim/fault_fwd.hh	/^#define __SIM_FAULT_FWD_HH__$/;"	d
__SIM_FULL_SYSTEM_HH__	src/sim/full_system.hh	/^#define __SIM_FULL_SYSTEM_HH__$/;"	d
__SIM_GLOBAL_EVENT_HH__	src/sim/global_event.hh	/^#define __SIM_GLOBAL_EVENT_HH__$/;"	d
__SIM_INIT_HH__	src/sim/init.hh	/^#define __SIM_INIT_HH__$/;"	d
__SIM_MICROCODE_ROM_HH__	src/sim/microcode_rom.hh	/^#define __SIM_MICROCODE_ROM_HH__$/;"	d
__SIM_OBJECT_HH__	src/sim/sim_object.hh	/^#define __SIM_OBJECT_HH__$/;"	d
__SIM_PROBE_PROBE_HH__	src/sim/probe/probe.hh	/^#define __SIM_PROBE_PROBE_HH__$/;"	d
__SIM_PROCESS_IMPL_HH__	src/sim/process_impl.hh	/^#define __SIM_PROCESS_IMPL_HH__$/;"	d
__SIM_PSEUDO_INST_HH__	src/sim/pseudo_inst.hh	/^#define __SIM_PSEUDO_INST_HH__$/;"	d
__SIM_ROOT_HH__	src/sim/root.hh	/^#define __SIM_ROOT_HH__$/;"	d
__SIM_SIM_EVENTS_HH__	src/sim/sim_events.hh	/^#define __SIM_SIM_EVENTS_HH__$/;"	d
__SIM_STATS_HH__	src/sim/stats.hh	/^#define __SIM_STATS_HH__$/;"	d
__SIM_STAT_CONTROL_HH__	src/sim/stat_control.hh	/^#define __SIM_STAT_CONTROL_HH__$/;"	d
__SIM_SYSCALLRETURN_HH__	src/sim/syscallreturn.hh	/^#define __SIM_SYSCALLRETURN_HH__$/;"	d
__SIM_SYSCALL_EMUL_HH__	src/sim/syscall_emul.hh	/^#define __SIM_SYSCALL_EMUL_HH__$/;"	d
__SIM_TLB_HH__	src/sim/tlb.hh	/^#define __SIM_TLB_HH__$/;"	d
__SIM_VOLTAGE_DOMAIN_HH__	src/sim/voltage_domain.hh	/^#define __SIM_VOLTAGE_DOMAIN_HH__$/;"	d
__SINIC_REG32	src/dev/sinicreg.hh	/^#define __SINIC_REG32(/;"	d
__SINIC_REG64	src/dev/sinicreg.hh	/^#define __SINIC_REG64(/;"	d
__SINIC_VAL32	src/dev/sinicreg.hh	/^#define __SINIC_VAL32(/;"	d
__SINIC_VAL64	src/dev/sinicreg.hh	/^#define __SINIC_VAL64(/;"	d
__SMT_HH__	src/cpu/smt.hh	/^#define __SMT_HH__$/;"	d
__SOCKET_HH__	src/base/socket.hh	/^#define __SOCKET_HH__$/;"	d
__SOLARIS_HH__	src/kern/solaris/solaris.hh	/^#define __SOLARIS_HH__$/;"	d
__SPARC_FAULTS_HH__	src/arch/sparc/faults.hh	/^#define __SPARC_FAULTS_HH__$/;"	d
__SPARC_LINUX_PROCESS_HH__	src/arch/sparc/linux/process.hh	/^#define __SPARC_LINUX_PROCESS_HH__$/;"	d
__SPARC_PROCESS_HH__	src/arch/sparc/process.hh	/^#define __SPARC_PROCESS_HH__$/;"	d
__SPARC_SOLARIS_PROCESS_HH__	src/arch/sparc/solaris/process.hh	/^#define __SPARC_SOLARIS_PROCESS_HH__$/;"	d
__SRAM_H__	src/mem/ruby/network/orion/Buffer/SRAM.hh	/^#define __SRAM_H__$/;"	d
__STD_TYPES_HH__	src/cpu/inst_seq.hh	/^#define __STD_TYPES_HH__$/;"	d
__STR_HH__	src/base/str.hh	/^#define __STR_HH__$/;"	d
__SWALLOCATOR_H__	src/mem/ruby/network/orion/Allocator/SWAllocator.hh	/^#define __SWALLOCATOR_H__$/;"	d
__SYMTAB_HH__	src/base/loader/symtab.hh	/^#define __SYMTAB_HH__$/;"	d
__SYSTEM_EVENTS_HH__	src/kern/system_events.hh	/^#define __SYSTEM_EVENTS_HH__$/;"	d
__SYSTEM_HH__	src/sim/system.hh	/^#define __SYSTEM_HH__$/;"	d
__SubBitUnion	src/base/bitunion.hh	/^#define __SubBitUnion(/;"	d
__TECHPARAMETER_H__	src/mem/ruby/network/orion/TechParameter.hh	/^#define __TECHPARAMETER_H__$/;"	d
__TRU64_EVENTS_HH__	src/kern/tru64/tru64_events.hh	/^#define __TRU64_EVENTS_HH__$/;"	d
__TRU64_HH__	src/kern/tru64/tru64.hh	/^#define __TRU64_HH__$/;"	d
__TSUNAMIREG_H__	src/dev/alpha/tsunamireg.h	/^#define __TSUNAMIREG_H__$/;"	d
__TSUNAMI_CCHIP_HH__	src/dev/alpha/tsunami_cchip.hh	/^#define __TSUNAMI_CCHIP_HH__$/;"	d
__TSUNAMI_PCHIP_HH__	src/dev/alpha/tsunami_pchip.hh	/^#define __TSUNAMI_PCHIP_HH__$/;"	d
__TYPE_H__	src/mem/ruby/network/orion/Type.hh	/^#define __TYPE_H__$/;"	d
__UART_HH__	src/dev/uart.hh	/^#define __UART_HH__$/;"	d
__UNITTEST_UNITTEST_HH__	src/unittest/unittest.hh	/^#define __UNITTEST_UNITTEST_HH__$/;"	d
__VCALLOCATOR_H__	src/mem/ruby/network/orion/Allocator/VCAllocator.hh	/^#define __VCALLOCATOR_H__$/;"	d
__WIRE_H__	src/mem/ruby/network/orion/Wire.hh	/^#define __WIRE_H__$/;"	d
__WORDLINEUNIT_H__	src/mem/ruby/network/orion/Buffer/WordlineUnit.hh	/^#define __WORDLINEUNIT_H__$/;"	d
__X86_LINUX_PROCESS_HH__	src/arch/x86/linux/process.hh	/^#define __X86_LINUX_PROCESS_HH__$/;"	d
___unused	src/kern/linux/linux.hh	/^        int64_t         ___unused[3];$/;"	m	struct:Linux::__anon85
__add__	src/arch/isa_parser.py	/^    def __add__(self, other):$/;"	m	class:GenCode	file:
__add__	src/python/m5/params.py	/^    def __add__(self, other):$/;"	m	class:Addr	file:
__add__	src/python/m5/util/smartdict.py	/^    def __add__(self, other):$/;"	m	class:Variable	file:
__all__	src/mem/slicc/ast/MethodCallExprAST.py	/^__all__ = [ "MemberMethodCallExprAST", "ClassMethodCallExprAST" ]$/;"	v
__all__	src/mem/slicc/symbols/Action.py	/^__all__ = [ "Action" ]$/;"	v
__all__	src/mem/slicc/symbols/Event.py	/^__all__ = [ "Event" ]$/;"	v
__all__	src/mem/slicc/symbols/Func.py	/^__all__ = [ "Func" ]$/;"	v
__all__	src/mem/slicc/symbols/RequestType.py	/^__all__ = [ "RequestType" ]$/;"	v
__all__	src/mem/slicc/symbols/State.py	/^__all__ = [ "State" ]$/;"	v
__all__	src/mem/slicc/symbols/StateMachine.py	/^__all__ = [ "StateMachine" ]$/;"	v
__all__	src/mem/slicc/symbols/Symbol.py	/^__all__ = [ "Symbol" ]$/;"	v
__all__	src/mem/slicc/symbols/SymbolTable.py	/^__all__ = [ "SymbolTable" ]$/;"	v
__all__	src/mem/slicc/symbols/Transition.py	/^__all__ = [ "Transition" ]$/;"	v
__all__	src/mem/slicc/symbols/Type.py	/^__all__ = [ "Type" ]$/;"	v
__all__	src/mem/slicc/symbols/Var.py	/^__all__ = [ "Var" ]$/;"	v
__all__	src/mem/slicc/util.py	/^__all__ = [ 'PairContainer', 'Location' ]$/;"	v
__all__	src/python/m5/SimObject.py	/^__all__ = [ 'SimObject' ]$/;"	v
__all__	src/python/m5/event.py	/^__all__ = [ 'create', 'Event', 'ProgressEvent', 'SimExit', 'mainq' ]$/;"	v
__all__	src/python/m5/main.py	/^__all__ = [ 'options', 'arguments', 'main' ]$/;"	v
__all__	src/python/m5/params.py	/^__all__ = ['Param', 'VectorParam',$/;"	v
__all__	src/python/m5/proxy.py	/^__all__ = ['Parent', 'Self']$/;"	v
__all__	src/python/m5/ticks.py	/^__all__ = [ 'setGlobalFrequency', 'fixGlobalFrequency', 'fromSeconds',$/;"	v
__all__	src/python/m5/util/attrdict.py	/^__all__ = [ 'attrdict', 'multiattrdict', 'optiondict' ]$/;"	v
__all__	src/python/m5/util/code_formatter.py	/^__all__ = [ "code_formatter" ]$/;"	v
__all__	src/python/m5/util/multidict.py	/^__all__ = [ 'multidict' ]$/;"	v
__all__	src/python/m5/util/orderdict.py	/^__all__ = [ 'orderdict' ]$/;"	v
__all__	src/python/m5/util/smartdict.py	/^__all__ = [ 'SmartDict' ]$/;"	v
__and__	src/python/m5/util/region.py	/^    def __and__(self, other):$/;"	m	class:Regions	file:
__base_message	src/base/misc.cc	/^__base_message(std::ostream &stream, const char *prefix, bool verbose,$/;"	f
__base_message	src/base/misc.hh	/^__base_message(std::ostream &stream, const char *prefix, bool verbose,$/;"	f
__blksize_pad	src/arch/power/linux/linux.hh	/^        uint32_t __blksize_pad;$/;"	m	struct:PowerLinux::__anon23
__builtin__	src/python/m5/util/code_formatter.py	/^import __builtin__$/;"	i
__call__	src/python/m5/SimObject.py	/^    def __call__(self, **kwargs):$/;"	f	file:
__call__	src/python/m5/event.py	/^    def __call__(self):$/;"	m	class:ProgressEvent	file:
__call__	src/python/m5/options.py	/^    def __call__(self, option, opt_str, value, parser):$/;"	m	class:splitter	file:
__call__	src/python/m5/params.py	/^    def __call__(cls):$/;"	m	class:NullSimObject	file:
__call__	src/python/m5/params.py	/^    def __call__(self, **kwargs):$/;"	m	class:SimObjectVector	file:
__call__	src/python/m5/params.py	/^    def __call__(self, *args, **kwargs):$/;"	m	class:ParamFactory	file:
__call__	src/python/m5/util/__init__.py	/^    def __call__(cls, *args, **kwargs):$/;"	m	class:Singleton	file:
__call__	src/python/m5/util/code_formatter.py	/^    def __call__(self, *args, **kwargs):$/;"	m	class:code_formatter	file:
__contains__	src/mem/slicc/util.py	/^    def __contains__(self, item):$/;"	m	class:PairContainer	file:
__contains__	src/python/m5/debug.py	/^    def __contains__(self, item):$/;"	m	class:AllFlags	file:
__contains__	src/python/m5/util/code_formatter.py	/^    def __contains__(self, item):$/;"	m	class:code_formatter	file:
__contains__	src/python/m5/util/jobfile.py	/^    def __contains__(self, attr):$/;"	m	class:Data	file:
__contains__	src/python/m5/util/multidict.py	/^    def __contains__(self, key):$/;"	m	class:multidict	file:
__contains__	src/python/m5/util/region.py	/^    def __contains__(self, other):$/;"	m	class:Region	file:
__contains__	src/python/m5/util/region.py	/^    def __contains__(self, position):$/;"	m	class:Regions	file:
__data	src/base/bitunion.hh	/^        Data __data;$/;"	m	class:BitfieldBackend::BitfieldBase
__delattr__	src/python/m5/util/attrdict.py	/^    def __delattr__(self, attr):$/;"	m	class:attrdict	file:
__delitem__	src/python/m5/util/code_formatter.py	/^    def __delitem__(self, item):$/;"	m	class:code_formatter	file:
__delitem__	src/python/m5/util/multidict.py	/^    def __delitem__(self, key):$/;"	m	class:multidict	file:
__delitem__	src/python/m5/util/orderdict.py	/^    def __delitem__(self, key):$/;"	m	class:orderdict	file:
__delitem__	src/python/m5/util/sorteddict.py	/^    def __delitem__(self, key):$/;"	m	class:SortedDict	file:
__div__	src/python/m5/params.py	/^    def __div__(self, other):$/;"	m	class:NumericParamValue	file:
__div__	src/python/m5/util/smartdict.py	/^    def __div__(self, other):$/;"	m	class:Variable	file:
__egid	src/sim/process.hh	/^    uint64_t __egid;$/;"	m	class:LiveProcess
__eq__	src/python/m5/params.py	/^    def __eq__(self, other):$/;"	m	class:IpAddress	file:
__eq__	src/python/m5/params.py	/^    def __eq__(self, other):$/;"	m	class:IpNetmask	file:
__eq__	src/python/m5/params.py	/^    def __eq__(self, other):$/;"	m	class:IpWithPort	file:
__eq__	src/python/m5/util/region.py	/^    def __eq__(self, other): return type(self) == type(other)$/;"	m	class:_neg_inf	file:
__eq__	src/python/m5/util/region.py	/^    def __eq__(self, other): return type(self) == type(other)$/;"	m	class:_pos_inf	file:
__eq__	src/python/m5/util/region.py	/^    def __eq__(self, other):$/;"	m	class:Region	file:
__eq__	src/python/m5/util/smartdict.py	/^    def __eq__(self, other):$/;"	m	class:Variable	file:
__euid	src/sim/process.hh	/^    uint64_t __euid;$/;"	m	class:LiveProcess
__exit_message	src/base/misc.cc	/^__exit_message(const char *prefix, int code,$/;"	f
__exit_message	src/base/misc.hh	/^__exit_message(const char *prefix, int code,$/;"	f
__float__	src/python/m5/params.py	/^    def __float__(self):$/;"	m	class:NumericParamValue	file:
__float__	src/python/m5/util/smartdict.py	/^    def __float__(self):$/;"	m	class:Variable	file:
__ge__	src/python/m5/util/region.py	/^    def __ge__(self, other): return True$/;"	m	class:_pos_inf	file:
__ge__	src/python/m5/util/region.py	/^    def __ge__(self, other): return type(self) == type(other)$/;"	m	class:_neg_inf	file:
__ge__	src/python/m5/util/region.py	/^    def __ge__(self, other):$/;"	m	class:Region	file:
__ge__	src/python/m5/util/smartdict.py	/^    def __ge__(self, other):$/;"	m	class:Variable	file:
__get_hostname	src/base/hostinfo.cc	/^__get_hostname()$/;"	f
__getattr__	src/python/m5/SimObject.py	/^    def __getattr__(cls, attr):$/;"	m	class:MetaSimObject	file:
__getattr__	src/python/m5/SimObject.py	/^    def __getattr__(self, attr):$/;"	f	file:
__getattr__	src/python/m5/options.py	/^    def __getattr__(self, attr):$/;"	m	class:OptionParser	file:
__getattr__	src/python/m5/params.py	/^    def __getattr__(self, attr):$/;"	m	class:Clock	file:
__getattr__	src/python/m5/params.py	/^    def __getattr__(self, attr):$/;"	m	class:Frequency	file:
__getattr__	src/python/m5/params.py	/^    def __getattr__(self, attr):$/;"	m	class:Latency	file:
__getattr__	src/python/m5/params.py	/^    def __getattr__(self, attr):$/;"	m	class:ParamDesc	file:
__getattr__	src/python/m5/params.py	/^    def __getattr__(self, attr):$/;"	m	class:ParamFactory	file:
__getattr__	src/python/m5/params.py	/^    def __getattr__(self, attr):$/;"	m	class:PortRef	file:
__getattr__	src/python/m5/proxy.py	/^    def __getattr__(self, attr):$/;"	m	class:AttrProxy	file:
__getattr__	src/python/m5/proxy.py	/^    def __getattr__(self, attr):$/;"	m	class:ProxyFactory	file:
__getattr__	src/python/m5/util/attrdict.py	/^    def __getattr__(self, attr):$/;"	m	class:attrdict	file:
__getattr__	src/python/m5/util/attrdict.py	/^    def __getattr__(self, attr):$/;"	m	class:multiattrdict	file:
__getattr__	src/python/m5/util/attrdict.py	/^    def __getattr__(self, attr):$/;"	m	class:optiondict	file:
__getattr__	src/python/m5/util/code_formatter.py	/^        def __getattr__(self, attr):$/;"	m	class:code_formatter.Foo	file:
__getattr__	src/python/m5/util/grammar.py	/^    def __getattr__(self, attr):$/;"	m	class:Grammar	file:
__getattribute__	src/python/m5/util/jobfile.py	/^    def __getattribute__(self, attr):$/;"	m	class:Option	file:
__getitem__	src/arch/isa_parser.py	/^    def __getitem__(self, index):$/;"	m	class:OperandList	file:
__getitem__	src/mem/slicc/util.py	/^    def __getitem__(self, item):$/;"	m	class:PairContainer	file:
__getitem__	src/python/m5/SimObject.py	/^    def __getitem__(self, key):$/;"	f	file:
__getitem__	src/python/m5/debug.py	/^    def __getitem__(self, item):$/;"	m	class:AllFlags	file:
__getitem__	src/python/m5/params.py	/^    def __getitem__(self, key):$/;"	m	class:VectorPortRef	file:
__getitem__	src/python/m5/proxy.py	/^    def __getitem__(self, key):$/;"	m	class:AttrProxy	file:
__getitem__	src/python/m5/util/code_formatter.py	/^    def __getitem__(self, item):$/;"	m	class:code_formatter	file:
__getitem__	src/python/m5/util/code_formatter.py	/^    def __getitem__(self, item):$/;"	m	class:lookup	file:
__getitem__	src/python/m5/util/jobfile.py	/^    def __getitem__(self, key):$/;"	m	class:Data	file:
__getitem__	src/python/m5/util/multidict.py	/^    def __getitem__(self, key):$/;"	m	class:multidict	file:
__getitem__	src/python/m5/util/smartdict.py	/^    def __getitem__(self, key):$/;"	m	class:SmartDict	file:
__getstate__	src/python/m5/util/attrdict.py	/^    def __getstate__(self):$/;"	m	class:attrdict	file:
__gid	src/sim/process.hh	/^    uint64_t __gid;$/;"	m	class:LiveProcess
__gt__	src/python/m5/util/region.py	/^    def __gt__(self, other): return False$/;"	m	class:_neg_inf	file:
__gt__	src/python/m5/util/region.py	/^    def __gt__(self, other): return type(self) != type(other)$/;"	m	class:_pos_inf	file:
__gt__	src/python/m5/util/region.py	/^    def __gt__(self, other):$/;"	m	class:Region	file:
__gt__	src/python/m5/util/smartdict.py	/^    def __gt__(self, other):$/;"	m	class:Variable	file:
__hash_namespace	src/base/hashmap.hh	/^#define __hash_namespace /;"	d
__hash_namespace_begin	src/base/hashmap.hh	/^#define __hash_namespace_begin /;"	d
__hash_namespace_end	src/base/hashmap.hh	/^#define __hash_namespace_end /;"	d
__iadd__	src/python/m5/util/code_formatter.py	/^    def __iadd__(self, data):$/;"	m	class:code_formatter	file:
__iand__	src/python/m5/util/region.py	/^    def __iand__(self, other):$/;"	m	class:Regions	file:
__init__	src/arch/isa_parser.py	/^    def __init__(self):$/;"	m	class:NoFormat
__init__	src/arch/isa_parser.py	/^    def __init__(self, *items):$/;"	m	class:Stack
__init__	src/arch/isa_parser.py	/^    def __init__(self, first, second=None):$/;"	m	class:ISAParserError
__init__	src/arch/isa_parser.py	/^    def __init__(self, id, params, code):$/;"	m	class:Format
__init__	src/arch/isa_parser.py	/^    def __init__(self, output_dir, cpu_models):$/;"	m	class:ISAParser
__init__	src/arch/isa_parser.py	/^    def __init__(self, parser, code):$/;"	m	class:OperandList
__init__	src/arch/isa_parser.py	/^    def __init__(self, parser, code, master_list):$/;"	m	class:SubOperandList
__init__	src/arch/isa_parser.py	/^    def __init__(self, parser, full_name, ext, is_src, is_dest):$/;"	m	class:Operand
__init__	src/arch/isa_parser.py	/^    def __init__(self, parser, mnem, class_name, base_class = '',$/;"	m	class:InstObjParams
__init__	src/arch/isa_parser.py	/^    def __init__(self, parser, t):$/;"	m	class:Template
__init__	src/arch/isa_parser.py	/^    def __init__(self, parser,$/;"	m	class:GenCode
__init__	src/arch/micro_asm.py	/^    def __init__(self):$/;"	m	class:Block
__init__	src/arch/micro_asm.py	/^    def __init__(self):$/;"	m	class:Directive
__init__	src/arch/micro_asm.py	/^    def __init__(self):$/;"	m	class:Label
__init__	src/arch/micro_asm.py	/^    def __init__(self):$/;"	m	class:Microop
__init__	src/arch/micro_asm.py	/^    def __init__(self):$/;"	m	class:Statement
__init__	src/arch/micro_asm.py	/^    def __init__(self, macro_type, microops,$/;"	m	class:MicroAssembler
__init__	src/arch/micro_asm.py	/^    def __init__(self, name):$/;"	m	class:Micro_Container
__init__	src/arch/micro_asm.py	/^    def __init__(self, name):$/;"	m	class:Rom
__init__	src/arch/micro_asm.py	/^    def __init__(self, name, target):$/;"	m	class:Rom_Macroop
__init__	src/arch/micro_asm_test.py	/^    def __init__(self):$/;"	m	class:Bah
__init__	src/arch/micro_asm_test.py	/^    def __init__(self):$/;"	m	class:Bah_Tweaked
__init__	src/arch/micro_asm_test.py	/^    def __init__(self):$/;"	m	class:Dah
__init__	src/arch/micro_asm_test.py	/^    def __init__(self, first_param, second_param):$/;"	m	class:Hoop
__init__	src/arch/micro_asm_test.py	/^    def __init__(self, name):$/;"	m	class:TestMacroop
__init__	src/mem/slicc/ast/AST.py	/^    def __init__(self, slicc, pairs=None):$/;"	m	class:AST
__init__	src/mem/slicc/ast/ActionDeclAST.py	/^    def __init__(self, slicc, ident, pairs, statement_list):$/;"	m	class:ActionDeclAST
__init__	src/mem/slicc/ast/AssignStatementAST.py	/^    def __init__(self, slicc, lvalue, rvalue):$/;"	m	class:AssignStatementAST
__init__	src/mem/slicc/ast/CheckAllocateStatementAST.py	/^    def __init__(self, slicc, variable):$/;"	m	class:CheckAllocateStatementAST
__init__	src/mem/slicc/ast/DeclAST.py	/^    def __init__(self, slicc, pairs):$/;"	m	class:DeclAST
__init__	src/mem/slicc/ast/DeclListAST.py	/^    def __init__(self, slicc, decls):$/;"	m	class:DeclListAST
__init__	src/mem/slicc/ast/EnqueueStatementAST.py	/^    def __init__(self, slicc, queue_name, type_ast, pairs, statements):$/;"	m	class:EnqueueStatementAST
__init__	src/mem/slicc/ast/EnumDeclAST.py	/^    def __init__(self, slicc, type_ast, pairs, fields):$/;"	m	class:EnumDeclAST
__init__	src/mem/slicc/ast/EnumExprAST.py	/^    def __init__(self, slicc, type_ast, value):$/;"	m	class:EnumExprAST
__init__	src/mem/slicc/ast/ExprAST.py	/^    def __init__(self, slicc):$/;"	m	class:ExprAST
__init__	src/mem/slicc/ast/ExprStatementAST.py	/^    def __init__(self, slicc, expr):$/;"	m	class:ExprStatementAST
__init__	src/mem/slicc/ast/FormalParamAST.py	/^    def __init__(self, slicc, type_ast, ident, default = None, pointer = False):$/;"	m	class:FormalParamAST
__init__	src/mem/slicc/ast/FuncCallExprAST.py	/^    def __init__(self, slicc, proc_name, exprs):$/;"	m	class:FuncCallExprAST
__init__	src/mem/slicc/ast/FuncDeclAST.py	/^    def __init__(self, slicc, return_type, ident, formals, pairs, statements):$/;"	m	class:FuncDeclAST
__init__	src/mem/slicc/ast/IfStatementAST.py	/^    def __init__(self, slicc, cond, then, else_):$/;"	m	class:IfStatementAST
__init__	src/mem/slicc/ast/InPortDeclAST.py	/^    def __init__(self, slicc, ident, msg_type, var_expr, pairs, statements):$/;"	m	class:InPortDeclAST
__init__	src/mem/slicc/ast/IsValidPtrExprAST.py	/^    def __init__(self, slicc, variable, flag):$/;"	m	class:IsValidPtrExprAST
__init__	src/mem/slicc/ast/LiteralExprAST.py	/^    def __init__(self, slicc, literal, type):$/;"	m	class:LiteralExprAST
__init__	src/mem/slicc/ast/LocalVariableAST.py	/^    def __init__(self, slicc, type_ast, ident, pointer = False):$/;"	m	class:LocalVariableAST
__init__	src/mem/slicc/ast/MachineAST.py	/^    def __init__(self, slicc, idents, pairs_ast, config_parameters, decls):$/;"	m	class:MachineAST
__init__	src/mem/slicc/ast/MemberExprAST.py	/^    def __init__(self, slicc, expr_ast, field):$/;"	m	class:MemberExprAST
__init__	src/mem/slicc/ast/MethodCallExprAST.py	/^    def __init__(self, slicc, obj_expr_ast, proc_name, expr_ast_vec):$/;"	m	class:MemberMethodCallExprAST
__init__	src/mem/slicc/ast/MethodCallExprAST.py	/^    def __init__(self, slicc, proc_name, expr_ast_vec):$/;"	m	class:MethodCallExprAST
__init__	src/mem/slicc/ast/MethodCallExprAST.py	/^    def __init__(self, slicc, type_ast, proc_name, expr_ast_vec):$/;"	m	class:ClassMethodCallExprAST
__init__	src/mem/slicc/ast/NewExprAST.py	/^    def __init__(self, slicc, type_ast):$/;"	m	class:NewExprAST
__init__	src/mem/slicc/ast/ObjDeclAST.py	/^    def __init__(self, slicc, type_ast, ident, pairs):$/;"	m	class:ObjDeclAST
__init__	src/mem/slicc/ast/OodAST.py	/^    def __init__(self, slicc):$/;"	m	class:OodAST
__init__	src/mem/slicc/ast/OperatorExprAST.py	/^    def __init__(self, slicc, left, op, right):$/;"	m	class:InfixOperatorExprAST
__init__	src/mem/slicc/ast/OperatorExprAST.py	/^    def __init__(self, slicc, op, operand):$/;"	m	class:PrefixOperatorExprAST
__init__	src/mem/slicc/ast/OutPortDeclAST.py	/^    def __init__(self, slicc, ident, msg_type, var_expr, pairs):$/;"	m	class:OutPortDeclAST
__init__	src/mem/slicc/ast/PairAST.py	/^    def __init__(self, slicc, key, value):$/;"	m	class:PairAST
__init__	src/mem/slicc/ast/PairListAST.py	/^    def __init__(self, slicc):$/;"	m	class:PairListAST
__init__	src/mem/slicc/ast/PeekStatementAST.py	/^    def __init__(self, slicc, queue_name, type_ast, pairs, statements, method):$/;"	m	class:PeekStatementAST
__init__	src/mem/slicc/ast/ReturnStatementAST.py	/^    def __init__(self, slicc, expr_ast):$/;"	m	class:ReturnStatementAST
__init__	src/mem/slicc/ast/StallAndWaitStatementAST.py	/^    def __init__(self, slicc, in_port, address):$/;"	m	class:StallAndWaitStatementAST
__init__	src/mem/slicc/ast/StateDeclAST.py	/^    def __init__(self, slicc, type_ast, pairs, states):$/;"	m	class:StateDeclAST
__init__	src/mem/slicc/ast/StatementAST.py	/^    def __init__(self, slicc, pairs=None):$/;"	m	class:StatementAST
__init__	src/mem/slicc/ast/StatementListAST.py	/^    def __init__(self, slicc, statements):$/;"	m	class:StatementListAST
__init__	src/mem/slicc/ast/StaticCastAST.py	/^    def __init__(self, slicc, type_ast, type_modifier, expr_ast):$/;"	m	class:StaticCastAST
__init__	src/mem/slicc/ast/TransitionDeclAST.py	/^    def __init__(self, slicc, request_types, states, events, next_state, pairs,$/;"	m	class:TransitionDeclAST
__init__	src/mem/slicc/ast/TypeAST.py	/^    def __init__(self, slicc, ident):$/;"	m	class:TypeAST
__init__	src/mem/slicc/ast/TypeDeclAST.py	/^    def __init__(self, slicc, type_ast, pairs, field_asts):$/;"	m	class:TypeDeclAST
__init__	src/mem/slicc/ast/TypeFieldAST.py	/^    def __init__(self, slicc, pairs):$/;"	m	class:TypeFieldAST
__init__	src/mem/slicc/ast/TypeFieldEnumAST.py	/^    def __init__(self, slicc, field_id, pairs_ast):$/;"	m	class:TypeFieldEnumAST
__init__	src/mem/slicc/ast/TypeFieldMemberAST.py	/^    def __init__(self, slicc, type_ast, field_id, pairs, rvalue):$/;"	m	class:TypeFieldMemberAST
__init__	src/mem/slicc/ast/TypeFieldMethodAST.py	/^    def __init__(self, slicc, return_type_ast, ident, type_asts, pairs,$/;"	m	class:TypeFieldMethodAST
__init__	src/mem/slicc/ast/TypeFieldStateAST.py	/^    def __init__(self, slicc, field_id, perm_ast, pairs_ast):$/;"	m	class:TypeFieldStateAST
__init__	src/mem/slicc/ast/VarExprAST.py	/^    def __init__(self, slicc, var):$/;"	m	class:VarExprAST
__init__	src/mem/slicc/parser.py	/^    def __init__(self, filename, base_dir, verbose=False, traceback=False, **kwargs):$/;"	m	class:SLICC
__init__	src/mem/slicc/symbols/Action.py	/^  def __init__(self, table, ident, resources, location, pairs):$/;"	m	class:Action
__init__	src/mem/slicc/symbols/Func.py	/^    def __init__(self, table, ident, location, return_type, param_types,$/;"	m	class:Func
__init__	src/mem/slicc/symbols/StateMachine.py	/^    def __init__(self, symtab, ident, location, pairs, config_parameters):$/;"	m	class:StateMachine
__init__	src/mem/slicc/symbols/Symbol.py	/^    def __init__(self, symtab, ident, location, pairs=None):$/;"	m	class:Symbol
__init__	src/mem/slicc/symbols/SymbolTable.py	/^    def __init__(self, slicc):$/;"	m	class:SymbolTable
__init__	src/mem/slicc/symbols/Transition.py	/^    def __init__(self, table, machine, state, event, nextState, actions,$/;"	m	class:Transition
__init__	src/mem/slicc/symbols/Type.py	/^    def __init__(self, ident, pairs):$/;"	m	class:Enumeration
__init__	src/mem/slicc/symbols/Type.py	/^    def __init__(self, ident, type, pairs, init_code):$/;"	m	class:DataMember
__init__	src/mem/slicc/symbols/Type.py	/^    def __init__(self, return_type, param_types):$/;"	m	class:Method
__init__	src/mem/slicc/symbols/Type.py	/^    def __init__(self, table, ident, location, pairs, machine=None):$/;"	m	class:Type
__init__	src/mem/slicc/symbols/Var.py	/^    def __init__(self, symtab, ident, location, type, code, pairs,$/;"	m	class:Var
__init__	src/mem/slicc/util.py	/^    def __init__(self, filename, lineno, no_warning=False):$/;"	m	class:Location
__init__	src/mem/slicc/util.py	/^    def __init__(self, pairs=None):$/;"	m	class:PairContainer
__init__	src/python/importer.py	/^    def __init__(self):$/;"	m	class:CodeImporter
__init__	src/python/m5/SimObject.py	/^    def __init__(cls, name, bases, dict):$/;"	m	class:MetaSimObject
__init__	src/python/m5/SimObject.py	/^    def __init__(self, **kwargs):$/;"	f
__init__	src/python/m5/debug.py	/^    def __init__(self):$/;"	m	class:AllFlags
__init__	src/python/m5/event.py	/^    def __init__(self, eventq, period):$/;"	m	class:ProgressEvent
__init__	src/python/m5/event.py	/^    def __init__(self, priority=None):$/;"	m	class:Event
__init__	src/python/m5/options.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:OptionParser
__init__	src/python/m5/options.py	/^    def __init__(self, split):$/;"	m	class:splitter
__init__	src/python/m5/params.py	/^    def __init__(cls, name, bases, dict):$/;"	m	class:CheckedIntType
__init__	src/python/m5/params.py	/^    def __init__(cls, name, bases, init_dict):$/;"	m	class:MetaEnum
__init__	src/python/m5/params.py	/^    def __init__(self, *args):$/;"	m	class:MasterPort
__init__	src/python/m5/params.py	/^    def __init__(self, *args):$/;"	m	class:SlavePort
__init__	src/python/m5/params.py	/^    def __init__(self, *args):$/;"	m	class:VectorMasterPort
__init__	src/python/m5/params.py	/^    def __init__(self, *args):$/;"	m	class:VectorPort
__init__	src/python/m5/params.py	/^    def __init__(self, *args):$/;"	m	class:VectorSlavePort
__init__	src/python/m5/params.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:AddrRange
__init__	src/python/m5/params.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:IpNetmask
__init__	src/python/m5/params.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:IpWithPort
__init__	src/python/m5/params.py	/^    def __init__(self, param_desc_class, ptype_str = None):$/;"	m	class:ParamFactory
__init__	src/python/m5/params.py	/^    def __init__(self, ptype_str, ptype, *args, **kwargs):$/;"	m	class:ParamDesc
__init__	src/python/m5/params.py	/^    def __init__(self, simobj, name, role):$/;"	m	class:PortRef
__init__	src/python/m5/params.py	/^    def __init__(self, simobj, name, role):$/;"	m	class:VectorPortRef
__init__	src/python/m5/params.py	/^    def __init__(self, simobj, name, role, index):$/;"	m	class:VectorPortElementRef
__init__	src/python/m5/params.py	/^    def __init__(self, value):$/;"	m	class:Addr
__init__	src/python/m5/params.py	/^    def __init__(self, value):$/;"	m	class:Bool
__init__	src/python/m5/params.py	/^    def __init__(self, value):$/;"	m	class:CheckedInt
__init__	src/python/m5/params.py	/^    def __init__(self, value):$/;"	m	class:Clock
__init__	src/python/m5/params.py	/^    def __init__(self, value):$/;"	m	class:Enum
__init__	src/python/m5/params.py	/^    def __init__(self, value):$/;"	m	class:EthernetAddr
__init__	src/python/m5/params.py	/^    def __init__(self, value):$/;"	m	class:Float
__init__	src/python/m5/params.py	/^    def __init__(self, value):$/;"	m	class:Frequency
__init__	src/python/m5/params.py	/^    def __init__(self, value):$/;"	m	class:IpAddress
__init__	src/python/m5/params.py	/^    def __init__(self, value):$/;"	m	class:Latency
__init__	src/python/m5/params.py	/^    def __init__(self, value):$/;"	m	class:MemorySize
__init__	src/python/m5/params.py	/^    def __init__(self, value):$/;"	m	class:MemorySize32
__init__	src/python/m5/params.py	/^    def __init__(self, value):$/;"	m	class:Time
__init__	src/python/m5/proxy.py	/^    def __init__(self, search_self, search_up):$/;"	m	class:BaseProxy
__init__	src/python/m5/proxy.py	/^    def __init__(self, search_self, search_up):$/;"	m	class:ProxyFactory
__init__	src/python/m5/proxy.py	/^    def __init__(self, search_self, search_up, attr):$/;"	m	class:AttrProxy
__init__	src/python/m5/util/code_formatter.py	/^        def __init__(self, **kwargs):$/;"	m	class:code_formatter.Foo
__init__	src/python/m5/util/code_formatter.py	/^    def __init__(cls, name, bases, dct):$/;"	m	class:code_formatter_meta
__init__	src/python/m5/util/code_formatter.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:code_formatter
__init__	src/python/m5/util/code_formatter.py	/^    def __init__(self, formatter, frame, *args, **kwargs):$/;"	m	class:lookup
__init__	src/python/m5/util/grammar.py	/^    def __init__(self, message, token=None):$/;"	m	class:ParseError
__init__	src/python/m5/util/jobfile.py	/^    def __init__(self, name, desc, **kwargs):$/;"	m	class:Configuration
__init__	src/python/m5/util/jobfile.py	/^    def __init__(self, name, desc, **kwargs):$/;"	m	class:Data
__init__	src/python/m5/util/jobfile.py	/^    def __init__(self, name, desc, **kwargs):$/;"	m	class:Group
__init__	src/python/m5/util/jobfile.py	/^    def __init__(self, name, desc, **kwargs):$/;"	m	class:Option
__init__	src/python/m5/util/jobfile.py	/^    def __init__(self, name, desc, **kwargs):$/;"	m	class:SubOption
__init__	src/python/m5/util/jobfile.py	/^    def __init__(self, options):$/;"	m	class:Job
__init__	src/python/m5/util/multidict.py	/^    def __init__(self, parent = {}, **kwargs):$/;"	m	class:multidict
__init__	src/python/m5/util/orderdict.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:orderdict
__init__	src/python/m5/util/region.py	/^    def __init__(self, *args):$/;"	m	class:Regions
__init__	src/python/m5/util/terminal.py	/^    def __init__(self, cap_string):$/;"	m	class:ColorStrings
__int__	src/python/m5/params.py	/^    def __int__(self):$/;"	m	class:NumericParamValue	file:
__int__	src/python/m5/util/smartdict.py	/^    def __int__(self):$/;"	m	class:Variable	file:
__internalConcatAttrs	src/arch/isa_parser.py	/^    def __internalConcatAttrs(self, attr_name, filter, result):$/;"	m	class:OperandList	file:
__iter__	src/python/m5/util/jobfile.py	/^    def __iter__(self):$/;"	m	class:Data	file:
__junk2	src/dev/ide_atareg.h	/^    uint8_t	__junk2;$/;"	m	struct:ataparams
__junk3	src/dev/ide_atareg.h	/^    uint8_t	__junk3;$/;"	m	struct:ataparams
__junk4	src/dev/ide_atareg.h	/^    uint8_t	__junk4;$/;"	m	struct:ataparams
__le__	src/python/m5/util/region.py	/^    def __le__(self, other): return True$/;"	m	class:_neg_inf	file:
__le__	src/python/m5/util/region.py	/^    def __le__(self, other): return type(self) == type(other)$/;"	m	class:_pos_inf	file:
__le__	src/python/m5/util/region.py	/^    def __le__(self, other):$/;"	m	class:Region	file:
__le__	src/python/m5/util/smartdict.py	/^    def __le__(self, other):$/;"	m	class:Variable	file:
__len__	src/arch/isa_parser.py	/^    def __len__(self):$/;"	m	class:OperandList	file:
__len__	src/python/m5/params.py	/^    def __len__(self):$/;"	m	class:PortRef	file:
__len__	src/python/m5/params.py	/^    def __len__(self):$/;"	m	class:VectorPortRef	file:
__len__	src/python/m5/util/multidict.py	/^    def __len__(self):$/;"	m	class:multidict	file:
__len__	src/python/m5/util/region.py	/^    def __len__(self):$/;"	m	class:Regions	file:
__long__	src/python/m5/params.py	/^    def __long__(self):$/;"	m	class:NumericParamValue	file:
__long__	src/python/m5/util/smartdict.py	/^    def __long__(self):$/;"	m	class:Variable	file:
__lt__	src/python/m5/util/region.py	/^    def __lt__(self, other): return False$/;"	m	class:_pos_inf	file:
__lt__	src/python/m5/util/region.py	/^    def __lt__(self, other): return type(self) != type(other)$/;"	m	class:_neg_inf	file:
__lt__	src/python/m5/util/region.py	/^    def __lt__(self, other):$/;"	m	class:Region	file:
__lt__	src/python/m5/util/smartdict.py	/^    def __lt__(self, other):$/;"	m	class:Variable	file:
__main__	src/unittest/genini.py	/^import __main__$/;"	i
__metaclass__	src/python/m5/SimObject.py	/^    __metaclass__ = MetaSimObject$/;"	v	class:SimObject
__metaclass__	src/python/m5/params.py	/^    __metaclass__ = CheckedIntType$/;"	v	class:CheckedInt
__metaclass__	src/python/m5/params.py	/^    __metaclass__ = MetaEnum$/;"	v	class:Enum
__metaclass__	src/python/m5/params.py	/^    __metaclass__ = MetaParamValue$/;"	v	class:ParamValue
__metaclass__	src/python/m5/params.py	/^    __metaclass__ = MetaParamValue$/;"	v	class:VectorParamValue
__metaclass__	src/python/m5/params.py	/^    __metaclass__ = Singleton$/;"	v	class:NullSimObject
__metaclass__	src/python/m5/params.py	/^    __metaclass__ = Singleton$/;"	v	class:PortParamDesc
__metaclass__	src/python/m5/util/code_formatter.py	/^    __metaclass__ = code_formatter_meta$/;"	v	class:code_formatter
__mul__	src/python/m5/params.py	/^    def __mul__(self, other):$/;"	m	class:NumericParamValue	file:
__mul__	src/python/m5/proxy.py	/^    def __mul__(self, other):$/;"	m	class:BaseProxy	file:
__mul__	src/python/m5/util/smartdict.py	/^    def __mul__(self, other):$/;"	m	class:Variable	file:
__name__	src/python/m5/params.py	/^        code('%import "python\/m5\/internal\/enum_$0.i"', cls.__name__)$/;"	i
__nan	src/base/stats/text.cc	/^__nan()$/;"	f
__ne__	src/python/m5/params.py	/^    def __ne__(self, other):$/;"	m	class:IpAddress	file:
__ne__	src/python/m5/util/region.py	/^    def __ne__(self, other): return type(self) != type(other)$/;"	m	class:_neg_inf	file:
__ne__	src/python/m5/util/region.py	/^    def __ne__(self, other): return type(self) != type(other)$/;"	m	class:_pos_inf	file:
__ne__	src/python/m5/util/region.py	/^    def __ne__(self, other):$/;"	m	class:Region	file:
__ne__	src/python/m5/util/smartdict.py	/^    def __ne__(self, other):$/;"	m	class:Variable	file:
__new__	src/python/m5/SimObject.py	/^    def __new__(mcls, name, bases, dict):$/;"	m	class:MetaSimObject	file:
__new__	src/python/m5/params.py	/^    def __new__(cls, value):$/;"	m	class:MemoryBandwidth	file:
__new__	src/python/m5/params.py	/^    def __new__(cls, value):$/;"	m	class:NetworkBandwidth	file:
__new__	src/python/m5/params.py	/^    def __new__(cls, value):$/;"	m	class:Voltage	file:
__new__	src/python/m5/params.py	/^    def __new__(mcls, name, bases, dct):$/;"	m	class:MetaParamValue	file:
__new__	src/python/m5/params.py	/^    def __new__(mcls, name, bases, dict):$/;"	m	class:MetaEnum	file:
__new__	src/python/m5/util/region.py	/^    def __new__(cls, *args):$/;"	m	class:Region	file:
__new__	src/sim/Root.py	/^    def __new__(cls, **kwargs):$/;"	m	class:Root	file:
__nonzero__	src/python/m5/params.py	/^    def __nonzero__(self):$/;"	m	class:Bool	file:
__nonzero__	src/python/m5/util/smartdict.py	/^    def __nonzero__(self):$/;"	m	class:UndefinedVariable	file:
__nonzero__	src/python/m5/util/smartdict.py	/^    def __nonzero__(self):$/;"	m	class:Variable	file:
__obsolete1	src/dev/ide_atareg.h	/^    uint16_t	__obsolete1;$/;"	m	struct:ataparams
__pad0	src/arch/arm/linux/linux.hh	/^        uint32_t __pad0;$/;"	m	struct:ArmLinux64::__anon10
__pad0	src/arch/arm/linux/linux.hh	/^        uint32_t __pad0;$/;"	m	struct:ArmLinux64::__anon9
__pad0	src/arch/arm/linux/linux.hh	/^        uint8_t   __pad0[4];$/;"	m	struct:ArmLinux32::__anon7
__pad0	src/arch/x86/linux/linux.hh	/^        uint32_t __pad0;$/;"	m	struct:X86Linux64::__anon30
__pad0	src/arch/x86/linux/linux.hh	/^        uint8_t __pad0[4];$/;"	m	struct:X86Linux32::__anon33
__pad0	src/kern/linux/linux.hh	/^        uint32_t        __pad0;$/;"	m	struct:Linux::__anon85
__pad1	src/arch/arm/linux/linux.hh	/^        uint32_t __pad1;$/;"	m	struct:ArmLinux32::__anon6
__pad1	src/arch/power/linux/linux.hh	/^        uint32_t __pad1;$/;"	m	struct:PowerLinux::__anon22
__pad1	src/arch/sparc/linux/linux.hh	/^        char __pad1[4];$/;"	m	struct:SparcLinux::__anon25
__pad2	src/arch/arm/linux/linux.hh	/^        uint32_t __pad2;$/;"	m	struct:ArmLinux32::__anon6
__pad2	src/arch/power/linux/linux.hh	/^        uint32_t __pad2;$/;"	m	struct:PowerLinux::__anon22
__pad2	src/arch/power/linux/linux.hh	/^        uint64_t __pad2;$/;"	m	struct:PowerLinux::__anon23
__pad2	src/arch/sparc/linux/linux.hh	/^        char __pad2[4];$/;"	m	struct:SparcLinux::__anon25
__pad3	src/arch/arm/linux/linux.hh	/^        uint8_t   __pad3[4];$/;"	m	struct:ArmLinux32::__anon7
__pad3	src/arch/sparc/linux/linux.hh	/^        uint8_t __pad3[8];$/;"	m	struct:Sparc32Linux::__anon27
__pad3	src/arch/x86/linux/linux.hh	/^        uint8_t __pad3[4];$/;"	m	struct:X86Linux32::__anon33
__pad4	src/arch/sparc/linux/linux.hh	/^        uint8_t __pad4[8];$/;"	m	struct:Sparc32Linux::__anon27
__padding1	src/arch/x86/linux/syscalls.cc	/^    uint32_t __padding1;$/;"	m	struct:UserDesc64	file:
__pid	src/sim/process.hh	/^    uint64_t __pid;$/;"	m	class:LiveProcess
__ppid	src/sim/process.hh	/^    uint64_t __ppid;$/;"	m	class:LiveProcess
__radd__	src/python/m5/util/smartdict.py	/^    def __radd__(self, other):$/;"	m	class:Variable	file:
__rdiv__	src/python/m5/util/smartdict.py	/^    def __rdiv__(self, other):$/;"	m	class:Variable	file:
__repr__	src/mem/slicc/ast/ActionDeclAST.py	/^    def __repr__(self):$/;"	m	class:ActionDeclAST	file:
__repr__	src/mem/slicc/ast/AssignStatementAST.py	/^    def __repr__(self):$/;"	m	class:AssignStatementAST	file:
__repr__	src/mem/slicc/ast/CheckAllocateStatementAST.py	/^    def __repr__(self):$/;"	m	class:CheckAllocateStatementAST	file:
__repr__	src/mem/slicc/ast/DeclListAST.py	/^    def __repr__(self):$/;"	m	class:DeclListAST	file:
__repr__	src/mem/slicc/ast/EnqueueStatementAST.py	/^    def __repr__(self):$/;"	m	class:EnqueueStatementAST	file:
__repr__	src/mem/slicc/ast/EnumDeclAST.py	/^    def __repr__(self):$/;"	m	class:EnumDeclAST	file:
__repr__	src/mem/slicc/ast/EnumExprAST.py	/^    def __repr__(self):$/;"	m	class:EnumExprAST	file:
__repr__	src/mem/slicc/ast/ExprStatementAST.py	/^    def __repr__(self):$/;"	m	class:ExprStatementAST	file:
__repr__	src/mem/slicc/ast/FormalParamAST.py	/^    def __repr__(self):$/;"	m	class:FormalParamAST	file:
__repr__	src/mem/slicc/ast/FuncCallExprAST.py	/^    def __repr__(self):$/;"	m	class:FuncCallExprAST	file:
__repr__	src/mem/slicc/ast/FuncDeclAST.py	/^    def __repr__(self):$/;"	m	class:FuncDeclAST	file:
__repr__	src/mem/slicc/ast/IfStatementAST.py	/^    def __repr__(self):$/;"	m	class:IfStatementAST	file:
__repr__	src/mem/slicc/ast/InPortDeclAST.py	/^    def __repr__(self):$/;"	m	class:InPortDeclAST	file:
__repr__	src/mem/slicc/ast/IsValidPtrExprAST.py	/^    def __repr__(self):$/;"	m	class:IsValidPtrExprAST	file:
__repr__	src/mem/slicc/ast/LiteralExprAST.py	/^    def __repr__(self):$/;"	m	class:LiteralExprAST	file:
__repr__	src/mem/slicc/ast/LocalVariableAST.py	/^    def __repr__(self):$/;"	m	class:LocalVariableAST	file:
__repr__	src/mem/slicc/ast/MachineAST.py	/^    def __repr__(self):$/;"	m	class:MachineAST	file:
__repr__	src/mem/slicc/ast/MemberExprAST.py	/^    def __repr__(self):$/;"	m	class:MemberExprAST	file:
__repr__	src/mem/slicc/ast/MethodCallExprAST.py	/^    def __repr__(self):$/;"	m	class:ClassMethodCallExprAST	file:
__repr__	src/mem/slicc/ast/MethodCallExprAST.py	/^    def __repr__(self):$/;"	m	class:MemberMethodCallExprAST	file:
__repr__	src/mem/slicc/ast/NewExprAST.py	/^    def __repr__(self):$/;"	m	class:NewExprAST	file:
__repr__	src/mem/slicc/ast/ObjDeclAST.py	/^    def __repr__(self):$/;"	m	class:ObjDeclAST	file:
__repr__	src/mem/slicc/ast/OodAST.py	/^    def __repr__(self):$/;"	m	class:OodAST	file:
__repr__	src/mem/slicc/ast/OperatorExprAST.py	/^    def __repr__(self):$/;"	m	class:InfixOperatorExprAST	file:
__repr__	src/mem/slicc/ast/OperatorExprAST.py	/^    def __repr__(self):$/;"	m	class:PrefixOperatorExprAST	file:
__repr__	src/mem/slicc/ast/OutPortDeclAST.py	/^    def __repr__(self):$/;"	m	class:OutPortDeclAST	file:
__repr__	src/mem/slicc/ast/PairAST.py	/^    def __repr__(self):$/;"	m	class:PairAST	file:
__repr__	src/mem/slicc/ast/PairListAST.py	/^    def __repr__(self):$/;"	m	class:PairListAST	file:
__repr__	src/mem/slicc/ast/PeekStatementAST.py	/^    def __repr__(self):$/;"	m	class:PeekStatementAST	file:
__repr__	src/mem/slicc/ast/ReturnStatementAST.py	/^    def __repr__(self):$/;"	m	class:ReturnStatementAST	file:
__repr__	src/mem/slicc/ast/StallAndWaitStatementAST.py	/^    def __repr__(self):$/;"	m	class:StallAndWaitStatementAST	file:
__repr__	src/mem/slicc/ast/StateDeclAST.py	/^    def __repr__(self):$/;"	m	class:StateDeclAST	file:
__repr__	src/mem/slicc/ast/StatementListAST.py	/^    def __repr__(self):$/;"	m	class:StatementListAST	file:
__repr__	src/mem/slicc/ast/StaticCastAST.py	/^    def __repr__(self):$/;"	m	class:StaticCastAST	file:
__repr__	src/mem/slicc/ast/TransitionDeclAST.py	/^    def __repr__(self):$/;"	m	class:TransitionDeclAST	file:
__repr__	src/mem/slicc/ast/TypeAST.py	/^    def __repr__(self):$/;"	m	class:TypeAST	file:
__repr__	src/mem/slicc/ast/TypeDeclAST.py	/^    def __repr__(self):$/;"	m	class:TypeDeclAST	file:
__repr__	src/mem/slicc/ast/TypeFieldEnumAST.py	/^    def __repr__(self):$/;"	m	class:TypeFieldEnumAST	file:
__repr__	src/mem/slicc/ast/TypeFieldMemberAST.py	/^    def __repr__(self):$/;"	m	class:TypeFieldMemberAST	file:
__repr__	src/mem/slicc/ast/TypeFieldMethodAST.py	/^    def __repr__(self):$/;"	m	class:TypeFieldMethodAST	file:
__repr__	src/mem/slicc/ast/TypeFieldStateAST.py	/^    def __repr__(self):$/;"	m	class:TypeFieldStateAST	file:
__repr__	src/mem/slicc/ast/VarExprAST.py	/^    def __repr__(self):$/;"	m	class:VarExprAST	file:
__repr__	src/mem/slicc/symbols/Action.py	/^  def __repr__(self):$/;"	m	class:Action	file:
__repr__	src/mem/slicc/symbols/Event.py	/^    def __repr__(self):$/;"	m	class:Event	file:
__repr__	src/mem/slicc/symbols/Func.py	/^    def __repr__(self):$/;"	m	class:Func	file:
__repr__	src/mem/slicc/symbols/RequestType.py	/^    def __repr__(self):$/;"	m	class:RequestType	file:
__repr__	src/mem/slicc/symbols/State.py	/^    def __repr__(self):$/;"	m	class:State	file:
__repr__	src/mem/slicc/symbols/StateMachine.py	/^    def __repr__(self):$/;"	m	class:StateMachine	file:
__repr__	src/mem/slicc/symbols/Symbol.py	/^    def __repr__(self):$/;"	m	class:Symbol	file:
__repr__	src/mem/slicc/symbols/SymbolTable.py	/^    def __repr__(self):$/;"	m	class:SymbolTable	file:
__repr__	src/mem/slicc/symbols/Transition.py	/^    def __repr__(self):$/;"	m	class:Transition	file:
__repr__	src/mem/slicc/symbols/Var.py	/^    def __repr__(self):$/;"	m	class:Var	file:
__repr__	src/python/m5/util/jobfile.py	/^    def __repr__(self):$/;"	m	class:Data	file:
__repr__	src/python/m5/util/multidict.py	/^    def __repr__(self):$/;"	m	class:multidict	file:
__repr__	src/python/m5/util/region.py	/^    def __repr__(self): return '<neg_inf>'$/;"	m	class:_neg_inf	file:
__repr__	src/python/m5/util/region.py	/^    def __repr__(self): return '<pos_inf>'$/;"	m	class:_pos_inf	file:
__repr__	src/python/m5/util/region.py	/^    def __repr__(self):$/;"	m	class:Region	file:
__repr__	src/python/m5/util/region.py	/^    def __repr__(self):$/;"	m	class:Regions	file:
__repr__	src/python/m5/util/sorteddict.py	/^    def __repr__(self):$/;"	m	class:SortedDict	file:
__reserved	src/base/stats/info.hh	/^const FlagsType __reserved =    init | display;$/;"	m	namespace:Stats
__reserved1	src/dev/i8254xGBe_defs.hh	/^            uint16_t __reserved1:5;$/;"	m	struct:iGbReg::RxDesc::__anon70::__anon73
__reserved1	src/dev/ide_atareg.h	/^    uint16_t	__reserved1;$/;"	m	struct:ataparams
__reserved10	src/dev/ide_atareg.h	/^    uint16_t	__reserved10[49];	\/* 206-254: reserved *\/$/;"	m	struct:ataparams
__reserved2	src/dev/ide_atareg.h	/^    uint16_t	__reserved2;$/;"	m	struct:ataparams
__reserved3	src/dev/ide_atareg.h	/^    uint16_t	__reserved3[2];$/;"	m	struct:ataparams
__reserved4	src/dev/ide_atareg.h	/^    uint16_t	__reserved4[2];$/;"	m	struct:ataparams
__reserved6	src/dev/ide_atareg.h	/^    uint16_t	__reserved6[5];		\/* 95-99: reserved *\/$/;"	m	struct:ataparams
__reserved7	src/dev/ide_atareg.h	/^    uint16_t	__reserved7[23];	\/* 104-126: reserved *\/$/;"	m	struct:ataparams
__reserved8	src/dev/ide_atareg.h	/^    uint16_t	__reserved8[31];	\/* 129-159: vendor specific *\/$/;"	m	struct:ataparams
__reserved9	src/dev/ide_atareg.h	/^    uint16_t	__reserved9[15];	\/* 161-175: reserved for CFA *\/$/;"	m	struct:ataparams
__retired1	src/dev/ide_atareg.h	/^    uint16_t	__retired1[2];		\/* 4-5: # of unform. bytes\/track *\/$/;"	m	struct:ataparams
__retired2	src/dev/ide_atareg.h	/^    uint16_t	__retired2[3];$/;"	m	struct:ataparams
__retired3	src/dev/ide_atareg.h	/^    uint16_t	__retired3[2];$/;"	m	struct:ataparams
__retired4	src/dev/ide_atareg.h	/^    uint16_t	__retired4;$/;"	m	struct:ataparams
__rmul__	src/python/m5/params.py	/^    __rmul__ = __mul__$/;"	v	class:NumericParamValue
__rmul__	src/python/m5/proxy.py	/^    __rmul__ = __mul__$/;"	v	class:BaseProxy
__rmul__	src/python/m5/util/smartdict.py	/^    def __rmul__(self, other):$/;"	m	class:Variable	file:
__rsub__	src/python/m5/util/smartdict.py	/^    def __rsub__(self, other):$/;"	m	class:Variable	file:
__rtruediv__	src/python/m5/util/smartdict.py	/^    def __rtruediv__(self, other):$/;"	m	class:Variable	file:
__setattr__	src/python/m5/SimObject.py	/^    def __setattr__(cls, attr, value):$/;"	m	class:MetaSimObject	file:
__setattr__	src/python/m5/SimObject.py	/^    def __setattr__(self, attr, value):$/;"	f	file:
__setattr__	src/python/m5/options.py	/^    def __setattr__(self, attr, value):$/;"	m	class:OptionParser	file:
__setattr__	src/python/m5/params.py	/^    def __setattr__(self, attr, value):$/;"	m	class:VectorParamValue	file:
__setattr__	src/python/m5/proxy.py	/^    def __setattr__(self, attr, value):$/;"	m	class:BaseProxy	file:
__setattr__	src/python/m5/util/attrdict.py	/^    def __setattr__(self, attr, value):$/;"	m	class:attrdict	file:
__setitem__	src/mem/slicc/symbols/Symbol.py	/^    def __setitem__(self, key, value):$/;"	m	class:Symbol	file:
__setitem__	src/mem/slicc/util.py	/^    def __setitem__(self, item, value):$/;"	m	class:PairContainer	file:
__setitem__	src/python/m5/params.py	/^    def __setitem__(self, key, value):$/;"	m	class:SimObjectVector	file:
__setitem__	src/python/m5/params.py	/^    def __setitem__(self, key, value):$/;"	m	class:VectorPortRef	file:
__setitem__	src/python/m5/util/code_formatter.py	/^    def __setitem__(self, item, val):$/;"	m	class:lookup	file:
__setitem__	src/python/m5/util/code_formatter.py	/^    def __setitem__(self, item, value):$/;"	m	class:code_formatter	file:
__setitem__	src/python/m5/util/multidict.py	/^    def __setitem__(self, key, value):$/;"	m	class:multidict	file:
__setitem__	src/python/m5/util/orderdict.py	/^    def __setitem__(self, key, item):$/;"	m	class:orderdict	file:
__setitem__	src/python/m5/util/smartdict.py	/^    def __setitem__(self, key, item):$/;"	m	class:SmartDict	file:
__setitem__	src/python/m5/util/sorteddict.py	/^    def __setitem__(self, key, item):$/;"	m	class:SortedDict	file:
__setstate__	src/python/m5/util/attrdict.py	/^    def __setstate__(self, state):$/;"	m	class:attrdict	file:
__st_ino	src/arch/arm/linux/linux.hh	/^        uint32_t  __st_ino;$/;"	m	struct:ArmLinux32::__anon7
__st_ino	src/arch/x86/linux/linux.hh	/^        uint32_t __st_ino;$/;"	m	struct:X86Linux32::__anon33
__stattest	src/unittest/stattest.cc	/^__stattest()$/;"	f
__str__	src/arch/isa_parser.py	/^    def __str__(self):$/;"	m	class:Template	file:
__str__	src/arch/micro_asm.py	/^    def __str__(self):$/;"	m	class:Micro_Container	file:
__str__	src/arch/micro_asm.py	/^    def __str__(self):$/;"	m	class:Rom_Macroop	file:
__str__	src/arch/micro_asm_test.py	/^    def __str__(self):$/;"	m	class:Hoop	file:
__str__	src/mem/slicc/ast/TypeAST.py	/^    def __str__(self):$/;"	m	class:TypeAST	file:
__str__	src/mem/slicc/symbols/Symbol.py	/^    def __str__(self):$/;"	m	class:Symbol	file:
__str__	src/mem/slicc/util.py	/^    def __str__(self):$/;"	m	class:Location	file:
__str__	src/python/m5/SimObject.py	/^    def __str__(cls):$/;"	m	class:MetaSimObject	file:
__str__	src/python/m5/SimObject.py	/^    def __str__(self):$/;"	f	file:
__str__	src/python/m5/params.py	/^    def __str__(self):$/;"	m	class:AddrRange	file:
__str__	src/python/m5/params.py	/^    def __str__(self):$/;"	m	class:Bool	file:
__str__	src/python/m5/params.py	/^    def __str__(self):$/;"	m	class:Enum	file:
__str__	src/python/m5/params.py	/^    def __str__(self):$/;"	m	class:IpAddress	file:
__str__	src/python/m5/params.py	/^    def __str__(self):$/;"	m	class:IpNetmask	file:
__str__	src/python/m5/params.py	/^    def __str__(self):$/;"	m	class:IpWithPort	file:
__str__	src/python/m5/params.py	/^    def __str__(self):$/;"	m	class:MemoryBandwidth	file:
__str__	src/python/m5/params.py	/^    def __str__(self):$/;"	m	class:NetworkBandwidth	file:
__str__	src/python/m5/params.py	/^    def __str__(self):$/;"	m	class:NullSimObject	file:
__str__	src/python/m5/params.py	/^    def __str__(self):$/;"	m	class:NumericParamValue	file:
__str__	src/python/m5/params.py	/^    def __str__(self):$/;"	m	class:PortRef	file:
__str__	src/python/m5/params.py	/^    def __str__(self):$/;"	m	class:Time	file:
__str__	src/python/m5/params.py	/^    def __str__(self):$/;"	m	class:VectorPortElementRef	file:
__str__	src/python/m5/params.py	/^    def __str__(self):$/;"	m	class:VectorPortRef	file:
__str__	src/python/m5/params.py	/^    def __str__(self):$/;"	m	class:Voltage	file:
__str__	src/python/m5/proxy.py	/^    def __str__(self):$/;"	m	class:BaseProxy	file:
__str__	src/python/m5/util/code_formatter.py	/^    def __str__(self):$/;"	m	class:code_formatter	file:
__str__	src/python/m5/util/jobfile.py	/^    def __str__(self):$/;"	m	class:Data	file:
__str__	src/python/m5/util/multidict.py	/^    def __str__(self):$/;"	m	class:multidict	file:
__sub__	src/python/m5/params.py	/^    def __sub__(self, other):$/;"	m	class:NumericParamValue	file:
__sub__	src/python/m5/util/smartdict.py	/^    def __sub__(self, other):$/;"	m	class:Variable	file:
__tgid	src/arch/mips/linux/process.hh	/^    uint64_t __tgid;$/;"	m	class:MipsLinuxProcess
__to_number	src/base/str.cc	/^__to_number(string value, T &retval)$/;"	f
__truediv__	src/python/m5/util/smartdict.py	/^    def __truediv__(self, other):$/;"	m	class:Variable	file:
__tu_cksum	src/base/inet.cc	/^__tu_cksum(const IpPtr &ip)$/;"	f	namespace:Net
__tu_cksum6	src/base/inet.cc	/^__tu_cksum6(const Ip6Ptr &ip6)$/;"	f	namespace:Net
__uid	src/sim/process.hh	/^    uint64_t __uid;$/;"	m	class:LiveProcess
__unused4	src/arch/power/linux/linux.hh	/^        uint32_t __unused4;$/;"	m	struct:PowerLinux::__anon22
__unused4	src/arch/power/linux/linux.hh	/^        uint32_t __unused4;$/;"	m	struct:PowerLinux::__anon23
__unused4	src/arch/sparc/linux/linux.hh	/^        uint32_t __unused4;$/;"	m	struct:Sparc32Linux::__anon27
__unused4	src/arch/sparc/linux/linux.hh	/^        uint64_t __unused4[2];$/;"	m	struct:SparcLinux::__anon25
__unused5	src/arch/power/linux/linux.hh	/^        uint32_t __unused5;$/;"	m	struct:PowerLinux::__anon22
__unused5	src/arch/power/linux/linux.hh	/^        uint32_t __unused5;$/;"	m	struct:PowerLinux::__anon23
__unused5	src/arch/sparc/linux/linux.hh	/^        uint32_t __unused5;$/;"	m	struct:Sparc32Linux::__anon27
_add_cls_child	src/python/m5/SimObject.py	/^    def _add_cls_child(cls, name, child):$/;"	m	class:MetaSimObject
_append	src/python/m5/util/code_formatter.py	/^    def _append(self, data):$/;"	m	class:code_formatter
_archTimers	src/dev/arm/generic_timer.hh	/^    ArchTimer _archTimers[CPU_MAX];$/;"	m	class:GenericTimer
_arm	src/kern/kernel_stats.hh	/^    Stats::Scalar _arm;$/;"	m	class:Kernel::Statistics
_asid	src/mem/request.hh	/^    int _asid;$/;"	m	class:Request
_asm_	src/arch/alpha/pagetable.hh	/^    bool _asm_()  const { return (entry >>  4) & 0x1; }$/;"	f	struct:AlphaISA::PageTableEntry
_attr	src/arch/arm/tlb.hh	/^    uint64_t _attr;      \/\/ Memory attributes for last accessed TLB entry$/;"	m	class:ArmISA::TLB
_baseMasterPort	src/mem/port.hh	/^    BaseMasterPort* _baseMasterPort;$/;"	m	class:BaseSlavePort
_baseSlavePort	src/mem/port.hh	/^    BaseSlavePort* _baseSlavePort;$/;"	m	class:BaseMasterPort
_bool_dict	src/python/m5/util/convert.py	/^_bool_dict = {$/;"	v
_break	src/kern/linux/linux_syscalls.hh	/^    _break = 10, \/*renamed from break*\/$/;"	e	enum:SystemCalls::__anon87
_buf	src/base/circlebuf.hh	/^    char *_buf;$/;"	m	class:CircleBuf
_buflen	src/base/circlebuf.hh	/^    int _buflen;$/;"	m	class:CircleBuf
_burstSize	src/mem/dramsim2_wrapper.hh	/^    unsigned int _burstSize;$/;"	m	class:DRAMSim2Wrapper
_cacheLineSize	src/cpu/base.hh	/^    const unsigned int _cacheLineSize;$/;"	m	class:BaseCPU
_cacheLineSize	src/mem/port_proxy.hh	/^    const unsigned int _cacheLineSize;$/;"	m	class:PortProxy
_cacheLineSize	src/sim/system.hh	/^    const unsigned int _cacheLineSize;$/;"	m	class:System
_cached_ports	src/cpu/BaseCPU.py	/^    _cached_ports = ['icache_port', 'dcache_port']$/;"	v
_callpal	src/arch/alpha/kernel_stats.hh	/^    Stats::Vector _callpal;$/;"	m	class:AlphaISA::Kernel::Statistics
_case	src/unittest/unittest.cc	/^const char *_case = NULL;$/;"	m	namespace:__anon107	file:
_casePrinted	src/unittest/unittest.cc	/^bool _casePrinted = false;$/;"	m	namespace:__anon107	file:
_changeMemoryMode	src/python/m5/simulate.py	/^def _changeMemoryMode(system, mode):$/;"	f
_check	src/python/m5/params.py	/^    def _check(self):$/;"	m	class:CheckedInt
_check	src/python/m5/params.py	/^    def _check(self):$/;"	m	class:NumericParamValue
_clockPeriod	src/mem/dramsim2_wrapper.hh	/^    double _clockPeriod;$/;"	m	class:DRAMSim2Wrapper
_clockPeriod	src/sim/clock_domain.hh	/^    Tick _clockPeriod;$/;"	m	class:ClockDomain
_cls_get_port_ref	src/python/m5/SimObject.py	/^    def _cls_get_port_ref(cls, attr):$/;"	m	class:MetaSimObject
_cmos	src/dev/x86/SouthBridge.py	/^    _cmos = Cmos(pio_addr=x86IOAddress(0x70))$/;"	v	class:SouthBridge
_contextId	src/cpu/thread_state.hh	/^    int _contextId;$/;"	m	struct:ThreadState
_contextId	src/mem/request.hh	/^    int _contextId;$/;"	m	class:Request
_control	src/dev/arm/generic_timer.hh	/^        ArchTimerCtrl _control;$/;"	m	class:GenericTimer::ArchTimer
_count	src/arch/alpha/faults.cc	/^FaultStat AlignmentFault::_count;$/;"	m	class:AlphaISA::AlignmentFault	file:
_count	src/arch/alpha/faults.cc	/^FaultStat ArithmeticFault::_count;$/;"	m	class:AlphaISA::ArithmeticFault	file:
_count	src/arch/alpha/faults.cc	/^FaultStat DtbAcvFault::_count;$/;"	m	class:AlphaISA::DtbAcvFault	file:
_count	src/arch/alpha/faults.cc	/^FaultStat DtbAlignmentFault::_count;$/;"	m	class:AlphaISA::DtbAlignmentFault	file:
_count	src/arch/alpha/faults.cc	/^FaultStat DtbPageFault::_count;$/;"	m	class:AlphaISA::DtbPageFault	file:
_count	src/arch/alpha/faults.cc	/^FaultStat FloatEnableFault::_count;$/;"	m	class:AlphaISA::FloatEnableFault	file:
_count	src/arch/alpha/faults.cc	/^FaultStat IntegerOverflowFault::_count;$/;"	m	class:AlphaISA::IntegerOverflowFault	file:
_count	src/arch/alpha/faults.cc	/^FaultStat InterruptFault::_count;$/;"	m	class:AlphaISA::InterruptFault	file:
_count	src/arch/alpha/faults.cc	/^FaultStat ItbAcvFault::_count;$/;"	m	class:AlphaISA::ItbAcvFault	file:
_count	src/arch/alpha/faults.cc	/^FaultStat ItbPageFault::_count;$/;"	m	class:AlphaISA::ItbPageFault	file:
_count	src/arch/alpha/faults.cc	/^FaultStat MachineCheckFault::_count;$/;"	m	class:AlphaISA::MachineCheckFault	file:
_count	src/arch/alpha/faults.cc	/^FaultStat NDtbMissFault::_count;$/;"	m	class:AlphaISA::NDtbMissFault	file:
_count	src/arch/alpha/faults.cc	/^FaultStat PDtbMissFault::_count;$/;"	m	class:AlphaISA::PDtbMissFault	file:
_count	src/arch/alpha/faults.cc	/^FaultStat PalFault::_count;$/;"	m	class:AlphaISA::PalFault	file:
_count	src/arch/alpha/faults.cc	/^FaultStat ResetFault::_count;$/;"	m	class:AlphaISA::ResetFault	file:
_count	src/arch/alpha/faults.cc	/^FaultStat UnimplementedOpcodeFault::_count;$/;"	m	class:AlphaISA::UnimplementedOpcodeFault	file:
_count	src/arch/alpha/faults.hh	/^    static FaultStat _count;$/;"	m	class:AlphaISA::AlignmentFault
_count	src/arch/alpha/faults.hh	/^    static FaultStat _count;$/;"	m	class:AlphaISA::ArithmeticFault
_count	src/arch/alpha/faults.hh	/^    static FaultStat _count;$/;"	m	class:AlphaISA::DtbAcvFault
_count	src/arch/alpha/faults.hh	/^    static FaultStat _count;$/;"	m	class:AlphaISA::DtbAlignmentFault
_count	src/arch/alpha/faults.hh	/^    static FaultStat _count;$/;"	m	class:AlphaISA::DtbPageFault
_count	src/arch/alpha/faults.hh	/^    static FaultStat _count;$/;"	m	class:AlphaISA::FloatEnableFault
_count	src/arch/alpha/faults.hh	/^    static FaultStat _count;$/;"	m	class:AlphaISA::IntegerOverflowFault
_count	src/arch/alpha/faults.hh	/^    static FaultStat _count;$/;"	m	class:AlphaISA::InterruptFault
_count	src/arch/alpha/faults.hh	/^    static FaultStat _count;$/;"	m	class:AlphaISA::ItbAcvFault
_count	src/arch/alpha/faults.hh	/^    static FaultStat _count;$/;"	m	class:AlphaISA::ItbPageFault
_count	src/arch/alpha/faults.hh	/^    static FaultStat _count;$/;"	m	class:AlphaISA::MachineCheckFault
_count	src/arch/alpha/faults.hh	/^    static FaultStat _count;$/;"	m	class:AlphaISA::NDtbMissFault
_count	src/arch/alpha/faults.hh	/^    static FaultStat _count;$/;"	m	class:AlphaISA::PDtbMissFault
_count	src/arch/alpha/faults.hh	/^    static FaultStat _count;$/;"	m	class:AlphaISA::PalFault
_count	src/arch/alpha/faults.hh	/^    static FaultStat _count;$/;"	m	class:AlphaISA::ResetFault
_count	src/arch/alpha/faults.hh	/^    static FaultStat _count;$/;"	m	class:AlphaISA::UnimplementedOpcodeFault
_count	src/sim/drain.hh	/^    unsigned int _count;$/;"	m	class:DrainManager
_counter	src/dev/arm/generic_timer.hh	/^        SystemCounter *_counter;$/;"	m	class:GenericTimer::ArchTimer
_counter	src/dev/pktfifo.hh	/^    uint64_t _counter;$/;"	m	class:PacketFifo
_counterLimit	src/dev/arm/generic_timer.hh	/^        uint64_t _counterLimit;$/;"	m	class:GenericTimer::ArchTimer
_counterLimitReachedEvent	src/dev/arm/generic_timer.hh	/^            _counterLimitReachedEvent;$/;"	m	class:GenericTimer::ArchTimer
_cpa	src/base/cp_annotate.cc	/^CPA *CPA::_cpa;$/;"	m	class:CPA	file:
_cpa	src/base/cp_annotate.hh	/^    static CPA *_cpa;$/;"	m	class:CPA
_cpuId	src/cpu/base.hh	/^    int _cpuId;$/;"	m	class:BaseCPU
_cpuNum	src/dev/arm/generic_timer.hh	/^        int _cpuNum;$/;"	m	class:GenericTimer::ArchTimer
_curEventQueue	src/sim/eventq.cc	/^__thread EventQueue *_curEventQueue = NULL;$/;"	v
_curTick	src/sim/eventq.hh	/^    Tick _curTick;$/;"	m	class:EventQueue
_data	src/dev/copy_engine_defs.hh	/^    T _data;$/;"	m	struct:CopyEngineReg::Reg
_data	src/dev/i8254xGBe_defs.hh	/^        T _data;$/;"	m	struct:iGbReg::Regs::Reg
_dataMasterId	src/cpu/base.hh	/^    MasterID _dataMasterId;$/;"	m	class:BaseCPU
_defaultNumPhysCCRegs	src/cpu/o3/O3CPU.py	/^    _defaultNumPhysCCRegs = 0$/;"	v	class:DerivO3CPU
_del_keys	src/python/m5/util/sorteddict.py	/^    def _del_keys(self):$/;"	m	class:SortedDict
_desc	src/base/debug.hh	/^    const char *_desc;$/;"	m	class:Debug::Flag
_destMiscRegIdx	src/cpu/o3/dyn_inst.hh	/^    short _destMiscRegIdx[TheISA::MaxMiscDestRegs];$/;"	m	class:BaseO3DynInst
_destMiscRegVal	src/cpu/o3/dyn_inst.hh	/^    MiscReg _destMiscRegVal[TheISA::MaxMiscDestRegs];$/;"	m	class:BaseO3DynInst
_destRegIdx	src/cpu/base_dyn_inst.hh	/^    PhysRegIndex _destRegIdx[TheISA::MaxInstDestRegs];$/;"	m	class:BaseDynInst
_destRegIdx	src/cpu/inorder/inorder_dyn_inst.hh	/^    PhysRegIndex _destRegIdx[MaxInstDestRegs];$/;"	m	class:InOrderDynInst
_destRegIdx	src/cpu/static_inst.hh	/^    RegIndex _destRegIdx[MaxInstDestRegs];$/;"	m	class:StaticInst
_dirty	src/arch/arm/table_walker.hh	/^        bool _dirty;$/;"	m	class:ArmISA::TableWalker::L1Descriptor
_dirty	src/arch/arm/table_walker.hh	/^        bool _dirty;$/;"	m	class:ArmISA::TableWalker::L2Descriptor
_dirty	src/arch/arm/table_walker.hh	/^        bool _dirty;$/;"	m	class:ArmISA::TableWalker::LongDescriptor
_dma1	src/dev/x86/SouthBridge.py	/^    _dma1 = I8237(pio_addr=x86IOAddress(0x0))$/;"	v	class:SouthBridge
_drain	src/python/m5/simulate.py	/^    def _drain():$/;"	f	function:drain
_drainState	src/sim/drain.hh	/^    State _drainState;$/;"	m	class:Drainable
_dump	src/python/m5/util/multidict.py	/^    def _dump(self):$/;"	m	class:multidict
_dumpkey	src/python/m5/util/multidict.py	/^    def _dumpkey(self, key):$/;"	m	class:multidict
_enabled	src/base/cp_annotate.hh	/^    bool _enabled;$/;"	m	class:CPA
_enabled	src/base/statistics.cc	/^bool _enabled = false;$/;"	m	namespace:Stats	file:
_enabled	src/sim/root.hh	/^    bool _enabled;$/;"	m	class:Root
_end	src/base/addr_range.hh	/^    Addr _end;$/;"	m	class:AddrRange
_extraData	src/mem/request.hh	/^    uint64_t _extraData;$/;"	m	class:Request
_failures	src/unittest/unittest.cc	/^unsigned _failures = 0;$/;"	m	namespace:__anon107	file:
_flags	src/base/flags.hh	/^    T _flags;$/;"	m	class:Flags
_flags	src/mem/request.hh	/^    Flags _flags;$/;"	m	class:Request
_flatDestRegIdx	src/cpu/base_dyn_inst.hh	/^    TheISA::RegIndex _flatDestRegIdx[TheISA::MaxInstDestRegs];$/;"	m	class:BaseDynInst
_flatDestRegIdx	src/cpu/inorder/inorder_dyn_inst.hh	/^    TheISA::RegIndex _flatDestRegIdx[TheISA::MaxInstDestRegs];$/;"	m	class:InOrderDynInst
_flatSrcRegIdx	src/cpu/inorder/inorder_dyn_inst.hh	/^    TheISA::RegIndex _flatSrcRegIdx[TheISA::MaxInstSrcRegs];$/;"	m	class:InOrderDynInst
_flushMva	src/arch/arm/tlb.cc	/^TLB::_flushMva(Addr mva, uint64_t asn, bool secure_lookup, bool hyp,$/;"	f	class:TLB
_foe	src/arch/alpha/pagetable.hh	/^    bool _foe()  const { return (entry >>  3) & 0x1; }$/;"	f	struct:AlphaISA::PageTableEntry
_for	src/arch/alpha/pagetable.hh	/^    bool _for()  const { return (entry >>  1) & 0x1; }$/;"	f	struct:AlphaISA::PageTableEntry
_format_char	src/base/cprintf_formats.hh	/^_format_char(std::ostream &out, const T &data, Format &fmt)$/;"	f	namespace:cp
_format_float	src/base/cprintf_formats.hh	/^_format_float(std::ostream &out, const T &data, Format &fmt)$/;"	f	namespace:cp
_format_integer	src/base/cprintf_formats.hh	/^_format_integer(std::ostream &out, const T &data, Format &fmt)$/;"	f	namespace:cp
_format_string	src/base/cprintf_formats.hh	/^_format_string(std::ostream &out, const T &data, Format &fmt)$/;"	f	namespace:cp
_fow	src/arch/alpha/pagetable.hh	/^    bool _fow()  const { return (entry >>  2) & 0x1; }$/;"	f	struct:AlphaISA::PageTableEntry
_freq	src/dev/arm/generic_timer.hh	/^        uint64_t _freq;$/;"	m	class:GenericTimer::SystemCounter
_gdtSize	src/arch/x86/process.hh	/^        Addr _gdtSize;$/;"	m	class:X86ISA::X86LiveProcess
_gdtStart	src/arch/x86/process.hh	/^        Addr _gdtStart;$/;"	m	class:X86ISA::X86LiveProcess
_genericTimer	src/arch/arm/system.hh	/^    GenericTimer *_genericTimer;$/;"	m	class:ArmSystem
_get_next	src/python/m5/params.py	/^    def _get_next(self):$/;"	m	class:VectorPortRef
_get_port_ref	src/python/m5/SimObject.py	/^    def _get_port_ref(self, attr):$/;"	f
_get_sorted	src/python/m5/util/sorteddict.py	/^    def _get_sorted(self):$/;"	m	class:SortedDict
_gh	src/arch/alpha/pagetable.hh	/^    int  _gh()   const { return (entry >>  5) & 0x3; }$/;"	f	struct:AlphaISA::PageTableEntry
_gic	src/dev/arm/generic_timer.hh	/^    BaseGic *_gic;$/;"	m	class:GenericTimer
_globalEvent	src/sim/global_event.hh	/^        BaseGlobalEvent *_globalEvent;$/;"	m	class:BaseGlobalEvent::BarrierEvent
_hasKernelIRQChip	src/cpu/kvm/vm.hh	/^    bool _hasKernelIRQChip;$/;"	m	class:KvmVM
_haveGenericTimer	src/arch/arm/system.hh	/^    const bool _haveGenericTimer;$/;"	m	class:ArmSystem
_haveLPAE	src/arch/arm/system.hh	/^    const bool _haveLPAE;$/;"	m	class:ArmSystem
_haveLPAE	src/arch/arm/table_walker.hh	/^    bool _haveLPAE;$/;"	m	class:ArmISA::TableWalker
_haveLargeAsid64	src/arch/arm/system.hh	/^    const bool _haveLargeAsid64;$/;"	m	class:ArmSystem
_haveLargeAsid64	src/arch/arm/table_walker.hh	/^    bool _haveLargeAsid64;$/;"	m	class:ArmISA::TableWalker
_haveSecurity	src/arch/arm/system.hh	/^    const bool _haveSecurity;$/;"	m	class:ArmSystem
_haveVirtualization	src/arch/arm/system.hh	/^    const bool _haveVirtualization;$/;"	m	class:ArmSystem
_haveVirtualization	src/arch/arm/table_walker.hh	/^    bool _haveVirtualization;$/;"	m	class:ArmISA::TableWalker
_highestELIs64	src/arch/arm/system.hh	/^    bool _highestELIs64;$/;"	m	class:ArmSystem
_hwrei	src/kern/kernel_stats.hh	/^    Stats::Scalar _hwrei;$/;"	m	class:Kernel::Statistics
_hypervisor_desc_base	src/arch/sparc/SparcSystem.py	/^    _hypervisor_desc_base = 0x1f12080000$/;"	v	class:SparcSystem
_id	src/cpu/timebuf.hh	/^    int _id;$/;"	m	class:TimeBuffer
_instMasterId	src/cpu/base.hh	/^    MasterID _instMasterId;$/;"	m	class:BaseCPU
_instantiate	src/python/m5/params.py	/^    def _instantiate(self, parent = None, path = ''):$/;"	m	class:NullSimObject
_intNum	src/dev/arm/generic_timer.hh	/^        int _intNum;$/;"	m	class:GenericTimer::ArchTimer
_interval	src/cpu/base.hh	/^    Tick _interval;$/;"	m	class:CPUProgressEvent
_io_apic	src/dev/x86/SouthBridge.py	/^    _io_apic = I82094AA(pio_addr=0xFEC00000)$/;"	v	class:SouthBridge
_ip	src/base/inet.hh	/^    uint32_t _ip;$/;"	m	struct:Net::IpAddress
_iplCount	src/kern/kernel_stats.hh	/^    Stats::Vector _iplCount;$/;"	m	class:Kernel::Statistics
_iplGood	src/kern/kernel_stats.hh	/^    Stats::Vector _iplGood;$/;"	m	class:Kernel::Statistics
_iplTicks	src/kern/kernel_stats.hh	/^    Stats::Vector _iplTicks;$/;"	m	class:Kernel::Statistics
_iplUsed	src/kern/kernel_stats.hh	/^    Stats::Formula _iplUsed;$/;"	m	class:Kernel::Statistics
_isDirty	src/mem/cache/blk.hh	/^    bool _isDirty;$/;"	m	class:CacheBlkIsDirtyVisitor
_isSecure	src/mem/packet.hh	/^    bool _isSecure;$/;"	m	class:Packet
_isUncacheable	src/mem/cache/mshr.hh	/^    bool _isUncacheable;$/;"	m	class:MSHR
_itstate	src/arch/arm/types.hh	/^        uint8_t _itstate;$/;"	m	class:ArmISA::PCState
_keyboard	src/dev/x86/SouthBridge.py	/^            command_port=x86IOAddress(0x64))$/;"	v	class:SouthBridge
_keys	src/python/m5/util/sorteddict.py	/^    def _keys(self):$/;"	m	class:SortedDict
_kids	src/base/debug.hh	/^    std::vector<Flag *> _kids;$/;"	m	class:Debug::Flag
_kre	src/arch/alpha/pagetable.hh	/^    bool _kre()  const { return (entry >>  8) & 0x1; }$/;"	f	struct:AlphaISA::PageTableEntry
_kvmRun	src/cpu/kvm/base.hh	/^    struct kvm_run *_kvmRun;$/;"	m	class:BaseKvmCPU	typeref:struct:BaseKvmCPU::kvm_run
_kwe	src/arch/alpha/pagetable.hh	/^    bool _kwe()  const { return (entry >> 12) & 0x1; }$/;"	f	struct:AlphaISA::PageTableEntry
_left_eq	src/python/m5/util/sorteddict.py	/^    def _left_eq(self, key):$/;"	m	class:SortedDict
_left_ge	src/python/m5/util/sorteddict.py	/^    def _left_ge(self, key):$/;"	m	class:SortedDict
_left_gt	src/python/m5/util/sorteddict.py	/^    def _left_gt(self, key):$/;"	m	class:SortedDict
_llseekFunc	src/sim/syscall_emul.cc	/^_llseekFunc(SyscallDesc *desc, int num, LiveProcess *p, ThreadContext *tc)$/;"	f
_masterId	src/cpu/testers/rubytest/RubyTester.hh	/^    MasterID _masterId;$/;"	m	class:RubyTester
_masterId	src/mem/request.hh	/^    MasterID _masterId;$/;"	m	class:Request
_masterPort	src/mem/port.hh	/^    MasterPort* _masterPort;$/;"	m	class:SlavePort
_maxVnicDistance	src/dev/sinic.hh	/^    int _maxVnicDistance;$/;"	m	class:Sinic::Device
_maxsize	src/dev/pktfifo.hh	/^    unsigned _maxsize;$/;"	m	class:PacketFifo
_memory_modes	src/python/m5/simulate.py	/^_memory_modes = {$/;"	v
_mode	src/arch/alpha/kernel_stats.hh	/^    Stats::Vector _mode;$/;"	m	class:AlphaISA::Kernel::Statistics
_modeFraction	src/arch/alpha/kernel_stats.hh	/^    Stats::Formula _modeFraction;$/;"	m	class:AlphaISA::Kernel::Statistics
_modeGood	src/arch/alpha/kernel_stats.hh	/^    Stats::Vector _modeGood;$/;"	m	class:AlphaISA::Kernel::Statistics
_modeTicks	src/arch/alpha/kernel_stats.hh	/^    Stats::Vector _modeTicks;$/;"	m	class:AlphaISA::Kernel::Statistics
_mulcheck	src/python/m5/proxy.py	/^    def _mulcheck(self, result):$/;"	m	class:BaseProxy
_n	src/arch/sparc/faults.hh	/^    uint32_t _n;$/;"	m	class:SparcISA::EnumeratedFault
_name	src/arch/alpha/faults.cc	/^FaultName AlignmentFault::_name = "unalign";$/;"	m	class:AlphaISA::AlignmentFault	file:
_name	src/arch/alpha/faults.cc	/^FaultName ArithmeticFault::_name = "arith";$/;"	m	class:AlphaISA::ArithmeticFault	file:
_name	src/arch/alpha/faults.cc	/^FaultName DtbAcvFault::_name = "dtb_acv_fault";$/;"	m	class:AlphaISA::DtbAcvFault	file:
_name	src/arch/alpha/faults.cc	/^FaultName DtbAlignmentFault::_name = "unalign";$/;"	m	class:AlphaISA::DtbAlignmentFault	file:
_name	src/arch/alpha/faults.cc	/^FaultName DtbPageFault::_name = "dtb_page_fault";$/;"	m	class:AlphaISA::DtbPageFault	file:
_name	src/arch/alpha/faults.cc	/^FaultName FloatEnableFault::_name = "fen";$/;"	m	class:AlphaISA::FloatEnableFault	file:
_name	src/arch/alpha/faults.cc	/^FaultName IntegerOverflowFault::_name = "intover";$/;"	m	class:AlphaISA::IntegerOverflowFault	file:
_name	src/arch/alpha/faults.cc	/^FaultName InterruptFault::_name = "interrupt";$/;"	m	class:AlphaISA::InterruptFault	file:
_name	src/arch/alpha/faults.cc	/^FaultName ItbAcvFault::_name = "iaccvio";$/;"	m	class:AlphaISA::ItbAcvFault	file:
_name	src/arch/alpha/faults.cc	/^FaultName ItbPageFault::_name = "itbmiss";$/;"	m	class:AlphaISA::ItbPageFault	file:
_name	src/arch/alpha/faults.cc	/^FaultName MachineCheckFault::_name = "mchk";$/;"	m	class:AlphaISA::MachineCheckFault	file:
_name	src/arch/alpha/faults.cc	/^FaultName NDtbMissFault::_name = "dtb_miss_single";$/;"	m	class:AlphaISA::NDtbMissFault	file:
_name	src/arch/alpha/faults.cc	/^FaultName PDtbMissFault::_name = "dtb_miss_double";$/;"	m	class:AlphaISA::PDtbMissFault	file:
_name	src/arch/alpha/faults.cc	/^FaultName PalFault::_name = "pal";$/;"	m	class:AlphaISA::PalFault	file:
_name	src/arch/alpha/faults.cc	/^FaultName ResetFault::_name = "reset";$/;"	m	class:AlphaISA::ResetFault	file:
_name	src/arch/alpha/faults.cc	/^FaultName UnimplementedOpcodeFault::_name = "opdec";$/;"	m	class:AlphaISA::UnimplementedOpcodeFault	file:
_name	src/arch/alpha/faults.hh	/^    static FaultName _name;$/;"	m	class:AlphaISA::AlignmentFault
_name	src/arch/alpha/faults.hh	/^    static FaultName _name;$/;"	m	class:AlphaISA::ArithmeticFault
_name	src/arch/alpha/faults.hh	/^    static FaultName _name;$/;"	m	class:AlphaISA::DtbAcvFault
_name	src/arch/alpha/faults.hh	/^    static FaultName _name;$/;"	m	class:AlphaISA::DtbAlignmentFault
_name	src/arch/alpha/faults.hh	/^    static FaultName _name;$/;"	m	class:AlphaISA::DtbPageFault
_name	src/arch/alpha/faults.hh	/^    static FaultName _name;$/;"	m	class:AlphaISA::FloatEnableFault
_name	src/arch/alpha/faults.hh	/^    static FaultName _name;$/;"	m	class:AlphaISA::IntegerOverflowFault
_name	src/arch/alpha/faults.hh	/^    static FaultName _name;$/;"	m	class:AlphaISA::InterruptFault
_name	src/arch/alpha/faults.hh	/^    static FaultName _name;$/;"	m	class:AlphaISA::ItbAcvFault
_name	src/arch/alpha/faults.hh	/^    static FaultName _name;$/;"	m	class:AlphaISA::ItbPageFault
_name	src/arch/alpha/faults.hh	/^    static FaultName _name;$/;"	m	class:AlphaISA::MachineCheckFault
_name	src/arch/alpha/faults.hh	/^    static FaultName _name;$/;"	m	class:AlphaISA::NDtbMissFault
_name	src/arch/alpha/faults.hh	/^    static FaultName _name;$/;"	m	class:AlphaISA::PDtbMissFault
_name	src/arch/alpha/faults.hh	/^    static FaultName _name;$/;"	m	class:AlphaISA::PalFault
_name	src/arch/alpha/faults.hh	/^    static FaultName _name;$/;"	m	class:AlphaISA::ResetFault
_name	src/arch/alpha/faults.hh	/^    static FaultName _name;$/;"	m	class:AlphaISA::UnimplementedOpcodeFault
_name	src/arch/power/faults.hh	/^    FaultName _name;$/;"	m	class:PowerISA::PowerFault
_name	src/base/debug.hh	/^    const char *_name;$/;"	m	class:Debug::Flag
_name	src/cpu/activity.hh	/^    std::string _name;$/;"	m	class:ActivityRecorder
_name	src/cpu/o3/free_list.hh	/^    const std::string _name;$/;"	m	class:UnifiedFreeList
_name	src/cpu/o3/mem_dep_unit.hh	/^    std::string _name;$/;"	m	class:MemDepUnit
_name	src/cpu/o3/scoreboard.hh	/^    const std::string _name;$/;"	m	class:Scoreboard
_name	src/cpu/testers/traffic_gen/generators.hh	/^    const std::string _name;$/;"	m	class:BaseGen
_name	src/dev/arm/generic_timer.hh	/^        std::string _name;$/;"	m	class:GenericTimer::ArchTimer
_name	src/dev/arm/timer_cpulocal.hh	/^        std::string _name;$/;"	m	class:CpuLocalTimer::Timer
_name	src/dev/arm/timer_sp804.hh	/^        std::string _name;$/;"	m	class:Sp804::Timer
_name	src/dev/i8254xGBe.hh	/^        std::string _name;$/;"	m	class:IGbE::DescCache
_name	src/dev/ide_ctrl.hh	/^        std::string _name;$/;"	m	struct:IdeController::Channel
_name	src/dev/intel_8254_timer.hh	/^        std::string _name;$/;"	m	class:Intel8254Timer::Counter
_name	src/dev/intel_8254_timer.hh	/^    std::string _name;$/;"	m	class:Intel8254Timer
_name	src/dev/mc146818.hh	/^    std::string _name;$/;"	m	class:MC146818
_name	src/mem/bus.hh	/^        std::string _name;$/;"	m	class:BaseBus::Layer
_name	src/mem/page_table.hh	/^    const std::string _name;$/;"	m	class:PageTable
_name	src/mem/physical.hh	/^    std::string _name;$/;"	m	class:PhysicalMemory
_neg_inf	src/python/m5/util/region.py	/^class _neg_inf(object):$/;"	c
_netmask	src/base/inet.hh	/^    uint8_t _netmask;$/;"	m	struct:Net::IpNetmask
_new_param	src/python/m5/SimObject.py	/^    def _new_param(cls, name, pdesc):$/;"	m	class:MetaSimObject
_new_port	src/python/m5/SimObject.py	/^    def _new_port(cls, name, port):$/;"	m	class:MetaSimObject
_nextItstate	src/arch/arm/types.hh	/^        uint8_t _nextItstate;$/;"	m	class:ArmISA::PCState
_nextStatus	src/cpu/o3/commit.hh	/^    CommitStatus _nextStatus;$/;"	m	class:DefaultCommit
_nnpc	src/arch/generic/types.hh	/^    Addr _nnpc;$/;"	m	class:GenericISA::DelaySlotPCState
_nomb	src/arch/alpha/pagetable.hh	/^    bool _nomb() const { return (entry >>  7) & 0x1; }$/;"	f	struct:AlphaISA::PageTableEntry
_npc	src/arch/generic/types.hh	/^    Addr _npc;$/;"	m	class:GenericISA::PCStateBase
_numCCDestRegs	src/cpu/static_inst.hh	/^    int8_t _numCCDestRegs;$/;"	m	class:StaticInst
_numContexts	src/sim/system.hh	/^    int _numContexts;$/;"	m	class:System
_numDestMiscRegs	src/cpu/o3/dyn_inst.hh	/^    uint8_t _numDestMiscRegs;$/;"	m	class:BaseO3DynInst
_numDestRegs	src/cpu/static_inst.hh	/^    int8_t _numDestRegs;$/;"	m	class:StaticInst
_numFPDestRegs	src/cpu/static_inst.hh	/^    int8_t _numFPDestRegs;$/;"	m	class:StaticInst
_numIntDestRegs	src/cpu/static_inst.hh	/^    int8_t _numIntDestRegs;$/;"	m	class:StaticInst
_numSrcRegs	src/cpu/static_inst.hh	/^    int8_t _numSrcRegs;$/;"	m	class:StaticInst
_nupc	src/arch/generic/types.hh	/^    MicroPC _nupc;$/;"	m	class:GenericISA::DelaySlotUPCState
_nupc	src/arch/generic/types.hh	/^    MicroPC _nupc;$/;"	m	class:GenericISA::UPCState
_nvram_base	src/arch/sparc/SparcSystem.py	/^    _nvram_base = 0x1f11000000$/;"	v	class:SparcSystem
_off	src/base/inet.hh	/^    int _off;$/;"	m	class:Net::TcpPtr
_off	src/base/inet.hh	/^    int _off;$/;"	m	class:Net::UdpPtr
_opClass	src/cpu/static_inst.hh	/^    OpClass _opClass;$/;"	m	class:StaticInst
_pad1	src/kern/linux/linux.hh	/^        int32_t         _pad1;          \/\/!< for alignment$/;"	m	struct:Linux::__anon84
_paddr	src/mem/request.hh	/^    Addr _paddr;$/;"	m	class:Request
_pageStart	src/arch/mips/pagetable.hh	/^    Addr _pageStart;$/;"	m	struct:MipsISA::TlbEntry
_pageStart	src/arch/power/tlb.hh	/^    Addr _pageStart;$/;"	m	struct:PowerISA::TlbEntry
_params	src/sim/sim_object.hh	/^    const SimObjectParams *_params;$/;"	m	class:SimObject
_params	src/sim/system.hh	/^    Params *_params;$/;"	m	class:System
_parent	src/dev/arm/generic_timer.hh	/^        GenericTimer *_parent;$/;"	m	class:GenericTimer::ArchTimer
_parse_isa_desc	src/arch/isa_parser.py	/^    def _parse_isa_desc(self, isa_desc_file):$/;"	m	class:ISAParser
_partition_desc_base	src/arch/sparc/SparcSystem.py	/^    _partition_desc_base = 0x1f12000000$/;"	v	class:SparcSystem
_passes	src/unittest/unittest.cc	/^unsigned _passes = 0;$/;"	m	namespace:__anon107	file:
_pc	src/arch/generic/types.hh	/^    Addr _pc;$/;"	m	class:GenericISA::PCStateBase
_pc	src/mem/request.hh	/^    Addr _pc;$/;"	m	class:Request
_pcState	src/cpu/simple_thread.hh	/^    TheISA::PCState _pcState;$/;"	m	class:SimpleThread
_period	src/dev/arm/generic_timer.hh	/^        Tick _period;$/;"	m	class:GenericTimer::SystemCounter
_period	src/sim/root.hh	/^    Time _period;$/;"	m	class:Root
_periodTick	src/sim/root.hh	/^    Tick _periodTick;$/;"	m	class:Root
_pfn	src/arch/alpha/pagetable.hh	/^    Addr _pfn()  const { return (entry >> 32) & 0xffffffff; }$/;"	f	struct:AlphaISA::PageTableEntry
_physAddrRange64	src/arch/arm/system.hh	/^    const uint8_t _physAddrRange64;$/;"	m	class:ArmSystem
_pic1	src/dev/x86/SouthBridge.py	/^    _pic1 = I8259(pio_addr=x86IOAddress(0x20), mode='I8259Master')$/;"	v	class:SouthBridge
_pic2	src/dev/x86/SouthBridge.py	/^    _pic2 = I8259(pio_addr=x86IOAddress(0xA0), mode='I8259Slave')$/;"	v	class:SouthBridge
_pid	src/cpu/base.hh	/^    uint32_t _pid;$/;"	m	class:BaseCPU
_pit	src/dev/x86/SouthBridge.py	/^    _pit = I8254(pio_addr=x86IOAddress(0x40))$/;"	v	class:SouthBridge
_port	src/base/inet.hh	/^    uint16_t _port;$/;"	m	struct:Net::IpWithPort
_port	src/mem/port_proxy.hh	/^    MasterPort &_port;$/;"	m	class:PortProxy
_pos_inf	src/python/m5/util/region.py	/^class _pos_inf(object):$/;"	c
_prevDestRegIdx	src/cpu/base_dyn_inst.hh	/^    PhysRegIndex _prevDestRegIdx[TheISA::MaxInstDestRegs];$/;"	m	class:BaseDynInst
_prevDestRegIdx	src/cpu/inorder/inorder_dyn_inst.hh	/^    PhysRegIndex _prevDestRegIdx[MaxInstDestRegs];$/;"	m	class:InOrderDynInst
_printOnPass	src/unittest/unittest.cc	/^bool _printOnPass = (getenv("PRINT_ON_PASS") != NULL);$/;"	m	namespace:__anon107	file:
_priority	src/sim/eventq.hh	/^    Priority _priority; \/\/!< event priority$/;"	m	class:Event
_programHeaderCount	src/base/loader/elf_object.hh	/^    uint16_t _programHeaderCount;$/;"	m	class:ElfObject
_programHeaderSize	src/base/loader/elf_object.hh	/^    uint16_t _programHeaderSize;$/;"	m	class:ElfObject
_programHeaderTable	src/base/loader/elf_object.hh	/^    Addr _programHeaderTable;$/;"	m	class:ElfObject
_queue	src/mem/cache/cache.hh	/^        MemSidePacketQueue _queue;$/;"	m	class:Cache::MemSidePort
_queueSize	src/mem/dramsim2_wrapper.hh	/^    unsigned int _queueSize;$/;"	m	class:DRAMSim2Wrapper
_quiesce	src/kern/kernel_stats.hh	/^    Stats::Scalar _quiesce;$/;"	m	class:Kernel::Statistics
_random	src/base/random.hh	/^    _random(double &value)$/;"	f	class:Random
_random	src/base/random.hh	/^    _random(float &value)$/;"	f	class:Random
_random	src/base/random.hh	/^    _random(int16_t &value)$/;"	f	class:Random
_random	src/base/random.hh	/^    _random(int16_t min, int16_t max)$/;"	f	class:Random
_random	src/base/random.hh	/^    _random(int32_t &value)$/;"	f	class:Random
_random	src/base/random.hh	/^    _random(int32_t min, int32_t max)$/;"	f	class:Random
_random	src/base/random.hh	/^    _random(int64_t &value)$/;"	f	class:Random
_random	src/base/random.hh	/^    _random(int64_t min, int64_t max)$/;"	f	class:Random
_random	src/base/random.hh	/^    _random(int8_t &value)$/;"	f	class:Random
_random	src/base/random.hh	/^    _random(int8_t min, int8_t max)$/;"	f	class:Random
_random	src/base/random.hh	/^    _random(uint16_t &value)$/;"	f	class:Random
_random	src/base/random.hh	/^    _random(uint16_t min, uint16_t max)$/;"	f	class:Random
_random	src/base/random.hh	/^    _random(uint32_t &value)$/;"	f	class:Random
_random	src/base/random.hh	/^    _random(uint32_t min, uint32_t max)$/;"	f	class:Random
_random	src/base/random.hh	/^    _random(uint64_t &value)$/;"	f	class:Random
_random	src/base/random.hh	/^    _random(uint64_t min, uint64_t max)$/;"	f	class:Random
_random	src/base/random.hh	/^    _random(uint8_t &value)$/;"	f	class:Random
_random	src/base/random.hh	/^    _random(uint8_t min, uint8_t max)$/;"	f	class:Random
_readySrcRegIdx	src/cpu/base_dyn_inst.hh	/^    std::bitset<MaxInstSrcRegs> _readySrcRegIdx;$/;"	m	class:BaseDynInst
_readySrcRegIdx	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool _readySrcRegIdx[MaxInstSrcRegs];$/;"	m	class:InOrderDynInst
_regIndexList	src/cpu/kvm/arm_cpu.hh	/^    mutable RegIndexVector _regIndexList;$/;"	m	class:ArmKvmCPU
_repeatEvent	src/cpu/base.hh	/^    bool _repeatEvent;$/;"	m	class:CPUProgressEvent
_reserved	src/dev/pktfifo.hh	/^    unsigned _reserved;$/;"	m	class:PacketFifo
_resetAddr64	src/arch/arm/system.hh	/^    const Addr _resetAddr64;$/;"	m	class:ArmSystem
_resetTick	src/dev/arm/generic_timer.hh	/^        Tick _resetTick;$/;"	m	class:GenericTimer::SystemCounter
_resolution	src/cpu/kvm/timer.hh	/^    mutable Tick _resolution;$/;"	m	class:BaseKvmTimer
_right_eq	src/python/m5/util/sorteddict.py	/^    def _right_eq(self, key):$/;"	m	class:SortedDict
_right_le	src/python/m5/util/sorteddict.py	/^    def _right_le(self, key):$/;"	m	class:SortedDict
_right_lt	src/python/m5/util/sorteddict.py	/^    def _right_lt(self, key):$/;"	m	class:SortedDict
_rollover	src/base/circlebuf.hh	/^    bool _rollover;$/;"	m	class:CircleBuf
_rom_base	src/arch/sparc/SparcSystem.py	/^    _rom_base = 0xfff0000000$/;"	v	class:SparcSystem
_root	src/sim/root.cc	/^Root *Root::_root = NULL;$/;"	m	class:Root	file:
_root	src/sim/root.hh	/^    static Root *_root;$/;"	m	class:Root
_rsv0	src/arch/alpha/pagetable.hh	/^    int  _rsv0() const { return (entry >> 14) & 0x3; }$/;"	f	struct:AlphaISA::PageTableEntry
_rsv1	src/arch/alpha/pagetable.hh	/^    int  _rsv1() const { return (entry >> 10) & 0x3; }$/;"	f	struct:AlphaISA::PageTableEntry
_set	src/base/time.cc	/^Time::_set(bool monotonic)$/;"	f	class:Time
_set_keyword	src/python/m5/SimObject.py	/^    def _set_keyword(cls, keyword, val, kwtype):$/;"	m	class:MetaSimObject
_set_param	src/python/m5/SimObject.py	/^    def _set_param(cls, name, value, param):$/;"	m	class:MetaSimObject
_set_sorted	src/python/m5/util/sorteddict.py	/^    def _set_sorted(self, val):$/;"	m	class:SortedDict
_size	src/arch/arm/linux/atag.hh	/^    uint32_t _size;$/;"	m	class:AtagHeader
_size	src/arch/arm/types.hh	/^        uint8_t _size;$/;"	m	class:ArmISA::PCState
_size	src/arch/sparc/pagetable.hh	/^    _size() const$/;"	f	class:SparcISA::PageTableEntry
_size	src/arch/x86/types.hh	/^        uint8_t _size;$/;"	m	class:X86ISA::PCState
_size	src/base/circlebuf.hh	/^    int _size;$/;"	m	class:CircleBuf
_size	src/base/statistics.hh	/^    size_type _size;$/;"	m	class:Stats::Vector2dBase
_size	src/base/statistics.hh	/^    size_type _size;$/;"	m	class:Stats::VectorBase
_size	src/base/statistics.hh	/^    size_type _size;$/;"	m	class:Stats::VectorDistBase
_size	src/dev/pktfifo.hh	/^    unsigned _size;$/;"	m	class:PacketFifo
_size	src/mem/request.hh	/^    int _size;$/;"	m	class:Request
_slavePort	src/mem/port.hh	/^    SlavePort* _slavePort;$/;"	m	class:MasterPort
_speaker	src/dev/x86/SouthBridge.py	/^    _speaker = PcSpeaker(pio_addr=x86IOAddress(0x61))$/;"	v	class:SouthBridge
_spinThreshold	src/sim/root.hh	/^    Time _spinThreshold;$/;"	m	class:Root
_srcRegIdx	src/cpu/base_dyn_inst.hh	/^    PhysRegIndex _srcRegIdx[TheISA::MaxInstSrcRegs];$/;"	m	class:BaseDynInst
_srcRegIdx	src/cpu/inorder/inorder_dyn_inst.hh	/^    PhysRegIndex _srcRegIdx[MaxInstSrcRegs];$/;"	m	class:InOrderDynInst
_srcRegIdx	src/cpu/static_inst.hh	/^    RegIndex _srcRegIdx[MaxInstSrcRegs];$/;"	m	class:StaticInst
_stage1Tlb	src/arch/arm/stage2_mmu.hh	/^    TLB *_stage1Tlb;$/;"	m	class:ArmISA::Stage2MMU
_stage2Tlb	src/arch/arm/stage2_mmu.hh	/^    TLB *_stage2Tlb;$/;"	m	class:ArmISA::Stage2MMU
_start	src/base/addr_range.hh	/^    Addr _start;$/;"	m	class:AddrRange
_start	src/base/circlebuf.hh	/^    int _start;$/;"	m	class:CircleBuf
_status	src/base/debug.hh	/^    bool _status;$/;"	m	class:Debug::SimpleFlag
_status	src/cpu/inorder/cpu.hh	/^    Status _status;$/;"	m	class:InOrderCPU
_status	src/cpu/inorder/pipeline_stage.hh	/^    StageStatus _status;$/;"	m	class:PipelineStage
_status	src/cpu/kvm/base.hh	/^    Status _status;$/;"	m	class:BaseKvmCPU
_status	src/cpu/o3/commit.hh	/^    CommitStatus _status;$/;"	m	class:DefaultCommit
_status	src/cpu/o3/cpu.hh	/^    Status _status;$/;"	m	class:FullO3CPU
_status	src/cpu/o3/decode.hh	/^    DecodeStatus _status;$/;"	m	class:DefaultDecode
_status	src/cpu/o3/fetch.hh	/^    FetchStatus _status;$/;"	m	class:DefaultFetch
_status	src/cpu/o3/iew.hh	/^    Status _status;$/;"	m	class:DefaultIEW
_status	src/cpu/o3/rename.hh	/^    RenameStatus _status;$/;"	m	class:DefaultRename
_status	src/cpu/ozone/cpu.hh	/^    Status _status;$/;"	m	class:OzoneCPU
_status	src/cpu/ozone/lsq_unit.hh	/^    Status _status;$/;"	m	class:OzoneLSQ
_status	src/cpu/ozone/lw_lsq.hh	/^    Status _status;$/;"	m	class:OzoneLWLSQ
_status	src/cpu/simple/base.hh	/^    Status _status;$/;"	m	class:BaseSimpleCPU
_status	src/cpu/thread_state.hh	/^    ThreadContext::Status _status;$/;"	m	struct:ThreadState
_stop	src/base/circlebuf.hh	/^    int _stop;$/;"	m	class:CircleBuf
_sw	src/arch/alpha/pagetable.hh	/^    Addr _sw()   const { return (entry >> 16) & 0xffff; }$/;"	f	struct:AlphaISA::PageTableEntry
_swap_context	src/arch/alpha/kernel_stats.hh	/^    Stats::Scalar _swap_context;$/;"	m	class:AlphaISA::Kernel::Statistics
_switchedOut	src/cpu/base.hh	/^    bool _switchedOut;$/;"	m	class:BaseCPU
_syscall	src/kern/kernel_stats.hh	/^    Stats::Vector _syscall;$/;"	m	class:Kernel::Statistics
_system	src/mem/abstract_mem.hh	/^    System *_system;$/;"	m	class:AbstractMemory
_systemCounter	src/dev/arm/generic_timer.hh	/^    SystemCounter _systemCounter;$/;"	m	class:GenericTimer
_systemPort	src/sim/system.hh	/^    SystemPort _systemPort;$/;"	m	class:System
_tag	src/unittest/refcnttest.cc	/^    const char *_tag;$/;"	m	class:__anon106::TestRC	file:
_taskId	src/cpu/base.hh	/^    uint32_t _taskId;$/;"	m	class:BaseCPU
_taskId	src/mem/request.hh	/^    uint32_t _taskId;$/;"	m	class:Request
_tc	src/mem/fs_translating_port_proxy.hh	/^    ThreadContext* _tc;$/;"	m	class:FSTranslatingPortProxy
_the_instance	src/sim/Root.py	/^    _the_instance = None$/;"	v	class:Root
_threadId	src/cpu/thread_state.hh	/^    ThreadID _threadId;$/;"	m	struct:ThreadState
_threadId	src/mem/request.hh	/^    int _threadId;$/;"	m	class:Request
_time	src/base/time.hh	/^    timespec _time;$/;"	m	class:Time
_time	src/mem/request.hh	/^    Tick _time;$/;"	m	class:Request
_tlb	src/cpu/inorder/resources/cache_unit.hh	/^    TheISA::TLB *_tlb;$/;"	m	class:CacheUnit
_tlb	src/cpu/inorder/resources/tlb_unit.hh	/^    TheISA::TLB *_tlb;$/;"	m	class:TLBUnit
_uncached_master_ports	src/cpu/BaseCPU.py	/^    _uncached_master_ports = []$/;"	v
_uncached_slave_ports	src/cpu/BaseCPU.py	/^    _uncached_slave_ports = []$/;"	v
_upc	src/arch/generic/types.hh	/^    MicroPC _upc;$/;"	m	class:GenericISA::DelaySlotUPCState
_upc	src/arch/generic/types.hh	/^    MicroPC _upc;$/;"	m	class:GenericISA::UPCState
_update	src/python/m5/debug.py	/^    def _update(self):$/;"	m	class:AllFlags
_ure	src/arch/alpha/pagetable.hh	/^    bool _ure()  const { return (entry >>  9) & 0x1; }$/;"	f	struct:AlphaISA::PageTableEntry
_uwe	src/arch/alpha/pagetable.hh	/^    bool _uwe()  const { return (entry >> 13) & 0x1; }$/;"	f	struct:AlphaISA::PageTableEntry
_vaddr	src/mem/request.hh	/^    Addr _vaddr;$/;"	m	class:Request
_vect	src/arch/alpha/faults.cc	/^FaultVect AlignmentFault::_vect = 0x0301;$/;"	m	class:AlphaISA::AlignmentFault	file:
_vect	src/arch/alpha/faults.cc	/^FaultVect ArithmeticFault::_vect = 0x0501;$/;"	m	class:AlphaISA::ArithmeticFault	file:
_vect	src/arch/alpha/faults.cc	/^FaultVect DtbAcvFault::_vect = 0x0381;$/;"	m	class:AlphaISA::DtbAcvFault	file:
_vect	src/arch/alpha/faults.cc	/^FaultVect DtbAlignmentFault::_vect = 0x0301;$/;"	m	class:AlphaISA::DtbAlignmentFault	file:
_vect	src/arch/alpha/faults.cc	/^FaultVect DtbPageFault::_vect = 0x0381;$/;"	m	class:AlphaISA::DtbPageFault	file:
_vect	src/arch/alpha/faults.cc	/^FaultVect FloatEnableFault::_vect = 0x0581;$/;"	m	class:AlphaISA::FloatEnableFault	file:
_vect	src/arch/alpha/faults.cc	/^FaultVect IntegerOverflowFault::_vect = 0x0501;$/;"	m	class:AlphaISA::IntegerOverflowFault	file:
_vect	src/arch/alpha/faults.cc	/^FaultVect InterruptFault::_vect = 0x0101;$/;"	m	class:AlphaISA::InterruptFault	file:
_vect	src/arch/alpha/faults.cc	/^FaultVect ItbAcvFault::_vect = 0x0081;$/;"	m	class:AlphaISA::ItbAcvFault	file:
_vect	src/arch/alpha/faults.cc	/^FaultVect ItbPageFault::_vect = 0x0181;$/;"	m	class:AlphaISA::ItbPageFault	file:
_vect	src/arch/alpha/faults.cc	/^FaultVect MachineCheckFault::_vect = 0x0401;$/;"	m	class:AlphaISA::MachineCheckFault	file:
_vect	src/arch/alpha/faults.cc	/^FaultVect NDtbMissFault::_vect = 0x0201;$/;"	m	class:AlphaISA::NDtbMissFault	file:
_vect	src/arch/alpha/faults.cc	/^FaultVect PDtbMissFault::_vect = 0x0281;$/;"	m	class:AlphaISA::PDtbMissFault	file:
_vect	src/arch/alpha/faults.cc	/^FaultVect PalFault::_vect = 0x2001;$/;"	m	class:AlphaISA::PalFault	file:
_vect	src/arch/alpha/faults.cc	/^FaultVect ResetFault::_vect = 0x0001;$/;"	m	class:AlphaISA::ResetFault	file:
_vect	src/arch/alpha/faults.cc	/^FaultVect UnimplementedOpcodeFault::_vect = 0x0481;$/;"	m	class:AlphaISA::UnimplementedOpcodeFault	file:
_vect	src/arch/alpha/faults.hh	/^    static FaultVect _vect;$/;"	m	class:AlphaISA::AlignmentFault
_vect	src/arch/alpha/faults.hh	/^    static FaultVect _vect;$/;"	m	class:AlphaISA::ArithmeticFault
_vect	src/arch/alpha/faults.hh	/^    static FaultVect _vect;$/;"	m	class:AlphaISA::DtbAcvFault
_vect	src/arch/alpha/faults.hh	/^    static FaultVect _vect;$/;"	m	class:AlphaISA::DtbAlignmentFault
_vect	src/arch/alpha/faults.hh	/^    static FaultVect _vect;$/;"	m	class:AlphaISA::DtbPageFault
_vect	src/arch/alpha/faults.hh	/^    static FaultVect _vect;$/;"	m	class:AlphaISA::FloatEnableFault
_vect	src/arch/alpha/faults.hh	/^    static FaultVect _vect;$/;"	m	class:AlphaISA::IntegerOverflowFault
_vect	src/arch/alpha/faults.hh	/^    static FaultVect _vect;$/;"	m	class:AlphaISA::InterruptFault
_vect	src/arch/alpha/faults.hh	/^    static FaultVect _vect;$/;"	m	class:AlphaISA::ItbAcvFault
_vect	src/arch/alpha/faults.hh	/^    static FaultVect _vect;$/;"	m	class:AlphaISA::ItbPageFault
_vect	src/arch/alpha/faults.hh	/^    static FaultVect _vect;$/;"	m	class:AlphaISA::MachineCheckFault
_vect	src/arch/alpha/faults.hh	/^    static FaultVect _vect;$/;"	m	class:AlphaISA::NDtbMissFault
_vect	src/arch/alpha/faults.hh	/^    static FaultVect _vect;$/;"	m	class:AlphaISA::PDtbMissFault
_vect	src/arch/alpha/faults.hh	/^    static FaultVect _vect;$/;"	m	class:AlphaISA::PalFault
_vect	src/arch/alpha/faults.hh	/^    static FaultVect _vect;$/;"	m	class:AlphaISA::ResetFault
_vect	src/arch/alpha/faults.hh	/^    static FaultVect _vect;$/;"	m	class:AlphaISA::UnimplementedOpcodeFault
_videoHeight	src/base/vnc/vncinput.hh	/^    uint16_t _videoHeight;$/;"	m	class:VncInput
_videoWidth	src/base/vnc/vncinput.hh	/^    uint16_t _videoWidth;$/;"	m	class:VncInput
_voltage	src/sim/voltage_domain.hh	/^    double _voltage;$/;"	m	class:VoltageDomain
_voltageDomain	src/sim/clock_domain.hh	/^    VoltageDomain *_voltageDomain;$/;"	m	class:ClockDomain
_when	src/sim/eventq.hh	/^    Tick _when;         \/\/!< timestamp when event should be processed$/;"	m	class:Event
a	src/arch/arm/miscregs.hh	/^        Bitfield<1>    a;       \/\/ Alignment check enable$/;"	m	namespace:ArmISA
a	src/arch/arm/miscregs.hh	/^        Bitfield<8> a;$/;"	m	namespace:ArmISA
a	src/arch/mips/mt_constants.hh	/^    Bitfield<13>     a;$/;"	m	namespace:MipsISA
a	src/arch/x86/pagetable_walker.cc	/^    Bitfield<5> a;$/;"	m	namespace:X86ISA	file:
a	src/arch/x86/regs/misc.hh	/^            Bitfield<40> a; \/\/ Accessed$/;"	m	namespace:X86ISA
a	src/base/bigint.hh	/^    uint32_t a;$/;"	m	struct:m5_twin32_t
a	src/base/bigint.hh	/^    uint64_t a;$/;"	m	struct:m5_twin64_t
a	src/base/loader/exec_ecoff.h	/^        struct ecoff_aouthdr a;$/;"	m	struct:ecoff_exechdr	typeref:struct:ecoff_exechdr::ecoff_aouthdr
a0	src/arch/mips/mt_constants.hh	/^    Bitfield<20, 18> a0;$/;"	m	namespace:MipsISA
a0	src/kern/tru64/tru64.hh	/^            uint64_t a0;        \/\/!< a0$/;"	m	struct:Tru64::nxm_thread_attr::__anon100
a1	src/arch/arm/miscregs.hh	/^        Bitfield<22> a1;$/;"	m	namespace:ArmISA
a9scu	src/dev/arm/RealView.py	/^    a9scu  = A9SCU(pio_addr=0x1f000000)$/;"	v	class:RealViewPBX
a_type	src/sim/process.hh	/^    IntType a_type;$/;"	m	struct:AuxVector
a_val	src/sim/process.hh	/^    IntType a_val;$/;"	m	struct:AuxVector
aa	src/arch/power/types.hh	/^    Bitfield<1>      aa;$/;"	m	namespace:PowerISA
aaci_fake	src/dev/arm/RealView.py	/^    aaci_fake      = AmbaFake(pio_addr=0x1C040000)$/;"	v	class:VExpress_EMM
aaci_fake	src/dev/arm/RealView.py	/^    aaci_fake     = AmbaFake(pio_addr=0x10004000)$/;"	v	class:RealViewEB
aaci_fake	src/dev/arm/RealView.py	/^    aaci_fake     = AmbaFake(pio_addr=0x10004000)$/;"	v	class:RealViewPBX
aarch64	src/arch/arm/insts/static_inst.hh	/^    bool aarch64;$/;"	m	class:ArmISA::ArmStaticInst
aarch64	src/arch/arm/table_walker.hh	/^        bool aarch64;$/;"	m	class:ArmISA::TableWalker::LongDescriptor
aarch64	src/arch/arm/table_walker.hh	/^        bool aarch64;$/;"	m	class:ArmISA::TableWalker::WalkerState
aarch64	src/arch/arm/tlb.hh	/^    bool aarch64;$/;"	m	class:ArmISA::TLB
aarch64	src/arch/arm/types.hh	/^        Bitfield<34>     aarch64;$/;"	m	namespace:ArmISA
aarch64	src/arch/arm/types.hh	/^        aarch64() const$/;"	f	class:ArmISA::PCState
aarch64	src/arch/arm/types.hh	/^        aarch64(bool val)$/;"	f	class:ArmISA::PCState
aarch64EL	src/arch/arm/tlb.hh	/^    ExceptionLevel aarch64EL;$/;"	m	class:ArmISA::TLB
aarch64FaultSources	src/arch/arm/faults.cc	/^uint8_t ArmFault::aarch64FaultSources[] = {$/;"	m	class:ArmISA::ArmFault	file:
aarch64FaultSources	src/arch/arm/faults.hh	/^    static uint8_t aarch64FaultSources[NumFaultSources];$/;"	m	class:ArmISA::ArmFault
ableToIssue	src/cpu/o3/iew.hh	/^    bool ableToIssue;$/;"	m	class:DefaultIEW
abortDisable	src/arch/arm/faults.cc	/^AbortFault<T>::abortDisable(ThreadContext *tc)$/;"	f	class:ArmISA::AbortFault
abortDisable	src/arch/arm/faults.cc	/^FastInterrupt::abortDisable(ThreadContext *tc)$/;"	f	class:ArmISA::FastInterrupt
abortDisable	src/arch/arm/faults.cc	/^Interrupt::abortDisable(ThreadContext *tc)$/;"	f	class:ArmISA::Interrupt
abortDisable	src/arch/arm/faults.hh	/^        const bool abortDisable;$/;"	m	struct:ArmISA::ArmFault::FaultVals
abortDisable	src/arch/arm/faults.hh	/^    virtual bool abortDisable(ThreadContext* tc) { return vals.abortDisable; }$/;"	f	class:ArmISA::ArmFaultVals
abortDma	src/dev/ide_disk.cc	/^IdeDisk::abortDma()$/;"	f	class:IdeDisk
abortHandler	src/sim/init.cc	/^abortHandler(int sigtype)$/;"	f
abspath	src/sim/init.hh	/^    const char *abspath;$/;"	m	struct:EmbeddedPython
abstract	src/arch/x86/bios/ACPI.py	/^    abstract = True$/;"	v	class:X86ACPISysDescTable
abstract	src/arch/x86/bios/IntelMP.py	/^    abstract = True$/;"	v	class:X86IntelMPBaseConfigEntry
abstract	src/arch/x86/bios/IntelMP.py	/^    abstract = True$/;"	v	class:X86IntelMPExtConfigEntry
abstract	src/arch/x86/bios/SMBios.py	/^    abstract = True$/;"	v	class:X86SMBiosSMBiosStructure
abstract	src/cpu/BaseCPU.py	/^    abstract = True$/;"	v	class:BaseCPU
abstract	src/cpu/CheckerCPU.py	/^    abstract = True$/;"	v	class:CheckerCPU
abstract	src/cpu/NativeTrace.py	/^    abstract = True$/;"	v	class:NativeTrace
abstract	src/cpu/kvm/BaseKvmCPU.py	/^    abstract = True$/;"	v	class:BaseKvmCPU
abstract	src/cpu/simple/BaseSimpleCPU.py	/^    abstract = True$/;"	v	class:BaseSimpleCPU
abstract	src/cpu/testers/directedtest/RubyDirectedTester.py	/^    abstract = True$/;"	v	class:DirectedGenerator
abstract	src/dev/Device.py	/^    abstract = True$/;"	v	class:BasicPioDevice
abstract	src/dev/Device.py	/^    abstract = True$/;"	v	class:DmaDevice
abstract	src/dev/Device.py	/^    abstract = True$/;"	v	class:PioDevice
abstract	src/dev/DiskImage.py	/^    abstract = True$/;"	v	class:DiskImage
abstract	src/dev/Ethernet.py	/^    abstract = True$/;"	v	class:EtherDevBase
abstract	src/dev/Ethernet.py	/^    abstract = True$/;"	v	class:EtherDevice
abstract	src/dev/Ethernet.py	/^    abstract = True$/;"	v	class:EtherObject
abstract	src/dev/Pci.py	/^    abstract = True$/;"	v	class:PciDevice
abstract	src/dev/Platform.py	/^    abstract = True$/;"	v	class:Platform
abstract	src/dev/Uart.py	/^    abstract = True$/;"	v	class:Uart
abstract	src/dev/arm/Gic.py	/^    abstract = True$/;"	v	class:BaseGic
abstract	src/dev/arm/RealView.py	/^    abstract = True$/;"	v	class:AmbaDmaDevice
abstract	src/dev/arm/RealView.py	/^    abstract = True$/;"	v	class:AmbaIntDevice
abstract	src/dev/arm/RealView.py	/^    abstract = True$/;"	v	class:AmbaPioDevice
abstract	src/mem/AbstractMemory.py	/^    abstract = True$/;"	v	class:AbstractMemory
abstract	src/mem/AddrMapper.py	/^    abstract = True$/;"	v	class:AddrMapper
abstract	src/mem/Bus.py	/^    abstract = True$/;"	v	class:BaseBus
abstract	src/mem/MemObject.py	/^    abstract = True$/;"	v	class:MemObject
abstract	src/mem/cache/prefetch/Prefetcher.py	/^    abstract = True$/;"	v	class:BasePrefetcher
abstract	src/mem/cache/tags/Tags.py	/^    abstract = True$/;"	v	class:BaseTags
abstract	src/mem/ruby/network/Network.py	/^    abstract = True$/;"	v	class:RubyNetwork
abstract	src/mem/ruby/network/garnet/BaseGarnetNetwork.py	/^    abstract = True$/;"	v	class:BaseGarnetNetwork
abstract	src/mem/ruby/slicc_interface/Controller.py	/^    abstract = True$/;"	v	class:RubyController
abstract	src/mem/ruby/system/MemoryControl.py	/^    abstract = True$/;"	v	class:MemoryControl
abstract	src/mem/ruby/system/Sequencer.py	/^    abstract = True$/;"	v	class:RubyPort
abstract	src/python/m5/SimObject.py	/^    abstract = True$/;"	v	class:SimObject
abstract	src/sim/BaseTLB.py	/^    abstract = True$/;"	v	class:BaseTLB
abstract	src/sim/ClockDomain.py	/^    abstract = True$/;"	v	class:ClockDomain
abstract	src/sim/ClockedObject.py	/^    abstract = True$/;"	v	class:ClockedObject
abstract	src/sim/InstTracer.py	/^    abstract = True$/;"	v	class:InstTracer
abstract	src/sim/Process.py	/^    abstract = True$/;"	v	class:Process
ac	src/arch/x86/regs/misc.hh	/^        Bitfield<18> ac; \/\/ Alignment Check$/;"	m	namespace:X86ISA
acb	src/dev/arm/pl111.hh	/^        Bitfield<10,6> acb;$/;"	m	class:Pl111
acc	src/arch/alpha/remote_gdb.cc	/^RemoteGDB::acc(Addr va, size_t len)$/;"	f	class:RemoteGDB
acc	src/arch/arm/remote_gdb.cc	/^RemoteGDB::acc(Addr va, size_t len)$/;"	f	class:RemoteGDB
acc	src/arch/mips/remote_gdb.cc	/^RemoteGDB::acc(Addr va, size_t len)$/;"	f	class:RemoteGDB
acc	src/arch/power/remote_gdb.hh	/^    acc(Addr, size_t)$/;"	f	class:PowerISA::RemoteGDB
acc	src/arch/sparc/remote_gdb.cc	/^RemoteGDB::acc(Addr va, size_t len)$/;"	f	class:RemoteGDB
acc	src/arch/x86/remote_gdb.cc	/^bool RemoteGDB::acc(Addr va, size_t len)$/;"	f	class:RemoteGDB
accept	src/base/remote_gdb.cc	/^GDBListener::accept()$/;"	f	class:GDBListener
accept	src/base/socket.cc	/^ListenSocket::accept(bool nodelay)$/;"	f	class:ListenSocket
accept	src/base/vnc/vncserver.cc	/^VncServer::accept()$/;"	f	class:VncServer
accept	src/dev/ethertap.cc	/^TapListener::accept()$/;"	f	class:TapListener
accept	src/dev/terminal.cc	/^Terminal::accept()$/;"	f	class:Terminal
accept	src/kern/tru64/tru64_syscalls.hh	/^        accept = 30,$/;"	e	enum:SystemCalls::__anon102
acceptArp	src/dev/ns_gige.hh	/^    bool acceptArp;$/;"	m	class:NSGigE
acceptBroadcast	src/dev/ns_gige.hh	/^    bool acceptBroadcast;$/;"	m	class:NSGigE
acceptMulticast	src/dev/ns_gige.hh	/^    bool acceptMulticast;$/;"	m	class:NSGigE
acceptPerfect	src/dev/ns_gige.hh	/^    bool acceptPerfect;$/;"	m	class:NSGigE
acceptUnicast	src/dev/ns_gige.hh	/^    bool acceptUnicast;$/;"	m	class:NSGigE
access	src/cpu/timebuf.hh	/^    T *access(int idx)$/;"	f	class:TimeBuffer
access	src/kern/linux/linux_syscalls.hh	/^    access = 4,$/;"	e	enum:SystemCalls::__anon87
access	src/kern/tru64/tru64_syscalls.hh	/^        access = 33,$/;"	e	enum:SystemCalls::__anon102
access	src/mem/abstract_mem.cc	/^AbstractMemory::access(PacketPtr pkt)$/;"	f	class:AbstractMemory
access	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::access(PacketPtr pkt, BlkType *&blk,$/;"	f	class:Cache
access	src/mem/physical.cc	/^PhysicalMemory::access(PacketPtr pkt)$/;"	f	class:PhysicalMemory
accessAndRespond	src/mem/dram_ctrl.cc	/^DRAMCtrl::accessAndRespond(PacketPtr pkt, Tick static_latency)$/;"	f	class:DRAMCtrl
accessAndRespond	src/mem/dramsim2.cc	/^DRAMSim2::accessAndRespond(PacketPtr pkt)$/;"	f	class:DRAMSim2
accessBMI	src/dev/ide_ctrl.cc	/^IdeController::Channel::accessBMI(Addr offset,$/;"	f	class:IdeController::Channel
accessBlock	src/mem/cache/tags/fa_lru.cc	/^FALRU::accessBlock(Addr addr, bool is_secure, Cycles &lat, int context_src,$/;"	f	class:FALRU
accessBlock	src/mem/cache/tags/lru.cc	/^LRU::accessBlock(Addr addr, bool is_secure, Cycles &lat, int master_id)$/;"	f	class:LRU
accessCommand	src/dev/ide_ctrl.cc	/^IdeController::Channel::accessCommand(Addr offset,$/;"	f	class:IdeController::Channel
accessControl	src/dev/ide_ctrl.cc	/^IdeController::Channel::accessControl(Addr offset,$/;"	f	class:IdeController::Channel
accessDelta	src/mem/request.hh	/^    Tick accessDelta;$/;"	m	class:Request
accessFunc	src/sim/syscall_emul.cc	/^accessFunc(SyscallDesc *desc, int callnum, LiveProcess *p, ThreadContext *tc)$/;"	f
accessLatency	src/mem/ruby/system/BankedArray.hh	/^    Cycles accessLatency;$/;"	m	class:BankedArray
accessNonunitFilter	src/mem/ruby/structures/Prefetcher.cc	/^Prefetcher::accessNonunitFilter(const Address& address, int *stride,$/;"	f	class:Prefetcher
accessRetry	src/cpu/testers/memtest/memtest.hh	/^    bool accessRetry;$/;"	m	class:MemTest
accessUnitFilter	src/mem/ruby/structures/Prefetcher.cc	/^Prefetcher::accessUnitFilter(std::vector<Address>& filter_table,$/;"	f	class:Prefetcher
access_phys_mem	src/mem/ruby/system/RubyPort.hh	/^        bool access_phys_mem;$/;"	m	class:RubyPort::MemSlavePort
access_phys_mem	src/mem/ruby/system/RubyPort.hh	/^    bool access_phys_mem;$/;"	m	class:RubyPort
access_phys_mem	src/mem/ruby/system/Sequencer.py	/^    access_phys_mem = Param.Bool(False,$/;"	v	class:RubyPort
access_phys_mem	src/mem/ruby/system/Sequencer.py	/^    access_phys_mem = True$/;"	v	class:DMASequencer
access_phys_mem	src/mem/ruby/system/Sequencer.py	/^    access_phys_mem = True$/;"	v	class:RubyPortProxy
accesses	src/arch/arm/tlb.hh	/^    Stats::Formula accesses;$/;"	m	class:ArmISA::TLB
accesses	src/arch/mips/tlb.hh	/^    Stats::Formula accesses;$/;"	m	class:MipsISA::TLB
accesses	src/arch/power/tlb.hh	/^    Stats::Formula accesses;$/;"	m	class:PowerISA::TLB
accesses	src/mem/cache/base.hh	/^    Stats::Formula accesses[MemCmd::NUM_MEM_CMDS];$/;"	m	class:BaseCache
accesses	src/mem/cache/tags/fa_lru.hh	/^    Stats::Scalar accesses;$/;"	m	class:FALRU
acct	src/kern/linux/linux_syscalls.hh	/^    acct = 5,$/;"	e	enum:SystemCalls::__anon87
acct	src/kern/tru64/tru64_syscalls.hh	/^        acct = 51,$/;"	e	enum:SystemCalls::__anon102
ack	src/base/inet.hh	/^    uint32_t ack() const { return ntohl(th_ack); }$/;"	f	struct:Net::TcpHdr
ack	src/dev/x86/i8042.cc	/^X86ISA::PS2Device::ack()$/;"	f	class:X86ISA::PS2Device
ackCallback	src/mem/ruby/system/DMASequencer.cc	/^DMASequencer::ackCallback()$/;"	f	class:DMASequencer
ackNext	src/dev/arm/kmi.hh	/^    int ackNext;$/;"	m	class:Pl050
ack_id	src/dev/arm/gic_pl390.hh	/^        Bitfield<9,0> ack_id;$/;"	m	class:Pl390
acpi_description_table_pointer	src/arch/x86/X86System.py	/^    acpi_description_table_pointer = Param.X86ACPIRSDP($/;"	v	class:X86System
actAllowedAt	src/mem/dram_ctrl.hh	/^        Tick actAllowedAt;$/;"	m	class:DRAMCtrl::Bank
actTicks	src/mem/dram_ctrl.hh	/^    std::vector<std::deque<Tick>> actTicks;$/;"	m	class:DRAMCtrl
actionAfterWb	src/dev/i8254xGBe.cc	/^IGbE::TxDescCache::actionAfterWb() $/;"	f	class:IGbE::TxDescCache
actionAfterWb	src/dev/i8254xGBe.hh	/^        virtual void actionAfterWb() {}$/;"	f	class:IGbE::DescCache
actions	src/mem/slicc/generate/tex.py	/^                actions = trans.getActionShorthands()$/;"	v
activate	src/cpu/checker/thread_context.hh	/^    void activate(Cycles delay = Cycles(1))$/;"	f	class:CheckerThreadContext
activate	src/cpu/inorder/thread_context.cc	/^InOrderThreadContext::activate(Cycles delay)$/;"	f	class:InOrderThreadContext
activate	src/cpu/o3/thread_context_impl.hh	/^O3ThreadContext<Impl>::activate(Cycles delay)$/;"	f	class:O3ThreadContext
activate	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::OzoneTC::activate(int delay)$/;"	f	class:OzoneCPU::OzoneTC
activate	src/cpu/simple_thread.cc	/^SimpleThread::activate(Cycles delay)$/;"	f	class:SimpleThread
activate	src/cpu/thread_context.hh	/^    void activate(Cycles delay = Cycles(1))$/;"	f	class:ProxyThreadContext
activateAll	src/cpu/inorder/resource_pool.9stage.cc	/^ResourcePool::activateAll(ThreadID tid)$/;"	f	class:ResourcePool
activateContext	src/cpu/base.hh	/^    virtual void activateContext(ThreadID thread_num, Cycles delay) {}$/;"	f	class:BaseCPU
activateContext	src/cpu/inorder/cpu.cc	/^InOrderCPU::activateContext(ThreadID tid, Cycles delay)$/;"	f	class:InOrderCPU
activateContext	src/cpu/inorder/thread_context.hh	/^    void activateContext(Cycles delay)$/;"	f	class:InOrderThreadContext
activateContext	src/cpu/kvm/base.cc	/^BaseKvmCPU::activateContext(ThreadID thread_num, Cycles delay)$/;"	f	class:BaseKvmCPU
activateContext	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::activateContext(ThreadID tid, Cycles delay)$/;"	f	class:FullO3CPU
activateContext	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::activateContext(int thread_num, int delay)$/;"	f	class:OzoneCPU
activateContext	src/cpu/simple/atomic.cc	/^AtomicSimpleCPU::activateContext(ThreadID thread_num, Cycles delay)$/;"	f	class:AtomicSimpleCPU
activateContext	src/cpu/simple/timing.cc	/^TimingSimpleCPU::activateContext(ThreadID thread_num, Cycles delay)$/;"	f	class:TimingSimpleCPU
activateNextReadyContext	src/cpu/inorder/cpu.cc	/^InOrderCPU::activateNextReadyContext(Cycles delay)$/;"	f	class:InOrderCPU
activateNextReadyThread	src/cpu/inorder/cpu.cc	/^InOrderCPU::activateNextReadyThread()$/;"	f	class:InOrderCPU
activateStage	src/cpu/activity.cc	/^ActivityRecorder::activateStage(const int idx)$/;"	f	class:ActivityRecorder
activateStage	src/cpu/inorder/cpu.hh	/^    void activateStage(const int idx)$/;"	f	class:InOrderCPU
activateStage	src/cpu/o3/cpu.hh	/^    void activateStage(const StageIdx idx)$/;"	f	class:FullO3CPU
activateStage	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::activateStage()$/;"	f	class:DefaultIEW
activateThread	src/cpu/inorder/cpu.cc	/^InOrderCPU::activateThread(ThreadID tid)$/;"	f	class:InOrderCPU
activateThread	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::activateThread(ThreadID tid)$/;"	f	class:PipelineStage
activateThread	src/cpu/inorder/resource.hh	/^    virtual void activateThread(ThreadID tid) { }$/;"	f	class:Resource
activateThread	src/cpu/inorder/resource_pool.cc	/^ResourcePool::activateThread(ThreadID tid)$/;"	f	class:ResourcePool
activateThread	src/cpu/inorder/resources/fetch_seq_unit.cc	/^FetchSeqUnit::activateThread(ThreadID tid)$/;"	f	class:FetchSeqUnit
activateThread	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::activateThread(ThreadID tid)$/;"	f	class:FullO3CPU
activateThreadEvent	src/cpu/o3/cpu.hh	/^    ActivateThreadEvent activateThreadEvent[Impl::MaxThreads];$/;"	m	class:FullO3CPU
activateThreadInPipeline	src/cpu/inorder/cpu.cc	/^InOrderCPU::activateThreadInPipeline(ThreadID tid)$/;"	f	class:InOrderCPU
activateWhenReady	src/cpu/base.hh	/^    virtual void activateWhenReady(ThreadID tid) {};$/;"	f	class:BaseCPU
activateWhenReady	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::activateWhenReady(ThreadID tid)$/;"	f	class:FullO3CPU
activate_waiting_context	src/kern/tru64/tru64.hh	/^    activate_waiting_context(Addr uaddr, LiveProcess *process,$/;"	f	class:Tru64
activationLimit	src/mem/dram_ctrl.hh	/^    const uint32_t activationLimit;$/;"	m	class:DRAMCtrl
activation_limit	src/mem/DRAMCtrl.py	/^    activation_limit = 2$/;"	v	class:WideIO_200_x128
activation_limit	src/mem/DRAMCtrl.py	/^    activation_limit = 4$/;"	v	class:DDR3_1333_x64_DRAMSim2
activation_limit	src/mem/DRAMCtrl.py	/^    activation_limit = 4$/;"	v	class:DDR3_1600_x64
activation_limit	src/mem/DRAMCtrl.py	/^    activation_limit = 4$/;"	v	class:LPDDR2_S4_1066_x32
activation_limit	src/mem/DRAMCtrl.py	/^    activation_limit = 4$/;"	v	class:LPDDR3_1600_x32
activation_limit	src/mem/DRAMCtrl.py	/^    activation_limit = Param.Unsigned("Max number of activates in window")$/;"	v	class:DRAMCtrl
active	src/arch/sparc/miscregs.hh	/^    const static int active      = 0x01;$/;"	m	struct:SparcISA::STS
active	src/base/remote_gdb.hh	/^    bool active;$/;"	m	class:BaseRemoteGDB
active	src/cpu/activity.hh	/^    bool active() { return activityCount; }$/;"	f	class:ActivityRecorder
active	src/dev/ide_ctrl.hh	/^        Bitfield<0> active;$/;"	m	class:IdeController
activeCpus	src/sim/system.hh	/^    std::vector<bool> activeCpus;$/;"	m	class:System
activeInstPeriod	src/cpu/kvm/base.hh	/^    uint64_t activeInstPeriod;$/;"	m	class:BaseKvmCPU
activeInt	src/dev/arm/gic_pl390.hh	/^    uint32_t activeInt[INT_BITS_MAX];$/;"	m	class:Pl390
activeThreadId	src/cpu/inorder/cpu.hh	/^    ThreadID activeThreadId() $/;"	f	class:InOrderCPU
activeThreads	src/cpu/inorder/cpu.hh	/^    std::list<ThreadID> activeThreads;$/;"	m	class:InOrderCPU
activeThreads	src/cpu/inorder/pipeline_stage.hh	/^    std::list<ThreadID> *activeThreads;$/;"	m	class:PipelineStage
activeThreads	src/cpu/o3/commit.hh	/^    std::list<ThreadID> *activeThreads;$/;"	m	class:DefaultCommit
activeThreads	src/cpu/o3/cpu.hh	/^    std::list<ThreadID> activeThreads;$/;"	m	class:FullO3CPU
activeThreads	src/cpu/o3/decode.hh	/^    std::list<ThreadID> *activeThreads;$/;"	m	class:DefaultDecode
activeThreads	src/cpu/o3/fetch.hh	/^    std::list<ThreadID> *activeThreads;$/;"	m	class:DefaultFetch
activeThreads	src/cpu/o3/iew.hh	/^    std::list<ThreadID> *activeThreads;$/;"	m	class:DefaultIEW
activeThreads	src/cpu/o3/inst_queue.hh	/^    std::list<ThreadID> *activeThreads;$/;"	m	class:InstructionQueue
activeThreads	src/cpu/o3/lsq.hh	/^    std::list<ThreadID> *activeThreads;$/;"	m	class:LSQ
activeThreads	src/cpu/o3/rename.hh	/^    std::list<ThreadID> *activeThreads;$/;"	m	class:DefaultRename
activeThreads	src/cpu/o3/rob.hh	/^    std::list<ThreadID> *activeThreads;$/;"	m	class:ROB
active_request	src/mem/ruby/system/DMASequencer.hh	/^    DMARequest active_request;$/;"	m	class:DMASequencer
activity	src/cpu/activity.cc	/^ActivityRecorder::activity()$/;"	f	class:ActivityRecorder
activity	src/cpu/inorder/InOrderCPU.py	/^    activity = Param.Unsigned(0, "Initial count")$/;"	v	class:InOrderCPU
activity	src/cpu/inorder/cpu.hh	/^    Stats::Formula activity;$/;"	m	class:InOrderCPU
activity	src/cpu/o3/O3CPU.py	/^    activity = Param.Unsigned(0, "Initial count")$/;"	v	class:DerivO3CPU
activityBuffer	src/cpu/activity.hh	/^    TimeBuffer<bool> activityBuffer;$/;"	m	class:ActivityRecorder
activityCount	src/cpu/activity.hh	/^    int activityCount;$/;"	m	class:ActivityRecorder
activityRec	src/cpu/inorder/cpu.hh	/^    ActivityRecorder activityRec;$/;"	m	class:InOrderCPU
activityRec	src/cpu/o3/cpu.hh	/^    ActivityRecorder activityRec;$/;"	m	class:FullO3CPU
activityThisCycle	src/cpu/inorder/cpu.hh	/^    void activityThisCycle() { activityRec.activity(); }$/;"	f	class:InOrderCPU
activityThisCycle	src/cpu/o3/cpu.hh	/^    void activityThisCycle() { activityRec.activity(); }$/;"	f	class:FullO3CPU
activityThisCycle	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::activityThisCycle()$/;"	f	class:DefaultIEW
actualTC	src/cpu/checker/thread_context.hh	/^    TC *actualTC;$/;"	m	class:CheckerThreadContext
actualTC	src/cpu/thread_context.hh	/^    TC *actualTC;$/;"	m	class:ProxyThreadContext
adaptive_routing	src/mem/ruby/network/simple/SimpleNetwork.py	/^    adaptive_routing = Param.Bool(False, "enable adaptive routing");$/;"	v	class:SimpleNetwork
add	src/arch/arm/insts/mem.hh	/^    bool add;$/;"	m	class:ArmISA::Memory
add	src/arch/x86/bios/IntelMP.py	/^    add = Param.Bool(False,$/;"	v	class:X86IntelMPCompatAddrSpaceMod
add	src/base/callback.hh	/^    add(Callback *callback)$/;"	f	class:CallbackQueue
add	src/base/callback.hh	/^    add(T &obj)$/;"	f	class:CallbackQueue
add	src/base/callback.hh	/^    add(T *obj)$/;"	f	class:CallbackQueue
add	src/base/cp_annotate.cc	/^CPA::add(int t, int f, int c, int sm, int stq, int32_t d)$/;"	f	class:CPA
add	src/base/inifile.cc	/^IniFile::Section::add(const std::string &assignment)$/;"	f	class:IniFile::Section
add	src/base/inifile.cc	/^IniFile::add(const string &str)$/;"	f	class:IniFile
add	src/base/statistics.cc	/^HistStor::add(HistStor *hs)$/;"	f	class:Stats::HistStor
add	src/base/statistics.hh	/^    void add(DistBase &d) { data()->add(d.data()); }$/;"	f	class:Stats::DistBase
add	src/mem/cache/mshr.cc	/^MSHR::TargetList::add(PacketPtr pkt, Tick readyTime,$/;"	f	class:MSHR::TargetList
add	src/mem/ruby/common/Histogram.cc	/^Histogram::add(Histogram& hist)$/;"	f	class:Histogram
add	src/mem/ruby/common/Histogram.cc	/^Histogram::add(int64 value)$/;"	f	class:Histogram
add	src/mem/ruby/common/NetDest.cc	/^NetDest::add(MachineID newElement)$/;"	f	class:NetDest
add	src/mem/ruby/common/Set.hh	/^    add(NodeID index)$/;"	f	class:Set
add	src/mem/ruby/network/orion/ConfigFile.hh	/^void ConfigFile::add( string key, const T& value )$/;"	f	class:ConfigFile
add	src/mem/ruby/system/SparseMemory.cc	/^SparseMemory::add(const Address& address, AbstractEntry* entry)$/;"	f	class:SparseMemory
add128	src/arch/arm/insts/fplib.cc	/^add128(uint64_t *x0, uint64_t *x1, uint64_t a0, uint64_t a1, uint64_t b0,$/;"	f	namespace:ArmISA
addAction	src/mem/slicc/symbols/StateMachine.py	/^    def addAction(self, action):$/;"	m	class:StateMachine
addAddr	src/cpu/ozone/ea_list.cc	/^EAList::addAddr(const InstSeqNum &new_sn, const Addr &new_ea)$/;"	f	class:EAList
addAddressTraceSample	src/mem/ruby/profiler/Profiler.cc	/^Profiler::addAddressTraceSample(const RubyRequest& msg, NodeID id)$/;"	f	class:Profiler
addBootCmdLine	src/base/loader/dtb_object.cc	/^DtbObject::addBootCmdLine(const char* _args, size_t len)$/;"	f	class:DtbObject
addCCReg	src/cpu/o3/free_list.hh	/^    void addCCReg(PhysRegIndex freed_reg) { ccList.addReg(freed_reg); }$/;"	f	class:UnifiedFreeList
addCapability	src/cpu/func_unit.cc	/^FuncUnit::addCapability(OpClass cap, unsigned oplat, unsigned issuelat)$/;"	f	class:FuncUnit
addCheck	src/cpu/testers/rubytest/CheckTable.cc	/^CheckTable::addCheck(const Address& address)$/;"	f	class:CheckTable
addCheckerCpu	src/cpu/BaseCPU.py	/^    def addCheckerCpu(self):$/;"	f
addCheckerCpu	src/cpu/o3/O3CPU.py	/^    def addCheckerCpu(self):$/;"	m	class:DerivO3CPU
addCheckerCpu	src/cpu/simple/BaseSimpleCPU.py	/^    def addCheckerCpu(self):$/;"	m	class:BaseSimpleCPU
addConsoleFuncEvent	src/arch/alpha/system.hh	/^    addConsoleFuncEvent(const char *lbl)$/;"	f	class:AlphaSystem
addConsoleFuncEvent	src/arch/mips/system.hh	/^    addConsoleFuncEvent(const char *lbl)$/;"	f	class:MipsSystem
addDataMember	src/mem/slicc/symbols/Type.py	/^    def addDataMember(self, ident, type, pairs, init_code):$/;"	m	class:Type
addDcacheMiss	src/cpu/ozone/lw_back_end.hh	/^    void addDcacheMiss(DynInstPtr &inst)$/;"	f	class:LWBackEnd
addDependent	src/cpu/ozone/dyn_inst_impl.hh	/^OzoneDynInst<Impl>::addDependent(DynInstPtr &dependent_inst)$/;"	f	class:OzoneDynInst
addDerivedDomain	src/sim/clock_domain.hh	/^    void addDerivedDomain(DerivedClockDomain *clock_domain)$/;"	f	class:ClockDomain
addEntry	src/base/inifile.cc	/^IniFile::Section::addEntry(const std::string &entryName,$/;"	f	class:IniFile::Section
addEnum	src/mem/slicc/symbols/Type.py	/^    def addEnum(self, ident, pairs):$/;"	m	class:Type
addEvent	src/mem/slicc/symbols/StateMachine.py	/^    def addEvent(self, event):$/;"	m	class:StateMachine
addFU	src/cpu/o3/fu_pool.cc	/^FUPool::FUIdxQueue::addFU(int fu_idx)$/;"	f	class:FUPool::FUIdxQueue
addFlag	src/base/debug.hh	/^    addFlag(Flag &f)$/;"	f	class:Debug::CompoundFlag
addFloatReg	src/cpu/o3/free_list.hh	/^    void addFloatReg(PhysRegIndex freed_reg) { floatList.addReg(freed_reg); }$/;"	f	class:UnifiedFreeList
addFreeRegs	src/cpu/ozone/front_end_impl.hh	/^FrontEnd<Impl>::addFreeRegs(int num_freed)$/;"	f	class:FrontEnd
addFunc	src/mem/slicc/symbols/StateMachine.py	/^    def addFunc(self, func):$/;"	m	class:StateMachine
addFunc	src/mem/slicc/symbols/Type.py	/^    def addFunc(self, func):$/;"	m	class:Type
addFuncEvent	src/sim/system.hh	/^    T *addFuncEvent(const SymbolTable *symtab, const char *lbl)$/;"	f	class:System
addFuncEvent	src/sim/system.hh	/^    T *addFuncEvent(const SymbolTable *symtab, const char *lbl,$/;"	f	class:System
addFuncEventOrPanic	src/sim/system.hh	/^    T *addFuncEventOrPanic(const SymbolTable *symtab, const char *lbl,$/;"	f	class:System
addHalfLsb	src/arch/mips/dsp.cc	/^MipsISA::addHalfLsb(uint64_t value, int32_t lsbpos)$/;"	f	class:MipsISA
addHypervisorFuncEvent	src/arch/sparc/system.hh	/^    addHypervisorFuncEvent(const char *lbl)$/;"	f	class:SparcSystem
addIfReady	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::addIfReady(DynInstPtr &inst)$/;"	f	class:InstructionQueue
addIfReady	src/cpu/ozone/inst_queue_impl.hh	/^InstQueue<Impl>::addIfReady(DynInstPtr &inst)$/;"	f	class:InstQueue
addInPort	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.cc	/^NetworkInterface_d::addInPort(NetworkLink_d *in_link,$/;"	f	class:NetworkInterface_d
addInPort	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.cc	/^Router_d::addInPort(NetworkLink_d *in_link, CreditLink_d *credit_link)$/;"	f	class:Router_d
addInPort	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.cc	/^NetworkInterface::addInPort(NetworkLink *in_link)$/;"	f	class:NetworkInterface
addInPort	src/mem/ruby/network/garnet/flexible-pipeline/Router.cc	/^Router::addInPort(NetworkLink *in_link)$/;"	f	class:Router
addInPort	src/mem/ruby/network/simple/PerfectSwitch.cc	/^PerfectSwitch::addInPort(const vector<MessageBuffer*>& in)$/;"	f	class:PerfectSwitch
addInPort	src/mem/ruby/network/simple/Switch.cc	/^Switch::addInPort(const vector<MessageBuffer*>& in)$/;"	f	class:Switch
addInPort	src/mem/slicc/symbols/StateMachine.py	/^    def addInPort(self, var):$/;"	m	class:StateMachine
addInst	src/cpu/inorder/cpu.cc	/^InOrderCPU::addInst(DynInstPtr inst)$/;"	f	class:InOrderCPU
addInst	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::addInst(DynInstPtr &inst)$/;"	f	class:FullO3CPU
addIntReg	src/cpu/o3/free_list.hh	/^    void addIntReg(PhysRegIndex freed_reg) { intList.addReg(freed_reg); }$/;"	f	class:UnifiedFreeList
addKernelFuncEvent	src/sim/system.hh	/^    T *addKernelFuncEvent(const char *lbl, Args... args)$/;"	f	class:System
addKernelFuncEventOrPanic	src/sim/system.hh	/^    T *addKernelFuncEventOrPanic(const char *lbl, Args... args)$/;"	f	class:System
addLink	src/mem/ruby/network/Topology.cc	/^Topology::addLink(SwitchID src, SwitchID dest, BasicLink* link, $/;"	f	class:Topology
addLinks	src/mem/ruby/network/simple/Throttle.cc	/^Throttle::addLinks(const std::vector<MessageBuffer*>& in_vec,$/;"	f	class:Throttle
addListener	src/sim/probe/probe.cc	/^ProbeManager::addListener(std::string pointName, ProbeListener &listener)$/;"	f	class:ProbeManager
addListener	src/sim/probe/probe.hh	/^    void addListener(ProbeListener *l)$/;"	f	class:ProbePointArg
addLockedAddr	src/mem/abstract_mem.hh	/^    void addLockedAddr(LockedAddr addr) { lockedAddrList.push_back(addr); }$/;"	f	class:AbstractMemory
addMemDependent	src/cpu/ozone/dyn_inst.hh	/^    void addMemDependent(DynInstPtr &inst) { memDependents.push_back(inst); }$/;"	f	class:OzoneDynInst
addMethod	src/mem/slicc/symbols/Type.py	/^    def addMethod(self, name, return_type, param_type_vec):$/;"	m	class:Type
addModule	src/sim/init.cc	/^EmbeddedPython::addModule() const$/;"	f	class:EmbeddedPython
addNetDest	src/mem/ruby/common/NetDest.cc	/^NetDest::addNetDest(const NetDest& netDest)$/;"	f	class:NetDest
addNode	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.cc	/^NetworkInterface_d::addNode(vector<MessageBuffer *>& in,$/;"	f	class:NetworkInterface_d
addNode	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.cc	/^NetworkInterface::addNode(vector<MessageBuffer*>& in,$/;"	f	class:NetworkInterface
addObject	src/mem/slicc/symbols/StateMachine.py	/^    def addObject(self, obj):$/;"	m	class:StateMachine
addOpenbootFuncEvent	src/arch/sparc/system.hh	/^    addOpenbootFuncEvent(const char *lbl)$/;"	f	class:SparcSystem
addOutPort	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.cc	/^NetworkInterface_d::addOutPort(NetworkLink_d *out_link,$/;"	f	class:NetworkInterface_d
addOutPort	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.cc	/^Router_d::addOutPort(NetworkLink_d *out_link,$/;"	f	class:Router_d
addOutPort	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.cc	/^NetworkInterface::addOutPort(NetworkLink *out_link)$/;"	f	class:NetworkInterface
addOutPort	src/mem/ruby/network/garnet/flexible-pipeline/Router.cc	/^Router::addOutPort(NetworkLink *out_link, const NetDest& routing_table_entry,$/;"	f	class:Router
addOutPort	src/mem/ruby/network/simple/PerfectSwitch.cc	/^PerfectSwitch::addOutPort(const vector<MessageBuffer*>& out,$/;"	f	class:PerfectSwitch
addOutPort	src/mem/ruby/network/simple/Switch.cc	/^Switch::addOutPort(const vector<MessageBuffer*>& out,$/;"	f	class:Switch
addPair	src/mem/slicc/ast/PairListAST.py	/^    def addPair(self, pair_ast):$/;"	m	class:PairListAST
addPalFuncEvent	src/arch/alpha/system.hh	/^    addPalFuncEvent(const char *lbl)$/;"	f	class:AlphaSystem
addPoint	src/sim/probe/probe.cc	/^ProbeManager::addPoint(ProbePoint &point)$/;"	f	class:ProbeManager
addPrivateSplitL1Caches	src/cpu/BaseCPU.py	/^    def addPrivateSplitL1Caches(self, ic, dc, iwc = None, dwc = None):$/;"	f
addRandom	src/mem/ruby/common/NetDest.cc	/^NetDest::addRandom()$/;"	f	class:NetDest
addRandom	src/mem/ruby/common/Set.cc	/^Set::addRandom()$/;"	f	class:Set
addReadyMemInst	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::addReadyMemInst(DynInstPtr &ready_inst)$/;"	f	class:InstructionQueue
addReadyMemInst	src/cpu/ozone/inst_queue_impl.hh	/^InstQueue<Impl>::addReadyMemInst(DynInstPtr &ready_inst)$/;"	f	class:InstQueue
addRecord	src/mem/ruby/recorder/CacheRecorder.cc	/^CacheRecorder::addRecord(int cntrl, const physical_address_t data_addr,$/;"	f	class:CacheRecorder
addReg	src/cpu/o3/free_list.hh	/^    void addReg(PhysRegIndex reg) { freeRegs.push(reg); }$/;"	f	class:SimpleFreeList
addReg	src/cpu/o3/free_list.hh	/^UnifiedFreeList::addReg(PhysRegIndex freed_reg)$/;"	f	class:UnifiedFreeList
addRequestType	src/mem/slicc/symbols/StateMachine.py	/^    def addRequestType(self, request_type):$/;"	m	class:StateMachine
addResetFuncEvent	src/arch/sparc/system.hh	/^    addResetFuncEvent(const char *lbl)$/;"	f	class:SparcSystem
addRoute	src/mem/ruby/network/garnet/fixed-pipeline/RoutingUnit_d.cc	/^RoutingUnit_d::addRoute(const NetDest& routing_table_entry)$/;"	f	class:RoutingUnit_d
addSample	src/mem/ruby/profiler/AccessTraceForAddress.cc	/^AccessTraceForAddress::addSample(int value)$/;"	f	class:AccessTraceForAddress
addSection	src/base/inifile.cc	/^IniFile::addSection(const string &sectionName)$/;"	f	class:IniFile
addSet	src/mem/ruby/common/Set.cc	/^Set::addSet(const Set& set)$/;"	f	class:Set
addSink	src/dev/x86/intdev.hh	/^    addSink(IntSinkPin *sink)$/;"	f	class:X86ISA::IntSourcePin
addSrcMemInst	src/cpu/ozone/dyn_inst.hh	/^    void addSrcMemInst(DynInstPtr &inst) { srcMemInsts.push_back(inst); }$/;"	f	class:OzoneDynInst
addState	src/mem/slicc/symbols/StateMachine.py	/^    def addState(self, state):$/;"	m	class:StateMachine
addStride	src/arch/arm/insts/vfp.cc	/^VfpMacroOp::addStride(IntRegIndex idx, unsigned stride)$/;"	f	class:ArmISA::VfpMacroOp
addString	src/arch/x86/bios/smbios.cc	/^X86ISA::SMBios::SMBiosStructure::addString(string & newString)$/;"	f	class:X86ISA::SMBios::SMBiosStructure
addToDependents	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::addToDependents(DynInstPtr &new_inst)$/;"	f	class:InstructionQueue
addToIQ	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::addToIQ(DynInstPtr &inst)$/;"	f	class:BackEnd
addToLSQ	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::addToLSQ(DynInstPtr &inst)$/;"	f	class:BackEnd
addToLSQ	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::addToLSQ(DynInstPtr &inst)$/;"	f	class:LWBackEnd
addToOrderList	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::addToOrderList(OpClass op_class)$/;"	f	class:InstructionQueue
addToPath	src/python/m5/util/__init__.py	/^def addToPath(path):$/;"	f
addToProducers	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::addToProducers(DynInstPtr &new_inst)$/;"	f	class:InstructionQueue
addToReadQueue	src/mem/dram_ctrl.cc	/^DRAMCtrl::addToReadQueue(PacketPtr pkt, unsigned int pktCount)$/;"	f	class:DRAMCtrl
addToReadyList	src/mem/cache/mshr_queue.cc	/^MSHRQueue::addToReadyList(MSHR *mshr)$/;"	f	class:MSHRQueue
addToRemoveList	src/cpu/inorder/cpu.cc	/^InOrderCPU::addToRemoveList(DynInstPtr inst)$/;"	f	class:InOrderCPU
addToRetryList	src/mem/ruby/system/RubyPort.hh	/^    void addToRetryList(MemSlavePort * port)$/;"	f	class:RubyPort
addToSkedCache	src/cpu/inorder/cpu.hh	/^    void addToSkedCache(DynInstPtr inst, ThePipeline::RSkedPtr inst_sked)$/;"	f	class:InOrderCPU
addToWriteQueue	src/mem/dram_ctrl.cc	/^DRAMCtrl::addToWriteQueue(PacketPtr pkt, unsigned int pktCount)$/;"	f	class:DRAMCtrl
addTraceSample	src/mem/ruby/profiler/AddressProfiler.cc	/^AddressProfiler::addTraceSample(Address data_addr, Address pc_addr,$/;"	f	class:AddressProfiler
addTransition	src/mem/slicc/symbols/StateMachine.py	/^    def addTransition(self, trans):$/;"	m	class:StateMachine
addTwoLevelCacheHierarchy	src/cpu/BaseCPU.py	/^    def addTwoLevelCacheHierarchy(self, ic, dc, l2c, iwc = None, dwc = None):$/;"	f
addType	src/mem/slicc/symbols/StateMachine.py	/^    def addType(self, type):$/;"	m	class:StateMachine
addVirtualNetwork	src/mem/ruby/network/simple/Throttle.cc	/^Throttle::addVirtualNetwork(MessageBuffer* in_ptr, MessageBuffer* out_ptr)$/;"	f	class:Throttle
addWaitingMemOp	src/cpu/ozone/lw_back_end.hh	/^    void addWaitingMemOp(DynInstPtr &inst)$/;"	f	class:LWBackEnd
addWeight	src/mem/ruby/network/garnet/fixed-pipeline/RoutingUnit_d.cc	/^RoutingUnit_d::addWeight(int link_weight)$/;"	f	class:RoutingUnit_d
add_arg	src/base/cprintf.hh	/^    add_arg(const T &data)$/;"	f	struct:cp::Print
add_arg	src/base/varargs.hh	/^    add_arg(RECV &receiver) const$/;"	f	struct:VarArgs::Any
add_arg	src/base/varargs.hh	/^    add_arg(RECV &receiver) const$/;"	f	struct:VarArgs::Argument
add_args	src/base/varargs.hh	/^    add_args(RECV &recv) const$/;"	f	class:VarArgs::List
add_child	src/python/m5/SimObject.py	/^    def add_child(self, name, child):$/;"	f
add_entry	src/arch/x86/bios/IntelMP.py	/^    def add_entry(self, entry):$/;"	m	class:X86IntelMPConfigTable
add_microop	src/arch/micro_asm.py	/^    def add_microop(self, mnemonic, microop):$/;"	m	class:Micro_Container
add_module	src/python/importer.py	/^    def add_module(self, filename, abspath, modpath, code):$/;"	m	class:CodeImporter
add_module	src/python/importer.py	/^add_module = importer.add_module$/;"	v
add_option	src/python/m5/options.py	/^    def add_option(self, *args, **kwargs):$/;"	m	class:OptionParser
adderBootUncacheable	src/arch/arm/linux/system.cc	/^LinuxArmSystem::adderBootUncacheable(Addr a)$/;"	f	class:LinuxArmSystem
adderBootUncacheable	src/arch/arm/system.hh	/^    virtual bool adderBootUncacheable(Addr a) { return false; }$/;"	f	class:ArmSystem
addext	src/base/inet.hh	/^    const uint32_t *addext() const { return &opt_data.addext[0]; }$/;"	f	struct:Net::IpOpt
addfilter	src/python/m5/util/jobfile.py	/^    def addfilter(self, filt, pos=True):$/;"	m	class:Configuration
addr	src/arch/alpha/pagetable.hh	/^    Addr addr;$/;"	m	struct:AlphaISA::VAddr
addr	src/arch/power/pagetable.hh	/^    Addr addr;$/;"	m	struct:PowerISA::VAddr
addr	src/arch/x86/bios/E820.py	/^    addr = Param.Addr(0, 'address of the beginning of the region')$/;"	v	class:X86E820Entry
addr	src/arch/x86/bios/e820.hh	/^        Addr addr;$/;"	m	class:X86ISA::E820Entry
addr	src/arch/x86/bios/intelmp.hh	/^    uint64_t addr;$/;"	m	class:X86ISA::IntelMP::AddrSpaceMapping
addr	src/arch/x86/faults.hh	/^        Addr addr;$/;"	m	class:X86ISA::PageFault
addr	src/arch/x86/types.hh	/^        Bitfield<3> addr;$/;"	m	namespace:X86ISA
addr	src/base/chunk_generator.hh	/^    Addr addr() const { return curAddr; }$/;"	f	class:ChunkGenerator
addr	src/base/inet.hh	/^    const uint8_t *addr() const { return &data[0]; }$/;"	f	struct:Net::EthAddr
addr	src/base/inet.hh	/^    ip6_addr_t addr;$/;"	m	struct:Net::ip6_opt_dstopts
addr	src/base/inet.hh	/^    ip6_addr_t addr;$/;"	m	struct:Net::ip6_opt_routing_type2
addr	src/cpu/inorder/resources/fetch_unit.hh	/^        Addr addr;$/;"	m	struct:FetchUnit::FetchBlock
addr	src/cpu/testers/traffic_gen/generators.hh	/^        Addr addr;$/;"	m	struct:TraceGen::TraceElement
addr	src/cpu/testers/traffic_gen/generators.hh	/^    Addr addr;$/;"	m	class:DramGen
addr	src/dev/pcireg.h	/^        Bitfield<31,2>  addr;$/;"	m	struct:MSICAP
addr	src/mem/abstract_mem.hh	/^    Addr addr;$/;"	m	class:LockedAddr
addr	src/mem/cache/mshr.hh	/^    Addr addr;$/;"	m	class:MSHR
addr	src/mem/dram_ctrl.hh	/^        Addr addr;$/;"	m	class:DRAMCtrl::DRAMPacket
addr	src/mem/packet.hh	/^    Addr addr;$/;"	m	class:Packet
addr	src/sim/insttracer.hh	/^    Addr addr;$/;"	m	class:Trace::InstRecord
addr	src/sim/syscall_emul.hh	/^    Addr addr;$/;"	m	class:BaseBufferArg
addrCacheMap	src/arch/x86/decoder.hh	/^    AddrCacheMap addrCacheMap;$/;"	m	class:X86ISA::Decoder
addrCompleteEvent	src/dev/copy_engine.hh	/^            addrCompleteEvent;$/;"	m	class:CopyEngine::CopyEngineChannel
addrLength	src/arch/x86/bios/intelmp.hh	/^    uint64_t addrLength;$/;"	m	class:X86ISA::IntelMP::AddrSpaceMapping
addrList	src/cpu/inorder/resources/cache_unit.hh	/^    std::list<Addr> addrList[ThePipeline::MaxThreads];$/;"	m	class:CacheUnit
addrMap	src/cpu/inorder/resources/cache_unit.hh	/^    m5::hash_map<Addr, InstSeqNum> addrMap[ThePipeline::MaxThreads];$/;"	m	class:CacheUnit
addrMap	src/mem/physical.hh	/^    AddrRangeMap<AbstractMemory*> addrMap;$/;"	m	class:PhysicalMemory
addrMapping	src/cpu/testers/traffic_gen/generators.hh	/^    unsigned int addrMapping;$/;"	m	class:DramGen
addrMapping	src/mem/dram_ctrl.hh	/^    Enums::AddrMap addrMapping;$/;"	m	class:DRAMCtrl
addrOffset	src/cpu/testers/traffic_gen/generators.hh	/^    Addr addrOffset;$/;"	m	class:TraceGen
addrRanges	src/mem/cache/base.hh	/^    const AddrRangeList addrRanges;$/;"	m	class:BaseCache
addrSize	src/arch/x86/insts/microop.hh	/^        uint8_t addrSize;$/;"	m	class:X86ISA::X86MicroopBase
addrSize	src/arch/x86/types.hh	/^        uint8_t addrSize;$/;"	m	struct:X86ISA::ExtMachInst
addrStack	src/cpu/pred/ras.hh	/^    std::vector<TheISA::PCState> addrStack;$/;"	m	class:ReturnAddrStack
addrTable	src/base/loader/symtab.hh	/^    ATable addrTable;$/;"	m	class:SymbolTable
addrType	src/arch/x86/bios/intelmp.hh	/^    uint8_t addrType;$/;"	m	class:X86ISA::IntelMP::AddrSpaceMapping
addr_hi	src/dev/pcireg.h	/^        uint32_t addr_hi;$/;"	m	struct:MSIXTable::__anon81
addr_increment_size	src/cpu/testers/directedtest/RubyDirectedTester.py	/^    addr_increment_size = Param.Int(64, "address increment size")$/;"	v	class:InvalidateGenerator
addr_increment_size	src/cpu/testers/directedtest/RubyDirectedTester.py	/^    addr_increment_size = Param.Int(64, "address increment size")$/;"	v	class:SeriesRequestGenerator
addr_lo	src/dev/pcireg.h	/^        uint32_t addr_lo;$/;"	m	struct:MSIXTable::__anon81
addr_mapping	src/mem/DRAMCtrl.py	/^    addr_mapping = Param.AddrMap('RoRaBaChCo', "Address mapping policy")$/;"	v	class:DRAMCtrl
addr_ranges	src/mem/cache/BaseCache.py	/^    addr_ranges = VectorParam.AddrRange([AllMemory], "The address range for the CPU-side port")$/;"	v	class:BaseCache
addr_valid	src/sim/insttracer.hh	/^    bool addr_valid;$/;"	m	class:Trace::InstRecord
address	src/arch/x86/bios/IntelMP.py	/^    address = Param.Addr(0, 'starting address of the mapping')$/;"	v	class:X86IntelMPAddrSpaceMapping
address	src/arch/x86/bios/IntelMP.py	/^    address = Param.UInt32(0xfec00000, 'address of this APIC')$/;"	v	class:X86IntelMPIOAPIC
address	src/arch/x86/bios/intelmp.hh	/^    uint32_t address;$/;"	m	class:X86ISA::IntelMP::IOAPIC
address	src/dev/x86/cmos.hh	/^    uint8_t address;$/;"	m	class:X86ISA::Cmos
address	src/kern/tru64/tru64.hh	/^        Addr    address;        \/\/!< address hint$/;"	m	struct:Tru64::vm_stack
addressOffset	src/mem/ruby/slicc_interface/RubySlicc_Util.hh	/^addressOffset(Address addr)$/;"	f
addressSize	src/arch/x86/emulenv.hh	/^        int addressSize;$/;"	m	struct:X86ISA::EmulEnv
addressSize	src/arch/x86/insts/microldstop.hh	/^        const uint8_t addressSize;$/;"	m	class:X86ISA::LdStOp
addressToCacheSet	src/mem/ruby/system/CacheMemory.cc	/^CacheMemory::addressToCacheSet(const Address& address) const$/;"	f	class:CacheMemory
address_type	src/arch/x86/bios/IntelMP.py	/^    address_type = Param.X86IntelMPAddressType('IOAddress',$/;"	v	class:X86IntelMPAddrSpaceMapping
addrv	src/arch/x86/regs/misc.hh	/^        Bitfield<58> addrv; \/\/ Error-address register valid$/;"	m	namespace:X86ISA
adds_list	src/mem/ruby/filters/H3BloomFilter.hh	/^    int adds_list[6]; \/\/= {841,627,1555,241,7777,65391};$/;"	m	class:H3BloomFilter
addsymbol	src/sim/pseudo_inst.cc	/^addsymbol(ThreadContext *tc, Addr addr, Addr symbolAddr)$/;"	f	namespace:PseudoInst
adjtime	src/kern/tru64/tru64_syscalls.hh	/^        adjtime = 140,$/;"	e	enum:SystemCalls::__anon102
adjtimex	src/kern/linux/linux_syscalls.hh	/^    adjtimex = 6,$/;"	e	enum:SystemCalls::__anon87
adjustTableSizeAArch64	src/arch/arm/table_walker.cc	/^TableWalker::adjustTableSizeAArch64(unsigned tsz)$/;"	f	class:TableWalker
adoptOrphanParams	src/python/m5/SimObject.py	/^    def adoptOrphanParams(self):$/;"	f
adr	src/base/loader/coff_sym.h	/^    coff_addr   adr;            \/* memory address of beginning of file *\/$/;"	m	struct:ecoff_fdr
adr	src/base/loader/coff_sym.h	/^    coff_addr   adr;            \/* memory address of start of procedure *\/$/;"	m	struct:pdr
advSimdHalfPrecision	src/arch/arm/miscregs.hh	/^        Bitfield<23, 20> advSimdHalfPrecision;$/;"	m	namespace:ArmISA
advSimdInteger	src/arch/arm/miscregs.hh	/^        Bitfield<15, 12> advSimdInteger;$/;"	m	namespace:ArmISA
advSimdLoadStore	src/arch/arm/miscregs.hh	/^        Bitfield<11, 8> advSimdLoadStore;$/;"	m	namespace:ArmISA
advSimdRegisters	src/arch/arm/miscregs.hh	/^        Bitfield<3, 0> advSimdRegisters;$/;"	m	namespace:ArmISA
advSimdSinglePrecision	src/arch/arm/miscregs.hh	/^        Bitfield<19, 16> advSimdSinglePrecision;$/;"	m	namespace:ArmISA
adv_read	src/dev/i8254xGBe_defs.hh	/^        } adv_read;$/;"	m	union:iGbReg::RxDesc::__anon70	typeref:struct:iGbReg::RxDesc::__anon70::__anon72
adv_wb	src/dev/i8254xGBe_defs.hh	/^        } adv_wb ;$/;"	m	union:iGbReg::RxDesc::__anon70	typeref:struct:iGbReg::RxDesc::__anon70::__anon73
advance	src/arch/arm/types.hh	/^        advance()$/;"	f	class:ArmISA::PCState
advance	src/arch/generic/types.hh	/^    advance()$/;"	f	class:GenericISA::DelaySlotPCState
advance	src/arch/generic/types.hh	/^    advance()$/;"	f	class:GenericISA::SimplePCState
advance	src/arch/x86/types.hh	/^        advance()$/;"	f	class:X86ISA::PCState
advance	src/cpu/activity.cc	/^ActivityRecorder::advance()$/;"	f	class:ActivityRecorder
advance	src/cpu/timebuf.hh	/^    advance()$/;"	f	class:TimeBuffer
advanceInst	src/cpu/simple/timing.cc	/^TimingSimpleCPU::advanceInst(Fault fault)$/;"	f	class:TimingSimpleCPU
advancePC	src/arch/alpha/utility.hh	/^advancePC(PCState &pc, const StaticInstPtr inst)$/;"	f	namespace:AlphaISA
advancePC	src/arch/arm/insts/macromem.hh	/^    advancePC(PCState &pcState) const$/;"	f	class:ArmISA::MicroOp
advancePC	src/arch/arm/insts/macromem.hh	/^    advancePC(PCState &pcState) const$/;"	f	class:ArmISA::MicroOpX
advancePC	src/arch/arm/insts/mem.hh	/^    advancePC(PCState &pcState) const$/;"	f	class:ArmISA::MightBeMicro
advancePC	src/arch/arm/insts/mem64.hh	/^    advancePC(PCState &pcState) const$/;"	f	class:ArmISA::MightBeMicro64
advancePC	src/arch/arm/insts/pred_inst.hh	/^    advancePC(PCState &pcState) const$/;"	f	class:ArmISA::PredMicroop
advancePC	src/arch/arm/insts/static_inst.hh	/^    advancePC(PCState &pcState) const$/;"	f	class:ArmISA::ArmStaticInst
advancePC	src/arch/arm/insts/vfp.hh	/^    advancePC(PCState &pcState) const$/;"	f	class:ArmISA::FpOp
advancePC	src/arch/arm/utility.hh	/^advancePC(PCState &pc, const StaticInstPtr inst)$/;"	f	namespace:ArmISA
advancePC	src/arch/mips/utility.hh	/^advancePC(PCState &pc, const StaticInstPtr inst)$/;"	f	namespace:MipsISA
advancePC	src/arch/power/insts/static_inst.hh	/^    advancePC(PowerISA::PCState &pcState) const$/;"	f	class:PowerISA::PowerStaticInst
advancePC	src/arch/power/utility.hh	/^advancePC(PCState &pc, const StaticInstPtr inst)$/;"	f	namespace:PowerISA
advancePC	src/arch/sparc/utility.hh	/^advancePC(PCState &pc, const StaticInstPtr inst)$/;"	f	namespace:SparcISA
advancePC	src/arch/x86/insts/microop.hh	/^        advancePC(PCState &pcState) const$/;"	f	class:X86ISA::X86MicroopBase
advancePC	src/arch/x86/insts/static_inst.hh	/^        advancePC(PCState &pcState) const$/;"	f	class:X86ISA::X86StaticInst
advancePC	src/arch/x86/utility.hh	/^    advancePC(PCState &pc, const StaticInstPtr inst)$/;"	f	namespace:X86ISA
advancePC	src/cpu/checker/cpu_impl.hh	/^Checker<Impl>::advancePC(Fault fault)$/;"	f	class:Checker
advancePC	src/cpu/simple/base.cc	/^BaseSimpleCPU::advancePC(Fault fault)$/;"	f	class:BaseSimpleCPU
advance_stage	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.hh	/^    advance_stage(flit_stage t_stage, Cycles curTime)$/;"	f	class:flit_d
af	src/arch/arm/table_walker.hh	/^        bool af() const$/;"	f	class:ArmISA::TableWalker::LongDescriptor
af	src/arch/x86/regs/misc.hh	/^        Bitfield<4> af; \/\/ Auxiliary Flag$/;"	m	namespace:X86ISA
af	src/arch/x86/regs/misc.hh	/^        Bitfield<4> af;$/;"	m	namespace:X86ISA
afe	src/arch/arm/miscregs.hh	/^        Bitfield<29>   afe;     \/\/ Access flag enable (AArch32 only)$/;"	m	namespace:ArmISA
afs_syscall	src/kern/linux/linux_syscalls.hh	/^    afs_syscall = 7,$/;"	e	enum:SystemCalls::__anon87
afs_syscall	src/kern/tru64/tru64_syscalls.hh	/^        afs_syscall = 258,$/;"	e	enum:SystemCalls::__anon102
ageTaskId	src/mem/cache/tags/base.hh	/^    Stats::Vector2d ageTaskId;$/;"	m	class:BaseTags
agens	src/cpu/inorder/resources/agen_unit.hh	/^    Stats::Scalar agens;$/;"	m	class:AGENUnit
aggregateRecords	src/mem/ruby/recorder/CacheRecorder.cc	/^CacheRecorder::aggregateRecords(uint8_t** buf, uint64 total_size)$/;"	f	class:CacheRecorder
ah	src/base/cp_annotate.hh	/^    AnnotateHeader ah;$/;"	m	class:CPA
ahbmaster	src/dev/arm/pl111.hh	/^        Bitfield<4> ahbmaster;$/;"	m	class:Pl111
ahp	src/arch/arm/miscregs.hh	/^        Bitfield<26> ahp;$/;"	m	namespace:ArmISA
aie	src/dev/mc146818.hh	/^        Bitfield<5> aie;       \/\/\/ 1 = enable alarm interrupt$/;"	m	class:MC146818
alarm	src/kern/linux/linux_syscalls.hh	/^    alarm = 8,$/;"	e	enum:SystemCalls::__anon87
align	src/kern/tru64/tru64.hh	/^        uint64_t        align;          \/\/!< address alignment$/;"	m	struct:Tru64::vm_stack
alignFaults	src/arch/arm/tlb.hh	/^    mutable Stats::Scalar alignFaults;$/;"	m	class:ArmISA::TLB
allClasses	src/python/m5/SimObject.py	/^allClasses = {}$/;"	v
allCpusCaching	src/arch/arm/tlb.hh	/^    void allCpusCaching() { bootUncacheability = true; }$/;"	f	class:ArmISA::TLB
allDisabled	src/base/socket.cc	/^ListenSocket::allDisabled()$/;"	f	class:ListenSocket
allEnums	src/python/m5/params.py	/^allEnums = {}$/;"	v
allFlags	src/base/debug.cc	/^allFlags()$/;"	f	namespace:Debug
allFlagsVersion	src/base/debug.cc	/^int allFlagsVersion = 0;$/;"	m	namespace:Debug	file:
allParams	src/python/m5/params.py	/^allParams = {}$/;"	v
allSet	src/base/flags.hh	/^    bool allSet() const { return !(~_flags); }$/;"	f	class:Flags
allSet	src/base/flags.hh	/^    bool allSet(Type flags) const { return (_flags & flags) == flags; }$/;"	f	class:Flags
all_instructions	src/mem/ruby/system/RubySystem.py	/^    all_instructions = Param.Bool(False, "")$/;"	v	class:RubySystem
alljobs	src/python/m5/util/jobfile.py	/^    def alljobs(self, groups=None):$/;"	m	class:Configuration
alloc	src/mem/ruby/common/DataBlock.cc	/^DataBlock::alloc()$/;"	f	class:DataBlock
alloc	src/sim/arguments.cc	/^Arguments::Data::alloc(size_t size)$/;"	f	class:Arguments::Data
allocIter	src/mem/cache/mshr.hh	/^    Iterator allocIter;$/;"	m	class:MSHR
allocPhysPages	src/sim/system.cc	/^System::allocPhysPages(int npages)$/;"	f	class:System
allocVCPUID	src/cpu/kvm/vm.cc	/^KvmVM::allocVCPUID()$/;"	f	class:KvmVM
alloc_fd	src/sim/process.cc	/^Process::alloc_fd(int sim_fd, string filename, int flags, int mode, bool pipe)$/;"	f	class:Process
allocate	src/mem/cache/mshr.cc	/^MSHR::allocate(Addr _addr, int _size, PacketPtr target, Tick whenReady,$/;"	f	class:MSHR
allocate	src/mem/cache/mshr_queue.cc	/^MSHRQueue::allocate(Addr addr, int size, PacketPtr &pkt,$/;"	f	class:MSHRQueue
allocate	src/mem/packet.hh	/^    allocate()$/;"	f	class:Packet
allocate	src/mem/ruby/system/CacheMemory.cc	/^CacheMemory::allocate(const Address& address, AbstractCacheEntry* entry)$/;"	f	class:CacheMemory
allocate	src/mem/ruby/system/DirectoryMemory.cc	/^DirectoryMemory::allocate(const PhysAddress& address, AbstractEntry* entry)$/;"	f	class:DirectoryMemory
allocate	src/mem/ruby/system/PerfectCacheMemory.hh	/^PerfectCacheMemory<ENTRY>::allocate(const Address& address)$/;"	f	class:PerfectCacheMemory
allocate	src/mem/ruby/system/TBETable.hh	/^TBETable<ENTRY>::allocate(const Address& address)$/;"	f	class:TBETable
allocateBlock	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::allocateBlock(Addr addr, bool is_secure,$/;"	f	class:Cache
allocateBufferInternal	src/mem/cache/base.hh	/^    MSHR *allocateBufferInternal(MSHRQueue *mq, Addr addr, int size,$/;"	f	class:BaseCache
allocateMem	src/sim/process.cc	/^Process::allocateMem(Addr vaddr, int64_t size, bool clobber)$/;"	f	class:Process
allocateMissBuffer	src/mem/cache/base.hh	/^    MSHR *allocateMissBuffer(PacketPtr pkt, Tick time, bool requestBus)$/;"	f	class:BaseCache
allocatePID	src/sim/system.hh	/^    uint64_t allocatePID()$/;"	f	class:System
allocateTarget	src/mem/cache/mshr.cc	/^MSHR::allocateTarget(PacketPtr pkt, Tick whenReady, Counter _order)$/;"	f	class:MSHR
allocateUncachedReadBuffer	src/mem/cache/base.hh	/^    MSHR *allocateUncachedReadBuffer(PacketPtr pkt, Tick time, bool requestBus)$/;"	f	class:BaseCache
allocateVoid	src/mem/ruby/system/CacheMemory.hh	/^    void allocateVoid(const Address& address, AbstractCacheEntry* new_entry)$/;"	f	class:CacheMemory
allocateWriteBuffer	src/mem/cache/base.hh	/^    MSHR *allocateWriteBuffer(PacketPtr pkt, Tick time, bool requestBus)$/;"	f	class:BaseCache
allocated	src/mem/cache/mshr_queue.hh	/^    int allocated;$/;"	m	class:MSHRQueue
allocatedList	src/mem/cache/mshr_queue.hh	/^    MSHR::List allocatedList;$/;"	m	class:MSHRQueue
allocating	src/mem/se_translating_port_proxy.hh	/^    AllocType allocating;$/;"	m	class:SETranslatingPortProxy
alpha	src/base/vnc/convert.hh	/^        Bitfield<31,24> alpha;$/;"	m	class:VideoConvert
alphaAccess	src/dev/alpha/backdoor.hh	/^        Access *alphaAccess;$/;"	m	union:AlphaBackdoor::__anon64
alreadyScheduled	src/mem/ruby/common/Consumer.hh	/^    alreadyScheduled(Tick time)$/;"	f	class:Consumer
altAddr	src/arch/x86/decoder.hh	/^    uint8_t altAddr;$/;"	m	class:X86ISA::Decoder
altAddr	src/arch/x86/regs/misc.hh	/^        Bitfield<15, 14> altAddr;$/;"	m	namespace:X86ISA
altOp	src/arch/x86/decoder.hh	/^    uint8_t altOp;$/;"	m	class:X86ISA::Decoder
altOp	src/arch/x86/regs/misc.hh	/^        Bitfield<11, 10> altOp;$/;"	m	namespace:X86ISA
alt_plock	src/kern/tru64/tru64_syscalls.hh	/^        alt_plock = 181,$/;"	e	enum:SystemCalls::__anon102
alt_setsid	src/kern/tru64/tru64_syscalls.hh	/^        alt_setsid = 188,$/;"	e	enum:SystemCalls::__anon102
alt_sigpending	src/kern/tru64/tru64_syscalls.hh	/^        alt_sigpending = 187,$/;"	e	enum:SystemCalls::__anon102
alternate_form	src/base/cprintf_formats.hh	/^    bool alternate_form;$/;"	m	struct:cp::Format
am	src/arch/sparc/miscregs.hh	/^    Bitfield<3> am;$/;"	m	namespace:SparcISA
am	src/arch/x86/regs/misc.hh	/^        Bitfield<18> am; \/\/ Alignment Mask$/;"	m	namespace:X86ISA
ambaId	src/dev/arm/amba_device.hh	/^    uint64_t ambaId;$/;"	m	class:AmbaDmaDevice
ambaId	src/dev/arm/amba_device.hh	/^    uint64_t ambaId;$/;"	m	class:AmbaPioDevice
amba_id	src/dev/arm/RealView.py	/^    amba_id = 0;$/;"	v	class:AmbaFake
amba_id	src/dev/arm/RealView.py	/^    amba_id = 0x00141000$/;"	v	class:HDLcd
amba_id	src/dev/arm/RealView.py	/^    amba_id = 0x00141050$/;"	v	class:Pl050
amba_id	src/dev/arm/RealView.py	/^    amba_id = 0x00141111$/;"	v	class:Pl111
amba_id	src/dev/arm/RealView.py	/^    amba_id = 0x00141804$/;"	v	class:Sp804
amba_id	src/dev/arm/RealView.py	/^    amba_id = 0x00341031$/;"	v	class:PL031
amba_id	src/dev/arm/RealView.py	/^    amba_id = Param.UInt32("ID of AMBA device for kernel detection")$/;"	v	class:AmbaDmaDevice
amba_id	src/dev/arm/RealView.py	/^    amba_id = Param.UInt32("ID of AMBA device for kernel detection")$/;"	v	class:AmbaPioDevice
amo	src/arch/arm/miscregs.hh	/^        Bitfield<5>      amo;$/;"	m	namespace:ArmISA
anBegin	src/dev/copy_engine.hh	/^        inline void anBegin(const char *s)$/;"	f	class:CopyEngine::CopyEngineChannel
anBegin	src/dev/i8254xGBe.hh	/^    void anBegin(std::string sm, std::string st, int flags = CPA::FL_NONE) {$/;"	f	class:IGbE
anDq	src/dev/copy_engine.hh	/^        inline void anDq()$/;"	f	class:CopyEngine::CopyEngineChannel
anDq	src/dev/i8254xGBe.hh	/^    void anDq(std::string sm, std::string q) {$/;"	f	class:IGbE
anPq	src/dev/copy_engine.hh	/^        inline void anPq()$/;"	f	class:CopyEngine::CopyEngineChannel
anPq	src/dev/i8254xGBe.hh	/^    void anPq(std::string sm, std::string q, int num = 1) {$/;"	f	class:IGbE
anQ	src/dev/copy_engine.hh	/^        inline void anQ(const char * s, uint64_t id, int size = 1)$/;"	f	class:CopyEngine::CopyEngineChannel
anQ	src/dev/i8254xGBe.hh	/^    void anQ(std::string sm, std::string q) { $/;"	f	class:IGbE
anRq	src/dev/i8254xGBe.hh	/^    void anRq(std::string sm, std::string q, int num = 1) {$/;"	f	class:IGbE
anWait	src/dev/copy_engine.hh	/^        inline void anWait()$/;"	f	class:CopyEngine::CopyEngineChannel
anWe	src/dev/i8254xGBe.hh	/^    void anWe(std::string sm, std::string q) {$/;"	f	class:IGbE
anWf	src/dev/i8254xGBe.hh	/^    void anWf(std::string sm, std::string q) {$/;"	f	class:IGbE
anchorString	src/arch/x86/bios/smbios.cc	/^        SMBiosHeader::IntermediateHeader::anchorString[] = "_DMI_";$/;"	m	class:X86ISA::SMBios::SMBiosTable::SMBiosHeader::IntermediateHeader	file:
anchorString	src/arch/x86/bios/smbios.cc	/^const char X86ISA::SMBios::SMBiosTable::SMBiosHeader::anchorString[] = "_SM_";$/;"	m	class:X86ISA::SMBios::SMBiosTable::SMBiosHeader	file:
anchorString	src/arch/x86/bios/smbios.hh	/^            static const char anchorString[];$/;"	m	struct:X86ISA::SMBios::SMBiosTable::SMBiosHeader::IntermediateHeader
anchorString	src/arch/x86/bios/smbios.hh	/^        static const char anchorString[];$/;"	m	struct:X86ISA::SMBios::SMBiosTable::SMBiosHeader
annDescQ	src/dev/i8254xGBe.hh	/^            annUsedDescQ, annUnusedCacheQ, annDescQ;$/;"	m	class:IGbE::DescCache
annSmFetch	src/dev/i8254xGBe.hh	/^        std::string annSmFetch, annSmWb, annUnusedDescQ, annUsedCacheQ,$/;"	m	class:IGbE::DescCache
annSmWb	src/dev/i8254xGBe.hh	/^        std::string annSmFetch, annSmWb, annUnusedDescQ, annUsedCacheQ,$/;"	m	class:IGbE::DescCache
annUnusedCacheQ	src/dev/i8254xGBe.hh	/^            annUsedDescQ, annUnusedCacheQ, annDescQ;$/;"	m	class:IGbE::DescCache
annUnusedDescQ	src/dev/i8254xGBe.hh	/^        std::string annSmFetch, annSmWb, annUnusedDescQ, annUsedCacheQ,$/;"	m	class:IGbE::DescCache
annUsedCacheQ	src/dev/i8254xGBe.hh	/^        std::string annSmFetch, annSmWb, annUnusedDescQ, annUsedCacheQ,$/;"	m	class:IGbE::DescCache
annUsedDescQ	src/dev/i8254xGBe.hh	/^            annUsedDescQ, annUnusedCacheQ, annDescQ;$/;"	m	class:IGbE::DescCache
annotate	src/arch/arm/faults.cc	/^AbortFault<T>::annotate(ArmFault::AnnotationIDs id, uint64_t val)$/;"	f	class:ArmISA::AbortFault
annotate	src/arch/arm/faults.cc	/^DataAbort::annotate(AnnotationIDs id, uint64_t val)$/;"	f	class:ArmISA::DataAbort
annotate	src/arch/arm/faults.hh	/^    virtual void annotate(AnnotationIDs id, uint64_t val) {}$/;"	f	class:ArmISA::ArmFault
annotateFault	src/arch/arm/insts/static_inst.hh	/^    annotateFault(ArmFault *fault) {}$/;"	f	class:ArmISA::ArmStaticInst
annotateIdx	src/base/cp_annotate.hh	/^    std::vector<uint64_t> annotateIdx;$/;"	m	class:CPA
annotateMemoryUnits	src/cpu/o3/fu_pool.cc	/^FUPool::annotateMemoryUnits(Cycles hit_latency)$/;"	f	class:FUPool
annotes	src/arch/alpha/types.hh	/^enum annotes$/;"	g	namespace:AlphaISA
anyListening	src/base/socket.cc	/^bool ListenSocket::anyListening = false;$/;"	m	class:ListenSocket	file:
anyListening	src/base/socket.hh	/^    static bool anyListening;$/;"	m	class:ListenSocket
anyToFrequency	src/python/m5/util/convert.py	/^def anyToFrequency(value):$/;"	f
anyToLatency	src/python/m5/util/convert.py	/^def anyToLatency(value):$/;"	f
aocs32	src/dev/pcireg.h	/^        Bitfield<7>     aocs32;$/;"	m	struct:PXCAP
aocs64	src/dev/pcireg.h	/^        Bitfield<8>     aocs64;$/;"	m	struct:PXCAP
aors	src/dev/pcireg.h	/^        Bitfield<6>     aors;$/;"	m	struct:PXCAP
aoutHdr	src/base/loader/ecoff_object.hh	/^    ecoff_aouthdr *aoutHdr;$/;"	m	class:EcoffObject
aout_exechdr	src/arch/alpha/aout_machdep.h	/^struct aout_exechdr {$/;"	s
ap	src/arch/arm/pagetable.hh	/^    uint8_t ap;             \/\/ Access permissions bits$/;"	m	struct:ArmISA::TlbEntry
ap	src/arch/arm/table_walker.hh	/^        static uint8_t ap(bool rw, bool user)$/;"	f	class:ArmISA::TableWalker::LongDescriptor
ap	src/arch/arm/table_walker.hh	/^        uint8_t ap() const$/;"	f	class:ArmISA::TableWalker::L1Descriptor
ap	src/arch/arm/table_walker.hh	/^        uint8_t ap() const$/;"	f	class:ArmISA::TableWalker::L2Descriptor
ap	src/arch/arm/table_walker.hh	/^        uint8_t ap() const$/;"	f	class:ArmISA::TableWalker::LongDescriptor
apTable	src/arch/arm/table_walker.hh	/^        uint8_t apTable() const$/;"	f	class:ArmISA::TableWalker::LongDescriptor
apd	src/dev/pcireg.h	/^        Bitfield<4>     apd;$/;"	m	struct:PXCAP
apiVersion	src/cpu/kvm/vm.hh	/^    int apiVersion;$/;"	m	class:Kvm
apicTimerEvent	src/arch/x86/interrupts.hh	/^    ApicTimerEvent apicTimerEvent;$/;"	m	class:X86ISA::Interrupts
apic_id	src/dev/x86/I82094AA.py	/^    apic_id = Param.Int(1, 'APIC id for this IO APIC')$/;"	v	class:I82094AA
append	src/arch/isa_parser.py	/^    def append(self, op_desc):$/;"	m	class:OperandList
append	src/python/m5/util/code_formatter.py	/^    def append(self, data):$/;"	m	class:code_formatter
append	src/python/m5/util/region.py	/^    def append(self, *args):$/;"	m	class:Regions
appendValue	src/base/inifile.hh	/^        void appendValue(const std::string &v) { value += " "; value += v; }$/;"	f	class:IniFile::Entry
applyMethod	src/python/m5/util/__init__.py	/^def applyMethod(obj, meth, *args, **kwargs):$/;"	f
applyOrMap	src/python/m5/util/__init__.py	/^def applyOrMap(objOrSeq, meth, *args, **kwargs):$/;"	f
appme	src/dev/pcireg.h	/^        Bitfield<10>    appme;$/;"	m	struct:PXCAP
ar	src/arch/arm/faults.hh	/^    bool ar;$/;"	m	class:ArmISA::DataAbort
ar	src/arch/mips/pra_constants.hh	/^    Bitfield<12, 10> ar;$/;"	m	namespace:MipsISA
arbId	src/dev/x86/i82094aa.hh	/^    uint8_t arbId;$/;"	m	class:X86ISA::I82094AA
arbitrate_inports	src/mem/ruby/network/garnet/fixed-pipeline/SWallocator_d.cc	/^SWallocator_d::arbitrate_inports()$/;"	f	class:SWallocator_d
arbitrate_invcs	src/mem/ruby/network/garnet/fixed-pipeline/VCallocator_d.cc	/^VCallocator_d::arbitrate_invcs()$/;"	f	class:VCallocator_d
arbitrate_outports	src/mem/ruby/network/garnet/fixed-pipeline/SWallocator_d.cc	/^SWallocator_d::arbitrate_outports()$/;"	f	class:SWallocator_d
arbitrate_outvcs	src/mem/ruby/network/garnet/fixed-pipeline/VCallocator_d.cc	/^VCallocator_d::arbitrate_outvcs()$/;"	f	class:VCallocator_d
arch	src/arch/arm/process.hh	/^    ObjectFile::Arch arch;$/;"	m	class:ArmLiveProcess
arch	src/arch/arm/process.hh	/^    ObjectFile::Arch arch;$/;"	m	class:ArmLiveProcess32
arch	src/arch/arm/process.hh	/^    ObjectFile::Arch arch;$/;"	m	class:ArmLiveProcess64
arch	src/base/loader/object_file.hh	/^    Arch  arch;$/;"	m	class:ObjectFile
archIsDrained	src/cpu/kvm/base.hh	/^    virtual bool archIsDrained() const { return true; }$/;"	f	class:BaseKvmCPU
archIsDrained	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::archIsDrained() const$/;"	f	class:X86KvmCPU
archPrctlFunc	src/arch/x86/linux/syscalls.cc	/^archPrctlFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	file:
archReg	src/cpu/o3/rename.hh	/^        RegIndex archReg;$/;"	m	struct:DefaultRename::RenameHistory
archRegDepMap	src/cpu/inorder/cpu.hh	/^    RegDepMap archRegDepMap[ThePipeline::MaxThreads];$/;"	m	class:InOrderCPU
areNSlotsAvailable	src/mem/ruby/buffers/MessageBuffer.cc	/^MessageBuffer::areNSlotsAvailable(unsigned int n)$/;"	f	class:MessageBuffer
areNSlotsAvailable	src/mem/ruby/system/RubyMemoryControl.hh	/^    bool areNSlotsAvailable(int n) { return true; };  \/\/ infinite queue length$/;"	f	class:RubyMemoryControl
areNSlotsAvailable	src/mem/ruby/system/TBETable.hh	/^    areNSlotsAvailable(int n) const$/;"	f	class:TBETable
areNSlotsAvailable	src/mem/ruby/system/WireBuffer.hh	/^    bool areNSlotsAvailable(int n) { return true; };  \/\/ infinite queue length$/;"	f	class:WireBuffer
area	src/base/vnc/convert.hh	/^    int area() const { return width * height; }$/;"	f	class:VideoConvert
areaChanged	src/dev/i8254xGBe.cc	/^IGbE::DescCache<T>::areaChanged()$/;"	f	class:IGbE::DescCache
argDivToNs	src/kern/linux/events.hh	/^    uint64_t argDivToNs;$/;"	m	class:Linux::UDelayEvent
argMultToNs	src/kern/linux/events.hh	/^    uint64_t argMultToNs;$/;"	m	class:Linux::UDelayEvent
argsInit	src/arch/alpha/process.cc	/^AlphaLiveProcess::argsInit(int intSize, int pageSize)$/;"	f	class:AlphaLiveProcess
argsInit	src/arch/arm/process.cc	/^ArmLiveProcess::argsInit(int pageSize, IntRegIndex spIndex)$/;"	f	class:ArmLiveProcess
argsInit	src/arch/mips/process.cc	/^MipsLiveProcess::argsInit(int pageSize)$/;"	f	class:MipsLiveProcess
argsInit	src/arch/power/process.cc	/^PowerLiveProcess::argsInit(int intSize, int pageSize)$/;"	f	class:PowerLiveProcess
argsInit	src/arch/sparc/process.cc	/^Sparc32LiveProcess::argsInit(int intSize, int pageSize)$/;"	f	class:Sparc32LiveProcess
argsInit	src/arch/sparc/process.cc	/^Sparc64LiveProcess::argsInit(int intSize, int pageSize)$/;"	f	class:Sparc64LiveProcess
argsInit	src/arch/sparc/process.cc	/^SparcLiveProcess::argsInit(int pageSize)$/;"	f	class:SparcLiveProcess
argsInit	src/arch/x86/process.cc	/^I386LiveProcess::argsInit(int intSize, int pageSize)$/;"	f	class:I386LiveProcess
argsInit	src/arch/x86/process.cc	/^X86LiveProcess::argsInit(int pageSize,$/;"	f	class:X86LiveProcess
argsInit	src/arch/x86/process.cc	/^X86_64LiveProcess::argsInit(int intSize, int pageSize)$/;"	f	class:X86_64LiveProcess
argument	src/base/varargs.hh	/^    const T &argument;$/;"	m	struct:VarArgs::Any
argument	src/base/varargs.hh	/^    const T *argument;$/;"	m	struct:VarArgs::Any
argv	src/sim/process.hh	/^    std::vector<std::string> argv;$/;"	m	class:LiveProcess
arifs	src/dev/pcireg.h	/^        Bitfield<5>     arifs;$/;"	m	struct:PXCAP
arm	src/cpu/kvm/timer.cc	/^PerfKvmTimer::arm(Tick ticks)$/;"	f	class:PerfKvmTimer
arm	src/cpu/kvm/timer.cc	/^PosixKvmTimer::arm(Tick ticks)$/;"	f	class:PosixKvmTimer
arm	src/kern/kernel_stats.hh	/^    void arm() { _arm++; }$/;"	f	class:Kernel::Statistics
arm	src/sim/pseudo_inst.cc	/^arm(ThreadContext *tc)$/;"	f	namespace:PseudoInst
armPcElrOffset	src/arch/arm/faults.hh	/^        const uint8_t armPcElrOffset;$/;"	m	struct:ArmISA::ArmFault::FaultVals
armPcElrOffset	src/arch/arm/faults.hh	/^    uint8_t armPcElrOffset() { return vals.armPcElrOffset; }$/;"	f	class:ArmISA::ArmFaultVals
armPcOffset	src/arch/arm/faults.hh	/^        const uint8_t armPcOffset;$/;"	m	struct:ArmISA::ArmFault::FaultVals
armPcOffset	src/arch/arm/faults.hh	/^    uint8_t armPcOffset(bool isHyp)   { return isHyp ? vals.armPcElrOffset$/;"	f	class:ArmISA::ArmFaultVals
armSys	src/arch/arm/table_walker.hh	/^    ArmSystem *armSys;$/;"	m	class:ArmISA::TableWalker
arrayParamIn	src/sim/serialize.cc	/^arrayParamIn(Checkpoint *cp, const string &section, const string &name,$/;"	f
arrayParamIn	src/sim/serialize.cc	/^arrayParamIn(Checkpoint *cp, const string &section,$/;"	f
arrayParamOut	src/sim/serialize.cc	/^arrayParamOut(ostream &os, const string &name, const T *param, unsigned size)$/;"	f
arrayParamOut	src/sim/serialize.cc	/^arrayParamOut(ostream &os, const string &name, const list<T> &param)$/;"	f
arrayParamOut	src/sim/serialize.cc	/^arrayParamOut(ostream &os, const string &name, const vector<T> &param)$/;"	f
as	src/arch/arm/miscregs.hh	/^        Bitfield<36> as;$/;"	m	namespace:ArmISA
as_double	src/sim/insttracer.hh	/^        double as_double;$/;"	m	union:Trace::InstRecord::__anon104
as_int	src/sim/insttracer.hh	/^        uint64_t as_int;$/;"	m	union:Trace::InstRecord::__anon104
aseDn	src/arch/mips/pra_constants.hh	/^    Bitfield<12, 8>  aseDn;$/;"	m	namespace:MipsISA
aseUp	src/arch/mips/pra_constants.hh	/^    Bitfield<31, 30> aseUp;$/;"	m	namespace:MipsISA
asedis	src/arch/arm/miscregs.hh	/^        Bitfield<31> asedis;$/;"	m	namespace:ArmISA
asi	src/arch/sparc/decoder.hh	/^    MiscReg asi;$/;"	m	class:SparcISA::Decoder
asi	src/arch/sparc/isa.hh	/^    uint8_t asi;            \/\/ Address Space Identifier$/;"	m	class:SparcISA::ISA
asi	src/cpu/m5legion_interface.h	/^    uint8_t asi;$/;"	m	struct:__anon55
asiIsAsIfUser	src/arch/sparc/asi.cc	/^asiIsAsIfUser(ASI asi)$/;"	f	namespace:SparcISA
asiIsBlock	src/arch/sparc/asi.cc	/^asiIsBlock(ASI asi)$/;"	f	namespace:SparcISA
asiIsCmt	src/arch/sparc/asi.cc	/^asiIsCmt(ASI asi)$/;"	f	namespace:SparcISA
asiIsFloatingLoad	src/arch/sparc/asi.cc	/^asiIsFloatingLoad(ASI asi)$/;"	f	namespace:SparcISA
asiIsHPriv	src/arch/sparc/asi.cc	/^asiIsHPriv(ASI asi)$/;"	f	namespace:SparcISA
asiIsIO	src/arch/sparc/asi.cc	/^asiIsIO(ASI asi)$/;"	f	namespace:SparcISA
asiIsInterrupt	src/arch/sparc/asi.cc	/^asiIsInterrupt(ASI asi)$/;"	f	namespace:SparcISA
asiIsLittle	src/arch/sparc/asi.cc	/^asiIsLittle(ASI asi)$/;"	f	namespace:SparcISA
asiIsMmu	src/arch/sparc/asi.cc	/^asiIsMmu(ASI asi)$/;"	f	namespace:SparcISA
asiIsNoFault	src/arch/sparc/asi.cc	/^asiIsNoFault(ASI asi)$/;"	f	namespace:SparcISA
asiIsNucleus	src/arch/sparc/asi.cc	/^asiIsNucleus(ASI asi)$/;"	f	namespace:SparcISA
asiIsPartialStore	src/arch/sparc/asi.cc	/^asiIsPartialStore(ASI asi)$/;"	f	namespace:SparcISA
asiIsPrimary	src/arch/sparc/asi.cc	/^asiIsPrimary(ASI asi)$/;"	f	namespace:SparcISA
asiIsPriv	src/arch/sparc/asi.cc	/^asiIsPriv(ASI asi)$/;"	f	namespace:SparcISA
asiIsQueue	src/arch/sparc/asi.cc	/^asiIsQueue(ASI asi)$/;"	f	namespace:SparcISA
asiIsReal	src/arch/sparc/asi.cc	/^asiIsReal(ASI asi)$/;"	f	namespace:SparcISA
asiIsReg	src/arch/sparc/asi.cc	/^asiIsReg(ASI asi)$/;"	f	namespace:SparcISA
asiIsScratchPad	src/arch/sparc/asi.cc	/^asiIsScratchPad(ASI asi)$/;"	f	namespace:SparcISA
asiIsSecondary	src/arch/sparc/asi.cc	/^asiIsSecondary(ASI asi)$/;"	f	namespace:SparcISA
asiIsSparcError	src/arch/sparc/asi.cc	/^asiIsSparcError(ASI asi)$/;"	f	namespace:SparcISA
asiIsTwin	src/arch/sparc/asi.cc	/^asiIsTwin(ASI asi)$/;"	f	namespace:SparcISA
asiIsUnPriv	src/arch/sparc/asi.cc	/^asiIsUnPriv(ASI asi)$/;"	f	namespace:SparcISA
asid	src/arch/arm/miscregs.hh	/^      Bitfield<7,0>  asid;$/;"	m	namespace:ArmISA
asid	src/arch/arm/pagetable.hh	/^    uint16_t asid;          \/\/ Address Space Identifier$/;"	m	struct:ArmISA::TlbEntry
asid	src/arch/arm/table_walker.hh	/^        uint16_t asid;$/;"	m	class:ArmISA::TableWalker::WalkerState
asid	src/arch/arm/tlb.hh	/^    uint16_t asid;$/;"	m	class:ArmISA::TLB
asid	src/arch/mips/dt_constants.hh	/^    Bitfield<12, 5>  asid;$/;"	m	namespace:MipsISA
asid	src/arch/mips/faults.hh	/^    Addr asid;$/;"	m	class:MipsISA::TlbFault
asid	src/arch/mips/mt_constants.hh	/^    Bitfield<7,  0>  asid;$/;"	m	namespace:MipsISA
asid	src/arch/mips/pagetable.hh	/^    uint8_t asid;$/;"	m	struct:MipsISA::PTE
asid	src/arch/mips/pra_constants.hh	/^    Bitfield<23, 16> asid;$/;"	m	namespace:MipsISA
asid	src/arch/mips/pra_constants.hh	/^    Bitfield<7,  0>  asid;$/;"	m	namespace:MipsISA
asid	src/arch/power/pagetable.hh	/^    uint8_t asid;$/;"	m	struct:PowerISA::PTE
asid	src/cpu/base_dyn_inst.hh	/^    short asid;$/;"	m	class:BaseDynInst
asid	src/cpu/inorder/cpu.hh	/^    ThreadID asid[ThePipeline::MaxThreads];$/;"	m	class:InOrderCPU
asid	src/cpu/inorder/inorder_dyn_inst.hh	/^    short asid;$/;"	m	class:InOrderDynInst
asid	src/cpu/inorder/resources/fetch_unit.hh	/^        int asid;$/;"	m	struct:FetchUnit::FetchBlock
asid	src/mem/cache/blk.hh	/^    int asid;$/;"	m	class:CacheBlk
asidM	src/arch/mips/dt_constants.hh	/^    Bitfield<20, 13> asidM;$/;"	m	namespace:MipsISA
askBusy	src/dev/etherint.hh	/^    bool askBusy() {return peer->isBusy(); }$/;"	f	class:EtherInt
asma	src/arch/alpha/pagetable.hh	/^    bool asma;              \/\/ address space match$/;"	m	struct:AlphaISA::TlbEntry
asn	src/arch/alpha/pagetable.hh	/^    uint8_t asn;            \/\/ address space number$/;"	m	struct:AlphaISA::TlbEntry
aspmc	src/dev/pcireg.h	/^        Bitfield<1,0>   aspmc;$/;"	m	struct:PXCAP
aspms	src/dev/pcireg.h	/^        Bitfield<11,10> aspms;$/;"	m	struct:PXCAP
assemble	src/arch/micro_asm.py	/^    def assemble(self, asm):$/;"	m	class:MicroAssembler
assembler	src/arch/micro_asm_test.py	/^assembler = MicroAssembler(TestMacroop, microops, Rom('main ROM'), Rom_Macroop)$/;"	v
assert32	src/arch/arm/isa.hh	/^        inline void assert32(ThreadContext *tc) {$/;"	f	class:ArmISA::ISA
assert64	src/arch/arm/isa.hh	/^        inline void assert64(ThreadContext *tc) {$/;"	f	class:ArmISA::ISA
assertMemInhibit	src/mem/packet.hh	/^    void assertMemInhibit()         { flags.set(MEM_INHIBIT); }$/;"	f	class:Packet
assertShared	src/mem/packet.hh	/^    void assertShared()             { flags.set(SHARED); }$/;"	f	class:Packet
assertType	src/mem/slicc/ast/VarExprAST.py	/^    def assertType(self, type_ident):$/;"	m	class:VarExprAST
assign	src/mem/ruby/common/DataBlock.hh	/^DataBlock::assign(uint8_t *data)$/;"	f	class:DataBlock
assignRE	src/arch/isa_parser.py	/^assignRE = re.compile(r'\\s*=(?!=)', re.MULTILINE)$/;"	v
assignThreadContext	src/sim/process.hh	/^    void assignThreadContext(int context_id)$/;"	f	class:Process
assoc	src/mem/cache/BaseCache.py	/^    assoc = Param.Int("associativity")$/;"	v	class:BaseCache
assoc	src/mem/cache/tags/Tags.py	/^    assoc = Param.Int(Parent.assoc, "associativity")$/;"	v	class:LRU
assoc	src/mem/cache/tags/cacheset.hh	/^    int assoc;$/;"	m	class:CacheSet
assoc	src/mem/cache/tags/lru.hh	/^    const unsigned assoc;$/;"	m	class:LRU
assoc	src/mem/ruby/system/Cache.py	/^    assoc = Param.Int("");$/;"	v	class:RubyCache
ast	src/mem/slicc/parser.py	/^import slicc.ast as ast$/;"	i
asym	src/base/loader/coff_sym.h	/^    SYMR        asym;           \/* symbol for the external *\/$/;"	m	struct:ecoff_extsym
asyncEventMutex	src/sim/simulate.cc	/^std::mutex asyncEventMutex;$/;"	v
asyncInsert	src/sim/eventq.cc	/^EventQueue::asyncInsert(Event *event)$/;"	f	class:EventQueue
async_daemon	src/kern/tru64/tru64_syscalls.hh	/^        async_daemon = 163,$/;"	e	enum:SystemCalls::__anon102
async_event	src/sim/async.cc	/^volatile bool async_event = false;$/;"	v
async_exception	src/sim/async.cc	/^volatile bool async_exception = false;$/;"	v
async_exit	src/sim/async.cc	/^volatile bool async_exit = false;$/;"	v
async_io	src/sim/async.cc	/^volatile bool async_io = false;$/;"	v
async_queue	src/sim/eventq.hh	/^    std::list<Event*> async_queue;$/;"	m	class:EventQueue
async_queue_mutex	src/sim/eventq.hh	/^    std::mutex *async_queue_mutex;$/;"	m	class:EventQueue
async_statdump	src/sim/async.cc	/^volatile bool async_statdump = false;$/;"	v
async_statreset	src/sim/async.cc	/^volatile bool async_statreset = false;$/;"	v
at	src/arch/mips/pra_constants.hh	/^    Bitfield<14, 13> at;$/;"	m	namespace:MipsISA
atags_addr	src/arch/arm/ArmSystem.py	/^                                "be written")$/;"	v	class:LinuxArmSystem
atap_acoustic_def	src/dev/ide_atareg.h	/^    uint8_t	atap_acoustic_def;	\/*     recommended level *\/$/;"	m	struct:ataparams
atap_acoustic_val	src/dev/ide_atareg.h	/^    uint8_t	atap_acoustic_val;	\/* 94: Current acoustic level *\/$/;"	m	struct:ataparams
atap_apm_val	src/dev/ide_atareg.h	/^    uint16_t	atap_apm_val;		\/* 91: current APM value *\/$/;"	m	struct:ataparams
atap_ata_major	src/dev/ide_atareg.h	/^    uint16_t	atap_ata_major;		\/* 80: Major version number *\/$/;"	m	struct:ataparams
atap_ata_minor	src/dev/ide_atareg.h	/^    uint16_t	atap_ata_minor;		\/* 81: Minor version number *\/$/;"	m	struct:ataparams
atap_capabilities1	src/dev/ide_atareg.h	/^    uint8_t	atap_capabilities1;	\/* 49: capability flags *\/$/;"	m	struct:ataparams
atap_capabilities2	src/dev/ide_atareg.h	/^    uint16_t	atap_capabilities2;	\/* 50: capability flags (ATA) *\/$/;"	m	struct:ataparams
atap_capacity	src/dev/ide_atareg.h	/^    uint32_t	atap_capacity;	\/* 60-61: total capacity (LBA only) *\/$/;"	m	struct:ataparams
atap_cfa_power	src/dev/ide_atareg.h	/^    uint16_t	atap_cfa_power;		\/* 160: CFA powermode *\/$/;"	m	struct:ataparams
atap_checksum	src/dev/ide_atareg.h	/^    uint8_t	atap_checksum;		\/*      Checksum *\/$/;"	m	struct:ataparams
atap_cmd1_en	src/dev/ide_atareg.h	/^    uint16_t	atap_cmd1_en;		\/* 85: cmd\/features enabled *\/$/;"	m	struct:ataparams
atap_cmd2_en	src/dev/ide_atareg.h	/^    uint16_t	atap_cmd2_en;		\/* 86: cmd\/features enabled *\/$/;"	m	struct:ataparams
atap_cmd_def	src/dev/ide_atareg.h	/^    uint16_t	atap_cmd_def;		\/* 87: cmd\/features default *\/$/;"	m	struct:ataparams
atap_cmd_ext	src/dev/ide_atareg.h	/^    uint16_t	atap_cmd_ext;		\/* 84: command\/features supp. ext. *\/$/;"	m	struct:ataparams
atap_cmd_set1	src/dev/ide_atareg.h	/^    uint16_t	atap_cmd_set1;		\/* 82: command set supported *\/$/;"	m	struct:ataparams
atap_cmd_set2	src/dev/ide_atareg.h	/^    uint16_t	atap_cmd_set2;		\/* 83: command set supported *\/$/;"	m	struct:ataparams
atap_config	src/dev/ide_atareg.h	/^    uint16_t	atap_config;		\/* 0: general configuration *\/$/;"	m	struct:ataparams
atap_curcapacity	src/dev/ide_atareg.h	/^    uint16_t	atap_curcapacity[2];	\/* 57-58: current capacity *\/$/;"	m	struct:ataparams
atap_curcylinders	src/dev/ide_atareg.h	/^    uint16_t	atap_curcylinders;	\/* 54: current logical cylinders *\/$/;"	m	struct:ataparams
atap_curheads	src/dev/ide_atareg.h	/^    uint16_t	atap_curheads;		\/* 55: current logical heads *\/$/;"	m	struct:ataparams
atap_curmulti	src/dev/ide_atareg.h	/^    uint8_t	atap_curmulti;		\/* 59: current multi-sector setting *\/$/;"	m	struct:ataparams
atap_curmulti_valid	src/dev/ide_atareg.h	/^    uint8_t	atap_curmulti_valid;	\/* 59: current multi-sector setting *\/$/;"	m	struct:ataparams
atap_cursectors	src/dev/ide_atareg.h	/^    uint16_t	atap_cursectors;	\/* 56: current logical sectors\/tracks *\/$/;"	m	struct:ataparams
atap_cylinders	src/dev/ide_atareg.h	/^    uint16_t	atap_cylinders;		\/* 1: # of non-removable cylinders *\/$/;"	m	struct:ataparams
atap_dmamode_act	src/dev/ide_atareg.h	/^    uint8_t	atap_dmamode_act;	\/*     multiword DMA mode active *\/$/;"	m	struct:ataparams
atap_dmamode_supp	src/dev/ide_atareg.h	/^    uint8_t	atap_dmamode_supp;	\/* 63: multiword DMA mode supported *\/$/;"	m	struct:ataparams
atap_dmatiming_mimi	src/dev/ide_atareg.h	/^    uint16_t	atap_dmatiming_mimi;	\/* 65: minimum DMA cycle time *\/$/;"	m	struct:ataparams
atap_dmatiming_recom	src/dev/ide_atareg.h	/^    uint16_t	atap_dmatiming_recom;	\/* 66: recommended DMA cycle time *\/$/;"	m	struct:ataparams
atap_eseu_time	src/dev/ide_atareg.h	/^    uint16_t	atap_eseu_time;		\/* 90: Enhanced SEU compl. time *\/$/;"	m	struct:ataparams
atap_extensions	src/dev/ide_atareg.h	/^    uint16_t	atap_extensions;	\/* 53: extensions supported *\/$/;"	m	struct:ataparams
atap_heads	src/dev/ide_atareg.h	/^    uint16_t	atap_heads;		\/* 3: # of heads *\/$/;"	m	struct:ataparams
atap_hwreset_res	src/dev/ide_atareg.h	/^    uint16_t	atap_hwreset_res;	\/* 93: Hardware reset value *\/$/;"	m	struct:ataparams
atap_max_lba	src/dev/ide_atareg.h	/^    uint16_t	atap_max_lba[4];	\/* 100-103: Max. user LBA add *\/$/;"	m	struct:ataparams
atap_media_serial	src/dev/ide_atareg.h	/^    uint8_t	atap_media_serial[60];	\/* 176-205: media serial number *\/$/;"	m	struct:ataparams
atap_model	src/dev/ide_atareg.h	/^    uint8_t	atap_model[40];		\/* 27-46: model number *\/$/;"	m	struct:ataparams
atap_mpasswd_rev	src/dev/ide_atareg.h	/^    uint16_t	atap_mpasswd_rev;	\/* 92: Master Password revision *\/$/;"	m	struct:ataparams
atap_multi	src/dev/ide_atareg.h	/^    uint16_t	atap_multi;		\/* 47: maximum sectors per irq (ATA) *\/$/;"	m	struct:ataparams
atap_olddmatiming	src/dev/ide_atareg.h	/^    uint8_t	atap_olddmatiming;	\/* 52: old DMA timing mode (ATA) *\/$/;"	m	struct:ataparams
atap_oldpiotiming	src/dev/ide_atareg.h	/^    uint8_t	atap_oldpiotiming;	\/* 51: old PIO timing mode *\/$/;"	m	struct:ataparams
atap_piomode_supp	src/dev/ide_atareg.h	/^    uint8_t	atap_piomode_supp;	\/* 64: PIO mode supported *\/$/;"	m	struct:ataparams
atap_piotiming	src/dev/ide_atareg.h	/^    uint16_t	atap_piotiming;		\/* 67: mini PIO cycle time without FC *\/$/;"	m	struct:ataparams
atap_piotiming_iordy	src/dev/ide_atareg.h	/^    uint16_t	atap_piotiming_iordy;	\/* 68: mini PIO cycle time with IORDY FC *\/$/;"	m	struct:ataparams
atap_pkt_br	src/dev/ide_atareg.h	/^    uint16_t	atap_pkt_br;		\/* 71: time (ns) to bus release *\/$/;"	m	struct:ataparams
atap_pkt_bsyclr	src/dev/ide_atareg.h	/^    uint16_t	atap_pkt_bsyclr;	\/* 72: tme to clear BSY after service *\/$/;"	m	struct:ataparams
atap_queuedepth	src/dev/ide_atareg.h	/^    uint16_t	atap_queuedepth;	\/* 75: *\/$/;"	m	struct:ataparams
atap_revision	src/dev/ide_atareg.h	/^    uint8_t	atap_revision[8];	\/* 23-26: firmware revision *\/$/;"	m	struct:ataparams
atap_rmsn_supp	src/dev/ide_atareg.h	/^    uint16_t	atap_rmsn_supp;		\/* 127: remov. media status notif. *\/$/;"	m	struct:ataparams
atap_sata_caps	src/dev/ide_atareg.h	/^    uint16_t	atap_sata_caps;		\/* 76: SATA capabilities *\/$/;"	m	struct:ataparams
atap_sata_features_en	src/dev/ide_atareg.h	/^    uint16_t	atap_sata_features_en;	\/* 79: SATA features enabled *\/$/;"	m	struct:ataparams
atap_sata_features_supp	src/dev/ide_atareg.h	/^    uint16_t	atap_sata_features_supp;\/* 78: SATA features supported *\/$/;"	m	struct:ataparams
atap_sata_reserved	src/dev/ide_atareg.h	/^    uint16_t	atap_sata_reserved;	\/* 77: reserved *\/$/;"	m	struct:ataparams
atap_sec_st	src/dev/ide_atareg.h	/^    uint16_t	atap_sec_st;		\/* 128: security status *\/$/;"	m	struct:ataparams
atap_sectors	src/dev/ide_atareg.h	/^    uint16_t	atap_sectors;		\/* 6: # of sectors *\/$/;"	m	struct:ataparams
atap_serial	src/dev/ide_atareg.h	/^    uint8_t	atap_serial[20];	\/* 10-19: serial number *\/$/;"	m	struct:ataparams
atap_seu_time	src/dev/ide_atareg.h	/^    uint16_t	atap_seu_time;		\/* 89: Sec. Erase Unit compl. time *\/$/;"	m	struct:ataparams
atap_signature	src/dev/ide_atareg.h	/^    uint8_t	atap_signature;		\/* 255: Signature *\/$/;"	m	struct:ataparams
atap_udmamode_act	src/dev/ide_atareg.h	/^    uint8_t	atap_udmamode_act;	\/*     Ultra-DMA mode active *\/$/;"	m	struct:ataparams
atap_udmamode_supp	src/dev/ide_atareg.h	/^    uint8_t	atap_udmamode_supp;	\/* 88: Ultra-DMA mode supported *\/$/;"	m	struct:ataparams
atap_vendor	src/dev/ide_atareg.h	/^    uint8_t	atap_vendor;	        \/* 49: vendor  *\/$/;"	m	struct:ataparams
ataparams	src/dev/ide_atareg.h	/^struct ataparams {$/;"	s
ate	src/arch/mips/dt_constants.hh	/^    Bitfield<27>     ate;$/;"	m	namespace:MipsISA
atexit	src/python/m5/simulate.py	/^import atexit$/;"	i
atomic	src/cpu/testers/memtest/MemTest.py	/^    atomic = Param.Bool(False, "Execute tester in atomic mode? (or timing)\\n")$/;"	v	class:MemTest
atomic	src/cpu/testers/memtest/memtest.hh	/^    bool atomic;$/;"	m	class:MemTest
atomic_read	src/base/atomicio.cc	/^atomic_read(int fd, void *s, size_t n)$/;"	f
atomic_write	src/base/atomicio.cc	/^atomic_write(int fd, const void *s, size_t n)$/;"	f
attach	src/base/remote_gdb.cc	/^BaseRemoteGDB::attach(int f)$/;"	f	class:BaseRemoteGDB
attach	src/cpu/kvm/perfevent.cc	/^PerfKvmCounter::attach(PerfKvmCounterConfig &config,$/;"	f	class:PerfKvmCounter
attach	src/cpu/kvm/perfevent.hh	/^    void attach(PerfKvmCounterConfig &config, pid_t tid) {$/;"	f	class:PerfKvmCounter
attach	src/cpu/kvm/perfevent.hh	/^    void attach(PerfKvmCounterConfig &config,$/;"	f	class:PerfKvmCounter
attach	src/dev/ethertap.cc	/^EtherTap::attach(int fd)$/;"	f	class:EtherTap
attachIO	src/dev/alpha/Tsunami.py	/^    def attachIO(self, bus):$/;"	m	class:Tsunami
attachIO	src/dev/arm/RealView.py	/^    def attachIO(self, bus):$/;"	m	class:RealViewEB
attachIO	src/dev/arm/RealView.py	/^    def attachIO(self, bus):$/;"	m	class:RealViewPBX
attachIO	src/dev/arm/RealView.py	/^    def attachIO(self, bus):$/;"	m	class:VExpress_EMM
attachIO	src/dev/mips/Malta.py	/^    def attachIO(self, bus):$/;"	m	class:Malta
attachIO	src/dev/sparc/T1000.py	/^    def attachIO(self, bus):$/;"	m	class:T1000
attachIO	src/dev/x86/Pc.py	/^    def attachIO(self, bus, dma_ports = []):$/;"	m	class:Pc
attachIO	src/dev/x86/SouthBridge.py	/^    def attachIO(self, bus, dma_ports):$/;"	m	class:SouthBridge
attachOnChipIO	src/dev/arm/RealView.py	/^    def attachOnChipIO(self, bus, bridge):$/;"	m	class:RealViewEB
attachOnChipIO	src/dev/arm/RealView.py	/^    def attachOnChipIO(self, bus, bridge):$/;"	m	class:RealViewPBX
attachOnChipIO	src/dev/arm/RealView.py	/^    def attachOnChipIO(self, bus, bridge):$/;"	m	class:VExpress_EMM
attachOnChipIO	src/dev/sparc/T1000.py	/^    def attachOnChipIO(self, bus):$/;"	m	class:T1000
attached	src/base/remote_gdb.hh	/^    bool attached;$/;"	m	class:BaseRemoteGDB
attached	src/cpu/kvm/perfevent.hh	/^    bool attached() const { return fd != -1; }$/;"	f	class:PerfKvmCounter
attnStatus	src/dev/copy_engine_defs.hh	/^    uint32_t attnStatus; \/\/ Read clears$/;"	m	struct:CopyEngineReg::Regs
atto	src/python/m5/util/convert.py	/^atto  = 1.0e-18$/;"	v
attr	src/arch/arm/miscregs.hh	/^        Bitfield<63, 56> attr;$/;"	m	namespace:ArmISA
attr	src/cpu/kvm/perfevent.hh	/^    struct perf_event_attr attr;$/;"	m	class:PerfKvmCounterConfig	typeref:struct:PerfKvmCounterConfig::perf_event_attr
attr	src/kern/tru64/tru64.hh	/^        Addr    attr;           \/\/!< allocation policy$/;"	m	struct:Tru64::vm_stack
attrIndx	src/arch/arm/table_walker.hh	/^        uint8_t attrIndx() const$/;"	f	class:ArmISA::TableWalker::LongDescriptor
attrdict	src/python/m5/simulate.py	/^from util import attrdict$/;"	i
attrdict	src/python/m5/stats/__init__.py	/^from m5.util import attrdict, fatal$/;"	i
attrdict	src/python/m5/util/__init__.py	/^from attrdict import attrdict, multiattrdict, optiondict$/;"	i
attrdict	src/python/m5/util/attrdict.py	/^class attrdict(dict):$/;"	c
attrdict	src/python/m5/util/smartdict.py	/^from attrdict import attrdict$/;"	i
attributes	src/arch/arm/pagetable.hh	/^    uint64_t attributes;    \/\/ Memory attributes formatted for PAR$/;"	m	struct:ArmISA::TlbEntry
attributes	src/mem/packet.hh	/^        const std::bitset<NUM_COMMAND_ATTRIBUTES> attributes;$/;"	m	struct:MemCmd::CommandInfo
audcntl	src/kern/tru64/tru64_syscalls.hh	/^        audcntl = 252,$/;"	e	enum:SystemCalls::__anon102
audgen	src/kern/tru64/tru64_syscalls.hh	/^        audgen = 253,$/;"	e	enum:SystemCalls::__anon102
autoDestroy	src/base/callback.hh	/^    const bool autoDestroy;$/;"	m	class:MakeCallback
autoDestruct	src/base/callback.hh	/^    virtual void autoDestruct() {}$/;"	f	class:Callback
autoDestruct	src/base/callback.hh	/^    void autoDestruct() { if (autoDestroy) delete this; }$/;"	f	class:MakeCallback
autoEOI	src/dev/x86/i8259.hh	/^    bool autoEOI;$/;"	m	class:X86ISA::I8259
autoReload	src/dev/arm/timer_cpulocal.hh	/^            Bitfield<1>   autoReload;$/;"	m	class:CpuLocalTimer::Timer
auxNil	src/base/loader/coff_sym.h	/^#define auxNil /;"	d
auxc	src/dev/pcireg.h	/^        Bitfield<8,6>   auxc;$/;"	m	struct:PMCAP
avail	src/dev/pktfifo.hh	/^    unsigned avail() const { return _maxsize - _size - _reserved; }$/;"	f	class:PacketFifo
availSlots	src/cpu/inorder/resource.hh	/^    std::vector<int> availSlots;$/;"	m	class:Resource
available	src/base/cp_annotate.hh	/^    static bool available()                                 { return false; }$/;"	f	class:CPA
available	src/base/cp_annotate.hh	/^    static bool available()  { return true; }$/;"	f	class:CPA
averageReadBW	src/mem/comm_monitor.hh	/^        Stats::Formula averageReadBW;$/;"	m	struct:CommMonitor::MonitorStats
averageWriteBW	src/mem/comm_monitor.hh	/^        Stats::Formula averageWriteBW;$/;"	m	struct:CommMonitor::MonitorStats
avgBankLat	src/mem/dram_ctrl.hh	/^    Stats::Formula avgBankLat;$/;"	m	class:DRAMCtrl
avgBusLat	src/mem/dram_ctrl.hh	/^    Stats::Formula avgBusLat;$/;"	m	class:DRAMCtrl
avgGap	src/mem/dram_ctrl.hh	/^    Stats::Formula avgGap;$/;"	m	class:DRAMCtrl
avgMemAccLat	src/mem/dram_ctrl.hh	/^    Stats::Formula avgMemAccLat;$/;"	m	class:DRAMCtrl
avgMissLatency	src/mem/cache/base.hh	/^    Stats::Formula avgMissLatency[MemCmd::NUM_MEM_CMDS];$/;"	m	class:BaseCache
avgMshrMissLatency	src/mem/cache/base.hh	/^    Stats::Formula avgMshrMissLatency[MemCmd::NUM_MEM_CMDS];$/;"	m	class:BaseCache
avgMshrUncacheableLatency	src/mem/cache/base.hh	/^    Stats::Formula avgMshrUncacheableLatency[MemCmd::NUM_MEM_CMDS];$/;"	m	class:BaseCache
avgOccs	src/mem/cache/tags/base.hh	/^    Stats::Formula avgOccs;$/;"	m	class:BaseTags
avgQLat	src/mem/dram_ctrl.hh	/^    Stats::Formula avgQLat;$/;"	m	class:DRAMCtrl
avgRdBW	src/mem/dram_ctrl.hh	/^    Stats::Formula avgRdBW;$/;"	m	class:DRAMCtrl
avgRdBWSys	src/mem/dram_ctrl.hh	/^    Stats::Formula avgRdBWSys;$/;"	m	class:DRAMCtrl
avgRdQLen	src/mem/dram_ctrl.hh	/^    Stats::Average avgRdQLen;$/;"	m	class:DRAMCtrl
avgRefs	src/mem/cache/tags/base.hh	/^    Stats::Formula avgRefs;$/;"	m	class:BaseTags
avgVnicDistance	src/dev/sinic.hh	/^    Stats::Formula avgVnicDistance;$/;"	m	class:Sinic::Device
avgWrBW	src/mem/dram_ctrl.hh	/^    Stats::Formula avgWrBW;$/;"	m	class:DRAMCtrl
avgWrBWSys	src/mem/dram_ctrl.hh	/^    Stats::Formula avgWrBWSys;$/;"	m	class:DRAMCtrl
avgWrQLen	src/mem/dram_ctrl.hh	/^    Stats::Average avgWrQLen;$/;"	m	class:DRAMCtrl
avg_blocked	src/mem/cache/base.hh	/^    Stats::Formula avg_blocked;$/;"	m	class:BaseCache
avg_residency	src/cpu/ozone/back_end.hh	/^        Stats::Formula avg_residency;$/;"	m	class:BackEnd::InstQueue
avl	src/arch/x86/pagetable_walker.cc	/^    Bitfield<11, 9> avl;$/;"	m	namespace:X86ISA	file:
avl	src/arch/x86/regs/misc.hh	/^        Bitfield<52> avl; \/\/ Available To Software$/;"	m	namespace:X86ISA
avl	src/arch/x86/regs/misc.hh	/^        Bitfield<5> avl;$/;"	m	namespace:X86ISA
avoidQuiesceLiveLock	src/cpu/o3/commit.hh	/^    bool avoidQuiesceLiveLock;$/;"	m	class:DefaultCommit
avs	src/dev/arm/pl111.hh	/^        Bitfield<11> avs;$/;"	m	class:Pl111
aw	src/arch/arm/miscregs.hh	/^        Bitfield<5> aw;$/;"	m	namespace:ArmISA
b	src/arch/arm/miscregs.hh	/^        Bitfield<7>    b;       \/\/ Endianness support (dropped in ARMv7)$/;"	m	namespace:ArmISA
b	src/arch/x86/regs/misc.hh	/^        Bitfield<54> b; \/\/ Default Operand Size$/;"	m	namespace:X86ISA
b	src/arch/x86/types.hh	/^        Bitfield<0> b;$/;"	m	namespace:X86ISA
b	src/base/bigint.hh	/^    uint32_t b;$/;"	m	struct:m5_twin32_t
b	src/base/bigint.hh	/^    uint64_t b;$/;"	m	struct:m5_twin64_t
b0	src/arch/x86/regs/misc.hh	/^        Bitfield<0> b0;$/;"	m	namespace:X86ISA
b1	src/arch/x86/regs/misc.hh	/^        Bitfield<1> b1;$/;"	m	namespace:X86ISA
b2	src/arch/x86/regs/misc.hh	/^        Bitfield<2> b2;$/;"	m	namespace:X86ISA
b3	src/arch/x86/regs/misc.hh	/^        Bitfield<3> b3;$/;"	m	namespace:X86ISA
bCond	src/base/barrier.hh	/^    std::condition_variable bCond;$/;"	m	class:Barrier
bMutex	src/base/barrier.hh	/^    std::mutex bMutex;$/;"	m	class:Barrier
ba	src/arch/power/insts/condition.hh	/^    uint32_t ba;$/;"	m	class:PowerISA::CondLogicOp
ba	src/arch/power/types.hh	/^    Bitfield<20, 16> ba;$/;"	m	namespace:PowerISA
back	src/base/varargs.hh	/^    Argument& back() { return l.back(); }$/;"	f	class:VarArgs::List
back	src/base/varargs.hh	/^    const Argument& back() const { return l.back(); }$/;"	f	class:VarArgs::List
back	src/kern/tru64/mbuf.hh	/^        Addr    forw, back;     \/\/ 0x20, 0x28$/;"	m	struct:tru64::m_ext::ext_refq
backComSize	src/cpu/o3/O3CPU.py	/^    backComSize = Param.Unsigned(5, "Time buffer size for backwards communication")$/;"	v	class:DerivO3CPU
backEnd	src/cpu/ozone/cpu.hh	/^    BackEnd *backEnd;$/;"	m	class:OzoneCPU
backEnd	src/cpu/ozone/front_end.hh	/^    BackEnd *backEnd;$/;"	m	class:FrontEnd
backEndLatency	src/cpu/ozone/OzoneCPU.py	/^    backEndLatency = Param.Unsigned("Back end latency")$/;"	v	class:DerivOzoneCPU
backEndLatency	src/cpu/ozone/SimpleOzoneCPU.py	/^    backEndLatency = Param.Unsigned("Back end latency")$/;"	v	class:SimpleOzoneCPU
backEndLatency	src/cpu/ozone/simple_params.hh	/^    unsigned backEndLatency;$/;"	m	class:SimpleParams
backEndSquashLatency	src/cpu/ozone/OzoneCPU.py	/^    backEndSquashLatency = Param.Unsigned("Back end squash latency")$/;"	v	class:DerivOzoneCPU
backEndSquashLatency	src/cpu/ozone/SimpleOzoneCPU.py	/^    backEndSquashLatency = Param.Unsigned("Back end squash latency")$/;"	v	class:SimpleOzoneCPU
backEndSquashLatency	src/cpu/ozone/simple_params.hh	/^    unsigned backEndSquashLatency;$/;"	m	class:SimpleParams
backEndWidth	src/cpu/ozone/OzoneCPU.py	/^    backEndWidth = Param.Unsigned("Back end width")$/;"	v	class:DerivOzoneCPU
backEndWidth	src/cpu/ozone/SimpleOzoneCPU.py	/^    backEndWidth = Param.Unsigned("Back end width")$/;"	v	class:SimpleOzoneCPU
backEndWidth	src/cpu/ozone/simple_params.hh	/^    unsigned backEndWidth;$/;"	m	class:SimpleParams
backSked	src/cpu/inorder/inorder_dyn_inst.hh	/^    RSkedPtr backSked;$/;"	m	class:InOrderDynInst
backSked_end	src/cpu/inorder/inorder_dyn_inst.hh	/^    RSkedIt backSked_end;$/;"	m	class:InOrderDynInst
backdoor	src/dev/alpha/Tsunami.py	/^    backdoor = AlphaBackdoor(pio_addr=0x80200000000, disk=Parent.simple_disk)$/;"	v	class:Tsunami
backendLatency	src/mem/dram_ctrl.hh	/^    const Tick backendLatency;$/;"	m	class:DRAMCtrl
backingStore	src/mem/physical.hh	/^    std::vector<std::pair<AddrRange, uint8_t*> > backingStore;$/;"	m	class:PhysicalMemory
badMicroop	src/arch/x86/insts/badmicroop.cc	/^const StaticInstPtr badMicroop =$/;"	m	namespace:X86ISA	file:
badMode	src/arch/arm/types.hh	/^    badMode(OperatingMode mode)$/;"	f	namespace:ArmISA
badMode32	src/arch/arm/types.hh	/^    badMode32(OperatingMode mode)$/;"	f	namespace:ArmISA
badVPN2	src/arch/mips/pra_constants.hh	/^    Bitfield<22, 4>  badVPN2;$/;"	m	namespace:MipsISA
badaddrEvent	src/arch/alpha/tru64/system.hh	/^    BadAddrEvent *badaddrEvent;$/;"	m	class:Tru64AlphaSystem
baddr_t	src/dev/simple_disk.hh	/^    typedef uint64_t baddr_t;$/;"	t	class:SimpleDisk
bandwidth	src/mem/SimpleMemory.py	/^    bandwidth = Param.MemoryBandwidth('12.8GB\/s',$/;"	v	class:SimpleMemory
bandwidth	src/mem/simple_mem.hh	/^    const double bandwidth;$/;"	m	class:SimpleMemory
bandwidth_bins	src/mem/CommMonitor.py	/^    bandwidth_bins = Param.Unsigned('20', "# bins in bandwidth histograms")$/;"	v	class:CommMonitor
bandwidth_factor	src/mem/ruby/network/BasicLink.py	/^    bandwidth_factor = 16$/;"	v	class:BasicExtLink
bandwidth_factor	src/mem/ruby/network/BasicLink.py	/^    bandwidth_factor = 16$/;"	v	class:BasicIntLink
bandwidth_factor	src/mem/ruby/network/BasicLink.py	/^    bandwidth_factor = Param.Int("generic bandwidth factor, usually in bytes")$/;"	v	class:BasicLink
bank	src/mem/dram_ctrl.hh	/^        const uint8_t bank;$/;"	m	class:DRAMCtrl::DRAMPacket
bankBits	src/cpu/testers/traffic_gen/generators.hh	/^    const unsigned int bankBits;$/;"	m	class:DramGen
bankBits	src/mem/ruby/system/BankedArray.hh	/^    unsigned int bankBits;$/;"	m	class:BankedArray
bankId	src/mem/dram_ctrl.hh	/^        const uint16_t bankId;$/;"	m	class:DRAMCtrl::DRAMPacket
bankRef	src/mem/dram_ctrl.hh	/^        Bank& bankRef;$/;"	m	class:DRAMCtrl::DRAMPacket
bankType	src/arch/mips/isa.hh	/^        std::vector<BankType> bankType;$/;"	m	class:MipsISA::ISA
bank_bit_0	src/mem/ruby/system/RubyMemoryControl.py	/^    bank_bit_0 = Param.Int(8, "");$/;"	v	class:RubyMemoryControl
bank_busy_time	src/mem/ruby/system/RubyMemoryControl.py	/^    bank_busy_time = Param.Int(11, "");$/;"	v	class:RubyMemoryControl
bank_queue_size	src/mem/ruby/system/RubyMemoryControl.py	/^    bank_queue_size = Param.Int(12, "");$/;"	v	class:RubyMemoryControl
bankedIntPriority	src/dev/arm/gic_pl390.hh	/^    uint8_t bankedIntPriority[CPU_MAX][SGI_MAX + PPI_MAX];$/;"	m	class:Pl390
banks	src/mem/dram_ctrl.hh	/^    std::vector<std::vector<Bank> > banks;$/;"	m	class:DRAMCtrl
banks	src/mem/ruby/system/BankedArray.hh	/^    unsigned int banks;$/;"	m	class:BankedArray
banksPerRank	src/mem/dram_ctrl.hh	/^    const uint32_t banksPerRank;$/;"	m	class:DRAMCtrl
banks_per_rank	src/mem/DRAMCtrl.py	/^    banks_per_rank = 4$/;"	v	class:WideIO_200_x128
banks_per_rank	src/mem/DRAMCtrl.py	/^    banks_per_rank = 8$/;"	v	class:DDR3_1333_x64_DRAMSim2
banks_per_rank	src/mem/DRAMCtrl.py	/^    banks_per_rank = 8$/;"	v	class:DDR3_1600_x64
banks_per_rank	src/mem/DRAMCtrl.py	/^    banks_per_rank = 8$/;"	v	class:LPDDR2_S4_1066_x32
banks_per_rank	src/mem/DRAMCtrl.py	/^    banks_per_rank = 8$/;"	v	class:LPDDR3_1600_x32
banks_per_rank	src/mem/DRAMCtrl.py	/^    banks_per_rank = Param.Unsigned("Number of banks per rank")$/;"	v	class:DRAMCtrl
banks_per_rank	src/mem/ruby/system/RubyMemoryControl.py	/^    banks_per_rank = Param.Int(8, "");$/;"	v	class:RubyMemoryControl
bare_iron	src/arch/mips/MipsSystem.py	/^    bare_iron = Param.Bool(False, "Using Bare Iron Mode?")$/;"	v	class:MipsSystem
bare_iron	src/arch/mips/MipsSystem.py	/^    bare_iron = True$/;"	v	class:BareIronMipsSystem
barrier	src/sim/global_event.hh	/^    Barrier *barrier;$/;"	m	class:BaseGlobalEvent
barrierEvent	src/sim/global_event.hh	/^    std::vector<BarrierEvent *> barrierEvent;$/;"	m	class:BaseGlobalEvent
barrierInst	src/cpu/ozone/front_end.hh	/^    DynInstPtr barrierInst;$/;"	m	class:FrontEnd
base	src/arch/arm/insts/mem.hh	/^    IntRegIndex base;$/;"	m	class:ArmISA::Memory
base	src/arch/arm/insts/mem.hh	/^    IntRegIndex base;$/;"	m	class:ArmISA::RfeOp
base	src/arch/arm/insts/mem.hh	/^    IntRegIndex base;$/;"	m	class:ArmISA::Swap
base	src/arch/arm/insts/mem64.hh	/^    IntRegIndex base;$/;"	m	class:ArmISA::Memory64
base	src/arch/arm/insts/mem64.hh	/^    IntRegIndex base;$/;"	m	class:ArmISA::SysDC64
base	src/arch/arm/linux/process.hh	/^        int base;$/;"	m	struct:ArmLinuxProcessBits::SyscallTable
base	src/arch/mips/faults.hh	/^    virtual FaultVect base(ThreadContext *tc) const$/;"	f	class:MipsISA::MipsFaultBase
base	src/arch/x86/emulenv.hh	/^        RegIndex base;$/;"	m	struct:X86ISA::EmulEnv
base	src/arch/x86/insts/microldstop.hh	/^        const RegIndex base;$/;"	m	class:X86ISA::LdStOp
base	src/arch/x86/process.hh	/^            Addr base;$/;"	m	class:X86ISA::I386LiveProcess::VSyscallPage
base	src/arch/x86/process.hh	/^            Addr base;$/;"	m	class:X86ISA::X86_64LiveProcess::VSyscallPage
base	src/arch/x86/regs/misc.hh	/^        Bitfield<51, 12> base;$/;"	m	namespace:X86ISA
base	src/arch/x86/types.hh	/^        Bitfield<2,0> base;$/;"	m	namespace:X86ISA
base	src/base/cprintf_formats.hh	/^    enum { dec, hex, oct } base;$/;"	m	struct:cp::Format	typeref:enum:cp::Format::__anon37
base	src/cpu/timebuf.hh	/^    unsigned base;$/;"	m	class:TimeBuffer
baseAddr	src/base/loader/object_file.hh	/^        Addr     baseAddr;$/;"	m	struct:ObjectFile::Section
baseAddr	src/dev/ide_disk.hh	/^    uint32_t baseAddr;$/;"	m	struct:PrdEntry
baseAddr	src/dev/pcireg.h	/^        uint32_t baseAddr[6];$/;"	m	struct:PCIConfig::__anon80
baseAddr1	src/cpu/testers/memtest/memtest.hh	/^    Addr baseAddr1;             \/\/ fix this to option$/;"	m	class:MemTest
baseAddr2	src/cpu/testers/memtest/memtest.hh	/^    Addr baseAddr2;             \/\/ fix this to option$/;"	m	class:MemTest
baseCCRegIndex	src/cpu/o3/regfile.hh	/^    unsigned baseCCRegIndex;$/;"	m	class:PhysRegFile
baseCheck	src/base/statistics.cc	/^Info::baseCheck() const$/;"	f	class:Stats::Info
baseClasses	src/python/m5/SimObject.py	/^baseClasses = allClasses.copy()$/;"	v
baseCpu	src/cpu/thread_state.hh	/^    BaseCPU *baseCpu;$/;"	m	struct:ThreadState
baseEntries	src/arch/x86/bios/intelmp.hh	/^    std::vector<BaseConfigEntry *> baseEntries;$/;"	m	class:X86ISA::IntelMP::ConfigTable
baseEnums	src/python/m5/params.py	/^baseEnums = allEnums.copy()$/;"	v
baseFilename	src/sim/serialize.cc	/^const char *Checkpoint::baseFilename = "m5.cpt";$/;"	m	class:Checkpoint	file:
baseFilename	src/sim/serialize.hh	/^    static const char *baseFilename;$/;"	m	class:Checkpoint
baseFloatRegIndex	src/cpu/o3/regfile.hh	/^    unsigned baseFloatRegIndex;$/;"	m	class:PhysRegFile
baseHigh	src/arch/x86/regs/misc.hh	/^        Bitfield<63, 56> baseHigh;$/;"	m	namespace:X86ISA
baseInstances	src/python/m5/SimObject.py	/^baseInstances = instanceDict.copy()$/;"	v
baseIsSP	src/arch/arm/insts/mem64.hh	/^    bool baseIsSP;$/;"	m	class:ArmISA::Memory64
baseLow	src/arch/x86/regs/misc.hh	/^        Bitfield<39, 16> baseLow;$/;"	m	namespace:X86ISA
basePC	src/arch/x86/decoder.hh	/^    Addr basePC;$/;"	m	class:X86ISA::Decoder
baseParams	src/python/m5/params.py	/^baseParams = allParams.copy()$/;"	v
base_addr	src/arch/x86/linux/syscalls.cc	/^    uint32_t base_addr;$/;"	m	struct:UserDesc32	file:
base_addr	src/arch/x86/linux/syscalls.cc	/^    uint64_t base_addr;$/;"	m	struct:UserDesc64	file:
base_entries	src/arch/x86/bios/IntelMP.py	/^    base_entries = VectorParam.X86IntelMPBaseConfigEntry([],$/;"	v	class:X86IntelMPConfigTable
base_message	src/base/misc.hh	/^#define base_message(/;"	d
base_message_once	src/base/misc.hh	/^#define base_message_once(/;"	d
baseaddr	src/dev/arm/pl111.hh	/^        Bitfield<2> baseaddr;$/;"	m	class:Pl111
baseline_fault_vector_database	src/mem/ruby/network/fault_model/FaultModel.py	/^    baseline_fault_vector_database = VectorParam.Float([$/;"	v	class:FaultModel
basic_bus_busy_time	src/mem/ruby/system/RubyMemoryControl.py	/^    basic_bus_busy_time = Param.Int(2, "");$/;"	v	class:RubyMemoryControl
bb	src/arch/power/insts/condition.hh	/^    uint32_t bb;$/;"	m	class:PowerISA::CondLogicOp
bb	src/arch/power/types.hh	/^    Bitfield<15, 11> bb;$/;"	m	namespace:PowerISA
bbMap	src/cpu/simple/atomic.hh	/^    m5::hash_map<BasicBlockRange, BBInfo> bbMap;$/;"	m	class:AtomicSimpleCPU
bcd	src/dev/arm/pl111.hh	/^        Bitfield<26> bcd;$/;"	m	class:Pl111
bcd	src/dev/intel_8254_timer.hh	/^        Bitfield<0> bcd;$/;"	m	class:Intel8254Timer
bcdize	src/dev/mc146818.cc	/^bcdize(uint8_t val)$/;"	f	file:
bd	src/arch/mips/pra_constants.hh	/^    Bitfield<31>     bd;$/;"	m	namespace:MipsISA
bd	src/arch/power/types.hh	/^    Bitfield<15,  2> bd;$/;"	m	namespace:PowerISA
bd	src/arch/x86/regs/misc.hh	/^        Bitfield<13> bd;$/;"	m	namespace:X86ISA
bdelayDoneSeqNum	src/cpu/inorder/pipeline_stage.hh	/^    Addr bdelayDoneSeqNum[ThePipeline::MaxThreads];$/;"	m	class:PipelineStage
bdelayDoneSeqNum	src/cpu/o3/decode.hh	/^    Addr bdelayDoneSeqNum[Impl::MaxThreads];$/;"	m	class:DefaultDecode
bdflush	src/kern/linux/linux_syscalls.hh	/^    bdflush = 9,$/;"	e	enum:SystemCalls::__anon87
be	src/arch/mips/pra_constants.hh	/^    Bitfield<15>     be;$/;"	m	namespace:MipsISA
be	src/cpu/ozone/back_end.hh	/^        BackEnd *be;$/;"	m	class:BackEnd::DCacheCompletionEvent
be	src/cpu/ozone/back_end.hh	/^        BackEnd *be;$/;"	m	class:BackEnd::InstQueue
be	src/cpu/ozone/back_end.hh	/^        BackEnd *be;$/;"	m	class:BackEnd::LdWritebackEvent
be	src/cpu/ozone/inorder_back_end.hh	/^        InorderBackEnd *be;$/;"	m	class:InorderBackEnd::DCacheCompletionEvent
be	src/cpu/ozone/lsq_unit.hh	/^    BackEnd *be;$/;"	m	class:OzoneLSQ
be	src/cpu/ozone/lw_back_end.hh	/^        LWBackEnd<Impl> *be;$/;"	m	class:LWBackEnd::TrapEvent
be	src/cpu/ozone/lw_lsq.hh	/^    BackEnd *be;$/;"	m	class:OzoneLWLSQ
bebo	src/dev/arm/pl111.hh	/^        Bitfield<9> bebo;$/;"	m	class:Pl111
begin	src/arch/sparc/tlb_map.hh	/^    begin()$/;"	f	class:SparcISA::TlbMap
begin	src/base/addr_range_map.hh	/^    begin() const$/;"	f	class:AddrRangeMap
begin	src/base/addr_range_map.hh	/^    begin()$/;"	f	class:AddrRangeMap
begin	src/base/stats/text.cc	/^Text::begin()$/;"	f	class:Stats::Text
begin	src/base/varargs.hh	/^    const_iterator begin() const { return l.begin(); }$/;"	f	class:VarArgs::List
begin	src/base/varargs.hh	/^    iterator begin() { return l.begin(); }$/;"	f	class:VarArgs::List
begin	src/cpu/inorder/resource_sked.cc	/^ResourceSked::begin()$/;"	f	class:ResourceSked
begin	src/dev/pktfifo.hh	/^    iterator begin() { return fifo.begin(); }$/;"	f	class:PacketFifo
behind_pci	src/dev/x86/Pc.py	/^    behind_pci = IsaFake(pio_addr=x86IOAddress(0xcf8), pio_size=8)$/;"	v	class:Pc
beim	src/dev/arm/pl011.hh	/^        Bitfield<9> beim;$/;"	m	class:Pl011
bepo	src/dev/arm/pl111.hh	/^        Bitfield<10> bepo;$/;"	m	class:Pl111
best	src/base/cprintf_formats.hh	/^    enum { best, fixed, scientific } float_format;$/;"	e	enum:cp::Format::__anon39
betog	src/sim/byteswap.hh	/^    inline T betog(T value) {return betole(value);}$/;"	f	namespace:LittleEndianGuest
betog	src/sim/byteswap.hh	/^    inline T betog(T value) {return value;}$/;"	f	namespace:BigEndianGuest
betoh	src/sim/byteswap.hh	/^template <typename T> inline T betoh(T value) {return swap_byte(value);}$/;"	f
betoh	src/sim/byteswap.hh	/^template <typename T> inline T betoh(T value) {return value;}$/;"	f
betole	src/sim/byteswap.hh	/^template <typename T> inline T betole(T value) {return swap_byte(value);}$/;"	f
bev	src/arch/mips/pra_constants.hh	/^    Bitfield<22>     bev;$/;"	m	namespace:MipsISA
bf	src/arch/power/insts/condition.hh	/^    uint32_t bf;$/;"	m	class:PowerISA::CondMoveOp
bf	src/arch/power/types.hh	/^    Bitfield<25, 23> bf;$/;"	m	namespace:PowerISA
bfa	src/arch/power/insts/condition.hh	/^    uint32_t bfa;$/;"	m	class:PowerISA::CondMoveOp
bfa	src/arch/power/types.hh	/^    Bitfield<20, 18> bfa;$/;"	m	namespace:PowerISA
bgr	src/dev/arm/pl111.hh	/^        Bitfield<8> bgr;$/;"	m	class:Pl111
bgr444	src/base/vnc/convert.hh	/^        bgr444,$/;"	e	enum:VideoConvert::Mode
bgr4444	src/base/vnc/convert.hh	/^        bgr4444,$/;"	e	enum:VideoConvert::Mode
bgr565	src/base/vnc/convert.hh	/^        bgr565,$/;"	e	enum:VideoConvert::Mode
bgr888	src/base/vnc/convert.hh	/^        bgr888,$/;"	e	enum:VideoConvert::Mode
bgr8888	src/base/vnc/convert.hh	/^        bgr8888,$/;"	e	enum:VideoConvert::Mode
bgr8888rgb8888	src/base/vnc/convert.cc	/^VideoConvert::bgr8888rgb8888(const uint8_t *fb) const$/;"	f	class:VideoConvert
bi	src/arch/power/insts/branch.hh	/^    uint32_t bi;$/;"	m	class:PowerISA::BranchCond
bi	src/arch/power/types.hh	/^    Bitfield<20, 16> bi;$/;"	m	namespace:PowerISA
bigPkt	src/cpu/simple/timing.hh	/^        PacketPtr bigPkt;$/;"	m	class:TimingSimpleCPU::SplitFragmentSenderState
bigThumb	src/arch/arm/decoder.hh	/^    bool bigThumb;$/;"	m	class:ArmISA::Decoder
bigThumb	src/arch/arm/types.hh	/^        Bitfield<35>     bigThumb;$/;"	m	namespace:ArmISA
big_endian	src/dev/arm/hdlcd.hh	/^        Bitfield<31>   big_endian;$/;"	m	class:HDLcd
bigendian	src/base/vnc/vncinput.hh	/^        uint8_t bigendian;$/;"	m	struct:VncInput::PixelFormat
binaryOp	src/arch/arm/insts/vfp.cc	/^FpOp::binaryOp(FPSCR &fpscr, fpType op1, fpType op2,$/;"	f	class:ArmISA::FpOp
bind	src/kern/tru64/tru64_syscalls.hh	/^        bind = 104,$/;"	e	enum:SystemCalls::__anon102
bind	src/mem/port.cc	/^MasterPort::bind(BaseSlavePort& slave_port)$/;"	f	class:MasterPort
bind	src/mem/port.cc	/^SlavePort::bind(MasterPort& master_port)$/;"	f	class:SlavePort
bisect_left	src/python/m5/util/sorteddict.py	/^from bisect import bisect_left, bisect_right$/;"	i
bisect_right	src/python/m5/util/sorteddict.py	/^from bisect import bisect_left, bisect_right$/;"	i
bist	src/dev/pcireg.h	/^        uint8_t bist;$/;"	m	struct:PCIConfig::__anon80
bitIndex	src/mem/ruby/common/NetDest.hh	/^    NodeID bitIndex(NodeID index) const { return index; }$/;"	f	class:NetDest
bitOp1ArgRE	src/arch/isa_parser.py	/^bitOp1ArgRE = re.compile(r'<\\s*(\\w+)\\s*:\\s*>')$/;"	v
bitOpExprRE	src/arch/isa_parser.py	/^bitOpExprRE = re.compile(r'\\)<\\s*(\\w+)\\s*:\\s*(\\w+)\\s*>')$/;"	v
bitOpWordRE	src/arch/isa_parser.py	/^bitOpWordRE = re.compile(r'(?<![\\w\\.])([\\w\\.]+)<\\s*(\\w+)\\s*:\\s*(\\w+)\\s*>')$/;"	v
bitRemove	src/mem/ruby/common/Address.hh	/^Address::bitRemove(unsigned int small, unsigned int big) const$/;"	f	class:Address
bitSelect	src/mem/ruby/common/Address.hh	/^Address::bitSelect(unsigned int small, unsigned int big) const$/;"	f	class:Address
bitrev	src/arch/mips/dsp.cc	/^MipsISA::bitrev(int32_t value)$/;"	f	class:MipsISA
bits	src/base/bitfield.hh	/^bits(T val, int bit)$/;"	f
bits	src/base/bitfield.hh	/^bits(T val, int first, int last)$/;"	f
bits	src/dev/pcireg.h	/^    uint64_t bits;$/;"	m	struct:MSIXPbaEntry
bitsToFp	src/arch/arm/insts/vfp.hh	/^bitsToFp(uint64_t bits, double junk)$/;"	f	namespace:ArmISA
bitsToFp	src/arch/arm/insts/vfp.hh	/^bitsToFp(uint64_t bits, float junk)$/;"	f	namespace:ArmISA
blank_space	src/base/cprintf_formats.hh	/^    bool blank_space;$/;"	m	struct:cp::Format
bldrev	src/arch/alpha/aout_machdep.h	/^    uint16_t    bldrev;         \/\/\/< ???$/;"	m	struct:aout_exechdr
blk	src/mem/cache/blk.hh	/^    CacheBlk *blk;$/;"	m	class:CacheBlkPrintWrapper
blkAlign	src/mem/cache/tags/fa_lru.hh	/^    Addr blkAlign(Addr addr) const$/;"	f	class:FALRU
blkAlign	src/mem/cache/tags/lru.hh	/^    Addr blkAlign(Addr addr) const$/;"	f	class:LRU
blkMask	src/mem/cache/tags/lru.hh	/^    unsigned blkMask;$/;"	m	class:LRU
blkSize	src/mem/cache/base.hh	/^    const unsigned blkSize;$/;"	m	class:BaseCache
blkSize	src/mem/cache/prefetch/base.hh	/^    int blkSize;$/;"	m	class:BasePrefetcher
blkSize	src/mem/cache/tags/base.hh	/^    const unsigned blkSize;$/;"	m	class:BaseTags
blks	src/mem/cache/tags/cacheset.hh	/^    Blktype **blks;$/;"	m	class:CacheSet
blks	src/mem/cache/tags/fa_lru.hh	/^    FALRUBlk *blks;$/;"	m	class:FALRU
blks	src/mem/cache/tags/lru.hh	/^    BlkType *blks;$/;"	m	class:LRU
blobHelper	src/mem/port_proxy.cc	/^PortProxy::blobHelper(Addr addr, uint8_t *p, int size, MemCmd cmd) const$/;"	f	class:PortProxy
block	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::block(ThreadID tid)$/;"	f	class:PipelineStage
block	src/cpu/inorder/resources/fetch_unit.hh	/^        uint8_t *block;$/;"	m	struct:FetchUnit::FetchBlock
block	src/cpu/o3/decode_impl.hh	/^DefaultDecode<Impl>::block(ThreadID tid)$/;"	f	class:DefaultDecode
block	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::block(ThreadID tid)$/;"	f	class:DefaultIEW
block	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::block(ThreadID tid)$/;"	f	class:DefaultRename
blockAddr	src/cpu/testers/memtest/memtest.hh	/^    Addr blockAddr(Addr addr)$/;"	f	class:MemTest
blockAddrMask	src/cpu/testers/memtest/memtest.hh	/^    Addr blockAddrMask;$/;"	m	class:MemTest
blockAlign	src/mem/cache/base.hh	/^    Addr blockAlign(Addr addr) const { return (addr & ~(Addr(blkSize - 1))); }$/;"	f	class:BaseCache
blockBits	src/cpu/testers/traffic_gen/generators.hh	/^    const unsigned int blockBits;$/;"	m	class:DramGen
blockDueToBuffer	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::blockDueToBuffer(ThreadID tid)$/;"	f	class:PipelineStage
blockOnQueue	src/mem/ruby/slicc_interface/AbstractController.cc	/^AbstractController::blockOnQueue(Address addr, MessageBuffer* port)$/;"	f	class:AbstractController
blockSize	src/cpu/testers/memtest/memtest.hh	/^    unsigned blockSize;$/;"	m	class:MemTest
blockSizeBits	src/cpu/testers/networktest/networktest.hh	/^    unsigned blockSizeBits;$/;"	m	class:NetworkTest
blockThisCycle	src/cpu/o3/rename.hh	/^    bool blockThisCycle;$/;"	m	class:DefaultRename
block_offset	src/cpu/testers/networktest/NetworkTest.py	/^    block_offset = Param.Int(6, "block offset in bits")$/;"	v	class:NetworkTest
block_size	src/mem/cache/tags/Tags.py	/^    block_size = Param.Int(Parent.cache_line_size, "block size in bytes")$/;"	v	class:BaseTags
block_size_bytes	src/mem/ruby/system/RubySystem.py	/^    block_size_bytes = Param.UInt32(64,$/;"	v	class:RubySystem
blocked	src/mem/cache/base.hh	/^        bool blocked;$/;"	m	class:BaseCache::CacheSlavePort
blocked	src/mem/cache/base.hh	/^    uint8_t blocked;$/;"	m	class:BaseCache
blockedCycle	src/mem/cache/base.hh	/^    Cycles blockedCycle;$/;"	m	class:BaseCache
blockedLoadSeqNum	src/cpu/o3/lsq_unit.hh	/^    InstSeqNum blockedLoadSeqNum;$/;"	m	class:LSQUnit
blockedLoadSeqNum	src/cpu/ozone/lw_lsq.hh	/^    InstSeqNum blockedLoadSeqNum;$/;"	m	class:OzoneLWLSQ
blocked_causes	src/mem/cache/base.hh	/^    Stats::Vector blocked_causes;$/;"	m	class:BaseCache
blocked_cycles	src/mem/cache/base.hh	/^    Stats::Vector blocked_cycles;$/;"	m	class:BaseCache
blocksInUse	src/cpu/inorder/resources/fetch_unit.cc	/^FetchUnit::blocksInUse()$/;"	f	class:FetchUnit
blocksize	src/cpu/testers/traffic_gen/generators.hh	/^        Addr blocksize;$/;"	m	struct:TraceGen::TraceElement
blocksize	src/cpu/testers/traffic_gen/generators.hh	/^    const Addr blocksize;$/;"	m	class:LinearGen
blocksize	src/cpu/testers/traffic_gen/generators.hh	/^    const Addr blocksize;$/;"	m	class:RandomGen
blue	src/base/vnc/convert.hh	/^        Bitfield<15,11> blue;$/;"	m	class:VideoConvert
blue	src/base/vnc/convert.hh	/^        Bitfield<23,16> blue;$/;"	m	class:VideoConvert
blue	src/base/vnc/convert.hh	/^        Bitfield<7,0> blue;$/;"	m	class:VideoConvert
blue_select	src/dev/arm/hdlcd.hh	/^    ColorSelectReg blue_select;     \/**< Blue color select register *\/$/;"	m	class:HDLcd
bluemax	src/base/vnc/vncinput.hh	/^        uint16_t bluemax;$/;"	m	struct:VncInput::PixelFormat
blueshift	src/base/vnc/vncinput.hh	/^        uint8_t blueshift;$/;"	m	struct:VncInput::PixelFormat
bmEnabled	src/dev/ide_ctrl.hh	/^    bool bmEnabled;$/;"	m	class:IdeController
bmiAddr	src/dev/ide_ctrl.hh	/^    Addr bmiAddr, bmiSize;$/;"	m	class:IdeController
bmiRegs	src/dev/ide_ctrl.hh	/^        } bmiRegs;$/;"	m	struct:IdeController::Channel	typeref:struct:IdeController::Channel::BMIRegs
bmiSize	src/dev/ide_ctrl.hh	/^    Addr bmiAddr, bmiSize;$/;"	m	class:IdeController
bmidtp	src/dev/ide_ctrl.hh	/^            uint32_t bmidtp;$/;"	m	struct:IdeController::Channel::BMIRegs
bmp	src/dev/arm/hdlcd.hh	/^    Bitmap *bmp;$/;"	m	class:HDLcd
bmp	src/dev/arm/pl111.hh	/^    Bitmap *bmp;$/;"	m	class:Pl111
bo	src/arch/power/insts/branch.hh	/^    uint32_t bo;$/;"	m	class:PowerISA::BranchCond
bo	src/arch/power/types.hh	/^    Bitfield<25, 21> bo;$/;"	m	namespace:PowerISA
bool_option	src/python/m5/options.py	/^    def bool_option(self, name, default, help):$/;"	m	class:OptionParser
bootReleaseAddr	src/arch/arm/linux/system.hh	/^    Addr bootReleaseAddr;$/;"	m	class:LinuxArmSystem
bootUncacheability	src/arch/arm/tlb.hh	/^    bool bootUncacheability;$/;"	m	class:ArmISA::TLB
boot_cpu_frequency	src/arch/alpha/AlphaSystem.py	/^    boot_cpu_frequency = Param.Frequency(Self.cpu[0].clk_domain.clock.frequency,$/;"	v	class:LinuxAlphaSystem
boot_cpu_frequency	src/arch/mips/MipsSystem.py	/^    boot_cpu_frequency = Param.Frequency(Self.cpu[0].clk_domain.clock.frequency,$/;"	v	class:LinuxMipsSystem
boot_loader	src/arch/arm/ArmSystem.py	/^    boot_loader = Param.String("", "File that contains the boot loader code if any")$/;"	v	class:ArmSystem
boot_osflags	src/sim/System.py	/^    boot_osflags = Param.String("a", "boot flags to pass to the kernel")$/;"	v
boot_release_addr	src/arch/arm/ArmSystem.py	/^                                       "spin waiting boot in the loader")$/;"	v	class:LinuxArmSystem
bootldr	src/arch/arm/system.hh	/^    ObjectFile *bootldr;$/;"	m	class:ArmSystem
bootstrap	src/arch/x86/bios/IntelMP.py	/^    bootstrap = Param.Bool(False, 'if this is the bootstrap processor')$/;"	v	class:X86IntelMPProcessor
bottom2	src/arch/arm/types.hh	/^        Bitfield<1, 0> bottom2;$/;"	m	namespace:ArmISA
bottom3	src/arch/x86/types.hh	/^        Bitfield<2,0> bottom3;$/;"	m	namespace:X86ISA
bottomDW	src/dev/x86/i82094aa.hh	/^        Bitfield<31, 0> bottomDW;$/;"	m	class:X86ISA::I82094AA
bottomReserved	src/dev/x86/i82094aa.hh	/^        Bitfield<31, 17> bottomReserved;$/;"	m	class:X86ISA::I82094AA
bpHistory	src/cpu/pred/bpred_unit.hh	/^        void *bpHistory;$/;"	m	struct:BPredUnit::PredictorHistory
bpc0	src/arch/mips/dt_constants.hh	/^    Bitfield<2,  0>  bpc0;$/;"	m	namespace:MipsISA
bpc1	src/arch/mips/dt_constants.hh	/^    Bitfield<5,  3>  bpc1;$/;"	m	namespace:MipsISA
bpc10	src/arch/mips/dt_constants.hh	/^    Bitfield<5,  3>  bpc10;$/;"	m	namespace:MipsISA
bpc11	src/arch/mips/dt_constants.hh	/^    Bitfield<8,  6>  bpc11;$/;"	m	namespace:MipsISA
bpc12	src/arch/mips/dt_constants.hh	/^    Bitfield<11, 9>  bpc12;$/;"	m	namespace:MipsISA
bpc13	src/arch/mips/dt_constants.hh	/^    Bitfield<14, 12> bpc13;$/;"	m	namespace:MipsISA
bpc14	src/arch/mips/dt_constants.hh	/^    Bitfield<17, 15> bpc14;$/;"	m	namespace:MipsISA
bpc2	src/arch/mips/dt_constants.hh	/^    Bitfield<8,  6>  bpc2;$/;"	m	namespace:MipsISA
bpc3	src/arch/mips/dt_constants.hh	/^    Bitfield<11, 9>  bpc3;$/;"	m	namespace:MipsISA
bpc4	src/arch/mips/dt_constants.hh	/^    Bitfield<14, 12> bpc4;$/;"	m	namespace:MipsISA
bpc5	src/arch/mips/dt_constants.hh	/^    Bitfield<17, 15> bpc5;$/;"	m	namespace:MipsISA
bpc6	src/arch/mips/dt_constants.hh	/^    Bitfield<20, 18> bpc6;$/;"	m	namespace:MipsISA
bpc7	src/arch/mips/dt_constants.hh	/^    Bitfield<23, 21> bpc7;$/;"	m	namespace:MipsISA
bpc8	src/arch/mips/dt_constants.hh	/^    Bitfield<26, 24> bpc8;$/;"	m	namespace:MipsISA
bpc9	src/arch/mips/dt_constants.hh	/^    Bitfield<2,  0>  bpc9;$/;"	m	namespace:MipsISA
bpp	src/base/vnc/vncinput.hh	/^        uint8_t bpp;$/;"	m	struct:VncInput::PixelFormat
bpp1	src/dev/arm/pl111.hh	/^        bpp1 = 0,$/;"	e	enum:Pl111::LcdMode
bpp12	src/dev/arm/pl111.hh	/^        bpp12$/;"	e	enum:Pl111::LcdMode
bpp16	src/dev/arm/pl111.hh	/^        bpp16,$/;"	e	enum:Pl111::LcdMode
bpp16m565	src/dev/arm/pl111.hh	/^        bpp16m565,$/;"	e	enum:Pl111::LcdMode
bpp2	src/dev/arm/pl111.hh	/^        bpp2,$/;"	e	enum:Pl111::LcdMode
bpp24	src/dev/arm/pl111.hh	/^        bpp24,$/;"	e	enum:Pl111::LcdMode
bpp4	src/dev/arm/pl111.hh	/^        bpp4,$/;"	e	enum:Pl111::LcdMode
bpp8	src/dev/arm/pl111.hh	/^        bpp8,$/;"	e	enum:Pl111::LcdMode
bpt	src/arch/alpha/osfpal.hh	/^        bpt = 0x80,$/;"	e	enum:PAL::__anon3
braced	src/mem/slicc/generate/tex.py	/^    braced = "<>"$/;"	v	class:tex_formatter
braced	src/python/m5/util/code_formatter.py	/^    braced = r'{}'$/;"	v	class:code_formatter
branchAddr	src/cpu/o3/comm.hh	/^        uint64_t branchAddr;$/;"	m	struct:TimeBufStruct::decodeComm
branchCount	src/cpu/o3/comm.hh	/^        unsigned branchCount;$/;"	m	struct:TimeBufStruct::decodeComm
branchCount	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::branchCount()$/;"	f	class:DefaultFetch
branchMispredict	src/cpu/o3/comm.hh	/^        bool branchMispredict;$/;"	m	struct:TimeBufStruct::decodeComm
branchMispredict	src/cpu/o3/comm.hh	/^    bool branchMispredict[Impl::MaxThreads];$/;"	m	struct:DefaultIEWDefaultCommit
branchMispredicts	src/cpu/o3/commit.hh	/^    Stats::Scalar branchMispredicts;$/;"	m	class:DefaultCommit
branchMispredicts	src/cpu/o3/iew.hh	/^    Stats::Formula branchMispredicts;$/;"	m	class:DefaultIEW
branchPred	src/cpu/inorder/InOrderCPU.py	/^    branchPred = Param.BranchPredictor(BranchPredictor(numThreads =$/;"	v	class:InOrderCPU
branchPred	src/cpu/inorder/resources/branch_predictor.hh	/^    BPredUnit *branchPred;$/;"	m	class:BranchPredictor
branchPred	src/cpu/o3/O3CPU.py	/^    branchPred = Param.BranchPredictor(BranchPredictor(numThreads =$/;"	v	class:DerivO3CPU
branchPred	src/cpu/o3/fetch.hh	/^    BPredUnit *branchPred;$/;"	m	class:DefaultFetch
branchPred	src/cpu/ozone/front_end.hh	/^    BranchPred branchPred;$/;"	m	class:FrontEnd
branchPred	src/cpu/simple/BaseSimpleCPU.py	/^    branchPred = Param.BranchPredictor(NULL, "Branch Predictor")$/;"	v	class:BaseSimpleCPU
branchPred	src/cpu/simple/base.hh	/^    BPredUnit *branchPred;$/;"	m	class:BaseSimpleCPU
branchRate	src/cpu/o3/fetch.hh	/^    Stats::Formula branchRate;$/;"	m	class:DefaultFetch
branchRate	src/cpu/ozone/front_end.hh	/^    Stats::Formula branchRate;$/;"	m	class:FrontEnd
branchTaken	src/cpu/o3/comm.hh	/^        bool branchTaken; \/\/ *F$/;"	m	struct:TimeBufStruct::commitComm
branchTaken	src/cpu/o3/comm.hh	/^        bool branchTaken;$/;"	m	struct:TimeBufStruct::decodeComm
branchTaken	src/cpu/o3/comm.hh	/^    bool branchTaken[Impl::MaxThreads];$/;"	m	struct:DefaultIEWDefaultCommit
branchTarget	src/arch/arm/insts/branch64.cc	/^BranchImm64::branchTarget(const ArmISA::PCState &branchPC) const$/;"	f	class:ArmISA::BranchImm64
branchTarget	src/arch/arm/insts/branch64.cc	/^BranchImmImmReg64::branchTarget(const ArmISA::PCState &branchPC) const$/;"	f	class:ArmISA::BranchImmImmReg64
branchTarget	src/arch/arm/insts/branch64.cc	/^BranchImmReg64::branchTarget(const ArmISA::PCState &branchPC) const$/;"	f	class:ArmISA::BranchImmReg64
branchTarget	src/arch/power/insts/branch.cc	/^BranchNonPCRel::branchTarget(const PowerISA::PCState &pc) const$/;"	f	class:BranchNonPCRel
branchTarget	src/arch/power/insts/branch.cc	/^BranchNonPCRelCond::branchTarget(const PowerISA::PCState &pc) const$/;"	f	class:BranchNonPCRelCond
branchTarget	src/arch/power/insts/branch.cc	/^BranchPCRel::branchTarget(const PowerISA::PCState &pc) const$/;"	f	class:BranchPCRel
branchTarget	src/arch/power/insts/branch.cc	/^BranchPCRelCond::branchTarget(const PowerISA::PCState &pc) const$/;"	f	class:BranchPCRelCond
branchTarget	src/arch/power/insts/branch.cc	/^BranchRegCond::branchTarget(ThreadContext *tc) const$/;"	f	class:BranchRegCond
branchTarget	src/cpu/base_dyn_inst.hh	/^    TheISA::PCState branchTarget() const$/;"	f	class:BaseDynInst
branchTarget	src/cpu/inorder/inorder_dyn_inst.hh	/^    TheISA::PCState branchTarget() const$/;"	f	class:InOrderDynInst
branchTarget	src/cpu/static_inst.cc	/^StaticInst::branchTarget(ThreadContext *tc) const$/;"	f	class:StaticInst
branchTarget	src/cpu/static_inst.cc	/^StaticInst::branchTarget(const TheISA::PCState &pc) const$/;"	f	class:StaticInst
branching	src/arch/arm/types.hh	/^        branching() const$/;"	f	class:ArmISA::PCState
branching	src/arch/generic/types.hh	/^    branching() const$/;"	f	class:GenericISA::DelaySlotPCState
branching	src/arch/generic/types.hh	/^    branching() const$/;"	f	class:GenericISA::DelaySlotUPCState
branching	src/arch/generic/types.hh	/^    branching() const$/;"	f	class:GenericISA::SimplePCState
branching	src/arch/generic/types.hh	/^    branching() const$/;"	f	class:GenericISA::UPCState
branching	src/arch/x86/types.hh	/^        branching() const$/;"	f	class:X86ISA::PCState
brar	src/dev/ns_gige.hh	/^    uint32_t    brar;$/;"	m	struct:dp_regs
brdr	src/dev/ns_gige.hh	/^    uint32_t    brdr;$/;"	m	struct:dp_regs
break_ipl	src/arch/alpha/ev5.cc	/^int break_ipl = -1;$/;"	m	namespace:AlphaISA	file:
break_iter_t	src/base/remote_gdb.hh	/^    typedef break_map_t::iterator break_iter_t;$/;"	t	class:BaseRemoteGDB
break_map_t	src/base/remote_gdb.hh	/^    typedef std::map<Addr, HardBreakpoint *> break_map_t;$/;"	t	class:BaseRemoteGDB
break_type	src/base/remote_gdb.cc	/^BaseRemoteGDB::break_type(char c)$/;"	f	class:BaseRemoteGDB
breakpoint	src/arch/mips/system.cc	/^MipsSystem::breakpoint()$/;"	f	class:MipsSystem
breakpoint	src/arch/null/remote_gdb.hh	/^    bool breakpoint() { return false; }$/;"	f	class:BaseRemoteGDB
breakpoint	src/base/debug.cc	/^breakpoint()$/;"	f	namespace:Debug
breakpoint	src/base/remote_gdb.hh	/^    virtual bool breakpoint()$/;"	f	class:BaseRemoteGDB
breakpoint	src/sim/system.cc	/^bool System::breakpoint()$/;"	f	class:System
bridge	src/mem/bridge.hh	/^        Bridge& bridge;$/;"	m	class:Bridge::BridgeMasterPort
bridge	src/mem/bridge.hh	/^        Bridge& bridge;$/;"	m	class:Bridge::BridgeSlavePort
brief_copyright	src/python/m5/main.py	/^    "gem5 is copyrighted software; use the --copyright option for details."$/;"	v
brk	src/kern/linux/linux_syscalls.hh	/^    brk = 11,$/;"	e	enum:SystemCalls::__anon87
brkFunc	src/sim/syscall_emul.cc	/^brkFunc(SyscallDesc *desc, int num, LiveProcess *p, ThreadContext *tc)$/;"	f
brk_point	src/sim/process.hh	/^    Addr brk_point;             \/\/ top of the data segment$/;"	m	class:Process
broadcast	src/base/inet.hh	/^    bool broadcast() const { return data[0] == 0xff; }$/;"	f	struct:Net::EthAddr
broadcast	src/mem/ruby/common/NetDest.cc	/^NetDest::broadcast()$/;"	f	class:NetDest
broadcast	src/mem/ruby/common/NetDest.cc	/^NetDest::broadcast(MachineType machineType)$/;"	f	class:NetDest
broadcast	src/mem/ruby/common/Set.cc	/^Set::broadcast()$/;"	f	class:Set
broadcast	src/mem/ruby/slicc_interface/RubySlicc_ComponentMapping.hh	/^broadcast(MachineType type)$/;"	f
bs	src/arch/x86/regs/misc.hh	/^        Bitfield<14> bs;$/;"	m	namespace:X86ISA
bsize	src/arch/alpha/aout_machdep.h	/^    uint64_t    bsize;          \/\/\/< bss segment size$/;"	m	struct:aout_exechdr
bsize	src/base/loader/exec_ecoff.h	/^        coff_ulong  bsize;$/;"	m	struct:ecoff_aouthdr
bsp	src/arch/x86/regs/misc.hh	/^        Bitfield<8> bsp;$/;"	m	namespace:X86ISA
bss	src/base/loader/object_file.hh	/^    Section bss;$/;"	m	class:ObjectFile
bssBase	src/base/loader/object_file.hh	/^    Addr bssBase() const { return bss.baseAddr; }$/;"	f	class:ObjectFile
bssSize	src/base/loader/object_file.hh	/^    size_t bssSize() const { return bss.size; }$/;"	f	class:ObjectFile
bss_start	src/arch/alpha/aout_machdep.h	/^    uint64_t    bss_start;      \/\/\/< bss base address$/;"	m	struct:aout_exechdr
bss_start	src/base/loader/exec_ecoff.h	/^        coff_ulong  bss_start;$/;"	m	struct:ecoff_aouthdr
bsu	src/arch/arm/miscregs.hh	/^        Bitfield<11, 10> bsu;$/;"	m	namespace:ArmISA
bt	src/arch/power/insts/condition.hh	/^    uint32_t bt;$/;"	m	class:PowerISA::CondLogicOp
bt	src/arch/power/types.hh	/^    Bitfield<25, 21> bt;$/;"	m	namespace:PowerISA
bt	src/arch/x86/regs/misc.hh	/^        Bitfield<15> bt;$/;"	m	namespace:X86ISA
bt	src/base/loader/coff_sym.h	/^    unsigned bt  : 6;   \/* basic type *\/$/;"	m	struct:__anon41
btAdr	src/base/loader/coff_symconst.h	/^#define btAdr /;"	d
btBit	src/base/loader/coff_symconst.h	/^#define btBit /;"	d
btChar	src/base/loader/coff_symconst.h	/^#define btChar /;"	d
btComplex	src/base/loader/coff_symconst.h	/^#define btComplex /;"	d
btDComplex	src/base/loader/coff_symconst.h	/^#define btDComplex /;"	d
btDouble	src/base/loader/coff_symconst.h	/^#define btDouble /;"	d
btEnum	src/base/loader/coff_symconst.h	/^#define btEnum /;"	d
btFixedDec	src/base/loader/coff_symconst.h	/^#define btFixedDec /;"	d
btFloat	src/base/loader/coff_symconst.h	/^#define btFloat /;"	d
btFloatDec	src/base/loader/coff_symconst.h	/^#define btFloatDec /;"	d
btIndirect	src/base/loader/coff_symconst.h	/^#define btIndirect /;"	d
btInt	src/base/loader/coff_symconst.h	/^#define btInt /;"	d
btLong	src/base/loader/coff_symconst.h	/^#define btLong /;"	d
btLongLong	src/base/loader/coff_symconst.h	/^#define btLongLong /;"	d
btMax	src/base/loader/coff_symconst.h	/^#define btMax /;"	d
btNil	src/base/loader/coff_symconst.h	/^#define btNil /;"	d
btPicture	src/base/loader/coff_symconst.h	/^#define btPicture /;"	d
btRange	src/base/loader/coff_symconst.h	/^#define btRange /;"	d
btSet	src/base/loader/coff_symconst.h	/^#define btSet /;"	d
btShort	src/base/loader/coff_symconst.h	/^#define btShort /;"	d
btString	src/base/loader/coff_symconst.h	/^#define btString /;"	d
btStruct	src/base/loader/coff_symconst.h	/^#define btStruct /;"	d
btTypedef	src/base/loader/coff_symconst.h	/^#define btTypedef /;"	d
btUChar	src/base/loader/coff_symconst.h	/^#define btUChar /;"	d
btUInt	src/base/loader/coff_symconst.h	/^#define btUInt /;"	d
btULong	src/base/loader/coff_symconst.h	/^#define btULong /;"	d
btULongLong	src/base/loader/coff_symconst.h	/^#define btULongLong /;"	d
btUShort	src/base/loader/coff_symconst.h	/^#define btUShort /;"	d
btUnion	src/base/loader/coff_symconst.h	/^#define btUnion /;"	d
btVoid	src/base/loader/coff_symconst.h	/^#define btVoid /;"	d
btb	src/cpu/pred/btb.hh	/^    std::vector<BTBEntry> btb;$/;"	m	class:DefaultBTB
btbUpdate	src/cpu/pred/2bit_local.cc	/^LocalBP::btbUpdate(Addr branch_addr, void * &bp_history)$/;"	f	class:LocalBP
btbUpdate	src/cpu/pred/tournament.cc	/^TournamentBP::btbUpdate(Addr branch_addr, void * &bp_history)$/;"	f	class:TournamentBP
btf	src/arch/x86/regs/misc.hh	/^        Bitfield<1> btf; \/\/ Branch single step$/;"	m	namespace:X86ISA
bucket_size	src/base/statistics.hh	/^        Counter bucket_size;$/;"	m	struct:Stats::DistStor::Params
bucket_size	src/base/statistics.hh	/^    Counter bucket_size;$/;"	m	class:Stats::DistStor
bucket_size	src/base/statistics.hh	/^    Counter bucket_size;$/;"	m	class:Stats::HistStor
bucket_size	src/base/stats/info.hh	/^    Counter bucket_size;$/;"	m	struct:Stats::DistData
buckets	src/base/statistics.hh	/^        size_type buckets;$/;"	m	struct:Stats::DistStor::Params
buckets	src/base/statistics.hh	/^        size_type buckets;$/;"	m	struct:Stats::HistStor::Params
buf	src/dev/i8254xGBe_defs.hh	/^            Addr buf;$/;"	m	struct:iGbReg::RxDesc::__anon70::__anon71
bufLen	src/dev/i8254xGBe_defs.hh	/^        unsigned bufLen() { return pktlen() << 10; }$/;"	f	struct:iGbReg::Regs::SRRCTL
bufPtr	src/sim/syscall_emul.hh	/^    uint8_t *bufPtr;$/;"	m	class:BaseBufferArg
buf_read_count	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    std::vector<double> buf_read_count;$/;"	m	class:Router_d
buf_write_count	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    std::vector<double> buf_write_count;$/;"	m	class:Router_d
buff_per_vc	src/mem/ruby/network/fault_model/FaultModel.hh	/^        int buff_per_vc;$/;"	m	struct:FaultModel::system_conf
buffer	src/cpu/timebuf.hh	/^        TimeBuffer<T> *buffer;$/;"	m	class:TimeBuffer::wire
buffer	src/dev/ethertap.hh	/^    char *buffer;$/;"	m	class:EtherTap
buffer	src/sim/vptr.hh	/^    Addr buffer[(sizeof(T)-1)\/sizeof(Addr) + 1];$/;"	m	class:VPtr
bufferData	src/dev/x86/i8042.cc	/^X86ISA::PS2Device::bufferData(const uint8_t *data, int size)$/;"	f	class:X86ISA::PS2Device
bufferPtr	src/sim/syscall_emul.hh	/^    void *bufferPtr()   { return bufPtr; }$/;"	f	class:BufferArg
buffer_offset	src/dev/ethertap.hh	/^    uint32_t buffer_offset;$/;"	m	class:EtherTap
buffer_size	src/dev/arm/pl111.hh	/^    static const int buffer_size = LcdMaxWidth * LcdMaxHeight * sizeof(uint32_t);$/;"	m	class:Pl111
buffer_size	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.py	/^    buffer_size = Param.UInt32(0,$/;"	v	class:GarnetNetwork
buffer_size	src/mem/ruby/network/simple/SimpleNetwork.py	/^    buffer_size = Param.Int(0,$/;"	v	class:SimpleNetwork
buffer_size	src/mem/ruby/slicc_interface/Controller.py	/^    buffer_size = Param.UInt32(0, "max buffer size 0 means infinite")$/;"	v	class:RubyController
bufferram	src/arch/alpha/linux/linux.hh	/^       uint64_t bufferram; \/* Memory used by buffers *\/$/;"	m	struct:AlphaLinux::__anon2
bufferram	src/arch/arm/linux/linux.hh	/^        uint32_t bufferram; \/* Memory used by buffers *\/$/;"	m	struct:ArmLinux32::__anon8
bufferram	src/arch/arm/linux/linux.hh	/^        uint64_t bufferram; \/* Memory used by buffers *\/$/;"	m	struct:ArmLinux64::__anon11
bufferram	src/arch/mips/linux/linux.hh	/^       uint32_t bufferram; \/* Memory used by buffers *\/$/;"	m	struct:MipsLinux::__anon20
bufferram	src/arch/sparc/linux/linux.hh	/^        uint32_t bufferram; \/* Memory used by buffers *\/$/;"	m	struct:Sparc32Linux::__anon28
bufferram	src/arch/sparc/linux/linux.hh	/^        uint64_t bufferram; \/* Memory used by buffers *\/$/;"	m	struct:SparcLinux::__anon26
bufferram	src/arch/x86/linux/linux.hh	/^        uint64_t bufferram; \/* Memory used by buffers *\/$/;"	m	struct:X86Linux64::__anon32
bufferram	src/arch/x86/linux/linux.hh	/^       uint32_t bufferram; \/* Memory used by buffers *\/$/;"	m	struct:X86Linux32::__anon34
buffers_per_ctrl_vc	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.py	/^    buffers_per_ctrl_vc = Param.UInt32(1, "buffers per ctrl virtual channel");$/;"	v	class:GarnetNetwork_d
buffers_per_data_vc	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.py	/^    buffers_per_data_vc = Param.UInt32(4, "buffers per data virtual channel");$/;"	v	class:GarnetNetwork_d
buflen	src/dev/ethertap.hh	/^    int buflen;$/;"	m	class:EtherTap
bufptr	src/dev/ns_gige_reg.h	/^    uint32_t bufptr;  \/* pointer to the first fragment or buffer *\/$/;"	m	struct:ns_desc32
bufptr	src/dev/ns_gige_reg.h	/^    uint64_t bufptr;  \/* pointer to the first fragment or buffer *\/$/;"	m	struct:ns_desc64
bufsz	src/dev/Ethernet.py	/^    bufsz = Param.Int(10000, "tap buffer size")$/;"	v	class:EtherTap
bugchk	src/arch/alpha/osfpal.hh	/^        bugchk = 0x81,$/;"	e	enum:PAL::__anon3
buildDataPacket	src/cpu/inorder/resources/cache_unit.cc	/^CacheUnit::buildDataPacket(CacheRequest *cache_req)$/;"	f	class:CacheUnit
buildEnv	src/arch/mips/MipsCPU.py	/^from m5.defines import buildEnv$/;"	i
buildEnv	src/arch/mips/MipsSystem.py	/^from m5.defines import buildEnv$/;"	i
buildEnv	src/arch/x86/X86LocalApic.py	/^from m5.defines import buildEnv$/;"	i
buildEnv	src/cpu/BaseCPU.py	/^from m5.defines import buildEnv$/;"	i
buildEnv	src/cpu/o3/O3CPU.py	/^from m5.defines import buildEnv$/;"	i
buildEnv	src/cpu/ozone/OzoneCPU.py	/^from m5.defines import buildEnv$/;"	i
buildEnv	src/cpu/ozone/SimpleOzoneCPU.py	/^from m5.defines import buildEnv$/;"	i
buildEnv	src/cpu/simple/BaseSimpleCPU.py	/^from m5.defines import buildEnv$/;"	i
buildEnv	src/dev/alpha/AlphaBackdoor.py	/^from m5.defines import buildEnv$/;"	i
buildEnv	src/sim/Root.py	/^from m5.defines import buildEnv$/;"	i
buildEnv	src/sim/System.py	/^from m5.defines import buildEnv$/;"	i
buildInst	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::buildInst(ThreadID tid, StaticInstPtr staticInst,$/;"	f	class:DefaultFetch
buildIntRequest	src/arch/x86/intmessage.hh	/^    buildIntRequest(const uint8_t id, T payload, Addr offset, Addr size)$/;"	f	namespace:X86ISA
buildIntRequest	src/arch/x86/intmessage.hh	/^    buildIntRequest(const uint8_t id, TriggerIntMessage payload)$/;"	f	namespace:X86ISA
buildIntResponse	src/arch/x86/intmessage.hh	/^    buildIntResponse()$/;"	f	namespace:X86ISA
buildOperandNameMap	src/arch/isa_parser.py	/^    def buildOperandNameMap(self, user_dict, lineno):$/;"	m	class:ISAParser
buildPacket	src/cpu/simple/timing.cc	/^TimingSimpleCPU::buildPacket(PacketPtr &pkt, RequestPtr req, bool read)$/;"	f	class:TimingSimpleCPU
buildPstateMask	src/arch/sparc/isa.cc	/^buildPstateMask()$/;"	f	namespace:SparcISA
buildReadCode	src/arch/isa_parser.py	/^    def buildReadCode(self, func = None):$/;"	m	class:Operand
buildRetPC	src/arch/alpha/utility.hh	/^buildRetPC(const PCState &curPC, const PCState &callPC)$/;"	f	namespace:AlphaISA
buildRetPC	src/arch/arm/utility.hh	/^buildRetPC(const PCState &curPC, const PCState &callPC)$/;"	f	namespace:ArmISA
buildRetPC	src/arch/mips/utility.hh	/^buildRetPC(const PCState &curPC, const PCState &callPC)$/;"	f	namespace:MipsISA
buildRetPC	src/arch/power/utility.hh	/^buildRetPC(const PCState &curPC, const PCState &callPC)$/;"	f	namespace:PowerISA
buildRetPC	src/arch/sparc/utility.hh	/^buildRetPC(const PCState &curPC, const PCState &callPC)$/;"	f	namespace:SparcISA
buildRetPC	src/arch/x86/utility.hh	/^    buildRetPC(const PCState &curPC, const PCState &callPC)$/;"	f	namespace:X86ISA
buildSplitPacket	src/cpu/simple/timing.cc	/^TimingSimpleCPU::buildSplitPacket(PacketPtr &pkt1, PacketPtr &pkt2,$/;"	f	class:TimingSimpleCPU
buildTable	src/mem/slicc/symbols/StateMachine.py	/^    def buildTable(self):$/;"	m	class:StateMachine
buildWriteCode	src/arch/isa_parser.py	/^    def buildWriteCode(self, func = None):$/;"	m	class:Operand
burstCount	src/mem/dram_ctrl.hh	/^        const unsigned int burstCount;$/;"	m	class:DRAMCtrl::BurstHelper
burstHelper	src/mem/dram_ctrl.hh	/^        BurstHelper* burstHelper;$/;"	m	class:DRAMCtrl::DRAMPacket
burstLength	src/mem/dram_ctrl.hh	/^    const uint32_t burstLength;$/;"	m	class:DRAMCtrl
burstSize	src/mem/dram_ctrl.hh	/^    const uint32_t burstSize;$/;"	m	class:DRAMCtrl
burstSize	src/mem/dramsim2_wrapper.cc	/^DRAMSim2Wrapper::burstSize() const$/;"	f	class:DRAMSim2Wrapper
burst_len	src/dev/arm/hdlcd.hh	/^        Bitfield<4,0>   burst_len;$/;"	m	class:HDLcd
burst_length	src/mem/DRAMCtrl.py	/^    burst_length = 4$/;"	v	class:WideIO_200_x128
burst_length	src/mem/DRAMCtrl.py	/^    burst_length = 8$/;"	v	class:DDR3_1333_x64_DRAMSim2
burst_length	src/mem/DRAMCtrl.py	/^    burst_length = 8$/;"	v	class:DDR3_1600_x64
burst_length	src/mem/DRAMCtrl.py	/^    burst_length = 8$/;"	v	class:LPDDR2_S4_1066_x32
burst_length	src/mem/DRAMCtrl.py	/^    burst_length = 8$/;"	v	class:LPDDR3_1600_x32
burst_length	src/mem/DRAMCtrl.py	/^    burst_length = Param.Unsigned("Burst lenght (BL) in beats")$/;"	v	class:DRAMCtrl
burst_length_bins	src/mem/CommMonitor.py	/^                                           "histograms")$/;"	v	class:CommMonitor
burstsServiced	src/mem/dram_ctrl.hh	/^        unsigned int burstsServiced;$/;"	m	class:DRAMCtrl::BurstHelper
bus	src/dev/Pci.py	/^    bus = Param.UInt8(0x00, "PCI bus to act as config space for")$/;"	v	class:PciConfigAll
bus	src/dev/etherbus.hh	/^        EtherBus *bus;$/;"	m	class:EtherBus::DoneEvent
bus	src/mem/bus.hh	/^        BaseBus& bus;$/;"	m	class:BaseBus::Layer
bus	src/mem/coherent_bus.hh	/^        CoherentBus &bus;$/;"	m	class:CoherentBus::CoherentBusMasterPort
bus	src/mem/coherent_bus.hh	/^        CoherentBus &bus;$/;"	m	class:CoherentBus::CoherentBusSlavePort
bus	src/mem/noncoherent_bus.hh	/^        NoncoherentBus &bus;$/;"	m	class:NoncoherentBus::NoncoherentBusMasterPort
bus	src/mem/noncoherent_bus.hh	/^        NoncoherentBus &bus;$/;"	m	class:NoncoherentBus::NoncoherentBusSlavePort
busBusyUntil	src/mem/dram_ctrl.hh	/^    Tick busBusyUntil;$/;"	m	class:DRAMCtrl
busFirstWordDelay	src/mem/packet.hh	/^    uint32_t busFirstWordDelay;$/;"	m	class:Packet
busID	src/arch/x86/bios/intelmp.hh	/^    uint8_t busID;$/;"	m	class:X86ISA::IntelMP::AddrSpaceMapping
busID	src/arch/x86/bios/intelmp.hh	/^    uint8_t busID;$/;"	m	class:X86ISA::IntelMP::Bus
busID	src/arch/x86/bios/intelmp.hh	/^    uint8_t busID;$/;"	m	class:X86ISA::IntelMP::BusHierarchy
busID	src/arch/x86/bios/intelmp.hh	/^    uint8_t busID;$/;"	m	class:X86ISA::IntelMP::CompatAddrSpaceMod
busId	src/dev/pcidev.hh	/^        int busId;$/;"	m	class:PciDevice::PciConfigPort
busLastWordDelay	src/mem/packet.hh	/^    uint32_t busLastWordDelay;$/;"	m	class:Packet
busRanges	src/mem/bus.hh	/^    AddrRangeList busRanges;$/;"	m	class:BaseBus
busType	src/arch/x86/bios/intelmp.hh	/^    std::string busType;$/;"	m	class:X86ISA::IntelMP::Bus
busUtil	src/mem/dram_ctrl.hh	/^    Stats::Formula busUtil;$/;"	m	class:DRAMCtrl
busUtilRead	src/mem/dram_ctrl.hh	/^    Stats::Formula busUtilRead;$/;"	m	class:DRAMCtrl
busUtilWrite	src/mem/dram_ctrl.hh	/^    Stats::Formula busUtilWrite;$/;"	m	class:DRAMCtrl
bus_error	src/dev/arm/hdlcd.hh	/^        Bitfield<1> bus_error;$/;"	m	class:HDLcd
bus_id	src/arch/x86/bios/IntelMP.py	/^    bus_id = Param.UInt8(0, 'bus id assigned by the bios')$/;"	v	class:X86IntelMPBus
bus_id	src/arch/x86/bios/IntelMP.py	/^    bus_id = Param.UInt8(0, 'id of the bus being described')$/;"	v	class:X86IntelMPBusHierarchy
bus_id	src/arch/x86/bios/IntelMP.py	/^    bus_id = Param.UInt8(0, 'id of the bus being described')$/;"	v	class:X86IntelMPCompatAddrSpaceMod
bus_id	src/arch/x86/bios/IntelMP.py	/^    bus_id = Param.UInt8(0, 'id of the bus the address space is mapped to')$/;"	v	class:X86IntelMPAddrSpaceMapping
bus_options	src/dev/arm/hdlcd.hh	/^    BusOptsReg bus_options;         \/**< Bus options register *\/$/;"	m	class:HDLcd
bus_type	src/arch/x86/bios/IntelMP.py	/^    bus_type = Param.String("", 'string that identify the bus type')$/;"	v	class:X86IntelMPBus
busy	src/dev/copy_engine.hh	/^        bool busy;$/;"	m	class:CopyEngine::CopyEngineChannel
busy	src/dev/etherbus.hh	/^    bool busy() const { return (bool)packet; }$/;"	f	class:EtherBus
busy	src/dev/etherlink.hh	/^        bool busy() const { return (bool)packet; }$/;"	f	class:EtherLink::Link
busy	src/dev/sparc/iob.hh	/^        bool busy;$/;"	m	struct:Iob::IntBusy
busy	src/mem/ruby/system/DMASequencer.hh	/^    bool busy() { return m_is_busy;}$/;"	f	class:DMASequencer
busyBanks	src/mem/ruby/system/BankedArray.hh	/^    std::vector<AccessRecord> busyBanks;$/;"	m	class:BankedArray
button_mask	src/base/vnc/vncinput.hh	/^        uint8_t button_mask;$/;"	m	struct:VncInput::PointerEventMessage
bwInstRead	src/mem/abstract_mem.hh	/^    Stats::Formula bwInstRead;$/;"	m	class:AbstractMemory
bwRead	src/mem/abstract_mem.hh	/^    Stats::Formula bwRead;$/;"	m	class:AbstractMemory
bwTotal	src/mem/abstract_mem.hh	/^    Stats::Formula bwTotal;$/;"	m	class:AbstractMemory
bwWrite	src/mem/abstract_mem.hh	/^    Stats::Formula bwWrite;$/;"	m	class:AbstractMemory
bypassCaches	src/sim/system.hh	/^    bool bypassCaches() const {$/;"	f	class:System
byteCount	src/dev/ide_disk.hh	/^    uint16_t byteCount;$/;"	m	struct:PrdEntry
byteMask	src/arch/arm/insts/misc.hh	/^    uint8_t byteMask;$/;"	m	class:MsrBase
bytes	src/base/inet.hh	/^    const uint8_t *bytes() const { return &data[0]; }$/;"	f	struct:Net::EthAddr
bytes	src/base/inet.hh	/^    const uint8_t *bytes() const { return (const uint8_t *)this; }$/;"	f	struct:Net::EthHdr
bytes	src/base/inet.hh	/^    const uint8_t *bytes() const { return (const uint8_t *)this; }$/;"	f	struct:Net::Ip6Hdr
bytes	src/base/inet.hh	/^    const uint8_t *bytes() const { return (const uint8_t *)this; }$/;"	f	struct:Net::IpHdr
bytes	src/base/inet.hh	/^    const uint8_t *bytes() const { return (const uint8_t *)this; }$/;"	f	struct:Net::TcpHdr
bytes	src/base/inet.hh	/^    const uint8_t *bytes() const { return (const uint8_t *)this; }$/;"	f	struct:Net::TcpOpt
bytes	src/base/inet.hh	/^    const uint8_t *bytes() const { return (const uint8_t *)this; }$/;"	f	struct:Net::UdpHdr
bytes	src/base/inet.hh	/^    uint8_t *bytes() { return &data[0]; }$/;"	f	struct:Net::EthAddr
bytes	src/base/inet.hh	/^    uint8_t *bytes() { return (uint8_t *)this; }$/;"	f	struct:Net::EthHdr
bytes	src/base/inet.hh	/^    uint8_t *bytes() { return (uint8_t *)this; }$/;"	f	struct:Net::Ip6Hdr
bytes	src/base/inet.hh	/^    uint8_t *bytes() { return (uint8_t *)this; }$/;"	f	struct:Net::IpHdr
bytes	src/base/inet.hh	/^    uint8_t *bytes() { return (uint8_t *)this; }$/;"	f	struct:Net::TcpHdr
bytes	src/base/inet.hh	/^    uint8_t *bytes() { return (uint8_t *)this; }$/;"	f	struct:Net::TcpOpt
bytes	src/base/inet.hh	/^    uint8_t *bytes() { return (uint8_t *)this; }$/;"	f	struct:Net::UdpHdr
bytes	src/base/remote_gdb.hh	/^        size_t bytes() { return size * sizeof(uint64_t); }$/;"	f	class:BaseRemoteGDB::GdbRegCache
bytesAccessed	src/mem/dram_ctrl.hh	/^        uint32_t bytesAccessed;$/;"	m	class:DRAMCtrl::Bank
bytesCopied	src/dev/copy_engine.hh	/^    Stats::Vector bytesCopied;$/;"	m	class:CopyEngine
bytesCopied	src/dev/i8254xGBe.hh	/^        unsigned bytesCopied;$/;"	m	class:IGbE::RxDescCache
bytesFreeInPixelBuffer	src/dev/arm/hdlcd.hh	/^    inline uint32_t bytesFreeInPixelBuffer() const {$/;"	f	class:HDLcd
bytesInstRead	src/mem/abstract_mem.hh	/^    Stats::Vector bytesInstRead;$/;"	m	class:AbstractMemory
bytesPerActivate	src/mem/dram_ctrl.hh	/^    Stats::Histogram bytesPerActivate;$/;"	m	class:DRAMCtrl
bytesPerPixel	src/dev/arm/hdlcd.hh	/^    inline size_t bytesPerPixel() const {$/;"	f	class:HDLcd
bytesPerPixel	src/dev/arm/pl111.hh	/^    uint8_t bytesPerPixel;$/;"	m	class:Pl111
bytesRead	src/mem/abstract_mem.hh	/^    Stats::Vector bytesRead;$/;"	m	class:AbstractMemory
bytesReadDRAM	src/mem/dram_ctrl.hh	/^    Stats::Scalar bytesReadDRAM;$/;"	m	class:DRAMCtrl
bytesReadSys	src/mem/dram_ctrl.hh	/^    Stats::Scalar bytesReadSys;$/;"	m	class:DRAMCtrl
bytesReadWrQ	src/mem/dram_ctrl.hh	/^    Stats::Scalar bytesReadWrQ;$/;"	m	class:DRAMCtrl
bytesSummed	src/kern/tru64/mbuf.hh	/^    int32_t     bytesSummed;    \/\/ 0x3C$/;"	m	struct:tru64::m_ext
bytesValidEnd	src/mem/packet.hh	/^    uint16_t bytesValidEnd;$/;"	m	class:Packet
bytesValidStart	src/mem/packet.hh	/^    uint16_t bytesValidStart;$/;"	m	class:Packet
bytesWritten	src/mem/abstract_mem.hh	/^    Stats::Vector bytesWritten;$/;"	m	class:AbstractMemory
bytesWritten	src/mem/dram_ctrl.hh	/^    Stats::Scalar bytesWritten;$/;"	m	class:DRAMCtrl
bytesWrittenSys	src/mem/dram_ctrl.hh	/^    Stats::Scalar bytesWrittenSys;$/;"	m	class:DRAMCtrl
bytes_completed	src/mem/ruby/system/DMASequencer.hh	/^    int bytes_completed;$/;"	m	struct:DMARequest
bytes_issued	src/mem/ruby/system/DMASequencer.hh	/^    int bytes_issued;$/;"	m	struct:DMARequest
bytes_per_pixel	src/dev/arm/hdlcd.hh	/^        Bitfield<4,3>  bytes_per_pixel;$/;"	m	class:HDLcd
c	src/arch/arm/miscregs.hh	/^        Bitfield<29> c;$/;"	m	namespace:ArmISA
c	src/arch/arm/miscregs.hh	/^        Bitfield<2>    c;       \/\/ Cache enable$/;"	m	namespace:ArmISA
c	src/arch/mips/pra_constants.hh	/^    Bitfield<5,  3>  c;     \/\/ Coherency attribute$/;"	m	namespace:MipsISA
c	src/arch/power/miscregs.hh	/^        Bitfield<16> c;$/;"	m	namespace:PowerISA
c	src/arch/x86/regs/misc.hh	/^            Bitfield<42> c; \/\/ Conforming$/;"	m	namespace:X86ISA
c	src/base/types.hh	/^    uint64_t c;$/;"	m	class:Cycles
c0_config	src/arch/sparc/tlb.hh	/^    uint64_t c0_config;$/;"	m	class:SparcISA::TLB
c0_tsb_ps0	src/arch/sparc/tlb.hh	/^    uint64_t c0_tsb_ps0;$/;"	m	class:SparcISA::TLB
c0_tsb_ps1	src/arch/sparc/tlb.hh	/^    uint64_t c0_tsb_ps1;$/;"	m	class:SparcISA::TLB
c2	src/arch/mips/pra_constants.hh	/^    Bitfield<6>      c2;$/;"	m	namespace:MipsISA
c64	src/dev/pcireg.h	/^        Bitfield<7>     c64;$/;"	m	struct:MSICAP
cAuxMax	src/base/loader/coff_sym.h	/^#define cAuxMax /;"	d
cSwap	src/arch/arm/insts/static_inst.hh	/^    cSwap(T val, bool big)$/;"	f	class:ArmISA::ArmStaticInst
ca	src/arch/mips/pra_constants.hh	/^    Bitfield<2>      ca;$/;"	m	namespace:MipsISA
ca	src/arch/power/miscregs.hh	/^    Bitfield<29> ca;$/;"	m	namespace:PowerISA
cache	src/mem/cache/cache.hh	/^        Cache<TagStore> &cache;$/;"	m	class:Cache::MemSidePacketQueue
cache	src/mem/cache/cache.hh	/^        Cache<TagStore> *cache;$/;"	m	class:Cache::CpuSidePort
cache	src/mem/cache/cache.hh	/^        Cache<TagStore> *cache;$/;"	m	class:Cache::MemSidePort
cache	src/mem/cache/prefetch/base.hh	/^    BaseCache* cache;$/;"	m	class:BasePrefetcher
cache	src/mem/cache/tags/base.hh	/^    BaseCache *cache;$/;"	m	class:BaseTags
cacheAsi	src/arch/sparc/tlb.hh	/^    ASI cacheAsi[2];$/;"	m	class:SparcISA::TLB
cacheAvail	src/mem/ruby/system/CacheMemory.cc	/^CacheMemory::cacheAvail(const Address& address) const$/;"	f	class:CacheMemory
cacheAvail	src/mem/ruby/system/PerfectCacheMemory.hh	/^PerfectCacheMemory<ENTRY>::cacheAvail(const Address& address) const$/;"	f	class:PerfectCacheMemory
cacheBlkMask	src/cpu/inorder/resources/cache_unit.hh	/^    int cacheBlkMask;$/;"	m	class:CacheUnit
cacheBlkMask	src/cpu/ozone/front_end.hh	/^    Addr cacheBlkMask;$/;"	m	class:FrontEnd
cacheBlkPC	src/cpu/ozone/front_end.hh	/^    Addr cacheBlkPC;$/;"	m	class:FrontEnd
cacheBlkSize	src/cpu/inorder/resources/cache_unit.hh	/^    int cacheBlkSize;$/;"	m	class:CacheUnit
cacheBlkSize	src/cpu/o3/fetch.hh	/^    unsigned int cacheBlkSize;$/;"	m	class:DefaultFetch
cacheBlkSize	src/cpu/ozone/front_end.hh	/^    unsigned cacheBlkSize;$/;"	m	class:FrontEnd
cacheBlkValid	src/cpu/ozone/front_end.hh	/^    bool cacheBlkValid;$/;"	m	class:FrontEnd
cacheBlockAlign	src/cpu/inorder/resources/cache_unit.hh	/^    Addr cacheBlockAlign(Addr addr)$/;"	f	class:CacheUnit
cacheBlockAlignPC	src/cpu/inorder/resources/fetch_unit.hh	/^    Addr cacheBlockAlignPC(Addr addr)$/;"	f	class:FetchUnit
cacheBlockMask	src/cpu/o3/lsq_unit.hh	/^    Addr cacheBlockMask;$/;"	m	class:LSQUnit
cacheBlockMask	src/cpu/simple/atomic.hh	/^        Addr cacheBlockMask;$/;"	m	class:AtomicSimpleCPU::AtomicCPUDPort
cacheBlockMask	src/cpu/simple/timing.hh	/^        Addr cacheBlockMask;$/;"	m	class:TimingSimpleCPU::DcachePort
cacheBlockSize	src/dev/dma_device.hh	/^    unsigned int cacheBlockSize() const { return sys->cacheLineSize(); }$/;"	f	class:DmaDevice
cacheBlocked	src/cpu/o3/fetch.hh	/^    bool cacheBlocked;$/;"	m	class:DefaultFetch
cacheBlocked	src/cpu/o3/lsq.hh	/^    bool cacheBlocked() const$/;"	f	class:LSQ
cacheBlocked	src/cpu/ozone/front_end.hh	/^    bool cacheBlocked;$/;"	m	class:FrontEnd
cacheBoundaries	src/mem/cache/tags/fa_lru.hh	/^    FALRUBlk **cacheBoundaries;$/;"	m	class:FALRU
cacheCompletionEvent	src/cpu/ozone/back_end.hh	/^    DCacheCompletionEvent cacheCompletionEvent;$/;"	m	class:BackEnd
cacheCompletionEvent	src/cpu/ozone/inorder_back_end.hh	/^    DCacheCompletionEvent cacheCompletionEvent;$/;"	m	class:InorderBackEnd
cacheCopies	src/mem/cache/base.hh	/^    Stats::Scalar cacheCopies;$/;"	m	class:BaseCache
cacheData	src/cpu/ozone/front_end.hh	/^    uint8_t *cacheData;$/;"	m	class:FrontEnd
cacheElement	src/mem/page_table.hh	/^    struct cacheElement {$/;"	s	class:PageTable
cacheEntry	src/arch/sparc/tlb.hh	/^    TlbEntry *cacheEntry[2];$/;"	m	class:SparcISA::TLB
cacheLineSize	src/cpu/base.hh	/^    inline unsigned int cacheLineSize() const { return _cacheLineSize; }$/;"	f	class:BaseCPU
cacheLineSize	src/dev/pcireg.h	/^        uint8_t cacheLineSize;$/;"	m	struct:PCIConfig::__anon80
cacheLineSize	src/sim/system.hh	/^    unsigned int cacheLineSize() const { return _cacheLineSize; }$/;"	f	class:System
cacheMask	src/mem/cache/tags/fa_lru.hh	/^    int cacheMask;$/;"	m	class:FALRU
cachePnt	src/dev/i8254xGBe.hh	/^        int cachePnt;$/;"	m	class:IGbE::DescCache
cachePort	src/cpu/inorder/resources/cache_unit.hh	/^    MasterPort *cachePort;$/;"	m	class:CacheUnit
cachePort	src/cpu/testers/memtest/memtest.hh	/^    CpuPort cachePort;$/;"	m	class:MemTest
cachePort	src/cpu/testers/networktest/networktest.hh	/^    CpuPort cachePort;$/;"	m	class:NetworkTest
cachePortBlocked	src/cpu/inorder/resources/cache_unit.hh	/^    bool cachePortBlocked;$/;"	m	class:CacheUnit
cachePorts	src/cpu/inorder/InOrderCPU.py	/^    cachePorts = Param.Unsigned(2, "Cache Ports")$/;"	v	class:InOrderCPU
cachePorts	src/cpu/o3/O3CPU.py	/^    cachePorts = Param.Unsigned(200, "Cache Ports")$/;"	v	class:DerivO3CPU
cachePorts	src/cpu/o3/lsq_unit.hh	/^    int cachePorts;$/;"	m	class:LSQUnit
cachePorts	src/cpu/ozone/lsq_unit.hh	/^    int cachePorts;$/;"	m	class:OzoneLSQ
cachePorts	src/cpu/ozone/lw_lsq.hh	/^    int cachePorts;$/;"	m	class:OzoneLWLSQ
cachePorts	src/cpu/ozone/simple_params.hh	/^    unsigned cachePorts;$/;"	m	class:SimpleParams
cacheProbe	src/mem/ruby/system/CacheMemory.cc	/^CacheMemory::cacheProbe(const Address& address) const$/;"	f	class:CacheMemory
cacheProbe	src/mem/ruby/system/PerfectCacheMemory.hh	/^PerfectCacheMemory<ENTRY>::cacheProbe(const Address& newAddress) const$/;"	f	class:PerfectCacheMemory
cacheReq	src/cpu/inorder/resources/cache_unit.hh	/^    CacheRequest *cacheReq;$/;"	m	class:CacheReqPacket
cacheState	src/arch/sparc/tlb.hh	/^    uint64_t cacheState;$/;"	m	class:SparcISA::TLB
cacheUnit	src/cpu/inorder/cpu.hh	/^        CacheUnit *cacheUnit;$/;"	m	class:InOrderCPU::CachePort
cacheValid	src/arch/sparc/tlb.hh	/^    bool cacheValid;$/;"	m	class:SparcISA::TLB
cache_line_size	src/sim/System.py	/^    cache_line_size = Param.Unsigned(64, "Cache line size in bytes")$/;"	v
cachedDisassembly	src/cpu/static_inst.hh	/^    mutable std::string *cachedDisassembly;$/;"	m	class:StaticInst
cachedMsrIntersection	src/cpu/kvm/x86_cpu.hh	/^    mutable Kvm::MSRIndexVector cachedMsrIntersection;$/;"	m	class:X86KvmCPU
cachedPC	src/arch/power/insts/branch.hh	/^    mutable Addr cachedPC;$/;"	m	class:PowerISA::PCDependentDisassembly
cachedSymtab	src/arch/power/insts/branch.hh	/^    mutable const SymbolTable *cachedSymtab;$/;"	m	class:PowerISA::PCDependentDisassembly
cacheep	src/arch/mips/dt_constants.hh	/^    Bitfield<22>     cacheep;$/;"	m	namespace:MipsISA
calcConfigAddr	src/dev/alpha/tsunami_pchip.cc	/^TsunamiPChip::calcConfigAddr(int bus, int dev, int func)$/;"	f	class:TsunamiPChip
calcConfigAddr	src/dev/mips/malta_pchip.cc	/^MaltaPChip::calcConfigAddr(int bus, int dev, int func)$/;"	f	class:MaltaPChip
calcEA	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::calcEA()$/;"	f	class:InOrderDynInst
calcEA	src/cpu/o3/dyn_inst.hh	/^    Fault calcEA()$/;"	f	class:BaseO3DynInst
calcFreeIQEntries	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::calcFreeIQEntries(ThreadID tid)$/;"	f	class:DefaultRename
calcFreeLSQEntries	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::calcFreeLSQEntries(ThreadID tid)$/;"	f	class:DefaultRename
calcFreeROBEntries	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::calcFreeROBEntries(ThreadID tid)$/;"	f	class:DefaultRename
calcIOAddr	src/dev/alpha/tsunami_pchip.cc	/^TsunamiPChip::calcIOAddr(Addr addr)$/;"	f	class:TsunamiPChip
calcIndex	src/cpu/o3/store_set.hh	/^    inline int calcIndex(Addr PC)$/;"	f	class:StoreSet
calcLocHistIdx	src/cpu/pred/tournament.cc	/^TournamentBP::calcLocHistIdx(Addr &branch_addr)$/;"	f	class:TournamentBP
calcMemAddr	src/dev/alpha/tsunami_pchip.cc	/^TsunamiPChip::calcMemAddr(Addr addr)$/;"	f	class:TsunamiPChip
calcPacketTiming	src/mem/bus.cc	/^BaseBus::calcPacketTiming(PacketPtr pkt)$/;"	f	class:BaseBus
calcPciConfigAddr	src/dev/alpha/tsunami.cc	/^Tsunami::calcPciConfigAddr(int bus, int dev, int func)$/;"	f	class:Tsunami
calcPciConfigAddr	src/dev/arm/realview.cc	/^RealView::calcPciConfigAddr(int bus, int dev, int func)$/;"	f	class:RealView
calcPciConfigAddr	src/dev/mips/malta.hh	/^    calcPciConfigAddr(int bus, int dev, int func)$/;"	f	class:Malta
calcPciConfigAddr	src/dev/sparc/t1000.cc	/^T1000::calcPciConfigAddr(int bus, int dev, int func)$/;"	f	class:T1000
calcPciConfigAddr	src/dev/x86/pc.cc	/^Pc::calcPciConfigAddr(int bus, int dev, int func)$/;"	f	class:Pc
calcPciIOAddr	src/dev/alpha/tsunami.cc	/^Tsunami::calcPciIOAddr(Addr addr)$/;"	f	class:Tsunami
calcPciIOAddr	src/dev/arm/realview.cc	/^RealView::calcPciIOAddr(Addr addr)$/;"	f	class:RealView
calcPciIOAddr	src/dev/mips/malta.hh	/^    calcPciIOAddr(Addr addr)$/;"	f	class:Malta
calcPciIOAddr	src/dev/sparc/t1000.cc	/^T1000::calcPciIOAddr(Addr addr)$/;"	f	class:T1000
calcPciIOAddr	src/dev/x86/pc.cc	/^Pc::calcPciIOAddr(Addr addr)$/;"	f	class:Pc
calcPciMemAddr	src/dev/alpha/tsunami.cc	/^Tsunami::calcPciMemAddr(Addr addr)$/;"	f	class:Tsunami
calcPciMemAddr	src/dev/arm/realview.cc	/^RealView::calcPciMemAddr(Addr addr)$/;"	f	class:RealView
calcPciMemAddr	src/dev/mips/malta.hh	/^    calcPciMemAddr(Addr addr)$/;"	f	class:Malta
calcPciMemAddr	src/dev/sparc/t1000.cc	/^T1000::calcPciMemAddr(Addr addr)$/;"	f	class:T1000
calcPciMemAddr	src/dev/x86/pc.cc	/^Pc::calcPciMemAddr(Addr addr)$/;"	f	class:Pc
calcResolution	src/cpu/kvm/timer.cc	/^PerfKvmTimer::calcResolution()$/;"	f	class:PerfKvmTimer
calcResolution	src/cpu/kvm/timer.cc	/^PosixKvmTimer::calcResolution()$/;"	f	class:PosixKvmTimer
calcSSID	src/cpu/o3/store_set.hh	/^    inline SSID calcSSID(Addr PC)$/;"	f	class:StoreSet
calc_carry_cap	src/mem/ruby/network/orion/Allocator/RRArbiter.cc	/^double RRArbiter::calc_carry_cap()$/;"	f	class:RRArbiter
calc_carry_in_cap	src/mem/ruby/network/orion/Allocator/RRArbiter.cc	/^double RRArbiter::calc_carry_in_cap()$/;"	f	class:RRArbiter
calc_chgaddr_cap	src/mem/ruby/network/orion/Buffer/DecoderUnit.cc	/^double DecoderUnit::calc_chgaddr_cap()$/;"	f	class:DecoderUnit
calc_chgdata_cap	src/mem/ruby/network/orion/Buffer/OutdrvUnit.cc	/^double OutdrvUnit::calc_chgdata_cap()$/;"	f	class:OutdrvUnit
calc_chgl1_cap	src/mem/ruby/network/orion/Buffer/DecoderUnit.cc	/^double DecoderUnit::calc_chgl1_cap()$/;"	f	class:DecoderUnit
calc_clock_cap	src/mem/ruby/network/orion/FlipFlop.cc	/^double FlipFlop::calc_clock_cap()$/;"	f	class:FlipFlop
calc_col_read_cap	src/mem/ruby/network/orion/Buffer/BitlineUnit.cc	/^double BitlineUnit::calc_col_read_cap()$/;"	f	class:BitlineUnit
calc_col_select_cap	src/mem/ruby/network/orion/Buffer/BitlineUnit.cc	/^double BitlineUnit::calc_col_select_cap()$/;"	f	class:BitlineUnit
calc_col_write_cap	src/mem/ruby/network/orion/Buffer/BitlineUnit.cc	/^double BitlineUnit::calc_col_write_cap()$/;"	f	class:BitlineUnit
calc_couple_cap_unit_len	src/mem/ruby/network/orion/Wire.cc	/^double Wire::calc_couple_cap_unit_len()$/;"	f	class:Wire
calc_ctr_cap	src/mem/ruby/network/orion/Crossbar/Crossbar.cc	/^double Crossbar::calc_ctr_cap(double cap_wire_, bool prev_ctr_, bool next_ctr_)$/;"	f	class:Crossbar
calc_draincap	src/mem/ruby/network/orion/TechParameter.cc	/^double TechParameter::calc_draincap($/;"	f	class:TechParameter
calc_driver_psize	src/mem/ruby/network/orion/TechParameter.cc	/^double TechParameter::calc_driver_psize($/;"	f	class:TechParameter
calc_dynamic_energy	src/mem/ruby/network/orion/Allocator/MatrixArbiter.cc	/^MatrixArbiter::calc_dynamic_energy(double num_req_, bool is_max_) const$/;"	f	class:MatrixArbiter
calc_dynamic_energy	src/mem/ruby/network/orion/Allocator/RRArbiter.cc	/^double RRArbiter::calc_dynamic_energy(double num_req_, bool is_max_) const$/;"	f	class:RRArbiter
calc_dynamic_energy	src/mem/ruby/network/orion/OrionLink.cc	/^double OrionLink::calc_dynamic_energy(uint32_t num_bit_flip_) const$/;"	f	class:OrionLink
calc_dynamic_energy	src/mem/ruby/network/orion/Wire.cc	/^double Wire::calc_dynamic_energy(double len_) const$/;"	f	class:Wire
calc_dynamic_energy_buf	src/mem/ruby/network/orion/OrionRouter.cc	/^double OrionRouter::calc_dynamic_energy_buf(uint32_t vclass_id_, bool is_read_, bool is_max_) const$/;"	f	class:OrionRouter
calc_dynamic_energy_clock	src/mem/ruby/network/orion/OrionRouter.cc	/^double OrionRouter::calc_dynamic_energy_clock() const$/;"	f	class:OrionRouter
calc_dynamic_energy_global_sw_arb	src/mem/ruby/network/orion/OrionRouter.cc	/^double OrionRouter::calc_dynamic_energy_global_sw_arb(double num_req_, bool is_max_) const$/;"	f	class:OrionRouter
calc_dynamic_energy_global_vc_arb	src/mem/ruby/network/orion/OrionRouter.cc	/^double OrionRouter::calc_dynamic_energy_global_vc_arb(uint32_t vclass_id_, double num_req_, bool is_max_) const$/;"	f	class:OrionRouter
calc_dynamic_energy_local_sw_arb	src/mem/ruby/network/orion/OrionRouter.cc	/^double OrionRouter::calc_dynamic_energy_local_sw_arb(double num_req_, bool is_max_) const$/;"	f	class:OrionRouter
calc_dynamic_energy_local_vc_arb	src/mem/ruby/network/orion/OrionRouter.cc	/^double OrionRouter::calc_dynamic_energy_local_vc_arb(uint32_t vclass_id_, double num_req_, bool is_max_) const$/;"	f	class:OrionRouter
calc_dynamic_energy_xbar	src/mem/ruby/network/orion/OrionRouter.cc	/^double OrionRouter::calc_dynamic_energy_xbar(bool is_max_) const$/;"	f	class:OrionRouter
calc_e_read	src/mem/ruby/network/orion/Buffer/Register.cc	/^double Register::calc_e_read() const$/;"	f	class:Register
calc_e_read	src/mem/ruby/network/orion/Buffer/SRAM.cc	/^double SRAM::calc_e_read($/;"	f	class:SRAM
calc_e_write	src/mem/ruby/network/orion/Buffer/Register.cc	/^double Register::calc_e_write() const$/;"	f	class:Register
calc_e_write	src/mem/ruby/network/orion/Buffer/SRAM.cc	/^double SRAM::calc_e_write($/;"	f	class:SRAM
calc_gatecap	src/mem/ruby/network/orion/TechParameter.cc	/^double TechParameter::calc_gatecap($/;"	f	class:TechParameter
calc_gatecappass	src/mem/ruby/network/orion/TechParameter.cc	/^double TechParameter::calc_gatecappass($/;"	f	class:TechParameter
calc_gnd_cap_unit_len	src/mem/ruby/network/orion/Wire.cc	/^double Wire::calc_gnd_cap_unit_len()$/;"	f	class:Wire
calc_grant_cap	src/mem/ruby/network/orion/Allocator/MatrixArbiter.cc	/^double MatrixArbiter::calc_grant_cap()$/;"	f	class:MatrixArbiter
calc_grant_cap	src/mem/ruby/network/orion/Allocator/RRArbiter.cc	/^double RRArbiter::calc_grant_cap()$/;"	f	class:RRArbiter
calc_i_static	src/mem/ruby/network/orion/Allocator/MatrixArbiter.cc	/^double MatrixArbiter::calc_i_static()$/;"	f	class:MatrixArbiter
calc_i_static	src/mem/ruby/network/orion/Allocator/RRArbiter.cc	/^double RRArbiter::calc_i_static()$/;"	f	class:RRArbiter
calc_i_static	src/mem/ruby/network/orion/Buffer/BitlineUnit.cc	/^double BitlineUnit::calc_i_static()$/;"	f	class:BitlineUnit
calc_i_static	src/mem/ruby/network/orion/Buffer/MemUnit.cc	/^double MemUnit::calc_i_static()$/;"	f	class:MemUnit
calc_i_static	src/mem/ruby/network/orion/Buffer/OutdrvUnit.cc	/^double OutdrvUnit::calc_i_static()$/;"	f	class:OutdrvUnit
calc_i_static	src/mem/ruby/network/orion/Buffer/Register.cc	/^double Register::calc_i_static() const$/;"	f	class:Register
calc_i_static	src/mem/ruby/network/orion/Buffer/SRAM.cc	/^double SRAM::calc_i_static() const$/;"	f	class:SRAM
calc_i_static	src/mem/ruby/network/orion/Crossbar/MatrixCrossbar.cc	/^double MatrixCrossbar::calc_i_static()$/;"	f	class:MatrixCrossbar
calc_i_static	src/mem/ruby/network/orion/Crossbar/MultreeCrossbar.cc	/^double MultreeCrossbar::calc_i_static()$/;"	f	class:MultreeCrossbar
calc_i_static	src/mem/ruby/network/orion/FlipFlop.cc	/^double FlipFlop::calc_i_static()$/;"	f	class:FlipFlop
calc_in_cap	src/mem/ruby/network/orion/Crossbar/Crossbar.cc	/^double Crossbar::calc_in_cap()$/;"	f	class:Crossbar
calc_int_cap	src/mem/ruby/network/orion/Allocator/MatrixArbiter.cc	/^double MatrixArbiter::calc_int_cap()$/;"	f	class:MatrixArbiter
calc_int_cap	src/mem/ruby/network/orion/Crossbar/Crossbar.cc	/^double Crossbar::calc_int_cap()$/;"	f	class:Crossbar
calc_mem_cap	src/mem/ruby/network/orion/Buffer/MemUnit.cc	/^double MemUnit::calc_mem_cap()$/;"	f	class:MemUnit
calc_node_cap	src/mem/ruby/network/orion/FlipFlop.cc	/^double FlipFlop::calc_node_cap(uint32_t num_fanin_, uint32_t num_fanout_)$/;"	f	class:FlipFlop
calc_num_pre_drain	src/mem/ruby/network/orion/Buffer/PrechargeUnit.cc	/^uint32_t PrechargeUnit::calc_num_pre_drain()$/;"	f	class:PrechargeUnit
calc_num_pre_gate	src/mem/ruby/network/orion/Buffer/PrechargeUnit.cc	/^uint32_t PrechargeUnit::calc_num_pre_gate()$/;"	f	class:PrechargeUnit
calc_opt_buffering	src/mem/ruby/network/orion/Wire.cc	/^void Wire::calc_opt_buffering($/;"	f	class:Wire
calc_out_cap	src/mem/ruby/network/orion/Crossbar/Crossbar.cc	/^double Crossbar::calc_out_cap(uint32_t num_in_)$/;"	f	class:Crossbar
calc_outdata_cap	src/mem/ruby/network/orion/Buffer/OutdrvUnit.cc	/^double OutdrvUnit::calc_outdata_cap(bool value_)$/;"	f	class:OutdrvUnit
calc_pre_cap	src/mem/ruby/network/orion/Buffer/PrechargeUnit.cc	/^double PrechargeUnit::calc_pre_cap(double width_, double length_)$/;"	f	class:PrechargeUnit
calc_pri_cap	src/mem/ruby/network/orion/Allocator/MatrixArbiter.cc	/^double MatrixArbiter::calc_pri_cap()$/;"	f	class:MatrixArbiter
calc_pri_cap	src/mem/ruby/network/orion/Allocator/RRArbiter.cc	/^double RRArbiter::calc_pri_cap()$/;"	f	class:RRArbiter
calc_req_cap	src/mem/ruby/network/orion/Allocator/MatrixArbiter.cc	/^double MatrixArbiter::calc_req_cap()$/;"	f	class:MatrixArbiter
calc_req_cap	src/mem/ruby/network/orion/Allocator/RRArbiter.cc	/^double RRArbiter::calc_req_cap()$/;"	f	class:RRArbiter
calc_res_unit_len	src/mem/ruby/network/orion/Wire.cc	/^double Wire::calc_res_unit_len()$/;"	f	class:Wire
calc_restowidth	src/mem/ruby/network/orion/TechParameter.cc	/^double TechParameter::calc_restowidth($/;"	f	class:TechParameter
calc_select_cap	src/mem/ruby/network/orion/Buffer/DecoderUnit.cc	/^double DecoderUnit::calc_select_cap()$/;"	f	class:DecoderUnit
calc_select_cap	src/mem/ruby/network/orion/Buffer/OutdrvUnit.cc	/^double OutdrvUnit::calc_select_cap()$/;"	f	class:OutdrvUnit
calc_static_power	src/mem/ruby/network/orion/Wire.cc	/^double Wire::calc_static_power(double len_) const$/;"	f	class:Wire
calc_wordline_cap	src/mem/ruby/network/orion/Buffer/WordlineUnit.cc	/^double WordlineUnit::calc_wordline_cap($/;"	f	class:WordlineUnit
calculatePrefetch	src/mem/cache/prefetch/ghb.cc	/^GHBPrefetcher::calculatePrefetch(PacketPtr &pkt, std::list<Addr> &addresses,$/;"	f	class:GHBPrefetcher
calculatePrefetch	src/mem/cache/prefetch/stride.cc	/^StridePrefetcher::calculatePrefetch(PacketPtr &pkt, std::list<Addr> &addresses,$/;"	f	class:StridePrefetcher
calculatePrefetch	src/mem/cache/prefetch/tagged.cc	/^calculatePrefetch(PacketPtr &pkt, std::list<Addr> &addresses,$/;"	f	class:TaggedPrefetcher
calculateVC	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.cc	/^NetworkInterface_d::calculateVC(int vnet)$/;"	f	class:NetworkInterface_d
calculateVC	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.cc	/^NetworkInterface::calculateVC(int vnet)$/;"	f	class:NetworkInterface
calculate_performance_numbers	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.cc	/^Router_d::calculate_performance_numbers()$/;"	f	class:Router_d
calculate_power	src/mem/ruby/network/orion/NetworkPower.cc	/^NetworkLink_d::calculate_power(double sim_cycles)$/;"	f	class:NetworkLink_d
calculate_power	src/mem/ruby/network/orion/NetworkPower.cc	/^Router_d::calculate_power()$/;"	f	class:Router_d
callbacks	src/base/callback.hh	/^    queue callbacks;$/;"	m	class:CallbackQueue
callpal	src/arch/alpha/kernel_stats.cc	/^Statistics::callpal(int code, ThreadContext *tc)$/;"	f	class:AlphaISA::Kernel::Statistics
callsys	src/arch/alpha/osfpal.hh	/^        callsys = 0x83,$/;"	e	enum:PAL::__anon3
canAccept	src/mem/dramsim2_wrapper.cc	/^DRAMSim2Wrapper::canAccept() const$/;"	f	class:DRAMSim2Wrapper
canCommit	src/cpu/o3/rob_impl.hh	/^ROB<Impl>::canCommit()$/;"	f	class:ROB
canForward	src/cpu/inorder/reg_dep_map.cc	/^RegDepMap::canForward(uint8_t reg_type, unsigned reg_idx, DynInstPtr inst)$/;"	f	class:RegDepMap
canHandleInterrupts	src/cpu/o3/commit.hh	/^    bool canHandleInterrupts;$/;"	m	class:DefaultCommit
canIssue	src/cpu/o3/iew.hh	/^    bool canIssue() { return ableToIssue; }$/;"	f	class:DefaultIEW
canRead	src/cpu/inorder/reg_dep_map.cc	/^RegDepMap::canRead(uint8_t reg_type, RegIndex idx, DynInstPtr inst)$/;"	f	class:RegDepMap
canReadAArch64SysReg	src/arch/arm/miscregs.cc	/^canReadAArch64SysReg(MiscRegIndex reg, SCR scr, CPSR cpsr, ThreadContext *tc)$/;"	f	namespace:ArmISA
canReadCoprocReg	src/arch/arm/miscregs.cc	/^canReadCoprocReg(MiscRegIndex reg, SCR scr, CPSR cpsr, ThreadContext *tc)$/;"	f	namespace:ArmISA
canSendInstToStage	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::canSendInstToStage(unsigned stage_num)$/;"	f	class:PipelineStage
canWB	src/cpu/o3/lsq_unit.hh	/^        bool canWB;$/;"	m	struct:LSQUnit::SQEntry
canWB	src/cpu/ozone/lsq_unit.hh	/^        bool canWB;$/;"	m	struct:OzoneLSQ::SQEntry
canWB	src/cpu/ozone/lw_lsq.hh	/^        bool canWB;$/;"	m	struct:OzoneLWLSQ::SQEntry
canWrite	src/cpu/inorder/reg_dep_map.cc	/^RegDepMap::canWrite(uint8_t reg_type, RegIndex idx, DynInstPtr inst)$/;"	f	class:RegDepMap
canWriteAArch64SysReg	src/arch/arm/miscregs.cc	/^canWriteAArch64SysReg(MiscRegIndex reg, SCR scr, CPSR cpsr, ThreadContext *tc)$/;"	f	namespace:ArmISA
canWriteCoprocReg	src/arch/arm/miscregs.cc	/^canWriteCoprocReg(MiscRegIndex reg, SCR scr, CPSR cpsr, ThreadContext *tc)$/;"	f	namespace:ArmISA
cancel_flags	src/kern/tru64/tru64.hh	/^        int cancel_flags;       \/\/!< cancel_flags$/;"	m	struct:Tru64::nxm_thread_attr
cancel_state	src/kern/tru64/tru64.hh	/^        int             cancel_state;   \/\/!< thread's cancelation state$/;"	m	struct:Tru64::ushared_state
canrestore	src/cpu/m5legion_interface.h	/^    uint8_t canrestore;$/;"	m	struct:__anon55
cansave	src/cpu/m5legion_interface.h	/^    uint8_t cansave;$/;"	m	struct:__anon55
capCoalescedMMIO	src/cpu/kvm/vm.cc	/^Kvm::capCoalescedMMIO() const$/;"	f	class:Kvm
capDebugRegs	src/cpu/kvm/vm.cc	/^Kvm::capDebugRegs() const$/;"	f	class:Kvm
capExtendedCPUID	src/cpu/kvm/vm.cc	/^Kvm::capExtendedCPUID() const$/;"	f	class:Kvm
capIRQChip	src/cpu/kvm/vm.cc	/^Kvm::capIRQChip() const$/;"	f	class:Kvm
capOneReg	src/cpu/kvm/vm.cc	/^Kvm::capOneReg() const$/;"	f	class:Kvm
capSetTSSAddress	src/cpu/kvm/vm.cc	/^Kvm::capSetTSSAddress() const$/;"	f	class:Kvm
capUserMemory	src/cpu/kvm/vm.cc	/^Kvm::capUserMemory() const$/;"	f	class:Kvm
capUserNMI	src/cpu/kvm/vm.cc	/^Kvm::capUserNMI() const$/;"	f	class:Kvm
capVCPUEvents	src/cpu/kvm/vm.cc	/^Kvm::capVCPUEvents() const$/;"	f	class:Kvm
capXCRs	src/cpu/kvm/vm.cc	/^Kvm::capXCRs() const$/;"	f	class:Kvm
capXSave	src/cpu/kvm/vm.cc	/^Kvm::capXSave() const$/;"	f	class:Kvm
cap_string	src/python/m5/util/terminal.py	/^    def cap_string(s, *args):$/;"	f	function:null_cap_string
capabilities	src/cpu/func_unit.cc	/^FuncUnit::capabilities()$/;"	f	class:FuncUnit
capabilityList	src/cpu/func_unit.hh	/^    std::bitset<Num_OpClasses> capabilityList;$/;"	m	class:FuncUnit
capabilityList	src/cpu/o3/fu_pool.hh	/^    std::bitset<Num_OpClasses> capabilityList;$/;"	m	class:FUPool
capabilityPtr	src/dev/pcireg.h	/^        uint8_t capabilityPtr;$/;"	m	struct:PCIConfig::__anon80
capability_map	src/python/m5/util/terminal.py	/^capability_map = {$/;"	v
capability_names	src/python/m5/util/terminal.py	/^capability_names = capability_map.keys()$/;"	v
capget	src/kern/linux/linux_syscalls.hh	/^    capget = 12,$/;"	e	enum:SystemCalls::__anon87
caplen	src/dev/etherdump.cc	/^    uint32_t caplen;            \/\/ length of portion present$/;"	m	struct:pcap_pkthdr	file:
capset	src/kern/linux/linux_syscalls.hh	/^    capset = 13,$/;"	e	enum:SystemCalls::__anon87
captureBitmap	src/base/vnc/vncinput.hh	/^    Bitmap *captureBitmap;$/;"	m	class:VncInput
captureCurrentFrame	src/base/vnc/vncinput.hh	/^    int captureCurrentFrame;$/;"	m	class:VncInput
captureEnabled	src/base/vnc/vncinput.hh	/^    bool captureEnabled;$/;"	m	class:VncInput
captureFrameBuffer	src/base/vnc/vncinput.cc	/^VncInput::captureFrameBuffer()$/;"	f	class:VncInput
captureLastHash	src/base/vnc/vncinput.hh	/^    uint64_t captureLastHash;$/;"	m	class:VncInput
captureOutputDirectory	src/base/vnc/vncinput.hh	/^    std::string captureOutputDirectory;$/;"	m	class:VncInput
cardbusCIS	src/dev/pcireg.h	/^        uint32_t cardbusCIS;$/;"	m	struct:PCIConfig::__anon80
cascadeBits	src/dev/x86/i8259.hh	/^    uint8_t cascadeBits;$/;"	m	class:X86ISA::I8259
cascadeMode	src/dev/x86/i8259.hh	/^    bool cascadeMode;$/;"	m	class:X86ISA::I8259
cat	src/arch/x86/isa/insts/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/general_purpose/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/general_purpose/arithmetic/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/general_purpose/compare_and_test/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/general_purpose/control_transfer/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/general_purpose/data_conversion/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/general_purpose/data_transfer/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/general_purpose/flags/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/general_purpose/input_output/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/general_purpose/rotate_and_shift/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/general_purpose/string/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/simd128/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/simd128/floating_point/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/simd128/floating_point/arithmetic/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/simd128/floating_point/compare/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/simd128/floating_point/data_conversion/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/simd128/floating_point/data_reordering/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/simd128/floating_point/data_transfer/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/simd128/floating_point/logical/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/simd128/integer/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/simd128/integer/arithmetic/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/simd128/integer/compare/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/simd128/integer/data_conversion/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/simd128/integer/data_reordering/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/simd128/integer/data_transfer/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/simd128/integer/logical/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/simd128/integer/save_and_restore_state/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/simd128/integer/shift/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/simd64/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/simd64/floating_point/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/simd64/floating_point/arithmetic/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/simd64/floating_point/compare/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/simd64/integer/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/simd64/integer/arithmetic/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/simd64/integer/compare/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/simd64/integer/data_reordering/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/simd64/integer/data_transfer/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/simd64/integer/logical/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/simd64/integer/shift/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/system/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/x87/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/x87/arithmetic/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/x87/compare_and_test/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/x87/control/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/x87/data_transfer_and_conversion/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/x87/load_constants/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/x87/stack_management/__init__.py	/^    exec "import %s as cat" % category$/;"	i
cat	src/arch/x86/isa/insts/x87/transcendental_functions/__init__.py	/^    exec "import %s as cat" % category$/;"	i
categories	src/arch/x86/isa/insts/__init__.py	/^categories = ["romutil",$/;"	v
categories	src/arch/x86/isa/insts/general_purpose/__init__.py	/^categories = ["arithmetic",$/;"	v
categories	src/arch/x86/isa/insts/general_purpose/arithmetic/__init__.py	/^categories = ["add_and_subtract",$/;"	v
categories	src/arch/x86/isa/insts/general_purpose/compare_and_test/__init__.py	/^categories = ["bit_scan",$/;"	v
categories	src/arch/x86/isa/insts/general_purpose/control_transfer/__init__.py	/^categories = ["call",$/;"	v
categories	src/arch/x86/isa/insts/general_purpose/data_conversion/__init__.py	/^categories = ["ascii_adjust",$/;"	v
categories	src/arch/x86/isa/insts/general_purpose/data_transfer/__init__.py	/^categories = ["conditional_move",$/;"	v
categories	src/arch/x86/isa/insts/general_purpose/flags/__init__.py	/^categories = ["load_and_store",$/;"	v
categories	src/arch/x86/isa/insts/general_purpose/input_output/__init__.py	/^categories = ["general_io",$/;"	v
categories	src/arch/x86/isa/insts/general_purpose/rotate_and_shift/__init__.py	/^categories = ["rotate",$/;"	v
categories	src/arch/x86/isa/insts/general_purpose/string/__init__.py	/^categories = ["compare_strings",$/;"	v
categories	src/arch/x86/isa/insts/simd128/__init__.py	/^categories = ["integer",$/;"	v
categories	src/arch/x86/isa/insts/simd128/floating_point/__init__.py	/^categories = ["data_transfer",$/;"	v
categories	src/arch/x86/isa/insts/simd128/floating_point/arithmetic/__init__.py	/^categories = ["addition",$/;"	v
categories	src/arch/x86/isa/insts/simd128/floating_point/compare/__init__.py	/^categories = ["compare_and_write_mask",$/;"	v
categories	src/arch/x86/isa/insts/simd128/floating_point/data_conversion/__init__.py	/^categories = ["convert_floating_point_to_floating_point",$/;"	v
categories	src/arch/x86/isa/insts/simd128/floating_point/data_reordering/__init__.py	/^categories = ["unpack_and_interleave",$/;"	v
categories	src/arch/x86/isa/insts/simd128/floating_point/data_transfer/__init__.py	/^categories = ["move",$/;"	v
categories	src/arch/x86/isa/insts/simd128/floating_point/logical/__init__.py	/^categories = ["andp",$/;"	v
categories	src/arch/x86/isa/insts/simd128/integer/__init__.py	/^categories = ["data_transfer",$/;"	v
categories	src/arch/x86/isa/insts/simd128/integer/arithmetic/__init__.py	/^categories = ["addition",$/;"	v
categories	src/arch/x86/isa/insts/simd128/integer/compare/__init__.py	/^categories = ["compare_and_write_mask",$/;"	v
categories	src/arch/x86/isa/insts/simd128/integer/data_conversion/__init__.py	/^categories = ["convert_integer_to_floating_point",$/;"	v
categories	src/arch/x86/isa/insts/simd128/integer/data_reordering/__init__.py	/^categories = ["pack_with_saturation",$/;"	v
categories	src/arch/x86/isa/insts/simd128/integer/data_transfer/__init__.py	/^categories = ["move",$/;"	v
categories	src/arch/x86/isa/insts/simd128/integer/logical/__init__.py	/^categories = ["pand",$/;"	v
categories	src/arch/x86/isa/insts/simd128/integer/save_and_restore_state/__init__.py	/^categories = ["save_and_restore_state",$/;"	v
categories	src/arch/x86/isa/insts/simd128/integer/shift/__init__.py	/^categories = ["left_logical_shift",$/;"	v
categories	src/arch/x86/isa/insts/simd64/__init__.py	/^categories = ["integer",$/;"	v
categories	src/arch/x86/isa/insts/simd64/floating_point/__init__.py	/^categories = ["data_conversion",$/;"	v
categories	src/arch/x86/isa/insts/simd64/floating_point/arithmetic/__init__.py	/^categories = ["addition",$/;"	v
categories	src/arch/x86/isa/insts/simd64/floating_point/compare/__init__.py	/^categories = ["compare_and_write_mask",$/;"	v
categories	src/arch/x86/isa/insts/simd64/integer/__init__.py	/^categories = ["exit_media_state",$/;"	v
categories	src/arch/x86/isa/insts/simd64/integer/arithmetic/__init__.py	/^categories = ["addition",$/;"	v
categories	src/arch/x86/isa/insts/simd64/integer/compare/__init__.py	/^categories = ["compare_and_write_mask",$/;"	v
categories	src/arch/x86/isa/insts/simd64/integer/data_reordering/__init__.py	/^categories = ["pack_with_saturation",$/;"	v
categories	src/arch/x86/isa/insts/simd64/integer/data_transfer/__init__.py	/^categories = ["move",$/;"	v
categories	src/arch/x86/isa/insts/simd64/integer/logical/__init__.py	/^categories = ["pand",$/;"	v
categories	src/arch/x86/isa/insts/simd64/integer/shift/__init__.py	/^categories = ["left_logical_shift",$/;"	v
categories	src/arch/x86/isa/insts/system/__init__.py	/^categories = ["control_registers",$/;"	v
categories	src/arch/x86/isa/insts/x87/__init__.py	/^categories = ["data_transfer_and_conversion",$/;"	v
categories	src/arch/x86/isa/insts/x87/arithmetic/__init__.py	/^categories = ["addition",$/;"	v
categories	src/arch/x86/isa/insts/x87/compare_and_test/__init__.py	/^categories = ["floating_point_ordered_compare",$/;"	v
categories	src/arch/x86/isa/insts/x87/control/__init__.py	/^categories = ["initialize",$/;"	v
categories	src/arch/x86/isa/insts/x87/data_transfer_and_conversion/__init__.py	/^categories = ["load_or_store_floating_point",$/;"	v
categories	src/arch/x86/isa/insts/x87/load_constants/__init__.py	/^categories = ["load_0_1_or_pi",$/;"	v
categories	src/arch/x86/isa/insts/x87/stack_management/__init__.py	/^categories = ["stack_control",$/;"	v
categories	src/arch/x86/isa/insts/x87/transcendental_functions/__init__.py	/^categories = ["trigonometric_functions",$/;"	v
cause	src/sim/sim_events.hh	/^    std::string cause;  \/\/ string explaining why we're terminating$/;"	m	class:CountedExitEvent
cause	src/sim/sim_events.hh	/^    std::string cause;$/;"	m	class:GlobalSimLoopExitEvent
cause	src/sim/sim_events.hh	/^    std::string cause;$/;"	m	class:LocalSimLoopExitEvent
caux	src/base/loader/coff_sym.h	/^    coff_int    caux;           \/* count of file's auxiliary entries *\/$/;"	m	struct:ecoff_fdr
cbAUXU	src/base/loader/coff_sym.h	/^#define cbAUXU /;"	d
cbAuxOffset	src/base/loader/coff_sym.h	/^    coff_addr   cbAuxOffset;    \/* offset to start of auxillary symbol entries*\/$/;"	m	struct:ecoff_symhdr
cbDNR	src/base/loader/coff_sym.h	/^#define cbDNR /;"	d
cbDnOffset	src/base/loader/coff_sym.h	/^    coff_addr   cbDnOffset;     \/* offset to start dense number table *\/$/;"	m	struct:ecoff_symhdr
cbEXTR	src/base/loader/coff_sym.h	/^#define cbEXTR /;"	d
cbExtOffset	src/base/loader/coff_sym.h	/^    coff_addr   cbExtOffset;    \/* offset to start of external symbol entries*\/$/;"	m	struct:ecoff_symhdr
cbFDR	src/base/loader/coff_sym.h	/^#define cbFDR /;"	d
cbFIT	src/base/loader/coff_sym.h	/^#define cbFIT /;"	d
cbFdOffset	src/base/loader/coff_sym.h	/^    coff_addr   cbFdOffset;     \/* offset to file descriptor table *\/$/;"	m	struct:ecoff_symhdr
cbHDRR	src/base/loader/coff_sym.h	/^#define cbHDRR /;"	d
cbLINER	src/base/loader/coff_sym.h	/^#define cbLINER /;"	d
cbLine	src/base/loader/coff_sym.h	/^    coff_addr   cbLine;         \/* number of bytes for line number entries *\/$/;"	m	struct:ecoff_symhdr
cbLine	src/base/loader/coff_sym.h	/^    coff_addr   cbLine;         \/* size of lines for this file *\/$/;"	m	struct:ecoff_fdr
cbLineOffset	src/base/loader/coff_sym.h	/^    coff_addr   cbLineOffset;   \/* byte offset for this procedure from the fd base *\/$/;"	m	struct:pdr
cbLineOffset	src/base/loader/coff_sym.h	/^    coff_addr   cbLineOffset;   \/* byte offset from header for this file ln's *\/$/;"	m	struct:ecoff_fdr
cbLineOffset	src/base/loader/coff_sym.h	/^    coff_addr   cbLineOffset;   \/* offset to start of line number entries*\/$/;"	m	struct:ecoff_symhdr
cbOPTR	src/base/loader/coff_sym.h	/^#define cbOPTR /;"	d
cbOptOffset	src/base/loader/coff_sym.h	/^    coff_addr   cbOptOffset;    \/* offset to optimization symbol entries *\/$/;"	m	struct:ecoff_symhdr
cbPDR	src/base/loader/coff_sym.h	/^#define cbPDR /;"	d
cbPdOffset	src/base/loader/coff_sym.h	/^    coff_addr   cbPdOffset;     \/* offset to procedure descriptor table *\/$/;"	m	struct:ecoff_symhdr
cbRFDT	src/base/loader/coff_sym.h	/^#define cbRFDT /;"	d
cbRNDXR	src/base/loader/coff_sym.h	/^#define cbRNDXR /;"	d
cbRfdOffset	src/base/loader/coff_sym.h	/^    coff_addr   cbRfdOffset;    \/* offset to relative file descriptor table *\/$/;"	m	struct:ecoff_symhdr
cbSYMR	src/base/loader/coff_sym.h	/^#define cbSYMR /;"	d
cbSs	src/base/loader/coff_sym.h	/^    coff_addr   cbSs;           \/* number of bytes in the ss *\/$/;"	m	struct:ecoff_fdr
cbSsExtOffset	src/base/loader/coff_sym.h	/^    coff_addr   cbSsExtOffset;  \/* offset to start of external strings *\/$/;"	m	struct:ecoff_symhdr
cbSsOffset	src/base/loader/coff_sym.h	/^    coff_addr   cbSsOffset;     \/* offset to start of local strings *\/$/;"	m	struct:ecoff_symhdr
cbSymOffset	src/base/loader/coff_sym.h	/^    coff_addr   cbSymOffset;    \/* offset to start of local symbols*\/$/;"	m	struct:ecoff_symhdr
cbTIR	src/base/loader/coff_sym.h	/^#define cbTIR /;"	d
cc	src/base/inet.hh	/^    uint32_t cc() const { return ntohl(opt_data.cc); }$/;"	f	struct:Net::TcpOpt
ccConnect	src/python/m5/params.py	/^    def ccConnect(self):$/;"	m	class:PortRef
ccConnect	src/python/m5/params.py	/^    def ccConnect(self):$/;"	m	class:VectorPortRef
ccFlagMask	src/arch/x86/regs/misc.hh	/^    const uint32_t ccFlagMask = PFBit | AFBit | ZFBit | SFBit;$/;"	m	namespace:X86ISA
ccList	src/cpu/o3/free_list.hh	/^    SimpleFreeList ccList;$/;"	m	class:UnifiedFreeList
ccMap	src/cpu/o3/rename_map.hh	/^    SimpleRenameMap ccMap;$/;"	m	class:UnifiedRenameMap
ccReg	src/arch/x86/registers.hh	/^    CCReg ccReg;$/;"	m	union:X86ISA::__anon35
ccRegFile	src/cpu/o3/regfile.hh	/^    std::vector<CCReg> ccRegFile;$/;"	m	class:PhysRegFile
ccRegfileReads	src/cpu/o3/cpu.hh	/^    Stats::Scalar ccRegfileReads;$/;"	m	class:FullO3CPU
ccRegfileWrites	src/cpu/o3/cpu.hh	/^    Stats::Scalar ccRegfileWrites;$/;"	m	class:FullO3CPU
ccRegs	src/cpu/inorder/cpu.hh	/^    TheISA::CCReg ccRegs[ThePipeline::MaxThreads][TheISA::NumCCRegs];$/;"	m	class:InOrderCPU
ccRegs	src/cpu/simple_thread.hh	/^    TheISA::CCReg ccRegs[TheISA::NumCCRegs];$/;"	m	class:SimpleThread
ccc	src/dev/pcireg.h	/^        Bitfield<6>     ccc;$/;"	m	struct:PXCAP
cchip	src/dev/alpha/Tsunami.py	/^    cchip = TsunamiCChip(pio_addr=0x801a0000000)$/;"	v	class:Tsunami
cchip	src/dev/alpha/tsunami.hh	/^    TsunamiCChip *cchip;$/;"	m	class:Tsunami
cchip	src/dev/mips/Malta.py	/^    cchip = MaltaCChip(pio_addr=0x801a0000000)$/;"	v	class:Malta
cchip	src/dev/mips/malta.hh	/^    MaltaCChip *cchip;$/;"	m	class:Malta
ccprintf	src/base/cprintf.hh	/^ccprintf(std::ostream &stream, const char *format, CPRINTF_DECLARATION)$/;"	f
ccprintf	src/base/cprintf.hh	/^ccprintf(std::ostream &stream, const char *format, const CPrintfArgsList &args)$/;"	f
ccprintf	src/base/cprintf.hh	/^ccprintf(std::ostream &stream, const std::string &format, CPRINTF_DECLARATION)$/;"	f
ccprintf	src/base/cprintf.hh	/^ccprintf(std::ostream &stream, const std::string &format,$/;"	f
ccr	src/cpu/m5legion_interface.h	/^    uint8_t ccr;$/;"	m	struct:__anon55
ccs128	src/dev/pcireg.h	/^        Bitfield<9>     ccs128;$/;"	m	struct:PXCAP
ccsr	src/dev/ns_gige.hh	/^    uint32_t    ccsr;$/;"	m	struct:dp_regs
cd	src/arch/arm/miscregs.hh	/^        Bitfield<32>     cd;    \/\/ AArch64$/;"	m	namespace:ArmISA
cd	src/arch/x86/regs/misc.hh	/^        Bitfield<30> cd; \/\/ Cache Disable$/;"	m	namespace:X86ISA
cdf	src/base/stats/info.hh	/^const FlagsType cdf =           0x0040;$/;"	m	namespace:Stats
cdf	src/base/stats/text.cc	/^    Result cdf;$/;"	m	struct:Stats::ScalarPrint	file:
cdslxlate	src/kern/tru64/tru64_syscalls.hh	/^        cdslxlate = 265,$/;"	e	enum:SystemCalls::__anon102
ce	src/arch/mips/pra_constants.hh	/^    Bitfield<29, 28> ce;$/;"	m	namespace:MipsISA
ce	src/dev/copy_engine.hh	/^        CopyEngine *ce;$/;"	m	class:CopyEngine::CopyEngineChannel
cePort	src/dev/copy_engine.hh	/^        DmaPort cePort;$/;"	m	class:CopyEngine::CopyEngineChannel
ced	src/dev/pcireg.h	/^        Bitfield<0>     ced;$/;"	m	struct:PXCAP
ceilLog2	src/base/intmath.hh	/^ceilLog2(T n)$/;"	f
ceilPow2	src/base/intmath.hh	/^ceilPow2(T n)$/;"	f
cere	src/dev/pcireg.h	/^        Bitfield<0>     cere;$/;"	m	struct:PXCAP
cf	src/arch/x86/regs/misc.hh	/^        Bitfield<0> cf; \/\/ Carry Flag$/;"	m	namespace:X86ISA
cf	src/arch/x86/regs/misc.hh	/^        Bitfield<0> cf;$/;"	m	namespace:X86ISA
cf_ctrl	src/dev/arm/RealView.py	/^    cf_ctrl = IdeController(disks=[], pci_func=0, pci_dev=0, pci_bus=2,$/;"	v	class:VExpress_EMM
cf_ctrl	src/dev/arm/RealView.py	/^    cf_ctrl = IdeController(disks=[], pci_func=0, pci_dev=7, pci_bus=2,$/;"	v	class:RealViewPBX
cflush	src/arch/alpha/osfpal.hh	/^        cflush = 0x01,$/;"	e	enum:PAL::__anon3
cfofMask	src/arch/x86/regs/misc.hh	/^    const uint32_t cfofMask = CFBit | OFBit;$/;"	m	namespace:X86ISA
chan	src/dev/copy_engine.hh	/^    std::vector<CopyEngineChannel*> chan;$/;"	m	class:CopyEngine
chanCount	src/dev/copy_engine_defs.hh	/^    uint8_t chanCount;$/;"	m	struct:CopyEngineReg::Regs
changeAddress	src/cpu/testers/rubytest/Check.cc	/^Check::changeAddress(const Address& address)$/;"	f	class:Check
changeConfig	src/dev/sinic.cc	/^Device::changeConfig(uint32_t newconf)$/;"	f	class:Sinic::Device
changeFlag	src/base/debug.cc	/^changeFlag(const char *s, bool value)$/;"	f	namespace:Debug
changeMode	src/arch/alpha/kernel_stats.cc	/^Statistics::changeMode(cpu_mode newmode, ThreadContext *tc)$/;"	f	class:AlphaISA::Kernel::Statistics
changePermission	src/mem/ruby/slicc_interface/AbstractCacheEntry.cc	/^AbstractCacheEntry::changePermission(AccessPermission new_perm)$/;"	f	class:AbstractCacheEntry
changePermission	src/mem/ruby/slicc_interface/AbstractEntry.cc	/^AbstractEntry::changePermission(AccessPermission new_perm)$/;"	f	class:AbstractEntry
changePermission	src/mem/ruby/system/PerfectCacheMemory.hh	/^PerfectCacheMemory<ENTRY>::changePermission(const Address& address,$/;"	f	class:PerfectCacheMemory
changeRegFileContext	src/cpu/inorder/thread_context.hh	/^    void changeRegFileContext(unsigned param,$/;"	f	class:InOrderThreadContext
change_thread_state	src/cpu/simple/base.cc	/^change_thread_state(ThreadID tid, int activate, int priority)$/;"	f
changed	src/arch/arm/nativetrace.hh	/^        bool changed[STATE_NUMVALS];$/;"	m	struct:Trace::ArmNativeTrace::ThreadState
changedPC	src/cpu/checker/cpu.hh	/^    bool changedPC;$/;"	m	class:CheckerCPU
changedROBEntries	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::changedROBEntries()$/;"	f	class:DefaultCommit
changedROBNumEntries	src/cpu/o3/commit.hh	/^    bool changedROBNumEntries[Impl::MaxThreads];$/;"	m	class:DefaultCommit
channelId	src/dev/copy_engine.hh	/^        int channelId;$/;"	m	class:CopyEngine::CopyEngineChannel
channelRead	src/dev/copy_engine.cc	/^CopyEngine::CopyEngineChannel::channelRead(Packet *pkt, Addr daddr, int size)$/;"	f	class:CopyEngine::CopyEngineChannel
channelWrite	src/dev/copy_engine.cc	/^CopyEngine::CopyEngineChannel::channelWrite(Packet *pkt, Addr daddr, int size)$/;"	f	class:CopyEngine::CopyEngineChannel
channel_width	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.py	/^    channel_width = Param.Int(Parent.bandwidth_factor,$/;"	v	class:NetworkLink_d
channel_width	src/mem/ruby/network/garnet/fixed-pipeline/NetworkLink_d.hh	/^    int channel_width;$/;"	m	class:NetworkLink_d
channel_width	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.py	/^    channel_width = Param.Int(Parent.bandwidth_factor,$/;"	v	class:NetworkLink
channels	src/mem/DRAMCtrl.py	/^    channels = Param.Unsigned(1, "Number of channels")$/;"	v	class:DRAMCtrl
channels	src/mem/dram_ctrl.hh	/^    const uint32_t channels;$/;"	m	class:DRAMCtrl
character	src/base/cprintf_formats.hh	/^    enum { none, string, integer, character, floating } format;$/;"	e	enum:cp::Format::__anon38
characteristicExtBytes	src/arch/x86/bios/smbios.hh	/^    uint16_t characteristicExtBytes;$/;"	m	class:X86ISA::SMBios::BiosInformation
characteristic_ext_bytes	src/arch/x86/bios/SMBios.py	/^    characteristic_ext_bytes = VectorParam.ExtCharacteristic([],$/;"	v	class:X86SMBiosBiosInformation
characteristics	src/arch/x86/bios/SMBios.py	/^    characteristics = VectorParam.Characteristic([],$/;"	v	class:X86SMBiosBiosInformation
characteristics	src/arch/x86/bios/smbios.hh	/^    uint64_t characteristics;$/;"	m	class:X86ISA::SMBios::BiosInformation
chatty_assert	src/base/misc.hh	/^#define chatty_assert(/;"	d
chdir	src/kern/linux/linux_syscalls.hh	/^    chdir = 14,$/;"	e	enum:SystemCalls::__anon87
chdir	src/kern/tru64/tru64_syscalls.hh	/^        chdir = 12,$/;"	e	enum:SystemCalls::__anon102
check	src/arch/arm/nativetrace.cc	/^Trace::ArmNativeTrace::check(NativeTraceRecord *record)$/;"	f	class:Trace::Trace::ArmNativeTrace
check	src/arch/sparc/nativetrace.cc	/^Trace::SparcNativeTrace::check(NativeTraceRecord *record)$/;"	f	class:Trace::Trace::SparcNativeTrace
check	src/arch/x86/nativetrace.cc	/^X86NativeTrace::check(NativeTraceRecord *record)$/;"	f	class:Trace::X86NativeTrace
check	src/base/statistics.hh	/^    bool check() const { return proxy != NULL; }$/;"	f	class:Stats::ValueBase
check	src/base/statistics.hh	/^    bool check() const { return s.check(); }$/;"	f	class:Stats::InfoProxy
check	src/base/statistics.hh	/^    bool check() const { return true; }$/;"	f	class:Stats::InfoAccess
check	src/base/statistics.hh	/^    bool check() const { return true; }$/;"	f	class:Stats::ProxyInfo
check	src/base/statistics.hh	/^    check() const$/;"	f	class:Stats::Vector2dBase
check	src/base/statistics.hh	/^    check() const$/;"	f	class:Stats::VectorBase
check	src/base/statistics.hh	/^    check() const$/;"	f	class:Stats::VectorDistBase
check	src/dev/pktfifo.hh	/^    void check()$/;"	f	class:PacketFifo
check	src/mem/cache/tags/fa_lru.cc	/^FALRU::check()$/;"	f	class:FALRU
checkAddrSizeFaultAArch64	src/arch/arm/table_walker.cc	/^TableWalker::checkAddrSizeFaultAArch64(Addr addr, int currPhysAddrRange)$/;"	f	class:TableWalker
checkBE	src/cpu/ozone/front_end_impl.hh	/^FrontEnd<Impl>::checkBE()$/;"	f	class:FrontEnd
checkCacheability	src/arch/alpha/tlb.cc	/^TLB::checkCacheability(RequestPtr &req, bool itb)$/;"	f	class:AlphaISA::TLB
checkCacheability	src/arch/mips/tlb.cc	/^TLB::checkCacheability(RequestPtr &req)$/;"	f	class:TLB
checkCacheability	src/arch/power/tlb.cc	/^TLB::checkCacheability(RequestPtr &req)$/;"	f	class:TLB
checkClear	src/cpu/o3/store_set.cc	/^StoreSet::checkClear()$/;"	f	class:StoreSet
checkCoherence	src/mem/ruby/system/Sequencer.cc	/^Sequencer::checkCoherence(const Address& addr)$/;"	f	class:Sequencer
checkCondition	src/arch/x86/insts/microop.cc	/^    bool X86MicroopBase::checkCondition(uint64_t flags, int condition) const$/;"	f	class:X86ISA::X86MicroopBase
checkConflict	src/cpu/ozone/ea_list.cc	/^EAList::checkConflict(const InstSeqNum &check_sn, const Addr &check_ea) const$/;"	f	class:EAList
checkDispatchStatus	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::checkDispatchStatus()$/;"	f	class:BackEnd
checkDispatchStatus	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::checkDispatchStatus()$/;"	f	class:LWBackEnd
checkDrain	src/dev/i8254xGBe.cc	/^IGbE::checkDrain()$/;"	f	class:IGbE
checkELMatch	src/arch/arm/tlb.cc	/^TLB::checkELMatch(uint8_t target_el, uint8_t tentry_el, bool ignore_el)$/;"	f	class:TLB
checkEmptyROB	src/cpu/o3/commit.hh	/^    bool checkEmptyROB[Impl::MaxThreads];$/;"	m	class:DefaultCommit
checkExtension	src/cpu/kvm/vm.cc	/^Kvm::checkExtension(int extension) const$/;"	f	class:Kvm
checkFlags	src/cpu/checker/cpu.cc	/^CheckerCPU::checkFlags(Request *unverified_req, Addr vAddr,$/;"	f	class:CheckerCPU
checkForDeadlock	src/cpu/testers/rubytest/RubyTester.cc	/^RubyTester::checkForDeadlock()$/;"	f	class:RubyTester
checkForInterrupts	src/cpu/inorder/cpu.cc	/^InOrderCPU::checkForInterrupts()$/;"	f	class:InOrderCPU
checkForInterrupts	src/cpu/simple/base.cc	/^BaseSimpleCPU::checkForInterrupts()$/;"	f	class:BaseSimpleCPU
checkForStdio	src/base/output.cc	/^OutputDirectory::checkForStdio(const string &name) const$/;"	f	class:OutputDirectory
checkFunctional	src/mem/bridge.cc	/^Bridge::BridgeMasterPort::checkFunctional(PacketPtr pkt)$/;"	f	class:Bridge::BridgeMasterPort
checkFunctional	src/mem/cache/mshr.cc	/^MSHR::TargetList::checkFunctional(PacketPtr pkt)$/;"	f	class:MSHR::TargetList
checkFunctional	src/mem/cache/mshr.cc	/^MSHR::checkFunctional(PacketPtr pkt)$/;"	f	class:MSHR
checkFunctional	src/mem/cache/mshr_queue.cc	/^MSHRQueue::checkFunctional(PacketPtr pkt, Addr blk_addr)$/;"	f	class:MSHRQueue
checkFunctional	src/mem/packet.cc	/^Packet::checkFunctional(Printable *obj, Addr addr, bool is_secure, int size,$/;"	f	class:Packet
checkFunctional	src/mem/packet.hh	/^    checkFunctional(PacketPtr other) $/;"	f	class:Packet
checkFunctional	src/mem/packet_queue.cc	/^PacketQueue::checkFunctional(PacketPtr pkt)$/;"	f	class:PacketQueue
checkFunctional	src/mem/qport.hh	/^    bool checkFunctional(PacketPtr pkt) { return queue.checkFunctional(pkt); }$/;"	f	class:QueuedMasterPort
checkFunctional	src/mem/qport.hh	/^    bool checkFunctional(PacketPtr pkt) { return queue.checkFunctional(pkt); }$/;"	f	class:QueuedSlavePort
checkGlobalCoherenceInvariant	src/mem/ruby/system/System.cc	/^RubySystem::checkGlobalCoherenceInvariant(const Address& addr)$/;"	f	class:RubySystem
checkInst	src/cpu/o3/store_set.cc	/^StoreSet::checkInst(Addr PC)$/;"	f	class:StoreSet
checkInterrupt	src/cpu/o3/fetch.hh	/^    checkInterrupt(Addr pc)$/;"	f	class:DefaultFetch
checkInterrupts	src/arch/alpha/interrupts.hh	/^    checkInterrupts(ThreadContext *tc) const$/;"	f	class:AlphaISA::Interrupts
checkInterrupts	src/arch/arm/interrupts.hh	/^    checkInterrupts(ThreadContext *tc) const$/;"	f	class:ArmISA::Interrupts
checkInterrupts	src/arch/mips/interrupts.hh	/^    checkInterrupts(ThreadContext *tc) const$/;"	f	class:MipsISA::Interrupts
checkInterrupts	src/arch/power/interrupts.hh	/^    checkInterrupts(ThreadContext *tc) const$/;"	f	class:PowerISA::Interrupts
checkInterrupts	src/arch/sparc/interrupts.hh	/^    checkInterrupts(ThreadContext *tc) const$/;"	f	class:SparcISA::Interrupts
checkInterrupts	src/arch/x86/interrupts.cc	/^X86ISA::Interrupts::checkInterrupts(ThreadContext *tc) const$/;"	f	class:X86ISA::Interrupts
checkInterrupts	src/cpu/base.hh	/^    checkInterrupts(ThreadContext *tc) const$/;"	f	class:BaseCPU
checkInterrupts	src/cpu/ozone/inorder_back_end_impl.hh	/^InorderBackEnd<Impl>::checkInterrupts()$/;"	f	class:InorderBackEnd
checkInterrupts	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::checkInterrupts()$/;"	f	class:LWBackEnd
checkInterruptsRaw	src/arch/x86/interrupts.cc	/^X86ISA::Interrupts::checkInterruptsRaw() const$/;"	f	class:X86ISA::Interrupts
checkLoads	src/cpu/o3/lsq_unit.hh	/^    bool checkLoads;$/;"	m	class:LSQUnit
checkLockedAddrList	src/mem/abstract_mem.cc	/^AbstractMemory::checkLockedAddrList(PacketPtr pkt)$/;"	f	class:AbstractMemory
checkMisprediction	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::checkMisprediction(DynInstPtr &inst)$/;"	f	class:DefaultIEW
checkNetworkAllocation	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.cc	/^GarnetNetwork_d::checkNetworkAllocation(NodeID id, bool ordered,$/;"	f	class:GarnetNetwork_d
checkNetworkAllocation	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.cc	/^GarnetNetwork::checkNetworkAllocation(NodeID id, bool ordered,$/;"	f	class:GarnetNetwork
checkNetworkAllocation	src/mem/ruby/network/simple/SimpleNetwork.cc	/^SimpleNetwork::checkNetworkAllocation(NodeID id, bool ordered, int network_num)$/;"	f	class:SimpleNetwork
checkOverflow	src/arch/mips/dsp.cc	/^MipsISA::checkOverflow(uint64_t value, int32_t fmt, int32_t sign,$/;"	f	class:MipsISA
checkPcEventQueue	src/cpu/simple/base.hh	/^    inline void checkPcEventQueue() {$/;"	f	class:BaseSimpleCPU
checkPermissions	src/arch/arm/tlb.cc	/^TLB::checkPermissions(TlbEntry *te, RequestPtr req, Mode mode)$/;"	f	class:TLB
checkPermissions64	src/arch/arm/tlb.cc	/^TLB::checkPermissions64(TlbEntry *te, RequestPtr req, Mode mode,$/;"	f	class:TLB
checkPortCache	src/mem/bus.hh	/^    inline PortID checkPortCache(Addr addr) const {$/;"	f	class:BaseBus
checkProtocolVersion	src/base/vnc/vncserver.cc	/^VncServer::checkProtocolVersion()$/;"	f	class:VncServer
checkR11	src/arch/x86/nativetrace.hh	/^    bool checkR11;$/;"	m	class:Trace::X86NativeTrace
checkR11Reg	src/arch/x86/nativetrace.cc	/^X86NativeTrace::checkR11Reg(const char * name, uint64_t &mVal, uint64_t &nVal)$/;"	f	class:Trace::X86NativeTrace
checkRaw	src/arch/arm/interrupts.hh	/^    checkRaw(InterruptTypes interrupt) const$/;"	f	class:ArmISA::Interrupts
checkRcx	src/arch/x86/nativetrace.hh	/^    bool checkRcx;$/;"	m	class:Trace::X86NativeTrace
checkRcxReg	src/arch/x86/nativetrace.cc	/^X86NativeTrace::checkRcxReg(const char * name, uint64_t &mVal, uint64_t &nVal)$/;"	f	class:Trace::X86NativeTrace
checkReg	src/cpu/nativetrace.hh	/^    checkReg(const char * regName, T &val, T &realVal)$/;"	f	class:Trace::NativeTrace
checkReschedule	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.cc	/^NetworkInterface_d::checkReschedule()$/;"	f	class:NetworkInterface_d
checkReschedule	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.cc	/^NetworkInterface::checkReschedule()$/;"	f	class:NetworkInterface
checkReschedule	src/mem/ruby/network/garnet/flexible-pipeline/Router.cc	/^Router::checkReschedule()$/;"	f	class:Router
checkResourceAvailable	src/mem/ruby/system/CacheMemory.cc	/^CacheMemory::checkResourceAvailable(CacheResourceType res, Address addr)$/;"	f	class:CacheMemory
checkSecurity	src/base/vnc/vncserver.cc	/^VncServer::checkSecurity()$/;"	f	class:VncServer
checkSeg	src/cpu/kvm/x86_cpu.cc	/^checkSeg(const char *name, const int idx, const struct kvm_segment &seg,$/;"	f	file:
checkSignalsAndUpdate	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::checkSignalsAndUpdate(ThreadID tid)$/;"	f	class:PipelineStage
checkSignalsAndUpdate	src/cpu/o3/decode_impl.hh	/^DefaultDecode<Impl>::checkSignalsAndUpdate(ThreadID tid)$/;"	f	class:DefaultDecode
checkSignalsAndUpdate	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::checkSignalsAndUpdate(ThreadID tid)$/;"	f	class:DefaultFetch
checkSignalsAndUpdate	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::checkSignalsAndUpdate(ThreadID tid)$/;"	f	class:DefaultIEW
checkSignalsAndUpdate	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::checkSignalsAndUpdate(ThreadID tid)$/;"	f	class:DefaultRename
checkSnoop	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::checkSnoop(PacketPtr pkt)$/;"	f	class:LSQUnit
checkSoftInt	src/arch/sparc/ua2005.cc	/^ISA::checkSoftInt(ThreadContext *tc)$/;"	f	class:ISA
checkStall	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::checkStall(ThreadID tid) const$/;"	f	class:PipelineStage
checkStall	src/cpu/o3/decode_impl.hh	/^DefaultDecode<Impl>::checkStall(ThreadID tid) const$/;"	f	class:DefaultDecode
checkStall	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::checkStall(ThreadID tid) const$/;"	f	class:DefaultFetch
checkStall	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::checkStall(ThreadID tid)$/;"	f	class:DefaultIEW
checkStall	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::checkStall(ThreadID tid)$/;"	f	class:DefaultRename
checkStartEvent	src/cpu/testers/rubytest/RubyTester.hh	/^    CheckStartEvent checkStartEvent;$/;"	m	class:RubyTester
checkVal	src/unittest/unittest.cc	/^checkVal(const char *file, const unsigned line,$/;"	f	namespace:UnitTest
checkViolations	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::checkViolations(int load_idx, DynInstPtr &inst)$/;"	f	class:LSQUnit
checkWfiWake	src/arch/arm/interrupts.hh	/^    checkWfiWake(HCR hcr, CPSR cpsr, SCR scr) const$/;"	f	class:ArmISA::Interrupts
checkWrite	src/mem/cache/blk.hh	/^    bool checkWrite(PacketPtr pkt)$/;"	f	class:CacheBlk
checkXMM	src/arch/x86/nativetrace.cc	/^X86NativeTrace::checkXMM(int num, uint64_t mXmmBuf[], uint64_t nXmmBuf[])$/;"	f	class:Trace::X86NativeTrace
check_arbiter_reschedule	src/mem/ruby/network/garnet/flexible-pipeline/Router.cc	/^Router::check_arbiter_reschedule()$/;"	f	class:Router
check_flush	src/cpu/testers/rubytest/RubyTester.py	/^    check_flush = Param.Bool(False, "check cache flushing")$/;"	v	class:RubyTester
check_for_wakeup	src/mem/ruby/network/garnet/fixed-pipeline/SWallocator_d.cc	/^SWallocator_d::check_for_wakeup()$/;"	f	class:SWallocator_d
check_for_wakeup	src/mem/ruby/network/garnet/fixed-pipeline/Switch_d.cc	/^Switch_d::check_for_wakeup()$/;"	f	class:Switch_d
check_for_wakeup	src/mem/ruby/network/garnet/fixed-pipeline/VCallocator_d.cc	/^VCallocator_d::check_for_wakeup()$/;"	f	class:VCallocator_d
check_tracing	src/python/m5/main.py	/^    def check_tracing():$/;"	f	function:main
checkchildren	src/python/m5/util/jobfile.py	/^    def checkchildren(self, kids):$/;"	m	class:Configuration
checker	src/cpu/BaseCPU.py	/^    checker = Param.BaseCPU(NULL, "checker CPU")$/;"	v
checker	src/cpu/o3/cpu.hh	/^    Checker<Impl> *checker;$/;"	m	class:FullO3CPU
checker	src/cpu/ozone/cpu.hh	/^    Checker<DynInstPtr> *checker;$/;"	m	class:OzoneCPU
checker	src/cpu/ozone/lw_back_end.hh	/^    Checker<DynInstPtr> *checker;$/;"	m	class:LWBackEnd
checker	src/cpu/simple/base.hh	/^    CheckerCPU *checker;$/;"	m	class:BaseSimpleCPU
checkerCPU	src/cpu/checker/thread_context.hh	/^    CheckerCPU *checkerCPU;$/;"	m	class:CheckerThreadContext
checkerTC	src/cpu/checker/thread_context.hh	/^    SimpleThread *checkerTC;$/;"	m	class:CheckerThreadContext
checkerTC	src/cpu/ozone/cpu.hh	/^    ThreadContext *checkerTC;$/;"	m	class:OzoneCPU
checkpoint	src/python/m5/simulate.py	/^def checkpoint(dir):$/;"	f
checkpoints	src/python/m5/util/jobfile.py	/^    def checkpoints(self, groups=None):$/;"	m	class:Configuration
checks_to_complete	src/cpu/testers/rubytest/RubyTester.py	/^    checks_to_complete = Param.Int(100, "checks to complete")$/;"	v	class:RubyTester
checksum	src/kern/tru64/mbuf.hh	/^    Addr        checksum;       \/\/ 0x40$/;"	m	struct:tru64::m_ext
chflags	src/kern/tru64/tru64_syscalls.hh	/^        chflags = 34,$/;"	e	enum:SystemCalls::__anon102
child	src/dev/DiskImage.py	/^    child = Param.DiskImage(RawDiskImage(read_only=True),$/;"	v	class:CowDiskImage
child	src/dev/disk_image.hh	/^    DiskImage *child;$/;"	m	class:CowDiskImage
children	src/cpu/profile.hh	/^    ChildList children;$/;"	m	class:ProfileNode
children	src/sim/clock_domain.hh	/^    std::vector<DerivedClockDomain*> children;$/;"	m	class:ClockDomain
chkInterrupt	src/dev/i8254xGBe.cc	/^IGbE::chkInterrupt()$/;"	f	class:IGbE
chmod	src/kern/linux/linux_syscalls.hh	/^    chmod = 15,$/;"	e	enum:SystemCalls::__anon87
chmod	src/kern/tru64/tru64_syscalls.hh	/^        chmod = 15,$/;"	e	enum:SystemCalls::__anon102
chmodFunc	src/sim/syscall_emul.hh	/^chmodFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
choiceCtrBits	src/cpu/ozone/OzoneCPU.py	/^    choiceCtrBits = Param.Unsigned("Bits of choice counters")$/;"	v	class:DerivOzoneCPU
choiceCtrBits	src/cpu/ozone/SimpleOzoneCPU.py	/^    choiceCtrBits = Param.Unsigned("Bits of choice counters")$/;"	v	class:SimpleOzoneCPU
choiceCtrBits	src/cpu/ozone/simple_params.hh	/^    unsigned choiceCtrBits;$/;"	m	class:SimpleParams
choiceCtrBits	src/cpu/pred/BranchPredictor.py	/^    choiceCtrBits = Param.Unsigned(2, "Bits of choice counters")$/;"	v	class:BranchPredictor
choiceCtrBits	src/cpu/pred/tournament.hh	/^    unsigned choiceCtrBits;$/;"	m	class:TournamentBP
choiceCtrs	src/cpu/pred/tournament.hh	/^    std::vector<SatCounter> choiceCtrs;$/;"	m	class:TournamentBP
choiceHistoryMask	src/cpu/pred/tournament.hh	/^    unsigned choiceHistoryMask;$/;"	m	class:TournamentBP
choicePredictorSize	src/cpu/ozone/OzoneCPU.py	/^    choicePredictorSize = Param.Unsigned("Size of choice predictor")$/;"	v	class:DerivOzoneCPU
choicePredictorSize	src/cpu/ozone/SimpleOzoneCPU.py	/^    choicePredictorSize = Param.Unsigned("Size of choice predictor")$/;"	v	class:SimpleOzoneCPU
choicePredictorSize	src/cpu/ozone/simple_params.hh	/^    unsigned choicePredictorSize;$/;"	m	class:SimpleParams
choicePredictorSize	src/cpu/pred/BranchPredictor.py	/^    choicePredictorSize = Param.Unsigned(8192, "Size of choice predictor")$/;"	v	class:BranchPredictor
choicePredictorSize	src/cpu/pred/tournament.hh	/^    unsigned choicePredictorSize;$/;"	m	class:TournamentBP
choiceThreshold	src/cpu/pred/tournament.hh	/^    unsigned choiceThreshold;$/;"	m	class:TournamentBP
chooseNextRead	src/mem/dram_ctrl.cc	/^DRAMCtrl::chooseNextRead()$/;"	f	class:DRAMCtrl
chooseNextWrite	src/mem/dram_ctrl.cc	/^DRAMCtrl::chooseNextWrite()$/;"	f	class:DRAMCtrl
chown	src/kern/linux/linux_syscalls.hh	/^    chown = 16,$/;"	e	enum:SystemCalls::__anon87
chown	src/kern/tru64/tru64_syscalls.hh	/^        chown = 16,$/;"	e	enum:SystemCalls::__anon102
chown32	src/kern/linux/linux_syscalls.hh	/^    chown32 = 17,$/;"	e	enum:SystemCalls::__anon87
chownFunc	src/sim/syscall_emul.cc	/^chownFunc(SyscallDesc *desc, int num, LiveProcess *p, ThreadContext *tc)$/;"	f
chroot	src/kern/linux/linux_syscalls.hh	/^    chroot = 18,$/;"	e	enum:SystemCalls::__anon87
chroot	src/kern/tru64/tru64_syscalls.hh	/^        chroot = 61,$/;"	e	enum:SystemCalls::__anon102
chunkIdx	src/arch/x86/decoder.hh	/^    int chunkIdx;$/;"	m	class:X86ISA::Decoder
chunkSize	src/base/chunk_generator.hh	/^    const unsigned chunkSize;$/;"	m	class:ChunkGenerator
chunks	src/arch/x86/decoder.hh	/^        std::vector<MachInst> chunks;$/;"	m	struct:X86ISA::Decoder::InstBytes
cid	src/dev/pcireg.h	/^        Bitfield<7,0>   cid;$/;"	m	struct:MSICAP
cid	src/dev/pcireg.h	/^        Bitfield<7,0>   cid;$/;"	m	struct:MSIXCAP
cid	src/dev/pcireg.h	/^        Bitfield<7,0>   cid;$/;"	m	struct:PMCAP
cid	src/dev/pcireg.h	/^        Bitfield<7,0>   cid;$/;"	m	struct:PXCAP
ckptCount	src/sim/serialize.cc	/^int Serializable::ckptCount = 0;$/;"	m	class:Serializable	file:
ckptCount	src/sim/serialize.hh	/^    static int ckptCount;$/;"	m	class:Serializable
ckptMaxCount	src/sim/serialize.cc	/^int Serializable::ckptMaxCount = 0;$/;"	m	class:Serializable	file:
ckptMaxCount	src/sim/serialize.hh	/^    static int ckptMaxCount;$/;"	m	class:Serializable
ckptPrevCount	src/sim/serialize.cc	/^int Serializable::ckptPrevCount = -1;$/;"	m	class:Serializable	file:
ckptPrevCount	src/sim/serialize.hh	/^    static int ckptPrevCount;$/;"	m	class:Serializable
cksum	src/base/inet.cc	/^cksum(const IpPtr &ptr)$/;"	f	namespace:Net
cksum	src/base/inet.cc	/^cksum(const TcpPtr &tcp)$/;"	f	namespace:Net
cksum	src/base/inet.cc	/^cksum(const UdpPtr &udp)$/;"	f	namespace:Net
cksum	src/base/inet.hh	/^    uint8_t cksum() const{ return opt_data.cksum; }$/;"	f	struct:Net::TcpOpt
classCode	src/dev/pcireg.h	/^        uint8_t classCode;$/;"	m	struct:PCIConfig::__anon80
classMap	src/sim/serialize.cc	/^map<string, SerializableClass::CreateFunc> *SerializableClass::classMap = 0;$/;"	m	class:SerializableClass	file:
classMap	src/sim/serialize.hh	/^    static std::map<std::string,CreateFunc> *classMap;$/;"	m	class:SerializableClass
classcntl	src/kern/tru64/tru64_syscalls.hh	/^        classcntl = 53,$/;"	e	enum:SystemCalls::__anon102
clcd	src/dev/arm/RealView.py	/^    clcd   = Pl111(pio_addr=0x10020000, int_num=23)$/;"	v	class:RealViewEB
clcd	src/dev/arm/RealView.py	/^    clcd   = Pl111(pio_addr=0x1c1f0000, int_num=46)$/;"	v	class:VExpress_EMM
clcd	src/dev/arm/RealView.py	/^    clcd = Pl111(pio_addr=0x10020000, int_num=55)$/;"	v	class:RealViewPBX
clcdCrsrClip	src/dev/arm/pl111.hh	/^    int clcdCrsrClip;$/;"	m	class:Pl111
clcdCrsrConfig	src/dev/arm/pl111.hh	/^    int clcdCrsrConfig;$/;"	m	class:Pl111
clcdCrsrCtrl	src/dev/arm/pl111.hh	/^    int clcdCrsrCtrl;$/;"	m	class:Pl111
clcdCrsrIcr	src/dev/arm/pl111.hh	/^    InterruptReg clcdCrsrIcr;$/;"	m	class:Pl111
clcdCrsrImsc	src/dev/arm/pl111.hh	/^    InterruptReg clcdCrsrImsc;$/;"	m	class:Pl111
clcdCrsrMis	src/dev/arm/pl111.hh	/^    InterruptReg clcdCrsrMis;$/;"	m	class:Pl111
clcdCrsrPalette0	src/dev/arm/pl111.hh	/^    int clcdCrsrPalette0;$/;"	m	class:Pl111
clcdCrsrPalette1	src/dev/arm/pl111.hh	/^    int clcdCrsrPalette1;$/;"	m	class:Pl111
clcdCrsrRis	src/dev/arm/pl111.hh	/^    InterruptReg clcdCrsrRis;$/;"	m	class:Pl111
clcdCrsrXY	src/dev/arm/pl111.hh	/^    int clcdCrsrXY;$/;"	m	class:Pl111
cle	src/arch/sparc/miscregs.hh	/^    Bitfield<9> cle;$/;"	m	namespace:SparcISA
cleanUpRemovedEvents	src/cpu/inorder/cpu.cc	/^InOrderCPU::cleanUpRemovedEvents()$/;"	f	class:InOrderCPU
cleanUpRemovedInsts	src/cpu/inorder/cpu.cc	/^InOrderCPU::cleanUpRemovedInsts()$/;"	f	class:InOrderCPU
cleanUpRemovedInsts	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::cleanUpRemovedInsts()$/;"	f	class:FullO3CPU
cleanupRefs	src/mem/cache/tags/base.hh	/^    virtual void cleanupRefs() {}$/;"	f	class:BaseTags
cleanupRefs	src/mem/cache/tags/lru.cc	/^LRU::cleanupRefs()$/;"	f	class:LRU
cleanwin	src/cpu/m5legion_interface.h	/^    uint8_t cleanwin;$/;"	m	struct:__anon55
clear	src/arch/alpha/interrupts.hh	/^    clear(int int_num, int index)$/;"	f	class:AlphaISA::Interrupts
clear	src/arch/alpha/isa.hh	/^        clear()$/;"	f	class:AlphaISA::ISA
clear	src/arch/alpha/stacktrace.hh	/^    clear()$/;"	f	class:AlphaISA::StackTrace
clear	src/arch/arm/interrupts.hh	/^    clear(int int_num, int index)$/;"	f	class:ArmISA::Interrupts
clear	src/arch/arm/isa.cc	/^ISA::clear()$/;"	f	class:ArmISA::ISA
clear	src/arch/arm/stacktrace.hh	/^    void clear()$/;"	f	class:ArmISA::StackTrace
clear	src/arch/mips/interrupts.cc	/^Interrupts::clear(int int_num, ThreadContext* tc)$/;"	f	class:MipsISA::Interrupts
clear	src/arch/mips/interrupts.cc	/^Interrupts::clear(int int_num, int index)$/;"	f	class:MipsISA::Interrupts
clear	src/arch/mips/isa.cc	/^ISA::clear()$/;"	f	class:MipsISA::ISA
clear	src/arch/mips/stacktrace.hh	/^    void clear()$/;"	f	class:MipsISA::StackTrace
clear	src/arch/power/interrupts.hh	/^    clear(int int_num, int index)$/;"	f	class:PowerISA::Interrupts
clear	src/arch/power/isa.hh	/^    clear()$/;"	f	class:PowerISA::ISA
clear	src/arch/power/stacktrace.hh	/^    clear()$/;"	f	class:PowerISA::StackTrace
clear	src/arch/sparc/interrupts.hh	/^    clear(int int_num, int index)$/;"	f	class:SparcISA::Interrupts
clear	src/arch/sparc/isa.cc	/^ISA::clear()$/;"	f	class:SparcISA::ISA
clear	src/arch/sparc/pagetable.hh	/^    clear()$/;"	f	class:SparcISA::PageTableEntry
clear	src/arch/sparc/tlb_map.hh	/^    clear()$/;"	f	class:SparcISA::TlbMap
clear	src/arch/x86/interrupts.hh	/^    clear(int int_num, int index)$/;"	f	class:X86ISA::Interrupts
clear	src/arch/x86/isa.cc	/^ISA::clear()$/;"	f	class:X86ISA::ISA
clear	src/arch/x86/stacktrace.hh	/^        void clear()$/;"	f	class:X86ISA::StackTrace
clear	src/base/addr_range_map.hh	/^    clear()$/;"	f	class:AddrRangeMap
clear	src/base/callback.hh	/^    clear()$/;"	f	class:CallbackQueue
clear	src/base/cprintf_formats.hh	/^    void clear()$/;"	f	struct:cp::Format
clear	src/base/flags.hh	/^    void clear() { _flags = 0; }$/;"	f	class:Flags
clear	src/base/flags.hh	/^    void clear(Type flags) { _flags &= ~flags; }$/;"	f	class:Flags
clear	src/base/loader/symtab.cc	/^SymbolTable::clear()$/;"	f	class:SymbolTable
clear	src/base/time.hh	/^    void clear() { memset(&_time, 0, sizeof(_time)); }$/;"	f	class:Time
clear	src/base/trie.hh	/^        clear()$/;"	f	struct:Trie::Node
clear	src/base/trie.hh	/^    clear()$/;"	f	class:Trie
clear	src/base/varargs.hh	/^    void clear() { return l.clear(); }$/;"	f	class:VarArgs::List
clear	src/cpu/inorder/reg_dep_map.cc	/^RegDepMap::clear()$/;"	f	class:RegDepMap
clear	src/cpu/intr_control.cc	/^IntrControl::clear(int cpu_id, int int_num, int index)$/;"	f	class:IntrControl
clear	src/cpu/intr_control.hh	/^    clear(int int_num, int index = 0)$/;"	f	class:IntrControl
clear	src/cpu/intr_control_noisa.cc	/^IntrControl::clear(int cpu_id, int int_num, int index)$/;"	f	class:IntrControl
clear	src/cpu/o3/store_set.cc	/^StoreSet::clear()$/;"	f	class:StoreSet
clear	src/cpu/ozone/ea_list.cc	/^EAList::clear()$/;"	f	class:EAList
clear	src/cpu/profile.cc	/^FunctionProfile::clear()$/;"	f	class:FunctionProfile
clear	src/cpu/profile.cc	/^ProfileNode::clear()$/;"	f	class:ProfileNode
clear	src/cpu/testers/traffic_gen/generators.hh	/^        void clear() {$/;"	f	struct:TraceGen::TraceElement
clear	src/dev/pktfifo.hh	/^    void clear()$/;"	f	class:PacketFifo
clear	src/dev/pktfifo.hh	/^    void clear()$/;"	f	struct:PacketFifoEntry
clear	src/mem/ruby/buffers/MessageBuffer.cc	/^MessageBuffer::clear()$/;"	f	class:MessageBuffer
clear	src/mem/ruby/common/DataBlock.cc	/^DataBlock::clear()$/;"	f	class:DataBlock
clear	src/mem/ruby/common/Histogram.cc	/^Histogram::clear(int binsize, uint32_t bins)$/;"	f	class:Histogram
clear	src/mem/ruby/common/Histogram.cc	/^Histogram::clear(uint32_t bins)$/;"	f	class:Histogram
clear	src/mem/ruby/common/Histogram.hh	/^    void clear() { clear(m_data.size()); }$/;"	f	class:Histogram
clear	src/mem/ruby/common/NetDest.cc	/^NetDest::clear()$/;"	f	class:NetDest
clear	src/mem/ruby/common/Set.hh	/^    clear()$/;"	f	class:Set
clear	src/mem/ruby/filters/BlockBloomFilter.cc	/^BlockBloomFilter::clear()$/;"	f	class:BlockBloomFilter
clear	src/mem/ruby/filters/BulkBloomFilter.cc	/^BulkBloomFilter::clear()$/;"	f	class:BulkBloomFilter
clear	src/mem/ruby/filters/GenericBloomFilter.cc	/^GenericBloomFilter::clear()$/;"	f	class:GenericBloomFilter
clear	src/mem/ruby/filters/H3BloomFilter.cc	/^H3BloomFilter::clear()$/;"	f	class:H3BloomFilter
clear	src/mem/ruby/filters/LSB_CountingBloomFilter.cc	/^LSB_CountingBloomFilter::clear()$/;"	f	class:LSB_CountingBloomFilter
clear	src/mem/ruby/filters/MultiBitSelBloomFilter.cc	/^MultiBitSelBloomFilter::clear()$/;"	f	class:MultiBitSelBloomFilter
clear	src/mem/ruby/filters/MultiGrainBloomFilter.cc	/^MultiGrainBloomFilter::clear()$/;"	f	class:MultiGrainBloomFilter
clear	src/mem/ruby/filters/NonCountingBloomFilter.cc	/^NonCountingBloomFilter::clear()$/;"	f	class:NonCountingBloomFilter
clear	src/python/m5/SimObject.py	/^def clear():$/;"	f
clear	src/python/m5/params.py	/^def clear():$/;"	f
clear	src/python/m5/util/code_formatter.py	/^    def clear():$/;"	m	class:code_formatter
clear	src/python/m5/util/orderdict.py	/^    def clear(self):$/;"	m	class:orderdict
clear	src/python/m5/util/sorteddict.py	/^    def clear(self):$/;"	m	class:SortedDict
clear64	src/arch/arm/isa.cc	/^ISA::clear64(const ArmISAParams *p)$/;"	f	class:ArmISA::ISA
clearAddr	src/cpu/ozone/ea_list.cc	/^EAList::clearAddr(const InstSeqNum &sn_to_clear, const Addr &ea_to_clear)$/;"	f	class:EAList
clearAll	src/arch/alpha/interrupts.hh	/^    clearAll()$/;"	f	class:AlphaISA::Interrupts
clearAll	src/arch/arm/interrupts.hh	/^    clearAll()$/;"	f	class:ArmISA::Interrupts
clearAll	src/arch/mips/interrupts.cc	/^Interrupts::clearAll()$/;"	f	class:MipsISA::Interrupts
clearAll	src/arch/mips/interrupts.cc	/^Interrupts::clearAll(ThreadContext *tc)$/;"	f	class:MipsISA::Interrupts
clearAll	src/arch/power/interrupts.hh	/^    clearAll()$/;"	f	class:PowerISA::Interrupts
clearAll	src/arch/sparc/interrupts.hh	/^    clearAll()$/;"	f	class:SparcISA::Interrupts
clearAll	src/arch/x86/interrupts.hh	/^    clearAll()$/;"	f	class:X86ISA::Interrupts
clearArchRegs	src/cpu/checker/thread_context.hh	/^    void clearArchRegs()$/;"	f	class:CheckerThreadContext
clearArchRegs	src/cpu/inorder/thread_context.cc	/^InOrderThreadContext::clearArchRegs()$/;"	f	class:InOrderThreadContext
clearArchRegs	src/cpu/o3/thread_context_impl.hh	/^O3ThreadContext<Impl>::clearArchRegs()$/;"	f	class:O3ThreadContext
clearArchRegs	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::OzoneTC::clearArchRegs()$/;"	f	class:OzoneCPU::OzoneTC
clearArchRegs	src/cpu/simple_thread.hh	/^    void clearArchRegs()$/;"	f	class:SimpleThread
clearArchRegs	src/cpu/thread_context.hh	/^    void clearArchRegs() { actualTC->clearArchRegs(); }$/;"	f	class:ProxyThreadContext
clearBlocked	src/mem/cache/base.cc	/^BaseCache::CacheSlavePort::clearBlocked()$/;"	f	class:BaseCache::CacheSlavePort
clearBlocked	src/mem/cache/base.hh	/^    void clearBlocked(BlockedCause cause)$/;"	f	class:BaseCache
clearCanCommit	src/cpu/base_dyn_inst.hh	/^    void clearCanCommit() { status.reset(CanCommit); }$/;"	f	class:BaseDynInst
clearCanCommit	src/cpu/inorder/inorder_dyn_inst.hh	/^    void clearCanCommit() { status.reset(CanCommit); }$/;"	f	class:InOrderDynInst
clearCanIssue	src/cpu/base_dyn_inst.hh	/^    void clearCanIssue() { status.reset(CanIssue); }$/;"	f	class:BaseDynInst
clearConsoleInt	src/dev/alpha/tsunami.cc	/^Tsunami::clearConsoleInt()$/;"	f	class:Tsunami
clearConsoleInt	src/dev/arm/realview.cc	/^RealView::clearConsoleInt()$/;"	f	class:RealView
clearConsoleInt	src/dev/mips/malta.cc	/^Malta::clearConsoleInt()$/;"	f	class:Malta
clearConsoleInt	src/dev/sparc/t1000.cc	/^T1000::clearConsoleInt()$/;"	f	class:T1000
clearConsoleInt	src/dev/x86/pc.cc	/^Pc::clearConsoleInt()$/;"	f	class:Pc
clearDRIR	src/dev/alpha/tsunami_cchip.cc	/^TsunamiCChip::clearDRIR(uint32_t interrupt)$/;"	f	class:TsunamiCChip
clearDebugFlag	src/base/debug.cc	/^clearDebugFlag(const char *string)$/;"	f
clearDependents	src/cpu/ozone/dyn_inst_impl.hh	/^OzoneDynInst<Impl>::clearDependents()$/;"	f	class:OzoneDynInst
clearDest	src/mem/packet.hh	/^    void clearDest() { dest = InvalidPortID; }$/;"	f	class:Packet
clearDownstreamPending	src/mem/cache/mshr.cc	/^MSHR::TargetList::clearDownstreamPending()$/;"	f	class:MSHR::TargetList
clearDownstreamPending	src/mem/cache/mshr.cc	/^MSHR::clearDownstreamPending()$/;"	f	class:MSHR
clearExcess	src/mem/ruby/common/Set.cc	/^Set::clearExcess()$/;"	f	class:Set
clearFetchBuffer	src/cpu/inorder/resources/fetch_unit.cc	/^FetchUnit::clearFetchBuffer()$/;"	f	class:FetchUnit
clearFetchFault	src/cpu/o3/comm.hh	/^    bool clearFetchFault;$/;"	m	struct:DefaultFetchDefaultDecode
clearFlags	src/sim/eventq.hh	/^    clearFlags()$/;"	f	class:Event
clearFlags	src/sim/eventq.hh	/^    clearFlags(Flags _flags)$/;"	f	class:Event
clearFromParent	src/cpu/simple/timing.hh	/^        clearFromParent()$/;"	f	class:TimingSimpleCPU::SplitFragmentSenderState
clearIPI	src/dev/alpha/tsunami_cchip.cc	/^TsunamiCChip::clearIPI(uint64_t ipintr)$/;"	f	class:TsunamiCChip
clearIPI	src/dev/mips/malta_cchip.cc	/^MaltaCChip::clearIPI(uint64_t ipintr)$/;"	f	class:MaltaCChip
clearITI	src/dev/alpha/tsunami_cchip.cc	/^TsunamiCChip::clearITI(uint64_t itintr)$/;"	f	class:TsunamiCChip
clearITI	src/dev/mips/malta_cchip.cc	/^MaltaCChip::clearITI(uint64_t itintr)$/;"	f	class:MaltaCChip
clearInIQ	src/cpu/base_dyn_inst.hh	/^    void clearInIQ() { status.reset(IqEntry); }$/;"	f	class:BaseDynInst
clearInROB	src/cpu/base_dyn_inst.hh	/^    void clearInROB() { status.reset(RobEntry); }$/;"	f	class:BaseDynInst
clearInst	src/cpu/o3/dep_graph.hh	/^    void clearInst(PhysRegIndex idx)$/;"	f	class:DependencyGraph
clearInt	src/dev/arm/gic_pl390.cc	/^Pl390::clearInt(uint32_t number)$/;"	f	class:Pl390
clearInterrupt	src/cpu/base.hh	/^    clearInterrupt(int int_num, int index)$/;"	f	class:BaseCPU
clearInterrupt	src/cpu/o3/comm.hh	/^        bool clearInterrupt; \/\/ *F$/;"	m	struct:TimeBufStruct::commitComm
clearInterrupts	src/cpu/base.hh	/^    clearInterrupts()$/;"	f	class:BaseCPU
clearIntr	src/dev/mips/malta_cchip.cc	/^MaltaCChip::clearIntr(uint32_t interrupt)$/;"	f	class:MaltaCChip
clearIntr	src/dev/mips/malta_io.cc	/^MaltaIO::clearIntr(uint8_t interrupt)$/;"	f	class:MaltaIO
clearIssued	src/cpu/base_dyn_inst.hh	/^    void clearIssued() { status.reset(Issued); }$/;"	f	class:BaseDynInst
clearLQ	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::clearLQ()$/;"	f	class:LSQUnit
clearLQ	src/cpu/ozone/lsq_unit_impl.hh	/^OzoneLSQ<Impl>::clearLQ()$/;"	f	class:OzoneLSQ
clearLQ	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::clearLQ()$/;"	f	class:OzoneLWLSQ
clearLoadBlocked	src/cpu/o3/lsq_unit.hh	/^    void clearLoadBlocked()$/;"	f	class:LSQUnit
clearLoadBlocked	src/cpu/ozone/lw_lsq.hh	/^    void clearLoadBlocked()$/;"	f	class:OzoneLWLSQ
clearLoadLocks	src/mem/cache/blk.hh	/^    void clearLoadLocks(Request *req = NULL)$/;"	f	class:CacheBlk
clearLocked	src/mem/ruby/system/CacheMemory.cc	/^CacheMemory::clearLocked(const Address& address)$/;"	f	class:CacheMemory
clearLocks	src/mem/cache/tags/base.hh	/^    virtual void clearLocks() {}$/;"	f	class:BaseTags
clearLocks	src/mem/cache/tags/fa_lru.cc	/^FALRU::clearLocks()$/;"	f	class:FALRU
clearLocks	src/mem/cache/tags/lru.cc	/^LRU::clearLocks()$/;"	f	class:LRU
clearMemDependents	src/cpu/ozone/dyn_inst_impl.hh	/^OzoneDynInst<Impl>::clearMemDependents()$/;"	f	class:OzoneDynInst
clearNonunitEntry	src/mem/ruby/structures/Prefetcher.cc	/^Prefetcher::clearNonunitEntry(uint32_t index)$/;"	f	class:Prefetcher
clearPIC	src/dev/alpha/tsunami_io.cc	/^TsunamiIO::clearPIC(uint8_t bitvector)$/;"	f	class:TsunamiIO
clearPPInt	src/dev/arm/gic_pl390.cc	/^Pl390::clearPPInt(uint32_t num, uint32_t cpu)$/;"	f	class:Pl390
clearPciInt	src/dev/alpha/tsunami.cc	/^Tsunami::clearPciInt(int line)$/;"	f	class:Tsunami
clearPciInt	src/dev/arm/realview.cc	/^RealView::clearPciInt(int line)$/;"	f	class:RealView
clearPciInt	src/dev/mips/malta.cc	/^Malta::clearPciInt(int line)$/;"	f	class:Malta
clearPciInt	src/dev/platform.cc	/^Platform::clearPciInt(int line)$/;"	f	class:Platform
clearPciInt	src/dev/sparc/t1000.cc	/^T1000::clearPciInt(int line)$/;"	f	class:T1000
clearPciInt	src/dev/x86/pc.cc	/^Pc::clearPciInt(int line)$/;"	f	class:Pc
clearPeriod	src/cpu/o3/store_set.hh	/^    uint64_t clearPeriod;$/;"	m	class:StoreSet
clearPortCache	src/mem/bus.hh	/^    inline void clearPortCache() {$/;"	f	class:BaseBus
clearRegArrayBit	src/arch/x86/interrupts.hh	/^    clearRegArrayBit(ApicRegIndex base, uint8_t vector)$/;"	f	class:X86ISA::Interrupts
clearRegDepEntry	src/cpu/inorder/inorder_dyn_inst.hh	/^    void clearRegDepEntry() { status.reset(RegDepMapEntry); }$/;"	f	class:InOrderDynInst
clearRequest	src/cpu/inorder/resource.cc	/^ResourceRequest::clearRequest()$/;"	f	class:ResourceRequest
clearRequest	src/cpu/inorder/resources/cache_unit.cc	/^CacheRequest::clearRequest()$/;"	f	class:CacheRequest
clearSQ	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::clearSQ()$/;"	f	class:LSQUnit
clearSQ	src/cpu/ozone/lsq_unit_impl.hh	/^OzoneLSQ<Impl>::clearSQ()$/;"	f	class:OzoneLSQ
clearSQ	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::clearSQ()$/;"	f	class:OzoneLWLSQ
clearSerializeAfter	src/cpu/base_dyn_inst.hh	/^    void clearSerializeAfter() { status.reset(SerializeAfter); }$/;"	f	class:BaseDynInst
clearSerializeAfter	src/cpu/inorder/inorder_dyn_inst.hh	/^    void clearSerializeAfter() { status.reset(SerializeAfter); }$/;"	f	class:InOrderDynInst
clearSerializeBefore	src/cpu/base_dyn_inst.hh	/^    void clearSerializeBefore() { status.reset(SerializeBefore); }$/;"	f	class:BaseDynInst
clearSerializeBefore	src/cpu/inorder/inorder_dyn_inst.hh	/^    void clearSerializeBefore() { status.reset(SerializeBefore); }$/;"	f	class:InOrderDynInst
clearSingleStep	src/arch/alpha/remote_gdb.cc	/^RemoteGDB::clearSingleStep()$/;"	f	class:RemoteGDB
clearSingleStep	src/arch/arm/remote_gdb.cc	/^RemoteGDB::clearSingleStep()$/;"	f	class:RemoteGDB
clearSingleStep	src/arch/mips/remote_gdb.cc	/^RemoteGDB::clearSingleStep()$/;"	f	class:RemoteGDB
clearSingleStep	src/arch/power/remote_gdb.hh	/^    clearSingleStep()$/;"	f	class:PowerISA::RemoteGDB
clearSingleStep	src/arch/sparc/remote_gdb.cc	/^RemoteGDB::clearSingleStep()$/;"	f	class:RemoteGDB
clearSingleStep	src/arch/x86/remote_gdb.cc	/^void RemoteGDB::clearSingleStep()$/;"	f	class:RemoteGDB
clearSrc	src/mem/packet.hh	/^    void clearSrc() { src = InvalidPortID; }$/;"	f	class:Packet
clearStats	src/cpu/testers/directedtest/RubyDirectedTester.hh	/^    void clearStats() {}$/;"	f	class:RubyDirectedTester
clearStats	src/cpu/testers/rubytest/RubyTester.hh	/^    void clearStats() {}$/;"	f	class:RubyTester
clearStats	src/mem/ruby/buffers/MessageBuffer.hh	/^    void clearStats() { m_not_avail_count = 0; m_msg_counter = 0; }$/;"	f	class:MessageBuffer
clearStats	src/mem/ruby/network/simple/PerfectSwitch.cc	/^PerfectSwitch::clearStats()$/;"	f	class:PerfectSwitch
clearStats	src/mem/ruby/network/simple/Throttle.cc	/^Throttle::clearStats()$/;"	f	class:Throttle
clearStats	src/mem/ruby/profiler/AddressProfiler.cc	/^AddressProfiler::clearStats()$/;"	f	class:AddressProfiler
clearSummary	src/mem/ruby/profiler/StoreTrace.cc	/^StoreTrace::clearSummary()$/;"	f	class:StoreTrace
clearSupplyExclusive	src/mem/packet.hh	/^    void clearSupplyExclusive()     { flags.clear(SUPPLY_EXCLUSIVE); }$/;"	f	class:Packet
clearTempBreakpoint	src/base/remote_gdb.cc	/^BaseRemoteGDB::clearTempBreakpoint(Addr &bkpt)$/;"	f	class:BaseRemoteGDB
clearUsedBits	src/arch/sparc/tlb.cc	/^TLB::clearUsedBits()$/;"	f	class:SparcISA::TLB
clear_child	src/python/m5/SimObject.py	/^    def clear_child(self, name):$/;"	f
clear_parent	src/python/m5/SimObject.py	/^    def clear_parent(self, old_parent):$/;"	f
clear_parent	src/python/m5/params.py	/^    def clear_parent(self, old_parent):$/;"	m	class:SimObjectVector
clear_request_vector	src/mem/ruby/network/garnet/fixed-pipeline/SWallocator_d.cc	/^SWallocator_d::clear_request_vector()$/;"	f	class:SWallocator_d
clear_request_vector	src/mem/ruby/network/garnet/fixed-pipeline/VCallocator_d.cc	/^VCallocator_d::clear_request_vector()$/;"	f	class:VCallocator_d
cline	src/base/loader/coff_sym.h	/^    coff_int    cline;          \/* count of file's line symbols *\/$/;"	m	struct:ecoff_fdr
clk_divider	src/sim/ClockDomain.py	/^    clk_divider = Param.Unsigned(1, "Frequency divider")$/;"	v	class:DerivedClockDomain
clk_domain	src/sim/ClockDomain.py	/^    clk_domain = Param.ClockDomain("Parent clock domain")$/;"	v	class:DerivedClockDomain
clk_domain	src/sim/ClockedObject.py	/^    clk_domain = Param.ClockDomain(Parent.clk_domain, "Clock domain")$/;"	v	class:ClockedObject
clk_in	src/dev/arm/kmi.hh	/^        Bitfield<1> clk_in;$/;"	m	class:Pl050
clkdiv	src/dev/arm/kmi.hh	/^    uint8_t clkdiv;$/;"	m	class:Pl050
clksel	src/dev/arm/pl111.hh	/^        Bitfield<5> clksel;$/;"	m	class:Pl111
clock	src/dev/arm/timer_sp804.hh	/^        const Tick clock;$/;"	m	class:Sp804::Timer
clock	src/sim/ClockDomain.py	/^    clock = Param.Clock("Clock period")$/;"	v	class:SrcClockDomain
clock0	src/dev/arm/RealView.py	/^    clock0 = Param.Clock('1MHz', "Clock speed of the input")$/;"	v	class:Sp804
clock1	src/dev/arm/RealView.py	/^    clock1 = Param.Clock('1MHz', "Clock speed of the input")$/;"	v	class:Sp804
clockDivider	src/sim/clock_domain.hh	/^    const uint64_t clockDivider;$/;"	m	class:DerivedClockDomain
clockDomain	src/sim/clocked_object.hh	/^    ClockDomain &clockDomain;$/;"	m	class:ClockedObject
clockEdge	src/sim/clocked_object.hh	/^    inline Tick clockEdge(Cycles cycles = Cycles(0)) const$/;"	f	class:ClockedObject
clockID	src/cpu/kvm/timer.hh	/^    clockid_t clockID;$/;"	m	class:PosixKvmTimer
clockPeriod	src/mem/dramsim2_wrapper.cc	/^DRAMSim2Wrapper::clockPeriod() const$/;"	f	class:DRAMSim2Wrapper
clockPeriod	src/sim/clock_domain.cc	/^SrcClockDomain::clockPeriod(Tick clock_period)$/;"	f	class:SrcClockDomain
clockPeriod	src/sim/clock_domain.hh	/^    inline Tick clockPeriod() const { return _clockPeriod; }$/;"	f	class:ClockDomain
clockPeriod	src/sim/clocked_object.hh	/^    inline Tick clockPeriod() const$/;"	f	class:ClockedObject
clock_data	src/dev/mc146818.hh	/^        uint8_t clock_data[10];$/;"	m	union:MC146818::__anon78
clock_getres	src/kern/linux/linux_syscalls.hh	/^    clock_getres = 19,$/;"	e	enum:SystemCalls::__anon87
clock_gettime	src/kern/linux/linux_syscalls.hh	/^    clock_gettime = 20,$/;"	e	enum:SystemCalls::__anon87
clock_nanosleep	src/kern/linux/linux_syscalls.hh	/^    clock_nanosleep = 21,$/;"	e	enum:SystemCalls::__anon87
clock_settime	src/kern/linux/linux_syscalls.hh	/^    clock_settime = 22,$/;"	e	enum:SystemCalls::__anon87
clock_t	src/arch/arm/linux/linux.hh	/^    typedef int32_t clock_t;$/;"	t	class:ArmLinux32
clock_t	src/arch/arm/linux/linux.hh	/^    typedef int64_t clock_t;$/;"	t	class:ArmLinux64
clock_t	src/kern/linux/linux.hh	/^    typedef int64_t clock_t;$/;"	t	class:Linux
clocksLeft	src/dev/intel_8254_timer.cc	/^Intel8254Timer::Counter::CounterEvent::clocksLeft()$/;"	f	class:Intel8254Timer::Counter::CounterEvent
clone	src/kern/linux/linux_syscalls.hh	/^    clone = 23,$/;"	e	enum:SystemCalls::__anon87
clone	src/mem/ruby/slicc_interface/RubyRequest.hh	/^    RubyRequest* clone() const { return new RubyRequest(*this); }$/;"	f	class:RubyRequest
clone	src/python/m5/params.py	/^    def clone(self, simobj, memo):$/;"	m	class:PortRef
clone	src/python/m5/params.py	/^    def clone(self, simobj, memo):$/;"	m	class:VectorPortRef
clone	src/python/m5/util/jobfile.py	/^    def clone(self):$/;"	m	class:Job
clone	src/python/m5/util/jobfile.py	/^    def clone(self, suboptions=True):$/;"	m	class:Option
cloneFunc	src/sim/syscall_emul.cc	/^cloneFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
close	src/base/loader/hex_file.cc	/^HexFile::close()$/;"	f	class:HexFile
close	src/base/loader/object_file.cc	/^ObjectFile::close()$/;"	f	class:ObjectFile
close	src/base/output.cc	/^OutputDirectory::close(ostream *openStream) {$/;"	f	class:OutputDirectory
close	src/dev/disk_image.cc	/^RawDiskImage::close()$/;"	f	class:RawDiskImage
close	src/kern/linux/linux_syscalls.hh	/^    close = 24,$/;"	e	enum:SystemCalls::__anon87
close	src/kern/tru64/tru64_syscalls.hh	/^        close = 6,$/;"	e	enum:SystemCalls::__anon102
closeFunc	src/sim/syscall_emul.cc	/^closeFunc(SyscallDesc *desc, int num, LiveProcess *p, ThreadContext *tc)$/;"	f
closeStreams	src/mem/comm_monitor.cc	/^CommMonitor::closeStreams()$/;"	f	class:CommMonitor
clrfen	src/arch/alpha/osfpal.hh	/^        clrfen = 0xae,$/;"	e	enum:PAL::__anon3
cls	src/dev/pcireg.h	/^        Bitfield<3,0>   cls;$/;"	m	struct:PXCAP
cls	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.py	/^    cls = []$/;"	v	class:GarnetExtLink_d
cls	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.py	/^    cls = []$/;"	v	class:GarnetIntLink_d
cls	src/python/m5/params.py	/^        code('%import "python\/m5\/internal\/enum_$0.i"', cls.__name__)$/;"	i
cluster_id	src/mem/ruby/slicc_interface/Controller.py	/^    cluster_id = Param.UInt32(0, "Id of this controller's cluster")$/;"	v	class:RubyController
cm	src/arch/arm/miscregs.hh	/^        Bitfield<13> cm;  \/\/ LPAE$/;"	m	namespace:ArmISA
cmap	src/base/statistics.hh	/^    MCounter cmap;$/;"	m	class:Stats::SparseHistStor
cmap	src/base/stats/info.hh	/^    MCounter cmap;$/;"	m	struct:Stats::SparseHistData
cmd	src/cpu/inorder/pipeline_traits.5stage.hh	/^        unsigned cmd;$/;"	m	struct:ThePipeline::ScheduleEntry
cmd	src/cpu/inorder/pipeline_traits.9stage.hh	/^        unsigned cmd;$/;"	m	struct:ThePipeline::ScheduleEntry
cmd	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^        unsigned cmd;$/;"	m	struct:ThePipeline::ScheduleEntry
cmd	src/cpu/inorder/resource.hh	/^    unsigned cmd;$/;"	m	class:ResourceRequest
cmd	src/cpu/inorder/resource_sked.hh	/^    unsigned cmd;$/;"	m	class:ScheduleEntry
cmd	src/cpu/testers/traffic_gen/generators.hh	/^        MemCmd cmd;$/;"	m	struct:TraceGen::TraceElement
cmd	src/mem/packet.hh	/^    Command cmd;$/;"	m	class:MemCmd
cmd	src/mem/packet.hh	/^    MemCmd cmd;$/;"	m	class:Packet
cmd	src/sim/Process.py	/^    cmd = VectorParam.String("command line (executable plus arguments)")$/;"	v	class:LiveProcess
cmdAddr	src/dev/ide_ctrl.hh	/^        Addr cmdAddr, cmdSize, ctrlAddr, ctrlSize;$/;"	m	struct:IdeController::Channel
cmdBytes	src/dev/ide_disk.hh	/^    uint32_t cmdBytes;$/;"	m	class:IdeDisk
cmdBytesLeft	src/dev/ide_disk.hh	/^    uint32_t cmdBytesLeft;$/;"	m	class:IdeDisk
cmdReg	src/dev/ide_disk.hh	/^    CommandReg_t cmdReg;$/;"	m	class:IdeDisk
cmdSize	src/dev/ide_ctrl.hh	/^        Addr cmdAddr, cmdSize, ctrlAddr, ctrlSize;$/;"	m	struct:IdeController::Channel
cmdString	src/mem/packet.hh	/^    const std::string &cmdString() const { return cmd.toString(); }$/;"	f	class:Packet
cmdToIndex	src/mem/packet.hh	/^    inline int cmdToIndex() const { return cmd.toInt(); }$/;"	f	class:Packet
cmdline	src/arch/arm/linux/atag.hh	/^    void cmdline(const std::string &s)$/;"	f	class:AtagCmdline
cmdsts	src/dev/ns_gige_reg.h	/^    uint32_t cmdsts;  \/* command\/status field *\/$/;"	m	struct:ns_desc32
cmdsts	src/dev/ns_gige_reg.h	/^    uint32_t cmdsts;  \/* command\/status field *\/$/;"	m	struct:ns_desc64
cmos	src/dev/x86/SouthBridge.py	/^    cmos = Param.Cmos(_cmos, "CMOS memory and real time clock device")$/;"	v	class:SouthBridge
cmos	src/dev/x86/south_bridge.hh	/^    X86ISA::Cmos * cmos;$/;"	m	class:SouthBridge
cmp128	src/arch/arm/insts/fplib.cc	/^cmp128(uint64_t a0, uint64_t a1, uint64_t b0, uint64_t b1)$/;"	f	namespace:ArmISA
cmpAndSwap	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::cmpAndSwap(BlkType *blk, PacketPtr pkt)$/;"	f	class:Cache
cnt	src/cpu/inorder/resources/fetch_unit.hh	/^        short cnt;$/;"	m	struct:FetchUnit::FetchBlock
coId	src/arch/mips/pra_constants.hh	/^    Bitfield<23, 16> coId;$/;"	m	namespace:MipsISA
coOp	src/arch/mips/pra_constants.hh	/^    Bitfield<31, 24> coOp;$/;"	m	namespace:MipsISA
coProcID	src/arch/mips/faults.hh	/^    int coProcID;$/;"	m	class:MipsISA::CoprocessorUnusableFault
coalesceMMIO	src/cpu/kvm/vm.cc	/^KvmVM::coalesceMMIO(Addr start, int size)$/;"	f	class:KvmVM
coalesceMMIO	src/cpu/kvm/vm.cc	/^KvmVM::coalesceMMIO(const AddrRange &range)$/;"	f	class:KvmVM
coalescedMMIO	src/cpu/kvm/KvmVM.py	/^    coalescedMMIO = VectorParam.AddrRange([], "memory ranges for coalesced MMIO")$/;"	v	class:KvmVM
coalescedRxDesc	src/dev/etherdevice.hh	/^    Stats::Formula coalescedRxDesc;$/;"	m	class:EtherDevice
coalescedRxIdle	src/dev/etherdevice.hh	/^    Stats::Formula coalescedRxIdle;$/;"	m	class:EtherDevice
coalescedRxOk	src/dev/etherdevice.hh	/^    Stats::Formula coalescedRxOk;$/;"	m	class:EtherDevice
coalescedRxOrn	src/dev/etherdevice.hh	/^    Stats::Formula coalescedRxOrn;$/;"	m	class:EtherDevice
coalescedSwi	src/dev/etherdevice.hh	/^    Stats::Formula coalescedSwi;$/;"	m	class:EtherDevice
coalescedTotal	src/dev/etherdevice.hh	/^    Stats::Formula coalescedTotal;$/;"	m	class:EtherDevice
coalescedTxDesc	src/dev/etherdevice.hh	/^    Stats::Formula coalescedTxDesc;$/;"	m	class:EtherDevice
coalescedTxIdle	src/dev/etherdevice.hh	/^    Stats::Formula coalescedTxIdle;$/;"	m	class:EtherDevice
coalescedTxOk	src/dev/etherdevice.hh	/^    Stats::Formula coalescedTxOk;$/;"	m	class:EtherDevice
cobol_main	src/base/loader/coff_sym.h	/^    unsigned cobol_main:1;      \/* symbol is a cobol main procedure *\/$/;"	m	struct:ecoff_extsym
code	src/arch/mips/faults.hh	/^        const ExcCode code;$/;"	m	struct:MipsISA::MipsFaultBase::FaultVals
code	src/arch/mips/faults.hh	/^    ExcCode code() const { return MipsFault<TlbModifiedFault>::code(); }$/;"	f	class:MipsISA::TlbModifiedFault
code	src/arch/mips/faults.hh	/^    ExcCode code() const { return vals.code; }$/;"	f	class:MipsISA::MipsFault
code	src/arch/mips/faults.hh	/^    code() const$/;"	f	class:MipsISA::AddressErrorFault
code	src/arch/mips/faults.hh	/^    code() const$/;"	f	class:MipsISA::TlbFault
code	src/python/m5/main.py	/^import code$/;"	i
code	src/sim/init.hh	/^    const uint8_t *code;$/;"	m	struct:EmbeddedPython
code	src/sim/sim_events.hh	/^    int code;$/;"	m	class:GlobalSimLoopExitEvent
code	src/sim/sim_events.hh	/^    int code;$/;"	m	class:LocalSimLoopExitEvent
codeFormatter	src/mem/slicc/parser.py	/^    def codeFormatter(self, *args, **kwargs):$/;"	m	class:SLICC
codeFormatter	src/mem/slicc/symbols/SymbolTable.py	/^    def codeFormatter(self, *args, **kwargs):$/;"	m	class:SymbolTable
codeOrData	src/arch/x86/regs/misc.hh	/^            Bitfield<43> codeOrData;$/;"	m	namespace:X86ISA
code_formatter	src/mem/slicc/generate/dot.py	/^from m5.util.code_formatter import code_formatter$/;"	i
code_formatter	src/mem/slicc/generate/html.py	/^from m5.util.code_formatter import code_formatter$/;"	i
code_formatter	src/mem/slicc/generate/tex.py	/^from m5.util.code_formatter import code_formatter$/;"	i
code_formatter	src/mem/slicc/parser.py	/^from m5.util import code_formatter$/;"	i
code_formatter	src/python/m5/util/__init__.py	/^from code_formatter import code_formatter$/;"	i
code_formatter	src/python/m5/util/code_formatter.py	/^    from code_formatter import code_formatter$/;"	i
code_formatter	src/python/m5/util/code_formatter.py	/^class code_formatter(object):$/;"	c
code_formatter_meta	src/python/m5/util/code_formatter.py	/^class code_formatter_meta(type):$/;"	c
coerceSimObjectOrVector	src/python/m5/SimObject.py	/^def coerceSimObjectOrVector(value):$/;"	f
coff_addr	src/arch/alpha/ecoff_machdep.h	/^typedef uint64_t coff_addr;$/;"	t
coff_int	src/arch/alpha/ecoff_machdep.h	/^typedef  int32_t coff_int;$/;"	t
coff_long	src/arch/alpha/ecoff_machdep.h	/^typedef  int64_t coff_long;$/;"	t
coff_short	src/arch/alpha/ecoff_machdep.h	/^typedef  int16_t coff_short;$/;"	t
coff_uint	src/arch/alpha/ecoff_machdep.h	/^typedef uint32_t coff_uint;$/;"	t
coff_ulong	src/arch/alpha/ecoff_machdep.h	/^typedef uint64_t coff_ulong;$/;"	t
coff_ushort	src/arch/alpha/ecoff_machdep.h	/^typedef uint16_t coff_ushort;$/;"	t
collateLinkStats	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.cc	/^GarnetNetwork_d::collateLinkStats()$/;"	f	class:GarnetNetwork_d
collatePages	src/mem/ruby/system/MemoryVector.hh	/^MemoryVector::collatePages(uint8_t *&raw_data)$/;"	f	class:MemoryVector
collatePowerStats	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.cc	/^GarnetNetwork_d::collatePowerStats()$/;"	f	class:GarnetNetwork_d
collateStats	src/mem/ruby/network/garnet/BaseGarnetNetwork.hh	/^    virtual void collateStats() {}$/;"	f	class:BaseGarnetNetwork
collateStats	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.cc	/^GarnetNetwork_d::collateStats()$/;"	f	class:GarnetNetwork_d
collateStats	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.cc	/^GarnetNetwork::collateStats()$/;"	f	class:GarnetNetwork
collateStats	src/mem/ruby/network/simple/PerfectSwitch.cc	/^PerfectSwitch::collateStats()$/;"	f	class:PerfectSwitch
collateStats	src/mem/ruby/network/simple/SimpleNetwork.cc	/^SimpleNetwork::collateStats()$/;"	f	class:SimpleNetwork
collateStats	src/mem/ruby/network/simple/Switch.cc	/^Switch::collateStats()$/;"	f	class:Switch
collateStats	src/mem/ruby/network/simple/Throttle.cc	/^Throttle::collateStats()$/;"	f	class:Throttle
collateStats	src/mem/ruby/profiler/AddressProfiler.hh	/^    void collateStats() {}$/;"	f	class:AddressProfiler
collateStats	src/mem/ruby/profiler/Profiler.cc	/^Profiler::collateStats()$/;"	f	class:Profiler
collateStats	src/mem/ruby/slicc_interface/AbstractController.hh	/^    virtual void collateStats()$/;"	f	class:AbstractController
collateStats	src/mem/ruby/system/System.hh	/^    void collateStats() { m_profiler->collateStats(); }$/;"	f	class:RubySystem
color_names	src/python/m5/util/terminal.py	/^color_names = "Black Red Green Yellow Blue Magenta Cyan".split()$/;"	v
columnsPerRowBuffer	src/mem/dram_ctrl.hh	/^    const uint32_t columnsPerRowBuffer;$/;"	m	class:DRAMCtrl
comBranches	src/cpu/inorder/cpu.hh	/^    Stats::Scalar comBranches;$/;"	m	class:InOrderCPU
comFloats	src/cpu/inorder/cpu.hh	/^    Stats::Scalar comFloats;$/;"	m	class:InOrderCPU
comInstEventQueue	src/cpu/base.hh	/^    EventQueue **comInstEventQueue;$/;"	m	class:BaseCPU
comInts	src/cpu/inorder/cpu.hh	/^    Stats::Scalar comInts;$/;"	m	class:InOrderCPU
comLoadEventQueue	src/cpu/base.hh	/^    EventQueue **comLoadEventQueue;$/;"	m	class:BaseCPU
comLoads	src/cpu/inorder/cpu.hh	/^    Stats::Scalar comLoads;$/;"	m	class:InOrderCPU
comNonSpec	src/cpu/inorder/cpu.hh	/^    Stats::Scalar comNonSpec;$/;"	m	class:InOrderCPU
comNops	src/cpu/inorder/cpu.hh	/^    Stats::Scalar comNops;$/;"	m	class:InOrderCPU
comStores	src/cpu/inorder/cpu.hh	/^    Stats::Scalar comStores;$/;"	m	class:InOrderCPU
com_1	src/dev/x86/Pc.py	/^    com_1 = Uart8250()$/;"	v	class:Pc
comm	src/cpu/ozone/back_end.hh	/^    TimeBuffer<CommStruct> *comm;$/;"	m	class:BackEnd
comm	src/cpu/ozone/cpu.hh	/^    TimeBuffer<CommStruct> comm;$/;"	m	class:OzoneCPU
comm	src/cpu/ozone/front_end.hh	/^    TimeBuffer<CommStruct> *comm;$/;"	m	class:FrontEnd
comm	src/cpu/ozone/inorder_back_end.hh	/^    TimeBuffer<CommStruct> *comm;$/;"	m	class:InorderBackEnd
comm	src/cpu/ozone/lw_back_end.hh	/^    TimeBuffer<CommStruct> *comm;$/;"	m	class:LWBackEnd
commPage	src/arch/arm/linux/process.cc	/^const Addr ArmLinuxProcess32::commPage = 0xffff0000;$/;"	m	class:ArmLinuxProcess32	file:
commPage	src/arch/arm/linux/process.hh	/^    static const Addr commPage;$/;"	m	class:ArmLinuxProcess32
command	src/dev/arm/hdlcd.hh	/^    CommandReg command;             \/**< Command register *\/$/;"	m	class:HDLcd
command	src/dev/copy_engine_defs.hh	/^    CHANCMD command;$/;"	m	struct:CopyEngineReg::ChanRegs
command	src/dev/copy_engine_defs.hh	/^    uint32_t command;$/;"	m	struct:CopyEngineReg::DmaDesc
command	src/dev/ide_ctrl.hh	/^            BMICommandReg command;$/;"	m	struct:IdeController::Channel::BMIRegs
command	src/dev/ide_disk.hh	/^    uint8_t command;$/;"	m	struct:CommandReg
command	src/dev/ns_gige.hh	/^    uint32_t    command;$/;"	m	struct:dp_regs
command	src/dev/pcireg.h	/^        uint16_t command;$/;"	m	struct:PCIConfig::__anon80
command	src/dev/sinic.cc	/^Device::command(uint32_t command)$/;"	f	class:Sinic::Device
commandByte	src/dev/x86/i8042.hh	/^    CommandByte commandByte;$/;"	m	class:X86ISA::I8042
commandInfo	src/mem/packet.cc	/^MemCmd::commandInfo[] =$/;"	m	class:MemCmd	file:
commandInfo	src/mem/packet.hh	/^    static const CommandInfo commandInfo[];$/;"	m	class:MemCmd
commandLast	src/dev/x86/i8042.hh	/^        Bitfield<3> commandLast;$/;"	m	class:X86ISA::I8042
commandLine	src/arch/x86/linux/system.hh	/^    std::string commandLine;$/;"	m	class:LinuxX86System
commandPort	src/dev/x86/i8042.hh	/^    Addr commandPort;$/;"	m	class:X86ISA::I8042
command_port	src/dev/x86/I8042.py	/^    command_port = Param.Addr('Command\/status port address')$/;"	v	class:I8042
commentRE	src/arch/isa_parser.py	/^commentRE = re.compile(r'(^)?[^\\S\\n]*\/(?:\\*(.*?)\\*\/[^\\S\\n]*|\/[^\\n]*)($)?',$/;"	v
commit	src/cpu/o3/commit.hh	/^        DefaultCommit<Impl> *commit;$/;"	m	class:DefaultCommit::TrapEvent
commit	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::commit()$/;"	f	class:DefaultCommit
commit	src/cpu/o3/cpu.hh	/^    typename CPUPolicy::Commit commit;$/;"	m	class:FullO3CPU
commit	src/cpu/o3/decode.hh	/^        bool commit;$/;"	m	struct:DefaultDecode::Stalls
commit	src/cpu/o3/fetch.hh	/^        bool commit;$/;"	m	struct:DefaultFetch::Stalls
commit	src/cpu/o3/iew.hh	/^        bool commit;$/;"	m	struct:DefaultIEW::Stalls
commit	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::commit(const InstSeqNum &inst, ThreadID tid)$/;"	f	class:InstructionQueue
commit	src/cpu/o3/rename.hh	/^        bool commit;$/;"	m	struct:DefaultRename::Stalls
commit	src/cpu/ozone/back_end.hh	/^        void commit(const InstSeqNum &sn) {}$/;"	f	class:BackEnd::InstQueue
commit	src/cpu/ozone/ea_list.cc	/^EAList::commit(const InstSeqNum &commit_sn)$/;"	f	class:EAList
commit	src/cpu/ozone/inst_queue_impl.hh	/^InstQueue<Impl>::commit(const InstSeqNum &inst, ThreadID tid)$/;"	f	class:InstQueue
commitBlock	src/cpu/o3/comm.hh	/^    bool commitBlock[Impl::MaxThreads];$/;"	m	struct:TimeBufStruct
commitComm	src/cpu/o3/comm.hh	/^    struct commitComm {$/;"	s	struct:TimeBufStruct
commitDrained	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::commitDrained(ThreadID tid)$/;"	f	class:FullO3CPU
commitEligible	src/cpu/o3/commit.hh	/^    Stats::Vector commitEligible;$/;"	m	class:DefaultCommit
commitEligible	src/cpu/ozone/lw_back_end.hh	/^    Stats::Vector commitEligible;$/;"	m	class:LWBackEnd
commitEligibleSamples	src/cpu/o3/commit.hh	/^    Stats::Scalar commitEligibleSamples;$/;"	m	class:DefaultCommit
commitEligibleSamples	src/cpu/ozone/lw_back_end.hh	/^    Stats::Scalar commitEligibleSamples;$/;"	m	class:LWBackEnd
commitHead	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::commitHead(DynInstPtr &head_inst, unsigned inst_num)$/;"	f	class:DefaultCommit
commitInfo	src/cpu/o3/comm.hh	/^    commitComm commitInfo[Impl::MaxThreads];$/;"	m	struct:TimeBufStruct
commitInst	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::commitInst(int inst_num)$/;"	f	class:BackEnd
commitInst	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::commitInst(int inst_num)$/;"	f	class:LWBackEnd
commitInsts	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::commitInsts()$/;"	f	class:DefaultCommit
commitInsts	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::commitInsts()$/;"	f	class:BackEnd
commitInsts	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::commitInsts()$/;"	f	class:LWBackEnd
commitLoad	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::commitLoad()$/;"	f	class:LSQUnit
commitLoad	src/cpu/ozone/lsq_unit_impl.hh	/^OzoneLSQ<Impl>::commitLoad()$/;"	f	class:OzoneLSQ
commitLoad	src/cpu/ozone/lsq_unit_impl.hh	/^OzoneLSQ<Impl>::commitLoad(InstSeqNum &inst)$/;"	f	class:OzoneLSQ
commitLoad	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::commitLoad()$/;"	f	class:OzoneLWLSQ
commitLoads	src/cpu/o3/lsq.hh	/^    void commitLoads(InstSeqNum &youngest_inst, ThreadID tid)$/;"	f	class:LSQ
commitLoads	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::commitLoads(InstSeqNum &youngest_inst)$/;"	f	class:LSQUnit
commitLoads	src/cpu/ozone/lsq_unit_impl.hh	/^OzoneLSQ<Impl>::commitLoads(InstSeqNum &youngest_inst)$/;"	f	class:OzoneLSQ
commitLoads	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::commitLoads(InstSeqNum &youngest_inst)$/;"	f	class:OzoneLWLSQ
commitNonSpecStalls	src/cpu/o3/commit.hh	/^    Stats::Scalar commitNonSpecStalls;$/;"	m	class:DefaultCommit
commitPC	src/cpu/ozone/back_end.hh	/^    Addr commitPC;$/;"	m	class:BackEnd
commitPC	src/cpu/ozone/inorder_back_end.hh	/^    Addr commitPC;$/;"	m	class:InorderBackEnd
commitPC	src/cpu/ozone/lw_back_end.hh	/^    Addr commitPC;$/;"	m	class:LWBackEnd
commitPolicy	src/cpu/o3/commit.hh	/^    CommitPolicy commitPolicy;$/;"	m	class:DefaultCommit
commitRenameMap	src/cpu/o3/cpu.hh	/^    typename CPUPolicy::RenameMap commitRenameMap[Impl::MaxThreads];$/;"	m	class:FullO3CPU
commitRenameTable	src/cpu/ozone/back_end.hh	/^    RenameTable<Impl> commitRenameTable;$/;"	m	class:BackEnd
commitRenameTable	src/cpu/ozone/lw_back_end.hh	/^    RenameTable<Impl> commitRenameTable;$/;"	m	class:LWBackEnd
commitSquashEvents	src/cpu/o3/commit.hh	/^    Stats::Scalar commitSquashEvents;$/;"	m	class:DefaultCommit
commitSquashedInsts	src/cpu/o3/commit.hh	/^    Stats::Scalar commitSquashedInsts;$/;"	m	class:DefaultCommit
commitStatus	src/cpu/o3/commit.hh	/^    ThreadStatus commitStatus[Impl::MaxThreads];$/;"	m	class:DefaultCommit
commitStatus	src/cpu/ozone/lw_back_end.hh	/^    Status commitStatus;$/;"	m	class:LWBackEnd
commitStores	src/cpu/o3/lsq.hh	/^    void commitStores(InstSeqNum &youngest_inst, ThreadID tid)$/;"	f	class:LSQ
commitStores	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::commitStores(InstSeqNum &youngest_inst)$/;"	f	class:LSQUnit
commitStores	src/cpu/ozone/lsq_unit_impl.hh	/^OzoneLSQ<Impl>::commitStores(InstSeqNum &youngest_inst)$/;"	f	class:OzoneLSQ
commitStores	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::commitStores(InstSeqNum &youngest_inst)$/;"	f	class:OzoneLWLSQ
commitTick	src/cpu/o3/dyn_inst.hh	/^    int32_t commitTick;$/;"	m	class:BaseO3DynInst
commitToDecodeDelay	src/cpu/o3/O3CPU.py	/^    commitToDecodeDelay = Param.Cycles(1, "Commit to decode delay")$/;"	v	class:DerivO3CPU
commitToDecodeDelay	src/cpu/o3/decode.hh	/^    Cycles commitToDecodeDelay;$/;"	m	class:DefaultDecode
commitToDecodeDelay	src/cpu/ozone/OzoneCPU.py	/^    commitToDecodeDelay = Param.Unsigned("Commit to decode delay")$/;"	v	class:DerivOzoneCPU
commitToDecodeDelay	src/cpu/ozone/SimpleOzoneCPU.py	/^    commitToDecodeDelay = Param.Unsigned("Commit to decode delay")$/;"	v	class:SimpleOzoneCPU
commitToDecodeDelay	src/cpu/ozone/simple_params.hh	/^    unsigned commitToDecodeDelay;$/;"	m	class:SimpleParams
commitToFetchDelay	src/cpu/o3/O3CPU.py	/^    commitToFetchDelay = Param.Cycles(1, "Commit to fetch delay")$/;"	v	class:DerivO3CPU
commitToFetchDelay	src/cpu/o3/fetch.hh	/^    Cycles commitToFetchDelay;$/;"	m	class:DefaultFetch
commitToFetchDelay	src/cpu/ozone/OzoneCPU.py	/^    commitToFetchDelay = Param.Unsigned("Commit to fetch delay")$/;"	v	class:DerivOzoneCPU
commitToFetchDelay	src/cpu/ozone/SimpleOzoneCPU.py	/^    commitToFetchDelay = Param.Unsigned("Commit to fetch delay")$/;"	v	class:SimpleOzoneCPU
commitToFetchDelay	src/cpu/ozone/simple_params.hh	/^    unsigned commitToFetchDelay;$/;"	m	class:SimpleParams
commitToIEWDelay	src/cpu/o3/O3CPU.py	/^    commitToIEWDelay = Param.Cycles(1, "Commit to "$/;"	v	class:DerivO3CPU
commitToIEWDelay	src/cpu/o3/commit.hh	/^    Cycles commitToIEWDelay;$/;"	m	class:DefaultCommit
commitToIEWDelay	src/cpu/o3/iew.hh	/^    Cycles commitToIEWDelay;$/;"	m	class:DefaultIEW
commitToIEWDelay	src/cpu/o3/inst_queue.hh	/^    Cycles commitToIEWDelay;$/;"	m	class:InstructionQueue
commitToIEWDelay	src/cpu/ozone/OzoneCPU.py	/^    commitToIEWDelay = Param.Unsigned("Commit to "$/;"	v	class:DerivOzoneCPU
commitToIEWDelay	src/cpu/ozone/SimpleOzoneCPU.py	/^    commitToIEWDelay = Param.Unsigned("Commit to "$/;"	v	class:SimpleOzoneCPU
commitToIEWDelay	src/cpu/ozone/inst_queue.hh	/^    unsigned commitToIEWDelay;$/;"	m	class:InstQueue
commitToIEWDelay	src/cpu/ozone/simple_params.hh	/^    unsigned commitToIEWDelay;$/;"	m	class:SimpleParams
commitToRenameDelay	src/cpu/o3/O3CPU.py	/^    commitToRenameDelay = Param.Cycles(1, "Commit to rename delay")$/;"	v	class:DerivO3CPU
commitToRenameDelay	src/cpu/o3/rename.hh	/^    unsigned commitToRenameDelay;$/;"	m	class:DefaultRename
commitToRenameDelay	src/cpu/ozone/OzoneCPU.py	/^    commitToRenameDelay = Param.Unsigned("Commit to rename delay")$/;"	v	class:DerivOzoneCPU
commitToRenameDelay	src/cpu/ozone/SimpleOzoneCPU.py	/^    commitToRenameDelay = Param.Unsigned("Commit to rename delay")$/;"	v	class:SimpleOzoneCPU
commitToRenameDelay	src/cpu/ozone/simple_params.hh	/^    unsigned commitToRenameDelay;$/;"	m	class:SimpleParams
commitUnblock	src/cpu/o3/comm.hh	/^    bool commitUnblock[Impl::MaxThreads];$/;"	m	struct:TimeBufStruct
commitWidth	src/cpu/o3/O3CPU.py	/^    commitWidth = Param.Unsigned(8, "Commit width")$/;"	v	class:DerivO3CPU
commitWidth	src/cpu/o3/commit.hh	/^    unsigned commitWidth;$/;"	m	class:DefaultCommit
commitWidth	src/cpu/o3/rename.hh	/^    unsigned commitWidth;$/;"	m	class:DefaultRename
commitWidth	src/cpu/ozone/OzoneCPU.py	/^    commitWidth = Param.Unsigned("Commit width")$/;"	v	class:DerivOzoneCPU
commitWidth	src/cpu/ozone/SimpleOzoneCPU.py	/^    commitWidth = Param.Unsigned("Commit width")$/;"	v	class:SimpleOzoneCPU
commitWidth	src/cpu/ozone/back_end.hh	/^    int commitWidth;$/;"	m	class:BackEnd
commitWidth	src/cpu/ozone/lw_back_end.hh	/^    int commitWidth;$/;"	m	class:LWBackEnd
commitWidth	src/cpu/ozone/simple_params.hh	/^    unsigned commitWidth;$/;"	m	class:SimpleParams
commit_eligible	src/cpu/ozone/back_end.hh	/^    Stats::Vector commit_eligible;$/;"	m	class:BackEnd
commit_eligible_samples	src/cpu/ozone/back_end.hh	/^    Stats::Scalar commit_eligible_samples;$/;"	m	class:BackEnd
commit_ptr	src/cpu/o3/rename.hh	/^    Commit *commit_ptr;$/;"	m	class:DefaultRename
committed	src/cpu/o3/lsq_unit.hh	/^        bool committed;$/;"	m	struct:LSQUnit::SQEntry
committed	src/cpu/ozone/lsq_unit.hh	/^        bool committed;$/;"	m	struct:OzoneLSQ::SQEntry
committed	src/cpu/ozone/lw_lsq.hh	/^        bool committed;$/;"	m	struct:OzoneLWLSQ::SQEntry
committedInsts	src/cpu/inorder/cpu.hh	/^    Stats::Vector committedInsts;$/;"	m	class:InOrderCPU
committedInsts	src/cpu/o3/cpu.hh	/^    Stats::Vector committedInsts;$/;"	m	class:FullO3CPU
committedOps	src/cpu/inorder/cpu.hh	/^    Stats::Vector committedOps;$/;"	m	class:InOrderCPU
committedOps	src/cpu/o3/cpu.hh	/^    Stats::Vector committedOps;$/;"	m	class:FullO3CPU
committedStores	src/cpu/o3/commit.hh	/^    bool committedStores[Impl::MaxThreads];$/;"	m	class:DefaultCommit
compare	src/cpu/thread_context.cc	/^ThreadContext::compare(ThreadContext *one, ThreadContext *two)$/;"	f	class:ThreadContext
compareTraceRecords	src/mem/ruby/recorder/CacheRecorder.hh	/^compareTraceRecords(const TraceRecord* n1, const TraceRecord* n2)$/;"	f
compareValue	src/dev/arm/generic_timer.hh	/^        uint64_t compareValue() const { return _counterLimit; }$/;"	f	class:GenericTimer::ArchTimer
compareVersions	src/python/m5/util/__init__.py	/^def compareVersions(v1, v2):$/;"	f
compileDate	src/base/date.cc	/^const char *compileDate = __DATE__ " " __TIME__;$/;"	v
complete	src/arch/arm/stage2_lookup.hh	/^    bool                    complete;$/;"	m	class:ArmISA::Stage2LookUp
complete	src/base/chunk_generator.hh	/^    unsigned complete() const { return curAddr - startAddr; }$/;"	f	class:ChunkGenerator
complete	src/cpu/o3/lsq_unit.hh	/^        inline bool complete() { return --outstanding == 0; }$/;"	f	class:LSQUnit::LSQSenderState
completeAcc	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::completeAcc(Packet *pkt)$/;"	f	class:InOrderDynInst
completeAcc	src/cpu/o3/dyn_inst_impl.hh	/^BaseO3DynInst<Impl>::completeAcc(PacketPtr pkt)$/;"	f	class:BaseO3DynInst
completeAcc	src/cpu/ozone/dyn_inst_impl.hh	/^OzoneDynInst<Impl>::completeAcc(PacketPtr pkt)$/;"	f	class:OzoneDynInst
completeBarrier	src/cpu/o3/mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::completeBarrier(DynInstPtr &inst)$/;"	f	class:MemDepUnit
completeDataAccess	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::completeDataAccess(PacketPtr pkt)$/;"	f	class:LSQUnit
completeDataAccess	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::completeDataAccess(PacketPtr pkt)$/;"	f	class:OzoneLWLSQ
completeDataAccess	src/cpu/simple/timing.cc	/^TimingSimpleCPU::completeDataAccess(PacketPtr pkt)$/;"	f	class:TimingSimpleCPU
completeDrain	src/arch/arm/table_walker.cc	/^TableWalker::completeDrain()$/;"	f	class:TableWalker
completeIfetch	src/cpu/simple/timing.cc	/^TimingSimpleCPU::completeIfetch(PacketPtr pkt)$/;"	f	class:TimingSimpleCPU
completeMemInst	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::completeMemInst(DynInstPtr &completed_inst)$/;"	f	class:InstructionQueue
completeMemInst	src/cpu/ozone/back_end.hh	/^    void completeMemInst(DynInstPtr &inst)$/;"	f	class:BackEnd
completeMemInst	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::InstQueue::completeMemInst(DynInstPtr &inst)$/;"	f	class:BackEnd::InstQueue
completeMemInst	src/cpu/ozone/inst_queue_impl.hh	/^InstQueue<Impl>::completeMemInst(DynInstPtr &completed_inst)$/;"	f	class:InstQueue
completeMemInst	src/cpu/ozone/lw_back_end.hh	/^    void completeMemInst(DynInstPtr &inst) { }$/;"	f	class:LWBackEnd
completeRequest	src/cpu/testers/memtest/memtest.cc	/^MemTest::completeRequest(PacketPtr pkt)$/;"	f	class:MemTest
completeRequest	src/cpu/testers/networktest/networktest.cc	/^NetworkTest::completeRequest(PacketPtr pkt)$/;"	f	class:NetworkTest
completeStore	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::completeStore(int store_idx)$/;"	f	class:LSQUnit
completeStore	src/cpu/ozone/lsq_unit_impl.hh	/^OzoneLSQ<Impl>::completeStore(int store_idx)$/;"	f	class:OzoneLSQ
completeStore	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::completeStore(DynInstPtr &inst)$/;"	f	class:OzoneLWLSQ
completeTick	src/cpu/o3/dyn_inst.hh	/^    int32_t completeTick;$/;"	m	class:BaseO3DynInst
completed	src/cpu/inorder/resource.hh	/^    bool completed;$/;"	m	class:ResourceRequest
completed	src/cpu/o3/lsq_unit.hh	/^        bool completed;$/;"	m	struct:LSQUnit::SQEntry
completed	src/cpu/o3/mem_dep_unit.hh	/^        bool completed;$/;"	m	class:MemDepUnit::MemDepEntry
completed	src/cpu/o3/mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::completed(DynInstPtr &inst)$/;"	f	class:MemDepUnit
completed	src/cpu/ozone/lsq_unit.hh	/^        bool completed;$/;"	m	struct:OzoneLSQ::SQEntry
completed	src/cpu/ozone/lw_lsq.hh	/^        bool completed;$/;"	m	struct:OzoneLWLSQ::SQEntry
completionAddr	src/dev/copy_engine_defs.hh	/^    uint64_t completionAddr;$/;"	m	struct:CopyEngineReg::ChanRegs
completionAddress	src/dev/i8254xGBe.hh	/^        Addr completionAddress;$/;"	m	class:IGbE::TxDescCache
completionDataReg	src/dev/copy_engine.hh	/^        uint64_t completionDataReg;$/;"	m	class:CopyEngine::CopyEngineChannel
completionEnabled	src/dev/i8254xGBe.hh	/^        bool completionEnabled;$/;"	m	class:IGbE::TxDescCache
completionEvent	src/dev/dma_device.hh	/^        Event *completionEvent;$/;"	m	struct:DmaPort::DmaReqState
completionWriteback	src/dev/i8254xGBe.hh	/^        void completionWriteback(Addr a, bool enabled) {$/;"	f	class:IGbE::TxDescCache
composeBitVector	src/arch/x86/bios/smbios.cc	/^composeBitVector(T vec)$/;"	f
computeStats	src/mem/cache/tags/base.hh	/^    virtual void computeStats() {}$/;"	f	class:BaseTags
computeStats	src/mem/cache/tags/lru.cc	/^LRU::computeStats()$/;"	f	class:LRU
conId	src/base/cp_annotate.hh	/^    uint64_t conId;$/;"	m	class:CPA
concatAttrLists	src/arch/isa_parser.py	/^    def concatAttrLists(self, attr_name):$/;"	m	class:OperandList
concatAttrStrings	src/arch/isa_parser.py	/^    def concatAttrStrings(self, attr_name):$/;"	m	class:OperandList
concatSomeAttrLists	src/arch/isa_parser.py	/^    def concatSomeAttrLists(self, filter, attr_name):$/;"	m	class:OperandList
concatSomeAttrStrings	src/arch/isa_parser.py	/^    def concatSomeAttrStrings(self, filter, attr_name):$/;"	m	class:OperandList
cond	src/arch/arm/types.hh	/^        Bitfield<7, 4> cond;$/;"	m	namespace:ArmISA
condCode	src/arch/arm/insts/branch64.hh	/^    ConditionCode condCode;$/;"	m	class:ArmISA::BranchImmCond64
condCode	src/arch/arm/insts/data64.hh	/^    ConditionCode condCode;$/;"	m	class:ArmISA::DataXCondCompImmOp
condCode	src/arch/arm/insts/data64.hh	/^    ConditionCode condCode;$/;"	m	class:ArmISA::DataXCondCompRegOp
condCode	src/arch/arm/insts/data64.hh	/^    ConditionCode condCode;$/;"	m	class:ArmISA::DataXCondSelOp
condCode	src/arch/arm/insts/pred_inst.hh	/^    ConditionCode condCode;$/;"	m	class:ArmISA::PredOp
condCode	src/arch/arm/insts/vfp.hh	/^    ConditionCode condCode;$/;"	m	class:ArmISA::FpCondCompRegOp
condCode	src/arch/arm/insts/vfp.hh	/^    ConditionCode condCode;$/;"	m	class:ArmISA::FpCondSelOp
condCode	src/arch/arm/types.hh	/^        Bitfield<31, 28> condCode;$/;"	m	namespace:ArmISA
condIncorrect	src/cpu/pred/bpred_unit.hh	/^    Stats::Scalar condIncorrect;$/;"	m	class:BPredUnit
condOk	src/arch/power/insts/branch.hh	/^    condOk(uint32_t cr) const$/;"	f	class:PowerISA::BranchCond
condPredicted	src/cpu/pred/bpred_unit.hh	/^    Stats::Scalar condPredicted;$/;"	m	class:BPredUnit
cond_message	src/base/misc.hh	/^#define cond_message(/;"	d
cond_message_once	src/base/misc.hh	/^#define cond_message_once(/;"	d
conditionalSquash	src/cpu/o3/thread_context.hh	/^    inline void conditionalSquash()$/;"	f	class:O3ThreadContext
conf	src/python/m5/util/jobfile.py	/^        raise ImportError, 'cannot import name conf from %s' % jobfile$/;"	i
confTableReported	src/mem/abstract_mem.hh	/^    bool confTableReported;$/;"	m	class:AbstractMemory
conf_record_buff_per_vc	src/mem/ruby/network/fault_model/FaultModel.hh	/^        conf_record_buff_per_vc,$/;"	e	enum:FaultModel::conf_record_format
conf_record_first_fault_type	src/mem/ruby/network/fault_model/FaultModel.hh	/^        conf_record_first_fault_type,$/;"	e	enum:FaultModel::conf_record_format
conf_record_format	src/mem/ruby/network/fault_model/FaultModel.hh	/^    enum conf_record_format$/;"	g	class:FaultModel
conf_record_last_fault_type	src/mem/ruby/network/fault_model/FaultModel.hh	/^        conf_record_last_fault_type = conf_record_first_fault_type + number_of_fault_types - 1,$/;"	e	enum:FaultModel::conf_record_format
conf_record_vcs	src/mem/ruby/network/fault_model/FaultModel.hh	/^        conf_record_vcs,$/;"	e	enum:FaultModel::conf_record_format
conf_table_reported	src/dev/arm/RealView.py	/^                                  conf_table_reported = False)$/;"	v	class:VExpress_EMM
conf_table_reported	src/mem/AbstractMemory.py	/^    conf_table_reported = Param.Bool(True, "Report to configuration table")$/;"	v	class:AbstractMemory
confdir	src/python/m5/config.py	/^        confdir = joinpath(homedir, '.m5')$/;"	v
confdir	src/python/m5/config.py	/^confdir = os.environ.get('M5_CONFIG')$/;"	v
confidence	src/mem/cache/prefetch/stride.hh	/^        int confidence;$/;"	m	class:StridePrefetcher::StrideEntry
config	src/dev/Pci.py	/^    config = SlavePort("PCI configuration space port")$/;"	v	class:PciDevice
config	src/dev/ns_gige.hh	/^    uint32_t    config;$/;"	m	struct:dp_regs
config	src/dev/pcidev.hh	/^    PCIConfig config;$/;"	m	class:PciDevice
config	src/python/m5/main.py	/^    import config$/;"	i
configAddr	src/dev/pcidev.hh	/^        Addr configAddr;$/;"	m	class:PciDevice::PciConfigPort
configAddress	src/arch/x86/tlb.hh	/^        uint32_t configAddress;$/;"	m	class:X86ISA::TLB
configCP	src/arch/mips/isa.cc	/^ISA::configCP()$/;"	f	class:MipsISA::ISA
configDelay	src/dev/pcidev.hh	/^    Tick configDelay;$/;"	m	class:PciDevice
configFile	src/cpu/testers/traffic_gen/traffic_gen.hh	/^    const std::string configFile;$/;"	m	class:TrafficGen
configPort	src/dev/pcidev.hh	/^    PciConfigPort configPort;$/;"	m	class:PciDevice
config_file	src/cpu/testers/traffic_gen/TrafficGen.py	/^    config_file = Param.String("Configuration file describing the behaviour")$/;"	v	class:TrafficGen
config_latency	src/dev/Pci.py	/^    config_latency = Param.Latency('20ns', "Config read or write latency")$/;"	v	class:PciDevice
configurations	src/mem/ruby/network/fault_model/FaultModel.hh	/^    std::vector <system_conf> configurations;$/;"	m	class:FaultModel
conflictingLoads	src/cpu/o3/mem_dep_unit.hh	/^    Stats::Scalar conflictingLoads;$/;"	m	class:MemDepUnit
conflictingStores	src/cpu/o3/mem_dep_unit.hh	/^    Stats::Scalar conflictingStores;$/;"	m	class:MemDepUnit
connect	src/kern/tru64/tru64_syscalls.hh	/^        connect = 98,$/;"	e	enum:SystemCalls::__anon102
connect	src/python/m5/params.py	/^    def connect(self, other):$/;"	m	class:PortRef
connect	src/python/m5/params.py	/^    def connect(self, other):$/;"	m	class:VectorPortRef
connect	src/python/m5/params.py	/^    def connect(self, simobj, ref):$/;"	m	class:Port
connectAllPorts	src/cpu/BaseCPU.py	/^    def connectAllPorts(self, cached_bus, uncached_bus = None):$/;"	f
connectCachedPorts	src/cpu/BaseCPU.py	/^    def connectCachedPorts(self, bus):$/;"	f
connectMemPorts	src/cpu/checker/thread_context.hh	/^    void connectMemPorts(ThreadContext *tc)$/;"	f	class:CheckerThreadContext
connectPorts	src/python/m5/SimObject.py	/^    def connectPorts(self):$/;"	f
connectPorts	src/python/m5/params.py	/^        from m5.internal.pyobject import connectPorts$/;"	i
connectPorts	src/python/swig/pyobject.cc	/^connectPorts(SimObject *o1, const std::string &name1, int i1,$/;"	f
connectUncachedPorts	src/cpu/BaseCPU.py	/^    def connectUncachedPorts(self, bus):$/;"	f
connectWithPeer	src/mem/ruby/slicc_interface/AbstractController.cc	/^AbstractController::connectWithPeer(AbstractController *c)$/;"	f	class:AbstractController
console	src/arch/alpha/AlphaSystem.py	/^    console = Param.String("file that contains the console code")$/;"	v	class:AlphaSystem
console	src/arch/alpha/stacktrace.hh	/^        console = 2,$/;"	e	enum:AlphaISA::StackTrace::__anon4
console	src/arch/alpha/system.hh	/^    ObjectFile *console;$/;"	m	class:AlphaSystem
console	src/arch/mips/MipsSystem.py	/^    console = Param.String("file that contains the console code")$/;"	v	class:MipsSystem
console	src/arch/mips/stacktrace.hh	/^    static const int console = 2;$/;"	m	class:MipsISA::StackTrace
console	src/arch/mips/system.hh	/^    ObjectFile *console;$/;"	m	class:MipsSystem
console	src/arch/power/stacktrace.hh	/^    static const int console = 2;$/;"	m	class:PowerISA::StackTrace
console	src/arch/x86/stacktrace.hh	/^        static const int console = 2;$/;"	m	class:X86ISA::StackTrace
consoleData	src/dev/alpha/backdoor.hh	/^        uint8_t *consoleData;$/;"	m	union:AlphaBackdoor::__anon64
consolePanicEvent	src/arch/alpha/system.hh	/^    BreakPCEvent *consolePanicEvent;$/;"	m	class:AlphaSystem
consolePanicEvent	src/arch/mips/system.hh	/^    BreakPCEvent *consolePanicEvent;$/;"	m	class:MipsSystem
consoleSymtab	src/arch/alpha/system.hh	/^    SymbolTable *consoleSymtab;$/;"	m	class:AlphaSystem
consoleSymtab	src/arch/mips/system.hh	/^    SymbolTable *consoleSymtab;$/;"	m	class:MipsSystem
console_in	src/dev/terminal.cc	/^Terminal::console_in()$/;"	f	class:Terminal
constEAListIt	src/cpu/ozone/ea_list.hh	/^    typedef std::list<instEA>::const_iterator constEAListIt;$/;"	t	class:EAList
constUDelaySkipEvent	src/arch/arm/linux/system.hh	/^    Linux::UDelayEvent *constUDelaySkipEvent;$/;"	m	class:LinuxArmSystem
const_iterator	src/base/addr_range_map.hh	/^    typedef typename RangeMap::const_iterator const_iterator;$/;"	t	class:AddrRangeMap
const_iterator	src/base/varargs.hh	/^    typedef typename list::const_iterator const_iterator;$/;"	t	class:VarArgs::List
const_iterator	src/cpu/pc_event.hh	/^    typedef map_t::const_iterator const_iterator;$/;"	t	class:PCEventQueue
const_range_t	src/cpu/pc_event.hh	/^    typedef std::pair<const_iterator, const_iterator> const_range_t;$/;"	t	class:PCEventQueue
constant	src/base/statistics.hh	/^constant(T val)$/;"	f	namespace:Stats
constantVector	src/base/statistics.hh	/^constantVector(T val)$/;"	f	namespace:Stats
consume	src/cpu/profile.cc	/^FunctionProfile::consume(const vector<Addr> &stack)$/;"	f	class:FunctionProfile
consume	src/cpu/profile.hh	/^FunctionProfile::consume(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:FunctionProfile
consumeByte	src/arch/x86/decoder.hh	/^    void consumeByte()$/;"	f	class:X86ISA::Decoder
consumeBytes	src/arch/arm/decoder.hh	/^    inline void consumeBytes(int numBytes)$/;"	f	class:ArmISA::Decoder
consumeBytes	src/arch/x86/decoder.hh	/^    void consumeBytes(int numBytes)$/;"	f	class:X86ISA::Decoder
consumeLink	src/mem/ruby/network/garnet/fixed-pipeline/NetworkLink_d.hh	/^    inline flit_d* consumeLink()    { return linkBuffer->getTopFlit(); }$/;"	f	class:NetworkLink_d
consumeLink	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.cc	/^NetworkLink::consumeLink()$/;"	f	class:NetworkLink
consumerInst	src/cpu/o3/iew.hh	/^    Stats::Vector consumerInst;$/;"	m	class:DefaultIEW
consumerInst	src/cpu/ozone/lw_back_end.hh	/^    Stats::Vector consumerInst;$/;"	m	class:LWBackEnd
consumer_inst	src/cpu/ozone/back_end.hh	/^    Stats::Vector consumer_inst;$/;"	m	class:BackEnd
cont	src/base/cprintf.hh	/^    bool cont;$/;"	m	struct:cp::Print
contains	src/base/addr_range.hh	/^    bool contains(const Addr& a) const$/;"	f	class:AddrRange
contents	src/arch/x86/linux/syscalls.cc	/^    Bitfield<2, 1> contents;$/;"	v
context	src/arch/alpha/kernel_stats.cc	/^Statistics::context(Addr oldpcbb, Addr newpcbb, ThreadContext *tc)$/;"	f	class:AlphaISA::Kernel::Statistics
context	src/base/remote_gdb.hh	/^    ThreadContext *context;$/;"	m	class:BaseRemoteGDB
contextId	src/arch/sparc/pagetable.hh	/^    int contextId;$/;"	m	struct:SparcISA::TlbRange
contextId	src/cpu/base_dyn_inst.hh	/^    int contextId() const { return thread->contextId(); }$/;"	f	class:BaseDynInst
contextId	src/cpu/checker/thread_context.hh	/^    int contextId() const { return actualTC->contextId(); }$/;"	f	class:CheckerThreadContext
contextId	src/cpu/inorder/cpu.hh	/^    contextId()$/;"	f	class:InOrderCPU
contextId	src/cpu/inorder/inorder_dyn_inst.hh	/^    int contextId() const { return thread->contextId(); }$/;"	f	class:InOrderDynInst
contextId	src/cpu/inorder/thread_context.hh	/^    int contextId() const { return thread->contextId(); }$/;"	f	class:InOrderThreadContext
contextId	src/cpu/o3/thread_context.hh	/^    virtual int contextId() const { return thread->contextId(); }$/;"	f	class:O3ThreadContext
contextId	src/cpu/thread_context.hh	/^    int contextId() const { return actualTC->contextId(); }$/;"	f	class:ProxyThreadContext
contextId	src/cpu/thread_state.hh	/^    int contextId() const { return _contextId; }$/;"	f	struct:ThreadState
contextId	src/mem/abstract_mem.hh	/^    const int contextId;$/;"	m	class:LockedAddr
contextId	src/mem/cache/blk.hh	/^        int contextId;     \/\/ locking context$/;"	m	class:CacheBlk::Lock
contextId	src/mem/request.hh	/^    contextId() const$/;"	f	class:Request
contextIds	src/sim/process.hh	/^    std::vector<int> contextIds;$/;"	m	class:Process
contextSwitch	src/cpu/o3/cpu.hh	/^    bool contextSwitch;$/;"	m	class:FullO3CPU
contiguousHint	src/arch/arm/table_walker.hh	/^        bool contiguousHint() const$/;"	f	class:ArmISA::TableWalker::LongDescriptor
continueProcessing	src/dev/copy_engine.cc	/^CopyEngine::CopyEngineChannel::continueProcessing()$/;"	f	class:CopyEngine::CopyEngineChannel
continued	src/base/loader/coff_sym.h	/^    unsigned continued : 1; \/* indicates additional TQ info in next AUX *\/$/;"	m	struct:__anon41
control	src/dev/arm/generic_timer.hh	/^        uint32_t control() const { return _control; }$/;"	f	class:GenericTimer::ArchTimer
control	src/dev/arm/kmi.hh	/^    ControlReg control;$/;"	m	class:Pl050
control	src/dev/arm/pl011.hh	/^    uint16_t control;$/;"	m	class:Pl011
control	src/dev/arm/timer_sp804.hh	/^        CTRL control;$/;"	m	class:Sp804::Timer
controlVal	src/dev/x86/speaker.hh	/^    SpeakerControl controlVal;$/;"	m	class:X86ISA::Speaker
control_msg_size	src/mem/ruby/network/Network.py	/^    control_msg_size = Param.Int(8, "")$/;"	v	class:RubyNetwork
conutdm	src/arch/mips/dt_constants.hh	/^    Bitfield<25>     conutdm;$/;"	m	namespace:MipsISA
convX87TagsToXTags	src/arch/x86/utility.cc	/^convX87TagsToXTags(uint16_t ftw)$/;"	f	namespace:X86ISA
convX87XTagsToTags	src/arch/x86/utility.cc	/^convX87XTagsToTags(uint8_t ftwx)$/;"	f	namespace:X86ISA
convert	src/base/vnc/convert.cc	/^VideoConvert::convert(const uint8_t *fb) const$/;"	f	class:VideoConvert
convert	src/kern/tru64/tru64_syscalls.hh	/^    static int convert(int syscall_num) {$/;"	f	class:SystemCalls
convert	src/python/m5/params.py	/^    def convert(self, value):$/;"	m	class:ParamDesc
convert	src/python/m5/params.py	/^    def convert(self, value):$/;"	m	class:VectorParamDesc
convert	src/python/m5/ticks.py	/^    from m5.util import convert$/;"	i
convert	src/python/m5/util/__init__.py	/^import convert$/;"	i
convert	src/python/m5/util/code_formatter.py	/^        def convert(match):$/;"	f	function:code_formatter.__call__
convert	src/python/m5/util/smartdict.py	/^    def convert(self, other):$/;"	m	class:Variable
convertLlToRead	src/mem/packet.hh	/^    convertLlToRead()$/;"	f	class:Packet
convertScToWrite	src/mem/packet.hh	/^    convertScToWrite()$/;"	f	class:Packet
convertScanCodes	src/dev/x86/i8042.hh	/^        Bitfield<6> convertScanCodes;$/;"	m	class:X86ISA::I8042
convertStat64Buf	src/sim/syscall_emul.hh	/^convertStat64Buf(target_stat &tgt, host_stat64 *host, bool fakeTTY = false)$/;"	f
convertStatBuf	src/sim/syscall_emul.hh	/^convertStatBuf(target_stat &tgt, host_stat *host, bool fakeTTY = false)$/;"	f
copiesProcessed	src/dev/copy_engine.hh	/^    Stats::Vector copiesProcessed;$/;"	m	class:CopyEngine
copt	src/base/loader/coff_sym.h	/^    coff_int    copt;           \/* count of file's optimization entries *\/$/;"	m	struct:ecoff_fdr
copy	src/base/pollevent.cc	/^PollQueue::copy()$/;"	f	class:PollQueue
copy	src/base/refcnt.hh	/^    copy(T *d)$/;"	f	class:RefCountingPtr
copy	src/python/m5/params.py	/^import copy$/;"	i
copy	src/python/m5/proxy.py	/^import copy$/;"	i
copy	src/python/m5/util/region.py	/^    def copy(self):$/;"	m	class:Regions
copy	src/python/m5/util/sorteddict.py	/^    def copy(self):$/;"	m	class:SortedDict
copyArchRegs	src/cpu/checker/thread_context.hh	/^    void copyArchRegs(ThreadContext *tc)$/;"	f	class:CheckerThreadContext
copyArchRegs	src/cpu/inorder/thread_context.cc	/^InOrderThreadContext::copyArchRegs(ThreadContext *src_tc)$/;"	f	class:InOrderThreadContext
copyArchRegs	src/cpu/o3/thread_context_impl.hh	/^O3ThreadContext<Impl>::copyArchRegs(ThreadContext *tc)$/;"	f	class:O3ThreadContext
copyArchRegs	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::OzoneTC::copyArchRegs(ThreadContext *tc)$/;"	f	class:OzoneCPU::OzoneTC
copyArchRegs	src/cpu/simple_thread.cc	/^SimpleThread::copyArchRegs(ThreadContext *src_tc)$/;"	f	class:SimpleThread
copyArchRegs	src/cpu/thread_context.hh	/^    void copyArchRegs(ThreadContext *tc) { actualTC->copyArchRegs(tc); }$/;"	f	class:ProxyThreadContext
copyBuffer	src/dev/copy_engine.hh	/^        uint8_t *copyBuffer;$/;"	m	class:CopyEngine::CopyEngineChannel
copyError	src/mem/packet.hh	/^    void copyError(Packet *pkt) { assert(pkt->isError()); cmd = pkt->cmd; }$/;"	f	class:Packet
copyFrom	src/cpu/ozone/rename_table_impl.hh	/^RenameTable<Impl>::copyFrom(const RenameTable<Impl> &table_to_copy)$/;"	f	class:RenameTable
copyIn	src/sim/syscall_emul.hh	/^    virtual bool copyIn(SETranslatingPortProxy &memproxy)$/;"	f	class:BaseBufferArg
copyIprs	src/arch/alpha/ev5.cc	/^copyIprs(ThreadContext *src, ThreadContext *dest)$/;"	f	namespace:AlphaISA
copyMiscRegs	src/arch/alpha/utility.cc	/^copyMiscRegs(ThreadContext *src, ThreadContext *dest)$/;"	f	namespace:AlphaISA
copyMiscRegs	src/arch/arm/utility.hh	/^copyMiscRegs(ThreadContext *src, ThreadContext *dest)$/;"	f	namespace:ArmISA
copyMiscRegs	src/arch/mips/utility.cc	/^copyMiscRegs(ThreadContext *src, ThreadContext *dest)$/;"	f	namespace:MipsISA
copyMiscRegs	src/arch/power/utility.hh	/^copyMiscRegs(ThreadContext *src, ThreadContext *dest)$/;"	f	namespace:PowerISA
copyMiscRegs	src/arch/sparc/utility.cc	/^copyMiscRegs(ThreadContext *src, ThreadContext *dest)$/;"	f	namespace:SparcISA
copyMiscRegs	src/arch/x86/utility.cc	/^copyMiscRegs(ThreadContext *src, ThreadContext *dest)$/;"	f	namespace:X86ISA
copyOut	src/arch/arm/linux/atag.hh	/^    uint32_t copyOut(uint8_t *p)$/;"	f	class:AtagHeader
copyOut	src/sim/syscall_emul.hh	/^    virtual bool copyOut(SETranslatingPortProxy &memproxy)$/;"	f	class:BaseBufferArg
copyOutStat64Buf	src/sim/syscall_emul.hh	/^copyOutStat64Buf(SETranslatingPortProxy &mem, Addr addr,$/;"	f
copyOutStatBuf	src/sim/syscall_emul.hh	/^copyOutStatBuf(SETranslatingPortProxy &mem, Addr addr,$/;"	f
copyOutStatfsBuf	src/kern/tru64/tru64.hh	/^    copyOutStatfsBuf(SETranslatingPortProxy &mem, Addr addr,$/;"	f	class:Tru64
copyOutStatfsBuf	src/kern/tru64/tru64.hh	/^    static void copyOutStatfsBuf(SETranslatingPortProxy &mem, Addr addr,$/;"	f	class:Tru64_F64
copyOutStatfsBuf	src/kern/tru64/tru64.hh	/^    static void copyOutStatfsBuf(SETranslatingPortProxy &mem, Addr addr,$/;"	f	class:Tru64_PreF64
copyPartial	src/mem/ruby/common/DataBlock.hh	/^DataBlock::copyPartial(const DataBlock & dblk, int offset, int len)$/;"	f	class:DataBlock
copyRegs	src/arch/alpha/utility.cc	/^copyRegs(ThreadContext *src, ThreadContext *dest)$/;"	f	namespace:AlphaISA
copyRegs	src/arch/arm/utility.cc	/^copyRegs(ThreadContext *src, ThreadContext *dest)$/;"	f	namespace:ArmISA
copyRegs	src/arch/mips/utility.cc	/^copyRegs(ThreadContext *src, ThreadContext *dest)$/;"	f	namespace:MipsISA
copyRegs	src/arch/power/utility.cc	/^copyRegs(ThreadContext *src, ThreadContext *dest)$/;"	f	namespace:PowerISA
copyRegs	src/arch/sparc/utility.cc	/^copyRegs(ThreadContext *src, ThreadContext *dest)$/;"	f	namespace:SparcISA
copyRegs	src/arch/x86/utility.cc	/^copyRegs(ThreadContext *src, ThreadContext *dest)$/;"	f	namespace:X86ISA
copyResult	src/cpu/checker/cpu_impl.hh	/^Checker<Impl>::copyResult(DynInstPtr &inst, uint64_t mismatch_val,$/;"	f	class:Checker
copyState	src/cpu/simple_thread.cc	/^SimpleThread::copyState(ThreadContext *oldContext)$/;"	f	class:SimpleThread
copyStringArray	src/sim/process_impl.hh	/^copyStringArray(std::vector<std::string> &strings,$/;"	f
copyout	src/dev/pktfifo.cc	/^PacketFifo::copyout(void *dest, unsigned offset, unsigned len)$/;"	f	class:PacketFifo
copypal	src/arch/alpha/osfpal.hh	/^        copypal = 0xbf,$/;"	e	enum:PAL::__anon3
core	src/python/m5/__init__.py	/^    import core$/;"	i
core	src/python/m5/__init__.py	/^    import internal.core$/;"	i
core	src/python/m5/main.py	/^    import core$/;"	i
core	src/python/m5/simulate.py	/^import core$/;"	i
coreType	src/cpu/inorder/cpu.hh	/^    std::string coreType;$/;"	m	class:InOrderCPU
count	src/arch/arm/faults.hh	/^        FaultStat count;$/;"	m	struct:ArmISA::ArmFault::FaultVals
count	src/arch/sparc/faults.hh	/^        FaultStat count;$/;"	m	struct:SparcISA::SparcFaultBase::FaultVals
count	src/arch/x86/regs/misc.hh	/^        Bitfield<36, 32> count; \/\/ Parameter Count$/;"	m	namespace:X86ISA
count	src/arch/x86/regs/misc.hh	/^        Bitfield<7, 0> count; \/\/ Number of error reporting register banks$/;"	m	namespace:X86ISA
count	src/base/loader/coff_sym.h	/^    coff_int    count;          \/* count of ranges for variant arm *\/$/;"	m	union:__anon44
count	src/base/refcnt.hh	/^    mutable int count;$/;"	m	class:RefCounted
count	src/cpu/FuncUnit.py	/^    count = Param.Int("number of these FU's available")$/;"	v	class:FUDesc
count	src/cpu/o3/FuncUnitConfig.py	/^    count = 0$/;"	v	class:ReadPort
count	src/cpu/o3/FuncUnitConfig.py	/^    count = 0$/;"	v	class:WritePort
count	src/cpu/o3/FuncUnitConfig.py	/^    count = 1$/;"	v	class:IprPort
count	src/cpu/o3/FuncUnitConfig.py	/^    count = 2$/;"	v	class:FP_MultDiv
count	src/cpu/o3/FuncUnitConfig.py	/^    count = 4$/;"	v	class:FP_ALU
count	src/cpu/o3/FuncUnitConfig.py	/^    count = 4$/;"	v	class:RdWrPort
count	src/cpu/o3/FuncUnitConfig.py	/^    count = 4$/;"	v	class:SIMD_Unit
count	src/cpu/o3/FuncUnitConfig.py	/^    count = 6$/;"	v	class:IntALU
count	src/cpu/o3/FuncUnitConfig.py	/^    count=2$/;"	v	class:IntMultDiv
count	src/cpu/o3/inst_queue.hh	/^    unsigned count[Impl::MaxThreads];$/;"	m	class:InstructionQueue
count	src/cpu/ozone/inst_queue.hh	/^    unsigned count[Impl::MaxThreads];$/;"	m	class:InstQueue
count	src/cpu/profile.hh	/^    Counter count;$/;"	m	class:ProfileNode
count	src/cpu/simple/atomic.hh	/^        uint64_t count;$/;"	m	struct:AtomicSimpleCPU::BBInfo
count	src/mem/ruby/common/NetDest.cc	/^NetDest::count() const$/;"	f	class:NetDest
count	src/mem/ruby/common/Set.cc	/^Set::count() const$/;"	f	class:Set
count	src/sim/sim_events.hh	/^    int count;$/;"	m	class:CountedDrainEvent
countInst	src/cpu/simple/base.hh	/^    void countInst()$/;"	f	class:BaseSimpleCPU
countInsts	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::countInsts()$/;"	f	class:InstructionQueue
countInsts	src/cpu/o3/rob_impl.hh	/^ROB<Impl>::countInsts()$/;"	f	class:ROB
countInsts	src/cpu/o3/rob_impl.hh	/^ROB<Impl>::countInsts(ThreadID tid)$/;"	f	class:ROB
countInsts	src/cpu/ozone/inst_queue_impl.hh	/^InstQueue<Impl>::countInsts()$/;"	f	class:InstQueue
countNumSeqPkts	src/cpu/testers/traffic_gen/generators.hh	/^    unsigned int countNumSeqPkts;$/;"	m	class:DramGen
countPacketsAfter	src/dev/pktfifo.hh	/^    int countPacketsAfter(iterator i)$/;"	f	class:PacketFifo
countPacketsBefore	src/dev/pktfifo.hh	/^    int countPacketsBefore(iterator i)$/;"	f	class:PacketFifo
countReadStarvingForAddress	src/mem/ruby/system/PersistentTable.cc	/^PersistentTable::countReadStarvingForAddress(const Address& address) const$/;"	f	class:PersistentTable
countStarvingForAddress	src/mem/ruby/system/PersistentTable.cc	/^PersistentTable::countStarvingForAddress(const Address& address) const$/;"	f	class:PersistentTable
countStat	src/arch/alpha/faults.hh	/^    FaultStat & countStat() {return _count;}$/;"	f	class:AlphaISA::AlignmentFault
countStat	src/arch/alpha/faults.hh	/^    FaultStat & countStat() {return _count;}$/;"	f	class:AlphaISA::ArithmeticFault
countStat	src/arch/alpha/faults.hh	/^    FaultStat & countStat() {return _count;}$/;"	f	class:AlphaISA::DtbAcvFault
countStat	src/arch/alpha/faults.hh	/^    FaultStat & countStat() {return _count;}$/;"	f	class:AlphaISA::DtbAlignmentFault
countStat	src/arch/alpha/faults.hh	/^    FaultStat & countStat() {return _count;}$/;"	f	class:AlphaISA::DtbPageFault
countStat	src/arch/alpha/faults.hh	/^    FaultStat & countStat() {return _count;}$/;"	f	class:AlphaISA::FloatEnableFault
countStat	src/arch/alpha/faults.hh	/^    FaultStat & countStat() {return _count;}$/;"	f	class:AlphaISA::IntegerOverflowFault
countStat	src/arch/alpha/faults.hh	/^    FaultStat & countStat() {return _count;}$/;"	f	class:AlphaISA::InterruptFault
countStat	src/arch/alpha/faults.hh	/^    FaultStat & countStat() {return _count;}$/;"	f	class:AlphaISA::ItbAcvFault
countStat	src/arch/alpha/faults.hh	/^    FaultStat & countStat() {return _count;}$/;"	f	class:AlphaISA::ItbPageFault
countStat	src/arch/alpha/faults.hh	/^    FaultStat & countStat() {return _count;}$/;"	f	class:AlphaISA::MachineCheckFault
countStat	src/arch/alpha/faults.hh	/^    FaultStat & countStat() {return _count;}$/;"	f	class:AlphaISA::NDtbMissFault
countStat	src/arch/alpha/faults.hh	/^    FaultStat & countStat() {return _count;}$/;"	f	class:AlphaISA::PDtbMissFault
countStat	src/arch/alpha/faults.hh	/^    FaultStat & countStat() {return _count;}$/;"	f	class:AlphaISA::PalFault
countStat	src/arch/alpha/faults.hh	/^    FaultStat & countStat() {return _count;}$/;"	f	class:AlphaISA::ResetFault
countStat	src/arch/alpha/faults.hh	/^    FaultStat & countStat() {return _count;}$/;"	f	class:AlphaISA::UnimplementedOpcodeFault
countStat	src/arch/arm/faults.hh	/^    FaultStat & countStat() { return vals.count; }$/;"	f	class:ArmISA::ArmFaultVals
countStat	src/arch/sparc/faults.hh	/^    FaultStat & countStat() { return vals.count; }$/;"	f	class:SparcISA::SparcFault
counter	src/cpu/pred/sat_counter.hh	/^    uint8_t counter;$/;"	m	class:SatCounter
counter	src/dev/intel_8254_timer.hh	/^            Counter* counter;$/;"	m	class:Intel8254Timer::Counter::CounterEvent
counter	src/dev/intel_8254_timer.hh	/^    Counter *counter[3];$/;"	m	class:Intel8254Timer
counterAtZero	src/dev/arm/timer_sp804.cc	/^Sp804::Timer::counterAtZero()$/;"	f	class:Sp804::Timer
counterInterrupt	src/dev/intel_8254_timer.hh	/^    counterInterrupt(unsigned int num)$/;"	f	class:Intel8254Timer
counterInterrupt	src/dev/x86/i8254.cc	/^X86ISA::I8254::counterInterrupt(unsigned int num)$/;"	f	class:X86ISA::I8254
counterInterrupt	src/dev/x86/i8254.hh	/^        counterInterrupt(unsigned int num)$/;"	f	class:X86ISA::I8254::X86Intel8254Timer
counterLimitReached	src/dev/arm/generic_timer.cc	/^GenericTimer::ArchTimer::counterLimitReached()$/;"	f	class:GenericTimer::ArchTimer
counterMask	src/arch/x86/regs/misc.hh	/^        Bitfield<31,24> counterMask;$/;"	m	namespace:X86ISA
counterMatch	src/dev/arm/rtc_pl031.cc	/^PL031::counterMatch()$/;"	f	class:PL031
counterValue	src/dev/arm/generic_timer.hh	/^        uint64_t counterValue() const { return _counter->value(); }$/;"	f	class:GenericTimer::ArchTimer
cp	src/arch/sparc/pagetable.hh	/^    bool cp()       const { assert(populated); return bits(entry4u,5,5); }$/;"	f	class:SparcISA::PageTableEntry
cp	src/base/cprintf.cc	/^namespace cp {$/;"	n	file:
cp	src/base/cprintf.hh	/^namespace cp {$/;"	n
cp	src/base/cprintf_formats.hh	/^namespace cp {$/;"	n
cp0	src/arch/arm/miscregs.hh	/^        Bitfield<0>  cp0;$/;"	m	namespace:ArmISA
cp0	src/arch/arm/miscregs.hh	/^        Bitfield<1, 0> cp0;$/;"	m	namespace:ArmISA
cp0	src/arch/mips/isa.hh	/^            ISA::CP0 *cp0;$/;"	m	class:MipsISA::ISA::CP0Event
cp0EventRemoveList	src/arch/mips/isa.hh	/^        std::queue<CP0Event*> cp0EventRemoveList;$/;"	m	class:MipsISA::ISA
cp0EventType	src/arch/mips/isa.hh	/^            CP0EventType cp0EventType;$/;"	m	class:MipsISA::ISA::CP0Event
cp0Updated	src/arch/mips/isa.hh	/^        bool cp0Updated;$/;"	m	class:MipsISA::ISA
cp1	src/arch/arm/miscregs.hh	/^        Bitfield<1>  cp1;$/;"	m	namespace:ArmISA
cp1	src/arch/arm/miscregs.hh	/^        Bitfield<3, 2> cp1;$/;"	m	namespace:ArmISA
cp10	src/arch/arm/miscregs.hh	/^        Bitfield<10> cp10;$/;"	m	namespace:ArmISA
cp10	src/arch/arm/miscregs.hh	/^        Bitfield<21, 20> cp10;$/;"	m	namespace:ArmISA
cp11	src/arch/arm/miscregs.hh	/^        Bitfield<11> cp11;$/;"	m	namespace:ArmISA
cp11	src/arch/arm/miscregs.hh	/^        Bitfield<23, 22> cp11;$/;"	m	namespace:ArmISA
cp12	src/arch/arm/miscregs.hh	/^        Bitfield<12> cp12;$/;"	m	namespace:ArmISA
cp12	src/arch/arm/miscregs.hh	/^        Bitfield<25, 24> cp12;$/;"	m	namespace:ArmISA
cp13	src/arch/arm/miscregs.hh	/^        Bitfield<13> cp13;$/;"	m	namespace:ArmISA
cp13	src/arch/arm/miscregs.hh	/^        Bitfield<27, 26> cp13;$/;"	m	namespace:ArmISA
cp15ben	src/arch/arm/miscregs.hh	/^        Bitfield<5>    cp15ben; \/\/ CP15 barrier enable$/;"	m	namespace:ArmISA
cp2	src/arch/arm/miscregs.hh	/^        Bitfield<2>  cp2;$/;"	m	namespace:ArmISA
cp2	src/arch/arm/miscregs.hh	/^        Bitfield<5, 4> cp2;$/;"	m	namespace:ArmISA
cp3	src/arch/arm/miscregs.hh	/^        Bitfield<3>  cp3;$/;"	m	namespace:ArmISA
cp3	src/arch/arm/miscregs.hh	/^        Bitfield<7, 6> cp3;$/;"	m	namespace:ArmISA
cp4	src/arch/arm/miscregs.hh	/^        Bitfield<4>  cp4;$/;"	m	namespace:ArmISA
cp4	src/arch/arm/miscregs.hh	/^        Bitfield<9, 8> cp4;$/;"	m	namespace:ArmISA
cp5	src/arch/arm/miscregs.hh	/^        Bitfield<11, 10> cp5;$/;"	m	namespace:ArmISA
cp5	src/arch/arm/miscregs.hh	/^        Bitfield<5>  cp5;$/;"	m	namespace:ArmISA
cp6	src/arch/arm/miscregs.hh	/^        Bitfield<13, 12> cp6;$/;"	m	namespace:ArmISA
cp6	src/arch/arm/miscregs.hh	/^        Bitfield<6>  cp6;$/;"	m	namespace:ArmISA
cp7	src/arch/arm/miscregs.hh	/^        Bitfield<15, 14> cp7;$/;"	m	namespace:ArmISA
cp7	src/arch/arm/miscregs.hh	/^        Bitfield<7>  cp7;$/;"	m	namespace:ArmISA
cp8	src/arch/arm/miscregs.hh	/^        Bitfield<17, 16> cp8;$/;"	m	namespace:ArmISA
cp8	src/arch/arm/miscregs.hh	/^        Bitfield<8>  cp8;$/;"	m	namespace:ArmISA
cp9	src/arch/arm/miscregs.hh	/^        Bitfield<19, 18> cp9;$/;"	m	namespace:ArmISA
cp9	src/arch/arm/miscregs.hh	/^        Bitfield<9>  cp9;$/;"	m	namespace:ArmISA
cpNum	src/arch/arm/types.hh	/^        Bitfield<11, 8>  cpNum;$/;"	m	namespace:ArmISA
cp_seq	src/sim/insttracer.hh	/^    InstSeqNum cp_seq;$/;"	m	class:Trace::InstRecord
cp_seq_valid	src/sim/insttracer.hh	/^    bool cp_seq_valid;$/;"	m	class:Trace::InstRecord
cpa	src/arch/mips/mt_constants.hh	/^    Bitfield<3> cpa;$/;"	m	namespace:MipsISA
cpa	src/base/cp_annotate.cc	/^    CPA *cpa;$/;"	m	class:AnnotateDumpCallback	file:
cpa	src/base/cp_annotate.hh	/^    static CPA *cpa()                                        { return NULL; }$/;"	f	class:CPA
cpa	src/base/cp_annotate.hh	/^    static CPA *cpa() { return _cpa; }$/;"	f	class:CPA
cpa	src/dev/i8254xGBe.hh	/^    CPA *cpa;$/;"	m	class:IGbE
cpd	src/base/loader/coff_sym.h	/^    coff_int    cpd;            \/* count of procedures for this file *\/$/;"	m	struct:ecoff_fdr
cpi	src/cpu/inorder/cpu.hh	/^    Stats::Formula cpi;$/;"	m	class:InOrderCPU
cpi	src/cpu/o3/cpu.hh	/^    Stats::Formula cpi;$/;"	m	class:FullO3CPU
cpl	src/arch/x86/regs/misc.hh	/^        Bitfield<5, 4> cpl;$/;"	m	namespace:X86ISA
cpl	src/dev/arm/pl111.hh	/^        Bitfield<25,16> cpl;$/;"	m	class:Pl111
cpm	src/dev/pcireg.h	/^        Bitfield<18>    cpm;$/;"	m	struct:PXCAP
cprintf	src/base/cprintf.hh	/^cprintf(const char *format, CPRINTF_DECLARATION)$/;"	f
cprintf	src/base/cprintf.hh	/^cprintf(const std::string &format, CPRINTF_DECLARATION)$/;"	f
cpsr	src/arch/arm/table_walker.hh	/^        CPSR cpsr;$/;"	m	class:ArmISA::TableWalker::WalkerState
cpsrWriteByInstr	src/arch/arm/insts/static_inst.hh	/^    cpsrWriteByInstr(CPSR cpsr, uint32_t val, SCR scr, NSACR nsacr,$/;"	f	class:ArmISA::ArmStaticInst
cptDir	src/sim/serialize.hh	/^    const std::string cptDir;$/;"	m	class:Checkpoint
cpu	src/arch/alpha/interrupts.hh	/^    BaseCPU * cpu;$/;"	m	class:AlphaISA::Interrupts
cpu	src/arch/arm/interrupts.hh	/^    BaseCPU * cpu;$/;"	m	class:ArmISA::Interrupts
cpu	src/arch/mips/isa.hh	/^            BaseCPU *cpu;$/;"	m	class:MipsISA::ISA::CP0Event
cpu	src/arch/power/interrupts.hh	/^    BaseCPU * cpu;$/;"	m	class:PowerISA::Interrupts
cpu	src/arch/sparc/interrupts.hh	/^    BaseCPU * cpu;$/;"	m	class:SparcISA::Interrupts
cpu	src/arch/x86/interrupts.hh	/^    BaseCPU *cpu;$/;"	m	class:X86ISA::Interrupts
cpu	src/base/cp_annotate.hh	/^        uint8_t  cpu;$/;"	m	struct:CPA::AnnotateData
cpu	src/cpu/base.hh	/^        BaseCPU *cpu;$/;"	m	class:BaseCPU::ProfileEvent
cpu	src/cpu/base.hh	/^    BaseCPU *cpu;$/;"	m	class:CPUProgressEvent
cpu	src/cpu/base_dyn_inst.hh	/^    ImplCPU *cpu;$/;"	m	class:BaseDynInst
cpu	src/cpu/inorder/cpu.hh	/^        InOrderCPU *cpu;$/;"	m	class:InOrderCPU::CPUEvent
cpu	src/cpu/inorder/cpu.hh	/^        InOrderCPU *cpu;$/;"	m	class:InOrderCPU::TickEvent
cpu	src/cpu/inorder/inorder_dyn_inst.hh	/^    InOrderCPU *cpu;$/;"	m	class:InOrderDynInst
cpu	src/cpu/inorder/pipeline_stage.hh	/^    InOrderCPU *cpu;$/;"	m	class:PipelineStage
cpu	src/cpu/inorder/reg_dep_map.hh	/^    InOrderCPU *cpu;$/;"	m	class:RegDepMap
cpu	src/cpu/inorder/resource.hh	/^    InOrderCPU *cpu;$/;"	m	class:Resource
cpu	src/cpu/inorder/resource_pool.hh	/^    InOrderCPU *cpu;$/;"	m	class:ResourcePool
cpu	src/cpu/inorder/thread_context.hh	/^    InOrderCPU *cpu;$/;"	m	class:InOrderThreadContext
cpu	src/cpu/inorder/thread_state.hh	/^    InOrderCPU *cpu;$/;"	m	class:InOrderThreadState
cpu	src/cpu/kvm/base.hh	/^        BaseKvmCPU &cpu;$/;"	m	struct:BaseKvmCPU::TickEvent
cpu	src/cpu/o3/commit.hh	/^    O3CPU *cpu;$/;"	m	class:DefaultCommit
cpu	src/cpu/o3/cpu.hh	/^        FullO3CPU<Impl> *cpu;$/;"	m	class:FullO3CPU::ActivateThreadEvent
cpu	src/cpu/o3/cpu.hh	/^        FullO3CPU<Impl> *cpu;$/;"	m	class:FullO3CPU::DeallocateContextEvent
cpu	src/cpu/o3/cpu.hh	/^        FullO3CPU<Impl> *cpu;$/;"	m	class:FullO3CPU::TickEvent
cpu	src/cpu/o3/decode.hh	/^    O3CPU *cpu;$/;"	m	class:DefaultDecode
cpu	src/cpu/o3/fetch.hh	/^    O3CPU *cpu;$/;"	m	class:DefaultFetch
cpu	src/cpu/o3/iew.hh	/^    O3CPU *cpu;$/;"	m	class:DefaultIEW
cpu	src/cpu/o3/inst_queue.hh	/^    O3CPU *cpu;$/;"	m	class:InstructionQueue
cpu	src/cpu/o3/lsq.hh	/^    O3CPU *cpu;$/;"	m	class:LSQ
cpu	src/cpu/o3/lsq_unit.hh	/^    O3CPU *cpu;$/;"	m	class:LSQUnit
cpu	src/cpu/o3/rename.hh	/^    O3CPU *cpu;$/;"	m	class:DefaultRename
cpu	src/cpu/o3/rob.hh	/^    O3CPU *cpu;$/;"	m	class:ROB
cpu	src/cpu/o3/thread_context.hh	/^    O3CPU *cpu;$/;"	m	class:O3ThreadContext
cpu	src/cpu/o3/thread_state.hh	/^    O3CPU *cpu;$/;"	m	struct:O3ThreadState
cpu	src/cpu/ozone/back_end.hh	/^    FullCPU *cpu;$/;"	m	class:BackEnd
cpu	src/cpu/ozone/cpu.hh	/^        OzoneCPU *cpu;$/;"	m	struct:OzoneCPU::TickEvent
cpu	src/cpu/ozone/cpu.hh	/^        OzoneCPU<Impl> *cpu;$/;"	m	class:OzoneCPU::OzoneTC
cpu	src/cpu/ozone/front_end.hh	/^    CPUType *cpu;$/;"	m	class:FrontEnd
cpu	src/cpu/ozone/inorder_back_end.hh	/^    FullCPU *cpu;$/;"	m	class:InorderBackEnd
cpu	src/cpu/ozone/inst_queue.hh	/^    FullCPU *cpu;$/;"	m	class:InstQueue
cpu	src/cpu/ozone/lsq_unit.hh	/^    FullCPU *cpu;$/;"	m	class:OzoneLSQ
cpu	src/cpu/ozone/lw_back_end.hh	/^    OzoneCPU *cpu;$/;"	m	class:LWBackEnd
cpu	src/cpu/ozone/lw_lsq.hh	/^    OzoneCPU *cpu;$/;"	m	class:OzoneLWLSQ
cpu	src/cpu/ozone/thread_state.hh	/^    typename Impl::CPUType *cpu;$/;"	m	struct:OzoneThreadState
cpu	src/cpu/simple/atomic.hh	/^        AtomicSimpleCPU *cpu;$/;"	m	struct:AtomicSimpleCPU::TickEvent
cpu	src/cpu/simple/atomic.hh	/^        BaseSimpleCPU *cpu;$/;"	m	class:AtomicSimpleCPU::AtomicCPUDPort
cpu	src/cpu/simple/timing.hh	/^            TimingSimpleCPU *cpu;$/;"	m	struct:TimingSimpleCPU::TimingCPUPort::TickEvent
cpu	src/cpu/simple/timing.hh	/^        TimingSimpleCPU *cpu;$/;"	m	class:TimingSimpleCPU::FetchTranslation
cpu	src/cpu/simple/timing.hh	/^        TimingSimpleCPU *cpu;$/;"	m	struct:TimingSimpleCPU::IprEvent
cpu	src/cpu/simple/timing.hh	/^        TimingSimpleCPU* cpu;$/;"	m	class:TimingSimpleCPU::TimingCPUPort
cpu	src/cpu/testers/memtest/memtest.hh	/^        MemTest *cpu;$/;"	m	class:MemTest::TickEvent
cpu	src/cpu/testers/networktest/networktest.hh	/^        NetworkTest *cpu;$/;"	m	class:NetworkTest::TickEvent
cpu	src/dev/alpha/AlphaBackdoor.py	/^    cpu = Param.BaseCPU(Parent.cpu[0], "Processor")$/;"	v	class:AlphaBackdoor
cpu	src/dev/alpha/backdoor.hh	/^    BaseCPU *cpu;$/;"	m	class:AlphaBackdoor
cpu	src/dev/arm/gic_pl390.hh	/^        uint32_t cpu;$/;"	m	class:Pl390::PostIntEvent
cpu	src/dev/arm/vgic.hh	/^        uint32_t cpu;$/;"	m	class:VGic::PostVIntEvent
cpu	src/dev/sparc/iob.hh	/^        int cpu;$/;"	m	struct:Iob::IntMan
cpuAddr	src/dev/arm/gic_pl390.hh	/^    Addr cpuAddr;$/;"	m	class:Pl390
cpuBpr	src/dev/arm/gic_pl390.hh	/^    uint8_t cpuBpr[CPU_MAX];$/;"	m	class:Pl390
cpuClearInt	src/dev/i8254xGBe.cc	/^IGbE::cpuClearInt()$/;"	f	class:IGbE
cpuClock	src/dev/alpha/access.h	/^    uint64_t    cpuClock;               \/\/ 10: MHz$/;"	m	struct:AlphaAccess
cpuClock	src/dev/mips/access.h	/^    uint64_t    cpuClock;               \/\/ 38: MHz$/;"	m	struct:MipsAccess
cpuDataPort	src/cpu/testers/rubytest/RubyTester.py	/^    cpuDataPort = VectorMasterPort("the cpu data cache ports")$/;"	v	class:RubyTester
cpuEnabled	src/dev/arm/gic_pl390.hh	/^    bool cpuEnabled[CPU_MAX];$/;"	m	class:Pl390
cpuEventList	src/cpu/cpuevent.cc	/^CpuEvent::CpuEventList CpuEvent::cpuEventList;$/;"	m	class:CpuEvent	file:
cpuEventList	src/cpu/cpuevent.hh	/^    static CpuEventList cpuEventList;$/;"	m	class:CpuEvent
cpuEventNum	src/cpu/inorder/cpu.hh	/^    InstSeqNum cpuEventNum;$/;"	m	class:InOrderCPU
cpuEventRemoveList	src/cpu/inorder/cpu.hh	/^    std::queue<Event*> cpuEventRemoveList;$/;"	m	class:InOrderCPU
cpuEventType	src/cpu/inorder/cpu.hh	/^        CPUEventType cpuEventType;$/;"	m	class:InOrderCPU::CPUEvent
cpuFlags	src/arch/x86/bios/intelmp.hh	/^    uint8_t cpuFlags;$/;"	m	class:X86ISA::IntelMP::Processor
cpuHighestInt	src/dev/arm/gic_pl390.hh	/^    uint32_t cpuHighestInt[CPU_MAX];$/;"	m	class:Pl390
cpuId	src/cpu/base.hh	/^    int cpuId() const { return _cpuId; }$/;"	f	class:BaseCPU
cpuId	src/cpu/base_dyn_inst.hh	/^    int cpuId() const { return cpu->cpuId(); }$/;"	f	class:BaseDynInst
cpuId	src/cpu/checker/thread_context.hh	/^    int cpuId() const { return actualTC->cpuId(); }$/;"	f	class:CheckerThreadContext
cpuId	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::cpuId() const$/;"	f	class:InOrderDynInst
cpuId	src/cpu/inorder/thread_context.hh	/^    int cpuId() const { return cpu->cpuId(); }$/;"	f	class:InOrderThreadContext
cpuId	src/cpu/o3/thread_context.hh	/^    virtual int cpuId() const { return cpu->cpuId(); }$/;"	f	class:O3ThreadContext
cpuId	src/cpu/thread_context.hh	/^    int cpuId() const { return actualTC->cpuId(); }$/;"	f	class:ProxyThreadContext
cpuId	src/cpu/thread_state.hh	/^    int cpuId() const { return baseCpu->cpuId(); }$/;"	f	struct:ThreadState
cpuInstPort	src/cpu/testers/rubytest/RubyTester.py	/^    cpuInstPort = VectorMasterPort("the cpu inst cache ports")$/;"	v	class:RubyTester
cpuInterrupt	src/dev/ns_gige.cc	/^NSGigE::cpuInterrupt()$/;"	f	class:NSGigE
cpuInterrupt	src/dev/sinic.cc	/^Base::cpuInterrupt()$/;"	f	class:Sinic::Base
cpuIntrAck	src/dev/ns_gige.hh	/^    void cpuIntrAck() { cpuIntrClear(); }$/;"	f	class:NSGigE
cpuIntrAck	src/dev/sinic.hh	/^    void cpuIntrAck() { cpuIntrClear(); }$/;"	f	class:Sinic::Base
cpuIntrClear	src/dev/ns_gige.cc	/^NSGigE::cpuIntrClear()$/;"	f	class:NSGigE
cpuIntrClear	src/dev/sinic.cc	/^Base::cpuIntrClear()$/;"	f	class:Sinic::Base
cpuIntrEnable	src/dev/sinic.hh	/^    bool cpuIntrEnable;$/;"	m	class:Sinic::Base
cpuIntrPending	src/dev/ns_gige.cc	/^NSGigE::cpuIntrPending() const$/;"	f	class:NSGigE
cpuIntrPending	src/dev/sinic.cc	/^Base::cpuIntrPending() const$/;"	f	class:Sinic::Base
cpuIntrPost	src/dev/ns_gige.cc	/^NSGigE::cpuIntrPost(Tick when)$/;"	f	class:NSGigE
cpuIntrPost	src/dev/sinic.cc	/^Base::cpuIntrPost(Tick when)$/;"	f	class:Sinic::Base
cpuList	src/cpu/base.hh	/^    static std::vector<BaseCPU *> cpuList;   \/\/!< Static global cpu list$/;"	m	class:BaseCPU
cpuNum	src/arch/mips/pra_constants.hh	/^    Bitfield<9,  9>  cpuNum;$/;"	m	namespace:MipsISA
cpuNum	src/dev/arm/timer_cpulocal.hh	/^        uint32_t cpuNum;$/;"	m	class:CpuLocalTimer::Timer
cpuPendingIntr	src/dev/ns_gige.hh	/^    bool cpuPendingIntr;$/;"	m	class:NSGigE
cpuPendingIntr	src/dev/sinic.hh	/^    bool cpuPendingIntr;$/;"	m	class:Sinic::Base
cpuPioDelay	src/dev/arm/gic_pl390.hh	/^    Tick cpuPioDelay;$/;"	m	class:Pl390
cpuPort	src/cpu/testers/directedtest/RubyDirectedTester.py	/^    cpuPort = VectorMasterPort("the cpu ports")$/;"	v	class:RubyDirectedTester
cpuPostInt	src/dev/i8254xGBe.cc	/^IGbE::cpuPostInt()$/;"	f	class:IGbE
cpuPpiActive	src/dev/arm/gic_pl390.hh	/^    uint32_t cpuPpiActive[CPU_MAX];$/;"	m	class:Pl390
cpuPpiPending	src/dev/arm/gic_pl390.hh	/^    uint32_t cpuPpiPending[CPU_MAX];$/;"	m	class:Pl390
cpuPriority	src/dev/arm/gic_pl390.hh	/^    uint8_t cpuPriority[CPU_MAX];$/;"	m	class:Pl390
cpuSgiActive	src/dev/arm/gic_pl390.hh	/^    uint64_t cpuSgiActive[SGI_MAX];$/;"	m	class:Pl390
cpuSgiPending	src/dev/arm/gic_pl390.hh	/^    uint64_t cpuSgiPending[SGI_MAX];$/;"	m	class:Pl390
cpuSidePort	src/mem/cache/base.hh	/^    CacheSlavePort *cpuSidePort;$/;"	m	class:BaseCache
cpuSignature	src/arch/x86/bios/intelmp.hh	/^    uint32_t cpuSignature;$/;"	m	class:X86ISA::IntelMP::Processor
cpuStack	src/dev/alpha/access.h	/^    uint64_t    cpuStack[64];           \/\/ 70:$/;"	m	struct:AlphaAccess
cpuStack	src/dev/mips/access.h	/^    uint32_t    cpuStack[64];           \/\/ 70:$/;"	m	struct:MipsAccess
cpuStartup	src/cpu/kvm/vm.cc	/^KvmVM::cpuStartup()$/;"	f	class:KvmVM
cpuTarget	src/dev/arm/gic_pl390.hh	/^    uint8_t cpuTarget[INT_LINES_MAX];$/;"	m	class:Pl390
cpuWaitList	src/cpu/o3/cpu.hh	/^    std::list<int> cpuWaitList;$/;"	m	class:FullO3CPU
cpu_addr	src/dev/arm/Gic.py	/^    cpu_addr = Param.Addr(0x1f000100, "Address for cpu")$/;"	v	class:Pl390
cpu_binding	src/kern/tru64/tru64.hh	/^        uint64_t     cpu_binding;       \/\/!< cpu_binding$/;"	m	struct:Tru64::cpu_info
cpu_ex_binding	src/kern/tru64/tru64.hh	/^        uint64_t     cpu_ex_binding;    \/\/!< cpu_ex_binding$/;"	m	struct:Tru64::cpu_info
cpu_id	src/cpu/BaseCPU.py	/^    cpu_id = Param.Int(-1, "CPU identifier")$/;"	v
cpu_id	src/cpu/inorder/cpu.hh	/^    int cpu_id;$/;"	m	class:InOrderCPU
cpu_id	src/dev/arm/gic_pl390.hh	/^        Bitfield<12,10> cpu_id;$/;"	m	class:Pl390
cpu_info	src/kern/tru64/tru64.hh	/^    struct cpu_info {$/;"	s	class:Tru64
cpu_list	src/dev/arm/gic_pl390.hh	/^        Bitfield<23,16> cpu_list;$/;"	m	class:Pl390
cpu_mode	src/arch/alpha/kernel_stats.hh	/^enum cpu_mode { kernel, user, idle, cpu_mode_num };$/;"	g	namespace:AlphaISA::Kernel
cpu_mode	src/arch/arm/kernel_stats.hh	/^enum cpu_mode { hypervisor, kernel, user, idle, cpu_mode_num };$/;"	g	namespace:ArmISA::Kernel
cpu_mode	src/arch/mips/kernel_stats.hh	/^enum cpu_mode { kernel, user, idle, cpu_mode_num };$/;"	g	namespace:MipsISA::Kernel
cpu_mode	src/arch/power/kernel_stats.hh	/^enum cpu_mode { hypervisor, kernel, user, idle, cpu_mode_num };$/;"	g	namespace:PowerISA::Kernel
cpu_mode	src/arch/sparc/kernel_stats.hh	/^enum cpu_mode { hypervisor, kernel, user, idle, cpu_mode_num };$/;"	g	namespace:SparcISA::Kernel
cpu_mode	src/arch/x86/kernel_stats.hh	/^enum cpu_mode {$/;"	g	namespace:X86ISA::Kernel
cpu_mode_num	src/arch/alpha/kernel_stats.hh	/^enum cpu_mode { kernel, user, idle, cpu_mode_num };$/;"	e	enum:AlphaISA::Kernel::cpu_mode
cpu_mode_num	src/arch/arm/kernel_stats.hh	/^enum cpu_mode { hypervisor, kernel, user, idle, cpu_mode_num };$/;"	e	enum:ArmISA::Kernel::cpu_mode
cpu_mode_num	src/arch/mips/kernel_stats.hh	/^enum cpu_mode { kernel, user, idle, cpu_mode_num };$/;"	e	enum:MipsISA::Kernel::cpu_mode
cpu_mode_num	src/arch/power/kernel_stats.hh	/^enum cpu_mode { hypervisor, kernel, user, idle, cpu_mode_num };$/;"	e	enum:PowerISA::Kernel::cpu_mode
cpu_mode_num	src/arch/sparc/kernel_stats.hh	/^enum cpu_mode { hypervisor, kernel, user, idle, cpu_mode_num };$/;"	e	enum:SparcISA::Kernel::cpu_mode
cpu_mode_num	src/arch/x86/kernel_stats.hh	/^    cpu_mode_num$/;"	e	enum:X86ISA::Kernel::cpu_mode
cpu_models	src/arch/isa_parser.py	/^    cpu_models = [CpuModel.dict[cpu] for cpu in sys.argv[4:]]$/;"	v
cpu_mondo_head	src/arch/sparc/isa.hh	/^    uint64_t cpu_mondo_head;$/;"	m	class:SparcISA::ISA
cpu_mondo_tail	src/arch/sparc/isa.hh	/^    uint64_t cpu_mondo_tail;$/;"	m	class:SparcISA::ISA
cpu_params	src/cpu/inorder/cpu.hh	/^    Params *cpu_params;$/;"	m	class:InOrderCPU
cpu_pio_delay	src/dev/arm/Gic.py	/^    cpu_pio_delay = Param.Latency('10ns', "Delay for PIO r\/w to cpu interface")$/;"	v	class:Pl390
cpu_side	src/mem/cache/BaseCache.py	/^    cpu_side = SlavePort("Port on side closer to CPU")$/;"	v	class:BaseCache
cpu_type	src/kern/tru64/tru64.hh	/^        uint32_t     cpu_type;          \/\/!< cpu_type$/;"	m	struct:Tru64::cpu_info
cpuid	src/arch/mips/dt_constants.hh	/^    Bitfield<28, 21> cpuid;$/;"	m	namespace:MipsISA
cpuidv	src/arch/mips/dt_constants.hh	/^    Bitfield<29>     cpuidv;$/;"	m	namespace:MipsISA
cpus_in_box	src/kern/tru64/tru64.hh	/^        uint32_t     cpus_in_box;       \/\/!< cpus_in_box$/;"	m	struct:Tru64::cpu_info
cpus_present	src/kern/tru64/tru64.hh	/^        uint64_t     cpus_present;      \/\/!< cpus_present$/;"	m	struct:Tru64::cpu_info
cpus_running	src/kern/tru64/tru64.hh	/^        uint64_t     cpus_running;      \/\/!< cpus_running$/;"	m	struct:Tru64::cpu_info
cr	src/dev/copy_engine.hh	/^        CopyEngineReg::ChanRegs  cr;$/;"	m	class:CopyEngine::CopyEngineChannel
cr1	src/arch/power/miscregs.hh	/^    Bitfield<27,24> cr1;$/;"	m	namespace:PowerISA
creat	src/kern/linux/linux_syscalls.hh	/^    creat = 25,$/;"	e	enum:SystemCalls::__anon87
create	src/arch/alpha/freebsd/system.cc	/^FreebsdAlphaSystemParams::create()$/;"	f	class:FreebsdAlphaSystemParams
create	src/arch/alpha/interrupts.cc	/^AlphaInterruptsParams::create()$/;"	f	class:AlphaInterruptsParams
create	src/arch/alpha/isa.cc	/^AlphaISAParams::create()$/;"	f	class:AlphaISAParams
create	src/arch/alpha/linux/system.cc	/^LinuxAlphaSystemParams::create()$/;"	f	class:LinuxAlphaSystemParams
create	src/arch/alpha/system.cc	/^AlphaSystemParams::create()$/;"	f	class:AlphaSystemParams
create	src/arch/alpha/tlb.cc	/^AlphaTLBParams::create()$/;"	f	class:AlphaTLBParams
create	src/arch/alpha/tru64/system.cc	/^Tru64AlphaSystemParams::create()$/;"	f	class:Tru64AlphaSystemParams
create	src/arch/arm/interrupts.cc	/^ArmInterruptsParams::create()$/;"	f	class:ArmInterruptsParams
create	src/arch/arm/isa.cc	/^ArmISAParams::create()$/;"	f	class:ArmISAParams
create	src/arch/arm/linux/system.cc	/^LinuxArmSystemParams::create()$/;"	f	class:LinuxArmSystemParams
create	src/arch/arm/nativetrace.cc	/^ArmNativeTraceParams::create()$/;"	f	class:ArmNativeTraceParams
create	src/arch/arm/stage2_mmu.cc	/^ArmStage2MMUParams::create()$/;"	f	class:ArmStage2MMUParams
create	src/arch/arm/system.cc	/^ArmSystemParams::create()$/;"	f	class:ArmSystemParams
create	src/arch/arm/table_walker.cc	/^ArmTableWalkerParams::create()$/;"	f	class:ArmTableWalkerParams
create	src/arch/arm/tlb.cc	/^ArmTLBParams::create()$/;"	f	class:ArmTLBParams
create	src/arch/mips/bare_iron/system.cc	/^BareIronMipsSystemParams::create()$/;"	f	class:BareIronMipsSystemParams
create	src/arch/mips/interrupts.cc	/^MipsInterruptsParams::create()$/;"	f	class:MipsInterruptsParams
create	src/arch/mips/isa.cc	/^MipsISAParams::create()$/;"	f	class:MipsISAParams
create	src/arch/mips/linux/system.cc	/^LinuxMipsSystemParams::create()$/;"	f	class:LinuxMipsSystemParams
create	src/arch/mips/system.cc	/^MipsSystemParams::create()$/;"	f	class:MipsSystemParams
create	src/arch/mips/tlb.cc	/^MipsTLBParams::create()$/;"	f	class:MipsTLBParams
create	src/arch/power/interrupts.cc	/^PowerInterruptsParams::create()$/;"	f	class:PowerInterruptsParams
create	src/arch/power/isa.cc	/^PowerISAParams::create()$/;"	f	class:PowerISAParams
create	src/arch/power/tlb.cc	/^PowerTLBParams::create()$/;"	f	class:PowerTLBParams
create	src/arch/sparc/interrupts.cc	/^SparcInterruptsParams::create()$/;"	f	class:SparcInterruptsParams
create	src/arch/sparc/isa.cc	/^SparcISAParams::create()$/;"	f	class:SparcISAParams
create	src/arch/sparc/nativetrace.cc	/^SparcNativeTraceParams::create()$/;"	f	class:SparcNativeTraceParams
create	src/arch/sparc/system.cc	/^SparcSystemParams::create()$/;"	f	class:SparcSystemParams
create	src/arch/sparc/tlb.cc	/^SparcTLBParams::create()$/;"	f	class:SparcTLBParams
create	src/arch/x86/bios/acpi.cc	/^X86ACPIRSDPParams::create()$/;"	f	class:X86ACPIRSDPParams
create	src/arch/x86/bios/acpi.cc	/^X86ACPIRSDTParams::create()$/;"	f	class:X86ACPIRSDTParams
create	src/arch/x86/bios/acpi.cc	/^X86ACPIXSDTParams::create()$/;"	f	class:X86ACPIXSDTParams
create	src/arch/x86/bios/e820.cc	/^X86E820EntryParams::create()$/;"	f	class:X86E820EntryParams
create	src/arch/x86/bios/e820.cc	/^X86E820TableParams::create()$/;"	f	class:X86E820TableParams
create	src/arch/x86/bios/intelmp.cc	/^X86IntelMPAddrSpaceMappingParams::create()$/;"	f	class:X86IntelMPAddrSpaceMappingParams
create	src/arch/x86/bios/intelmp.cc	/^X86IntelMPBusHierarchyParams::create()$/;"	f	class:X86IntelMPBusHierarchyParams
create	src/arch/x86/bios/intelmp.cc	/^X86IntelMPBusParams::create()$/;"	f	class:X86IntelMPBusParams
create	src/arch/x86/bios/intelmp.cc	/^X86IntelMPCompatAddrSpaceModParams::create()$/;"	f	class:X86IntelMPCompatAddrSpaceModParams
create	src/arch/x86/bios/intelmp.cc	/^X86IntelMPConfigTableParams::create()$/;"	f	class:X86IntelMPConfigTableParams
create	src/arch/x86/bios/intelmp.cc	/^X86IntelMPFloatingPointerParams::create()$/;"	f	class:X86IntelMPFloatingPointerParams
create	src/arch/x86/bios/intelmp.cc	/^X86IntelMPIOAPICParams::create()$/;"	f	class:X86IntelMPIOAPICParams
create	src/arch/x86/bios/intelmp.cc	/^X86IntelMPIOIntAssignmentParams::create()$/;"	f	class:X86IntelMPIOIntAssignmentParams
create	src/arch/x86/bios/intelmp.cc	/^X86IntelMPLocalIntAssignmentParams::create()$/;"	f	class:X86IntelMPLocalIntAssignmentParams
create	src/arch/x86/bios/intelmp.cc	/^X86IntelMPProcessorParams::create()$/;"	f	class:X86IntelMPProcessorParams
create	src/arch/x86/bios/smbios.cc	/^X86SMBiosBiosInformationParams::create()$/;"	f	class:X86SMBiosBiosInformationParams
create	src/arch/x86/bios/smbios.cc	/^X86SMBiosSMBiosTableParams::create()$/;"	f	class:X86SMBiosSMBiosTableParams
create	src/arch/x86/interrupts.cc	/^X86LocalApicParams::create()$/;"	f	class:X86LocalApicParams
create	src/arch/x86/isa.cc	/^X86ISAParams::create()$/;"	f	class:X86ISAParams
create	src/arch/x86/linux/system.cc	/^LinuxX86SystemParams::create()$/;"	f	class:LinuxX86SystemParams
create	src/arch/x86/nativetrace.cc	/^X86NativeTraceParams::create()$/;"	f	class:X86NativeTraceParams
create	src/arch/x86/pagetable_walker.cc	/^X86PagetableWalkerParams::create()$/;"	f	class:X86PagetableWalkerParams
create	src/arch/x86/system.cc	/^X86SystemParams::create()$/;"	f	class:X86SystemParams
create	src/arch/x86/tlb.cc	/^X86TLBParams::create()$/;"	f	class:X86TLBParams
create	src/base/cp_annotate.cc	/^CPAParams::create()$/;"	f	class:CPAParams
create	src/base/output.cc	/^OutputDirectory::create(const string &name, bool binary)$/;"	f	class:OutputDirectory
create	src/base/vnc/vncinput.cc	/^VncInputParams::create()$/;"	f	class:VncInputParams
create	src/base/vnc/vncserver.cc	/^VncServerParams::create()$/;"	f	class:VncServerParams
create	src/cpu/dummy_checker.cc	/^DummyCheckerParams::create()$/;"	f	class:DummyCheckerParams
create	src/cpu/exetrace.cc	/^ExeTracerParams::create()$/;"	f	class:ExeTracerParams
create	src/cpu/func_unit.cc	/^FUDescParams::create()$/;"	f	class:FUDescParams
create	src/cpu/func_unit.cc	/^OpDescParams::create()$/;"	f	class:OpDescParams
create	src/cpu/inorder/inorder_cpu_builder.cc	/^InOrderCPUParams::create()$/;"	f	class:InOrderCPUParams
create	src/cpu/inorder/inorder_trace.cc	/^InOrderTraceParams::create()$/;"	f	class:InOrderTraceParams
create	src/cpu/inteltrace.cc	/^IntelTraceParams::create()$/;"	f	class:IntelTraceParams
create	src/cpu/intr_control.cc	/^IntrControlParams::create()$/;"	f	class:IntrControlParams
create	src/cpu/intr_control_noisa.cc	/^IntrControlParams::create()$/;"	f	class:IntrControlParams
create	src/cpu/kvm/arm_cpu.cc	/^ArmKvmCPUParams::create()$/;"	f	class:ArmKvmCPUParams
create	src/cpu/kvm/vm.cc	/^Kvm::create()$/;"	f	class:Kvm
create	src/cpu/kvm/vm.cc	/^KvmVMParams::create()$/;"	f	class:KvmVMParams
create	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPUParams::create()$/;"	f	class:X86KvmCPUParams
create	src/cpu/legiontrace.cc	/^LegionTraceParams::create()$/;"	f	class:LegionTraceParams
create	src/cpu/o3/checker.cc	/^O3CheckerParams::create()$/;"	f	class:O3CheckerParams
create	src/cpu/o3/deriv.cc	/^DerivO3CPUParams::create()$/;"	f	class:DerivO3CPUParams
create	src/cpu/o3/fu_pool.cc	/^FUPoolParams::create()$/;"	f	class:FUPoolParams
create	src/cpu/o3/probe/simple_trace.cc	/^SimpleTraceParams::create()$/;"	f	class:SimpleTraceParams
create	src/cpu/ozone/checker_builder.cc	/^OzoneCheckerParams::create()$/;"	f	class:OzoneCheckerParams
create	src/cpu/ozone/cpu_builder.cc	/^DerivOzoneCPUParams::create()$/;"	f	class:DerivOzoneCPUParams
create	src/cpu/ozone/simple_cpu_builder.cc	/^SimpleOzoneCPUParams::create()$/;"	f	class:SimpleOzoneCPUParams
create	src/cpu/pred/bpred_unit.cc	/^BranchPredictorParams::create()$/;"	f	class:BranchPredictorParams
create	src/cpu/simple/atomic.cc	/^AtomicSimpleCPUParams::create()$/;"	f	class:AtomicSimpleCPUParams
create	src/cpu/simple/timing.cc	/^TimingSimpleCPUParams::create()$/;"	f	class:TimingSimpleCPUParams
create	src/cpu/testers/directedtest/InvalidateGenerator.cc	/^InvalidateGeneratorParams::create()$/;"	f	class:InvalidateGeneratorParams
create	src/cpu/testers/directedtest/RubyDirectedTester.cc	/^RubyDirectedTesterParams::create()$/;"	f	class:RubyDirectedTesterParams
create	src/cpu/testers/directedtest/SeriesRequestGenerator.cc	/^SeriesRequestGeneratorParams::create()$/;"	f	class:SeriesRequestGeneratorParams
create	src/cpu/testers/memtest/memtest.cc	/^MemTestParams::create()$/;"	f	class:MemTestParams
create	src/cpu/testers/networktest/networktest.cc	/^NetworkTestParams::create()$/;"	f	class:NetworkTestParams
create	src/cpu/testers/rubytest/RubyTester.cc	/^RubyTesterParams::create()$/;"	f	class:RubyTesterParams
create	src/cpu/testers/traffic_gen/traffic_gen.cc	/^TrafficGenParams::create()$/;"	f	class:TrafficGenParams
create	src/dev/alpha/backdoor.cc	/^AlphaBackdoorParams::create()$/;"	f	class:AlphaBackdoorParams
create	src/dev/alpha/tsunami.cc	/^TsunamiParams::create()$/;"	f	class:TsunamiParams
create	src/dev/alpha/tsunami_cchip.cc	/^TsunamiCChipParams::create()$/;"	f	class:TsunamiCChipParams
create	src/dev/alpha/tsunami_io.cc	/^TsunamiIOParams::create()$/;"	f	class:TsunamiIOParams
create	src/dev/alpha/tsunami_pchip.cc	/^TsunamiPChipParams::create()$/;"	f	class:TsunamiPChipParams
create	src/dev/arm/a9scu.cc	/^A9SCUParams::create()$/;"	f	class:A9SCUParams
create	src/dev/arm/amba_fake.cc	/^AmbaFakeParams::create()$/;"	f	class:AmbaFakeParams
create	src/dev/arm/generic_timer.cc	/^GenericTimerParams::create()$/;"	f	class:GenericTimerParams
create	src/dev/arm/gic_pl390.cc	/^Pl390Params::create()$/;"	f	class:Pl390Params
create	src/dev/arm/hdlcd.cc	/^HDLcdParams::create()$/;"	f	class:HDLcdParams
create	src/dev/arm/kmi.cc	/^Pl050Params::create()$/;"	f	class:Pl050Params
create	src/dev/arm/pl011.cc	/^Pl011Params::create()$/;"	f	class:Pl011Params
create	src/dev/arm/pl111.cc	/^Pl111Params::create()$/;"	f	class:Pl111Params
create	src/dev/arm/realview.cc	/^RealViewParams::create()$/;"	f	class:RealViewParams
create	src/dev/arm/rtc_pl031.cc	/^PL031Params::create()$/;"	f	class:PL031Params
create	src/dev/arm/rv_ctrl.cc	/^RealViewCtrlParams::create()$/;"	f	class:RealViewCtrlParams
create	src/dev/arm/timer_cpulocal.cc	/^CpuLocalTimerParams::create()$/;"	f	class:CpuLocalTimerParams
create	src/dev/arm/timer_sp804.cc	/^Sp804Params::create()$/;"	f	class:Sp804Params
create	src/dev/arm/vgic.cc	/^VGicParams::create()$/;"	f	class:VGicParams
create	src/dev/baddev.cc	/^BadDeviceParams::create()$/;"	f	class:BadDeviceParams
create	src/dev/copy_engine.cc	/^CopyEngineParams::create()$/;"	f	class:CopyEngineParams
create	src/dev/disk_image.cc	/^CowDiskImageParams::create()$/;"	f	class:CowDiskImageParams
create	src/dev/disk_image.cc	/^RawDiskImageParams::create()$/;"	f	class:RawDiskImageParams
create	src/dev/etherbus.cc	/^EtherBusParams::create()$/;"	f	class:EtherBusParams
create	src/dev/etherdump.cc	/^EtherDumpParams::create()$/;"	f	class:EtherDumpParams
create	src/dev/etherlink.cc	/^EtherLinkParams::create()$/;"	f	class:EtherLinkParams
create	src/dev/ethertap.cc	/^EtherTapParams::create()$/;"	f	class:EtherTapParams
create	src/dev/i8254xGBe.cc	/^IGbEParams::create()$/;"	f	class:IGbEParams
create	src/dev/ide_ctrl.cc	/^IdeControllerParams::create()$/;"	f	class:IdeControllerParams
create	src/dev/ide_disk.cc	/^IdeDiskParams::create()$/;"	f	class:IdeDiskParams
create	src/dev/isa_fake.cc	/^IsaFakeParams::create()$/;"	f	class:IsaFakeParams
create	src/dev/mips/malta.cc	/^MaltaParams::create()$/;"	f	class:MaltaParams
create	src/dev/mips/malta_cchip.cc	/^MaltaCChipParams::create()$/;"	f	class:MaltaCChipParams
create	src/dev/mips/malta_io.cc	/^MaltaIOParams::create()$/;"	f	class:MaltaIOParams
create	src/dev/mips/malta_pchip.cc	/^MaltaPChipParams::create()$/;"	f	class:MaltaPChipParams
create	src/dev/ns_gige.cc	/^NSGigEParams::create()$/;"	f	class:NSGigEParams
create	src/dev/pciconfigall.cc	/^PciConfigAllParams::create()$/;"	f	class:PciConfigAllParams
create	src/dev/simple_disk.cc	/^SimpleDiskParams::create()$/;"	f	class:SimpleDiskParams
create	src/dev/sinic.cc	/^SinicParams::create()$/;"	f	class:SinicParams
create	src/dev/sparc/dtod.cc	/^DumbTODParams::create()$/;"	f	class:DumbTODParams
create	src/dev/sparc/iob.cc	/^IobParams::create()$/;"	f	class:IobParams
create	src/dev/sparc/mm_disk.cc	/^MmDiskParams::create()$/;"	f	class:MmDiskParams
create	src/dev/sparc/t1000.cc	/^T1000Params::create()$/;"	f	class:T1000Params
create	src/dev/terminal.cc	/^TerminalParams::create()$/;"	f	class:TerminalParams
create	src/dev/uart8250.cc	/^Uart8250Params::create()$/;"	f	class:Uart8250Params
create	src/dev/x86/cmos.cc	/^CmosParams::create()$/;"	f	class:CmosParams
create	src/dev/x86/i8042.cc	/^I8042Params::create()$/;"	f	class:I8042Params
create	src/dev/x86/i82094aa.cc	/^I82094AAParams::create()$/;"	f	class:I82094AAParams
create	src/dev/x86/i8237.cc	/^I8237Params::create()$/;"	f	class:I8237Params
create	src/dev/x86/i8254.cc	/^I8254Params::create()$/;"	f	class:I8254Params
create	src/dev/x86/i8259.cc	/^I8259Params::create()$/;"	f	class:I8259Params
create	src/dev/x86/intdev.cc	/^X86IntLineParams::create()$/;"	f	class:X86IntLineParams
create	src/dev/x86/intdev.cc	/^X86IntSinkPinParams::create()$/;"	f	class:X86IntSinkPinParams
create	src/dev/x86/intdev.cc	/^X86IntSourcePinParams::create()$/;"	f	class:X86IntSourcePinParams
create	src/dev/x86/pc.cc	/^PcParams::create()$/;"	f	class:PcParams
create	src/dev/x86/south_bridge.cc	/^SouthBridgeParams::create()$/;"	f	class:SouthBridgeParams
create	src/dev/x86/speaker.cc	/^PcSpeakerParams::create()$/;"	f	class:PcSpeakerParams
create	src/mem/addr_mapper.cc	/^RangeAddrMapperParams::create()$/;"	f	class:RangeAddrMapperParams
create	src/mem/bridge.cc	/^BridgeParams::create()$/;"	f	class:BridgeParams
create	src/mem/cache/base.cc	/^BaseCacheParams::create()$/;"	f	class:BaseCacheParams
create	src/mem/cache/prefetch/ghb.cc	/^GHBPrefetcherParams::create()$/;"	f	class:GHBPrefetcherParams
create	src/mem/cache/prefetch/stride.cc	/^StridePrefetcherParams::create()$/;"	f	class:StridePrefetcherParams
create	src/mem/cache/prefetch/tagged.cc	/^TaggedPrefetcherParams::create()$/;"	f	class:TaggedPrefetcherParams
create	src/mem/cache/tags/fa_lru.cc	/^FALRUParams::create()$/;"	f	class:FALRUParams
create	src/mem/cache/tags/lru.cc	/^LRUParams::create()$/;"	f	class:LRUParams
create	src/mem/coherent_bus.cc	/^CoherentBusParams::create()$/;"	f	class:CoherentBusParams
create	src/mem/comm_monitor.cc	/^CommMonitorParams::create()$/;"	f	class:CommMonitorParams
create	src/mem/dram_ctrl.cc	/^DRAMCtrlParams::create()$/;"	f	class:DRAMCtrlParams
create	src/mem/dramsim2.cc	/^DRAMSim2Params::create()$/;"	f	class:DRAMSim2Params
create	src/mem/noncoherent_bus.cc	/^NoncoherentBusParams::create()$/;"	f	class:NoncoherentBusParams
create	src/mem/ruby/network/BasicLink.cc	/^BasicExtLinkParams::create()$/;"	f	class:BasicExtLinkParams
create	src/mem/ruby/network/BasicLink.cc	/^BasicIntLinkParams::create()$/;"	f	class:BasicIntLinkParams
create	src/mem/ruby/network/BasicLink.cc	/^BasicLinkParams::create()$/;"	f	class:BasicLinkParams
create	src/mem/ruby/network/BasicRouter.cc	/^BasicRouterParams::create()$/;"	f	class:BasicRouterParams
create	src/mem/ruby/network/fault_model/FaultModel.cc	/^FaultModelParams::create()$/;"	f	class:FaultModelParams
create	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.cc	/^GarnetExtLink_dParams::create()$/;"	f	class:GarnetExtLink_dParams
create	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.cc	/^GarnetIntLink_dParams::create()$/;"	f	class:GarnetIntLink_dParams
create	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.cc	/^GarnetNetwork_dParams::create()$/;"	f	class:GarnetNetwork_dParams
create	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.cc	/^GarnetNetworkInterface_dParams::create()$/;"	f	class:GarnetNetworkInterface_dParams
create	src/mem/ruby/network/garnet/fixed-pipeline/NetworkLink_d.cc	/^CreditLink_dParams::create()$/;"	f	class:CreditLink_dParams
create	src/mem/ruby/network/garnet/fixed-pipeline/NetworkLink_d.cc	/^NetworkLink_dParams::create()$/;"	f	class:NetworkLink_dParams
create	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.cc	/^GarnetRouter_dParams::create()$/;"	f	class:GarnetRouter_dParams
create	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.cc	/^GarnetExtLinkParams::create()$/;"	f	class:GarnetExtLinkParams
create	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.cc	/^GarnetIntLinkParams::create()$/;"	f	class:GarnetIntLinkParams
create	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.cc	/^GarnetNetworkParams::create()$/;"	f	class:GarnetNetworkParams
create	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.cc	/^GarnetNetworkInterfaceParams::create()$/;"	f	class:GarnetNetworkInterfaceParams
create	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.cc	/^NetworkLinkParams::create()$/;"	f	class:NetworkLinkParams
create	src/mem/ruby/network/garnet/flexible-pipeline/Router.cc	/^GarnetRouterParams::create()$/;"	f	class:GarnetRouterParams
create	src/mem/ruby/network/simple/SimpleLink.cc	/^SimpleExtLinkParams::create()$/;"	f	class:SimpleExtLinkParams
create	src/mem/ruby/network/simple/SimpleLink.cc	/^SimpleIntLinkParams::create()$/;"	f	class:SimpleIntLinkParams
create	src/mem/ruby/network/simple/SimpleNetwork.cc	/^SimpleNetworkParams::create()$/;"	f	class:SimpleNetworkParams
create	src/mem/ruby/network/simple/Switch.cc	/^SwitchParams::create()$/;"	f	class:SwitchParams
create	src/mem/ruby/structures/Prefetcher.cc	/^PrefetcherParams::create()$/;"	f	class:PrefetcherParams
create	src/mem/ruby/system/CacheMemory.cc	/^RubyCacheParams::create()$/;"	f	class:RubyCacheParams
create	src/mem/ruby/system/DMASequencer.cc	/^DMASequencerParams::create()$/;"	f	class:DMASequencerParams
create	src/mem/ruby/system/DirectoryMemory.cc	/^RubyDirectoryMemoryParams::create()$/;"	f	class:RubyDirectoryMemoryParams
create	src/mem/ruby/system/RubyMemoryControl.cc	/^RubyMemoryControlParams::create()$/;"	f	class:RubyMemoryControlParams
create	src/mem/ruby/system/RubyPortProxy.cc	/^RubyPortProxyParams::create()$/;"	f	class:RubyPortProxyParams
create	src/mem/ruby/system/Sequencer.cc	/^RubySequencerParams::create()$/;"	f	class:RubySequencerParams
create	src/mem/ruby/system/System.cc	/^RubySystemParams::create()$/;"	f	class:RubySystemParams
create	src/mem/ruby/system/WireBuffer.cc	/^RubyWireBufferParams::create()$/;"	f	class:RubyWireBufferParams
create	src/mem/simple_mem.cc	/^SimpleMemoryParams::create()$/;"	f	class:SimpleMemoryParams
create	src/python/m5/event.py	/^def create(obj, priority=None):$/;"	f
create	src/sim/clock_domain.cc	/^DerivedClockDomainParams::create()$/;"	f	class:DerivedClockDomainParams
create	src/sim/clock_domain.cc	/^SrcClockDomainParams::create()$/;"	f	class:SrcClockDomainParams
create	src/sim/probe/probe.cc	/^ProbeListenerObjectParams::create()$/;"	f	class:ProbeListenerObjectParams
create	src/sim/process.cc	/^LiveProcess::create(LiveProcessParams * params)$/;"	f	class:LiveProcess
create	src/sim/process.cc	/^LiveProcessParams::create()$/;"	f	class:LiveProcessParams
create	src/sim/root.cc	/^RootParams::create()$/;"	f	class:RootParams
create	src/sim/serialize.cc	/^Serializable::create(Checkpoint *cp, const string &section)$/;"	f	class:Serializable
create	src/sim/system.cc	/^SystemParams::create()$/;"	f	class:SystemParams
create	src/sim/voltage_domain.cc	/^VoltageDomainParams::create()$/;"	f	class:VoltageDomainParams
createBackEndSchedule	src/cpu/inorder/pipeline_traits.5stage.cc	/^bool createBackEndSchedule(DynInstPtr &inst)$/;"	f	namespace:ThePipeline
createBackEndSchedule	src/cpu/inorder/pipeline_traits.9stage.cc	/^bool createBackEndSchedule(DynInstPtr &inst)$/;"	f	namespace:ThePipeline
createBackEndSchedule	src/cpu/inorder/pipeline_traits.9stage.smt2.cc	/^bool createBackEndSchedule(DynInstPtr &inst)$/;"	f	namespace:ThePipeline
createBackEndSked	src/cpu/inorder/cpu.cc	/^InOrderCPU::createBackEndSked(DynInstPtr inst)$/;"	f	class:InOrderCPU
createBackingStore	src/mem/physical.cc	/^PhysicalMemory::createBackingStore(AddrRange range,$/;"	f	class:PhysicalMemory
createCCObject	src/python/m5/SimObject.py	/^    def createCCObject(self):$/;"	f
createFaultSked	src/cpu/inorder/cpu.cc	/^InOrderCPU::createFaultSked()$/;"	f	class:InOrderCPU
createForUnserialize	src/dev/etherlink.cc	/^LinkDelayEvent::createForUnserialize(Checkpoint *cp, const string &section)$/;"	f	class:LinkDelayEvent
createForUnserialize	src/sim/sim_events.cc	/^LocalSimLoopExitEvent::createForUnserialize(Checkpoint *cp,$/;"	f	class:LocalSimLoopExitEvent
createFrontEndSchedule	src/cpu/inorder/pipeline_traits.5stage.cc	/^void createFrontEndSchedule(DynInstPtr &inst)$/;"	f	namespace:ThePipeline
createFrontEndSchedule	src/cpu/inorder/pipeline_traits.9stage.cc	/^void createFrontEndSchedule(DynInstPtr &inst)$/;"	f	namespace:ThePipeline
createFrontEndSchedule	src/cpu/inorder/pipeline_traits.9stage.smt2.cc	/^void createFrontEndSchedule(DynInstPtr &inst)$/;"	f	namespace:ThePipeline
createFrontEndSked	src/cpu/inorder/cpu.cc	/^InOrderCPU::createFrontEndSked()$/;"	f	class:InOrderCPU
createIRQChip	src/cpu/kvm/vm.cc	/^KvmVM::createIRQChip()$/;"	f	class:KvmVM
createInterruptController	src/cpu/BaseCPU.py	/^    def createInterruptController(self):$/;"	f
createLinks	src/mem/ruby/network/Topology.cc	/^Topology::createLinks(Network *net)$/;"	f	class:Topology
createMachInst	src/cpu/inorder/resources/fetch_unit.cc	/^FetchUnit::createMachInst(std::list<FetchBlock*>::iterator fetch_it,$/;"	f	class:FetchUnit
createMachineID	src/mem/ruby/slicc_interface/RubySlicc_ComponentMapping.hh	/^createMachineID(MachineType type, NodeID id)$/;"	f
createObject	src/sim/serialize.cc	/^SerializableClass::createObject(Checkpoint *cp, const string &section)$/;"	f	class:SerializableClass
createObjectFile	src/base/loader/object_file.cc	/^createObjectFile(const string &fname, bool raw)$/;"	f
createStreams	src/proto/protoio.cc	/^ProtoInputStream::createStreams()$/;"	f	class:ProtoInputStream
createSubdirectory	src/base/output.cc	/^OutputDirectory::createSubdirectory(const string &name) const$/;"	f	class:OutputDirectory
createSymbol	src/mem/slicc/generate/html.py	/^def createSymbol(symbol, title):$/;"	f
createThreads	src/cpu/BaseCPU.py	/^    def createThreads(self):$/;"	f
createVCPU	src/cpu/kvm/vm.cc	/^KvmVM::createVCPU(long vcpuID)$/;"	f	class:KvmVM
createVM	src/cpu/kvm/vm.cc	/^Kvm::createVM()$/;"	f	class:Kvm
create_arbiter	src/mem/ruby/network/orion/Allocator/Arbiter.cc	/^Arbiter::create_arbiter(const string& arb_model_str_, $/;"	f	class:Arbiter
create_crossbar	src/mem/ruby/network/orion/Crossbar/Crossbar.cc	/^Crossbar* Crossbar::create_crossbar($/;"	f	class:Crossbar
create_module	src/kern/linux/linux_syscalls.hh	/^    create_module = 26,$/;"	e	enum:SystemCalls::__anon87
create_swallocator	src/mem/ruby/network/orion/Allocator/SWAllocator.cc	/^SWAllocator* SWAllocator::create_swallocator($/;"	f	class:SWAllocator
create_vcallocator	src/mem/ruby/network/orion/Allocator/VCAllocator.cc	/^VCAllocator* VCAllocator::create_vcallocator($/;"	f	class:VCAllocator
creatorID	src/arch/x86/bios/acpi.hh	/^    std::string creatorID;$/;"	m	class:X86ISA::ACPI::SysDescTable
creatorRevision	src/arch/x86/bios/acpi.hh	/^    uint32_t creatorRevision;$/;"	m	class:X86ISA::ACPI::SysDescTable
creator_id	src/arch/x86/bios/ACPI.py	/^    creator_id = Param.String('',$/;"	v	class:X86ACPISysDescTable
creator_revision	src/arch/x86/bios/ACPI.py	/^    creator_revision = Param.UInt32(0,$/;"	v	class:X86ACPISysDescTable
creditQueue	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.hh	/^    flitBuffer_d *creditQueue;$/;"	m	class:InputUnit_d
creditQueue	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.hh	/^    flitBuffer_d *creditQueue;$/;"	m	class:NetworkInterface_d
credit_conservation__credit_generation	src/mem/ruby/network/fault_model/FaultModel.hh	/^        credit_conservation__credit_generation,$/;"	e	enum:FaultModel::fault_type
credit_conservation__credit_loss	src/mem/ruby/network/fault_model/FaultModel.hh	/^        credit_conservation__credit_loss,$/;"	e	enum:FaultModel::fault_type
credit_links	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.py	/^    credit_links = VectorParam.CreditLink_d(cls, "backward flow-control links")$/;"	v	class:GarnetExtLink_d
credit_links	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.py	/^    credit_links = VectorParam.CreditLink_d(cls, "backward flow-control links")$/;"	v	class:GarnetIntLink_d
crfd	src/base/loader/coff_sym.h	/^    coff_int    crfd;           \/* count file indirect entries *\/$/;"	m	struct:ecoff_fdr
crfd	src/base/loader/coff_sym.h	/^    coff_int    crfd;           \/* number of relative file descriptor entries *\/$/;"	m	struct:ecoff_symhdr
cross_pages	src/mem/cache/prefetch/Prefetcher.py	/^    cross_pages = Param.Bool(False,$/;"	v	class:BasePrefetcher
crossbar_count	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    double crossbar_count;$/;"	m	class:Router_d
crossproduct	src/python/m5/util/__init__.py	/^def crossproduct(items):$/;"	f
cserve	src/arch/alpha/osfpal.hh	/^        cserve = 0x09,$/;"	e	enum:PAL::__anon3
cspls	src/dev/pcireg.h	/^        Bitfield<27,26> cspls;$/;"	m	struct:PXCAP
csplv	src/dev/pcireg.h	/^        Bitfield<25,18> csplv;$/;"	m	struct:PXCAP
csprintf	src/base/cprintf.hh	/^csprintf(const char *format, CPRINTF_DECLARATION)$/;"	f
csprintf	src/base/cprintf.hh	/^csprintf(const std::string &format, CPRINTF_DECLARATION)$/;"	f
css	src/arch/mips/pra_constants.hh	/^    Bitfield<3,  0>  css;$/;"	m	namespace:MipsISA
csum	src/dev/i8254xGBe_defs.hh	/^                    uint16_t csum;$/;"	m	struct:iGbReg::RxDesc::__anon70::__anon73::__anon74::__anon75
csum	src/dev/i8254xGBe_defs.hh	/^            uint16_t csum;$/;"	m	struct:iGbReg::RxDesc::__anon70::__anon71
csym	src/base/loader/coff_sym.h	/^    coff_int    csym;           \/* count file's of symbols *\/$/;"	m	struct:ecoff_fdr
ctd	src/dev/pcireg.h	/^        Bitfield<4>     ctd;$/;"	m	struct:PXCAP
ctds	src/dev/pcireg.h	/^        Bitfield<4>     ctds;$/;"	m	struct:PXCAP
ctest	src/unittest/cprintftest.cc	/^    #define ctest(/;"	d	file:
ctr	src/mem/ruby/network/Network.hh	/^        Network *ctr;$/;"	m	class:Network::StatsCallback
ctr	src/mem/ruby/slicc_interface/AbstractController.hh	/^        AbstractController *ctr;$/;"	m	class:AbstractController::StatsCallback
ctrInsts	src/cpu/kvm/base.hh	/^    Counter ctrInsts;$/;"	m	class:BaseKvmCPU
ctrOk	src/arch/power/insts/branch.hh	/^    ctrOk(uint32_t& ctr) const$/;"	f	class:PowerISA::BranchCond
ctrl	src/dev/copy_engine_defs.hh	/^    CHANCTRL ctrl;$/;"	m	struct:CopyEngineReg::ChanRegs
ctrl	src/dev/i8254xGBe_defs.hh	/^    CTRL ctrl;$/;"	m	struct:iGbReg::Regs
ctrl	src/dev/ide_disk.hh	/^    IdeController *ctrl;$/;"	m	class:IdeDisk
ctrl32	src/cpu/kvm/x86_cpu.cc	/^        } ctrl32;$/;"	m	union:FXSave::__anon52	typeref:struct:FXSave::__anon52::__anon53	file:
ctrl64	src/cpu/kvm/x86_cpu.cc	/^        } ctrl64;$/;"	m	union:FXSave::__anon52	typeref:struct:FXSave::__anon52::__anon54	file:
ctrlAddr	src/dev/ide_ctrl.hh	/^        Addr cmdAddr, cmdSize, ctrlAddr, ctrlSize;$/;"	m	struct:IdeController::Channel
ctrlOffset	src/dev/ide_ctrl.hh	/^    uint32_t ioShift, ctrlOffset;$/;"	m	class:IdeController
ctrlReg	src/arch/x86/registers.hh	/^    MiscReg ctrlReg;$/;"	m	union:X86ISA::__anon35
ctrlSize	src/dev/ide_ctrl.hh	/^        Addr cmdAddr, cmdSize, ctrlAddr, ctrlSize;$/;"	m	struct:IdeController::Channel
ctrl_ext	src/dev/i8254xGBe_defs.hh	/^    CTRL_EXT ctrl_ext;$/;"	m	struct:iGbReg::Regs
ctrl_offset	src/dev/Ide.py	/^    ctrl_offset = Param.UInt32(0x0, "IDE disk control offset")$/;"	v	class:IdeController
ctrlreg	src/arch/alpha/registers.hh	/^    MiscReg ctrlreg;$/;"	m	union:AlphaISA::AnyReg
ctrlreg	src/arch/arm/registers.hh	/^    MiscReg  ctrlreg;$/;"	m	union:ArmISA::__anon12
ctrlreg	src/arch/mips/registers.hh	/^    MiscReg  ctrlreg;$/;"	m	union:MipsISA::__anon21
ctrlreg	src/arch/power/registers.hh	/^    MiscReg  ctrlreg;$/;"	m	union:PowerISA::__anon24
ctrlreg	src/arch/sparc/registers.hh	/^    MiscReg ctrlreg;$/;"	m	union:SparcISA::__anon29
ctrs	src/dev/pcireg.h	/^        Bitfield<3,0>   ctrs;$/;"	m	struct:PXCAP
ctsmim	src/dev/arm/pl011.hh	/^        Bitfield<1> ctsmim;$/;"	m	class:Pl011
ctv	src/dev/pcireg.h	/^        Bitfield<3,0>   ctv;$/;"	m	struct:PXCAP
cu0	src/arch/mips/pra_constants.hh	/^        Bitfield<28> cu0;$/;"	m	namespace:MipsISA
cu1	src/arch/mips/pra_constants.hh	/^        Bitfield<29> cu1;$/;"	m	namespace:MipsISA
cu2	src/arch/mips/pra_constants.hh	/^        Bitfield<30> cu2;$/;"	m	namespace:MipsISA
cu3	src/arch/mips/pra_constants.hh	/^        Bitfield<31> cu3;$/;"	m	namespace:MipsISA
curAddr	src/base/chunk_generator.hh	/^    Addr curAddr;$/;"	m	class:ChunkGenerator
curAddr	src/dev/arm/pl111.hh	/^    Addr curAddr;$/;"	m	class:Pl111
curCycle	src/sim/clocked_object.hh	/^    inline Cycles curCycle() const$/;"	f	class:ClockedObject
curDmaDesc	src/dev/copy_engine.hh	/^        CopyEngineReg::DmaDesc *curDmaDesc;$/;"	m	class:CopyEngine::CopyEngineChannel
curEventQueue	src/sim/eventq.hh	/^inline EventQueue *curEventQueue() { return _curEventQueue; }$/;"	f
curEventQueue	src/sim/eventq.hh	/^inline void curEventQueue(EventQueue *q) { _curEventQueue = q; }$/;"	f
curFetching	src/dev/i8254xGBe.hh	/^        int curFetching;$/;"	m	class:IGbE::DescCache
curMacroStaticInst	src/cpu/checker/cpu.hh	/^    StaticInstPtr curMacroStaticInst;$/;"	m	class:CheckerCPU
curMacroStaticInst	src/cpu/simple/base.hh	/^    StaticInstPtr curMacroStaticInst;$/;"	m	class:BaseSimpleCPU
curPrd	src/dev/ide_disk.hh	/^    PrdTableEntry curPrd;$/;"	m	class:IdeDisk
curPrdAddr	src/dev/ide_disk.hh	/^    uint32_t curPrdAddr;$/;"	m	class:IdeDisk
curPrefix	src/mem/packet.hh	/^        const std::string &curPrefix() { return *curPrefixPtr; }$/;"	f	class:Packet::PrintReqState
curPrefixPtr	src/mem/packet.hh	/^        std::string *curPrefixPtr;$/;"	m	class:Packet::PrintReqState
curResSlot	src/cpu/inorder/inorder_dyn_inst.hh	/^    unsigned curResSlot;$/;"	m	class:InOrderDynInst
curSector	src/dev/ide_disk.hh	/^    uint32_t curSector;$/;"	m	class:IdeDisk
curSector	src/dev/sparc/mm_disk.hh	/^    off_t curSector;$/;"	m	class:MmDisk
curSize	src/base/chunk_generator.hh	/^    unsigned  curSize;$/;"	m	class:ChunkGenerator
curSkedEntry	src/cpu/inorder/inorder_dyn_inst.hh	/^    RSkedIt curSkedEntry;$/;"	m	class:InOrderDynInst
curSkedEntry	src/cpu/inorder/resource_sked.hh	/^    SkedIt curSkedEntry;$/;"	m	class:ResourceSked
curStage	src/cpu/inorder/resource_sked.hh	/^    int curStage;$/;"	m	class:RSkedIt
curStage_end	src/cpu/inorder/resource_sked.hh	/^    ResourceSked::SkedIt curStage_end;$/;"	m	class:RSkedIt
curState	src/base/vnc/vncserver.hh	/^    ConnectionState curState;$/;"	m	class:VncServer
curStaticInst	src/cpu/checker/cpu.hh	/^    StaticInstPtr curStaticInst;$/;"	m	class:CheckerCPU
curStaticInst	src/cpu/simple/base.hh	/^    StaticInstPtr curStaticInst;$/;"	m	class:BaseSimpleCPU
curTC	src/arch/mips/mt_constants.hh	/^    Bitfield<28, 21> curTC;$/;"	m	namespace:MipsISA
curTable	src/mem/ruby/system/SparseMemory.hh	/^    SparseMapType* curTable;$/;"	m	struct:CurNextInfo
curTaskInfo	src/arch/generic/linux/threadinfo.hh	/^    curTaskInfo(Addr thread_info = 0)$/;"	f	class:Linux::ThreadInfo
curTaskMm	src/arch/generic/linux/threadinfo.hh	/^    curTaskMm(Addr thread_info = 0)$/;"	f	class:Linux::ThreadInfo
curTaskName	src/arch/generic/linux/threadinfo.hh	/^    curTaskName(Addr thread_info = 0)$/;"	f	class:Linux::ThreadInfo
curTaskPID	src/arch/generic/linux/threadinfo.hh	/^    curTaskPID(Addr thread_info = 0)$/;"	f	class:Linux::ThreadInfo
curTaskStart	src/arch/generic/linux/threadinfo.hh	/^    curTaskStart(Addr thread_info = 0)$/;"	f	class:Linux::ThreadInfo
curTaskTGID	src/arch/generic/linux/threadinfo.hh	/^    curTaskTGID(Addr thread_info = 0)$/;"	f	class:Linux::ThreadInfo
curThreadInfo	src/arch/generic/linux/threadinfo.hh	/^    curThreadInfo()$/;"	f	class:Linux::ThreadInfo
curTick	src/python/m5/simulate.py	/^def curTick():$/;"	f
curTick	src/sim/core.hh	/^inline Tick curTick() { return _curEventQueue->getCurTick(); }$/;"	f
curTime	src/dev/mc146818.hh	/^    struct tm curTime;$/;"	m	class:MC146818	typeref:struct:MC146818::tm
curTranType	src/arch/arm/tlb.hh	/^    ArmTranslationType curTranType;$/;"	m	class:ArmISA::TLB
curVPE	src/arch/mips/mt_constants.hh	/^    Bitfield<3,  0>  curVPE;$/;"	m	namespace:MipsISA
currEL	src/arch/arm/utility.hh	/^currEL(ThreadContext *tc)$/;"	f	namespace:ArmISA
currELHOffset	src/arch/arm/faults.hh	/^        const uint16_t currELHOffset;$/;"	m	struct:ArmISA::ArmFault::FaultVals
currELTOffset	src/arch/arm/faults.hh	/^        const uint16_t currELTOffset;$/;"	m	struct:ArmISA::ArmFault::FaultVals
currElement	src/cpu/testers/traffic_gen/generators.hh	/^    TraceElement currElement;$/;"	m	class:TraceGen
currOpMode	src/arch/arm/utility.hh	/^currOpMode(ThreadContext *tc)$/;"	f	namespace:ArmISA
currState	src/arch/arm/table_walker.hh	/^    WalkerState *currState;$/;"	m	class:ArmISA::TableWalker
currState	src/cpu/testers/traffic_gen/traffic_gen.hh	/^    uint32_t currState;$/;"	m	class:TrafficGen
currStates	src/arch/x86/pagetable_walker.hh	/^        std::list<WalkerState *> currStates;$/;"	m	class:X86ISA::Walker
current	src/arch/arm/nativetrace.hh	/^        int current;$/;"	m	struct:Trace::ArmNativeTrace::ThreadState
current	src/base/statistics.hh	/^    Counter current;$/;"	m	class:Stats::AvgStor
currentBBV	src/cpu/simple/atomic.hh	/^    BasicBlockRange currentBBV;$/;"	m	class:AtomicSimpleCPU
currentBBVInstCount	src/cpu/simple/atomic.hh	/^    uint64_t currentBBVInstCount;$/;"	m	class:AtomicSimpleCPU
currentClock	src/sim/clock_domain.hh	/^    Stats::Value currentClock;$/;"	m	class:ClockDomain
currentCount	src/dev/intel_8254_timer.cc	/^Intel8254Timer::Counter::currentCount()$/;"	f	class:Intel8254Timer::Counter
currentDirectory	src/sim/serialize.cc	/^string Checkpoint::currentDirectory;$/;"	m	class:Checkpoint	file:
currentDirectory	src/sim/serialize.hh	/^    static std::string currentDirectory;$/;"	m	class:Checkpoint
currentFunctionEnd	src/cpu/base.hh	/^    Addr currentFunctionEnd;$/;"	m	class:BaseCPU
currentFunctionStart	src/cpu/base.hh	/^    Addr currentFunctionStart;$/;"	m	class:BaseCPU
currentLocation	src/mem/slicc/parser.py	/^    def currentLocation(self):$/;"	m	class:SLICC
currentVoltage	src/sim/voltage_domain.hh	/^    Stats::Value currentVoltage;$/;"	m	class:VoltageDomain
current_count	src/cpu/ozone/back_end.hh	/^        Stats::Scalar current_count;$/;"	m	class:BackEnd::InstQueue
current_cpu	src/kern/tru64/tru64.hh	/^        uint32_t     current_cpu;       \/\/!< current_cpu$/;"	m	struct:Tru64::cpu_info
curses	src/python/m5/util/terminal.py	/^    import curses$/;"	i
cursorImage	src/dev/arm/pl111.hh	/^    int cursorImage[CrsrImageSize];$/;"	m	class:Pl111
cv	src/arch/sparc/pagetable.hh	/^    bool cv()       const { assert(populated); return bits(entry4u,4,4); }$/;"	f	class:SparcISA::PageTableEntry
cvec	src/base/statistics.hh	/^    VCounter cvec;$/;"	m	class:Stats::DistStor
cvec	src/base/statistics.hh	/^    VCounter cvec;$/;"	m	class:Stats::HistStor
cvec	src/base/statistics.hh	/^    mutable VCounter cvec;$/;"	m	class:Stats::FormulaInfoProxy
cvec	src/base/statistics.hh	/^    mutable VCounter cvec;$/;"	m	class:Stats::VectorInfoProxy
cvec	src/base/stats/info.hh	/^    VCounter cvec;$/;"	m	struct:Stats::DistData
cvec	src/base/stats/info.hh	/^    mutable VCounter cvec;$/;"	m	class:Stats::Vector2dInfo
cwd	src/sim/Process.py	/^    cwd = Param.String('', "current working directory")$/;"	v	class:LiveProcess
cwd	src/sim/process.hh	/^    std::string cwd;$/;"	m	class:LiveProcess
cwg	src/arch/arm/miscregs.hh	/^      Bitfield<27,24> cwg;$/;"	m	namespace:ArmISA
cwp	src/arch/sparc/isa.hh	/^    uint8_t cwp;            \/\/ Current Window Pointer$/;"	m	class:SparcISA::ISA
cwp	src/cpu/m5legion_interface.h	/^    uint8_t cwp;$/;"	m	struct:__anon55
cx_config	src/arch/sparc/tlb.hh	/^    uint64_t cx_config;$/;"	m	class:SparcISA::TLB
cx_tsb_ps0	src/arch/sparc/tlb.hh	/^    uint64_t cx_tsb_ps0;$/;"	m	class:SparcISA::TLB
cx_tsb_ps1	src/arch/sparc/tlb.hh	/^    uint64_t cx_tsb_ps1;$/;"	m	class:SparcISA::TLB
cxx_bases	src/python/m5/SimObject.py	/^    cxx_bases = [ "Drainable", "Serializable" ]$/;"	v	class:SimObject
cxx_class	src/arch/alpha/AlphaISA.py	/^    cxx_class = 'AlphaISA::ISA'$/;"	v	class:AlphaISA
cxx_class	src/arch/alpha/AlphaInterrupts.py	/^    cxx_class = 'AlphaISA::Interrupts'$/;"	v	class:AlphaInterrupts
cxx_class	src/arch/alpha/AlphaTLB.py	/^    cxx_class = 'AlphaISA::TLB'$/;"	v	class:AlphaTLB
cxx_class	src/arch/arm/ArmISA.py	/^    cxx_class = 'ArmISA::ISA'$/;"	v	class:ArmISA
cxx_class	src/arch/arm/ArmInterrupts.py	/^    cxx_class = 'ArmISA::Interrupts'$/;"	v	class:ArmInterrupts
cxx_class	src/arch/arm/ArmNativeTrace.py	/^    cxx_class = 'Trace::ArmNativeTrace'$/;"	v	class:ArmNativeTrace
cxx_class	src/arch/arm/ArmTLB.py	/^    cxx_class = 'ArmISA::Stage2MMU'$/;"	v	class:ArmStage2MMU
cxx_class	src/arch/arm/ArmTLB.py	/^    cxx_class = 'ArmISA::TLB'$/;"	v	class:ArmTLB
cxx_class	src/arch/arm/ArmTLB.py	/^    cxx_class = 'ArmISA::TableWalker'$/;"	v	class:ArmTableWalker
cxx_class	src/arch/mips/MipsISA.py	/^    cxx_class = 'MipsISA::ISA'$/;"	v	class:MipsISA
cxx_class	src/arch/mips/MipsInterrupts.py	/^    cxx_class = 'MipsISA::Interrupts'$/;"	v	class:MipsInterrupts
cxx_class	src/arch/mips/MipsTLB.py	/^    cxx_class = 'MipsISA::TLB'$/;"	v	class:MipsTLB
cxx_class	src/arch/power/PowerISA.py	/^    cxx_class = 'PowerISA::ISA'$/;"	v	class:PowerISA
cxx_class	src/arch/power/PowerInterrupts.py	/^    cxx_class = 'PowerISA::Interrupts'$/;"	v	class:PowerInterrupts
cxx_class	src/arch/power/PowerTLB.py	/^    cxx_class = 'PowerISA::TLB'$/;"	v	class:PowerTLB
cxx_class	src/arch/sparc/SparcISA.py	/^    cxx_class = 'SparcISA::ISA'$/;"	v	class:SparcISA
cxx_class	src/arch/sparc/SparcInterrupts.py	/^    cxx_class = 'SparcISA::Interrupts'$/;"	v	class:SparcInterrupts
cxx_class	src/arch/sparc/SparcNativeTrace.py	/^    cxx_class = 'Trace::SparcNativeTrace'$/;"	v	class:SparcNativeTrace
cxx_class	src/arch/sparc/SparcTLB.py	/^    cxx_class = 'SparcISA::TLB'$/;"	v	class:SparcTLB
cxx_class	src/arch/x86/X86ISA.py	/^    cxx_class = 'X86ISA::ISA'$/;"	v	class:X86ISA
cxx_class	src/arch/x86/X86LocalApic.py	/^    cxx_class = 'X86ISA::Interrupts'$/;"	v	class:X86LocalApic
cxx_class	src/arch/x86/X86NativeTrace.py	/^    cxx_class = 'Trace::X86NativeTrace'$/;"	v	class:X86NativeTrace
cxx_class	src/arch/x86/X86TLB.py	/^    cxx_class = 'X86ISA::TLB'$/;"	v	class:X86TLB
cxx_class	src/arch/x86/X86TLB.py	/^    cxx_class = 'X86ISA::Walker'$/;"	v	class:X86PagetableWalker
cxx_class	src/arch/x86/bios/ACPI.py	/^    cxx_class = 'X86ISA::ACPI::RSDP'$/;"	v	class:X86ACPIRSDP
cxx_class	src/arch/x86/bios/ACPI.py	/^    cxx_class = 'X86ISA::ACPI::RSDT'$/;"	v	class:X86ACPIRSDT
cxx_class	src/arch/x86/bios/ACPI.py	/^    cxx_class = 'X86ISA::ACPI::SysDescTable'$/;"	v	class:X86ACPISysDescTable
cxx_class	src/arch/x86/bios/ACPI.py	/^    cxx_class = 'X86ISA::ACPI::XSDT'$/;"	v	class:X86ACPIXSDT
cxx_class	src/arch/x86/bios/E820.py	/^    cxx_class = 'X86ISA::E820Entry'$/;"	v	class:X86E820Entry
cxx_class	src/arch/x86/bios/E820.py	/^    cxx_class = 'X86ISA::E820Table'$/;"	v	class:X86E820Table
cxx_class	src/arch/x86/bios/IntelMP.py	/^    cxx_class = 'X86ISA::IntelMP::AddrSpaceMapping'$/;"	v	class:X86IntelMPAddrSpaceMapping
cxx_class	src/arch/x86/bios/IntelMP.py	/^    cxx_class = 'X86ISA::IntelMP::BaseConfigEntry'$/;"	v	class:X86IntelMPBaseConfigEntry
cxx_class	src/arch/x86/bios/IntelMP.py	/^    cxx_class = 'X86ISA::IntelMP::Bus'$/;"	v	class:X86IntelMPBus
cxx_class	src/arch/x86/bios/IntelMP.py	/^    cxx_class = 'X86ISA::IntelMP::BusHierarchy'$/;"	v	class:X86IntelMPBusHierarchy
cxx_class	src/arch/x86/bios/IntelMP.py	/^    cxx_class = 'X86ISA::IntelMP::CompatAddrSpaceMod'$/;"	v	class:X86IntelMPCompatAddrSpaceMod
cxx_class	src/arch/x86/bios/IntelMP.py	/^    cxx_class = 'X86ISA::IntelMP::ConfigTable'$/;"	v	class:X86IntelMPConfigTable
cxx_class	src/arch/x86/bios/IntelMP.py	/^    cxx_class = 'X86ISA::IntelMP::ExtConfigEntry'$/;"	v	class:X86IntelMPExtConfigEntry
cxx_class	src/arch/x86/bios/IntelMP.py	/^    cxx_class = 'X86ISA::IntelMP::FloatingPointer'$/;"	v	class:X86IntelMPFloatingPointer
cxx_class	src/arch/x86/bios/IntelMP.py	/^    cxx_class = 'X86ISA::IntelMP::IOAPIC'$/;"	v	class:X86IntelMPIOAPIC
cxx_class	src/arch/x86/bios/IntelMP.py	/^    cxx_class = 'X86ISA::IntelMP::IOIntAssignment'$/;"	v	class:X86IntelMPIOIntAssignment
cxx_class	src/arch/x86/bios/IntelMP.py	/^    cxx_class = 'X86ISA::IntelMP::LocalIntAssignment'$/;"	v	class:X86IntelMPLocalIntAssignment
cxx_class	src/arch/x86/bios/IntelMP.py	/^    cxx_class = 'X86ISA::IntelMP::Processor'$/;"	v	class:X86IntelMPProcessor
cxx_class	src/arch/x86/bios/SMBios.py	/^    cxx_class = 'X86ISA::SMBios::BiosInformation'$/;"	v	class:X86SMBiosBiosInformation
cxx_class	src/arch/x86/bios/SMBios.py	/^    cxx_class = 'X86ISA::SMBios::SMBiosStructure'$/;"	v	class:X86SMBiosSMBiosStructure
cxx_class	src/arch/x86/bios/SMBios.py	/^    cxx_class = 'X86ISA::SMBios::SMBiosTable'$/;"	v	class:X86SMBiosSMBiosTable
cxx_class	src/cpu/ExeTracer.py	/^    cxx_class = 'Trace::ExeTracer'$/;"	v	class:ExeTracer
cxx_class	src/cpu/IntelTrace.py	/^    cxx_class = 'Trace::IntelTrace'$/;"	v	class:IntelTrace
cxx_class	src/cpu/LegionTrace.py	/^    cxx_class = 'Trace::LegionTrace'$/;"	v	class:LegionTrace
cxx_class	src/cpu/NativeTrace.py	/^    cxx_class = 'Trace::NativeTrace'$/;"	v	class:NativeTrace
cxx_class	src/cpu/inorder/InOrderTrace.py	/^    cxx_class = 'Trace::InOrderTrace'$/;"	v	class:InOrderTrace
cxx_class	src/cpu/pred/BranchPredictor.py	/^    cxx_class = 'BPredUnit'$/;"	v	class:BranchPredictor
cxx_class	src/dev/Ethernet.py	/^    cxx_class = 'Sinic::Device'$/;"	v	class:Sinic
cxx_class	src/dev/Pci.py	/^    cxx_class = 'PciDevice'$/;"	v	class:PciDevice
cxx_class	src/dev/x86/Cmos.py	/^    cxx_class='X86ISA::Cmos'$/;"	v	class:Cmos
cxx_class	src/dev/x86/I8042.py	/^    cxx_class = 'X86ISA::I8042'$/;"	v	class:I8042
cxx_class	src/dev/x86/I82094AA.py	/^    cxx_class = 'X86ISA::I82094AA'$/;"	v	class:I82094AA
cxx_class	src/dev/x86/I8237.py	/^    cxx_class = 'X86ISA::I8237'$/;"	v	class:I8237
cxx_class	src/dev/x86/I8254.py	/^    cxx_class = 'X86ISA::I8254'$/;"	v	class:I8254
cxx_class	src/dev/x86/I8259.py	/^    cxx_class='X86ISA::I8259'$/;"	v	class:I8259
cxx_class	src/dev/x86/PcSpeaker.py	/^    cxx_class = 'X86ISA::Speaker'$/;"	v	class:PcSpeaker
cxx_class	src/dev/x86/X86IntPin.py	/^    cxx_class = 'X86ISA::IntLine'$/;"	v	class:X86IntLine
cxx_class	src/dev/x86/X86IntPin.py	/^    cxx_class = 'X86ISA::IntSinkPin'$/;"	v	class:X86IntSinkPin
cxx_class	src/dev/x86/X86IntPin.py	/^    cxx_class = 'X86ISA::IntSourcePin'$/;"	v	class:X86IntSourcePin
cxx_class	src/mem/cache/prefetch/Prefetcher.py	/^    cxx_class = 'GHBPrefetcher'$/;"	v	class:GHBPrefetcher
cxx_class	src/mem/cache/prefetch/Prefetcher.py	/^    cxx_class = 'StridePrefetcher'$/;"	v	class:StridePrefetcher
cxx_class	src/mem/cache/prefetch/Prefetcher.py	/^    cxx_class = 'TaggedPrefetcher'$/;"	v	class:TaggedPrefetcher
cxx_class	src/mem/cache/tags/Tags.py	/^    cxx_class = 'FALRU'$/;"	v	class:FALRU
cxx_class	src/mem/cache/tags/Tags.py	/^    cxx_class = 'LRU'$/;"	v	class:LRU
cxx_class	src/mem/ruby/network/Network.py	/^    cxx_class = 'Network'$/;"	v	class:RubyNetwork
cxx_class	src/mem/ruby/network/fault_model/FaultModel.py	/^    cxx_class = 'FaultModel' $/;"	v	class:FaultModel
cxx_class	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.py	/^    cxx_class = 'NetworkInterface_d'$/;"	v	class:GarnetNetworkInterface_d
cxx_class	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.py	/^    cxx_class = 'Router_d'$/;"	v	class:GarnetRouter_d
cxx_class	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.py	/^    cxx_class = 'NetworkInterface'$/;"	v	class:GarnetNetworkInterface
cxx_class	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.py	/^    cxx_class = 'Router'$/;"	v	class:GarnetRouter
cxx_class	src/mem/ruby/slicc_interface/Controller.py	/^    cxx_class = 'AbstractController'$/;"	v	class:RubyController
cxx_class	src/mem/ruby/structures/RubyPrefetcher.py	/^    cxx_class = 'Prefetcher'$/;"	v	class:Prefetcher
cxx_class	src/mem/ruby/system/Cache.py	/^    cxx_class = 'CacheMemory'$/;"	v	class:RubyCache
cxx_class	src/mem/ruby/system/DirectoryMemory.py	/^    cxx_class = 'DirectoryMemory'$/;"	v	class:RubyDirectoryMemory
cxx_class	src/mem/ruby/system/MemoryControl.py	/^    cxx_class = 'MemoryControl'$/;"	v	class:MemoryControl
cxx_class	src/mem/ruby/system/RubyMemoryControl.py	/^    cxx_class = 'RubyMemoryControl'$/;"	v	class:RubyMemoryControl
cxx_class	src/mem/ruby/system/Sequencer.py	/^    cxx_class = 'Sequencer'$/;"	v	class:RubySequencer
cxx_class	src/mem/ruby/system/WireBuffer.py	/^    cxx_class = 'WireBuffer'$/;"	v	class:RubyWireBuffer
cxx_class	src/sim/InstTracer.py	/^    cxx_class = 'Trace::InstTracer'$/;"	v	class:InstTracer
cxx_decl	src/python/m5/params.py	/^    def cxx_decl(cls, code):$/;"	m	class:MetaEnum
cxx_decl	src/python/m5/params.py	/^    def cxx_decl(self, code):$/;"	m	class:ParamDesc
cxx_decl	src/python/m5/params.py	/^    def cxx_decl(self, code):$/;"	m	class:Port
cxx_decl	src/python/m5/params.py	/^    def cxx_decl(self, code):$/;"	m	class:VectorParamDesc
cxx_def	src/python/m5/params.py	/^    def cxx_def(cls, code):$/;"	m	class:MetaEnum
cxx_header	src/arch/alpha/AlphaISA.py	/^    cxx_header = "arch\/alpha\/isa.hh"$/;"	v	class:AlphaISA
cxx_header	src/arch/alpha/AlphaInterrupts.py	/^    cxx_header = "arch\/alpha\/interrupts.hh"$/;"	v	class:AlphaInterrupts
cxx_header	src/arch/alpha/AlphaSystem.py	/^    cxx_header = "arch\/alpha\/freebsd\/system.hh"$/;"	v	class:FreebsdAlphaSystem
cxx_header	src/arch/alpha/AlphaSystem.py	/^    cxx_header = "arch\/alpha\/linux\/system.hh"$/;"	v	class:LinuxAlphaSystem
cxx_header	src/arch/alpha/AlphaSystem.py	/^    cxx_header = "arch\/alpha\/system.hh"$/;"	v	class:AlphaSystem
cxx_header	src/arch/alpha/AlphaSystem.py	/^    cxx_header = "arch\/alpha\/tru64\/system.hh"$/;"	v	class:Tru64AlphaSystem
cxx_header	src/arch/alpha/AlphaTLB.py	/^    cxx_header = "arch\/alpha\/tlb.hh"$/;"	v	class:AlphaTLB
cxx_header	src/arch/arm/ArmISA.py	/^    cxx_header = "arch\/arm\/isa.hh"$/;"	v	class:ArmISA
cxx_header	src/arch/arm/ArmInterrupts.py	/^    cxx_header = "arch\/arm\/interrupts.hh"$/;"	v	class:ArmInterrupts
cxx_header	src/arch/arm/ArmNativeTrace.py	/^    cxx_header = "arch\/arm\/nativetrace.hh"$/;"	v	class:ArmNativeTrace
cxx_header	src/arch/arm/ArmSystem.py	/^    cxx_header = "arch\/arm\/linux\/system.hh"$/;"	v	class:LinuxArmSystem
cxx_header	src/arch/arm/ArmSystem.py	/^    cxx_header = "arch\/arm\/system.hh"$/;"	v	class:ArmSystem
cxx_header	src/arch/arm/ArmTLB.py	/^    cxx_header = "arch\/arm\/table_walker.hh"$/;"	v	class:ArmTableWalker
cxx_header	src/arch/arm/ArmTLB.py	/^    cxx_header = "arch\/arm\/tlb.hh"$/;"	v	class:ArmTLB
cxx_header	src/arch/arm/ArmTLB.py	/^    cxx_header = 'arch\/arm\/stage2_mmu.hh'$/;"	v	class:ArmStage2MMU
cxx_header	src/arch/mips/MipsISA.py	/^    cxx_header = "arch\/mips\/isa.hh"$/;"	v	class:MipsISA
cxx_header	src/arch/mips/MipsInterrupts.py	/^    cxx_header = 'arch\/mips\/interrupts.hh'$/;"	v	class:MipsInterrupts
cxx_header	src/arch/mips/MipsSystem.py	/^    cxx_header = 'arch\/mips\/bare_iron\/system.hh'$/;"	v	class:BareIronMipsSystem
cxx_header	src/arch/mips/MipsSystem.py	/^    cxx_header = 'arch\/mips\/linux\/system.hh'$/;"	v	class:LinuxMipsSystem
cxx_header	src/arch/mips/MipsSystem.py	/^    cxx_header = 'arch\/mips\/system.hh'$/;"	v	class:MipsSystem
cxx_header	src/arch/mips/MipsTLB.py	/^    cxx_header = 'arch\/mips\/tlb.hh'$/;"	v	class:MipsTLB
cxx_header	src/arch/power/PowerISA.py	/^    cxx_header = "arch\/power\/isa.hh"$/;"	v	class:PowerISA
cxx_header	src/arch/power/PowerInterrupts.py	/^    cxx_header = 'arch\/power\/interrupts.hh'$/;"	v	class:PowerInterrupts
cxx_header	src/arch/power/PowerTLB.py	/^    cxx_header = 'arch\/power\/tlb.hh'$/;"	v	class:PowerTLB
cxx_header	src/arch/sparc/SparcISA.py	/^    cxx_header = "arch\/sparc\/isa.hh"$/;"	v	class:SparcISA
cxx_header	src/arch/sparc/SparcInterrupts.py	/^    cxx_header = 'arch\/sparc\/interrupts.hh'$/;"	v	class:SparcInterrupts
cxx_header	src/arch/sparc/SparcNativeTrace.py	/^    cxx_header = 'arch\/sparc\/nativetrace.hh'$/;"	v	class:SparcNativeTrace
cxx_header	src/arch/sparc/SparcSystem.py	/^    cxx_header = 'arch\/sparc\/system.hh'$/;"	v	class:SparcSystem
cxx_header	src/arch/sparc/SparcTLB.py	/^    cxx_header = 'arch\/sparc\/tlb.hh'$/;"	v	class:SparcTLB
cxx_header	src/arch/x86/X86ISA.py	/^    cxx_header = "arch\/x86\/isa.hh"$/;"	v	class:X86ISA
cxx_header	src/arch/x86/X86LocalApic.py	/^    cxx_header = 'arch\/x86\/interrupts.hh'$/;"	v	class:X86LocalApic
cxx_header	src/arch/x86/X86NativeTrace.py	/^    cxx_header = 'arch\/x86\/nativetrace.hh'$/;"	v	class:X86NativeTrace
cxx_header	src/arch/x86/X86System.py	/^    cxx_header = 'arch\/x86\/linux\/system.hh'$/;"	v	class:LinuxX86System
cxx_header	src/arch/x86/X86System.py	/^    cxx_header = 'arch\/x86\/system.hh'$/;"	v	class:X86System
cxx_header	src/arch/x86/X86TLB.py	/^    cxx_header = 'arch\/x86\/pagetable_walker.hh'$/;"	v	class:X86PagetableWalker
cxx_header	src/arch/x86/X86TLB.py	/^    cxx_header = 'arch\/x86\/tlb.hh'$/;"	v	class:X86TLB
cxx_header	src/arch/x86/bios/ACPI.py	/^    cxx_header = 'arch\/x86\/bios\/acpi.hh'$/;"	v	class:X86ACPIRSDP
cxx_header	src/arch/x86/bios/ACPI.py	/^    cxx_header = 'arch\/x86\/bios\/acpi.hh'$/;"	v	class:X86ACPIRSDT
cxx_header	src/arch/x86/bios/ACPI.py	/^    cxx_header = 'arch\/x86\/bios\/acpi.hh'$/;"	v	class:X86ACPISysDescTable
cxx_header	src/arch/x86/bios/ACPI.py	/^    cxx_header = 'arch\/x86\/bios\/acpi.hh'$/;"	v	class:X86ACPIXSDT
cxx_header	src/arch/x86/bios/E820.py	/^    cxx_header = 'arch\/x86\/bios\/e820.hh'$/;"	v	class:X86E820Entry
cxx_header	src/arch/x86/bios/E820.py	/^    cxx_header = 'arch\/x86\/bios\/e820.hh'$/;"	v	class:X86E820Table
cxx_header	src/arch/x86/bios/IntelMP.py	/^    cxx_header = 'arch\/x86\/bios\/intelmp.hh'$/;"	v	class:X86IntelMPAddrSpaceMapping
cxx_header	src/arch/x86/bios/IntelMP.py	/^    cxx_header = 'arch\/x86\/bios\/intelmp.hh'$/;"	v	class:X86IntelMPBaseConfigEntry
cxx_header	src/arch/x86/bios/IntelMP.py	/^    cxx_header = 'arch\/x86\/bios\/intelmp.hh'$/;"	v	class:X86IntelMPBus
cxx_header	src/arch/x86/bios/IntelMP.py	/^    cxx_header = 'arch\/x86\/bios\/intelmp.hh'$/;"	v	class:X86IntelMPBusHierarchy
cxx_header	src/arch/x86/bios/IntelMP.py	/^    cxx_header = 'arch\/x86\/bios\/intelmp.hh'$/;"	v	class:X86IntelMPCompatAddrSpaceMod
cxx_header	src/arch/x86/bios/IntelMP.py	/^    cxx_header = 'arch\/x86\/bios\/intelmp.hh'$/;"	v	class:X86IntelMPConfigTable
cxx_header	src/arch/x86/bios/IntelMP.py	/^    cxx_header = 'arch\/x86\/bios\/intelmp.hh'$/;"	v	class:X86IntelMPExtConfigEntry
cxx_header	src/arch/x86/bios/IntelMP.py	/^    cxx_header = 'arch\/x86\/bios\/intelmp.hh'$/;"	v	class:X86IntelMPFloatingPointer
cxx_header	src/arch/x86/bios/IntelMP.py	/^    cxx_header = 'arch\/x86\/bios\/intelmp.hh'$/;"	v	class:X86IntelMPIOAPIC
cxx_header	src/arch/x86/bios/IntelMP.py	/^    cxx_header = 'arch\/x86\/bios\/intelmp.hh'$/;"	v	class:X86IntelMPIOIntAssignment
cxx_header	src/arch/x86/bios/IntelMP.py	/^    cxx_header = 'arch\/x86\/bios\/intelmp.hh'$/;"	v	class:X86IntelMPLocalIntAssignment
cxx_header	src/arch/x86/bios/IntelMP.py	/^    cxx_header = 'arch\/x86\/bios\/intelmp.hh'$/;"	v	class:X86IntelMPProcessor
cxx_header	src/arch/x86/bios/SMBios.py	/^    cxx_header = 'arch\/x86\/bios\/smbios.hh'$/;"	v	class:X86SMBiosBiosInformation
cxx_header	src/arch/x86/bios/SMBios.py	/^    cxx_header = 'arch\/x86\/bios\/smbios.hh'$/;"	v	class:X86SMBiosSMBiosStructure
cxx_header	src/arch/x86/bios/SMBios.py	/^    cxx_header = 'arch\/x86\/bios\/smbios.hh'$/;"	v	class:X86SMBiosSMBiosTable
cxx_header	src/base/CPA.py	/^    cxx_header = "base\/cp_annotate.hh"$/;"	v	class:CPA
cxx_header	src/base/vnc/Vnc.py	/^    cxx_header = "base\/vnc\/vncinput.hh"$/;"	v	class:VncInput
cxx_header	src/base/vnc/Vnc.py	/^    cxx_header = "base\/vnc\/vncserver.hh"$/;"	v	class:VncServer
cxx_header	src/cpu/BaseCPU.py	/^    cxx_header = "cpu\/base.hh"$/;"	v	class:BaseCPU
cxx_header	src/cpu/CheckerCPU.py	/^    cxx_header = "cpu\/checker\/cpu.hh"$/;"	v	class:CheckerCPU
cxx_header	src/cpu/DummyChecker.py	/^    cxx_header = 'cpu\/dummy_checker.hh'$/;"	v	class:DummyChecker
cxx_header	src/cpu/ExeTracer.py	/^    cxx_header = "cpu\/exetrace.hh"$/;"	v	class:ExeTracer
cxx_header	src/cpu/FuncUnit.py	/^    cxx_header = "cpu\/func_unit.hh"$/;"	v	class:FUDesc
cxx_header	src/cpu/FuncUnit.py	/^    cxx_header = "cpu\/func_unit.hh"$/;"	v	class:OpDesc
cxx_header	src/cpu/IntelTrace.py	/^    cxx_header = "cpu\/inteltrace.hh"$/;"	v	class:IntelTrace
cxx_header	src/cpu/IntrControl.py	/^    cxx_header = "cpu\/intr_control.hh"$/;"	v	class:IntrControl
cxx_header	src/cpu/LegionTrace.py	/^    cxx_header = "cpu\/legiontrace.hh"$/;"	v	class:LegionTrace
cxx_header	src/cpu/NativeTrace.py	/^    cxx_header = "cpu\/nativetrace.hh"$/;"	v	class:NativeTrace
cxx_header	src/cpu/inorder/InOrderCPU.py	/^    cxx_header = "cpu\/inorder\/cpu.hh"$/;"	v	class:InOrderCPU
cxx_header	src/cpu/inorder/InOrderTrace.py	/^    cxx_header = "cpu\/inorder\/inorder_trace.hh"$/;"	v	class:InOrderTrace
cxx_header	src/cpu/kvm/ArmKvmCPU.py	/^    cxx_header = "cpu\/kvm\/arm_cpu.hh"$/;"	v	class:ArmKvmCPU
cxx_header	src/cpu/kvm/BaseKvmCPU.py	/^    cxx_header = "cpu\/kvm\/base.hh"$/;"	v	class:BaseKvmCPU
cxx_header	src/cpu/kvm/KvmVM.py	/^    cxx_header = "cpu\/kvm\/vm.hh"$/;"	v	class:KvmVM
cxx_header	src/cpu/kvm/X86KvmCPU.py	/^    cxx_header = "cpu\/kvm\/x86_cpu.hh"$/;"	v	class:X86KvmCPU
cxx_header	src/cpu/o3/FUPool.py	/^    cxx_header = "cpu\/o3\/fu_pool.hh"$/;"	v	class:FUPool
cxx_header	src/cpu/o3/O3CPU.py	/^    cxx_header = 'cpu\/o3\/deriv.hh'$/;"	v	class:DerivO3CPU
cxx_header	src/cpu/o3/O3Checker.py	/^    cxx_header = 'cpu\/o3\/checker.hh'$/;"	v	class:O3Checker
cxx_header	src/cpu/o3/probe/SimpleTrace.py	/^    cxx_header = 'cpu\/o3\/probe\/simple_trace.hh'$/;"	v	class:SimpleTrace
cxx_header	src/cpu/pred/BranchPredictor.py	/^    cxx_header = "cpu\/pred\/bpred_unit.hh"$/;"	v	class:BranchPredictor
cxx_header	src/cpu/simple/AtomicSimpleCPU.py	/^    cxx_header = "cpu\/simple\/atomic.hh"$/;"	v	class:AtomicSimpleCPU
cxx_header	src/cpu/simple/BaseSimpleCPU.py	/^    cxx_header = "cpu\/simple\/base.hh"$/;"	v	class:BaseSimpleCPU
cxx_header	src/cpu/simple/TimingSimpleCPU.py	/^    cxx_header = "cpu\/simple\/timing.hh"$/;"	v	class:TimingSimpleCPU
cxx_header	src/cpu/testers/directedtest/RubyDirectedTester.py	/^    cxx_header = "cpu\/testers\/directedtest\/DirectedGenerator.hh"$/;"	v	class:DirectedGenerator
cxx_header	src/cpu/testers/directedtest/RubyDirectedTester.py	/^    cxx_header = "cpu\/testers\/directedtest\/InvalidateGenerator.hh"$/;"	v	class:InvalidateGenerator
cxx_header	src/cpu/testers/directedtest/RubyDirectedTester.py	/^    cxx_header = "cpu\/testers\/directedtest\/RubyDirectedTester.hh"$/;"	v	class:RubyDirectedTester
cxx_header	src/cpu/testers/directedtest/RubyDirectedTester.py	/^    cxx_header = "cpu\/testers\/directedtest\/SeriesRequestGenerator.hh"$/;"	v	class:SeriesRequestGenerator
cxx_header	src/cpu/testers/memtest/MemTest.py	/^    cxx_header = "cpu\/testers\/memtest\/memtest.hh"$/;"	v	class:MemTest
cxx_header	src/cpu/testers/networktest/NetworkTest.py	/^    cxx_header = "cpu\/testers\/networktest\/networktest.hh"$/;"	v	class:NetworkTest
cxx_header	src/cpu/testers/rubytest/RubyTester.py	/^    cxx_header = "cpu\/testers\/rubytest\/RubyTester.hh"$/;"	v	class:RubyTester
cxx_header	src/cpu/testers/traffic_gen/TrafficGen.py	/^    cxx_header = "cpu\/testers\/traffic_gen\/traffic_gen.hh"$/;"	v	class:TrafficGen
cxx_header	src/dev/BadDevice.py	/^    cxx_header = "dev\/baddev.hh"$/;"	v	class:BadDevice
cxx_header	src/dev/CopyEngine.py	/^    cxx_header = "dev\/copy_engine.hh"$/;"	v	class:CopyEngine
cxx_header	src/dev/Device.py	/^    cxx_header = "dev\/io_device.hh"$/;"	v	class:BasicPioDevice
cxx_header	src/dev/Device.py	/^    cxx_header = "dev\/io_device.hh"$/;"	v	class:DmaDevice
cxx_header	src/dev/Device.py	/^    cxx_header = "dev\/io_device.hh"$/;"	v	class:PioDevice
cxx_header	src/dev/Device.py	/^    cxx_header = "dev\/isa_fake.hh"$/;"	v	class:IsaFake
cxx_header	src/dev/DiskImage.py	/^    cxx_header = "dev\/disk_image.hh"$/;"	v	class:CowDiskImage
cxx_header	src/dev/DiskImage.py	/^    cxx_header = "dev\/disk_image.hh"$/;"	v	class:DiskImage
cxx_header	src/dev/DiskImage.py	/^    cxx_header = "dev\/disk_image.hh"$/;"	v	class:RawDiskImage
cxx_header	src/dev/Ethernet.py	/^    cxx_header = "dev\/etherbus.hh"$/;"	v	class:EtherBus
cxx_header	src/dev/Ethernet.py	/^    cxx_header = "dev\/etherdevice.hh"$/;"	v	class:EtherDevBase
cxx_header	src/dev/Ethernet.py	/^    cxx_header = "dev\/etherdevice.hh"$/;"	v	class:EtherDevice
cxx_header	src/dev/Ethernet.py	/^    cxx_header = "dev\/etherdump.hh"$/;"	v	class:EtherDump
cxx_header	src/dev/Ethernet.py	/^    cxx_header = "dev\/etherlink.hh"$/;"	v	class:EtherLink
cxx_header	src/dev/Ethernet.py	/^    cxx_header = "dev\/etherobject.hh"$/;"	v	class:EtherObject
cxx_header	src/dev/Ethernet.py	/^    cxx_header = "dev\/ethertap.hh"$/;"	v	class:EtherTap
cxx_header	src/dev/Ethernet.py	/^    cxx_header = "dev\/i8254xGBe.hh"$/;"	v	class:IGbE
cxx_header	src/dev/Ethernet.py	/^    cxx_header = "dev\/ns_gige.hh"$/;"	v	class:NSGigE
cxx_header	src/dev/Ethernet.py	/^    cxx_header = "dev\/sinic.hh"$/;"	v	class:Sinic
cxx_header	src/dev/Ide.py	/^    cxx_header = "dev\/ide_ctrl.hh"$/;"	v	class:IdeController
cxx_header	src/dev/Ide.py	/^    cxx_header = "dev\/ide_disk.hh"$/;"	v	class:IdeDisk
cxx_header	src/dev/Pci.py	/^    cxx_header = "dev\/pciconfigall.hh"$/;"	v	class:PciConfigAll
cxx_header	src/dev/Pci.py	/^    cxx_header = "dev\/pcidev.hh"$/;"	v	class:PciDevice
cxx_header	src/dev/Platform.py	/^    cxx_header = "dev\/platform.hh"$/;"	v	class:Platform
cxx_header	src/dev/SimpleDisk.py	/^    cxx_header = "dev\/simple_disk.hh"$/;"	v	class:SimpleDisk
cxx_header	src/dev/Terminal.py	/^    cxx_header = "dev\/terminal.hh"$/;"	v	class:Terminal
cxx_header	src/dev/Uart.py	/^    cxx_header = "dev\/uart.hh"$/;"	v	class:Uart
cxx_header	src/dev/Uart.py	/^    cxx_header = "dev\/uart8250.hh"$/;"	v	class:Uart8250
cxx_header	src/dev/alpha/AlphaBackdoor.py	/^    cxx_header = "dev\/alpha\/backdoor.hh"$/;"	v	class:AlphaBackdoor
cxx_header	src/dev/alpha/Tsunami.py	/^    cxx_header = "dev\/alpha\/tsunami.hh"$/;"	v	class:Tsunami
cxx_header	src/dev/alpha/Tsunami.py	/^    cxx_header = "dev\/alpha\/tsunami_cchip.hh"$/;"	v	class:TsunamiCChip
cxx_header	src/dev/alpha/Tsunami.py	/^    cxx_header = "dev\/alpha\/tsunami_io.hh"$/;"	v	class:TsunamiIO
cxx_header	src/dev/alpha/Tsunami.py	/^    cxx_header = "dev\/alpha\/tsunami_pchip.hh"$/;"	v	class:TsunamiPChip
cxx_header	src/dev/arm/Gic.py	/^    cxx_header = "dev\/arm\/base_gic.hh"$/;"	v	class:BaseGic
cxx_header	src/dev/arm/Gic.py	/^    cxx_header = "dev\/arm\/gic_pl390.hh"$/;"	v	class:Pl390
cxx_header	src/dev/arm/RealView.py	/^    cxx_header = "dev\/arm\/a9scu.hh"$/;"	v	class:A9SCU
cxx_header	src/dev/arm/RealView.py	/^    cxx_header = "dev\/arm\/amba_device.hh"$/;"	v	class:AmbaDmaDevice
cxx_header	src/dev/arm/RealView.py	/^    cxx_header = "dev\/arm\/amba_device.hh"$/;"	v	class:AmbaIntDevice
cxx_header	src/dev/arm/RealView.py	/^    cxx_header = "dev\/arm\/amba_device.hh"$/;"	v	class:AmbaPioDevice
cxx_header	src/dev/arm/RealView.py	/^    cxx_header = "dev\/arm\/amba_fake.hh"$/;"	v	class:AmbaFake
cxx_header	src/dev/arm/RealView.py	/^    cxx_header = "dev\/arm\/generic_timer.hh"$/;"	v	class:GenericTimer
cxx_header	src/dev/arm/RealView.py	/^    cxx_header = "dev\/arm\/hdlcd.hh"$/;"	v	class:HDLcd
cxx_header	src/dev/arm/RealView.py	/^    cxx_header = "dev\/arm\/kmi.hh"$/;"	v	class:Pl050
cxx_header	src/dev/arm/RealView.py	/^    cxx_header = "dev\/arm\/pl011.hh"$/;"	v	class:Pl011
cxx_header	src/dev/arm/RealView.py	/^    cxx_header = "dev\/arm\/pl111.hh"$/;"	v	class:Pl111
cxx_header	src/dev/arm/RealView.py	/^    cxx_header = "dev\/arm\/realview.hh"$/;"	v	class:RealView
cxx_header	src/dev/arm/RealView.py	/^    cxx_header = "dev\/arm\/rtc_pl031.hh"$/;"	v	class:PL031
cxx_header	src/dev/arm/RealView.py	/^    cxx_header = "dev\/arm\/rv_ctrl.hh"$/;"	v	class:RealViewCtrl
cxx_header	src/dev/arm/RealView.py	/^    cxx_header = "dev\/arm\/timer_cpulocal.hh"$/;"	v	class:CpuLocalTimer
cxx_header	src/dev/arm/RealView.py	/^    cxx_header = "dev\/arm\/timer_sp804.hh"$/;"	v	class:Sp804
cxx_header	src/dev/arm/RealView.py	/^    cxx_header = "dev\/arm\/vgic.hh"$/;"	v	class:VGic
cxx_header	src/dev/mips/Malta.py	/^    cxx_header = "dev\/mips\/malta.hh"$/;"	v	class:Malta
cxx_header	src/dev/mips/Malta.py	/^    cxx_header = "dev\/mips\/malta_cchip.hh"$/;"	v	class:MaltaCChip
cxx_header	src/dev/mips/Malta.py	/^    cxx_header = "dev\/mips\/malta_io.hh"$/;"	v	class:MaltaIO
cxx_header	src/dev/mips/Malta.py	/^    cxx_header = "dev\/mips\/malta_pchip.hh"$/;"	v	class:MaltaPChip
cxx_header	src/dev/sparc/T1000.py	/^    cxx_header = "dev\/sparc\/dtod.hh"$/;"	v	class:DumbTOD
cxx_header	src/dev/sparc/T1000.py	/^    cxx_header = "dev\/sparc\/iob.hh"$/;"	v	class:Iob
cxx_header	src/dev/sparc/T1000.py	/^    cxx_header = "dev\/sparc\/mm_disk.hh"$/;"	v	class:MmDisk
cxx_header	src/dev/sparc/T1000.py	/^    cxx_header = "dev\/sparc\/t1000.hh"$/;"	v	class:T1000
cxx_header	src/dev/x86/Cmos.py	/^    cxx_header = "dev\/x86\/cmos.hh"$/;"	v	class:Cmos
cxx_header	src/dev/x86/I8042.py	/^    cxx_header = "dev\/x86\/i8042.hh"$/;"	v	class:I8042
cxx_header	src/dev/x86/I82094AA.py	/^    cxx_header = "dev\/x86\/i82094aa.hh"$/;"	v	class:I82094AA
cxx_header	src/dev/x86/I8237.py	/^    cxx_header = "dev\/x86\/i8237.hh"$/;"	v	class:I8237
cxx_header	src/dev/x86/I8254.py	/^    cxx_header = "dev\/x86\/i8254.hh"$/;"	v	class:I8254
cxx_header	src/dev/x86/I8259.py	/^    cxx_header = "dev\/x86\/i8259.hh"$/;"	v	class:I8259
cxx_header	src/dev/x86/Pc.py	/^    cxx_header = "dev\/x86\/pc.hh"$/;"	v	class:Pc
cxx_header	src/dev/x86/PcSpeaker.py	/^    cxx_header = "dev\/x86\/speaker.hh"$/;"	v	class:PcSpeaker
cxx_header	src/dev/x86/SouthBridge.py	/^    cxx_header = "dev\/x86\/south_bridge.hh"$/;"	v	class:SouthBridge
cxx_header	src/dev/x86/X86IntPin.py	/^    cxx_header = "dev\/x86\/intdev.hh"$/;"	v	class:X86IntLine
cxx_header	src/dev/x86/X86IntPin.py	/^    cxx_header = "dev\/x86\/intdev.hh"$/;"	v	class:X86IntSinkPin
cxx_header	src/dev/x86/X86IntPin.py	/^    cxx_header = "dev\/x86\/intdev.hh"$/;"	v	class:X86IntSourcePin
cxx_header	src/mem/AbstractMemory.py	/^    cxx_header = "mem\/abstract_mem.hh"$/;"	v	class:AbstractMemory
cxx_header	src/mem/AddrMapper.py	/^    cxx_header = 'mem\/addr_mapper.hh'$/;"	v	class:AddrMapper
cxx_header	src/mem/AddrMapper.py	/^    cxx_header = 'mem\/addr_mapper.hh'$/;"	v	class:RangeAddrMapper
cxx_header	src/mem/Bridge.py	/^    cxx_header = "mem\/bridge.hh"$/;"	v	class:Bridge
cxx_header	src/mem/Bus.py	/^    cxx_header = "mem\/bus.hh"$/;"	v	class:BaseBus
cxx_header	src/mem/Bus.py	/^    cxx_header = "mem\/coherent_bus.hh"$/;"	v	class:CoherentBus
cxx_header	src/mem/Bus.py	/^    cxx_header = "mem\/noncoherent_bus.hh"$/;"	v	class:NoncoherentBus
cxx_header	src/mem/CommMonitor.py	/^    cxx_header = "mem\/comm_monitor.hh"$/;"	v	class:CommMonitor
cxx_header	src/mem/DRAMCtrl.py	/^    cxx_header = "mem\/dram_ctrl.hh"$/;"	v	class:DRAMCtrl
cxx_header	src/mem/DRAMSim2.py	/^    cxx_header = "mem\/dramsim2.hh"$/;"	v	class:DRAMSim2
cxx_header	src/mem/MemObject.py	/^    cxx_header = "mem\/mem_object.hh"$/;"	v	class:MemObject
cxx_header	src/mem/SimpleMemory.py	/^    cxx_header = "mem\/simple_mem.hh"$/;"	v	class:SimpleMemory
cxx_header	src/mem/cache/BaseCache.py	/^    cxx_header = "mem\/cache\/base.hh"$/;"	v	class:BaseCache
cxx_header	src/mem/cache/prefetch/Prefetcher.py	/^    cxx_header = "mem\/cache\/prefetch\/base.hh"$/;"	v	class:BasePrefetcher
cxx_header	src/mem/cache/prefetch/Prefetcher.py	/^    cxx_header = "mem\/cache\/prefetch\/ghb.hh"$/;"	v	class:GHBPrefetcher
cxx_header	src/mem/cache/prefetch/Prefetcher.py	/^    cxx_header = "mem\/cache\/prefetch\/stride.hh"$/;"	v	class:StridePrefetcher
cxx_header	src/mem/cache/prefetch/Prefetcher.py	/^    cxx_header = "mem\/cache\/prefetch\/tagged.hh"$/;"	v	class:TaggedPrefetcher
cxx_header	src/mem/cache/tags/Tags.py	/^    cxx_header = "mem\/cache\/tags\/base.hh"$/;"	v	class:BaseTags
cxx_header	src/mem/cache/tags/Tags.py	/^    cxx_header = "mem\/cache\/tags\/fa_lru.hh"$/;"	v	class:FALRU
cxx_header	src/mem/cache/tags/Tags.py	/^    cxx_header = "mem\/cache\/tags\/lru.hh"$/;"	v	class:LRU
cxx_header	src/mem/ruby/network/BasicLink.py	/^    cxx_header = "mem\/ruby\/network\/BasicLink.hh"$/;"	v	class:BasicExtLink
cxx_header	src/mem/ruby/network/BasicLink.py	/^    cxx_header = "mem\/ruby\/network\/BasicLink.hh"$/;"	v	class:BasicIntLink
cxx_header	src/mem/ruby/network/BasicLink.py	/^    cxx_header = "mem\/ruby\/network\/BasicLink.hh"$/;"	v	class:BasicLink
cxx_header	src/mem/ruby/network/BasicRouter.py	/^    cxx_header = "mem\/ruby\/network\/BasicRouter.hh"$/;"	v	class:BasicRouter
cxx_header	src/mem/ruby/network/Network.py	/^    cxx_header = "mem\/ruby\/network\/Network.hh"$/;"	v	class:RubyNetwork
cxx_header	src/mem/ruby/network/fault_model/FaultModel.py	/^    cxx_header = "mem\/ruby\/network\/fault_model\/FaultModel.hh"$/;"	v	class:FaultModel
cxx_header	src/mem/ruby/network/garnet/BaseGarnetNetwork.py	/^    cxx_header = "mem\/ruby\/network\/garnet\/BaseGarnetNetwork.hh"$/;"	v	class:BaseGarnetNetwork
cxx_header	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.py	/^    cxx_header = "mem\/ruby\/network\/garnet\/fixed-pipeline\/CreditLink_d.hh"$/;"	v	class:CreditLink_d
cxx_header	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.py	/^    cxx_header = "mem\/ruby\/network\/garnet\/fixed-pipeline\/GarnetLink_d.hh"$/;"	v	class:GarnetExtLink_d
cxx_header	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.py	/^    cxx_header = "mem\/ruby\/network\/garnet\/fixed-pipeline\/GarnetLink_d.hh"$/;"	v	class:GarnetIntLink_d
cxx_header	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.py	/^    cxx_header = "mem\/ruby\/network\/garnet\/fixed-pipeline\/NetworkLink_d.hh"$/;"	v	class:NetworkLink_d
cxx_header	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.py	/^    cxx_header = "mem\/ruby\/network\/garnet\/fixed-pipeline\/GarnetNetwork_d.hh"$/;"	v	class:GarnetNetwork_d
cxx_header	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.py	/^    cxx_header = "mem\/ruby\/network\/garnet\/fixed-pipeline\/NetworkInterface_d.hh"$/;"	v	class:GarnetNetworkInterface_d
cxx_header	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.py	/^    cxx_header = "mem\/ruby\/network\/garnet\/fixed-pipeline\/Router_d.hh"$/;"	v	class:GarnetRouter_d
cxx_header	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.py	/^    cxx_header = "mem\/ruby\/network\/garnet\/flexible-pipeline\/GarnetLink.hh"$/;"	v	class:GarnetExtLink
cxx_header	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.py	/^    cxx_header = "mem\/ruby\/network\/garnet\/flexible-pipeline\/GarnetLink.hh"$/;"	v	class:GarnetIntLink
cxx_header	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.py	/^    cxx_header = "mem\/ruby\/network\/garnet\/flexible-pipeline\/NetworkLink.hh"$/;"	v	class:NetworkLink
cxx_header	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.py	/^    cxx_header = "mem\/ruby\/network\/garnet\/flexible-pipeline\/GarnetNetwork.hh"$/;"	v	class:GarnetNetwork
cxx_header	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.py	/^    cxx_header = "mem\/ruby\/network\/garnet\/flexible-pipeline\/NetworkInterface.hh"$/;"	v	class:GarnetNetworkInterface
cxx_header	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.py	/^    cxx_header = "mem\/ruby\/network\/garnet\/flexible-pipeline\/Router.hh"$/;"	v	class:GarnetRouter
cxx_header	src/mem/ruby/network/simple/SimpleLink.py	/^    cxx_header = "mem\/ruby\/network\/simple\/SimpleLink.hh"$/;"	v	class:SimpleExtLink
cxx_header	src/mem/ruby/network/simple/SimpleLink.py	/^    cxx_header = "mem\/ruby\/network\/simple\/SimpleLink.hh"$/;"	v	class:SimpleIntLink
cxx_header	src/mem/ruby/network/simple/SimpleNetwork.py	/^    cxx_header = "mem\/ruby\/network\/simple\/SimpleNetwork.hh"$/;"	v	class:SimpleNetwork
cxx_header	src/mem/ruby/network/simple/SimpleNetwork.py	/^    cxx_header = 'mem\/ruby\/network\/simple\/Switch.hh'$/;"	v	class:Switch
cxx_header	src/mem/ruby/slicc_interface/Controller.py	/^    cxx_header = "mem\/ruby\/slicc_interface\/AbstractController.hh"$/;"	v	class:RubyController
cxx_header	src/mem/ruby/structures/RubyPrefetcher.py	/^    cxx_header = "mem\/ruby\/structures\/Prefetcher.hh"$/;"	v	class:Prefetcher
cxx_header	src/mem/ruby/system/Cache.py	/^    cxx_header = "mem\/ruby\/system\/CacheMemory.hh"$/;"	v	class:RubyCache
cxx_header	src/mem/ruby/system/DirectoryMemory.py	/^    cxx_header = "mem\/ruby\/system\/DirectoryMemory.hh"$/;"	v	class:RubyDirectoryMemory
cxx_header	src/mem/ruby/system/MemoryControl.py	/^    cxx_header = "mem\/ruby\/system\/MemoryControl.hh"$/;"	v	class:MemoryControl
cxx_header	src/mem/ruby/system/RubyMemoryControl.py	/^    cxx_header = "mem\/ruby\/system\/RubyMemoryControl.hh"$/;"	v	class:RubyMemoryControl
cxx_header	src/mem/ruby/system/RubySystem.py	/^    cxx_header = "mem\/ruby\/system\/System.hh"$/;"	v	class:RubySystem
cxx_header	src/mem/ruby/system/Sequencer.py	/^    cxx_header = "mem\/ruby\/system\/DMASequencer.hh"$/;"	v	class:DMASequencer
cxx_header	src/mem/ruby/system/Sequencer.py	/^    cxx_header = "mem\/ruby\/system\/RubyPort.hh"$/;"	v	class:RubyPort
cxx_header	src/mem/ruby/system/Sequencer.py	/^    cxx_header = "mem\/ruby\/system\/RubyPortProxy.hh"$/;"	v	class:RubyPortProxy
cxx_header	src/mem/ruby/system/Sequencer.py	/^    cxx_header = "mem\/ruby\/system\/Sequencer.hh"$/;"	v	class:RubySequencer
cxx_header	src/mem/ruby/system/WireBuffer.py	/^    cxx_header = "mem\/ruby\/system\/WireBuffer.hh"$/;"	v	class:RubyWireBuffer
cxx_header	src/python/m5/SimObject.py	/^    cxx_header = "sim\/sim_object.hh"$/;"	v	class:SimObject
cxx_header	src/sim/BaseTLB.py	/^    cxx_header = "sim\/tlb.hh"$/;"	v	class:BaseTLB
cxx_header	src/sim/ClockDomain.py	/^    cxx_header = "sim\/clock_domain.hh"$/;"	v	class:ClockDomain
cxx_header	src/sim/ClockDomain.py	/^    cxx_header = "sim\/clock_domain.hh"$/;"	v	class:DerivedClockDomain
cxx_header	src/sim/ClockDomain.py	/^    cxx_header = "sim\/clock_domain.hh"$/;"	v	class:SrcClockDomain
cxx_header	src/sim/ClockedObject.py	/^    cxx_header = "sim\/clocked_object.hh"$/;"	v	class:ClockedObject
cxx_header	src/sim/InstTracer.py	/^    cxx_header = "sim\/insttracer.hh"$/;"	v	class:InstTracer
cxx_header	src/sim/Process.py	/^    cxx_header = "sim\/process.hh"$/;"	v	class:LiveProcess
cxx_header	src/sim/Process.py	/^    cxx_header = "sim\/process.hh"$/;"	v	class:Process
cxx_header	src/sim/Root.py	/^    cxx_header = "sim\/root.hh"$/;"	v	class:Root
cxx_header	src/sim/System.py	/^    cxx_header = "sim\/system.hh"$/;"	v	class:System
cxx_header	src/sim/VoltageDomain.py	/^    cxx_header = "sim\/voltage_domain.hh"$/;"	v	class:VoltageDomain
cxx_header	src/sim/probe/Probe.py	/^    cxx_header = 'sim\/probe\/probe.hh'$/;"	v	class:ProbeListenerObject
cxx_param_decl	src/python/m5/SimObject.py	/^    def cxx_param_decl(cls, code):$/;"	m	class:MetaSimObject
cxx_predecls	src/python/m5/SimObject.py	/^    def cxx_predecls(cls, code):$/;"	m	class:MetaSimObject
cxx_predecls	src/python/m5/params.py	/^    def cxx_predecls(cls, code):$/;"	m	class:AddrRange
cxx_predecls	src/python/m5/params.py	/^    def cxx_predecls(cls, code):$/;"	m	class:CheckedInt
cxx_predecls	src/python/m5/params.py	/^    def cxx_predecls(cls, code):$/;"	m	class:Enum
cxx_predecls	src/python/m5/params.py	/^    def cxx_predecls(cls, code):$/;"	m	class:EthernetAddr
cxx_predecls	src/python/m5/params.py	/^    def cxx_predecls(cls, code):$/;"	m	class:IpAddress
cxx_predecls	src/python/m5/params.py	/^    def cxx_predecls(cls, code):$/;"	m	class:IpNetmask
cxx_predecls	src/python/m5/params.py	/^    def cxx_predecls(cls, code):$/;"	m	class:IpWithPort
cxx_predecls	src/python/m5/params.py	/^    def cxx_predecls(cls, code):$/;"	m	class:ParamValue
cxx_predecls	src/python/m5/params.py	/^    def cxx_predecls(cls, code):$/;"	m	class:TickParamValue
cxx_predecls	src/python/m5/params.py	/^    def cxx_predecls(cls, code):$/;"	m	class:Time
cxx_predecls	src/python/m5/params.py	/^    def cxx_predecls(self, code):$/;"	m	class:ParamDesc
cxx_predecls	src/python/m5/params.py	/^    def cxx_predecls(self, code):$/;"	m	class:Port
cxx_predecls	src/python/m5/params.py	/^    def cxx_predecls(self, code):$/;"	m	class:String
cxx_predecls	src/python/m5/params.py	/^    def cxx_predecls(self, code):$/;"	m	class:VectorParamDesc
cxx_type	src/python/m5/params.py	/^    cxx_type = 'Addr'$/;"	v	class:Addr
cxx_type	src/python/m5/params.py	/^    cxx_type = 'AddrRange'$/;"	v	class:AddrRange
cxx_type	src/python/m5/params.py	/^    cxx_type = 'Cycles'$/;"	v	class:Cycles
cxx_type	src/python/m5/params.py	/^    cxx_type = 'Net::EthAddr'$/;"	v	class:EthernetAddr
cxx_type	src/python/m5/params.py	/^    cxx_type = 'Net::IpAddress'$/;"	v	class:IpAddress
cxx_type	src/python/m5/params.py	/^    cxx_type = 'Net::IpNetmask'$/;"	v	class:IpNetmask
cxx_type	src/python/m5/params.py	/^    cxx_type = 'Net::IpWithPort'$/;"	v	class:IpWithPort
cxx_type	src/python/m5/params.py	/^    cxx_type = 'Tick'$/;"	v	class:TickParamValue
cxx_type	src/python/m5/params.py	/^    cxx_type = 'bool'$/;"	v	class:Bool
cxx_type	src/python/m5/params.py	/^    cxx_type = 'double'$/;"	v	class:Float
cxx_type	src/python/m5/params.py	/^    cxx_type = 'double'$/;"	v	class:Voltage
cxx_type	src/python/m5/params.py	/^    cxx_type = 'float'$/;"	v	class:MemoryBandwidth
cxx_type	src/python/m5/params.py	/^    cxx_type = 'float'$/;"	v	class:NetworkBandwidth
cxx_type	src/python/m5/params.py	/^    cxx_type = 'std::string'$/;"	v	class:String
cxx_type	src/python/m5/params.py	/^    cxx_type = 'tm'$/;"	v	class:Time
cxx_type	src/python/m5/params.py	/^    cxx_type = 'uint32_t'$/;"	v	class:MemorySize32
cxx_type	src/python/m5/params.py	/^    cxx_type = 'uint64_t'$/;"	v	class:MemorySize
cycle	src/sim/clocked_object.hh	/^    mutable Cycles cycle;$/;"	m	class:ClockedObject
cycle_count	src/cpu/m5legion_interface.h	/^    uint64_t cycle_count;$/;"	m	struct:__anon55
cyl_high	src/dev/ide_disk.hh	/^    uint8_t cyl_high;$/;"	m	struct:CommandReg
cyl_low	src/dev/ide_disk.hh	/^    uint8_t cyl_low;$/;"	m	struct:CommandReg
d	src/arch/arm/miscregs.hh	/^        Bitfield<9> d;          \/\/ AArch64$/;"	m	namespace:ArmISA
d	src/arch/mips/dt_constants.hh	/^    Bitfield<25>     d;$/;"	m	namespace:MipsISA
d	src/arch/mips/pra_constants.hh	/^    Bitfield<2>      d;     \/\/ Dirty Bit$/;"	m	namespace:MipsISA
d	src/arch/power/types.hh	/^    Bitfield<15,  0> d;$/;"	m	namespace:PowerISA
d	src/arch/x86/pagetable_walker.cc	/^    Bitfield<6> d;$/;"	m	namespace:X86ISA	file:
d	src/arch/x86/regs/misc.hh	/^        Bitfield<54> d; \/\/ Default Operand Size$/;"	m	namespace:X86ISA
d	src/cpu/o3/regfile.hh	/^        FloatReg d;$/;"	m	union:PhysRegFile::__anon58
d	src/python/m5/util/sorteddict.py	/^    d = SortedDict(x=24,e=5,j=4,b=2,z=26,d=4)$/;"	v	class:SortedDict
d1	src/dev/i8254xGBe_defs.hh	/^    uint64_t d1;$/;"	m	struct:iGbReg::TxDesc
d1s	src/dev/pcireg.h	/^        Bitfield<9>     d1s;$/;"	m	struct:PMCAP
d2	src/dev/i8254xGBe_defs.hh	/^    uint64_t d2;$/;"	m	struct:iGbReg::TxDesc
d2i	src/cpu/ozone/back_end.hh	/^    TimeBuffer<DispatchToIssue> d2i;$/;"	m	class:BackEnd
d2i	src/cpu/ozone/lw_back_end.hh	/^    TimeBuffer<DispatchToIssue> d2i;$/;"	m	class:LWBackEnd
d2s	src/dev/pcireg.h	/^        Bitfield<10>    d2s;$/;"	m	struct:PMCAP
d32dis	src/arch/arm/miscregs.hh	/^        Bitfield<30> d32dis;$/;"	m	namespace:ArmISA
dCacheLineSize	src/arch/arm/miscregs.hh	/^      Bitfield<19,16> dCacheLineSize;$/;"	m	namespace:ArmISA
d_ino	src/kern/tru64/tru64.hh	/^        ino_t d_ino;            \/\/!< file number of entry$/;"	m	struct:Tru64::dirent
d_name	src/kern/tru64/tru64.hh	/^        char d_name[256];       \/\/!< dummy name length$/;"	m	struct:Tru64::dirent
d_namlen	src/kern/tru64/tru64.hh	/^        uint16_t d_namlen;      \/\/!< length of string in d_name$/;"	m	struct:Tru64::dirent
d_reclen	src/kern/tru64/tru64.hh	/^        uint16_t d_reclen;      \/\/!< length of this record$/;"	m	struct:Tru64::dirent
da	src/arch/mips/mt_constants.hh	/^    Bitfield<15>     da;$/;"	m	namespace:MipsISA
da	src/arch/mips/pra_constants.hh	/^    Bitfield<9,  7>  da;$/;"	m	namespace:MipsISA
dacr	src/arch/arm/tlb.hh	/^    uint32_t dacr;$/;"	m	class:ArmISA::TLB
daif	src/arch/arm/miscregs.hh	/^        Bitfield<9, 6> daif;    \/\/ AArch64$/;"	m	namespace:ArmISA
data	src/arch/arm/decoder.hh	/^    MachInst data;$/;"	m	class:ArmISA::Decoder
data	src/arch/arm/stage2_mmu.hh	/^        uint8_t   *data;$/;"	m	class:ArmISA::Stage2MMU::Stage2Translation
data	src/arch/arm/table_walker.hh	/^        uint32_t     data;$/;"	m	class:ArmISA::TableWalker::L2Descriptor
data	src/arch/arm/table_walker.hh	/^        uint32_t data;$/;"	m	class:ArmISA::TableWalker::L1Descriptor
data	src/arch/arm/table_walker.hh	/^        uint64_t data;$/;"	m	class:ArmISA::TableWalker::LongDescriptor
data	src/arch/x86/insts/microldstop.hh	/^        const RegIndex data;$/;"	m	class:X86ISA::LdStOp
data	src/base/bitmap.hh	/^    uint8_t *data;$/;"	m	class:Bitmap
data	src/base/cp_annotate.hh	/^        uint32_t data;$/;"	m	struct:CPA::AnnotateData
data	src/base/cp_annotate.hh	/^    AnnotateList data;$/;"	m	class:CPA
data	src/base/inet.hh	/^    const uint8_t *data() const { return opt_data.data8; }$/;"	f	struct:Net::IpOpt
data	src/base/inet.hh	/^    const uint8_t *data() const { return opt_data.data8; }$/;"	f	struct:Net::TcpOpt
data	src/base/loader/object_file.hh	/^    Section data;$/;"	m	class:ObjectFile
data	src/base/refcnt.hh	/^    T *data;$/;"	m	class:RefCountingPtr
data	src/base/statistics.hh	/^    Counter data;$/;"	m	class:Stats::StatStor
data	src/base/statistics.hh	/^    Storage *data(off_type index) { return &storage[index]; }$/;"	f	class:Stats::Vector2dBase
data	src/base/statistics.hh	/^    Storage *data(off_type index) { return &storage[index]; }$/;"	f	class:Stats::VectorBase
data	src/base/statistics.hh	/^    const ScalarInfo *data;$/;"	m	class:Stats::ScalarStatNode
data	src/base/statistics.hh	/^    const Storage *data(off_type index) const { return &storage[index]; }$/;"	f	class:Stats::Vector2dBase
data	src/base/statistics.hh	/^    const Storage *data(off_type index) const { return &storage[index]; }$/;"	f	class:Stats::VectorBase
data	src/base/statistics.hh	/^    const VectorInfo *data;$/;"	m	class:Stats::VectorStatNode
data	src/base/statistics.hh	/^    const typename Stat::Storage *data() const { return stat.data(index); }$/;"	f	class:Stats::DistProxy
data	src/base/statistics.hh	/^    data() const$/;"	f	class:Stats::DistBase
data	src/base/statistics.hh	/^    data() const$/;"	f	class:Stats::ScalarBase
data	src/base/statistics.hh	/^    data() const$/;"	f	class:Stats::SparseHistBase
data	src/base/statistics.hh	/^    data()$/;"	f	class:Stats::DistBase
data	src/base/statistics.hh	/^    data()$/;"	f	class:Stats::ScalarBase
data	src/base/statistics.hh	/^    data()$/;"	f	class:Stats::SparseHistBase
data	src/base/statistics.hh	/^    data(off_type index) const$/;"	f	class:Stats::VectorDistBase
data	src/base/statistics.hh	/^    data(off_type index) const$/;"	f	class:Stats::VectorProxy
data	src/base/statistics.hh	/^    data(off_type index)$/;"	f	class:Stats::VectorDistBase
data	src/base/statistics.hh	/^    data(off_type index)$/;"	f	class:Stats::VectorProxy
data	src/base/statistics.hh	/^    typename Stat::Storage *data() { return stat.data(index); }$/;"	f	class:Stats::DistProxy
data	src/base/stats/info.hh	/^    DistData data;$/;"	m	class:Stats::DistInfo
data	src/base/stats/info.hh	/^    SparseHistData data;$/;"	m	class:Stats::SparseHistInfo
data	src/base/stats/info.hh	/^    std::vector<DistData> data;$/;"	m	class:Stats::VectorDistInfo
data	src/base/stats/text.cc	/^    const DistData &data;$/;"	m	struct:Stats::DistPrint	file:
data	src/base/stats/text.cc	/^    const SparseHistData &data;$/;"	m	struct:Stats::SparseHistPrint	file:
data	src/base/vnc/vncserver.cc	/^VncServer::data()$/;"	f	class:VncServer
data	src/cpu/o3/lsq_unit.hh	/^        char data[16];$/;"	m	struct:LSQUnit::SQEntry
data	src/cpu/ozone/lsq_unit.hh	/^        IntReg data;$/;"	m	struct:OzoneLSQ::SQEntry
data	src/cpu/ozone/lw_lsq.hh	/^        IntReg data;$/;"	m	struct:OzoneLWLSQ::SQEntry
data	src/cpu/testers/memtest/memtest.hh	/^        uint8_t *data;$/;"	m	class:MemTest::MemTestSenderState
data	src/cpu/testers/networktest/networktest.hh	/^        uint8_t *data;$/;"	m	class:NetworkTest::NetworkTestSenderState
data	src/cpu/timebuf.hh	/^    char *data;$/;"	m	class:TimeBuffer
data	src/cpu/translation.hh	/^    uint8_t *data;$/;"	m	class:WholeTranslationState
data	src/dev/disk_image.hh	/^        uint8_t data[SectorSize];$/;"	m	struct:CowDiskImage::Sector
data	src/dev/etherpkt.hh	/^    uint8_t *data;$/;"	m	class:EthPacketData
data	src/dev/ide_disk.hh	/^    uint16_t data;$/;"	m	struct:CommandReg
data	src/dev/pcireg.h	/^        Bitfield<15,0> data;$/;"	m	struct:MSICAP
data	src/dev/pcireg.h	/^    uint32_t data[4];$/;"	m	union:MSIXTable
data	src/dev/pcireg.h	/^    uint8_t data[64];$/;"	m	union:PCIConfig
data	src/dev/terminal.cc	/^Terminal::data()$/;"	f	class:Terminal
data	src/mem/cache/blk.hh	/^    uint8_t *data;$/;"	m	class:CacheBlk
data	src/mem/cache/mshr.hh	/^    uint8_t *data;$/;"	m	class:MSHR
data	src/mem/packet.hh	/^    PacketDataPtr data;$/;"	m	class:Packet
data	src/mem/ruby/slicc_interface/RubyRequest.hh	/^    uint8_t* data;$/;"	m	class:RubyRequest
data	src/mem/ruby/system/DMASequencer.hh	/^    uint8_t *data;$/;"	m	struct:DMARequest
data	src/sim/arguments.hh	/^        std::list<char *> data;$/;"	m	class:Arguments::Data
data	src/sim/arguments.hh	/^    RefCountingPtr<Data> data;$/;"	m	class:Arguments
data	src/sim/insttracer.hh	/^    } data;$/;"	m	class:Trace::InstRecord	typeref:union:Trace::InstRecord::__anon104
dataAccessLatency	src/mem/ruby/system/Cache.py	/^    dataAccessLatency = Param.Cycles(1, "cycles for a data array access")$/;"	v	class:RubyCache
dataAccesses	src/mem/cache/tags/base.hh	/^    Stats::Scalar dataAccesses;$/;"	m	class:BaseTags
dataArray	src/mem/ruby/system/CacheMemory.hh	/^    BankedArray dataArray;$/;"	m	class:CacheMemory
dataArrayBanks	src/mem/ruby/system/Cache.py	/^    dataArrayBanks = Param.Int(1, "Number of banks for the data array")$/;"	v	class:RubyCache
dataAvailable	src/dev/arm/pl011.cc	/^Pl011::dataAvailable()$/;"	f	class:Pl011
dataAvailable	src/dev/terminal.hh	/^    bool dataAvailable() { return !rxbuf.empty(); }$/;"	f	class:Terminal
dataAvailable	src/dev/uart8250.cc	/^Uart8250::dataAvailable()$/;"	f	class:Uart8250
dataBase	src/base/loader/object_file.hh	/^    Addr dataBase() const { return data.baseAddr; }$/;"	f	class:ObjectFile
dataBlks	src/mem/cache/tags/lru.hh	/^    uint8_t *dataBlks;$/;"	m	class:LRU
dataBuffer	src/dev/ide_disk.hh	/^    uint8_t *dataBuffer;$/;"	m	class:IdeDisk
dataCallback	src/mem/ruby/system/DMASequencer.cc	/^DMASequencer::dataCallback(const DataBlock & dblk)$/;"	f	class:DMASequencer
dataDynamic	src/mem/packet.hh	/^    dataDynamic(T *p)$/;"	f	class:Packet
dataDynamicArray	src/mem/packet.hh	/^    dataDynamicArray(T *p)$/;"	f	class:Packet
dataEvent	src/base/vnc/vncserver.hh	/^    DataEvent *dataEvent;$/;"	m	class:VncServer
dataEvent	src/dev/terminal.hh	/^    DataEvent *dataEvent;$/;"	m	class:Terminal
dataFd	src/base/vnc/vncserver.hh	/^    int dataFd; \/\/ data stream file describer$/;"	m	class:VncServer
dataLimit	src/cpu/testers/traffic_gen/generators.hh	/^    const Addr dataLimit;$/;"	m	class:LinearGen
dataLimit	src/cpu/testers/traffic_gen/generators.hh	/^    const Addr dataLimit;$/;"	m	class:RandomGen
dataManipulated	src/cpu/testers/traffic_gen/generators.hh	/^    Addr dataManipulated;$/;"	m	class:LinearGen
dataManipulated	src/cpu/testers/traffic_gen/generators.hh	/^    Addr dataManipulated;$/;"	m	class:RandomGen
dataMasterId	src/cpu/base.hh	/^    MasterID dataMasterId() { return _dataMasterId; }$/;"	f	class:BaseCPU
dataMemReq	src/cpu/inorder/inorder_dyn_inst.hh	/^    RequestPtr dataMemReq;$/;"	m	class:InOrderDynInst
dataMemberType	src/mem/slicc/symbols/Type.py	/^    def dataMemberType(self, ident):$/;"	m	class:Type
dataPkt	src/cpu/inorder/resources/cache_unit.hh	/^    CacheReqPacket *dataPkt;$/;"	m	class:CacheRequest
dataPort	src/cpu/inorder/cpu.hh	/^    CachePort dataPort;$/;"	m	class:InOrderCPU
dataPort	src/cpu/kvm/base.hh	/^    KVMCpuPort dataPort;$/;"	m	class:BaseKvmCPU
dataPort	src/dev/x86/i8042.hh	/^    Addr dataPort;$/;"	m	class:X86ISA::I8042
dataRAMSetup	src/arch/arm/miscregs.hh	/^      Bitfield<5>     dataRAMSetup;$/;"	m	namespace:ArmISA
dataRAMSlice	src/arch/arm/miscregs.hh	/^      Bitfield<11,10> dataRAMSlice;$/;"	m	namespace:ArmISA
dataReg	src/dev/x86/i8042.hh	/^    uint8_t dataReg;$/;"	m	class:X86ISA::I8042
dataSize	src/arch/arm/insts/macromem.hh	/^    uint8_t eSize, dataSize, numStructElems, index;$/;"	m	class:ArmISA::VldSingleOp64
dataSize	src/arch/arm/insts/macromem.hh	/^    uint8_t eSize, dataSize, numStructElems, index;$/;"	m	class:ArmISA::VstSingleOp64
dataSize	src/arch/arm/insts/macromem.hh	/^    uint8_t eSize, dataSize, numStructElems, lane, step;$/;"	m	class:ArmISA::MicroNeonMixLaneOp64
dataSize	src/arch/arm/insts/macromem.hh	/^    uint8_t eSize, dataSize, numStructElems, numRegs, step;$/;"	m	class:ArmISA::MicroNeonMixOp64
dataSize	src/arch/arm/insts/macromem.hh	/^    uint8_t eSize, dataSize, numStructElems, numRegs;$/;"	m	class:ArmISA::VldMultOp64
dataSize	src/arch/arm/insts/macromem.hh	/^    uint8_t eSize, dataSize, numStructElems, numRegs;$/;"	m	class:ArmISA::VstMultOp64
dataSize	src/arch/x86/emulenv.hh	/^        int dataSize;$/;"	m	struct:X86ISA::EmulEnv
dataSize	src/arch/x86/insts/microfpop.hh	/^        const uint8_t dataSize;$/;"	m	class:X86ISA::FpOp
dataSize	src/arch/x86/insts/microldstop.hh	/^        const uint8_t dataSize;$/;"	m	class:X86ISA::LdStOp
dataSize	src/arch/x86/insts/microregop.hh	/^        const uint8_t dataSize;$/;"	m	class:X86ISA::RegOpBase
dataSize	src/arch/x86/pagetable_walker.hh	/^            int dataSize;$/;"	m	class:X86ISA::Walker::WalkerState
dataSize	src/base/loader/object_file.hh	/^    size_t dataSize() const { return data.size; }$/;"	f	class:ObjectFile
dataStatic	src/mem/packet.hh	/^    dataStatic(T *p)$/;"	f	class:Packet
dataThroughBus	src/mem/coherent_bus.hh	/^    Stats::Scalar dataThroughBus;$/;"	m	class:CoherentBus
dataThroughBus	src/mem/noncoherent_bus.hh	/^    Stats::Scalar dataThroughBus;$/;"	m	class:NoncoherentBus
dataUnit	src/cpu/inorder/resource_pool.hh	/^    CacheUnit *dataUnit;$/;"	m	class:ResourcePool
data_accesses	src/arch/alpha/tlb.hh	/^    Stats::Formula data_accesses;$/;"	m	class:AlphaISA::TLB
data_accesses_only	src/mem/cache/prefetch/Prefetcher.py	/^    data_accesses_only = Param.Bool(False,$/;"	v	class:BasePrefetcher
data_acv	src/arch/alpha/tlb.hh	/^    Stats::Formula data_acv;$/;"	m	class:AlphaISA::TLB
data_corruption__all_bits	src/mem/ruby/network/fault_model/FaultModel.hh	/^        data_corruption__all_bits,$/;"	e	enum:FaultModel::fault_type
data_corruption__few_bits	src/mem/ruby/network/fault_model/FaultModel.hh	/^        data_corruption__few_bits,$/;"	e	enum:FaultModel::fault_type
data_fd	src/dev/terminal.hh	/^    int data_fd;$/;"	m	class:Terminal
data_hits	src/arch/alpha/tlb.hh	/^    Stats::Formula data_hits;$/;"	m	class:AlphaISA::TLB
data_in	src/dev/arm/kmi.hh	/^        Bitfield<0> data_in;$/;"	m	class:Pl050
data_len	src/dev/ethertap.hh	/^    uint32_t data_len;$/;"	m	class:EtherTap
data_misses	src/arch/alpha/tlb.hh	/^    Stats::Formula data_misses;$/;"	m	class:AlphaISA::TLB
data_polarity	src/dev/arm/hdlcd.hh	/^        Bitfield<3>    data_polarity;$/;"	m	class:HDLcd
data_port	src/dev/x86/I8042.py	/^    data_port = Param.Addr('Data port address')$/;"	v	class:I8042
data_read_req	src/cpu/simple/atomic.hh	/^    Request data_read_req;$/;"	m	class:AtomicSimpleCPU
data_start	src/arch/alpha/aout_machdep.h	/^    uint64_t    data_start;     \/\/\/< data base address$/;"	m	struct:aout_exechdr
data_start	src/base/loader/exec_ecoff.h	/^        coff_ulong  data_start;$/;"	m	struct:ecoff_aouthdr
data_status	src/sim/insttracer.hh	/^    } data_status;$/;"	m	class:Trace::InstRecord	typeref:enum:Trace::InstRecord::__anon105
data_write_req	src/cpu/simple/atomic.hh	/^    Request data_write_req;$/;"	m	class:AtomicSimpleCPU
dataen_polarity	src/dev/arm/hdlcd.hh	/^        Bitfield<2>    dataen_polarity;$/;"	m	class:HDLcd
date	src/base/time.cc	/^Time::date(const string &format) const$/;"	f	class:Time
date	src/python/m5/params.py	/^    from datetime import datetime, date$/;"	i
datetime	src/python/m5/main.py	/^import datetime$/;"	i
datetime	src/python/m5/params.py	/^    from datetime import datetime, date$/;"	i
datetime	src/python/m5/params.py	/^import datetime$/;"	i
db	src/sim/serialize.hh	/^    IniFile *db;$/;"	m	class:Checkpoint
dbd	src/arch/mips/dt_constants.hh	/^    Bitfield<31>     dbd;$/;"	m	namespace:MipsISA
dbgHeader	src/arch/arm/table_walker.hh	/^        virtual std::string dbgHeader() const$/;"	f	class:ArmISA::TableWalker::L1Descriptor
dbgHeader	src/arch/arm/table_walker.hh	/^        virtual std::string dbgHeader() const$/;"	f	class:ArmISA::TableWalker::L2Descriptor
dbgHeader	src/arch/arm/table_walker.hh	/^        virtual std::string dbgHeader() const$/;"	f	class:ArmISA::TableWalker::LongDescriptor
dbg_vtophys	src/cpu/checker/cpu.cc	/^CheckerCPU::dbg_vtophys(Addr addr)$/;"	f	class:CheckerCPU
dbg_vtophys	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::dbg_vtophys(Addr addr)$/;"	f	class:OzoneCPU
dbg_vtophys	src/cpu/simple/base.cc	/^BaseSimpleCPU::dbg_vtophys(Addr addr)$/;"	f	class:BaseSimpleCPU
dbl	src/arch/arm/insts/vfp.hh	/^    dbl(uint32_t low, uint32_t high) const$/;"	f	class:ArmISA::FpOp
dbl	src/cpu/base_dyn_inst.hh	/^        double dbl;$/;"	m	union:BaseDynInst::Result
dbl	src/cpu/checker/cpu.hh	/^        double dbl;$/;"	m	union:CheckerCPU::Result
dblHi	src/arch/arm/insts/vfp.hh	/^    dblHi(double val) const$/;"	f	class:ArmISA::FpOp
dblLow	src/arch/arm/insts/vfp.hh	/^    dblLow(double val) const$/;"	f	class:ArmISA::FpOp
dbp	src/arch/mips/dt_constants.hh	/^    Bitfield<1>      dbp;$/;"	m	namespace:MipsISA
dbusep	src/arch/mips/dt_constants.hh	/^    Bitfield<21>     dbusep;$/;"	m	namespace:MipsISA
dc	src/arch/arm/miscregs.hh	/^        Bitfield<12>     dc;$/;"	m	namespace:ArmISA
dc	src/arch/mips/pra_constants.hh	/^    Bitfield<27>     dc;$/;"	m	namespace:MipsISA
dcache	src/mem/ruby/system/Sequencer.py	/^    dcache = Param.RubyCache("")$/;"	v	class:RubySequencer
dcacheInterface	src/cpu/o3/inst_queue.hh	/^    MemInterface *dcacheInterface;$/;"	m	class:InstructionQueue
dcacheInterface	src/cpu/ozone/back_end.hh	/^    MemInterface *dcacheInterface;$/;"	m	class:BackEnd
dcacheInterface	src/cpu/ozone/inst_queue.hh	/^    MemInterface *dcacheInterface;$/;"	m	class:InstQueue
dcacheInterface	src/cpu/ozone/lsq_unit.hh	/^    MemInterface *dcacheInterface;$/;"	m	class:OzoneLSQ
dcachePort	src/cpu/checker/cpu.hh	/^    MasterPort *dcachePort;$/;"	m	class:CheckerCPU
dcachePort	src/cpu/o3/cpu.hh	/^    DcachePort dcachePort;$/;"	m	class:FullO3CPU
dcachePort	src/cpu/o3/lsq_unit.hh	/^    MasterPort *dcachePort;$/;"	m	class:LSQUnit
dcachePort	src/cpu/ozone/lw_lsq.hh	/^    DcachePort dcachePort;$/;"	m	class:OzoneLWLSQ
dcachePort	src/cpu/simple/atomic.hh	/^    AtomicCPUDPort dcachePort;$/;"	m	class:AtomicSimpleCPU
dcachePort	src/cpu/simple/timing.hh	/^    DcachePort dcachePort;$/;"	m	class:TimingSimpleCPU
dcacheRetryCycles	src/cpu/simple/base.hh	/^    Stats::Scalar dcacheRetryCycles;$/;"	m	class:BaseSimpleCPU
dcacheStallCycles	src/cpu/ozone/inorder_back_end.hh	/^    Stats::Scalar dcacheStallCycles;$/;"	m	class:InorderBackEnd
dcacheStallCycles	src/cpu/simple/base.hh	/^    Stats::Scalar dcacheStallCycles;$/;"	m	class:BaseSimpleCPU
dcache_access	src/cpu/simple/atomic.hh	/^    bool dcache_access;$/;"	m	class:AtomicSimpleCPU
dcache_latency	src/cpu/simple/atomic.hh	/^    Tick dcache_latency;$/;"	m	class:AtomicSimpleCPU
dcache_pkt	src/cpu/simple/timing.hh	/^    PacketPtr dcache_pkt;$/;"	m	class:TimingSimpleCPU
dcache_port	src/cpu/BaseCPU.py	/^    dcache_port = MasterPort("Data Port")$/;"	v
dcdmim	src/dev/arm/pl011.hh	/^        Bitfield<2> dcdmim;$/;"	m	class:Pl011
dcs	src/arch/mips/mt_constants.hh	/^    Bitfield<17>     dcs;$/;"	m	namespace:MipsISA
ddbl	src/arch/mips/dt_constants.hh	/^    Bitfield<2>      ddbl;$/;"	m	namespace:MipsISA
ddblImpr	src/arch/mips/dt_constants.hh	/^    Bitfield<18>     ddblImpr;$/;"	m	namespace:MipsISA
ddbs	src/arch/mips/dt_constants.hh	/^    Bitfield<3>      ddbs;$/;"	m	namespace:MipsISA
ddbsImpr	src/arch/mips/dt_constants.hh	/^    Bitfield<19>     ddbsImpr;$/;"	m	namespace:MipsISA
de	src/arch/x86/regs/misc.hh	/^        Bitfield<3> de; \/\/ Debugging Extensions$/;"	m	namespace:X86ISA
deactivateAll	src/cpu/inorder/resource_pool.9stage.cc	/^ResourcePool::deactivateAll(ThreadID tid)$/;"	f	class:ResourcePool
deactivateContext	src/cpu/inorder/cpu.cc	/^InOrderCPU::deactivateContext(ThreadID tid, Cycles delay)$/;"	f	class:InOrderCPU
deactivateStage	src/cpu/activity.cc	/^ActivityRecorder::deactivateStage(const int idx)$/;"	f	class:ActivityRecorder
deactivateStage	src/cpu/inorder/cpu.hh	/^    void deactivateStage(const int idx)$/;"	f	class:InOrderCPU
deactivateStage	src/cpu/o3/cpu.hh	/^    void deactivateStage(const StageIdx idx)$/;"	f	class:FullO3CPU
deactivateStage	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::deactivateStage()$/;"	f	class:DefaultIEW
deactivateThread	src/cpu/inorder/cpu.cc	/^InOrderCPU::deactivateThread(ThreadID tid)$/;"	f	class:InOrderCPU
deactivateThread	src/cpu/inorder/resource.cc	/^Resource::deactivateThread(ThreadID tid)$/;"	f	class:Resource
deactivateThread	src/cpu/inorder/resource_pool.cc	/^ResourcePool::deactivateThread(ThreadID tid)$/;"	f	class:ResourcePool
deactivateThread	src/cpu/inorder/resources/fetch_seq_unit.cc	/^FetchSeqUnit::deactivateThread(ThreadID tid)$/;"	f	class:FetchSeqUnit
deactivateThread	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::deactivateThread(ThreadID tid)$/;"	f	class:FullO3CPU
deadlockCheckEvent	src/mem/ruby/system/Sequencer.hh	/^    SequencerWakeupEvent deadlockCheckEvent;$/;"	m	class:Sequencer
deadlock_threshold	src/cpu/testers/rubytest/RubyTester.py	/^    deadlock_threshold = Param.Int(50000, "how often to check for deadlock")$/;"	v	class:RubyTester
deadlock_threshold	src/mem/ruby/system/Sequencer.py	/^    deadlock_threshold = Param.Cycles(500000,$/;"	v	class:RubySequencer
deallocate	src/mem/cache/mshr.cc	/^MSHR::deallocate()$/;"	f	class:MSHR
deallocate	src/mem/cache/mshr_queue.cc	/^MSHRQueue::deallocate(MSHR *mshr)$/;"	f	class:MSHRQueue
deallocate	src/mem/ruby/system/CacheMemory.cc	/^CacheMemory::deallocate(const Address& address)$/;"	f	class:CacheMemory
deallocate	src/mem/ruby/system/PerfectCacheMemory.hh	/^PerfectCacheMemory<ENTRY>::deallocate(const Address& address)$/;"	f	class:PerfectCacheMemory
deallocate	src/mem/ruby/system/TBETable.hh	/^TBETable<ENTRY>::deallocate(const Address& address)$/;"	f	class:TBETable
deallocateContext	src/cpu/base.hh	/^    virtual void deallocateContext(ThreadID thread_num) {}$/;"	f	class:BaseCPU
deallocateContext	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::deallocateContext(int thread_num)$/;"	f	class:InOrderDynInst
deallocateContext	src/cpu/inorder/thread_context.hh	/^    void deallocateContext()$/;"	f	class:InOrderThreadContext
deallocateContext	src/cpu/kvm/base.cc	/^BaseKvmCPU::deallocateContext(ThreadID thread_num)$/;"	f	class:BaseKvmCPU
deallocateContext	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::deallocateContext(int thread_num, int delay)$/;"	f	class:OzoneCPU
deallocateContext	src/cpu/simple/base.cc	/^BaseSimpleCPU::deallocateContext(ThreadID thread_num)$/;"	f	class:BaseSimpleCPU
deallocateContextEvent	src/cpu/o3/cpu.hh	/^    DeallocateContextEvent deallocateContextEvent[Impl::MaxThreads];$/;"	m	class:FullO3CPU
deallocateOne	src/mem/cache/mshr_queue.cc	/^MSHRQueue::deallocateOne(MSHR *mshr)$/;"	f	class:MSHRQueue
deassertMemSideBusRequest	src/mem/cache/base.hh	/^    void deassertMemSideBusRequest(RequestCause cause)$/;"	f	class:BaseCache
debug	src/arch/isa_parser.py	/^debug=False$/;"	v
debug	src/python/m5/main.py	/^    import debug$/;"	i
debugDumpStats	src/base/statistics.cc	/^debugDumpStats()$/;"	f
debugObjectBreak	src/sim/sim_object.cc	/^SimObject::debugObjectBreak(const string &objs)$/;"	f	class:SimObject
debugObjectBreak	src/sim/sim_object.cc	/^debugObjectBreak(const char *objs)$/;"	f
debugPrint	src/cpu/testers/rubytest/Check.cc	/^Check::debugPrint()$/;"	f	class:Check
debugPrintfEvent	src/arch/alpha/tru64/system.hh	/^    DebugPrintfEvent  *debugPrintfEvent;$/;"	m	class:Tru64AlphaSystem
debugPrintfrEvent	src/arch/alpha/tru64/system.hh	/^    DebugPrintfrEvent *debugPrintfrEvent;$/;"	m	class:Tru64AlphaSystem
debugPrintkEvent	src/arch/alpha/linux/system.hh	/^    Linux::DebugPrintkEvent *debugPrintkEvent;$/;"	m	class:LinuxAlphaSystem
debugPrintkEvent	src/arch/arm/system.hh	/^    Linux::DebugPrintkEvent *debugPrintkEvent;$/;"	m	class:ArmSystem
debugPrintkEvent	src/arch/mips/linux/system.hh	/^    Linux::DebugPrintkEvent *debugPrintkEvent;$/;"	m	class:LinuxMipsSystem
debugVerify	src/sim/eventq.cc	/^EventQueue::debugVerify() const$/;"	f	class:EventQueue
debug_break_id	src/base/statistics.cc	/^int debug_break_id = -1;$/;"	m	namespace:Stats	file:
debug_serialize	src/sim/serialize.cc	/^debug_serialize(const string &cpt_dir)$/;"	f
debugbreak	src/sim/pseudo_inst.cc	/^debugbreak(ThreadContext *tc)$/;"	f	namespace:PseudoInst
debugger	src/base/remote_gdb.cc	/^debugger()$/;"	f
dec	src/base/cprintf_formats.hh	/^    enum { dec, hex, oct } base;$/;"	e	enum:cp::Format::__anon37
dec	src/base/statistics.hh	/^    void dec(Counter val) { data -= val; }$/;"	f	class:Stats::StatStor
dec	src/base/statistics.hh	/^    void dec(Counter val) { set(current - val); }$/;"	f	class:Stats::AvgStor
declare_router	src/mem/ruby/network/fault_model/FaultModel.cc	/^FaultModel::declare_router(int number_of_inputs, $/;"	f	class:FaultModel
decode	src/arch/alpha/decoder.hh	/^    decode(AlphaISA::PCState &nextPC)$/;"	f	class:AlphaISA::Decoder
decode	src/arch/alpha/decoder.hh	/^    decode(ExtMachInst mach_inst, Addr addr)$/;"	f	class:AlphaISA::Decoder
decode	src/arch/arm/decoder.hh	/^    decode(ArmISA::PCState &nextPC)$/;"	f	class:ArmISA::Decoder
decode	src/arch/arm/decoder.hh	/^    decode(ExtMachInst mach_inst, Addr addr)$/;"	f	class:ArmISA::Decoder
decode	src/arch/generic/decode_cache.cc	/^BasicDecodeCache::decode(TheISA::Decoder *decoder,$/;"	f	class:GenericISA::BasicDecodeCache
decode	src/arch/mips/decoder.hh	/^    decode(ExtMachInst mach_inst, Addr addr)$/;"	f	class:MipsISA::Decoder
decode	src/arch/mips/decoder.hh	/^    decode(MipsISA::PCState &nextPC)$/;"	f	class:MipsISA::Decoder
decode	src/arch/power/decoder.hh	/^    decode(ExtMachInst mach_inst, Addr addr)$/;"	f	class:PowerISA::Decoder
decode	src/arch/power/decoder.hh	/^    decode(PowerISA::PCState &nextPC)$/;"	f	class:PowerISA::Decoder
decode	src/arch/sparc/decoder.hh	/^    decode(ExtMachInst mach_inst, Addr addr)$/;"	f	class:SparcISA::Decoder
decode	src/arch/sparc/decoder.hh	/^    decode(SparcISA::PCState &nextPC)$/;"	f	class:SparcISA::Decoder
decode	src/arch/x86/decoder.cc	/^Decoder::decode(ExtMachInst mach_inst, Addr addr)$/;"	f	class:X86ISA::Decoder
decode	src/arch/x86/decoder.cc	/^Decoder::decode(PCState &nextPC)$/;"	f	class:X86ISA::Decoder
decode	src/cpu/o3/cpu.hh	/^    typename CPUPolicy::Decode decode;$/;"	m	class:FullO3CPU
decode	src/cpu/o3/decode_impl.hh	/^DefaultDecode<Impl>::decode(bool &status_change, ThreadID tid)$/;"	f	class:DefaultDecode
decode	src/cpu/o3/fetch.hh	/^        bool decode;$/;"	m	struct:DefaultFetch::Stalls
decodeAArch64SysReg	src/arch/arm/miscregs.cc	/^decodeAArch64SysReg(unsigned op0, unsigned op1,$/;"	f	namespace:ArmISA
decodeAddr	src/arch/x86/interrupts.cc	/^decodeAddr(Addr paddr)$/;"	f	namespace:X86ISA
decodeAddr	src/mem/dram_ctrl.cc	/^DRAMCtrl::decodeAddr(PacketPtr pkt, Addr dramPktAddr, unsigned size,$/;"	f	class:DRAMCtrl
decodeBlock	src/cpu/o3/comm.hh	/^    bool decodeBlock[Impl::MaxThreads];$/;"	m	struct:TimeBufStruct
decodeBlockedCycles	src/cpu/o3/decode.hh	/^    Stats::Scalar decodeBlockedCycles;$/;"	m	class:DefaultDecode
decodeBranchMispred	src/cpu/o3/decode.hh	/^    Stats::Scalar decodeBranchMispred;$/;"	m	class:DefaultDecode
decodeBranchResolved	src/cpu/o3/decode.hh	/^    Stats::Scalar decodeBranchResolved;$/;"	m	class:DefaultDecode
decodeCP14Reg	src/arch/arm/miscregs.cc	/^decodeCP14Reg(unsigned crn, unsigned opc1, unsigned crm, unsigned opc2)$/;"	f	namespace:ArmISA
decodeCP15Reg	src/arch/arm/miscregs.cc	/^decodeCP15Reg(unsigned crn, unsigned opc1, unsigned crm, unsigned opc2)$/;"	f	namespace:ArmISA
decodeCP15Reg64	src/arch/arm/miscregs.cc	/^decodeCP15Reg64(unsigned crm, unsigned opc1)$/;"	f	namespace:ArmISA
decodeCoProcReg	src/cpu/kvm/arm_cpu.cc	/^ArmKvmCPU::decodeCoProcReg(uint64_t id) const$/;"	f	class:ArmKvmCPU
decodeComm	src/cpu/o3/comm.hh	/^    struct decodeComm {$/;"	s	struct:TimeBufStruct
decodeControlMispred	src/cpu/o3/decode.hh	/^    Stats::Scalar decodeControlMispred;$/;"	m	class:DefaultDecode
decodeDecodedInsts	src/cpu/o3/decode.hh	/^    Stats::Scalar decodeDecodedInsts;$/;"	m	class:DefaultDecode
decodeIdleCycles	src/cpu/o3/decode.hh	/^    Stats::Scalar decodeIdleCycles;$/;"	m	class:DefaultDecode
decodeInfo	src/cpu/o3/comm.hh	/^    decodeComm decodeInfo[Impl::MaxThreads];$/;"	m	struct:TimeBufStruct
decodeInsts	src/cpu/o3/decode_impl.hh	/^DefaultDecode<Impl>::decodeInsts(ThreadID tid)$/;"	f	class:DefaultDecode
decodeMrsMsrBankedIntRegIndex	src/arch/arm/utility.hh	/^decodeMrsMsrBankedIntRegIndex(uint8_t sysM, bool r)$/;"	f	namespace:ArmISA
decodeMrsMsrBankedReg	src/arch/arm/utility.cc	/^decodeMrsMsrBankedReg(uint8_t sysM, bool r, bool &isIntReg, int &regIdx,$/;"	f	namespace:ArmISA
decodePages	src/arch/generic/decode_cache.hh	/^    DecodeCache::AddrMap<StaticInstPtr> decodePages;$/;"	m	class:GenericISA::BasicDecodeCache
decodePages	src/arch/x86/decoder.hh	/^    DecodePages *decodePages;$/;"	m	class:X86ISA::Decoder
decodePhysAddrRange64	src/arch/arm/utility.cc	/^decodePhysAddrRange64(uint8_t pa_enc)$/;"	f	namespace:ArmISA
decodePrologue	src/arch/alpha/stacktrace.cc	/^StackTrace::decodePrologue(Addr sp, Addr callpc, Addr func, int &size,$/;"	f	class:AlphaISA::StackTrace
decodePrologue	src/arch/arm/stacktrace.cc	/^    StackTrace::decodePrologue(Addr sp, Addr callpc, Addr func,$/;"	f	class:ArmISA::StackTrace
decodePrologue	src/arch/mips/stacktrace.cc	/^StackTrace::decodePrologue(Addr sp, Addr callpc, Addr func,$/;"	f	class:StackTrace
decodePrologue	src/arch/power/stacktrace.cc	/^StackTrace::decodePrologue(Addr sp, Addr callpc, Addr func, int &size,$/;"	f	class:PowerISA::StackTrace
decodePrologue	src/arch/x86/stacktrace.cc	/^    StackTrace::decodePrologue(Addr sp, Addr callpc, Addr func,$/;"	f	class:X86ISA::StackTrace
decodeQueue	src/cpu/o3/cpu.hh	/^    TimeBuffer<DecodeStruct> decodeQueue;$/;"	m	class:FullO3CPU
decodeQueue	src/cpu/o3/decode.hh	/^    TimeBuffer<DecodeStruct> *decodeQueue;$/;"	m	class:DefaultDecode
decodeQueue	src/cpu/o3/rename.hh	/^    TimeBuffer<DecodeStruct> *decodeQueue;$/;"	m	class:DefaultRename
decodeRunCycles	src/cpu/o3/decode.hh	/^    Stats::Scalar decodeRunCycles;$/;"	m	class:DefaultDecode
decodeSave	src/arch/alpha/stacktrace.cc	/^StackTrace::decodeSave(MachInst inst, int &reg, int &disp)$/;"	f	class:AlphaISA::StackTrace
decodeSave	src/arch/arm/stacktrace.cc	/^    StackTrace::decodeSave(MachInst inst, int &reg, int &disp)$/;"	f	class:ArmISA::StackTrace
decodeSave	src/arch/mips/stacktrace.cc	/^StackTrace::decodeSave(MachInst inst, int &reg, int &disp)$/;"	f	class:StackTrace
decodeSave	src/arch/power/stacktrace.cc	/^StackTrace::decodeSave(MachInst inst, int &reg, int &disp)$/;"	f	class:PowerISA::StackTrace
decodeSave	src/arch/x86/stacktrace.cc	/^    StackTrace::decodeSave(MachInst inst, int &reg, int &disp)$/;"	f	class:X86ISA::StackTrace
decodeSquashCycles	src/cpu/o3/decode.hh	/^    Stats::Scalar decodeSquashCycles;$/;"	m	class:DefaultDecode
decodeSquashedInsts	src/cpu/o3/decode.hh	/^    Stats::Scalar decodeSquashedInsts;$/;"	m	class:DefaultDecode
decodeStack	src/arch/alpha/stacktrace.cc	/^StackTrace::decodeStack(MachInst inst, int &disp)$/;"	f	class:AlphaISA::StackTrace
decodeStack	src/arch/arm/stacktrace.cc	/^    StackTrace::decodeStack(MachInst inst, int &disp)$/;"	f	class:ArmISA::StackTrace
decodeStack	src/arch/mips/stacktrace.cc	/^StackTrace::decodeStack(MachInst inst, int &disp)$/;"	f	class:StackTrace
decodeStack	src/arch/power/stacktrace.cc	/^StackTrace::decodeStack(MachInst inst, int &disp)$/;"	f	class:PowerISA::StackTrace
decodeStack	src/arch/x86/stacktrace.cc	/^    StackTrace::decodeStack(MachInst inst, int &disp)$/;"	f	class:X86ISA::StackTrace
decodeStatus	src/cpu/o3/decode.hh	/^    ThreadStatus decodeStatus[Impl::MaxThreads];$/;"	m	class:DefaultDecode
decodeTick	src/cpu/o3/dyn_inst.hh	/^    int32_t decodeTick;  \/\/ instruction enters decode phase$/;"	m	class:BaseO3DynInst
decodeToFetchDelay	src/cpu/o3/O3CPU.py	/^    decodeToFetchDelay = Param.Cycles(1, "Decode to fetch delay")$/;"	v	class:DerivO3CPU
decodeToFetchDelay	src/cpu/o3/fetch.hh	/^    Cycles decodeToFetchDelay;$/;"	m	class:DefaultFetch
decodeToFetchDelay	src/cpu/ozone/OzoneCPU.py	/^    decodeToFetchDelay = Param.Unsigned("Decode to fetch delay")$/;"	v	class:DerivOzoneCPU
decodeToFetchDelay	src/cpu/ozone/SimpleOzoneCPU.py	/^    decodeToFetchDelay = Param.Unsigned("Decode to fetch delay")$/;"	v	class:SimpleOzoneCPU
decodeToFetchDelay	src/cpu/ozone/simple_params.hh	/^    unsigned decodeToFetchDelay;$/;"	m	class:SimpleParams
decodeToRenameDelay	src/cpu/o3/O3CPU.py	/^    decodeToRenameDelay = Param.Cycles(1, "Decode to rename delay")$/;"	v	class:DerivO3CPU
decodeToRenameDelay	src/cpu/o3/rename.hh	/^    int decodeToRenameDelay;$/;"	m	class:DefaultRename
decodeToRenameDelay	src/cpu/ozone/OzoneCPU.py	/^    decodeToRenameDelay = Param.Unsigned("Decode to rename delay")$/;"	v	class:DerivOzoneCPU
decodeToRenameDelay	src/cpu/ozone/SimpleOzoneCPU.py	/^    decodeToRenameDelay = Param.Unsigned("Decode to rename delay")$/;"	v	class:SimpleOzoneCPU
decodeToRenameDelay	src/cpu/ozone/simple_params.hh	/^    unsigned decodeToRenameDelay;$/;"	m	class:SimpleParams
decodeUnblock	src/cpu/o3/comm.hh	/^    bool decodeUnblock[Impl::MaxThreads];$/;"	m	struct:TimeBufStruct
decodeUnblockCycles	src/cpu/o3/decode.hh	/^    Stats::Scalar decodeUnblockCycles;$/;"	m	class:DefaultDecode
decodeVFPCtrlReg	src/cpu/kvm/arm_cpu.cc	/^ArmKvmCPU::decodeVFPCtrlReg(uint64_t id) const$/;"	f	class:ArmKvmCPU
decodeVal	src/arch/x86/types.hh	/^        Bitfield<7, 4> decodeVal;$/;"	m	namespace:X86ISA
decodeWidth	src/cpu/o3/O3CPU.py	/^    decodeWidth = Param.Unsigned(8, "Decode width")$/;"	v	class:DerivO3CPU
decodeWidth	src/cpu/o3/decode.hh	/^    unsigned decodeWidth;$/;"	m	class:DefaultDecode
decodeWidth	src/cpu/ozone/OzoneCPU.py	/^    decodeWidth = Param.Unsigned("Decode width")$/;"	v	class:DerivOzoneCPU
decodeWidth	src/cpu/ozone/SimpleOzoneCPU.py	/^    decodeWidth = Param.Unsigned("Decode width")$/;"	v	class:SimpleOzoneCPU
decodeWidth	src/cpu/ozone/simple_params.hh	/^    unsigned decodeWidth;$/;"	m	class:SimpleParams
decoder	src/cpu/inorder/resources/fetch_unit.hh	/^    TheISA::Decoder *decoder[ThePipeline::MaxThreads];$/;"	m	class:FetchUnit
decoder	src/cpu/o3/fetch.hh	/^    TheISA::Decoder *decoder[Impl::MaxThreads];$/;"	m	class:DefaultFetch
decoder	src/cpu/simple_thread.hh	/^    TheISA::Decoder decoder;$/;"	m	class:SimpleThread
decoupledFrontEnd	src/cpu/ozone/cpu.hh	/^    bool decoupledFrontEnd;$/;"	m	class:OzoneCPU
decoupledFrontEnd	src/cpu/ozone/simple_params.hh	/^    bool decoupledFrontEnd;$/;"	m	class:SimpleParams
decrLdIdx	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::decrLdIdx(int &load_idx) const$/;"	f	class:LSQUnit
decrLdIdx	src/cpu/ozone/lsq_unit_impl.hh	/^OzoneLSQ<Impl>::decrLdIdx(int &load_idx)$/;"	f	class:OzoneLSQ
decrStIdx	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::decrStIdx(int &store_idx) const$/;"	f	class:LSQUnit
decrStIdx	src/cpu/ozone/lsq_unit_impl.hh	/^OzoneLSQ<Impl>::decrStIdx(int &store_idx)$/;"	f	class:OzoneLSQ
decrTos	src/cpu/pred/ras.hh	/^    inline void decrTos()$/;"	f	class:ReturnAddrStack
decrWb	src/cpu/o3/iew.hh	/^    void decrWb(InstSeqNum &sn)$/;"	f	class:DefaultIEW
decref	src/base/refcnt.hh	/^    void decref() { if (--count <= 0) delete this; }$/;"	f	class:RefCounted
decref	src/python/swig/pyevent.hh	/^    void decref() { Py_DECREF(object); }$/;"	f	class:PythonEvent
decrement	src/cpu/pred/sat_counter.hh	/^    void decrement()$/;"	f	class:SatCounter
decrement	src/mem/ruby/filters/BlockBloomFilter.cc	/^BlockBloomFilter::decrement(const Address& addr)$/;"	f	class:BlockBloomFilter
decrement	src/mem/ruby/filters/BulkBloomFilter.cc	/^BulkBloomFilter::decrement(const Address& addr)$/;"	f	class:BulkBloomFilter
decrement	src/mem/ruby/filters/GenericBloomFilter.cc	/^GenericBloomFilter::decrement(const Address& addr)$/;"	f	class:GenericBloomFilter
decrement	src/mem/ruby/filters/H3BloomFilter.cc	/^H3BloomFilter::decrement(const Address& addr)$/;"	f	class:H3BloomFilter
decrement	src/mem/ruby/filters/LSB_CountingBloomFilter.cc	/^LSB_CountingBloomFilter::decrement(const Address& addr)$/;"	f	class:LSB_CountingBloomFilter
decrement	src/mem/ruby/filters/MultiBitSelBloomFilter.cc	/^MultiBitSelBloomFilter::decrement(const Address& addr)$/;"	f	class:MultiBitSelBloomFilter
decrement	src/mem/ruby/filters/MultiGrainBloomFilter.cc	/^MultiGrainBloomFilter::decrement(const Address& addr)$/;"	f	class:MultiGrainBloomFilter
decrement	src/mem/ruby/filters/NonCountingBloomFilter.cc	/^NonCountingBloomFilter::decrement(const Address& addr)$/;"	f	class:NonCountingBloomFilter
decrement_credit	src/mem/ruby/network/garnet/fixed-pipeline/OutVcState_d.hh	/^    inline void decrement_credit()  { m_credit_count--; }$/;"	f	class:OutVcState_d
decrement_credit	src/mem/ruby/network/garnet/fixed-pipeline/OutputUnit_d.cc	/^OutputUnit_d::decrement_credit(int out_vc)$/;"	f	class:OutputUnit_d
dedent	src/python/m5/util/code_formatter.py	/^    def dedent(self, count=1):$/;"	m	class:code_formatter
defAddr	src/arch/x86/decoder.hh	/^    uint8_t defAddr;$/;"	m	class:X86ISA::Decoder
defAddr	src/arch/x86/regs/misc.hh	/^        Bitfield<13, 12> defAddr;$/;"	m	namespace:X86ISA
defCc	src/arch/arm/insts/data64.hh	/^    uint8_t defCc;$/;"	m	class:ArmISA::DataXCondCompImmOp
defCc	src/arch/arm/insts/data64.hh	/^    uint8_t defCc;$/;"	m	class:ArmISA::DataXCondCompRegOp
defCc	src/arch/arm/insts/vfp.hh	/^    uint8_t defCc;$/;"	m	class:ArmISA::FpCondCompRegOp
defFormat	src/arch/isa_parser.py	/^    def defFormat(self, id, params, code, lineno):$/;"	m	class:ISAParser
defOp	src/arch/x86/decoder.hh	/^    uint8_t defOp;$/;"	m	class:X86ISA::Decoder
defOp	src/arch/x86/regs/misc.hh	/^        Bitfield<9, 8> defOp;$/;"	m	namespace:X86ISA
default	src/mem/Bus.py	/^    default = MasterPort("Port for connecting an optional default slave")$/;"	v	class:BaseBus
defaultCache	src/arch/alpha/decoder.cc	/^GenericISA::BasicDecodeCache Decoder::defaultCache;$/;"	m	class:AlphaISA::Decoder	file:
defaultCache	src/arch/alpha/decoder.hh	/^    static GenericISA::BasicDecodeCache defaultCache;$/;"	m	class:AlphaISA::Decoder
defaultCache	src/arch/arm/decoder.cc	/^GenericISA::BasicDecodeCache Decoder::defaultCache;$/;"	m	class:ArmISA::Decoder	file:
defaultCache	src/arch/arm/decoder.hh	/^    static GenericISA::BasicDecodeCache defaultCache;$/;"	m	class:ArmISA::Decoder
defaultCache	src/arch/mips/decoder.cc	/^GenericISA::BasicDecodeCache Decoder::defaultCache;$/;"	m	class:MipsISA::Decoder	file:
defaultCache	src/arch/mips/decoder.hh	/^    static GenericISA::BasicDecodeCache defaultCache;$/;"	m	class:MipsISA::Decoder
defaultCache	src/arch/power/decoder.cc	/^GenericISA::BasicDecodeCache Decoder::defaultCache;$/;"	m	class:PowerISA::Decoder	file:
defaultCache	src/arch/power/decoder.hh	/^    static GenericISA::BasicDecodeCache defaultCache;$/;"	m	class:PowerISA::Decoder
defaultCache	src/arch/sparc/decoder.cc	/^GenericISA::BasicDecodeCache Decoder::defaultCache;$/;"	m	class:SparcISA::Decoder	file:
defaultCache	src/arch/sparc/decoder.hh	/^    static GenericISA::BasicDecodeCache defaultCache;$/;"	m	class:SparcISA::Decoder
defaultConfig	src/arch/x86/bios/intelmp.hh	/^    uint8_t defaultConfig;$/;"	m	class:X86ISA::IntelMP::FloatingPointer
defaultNaN	src/arch/arm/miscregs.hh	/^        Bitfield<7, 4> defaultNaN;$/;"	m	namespace:ArmISA
defaultPortID	src/mem/bus.hh	/^    PortID defaultPortID;$/;"	m	class:BaseBus
defaultRange	src/mem/bus.hh	/^    AddrRange defaultRange;$/;"	m	class:BaseBus
defaultSize	src/arch/x86/regs/misc.hh	/^        Bitfield<3> defaultSize;$/;"	m	namespace:X86ISA
default_color	src/dev/arm/hdlcd.hh	/^        Bitfield<23,16> default_color;$/;"	m	class:HDLcd
default_config	src/arch/x86/bios/IntelMP.py	/^    default_config = Param.UInt8(0, 'which default configuration to use')$/;"	v	class:X86IntelMPFloatingPointer
default_tracer	src/cpu/BaseCPU.py	/^default_tracer = ExeTracer()$/;"	v
deferMemInst	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::deferMemInst(DynInstPtr &deferred_inst)$/;"	f	class:InstructionQueue
deferredMemInsts	src/cpu/o3/inst_queue.hh	/^    std::list<DynInstPtr> deferredMemInsts;$/;"	m	class:InstructionQueue
deferredPacketReady	src/mem/packet_queue.hh	/^    bool deferredPacketReady()$/;"	f	class:PacketQueue
deferredPacketReadyTime	src/mem/packet_queue.hh	/^    Tick deferredPacketReadyTime()$/;"	f	class:PacketQueue
deferredTargets	src/mem/cache/mshr.hh	/^    TargetList deferredTargets;$/;"	m	class:MSHR
defineInst	src/arch/isa_parser.py	/^    def defineInst(self, parser, name, args, lineno):$/;"	m	class:Format
defineInst	src/arch/isa_parser.py	/^    def defineInst(self, parser, name, args, lineno):$/;"	m	class:NoFormat
defines	src/python/m5/main.py	/^    import defines$/;"	i
degree	src/mem/cache/prefetch/Prefetcher.py	/^    degree = Param.Int(1,$/;"	v	class:BasePrefetcher
degree	src/mem/cache/prefetch/base.hh	/^    const unsigned degree;$/;"	m	class:BasePrefetcher
del	src/base/refcnt.hh	/^    del()$/;"	f	class:RefCountingPtr
delay	src/cpu/translation.hh	/^    bool delay;$/;"	m	class:WholeTranslationState
delay	src/dev/Ethernet.py	/^    delay = Param.Latency('0us', "packet transmit delay")$/;"	v	class:EtherLink
delay	src/dev/Ide.py	/^    delay = Param.Latency('1us', "Fixed disk delay in microseconds")$/;"	v	class:IdeDisk
delay	src/dev/dma_device.hh	/^        const Tick delay;$/;"	m	struct:DmaPort::DmaReqState
delay	src/mem/Bridge.py	/^    delay = Param.Latency('0ns', "The latency of this bridge")$/;"	v	class:Bridge
delay	src/mem/bridge.hh	/^        const Cycles delay;$/;"	m	class:Bridge::BridgeMasterPort
delay	src/mem/bridge.hh	/^        const Cycles delay;$/;"	m	class:Bridge::BridgeSlavePort
delayHead	src/mem/ruby/buffers/MessageBuffer.hh	/^    delayHead()$/;"	f	class:MessageBuffer
delayHistogram	src/mem/ruby/profiler/Profiler.hh	/^    Stats::Histogram delayHistogram;$/;"	m	class:Profiler
delayIntEvent	src/dev/i8254xGBe.cc	/^IGbE::delayIntEvent()$/;"	f	class:IGbE
delayVCHistogram	src/mem/ruby/profiler/Profiler.hh	/^    std::vector<Stats::Histogram *> delayVCHistogram;$/;"	m	class:Profiler
delayVar	src/dev/etherlink.hh	/^        Tick delayVar;$/;"	m	class:EtherLink::Link
delay_copy	src/dev/Ethernet.py	/^    delay_copy = Param.Bool(False, "Delayed copy transmit")$/;"	v	class:Sinic
delay_var	src/dev/Ethernet.py	/^    delay_var = Param.Latency('0ns', "packet transmit delay variability")$/;"	v	class:EtherLink
delayed	src/arch/arm/table_walker.hh	/^        bool delayed;$/;"	m	class:ArmISA::TableWalker::WalkerState
delayedCommit	src/cpu/o3/fetch.hh	/^    bool delayedCommit[Impl::MaxThreads];$/;"	m	class:DefaultFetch
delayedStartup	src/cpu/kvm/vm.cc	/^KvmVM::delayedStartup()$/;"	f	class:KvmVM
deleteData	src/mem/packet.hh	/^    deleteData()$/;"	f	class:Packet
deletePointer	src/base/stl_helpers.hh	/^deletePointer(T &ptr)$/;"	f	namespace:m5::stl_helpers
deletePointers	src/base/stl_helpers.hh	/^deletePointers(C<T,A> &container)$/;"	f	namespace:m5::stl_helpers
deleteReqs	src/cpu/translation.hh	/^    deleteReqs()$/;"	f	class:WholeTranslationState
delete_module	src/kern/linux/linux_syscalls.hh	/^    delete_module = 27,$/;"	e	enum:SystemCalls::__anon87
delim	src/python/m5/util/code_formatter.py	/^    delim = r'$'$/;"	v	class:code_formatter
deliverInterrupts	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::deliverInterrupts()$/;"	f	class:X86KvmCPU
deliveryMode	src/arch/x86/interrupts.hh	/^        Bitfield<10, 8> deliveryMode;$/;"	m	class:X86ISA::Interrupts
deliveryMode	src/arch/x86/intmessage.hh	/^        Bitfield<18, 16> deliveryMode;$/;"	m	namespace:X86ISA
deliveryMode	src/arch/x86/regs/apic.hh	/^        Bitfield<10, 8> deliveryMode;$/;"	m	namespace:X86ISA
deliveryMode	src/dev/x86/i82094aa.hh	/^        Bitfield<10, 8> deliveryMode;$/;"	m	class:X86ISA::I82094AA
deliveryStatus	src/arch/x86/regs/apic.hh	/^        Bitfield<12> deliveryStatus;$/;"	m	namespace:X86ISA
deliveryStatus	src/dev/x86/i82094aa.hh	/^        Bitfield<12> deliveryStatus;$/;"	m	class:X86ISA::I82094AA
demandAccesses	src/mem/cache/base.hh	/^    Stats::Formula demandAccesses;$/;"	m	class:BaseCache
demandAvgMissLatency	src/mem/cache/base.hh	/^    Stats::Formula demandAvgMissLatency;$/;"	m	class:BaseCache
demandAvgMshrMissLatency	src/mem/cache/base.hh	/^    Stats::Formula demandAvgMshrMissLatency;$/;"	m	class:BaseCache
demandHits	src/mem/cache/base.hh	/^    Stats::Formula demandHits;$/;"	m	class:BaseCache
demandMissLatency	src/mem/cache/base.hh	/^    Stats::Formula demandMissLatency;$/;"	m	class:BaseCache
demandMissRate	src/mem/cache/base.hh	/^    Stats::Formula demandMissRate;$/;"	m	class:BaseCache
demandMisses	src/mem/cache/base.hh	/^    Stats::Formula demandMisses;$/;"	m	class:BaseCache
demandMshrHits	src/mem/cache/base.hh	/^    Stats::Formula demandMshrHits;$/;"	m	class:BaseCache
demandMshrMissLatency	src/mem/cache/base.hh	/^    Stats::Formula demandMshrMissLatency;$/;"	m	class:BaseCache
demandMshrMissRate	src/mem/cache/base.hh	/^    Stats::Formula demandMshrMissRate;$/;"	m	class:BaseCache
demandMshrMisses	src/mem/cache/base.hh	/^    Stats::Formula demandMshrMisses;$/;"	m	class:BaseCache
demapAll	src/arch/sparc/tlb.cc	/^TLB::demapAll(int partition_id)$/;"	f	class:SparcISA::TLB
demapContext	src/arch/sparc/tlb.cc	/^TLB::demapContext(int partition_id, int context_id)$/;"	f	class:SparcISA::TLB
demapDataPage	src/cpu/base_dyn_inst.hh	/^    void demapDataPage(Addr vaddr, uint64_t asn)$/;"	f	class:BaseDynInst
demapDataPage	src/cpu/checker/cpu.hh	/^    void demapDataPage(Addr vaddr, uint64_t asn)$/;"	f	class:CheckerCPU
demapDataPage	src/cpu/o3/cpu.hh	/^    void demapDataPage(Addr vaddr, uint64_t asn)$/;"	f	class:FullO3CPU
demapDataPage	src/cpu/ozone/cpu.hh	/^    void demapDataPage(Addr vaddr, uint64_t asn)$/;"	f	class:OzoneCPU
demapDataPage	src/cpu/simple/base.hh	/^    void demapDataPage(Addr vaddr, uint64_t asn)$/;"	f	class:BaseSimpleCPU
demapDataPage	src/cpu/simple_thread.hh	/^    void demapDataPage(Addr vaddr, uint64_t asn)$/;"	f	class:SimpleThread
demapInstPage	src/cpu/base_dyn_inst.hh	/^    void demapInstPage(Addr vaddr, uint64_t asn)$/;"	f	class:BaseDynInst
demapInstPage	src/cpu/checker/cpu.hh	/^    void demapInstPage(Addr vaddr, uint64_t asn)$/;"	f	class:CheckerCPU
demapInstPage	src/cpu/o3/cpu.hh	/^    void demapInstPage(Addr vaddr, uint64_t asn)$/;"	f	class:FullO3CPU
demapInstPage	src/cpu/ozone/cpu.hh	/^    void demapInstPage(Addr vaddr, uint64_t asn)$/;"	f	class:OzoneCPU
demapInstPage	src/cpu/simple/base.hh	/^    void demapInstPage(Addr vaddr, uint64_t asn)$/;"	f	class:BaseSimpleCPU
demapInstPage	src/cpu/simple_thread.hh	/^    void demapInstPage(Addr vaddr, uint64_t asn)$/;"	f	class:SimpleThread
demapPage	src/arch/alpha/tlb.hh	/^    demapPage(Addr vaddr, uint64_t asn)$/;"	f	class:AlphaISA::TLB
demapPage	src/arch/arm/tlb.hh	/^    void demapPage(Addr vaddr, uint64_t asn)$/;"	f	class:ArmISA::TLB
demapPage	src/arch/mips/tlb.hh	/^    void demapPage(Addr vaddr, uint64_t asn)$/;"	f	class:MipsISA::TLB
demapPage	src/arch/power/tlb.hh	/^    demapPage(Addr vaddr, uint64_t asn)$/;"	f	class:PowerISA::TLB
demapPage	src/arch/sparc/tlb.cc	/^TLB::demapPage(Addr va, int partition_id, bool real, int context_id)$/;"	f	class:SparcISA::TLB
demapPage	src/arch/sparc/tlb.hh	/^    demapPage(Addr vaddr, uint64_t asn)$/;"	f	class:SparcISA::TLB
demapPage	src/arch/x86/tlb.cc	/^TLB::demapPage(Addr va, uint64_t asn)$/;"	f	class:X86ISA::TLB
demapPage	src/cpu/base_dyn_inst.hh	/^    void demapPage(Addr vaddr, uint64_t asn)$/;"	f	class:BaseDynInst
demapPage	src/cpu/checker/cpu.hh	/^    void demapPage(Addr vaddr, uint64_t asn)$/;"	f	class:CheckerCPU
demapPage	src/cpu/o3/cpu.hh	/^    void demapPage(Addr vaddr, uint64_t asn)$/;"	f	class:FullO3CPU
demapPage	src/cpu/ozone/cpu.hh	/^    void demapPage(Addr vaddr, uint64_t asn)$/;"	f	class:OzoneCPU
demapPage	src/cpu/simple/base.hh	/^    void demapPage(Addr vaddr, uint64_t asn)$/;"	f	class:BaseSimpleCPU
demapPage	src/cpu/simple_thread.hh	/^    void demapPage(Addr vaddr, uint64_t asn)$/;"	f	class:SimpleThread
demapPage	src/sim/tlb.cc	/^GenericTLB::demapPage(Addr vaddr, uint64_t asn)$/;"	f	class:GenericTLB
deniedReq	src/cpu/inorder/resource.hh	/^    ResReqPtr deniedReq;$/;"	m	class:Resource
depCheckShift	src/cpu/o3/lsq_unit.hh	/^    unsigned depCheckShift;$/;"	m	class:LSQUnit
depPred	src/cpu/o3/mem_dep_unit.hh	/^    MemDepPred depPred;$/;"	m	class:MemDepUnit
dependGraph	src/cpu/o3/dep_graph.hh	/^    DepEntry *dependGraph;$/;"	m	class:DependencyGraph
dependGraph	src/cpu/o3/inst_queue.hh	/^    DependencyGraph<DynInstPtr> dependGraph;$/;"	m	class:InstructionQueue
dependInsts	src/cpu/o3/mem_dep_unit.hh	/^        std::vector<MemDepEntryPtr> dependInsts;$/;"	m	class:MemDepUnit::MemDepEntry
dependents	src/cpu/ozone/dyn_inst.hh	/^    std::vector<DynInstPtr> dependents;$/;"	m	class:OzoneDynInst
depth	src/base/vnc/vncinput.hh	/^        uint8_t depth;$/;"	m	struct:VncInput::PixelFormat
depth	src/mem/request.hh	/^    int depth;$/;"	m	class:Request
deque	src/doxygen/stl.hh	/^template <class T> class deque {$/;"	c	namespace:std
dequeue	src/mem/ruby/buffers/MessageBuffer.cc	/^MessageBuffer::dequeue()$/;"	f	class:MessageBuffer
dequeue	src/mem/ruby/system/RubyMemoryControl.cc	/^RubyMemoryControl::dequeue()$/;"	f	class:RubyMemoryControl
dequeue	src/mem/ruby/system/WireBuffer.cc	/^WireBuffer::dequeue()$/;"	f	class:WireBuffer
dequeue	src/mem/simple_mem.cc	/^SimpleMemory::dequeue()$/;"	f	class:SimpleMemory
dequeueEvent	src/mem/simple_mem.hh	/^    EventWrapper<SimpleMemory, &SimpleMemory::dequeue> dequeueEvent;$/;"	m	class:SimpleMemory
dequeue_getDelayCycles	src/mem/ruby/buffers/MessageBuffer.cc	/^MessageBuffer::dequeue_getDelayCycles()$/;"	f	class:MessageBuffer
desc	src/base/debug.hh	/^    std::string desc() const { return _desc; }$/;"	f	class:Debug::Flag
desc	src/base/statistics.hh	/^    desc(const std::string &_desc)$/;"	f	class:Stats::DataWrap
desc	src/base/stats/info.hh	/^    std::string desc;$/;"	m	class:Stats::Info
desc	src/base/stats/text.cc	/^    string desc;$/;"	m	struct:Stats::DistPrint	file:
desc	src/base/stats/text.cc	/^    string desc;$/;"	m	struct:Stats::ScalarPrint	file:
desc	src/base/stats/text.cc	/^    string desc;$/;"	m	struct:Stats::SparseHistPrint	file:
desc	src/base/stats/text.cc	/^    string desc;$/;"	m	struct:Stats::VectorPrint	file:
desc	src/mem/slicc/symbols/Symbol.py	/^    def desc(self):$/;"	m	class:Symbol
descBase	src/dev/i8254xGBe.hh	/^        virtual Addr descBase() const { return igbe->regs.rdba(); }$/;"	f	class:IGbE::RxDescCache
descBase	src/dev/i8254xGBe.hh	/^        virtual Addr descBase() const { return igbe->regs.tdba(); }$/;"	f	class:IGbE::TxDescCache
descChainAddr	src/dev/copy_engine_defs.hh	/^    uint64_t descChainAddr;$/;"	m	struct:CopyEngineReg::ChanRegs
descDmaRdBytes	src/dev/etherdevice.hh	/^    Stats::Scalar descDmaRdBytes;$/;"	m	class:EtherDevice
descDmaReads	src/dev/etherdevice.hh	/^    Stats::Scalar descDmaReads;$/;"	m	class:EtherDevice
descDmaWrBytes	src/dev/etherdevice.hh	/^    Stats::Scalar descDmaWrBytes;$/;"	m	class:EtherDevice
descDmaWrites	src/dev/etherdevice.hh	/^    Stats::Scalar descDmaWrites;$/;"	m	class:EtherDevice
descEnd	src/dev/i8254xGBe.hh	/^        uint32_t descEnd;$/;"	m	class:IGbE::TxDescCache
descHead	src/dev/i8254xGBe.hh	/^        virtual long descHead() const { return igbe->regs.rdh(); }$/;"	f	class:IGbE::RxDescCache
descHead	src/dev/i8254xGBe.hh	/^        virtual long descHead() const { return igbe->regs.tdh(); }$/;"	f	class:IGbE::TxDescCache
descInBlock	src/dev/i8254xGBe.hh	/^        descInBlock(unsigned num_desc)$/;"	f	class:IGbE::TxDescCache
descLeft	src/dev/i8254xGBe.hh	/^        descLeft() const$/;"	f	class:IGbE::DescCache
descLen	src/dev/i8254xGBe.hh	/^        virtual long descLen() const { return igbe->regs.rdlen() >> 4; }$/;"	f	class:IGbE::RxDescCache
descLen	src/dev/i8254xGBe.hh	/^        virtual long descLen() const { return igbe->regs.tdlen() >> 4; }$/;"	f	class:IGbE::TxDescCache
descSize	src/dev/i8254xGBe_defs.hh	/^        unsigned descSize()$/;"	f	struct:iGbReg::Regs::RCTL
descTail	src/dev/i8254xGBe.hh	/^        virtual long descTail() const { return igbe->regs.rdt(); }$/;"	f	class:IGbE::RxDescCache
descTail	src/dev/i8254xGBe.hh	/^        virtual long descTail() const { return igbe->regs.tdt(); }$/;"	f	class:IGbE::TxDescCache
descUnused	src/dev/i8254xGBe.hh	/^        unsigned descUnused() const { return unusedCache.size(); }$/;"	f	class:IGbE::DescCache
descUsed	src/dev/i8254xGBe.hh	/^        unsigned descUsed() const { return usedCache.size(); }$/;"	f	class:IGbE::DescCache
descendants	src/python/m5/SimObject.py	/^    def descendants(self):$/;"	f
descendants	src/python/m5/params.py	/^    def descendants(self):$/;"	m	class:SimObjectVector
deschedule	src/sim/eventq.hh	/^    deschedule(Event &event)$/;"	f	class:EventManager
deschedule	src/sim/eventq.hh	/^    deschedule(Event *event)$/;"	f	class:EventManager
deschedule	src/sim/eventq_impl.hh	/^EventQueue::deschedule(Event *event)$/;"	f	class:EventQueue
deschedule	src/sim/global_event.cc	/^void BaseGlobalEvent::deschedule()$/;"	f	class:BaseGlobalEvent
descheduleDeadlockEvent	src/mem/ruby/system/DMASequencer.hh	/^    void descheduleDeadlockEvent() {}$/;"	f	class:DMASequencer
descheduleDeadlockEvent	src/mem/ruby/system/RubyPortProxy.hh	/^    void descheduleDeadlockEvent() { }$/;"	f	class:RubyPortProxy
descheduleDeadlockEvent	src/mem/ruby/system/Sequencer.hh	/^    void descheduleDeadlockEvent()$/;"	f	class:Sequencer
descr	src/cpu/pc_event.hh	/^    std::string descr() const { return description; }$/;"	f	class:PCEvent
describe	src/arch/x86/faults.cc	/^    PageFault::describe() const$/;"	f	class:X86ISA::PageFault
describe	src/arch/x86/faults.cc	/^    X86FaultBase::describe() const$/;"	f	class:X86ISA::X86FaultBase
description	src/arch/mips/isa.cc	/^ISA::CP0Event::description() const$/;"	f	class:MipsISA::ISA::CP0Event
description	src/cpu/base.cc	/^CPUProgressEvent::description() const$/;"	f	class:CPUProgressEvent
description	src/cpu/inorder/cpu.cc	/^InOrderCPU::CPUEvent::description() const$/;"	f	class:InOrderCPU::CPUEvent
description	src/cpu/inorder/cpu.cc	/^InOrderCPU::TickEvent::description() const$/;"	f	class:InOrderCPU::TickEvent
description	src/cpu/inorder/resource.cc	/^ResourceEvent::description() const$/;"	f	class:ResourceEvent
description	src/cpu/inorder/resource_pool.9stage.cc	/^ResourcePool::ResPoolEvent::description()$/;"	f	class:ResourcePool::ResPoolEvent
description	src/cpu/inorder/resource_pool.cc	/^ResourcePool::ResPoolEvent::description() const$/;"	f	class:ResourcePool::ResPoolEvent
description	src/cpu/kvm/base.hh	/^        const char *description() const {$/;"	f	struct:BaseKvmCPU::TickEvent
description	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::TrapEvent::description() const$/;"	f	class:DefaultCommit::TrapEvent
description	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::ActivateThreadEvent::description() const$/;"	f	class:FullO3CPU::ActivateThreadEvent
description	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::DeallocateContextEvent::description() const$/;"	f	class:FullO3CPU::DeallocateContextEvent
description	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::TickEvent::description() const$/;"	f	class:FullO3CPU::TickEvent
description	src/cpu/o3/fetch.hh	/^        const char *description() const$/;"	f	class:DefaultFetch::FinishTranslationEvent
description	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::FUCompletion::description() const$/;"	f	class:InstructionQueue::FUCompletion
description	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::WritebackEvent::description() const$/;"	f	class:LSQUnit::WritebackEvent
description	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::DCacheCompletionEvent::description() const$/;"	f	class:BackEnd::DCacheCompletionEvent
description	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::LdWritebackEvent::description() const$/;"	f	class:BackEnd::LdWritebackEvent
description	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::TickEvent::description() const$/;"	f	class:OzoneCPU::TickEvent
description	src/cpu/ozone/inorder_back_end_impl.hh	/^InorderBackEnd<Impl>::DCacheCompletionEvent::description() const$/;"	f	class:InorderBackEnd::DCacheCompletionEvent
description	src/cpu/ozone/lsq_unit_impl.hh	/^OzoneLSQ<Impl>::StoreCompletionEvent::description() const$/;"	f	class:OzoneLSQ::StoreCompletionEvent
description	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::TrapEvent::description() const$/;"	f	class:LWBackEnd::TrapEvent
description	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::WritebackEvent::description() const$/;"	f	class:OzoneLWLSQ::WritebackEvent
description	src/cpu/pc_event.hh	/^    std::string description;$/;"	m	class:PCEvent
description	src/cpu/quiesce_event.cc	/^EndQuiesceEvent::description() const$/;"	f	class:EndQuiesceEvent
description	src/cpu/simple/atomic.cc	/^AtomicSimpleCPU::TickEvent::description() const$/;"	f	class:AtomicSimpleCPU::TickEvent
description	src/cpu/simple/timing.cc	/^TimingSimpleCPU::IprEvent::description() const$/;"	f	class:TimingSimpleCPU::IprEvent
description	src/cpu/simple/timing.hh	/^            const char *description() const { return "Timing CPU dcache tick"; }$/;"	f	struct:TimingSimpleCPU::DcachePort::DTickEvent
description	src/cpu/simple/timing.hh	/^            const char *description() const { return "Timing CPU icache tick"; }$/;"	f	struct:TimingSimpleCPU::IcachePort::ITickEvent
description	src/cpu/simple/timing.hh	/^            const char *description() const { return "Timing CPU tick"; }$/;"	f	struct:TimingSimpleCPU::TimingCPUPort::TickEvent
description	src/cpu/testers/directedtest/RubyDirectedTester.hh	/^        virtual const char *description() const { return "Directed tick"; }$/;"	f	class:RubyDirectedTester::DirectedStartEvent
description	src/cpu/testers/memtest/memtest.hh	/^        virtual const char *description() const { return "MemTest tick"; }$/;"	f	class:MemTest::TickEvent
description	src/cpu/testers/networktest/networktest.hh	/^        virtual const char *description() const { return "NetworkTest tick"; }$/;"	f	class:NetworkTest::TickEvent
description	src/cpu/testers/rubytest/RubyTester.hh	/^        virtual const char *description() const { return "RubyTester tick"; }$/;"	f	class:RubyTester::CheckStartEvent
description	src/dev/arm/gic_pl390.hh	/^        const char *description() const { return "Post Interrupt to CPU"; }$/;"	f	class:Pl390::PostIntEvent
description	src/dev/arm/vgic.hh	/^        const char *description() const { return "Post VInterrupt to CPU"; }$/;"	f	class:VGic::PostVIntEvent
description	src/dev/etherbus.hh	/^        virtual const char *description() const$/;"	f	class:EtherBus::DoneEvent
description	src/dev/ethertap.hh	/^        virtual const char *description() const$/;"	f	class:EtherTap::TxEvent
description	src/dev/intel_8254_timer.cc	/^Intel8254Timer::Counter::CounterEvent::description() const$/;"	f	class:Intel8254Timer::Counter::CounterEvent
description	src/dev/mc146818.cc	/^MC146818::RTCEvent::description() const$/;"	f	class:MC146818::RTCEvent
description	src/dev/mc146818.cc	/^MC146818::RTCTickEvent::description() const$/;"	f	class:MC146818::RTCTickEvent
description	src/dev/uart8250.cc	/^Uart8250::IntrEvent::description() const$/;"	f	class:Uart8250::IntrEvent
description	src/mem/ruby/system/Sequencer.hh	/^        const char *description() const { return "Sequencer deadlock check"; }$/;"	f	class:Sequencer::SequencerWakeupEvent
description	src/sim/debug.cc	/^DebugBreakEvent::description() const$/;"	f	class:DebugBreakEvent
description	src/sim/eventq.cc	/^Event::description() const$/;"	f	class:Event
description	src/sim/eventq.hh	/^    const char *description() const { return "EventWrapped"; }$/;"	f	class:EventWrapper
description	src/sim/global_event.cc	/^GlobalSyncEvent::description() const$/;"	f	class:GlobalSyncEvent
description	src/sim/sim_events.cc	/^CountedExitEvent::description() const$/;"	f	class:CountedExitEvent
description	src/sim/sim_events.cc	/^GlobalSimLoopExitEvent::description() const$/;"	f	class:GlobalSimLoopExitEvent
description	src/sim/sim_events.cc	/^LocalSimLoopExitEvent::description() const$/;"	f	class:LocalSimLoopExitEvent
description	src/sim/stat_control.cc	/^    const char *description() const { return "GlobalStatEvent"; }$/;"	f	class:Stats::StatEvent
descriptions	src/base/stats/text.cc	/^    bool descriptions;$/;"	m	struct:Stats::DistPrint	file:
descriptions	src/base/stats/text.cc	/^    bool descriptions;$/;"	m	struct:Stats::ScalarPrint	file:
descriptions	src/base/stats/text.cc	/^    bool descriptions;$/;"	m	struct:Stats::SparseHistPrint	file:
descriptions	src/base/stats/text.cc	/^    bool descriptions;$/;"	m	struct:Stats::VectorPrint	file:
descriptions	src/base/stats/text.hh	/^    bool descriptions;$/;"	m	class:Stats::Text
descriptor	src/base/loader/object_file.hh	/^    int descriptor;$/;"	m	class:ObjectFile
descs	src/arch/arm/linux/process.hh	/^        SyscallDesc *descs;$/;"	m	struct:ArmLinuxProcessBits::SyscallTable
dest	src/arch/arm/insts/data64.hh	/^    IntRegIndex dest, op1, op2, op3;$/;"	m	class:ArmISA::DataX3RegOp
dest	src/arch/arm/insts/data64.hh	/^    IntRegIndex dest, op1, op2;$/;"	m	class:ArmISA::DataX2RegImmOp
dest	src/arch/arm/insts/data64.hh	/^    IntRegIndex dest, op1, op2;$/;"	m	class:ArmISA::DataX2RegOp
dest	src/arch/arm/insts/data64.hh	/^    IntRegIndex dest, op1, op2;$/;"	m	class:ArmISA::DataXCondSelOp
dest	src/arch/arm/insts/data64.hh	/^    IntRegIndex dest, op1, op2;$/;"	m	class:ArmISA::DataXERegOp
dest	src/arch/arm/insts/data64.hh	/^    IntRegIndex dest, op1, op2;$/;"	m	class:ArmISA::DataXSRegOp
dest	src/arch/arm/insts/data64.hh	/^    IntRegIndex dest, op1;$/;"	m	class:ArmISA::DataX1Reg2ImmOp
dest	src/arch/arm/insts/data64.hh	/^    IntRegIndex dest, op1;$/;"	m	class:ArmISA::DataX1RegImmOp
dest	src/arch/arm/insts/data64.hh	/^    IntRegIndex dest, op1;$/;"	m	class:ArmISA::DataX1RegOp
dest	src/arch/arm/insts/data64.hh	/^    IntRegIndex dest, op1;$/;"	m	class:ArmISA::DataXImmOp
dest	src/arch/arm/insts/data64.hh	/^    IntRegIndex dest;$/;"	m	class:ArmISA::DataXImmOnlyOp
dest	src/arch/arm/insts/macromem.hh	/^    RegIndex dest, op1;$/;"	m	class:ArmISA::MicroNeonMixLaneOp64
dest	src/arch/arm/insts/macromem.hh	/^    RegIndex dest, op1;$/;"	m	class:ArmISA::MicroNeonMixOp
dest	src/arch/arm/insts/macromem.hh	/^    RegIndex dest, op1;$/;"	m	class:ArmISA::MicroNeonMixOp64
dest	src/arch/arm/insts/macromem.hh	/^    RegIndex dest, ura;$/;"	m	class:ArmISA::MicroNeonMemOp
dest	src/arch/arm/insts/mem.hh	/^    IntRegIndex dest;$/;"	m	class:ArmISA::Memory
dest	src/arch/arm/insts/mem.hh	/^    IntRegIndex dest;$/;"	m	class:ArmISA::Swap
dest	src/arch/arm/insts/mem64.hh	/^    IntRegIndex dest;$/;"	m	class:ArmISA::Memory64
dest	src/arch/arm/insts/mem64.hh	/^    IntRegIndex dest;$/;"	m	class:ArmISA::SysDC64
dest	src/arch/arm/insts/misc.hh	/^    IntRegIndex dest;$/;"	m	class:McrrOp
dest	src/arch/arm/insts/misc.hh	/^    IntRegIndex dest;$/;"	m	class:MrrcOp
dest	src/arch/arm/insts/misc.hh	/^    IntRegIndex dest;$/;"	m	class:MrsOp
dest	src/arch/arm/insts/misc.hh	/^    IntRegIndex dest;$/;"	m	class:RegImmImmOp
dest	src/arch/arm/insts/misc.hh	/^    IntRegIndex dest;$/;"	m	class:RegImmOp
dest	src/arch/arm/insts/misc.hh	/^    IntRegIndex dest;$/;"	m	class:RegImmRegOp
dest	src/arch/arm/insts/misc.hh	/^    IntRegIndex dest;$/;"	m	class:RegImmRegShiftOp
dest	src/arch/arm/insts/misc.hh	/^    IntRegIndex dest;$/;"	m	class:RegRegImmImmOp
dest	src/arch/arm/insts/misc.hh	/^    IntRegIndex dest;$/;"	m	class:RegRegImmOp
dest	src/arch/arm/insts/misc.hh	/^    IntRegIndex dest;$/;"	m	class:RegRegOp
dest	src/arch/arm/insts/misc.hh	/^    IntRegIndex dest;$/;"	m	class:RegRegRegImmOp
dest	src/arch/arm/insts/misc.hh	/^    IntRegIndex dest;$/;"	m	class:RegRegRegOp
dest	src/arch/arm/insts/misc.hh	/^    IntRegIndex dest;$/;"	m	class:RegRegRegRegOp
dest	src/arch/arm/insts/misc64.hh	/^    IntRegIndex dest;$/;"	m	class:RegRegImmImmOp64
dest	src/arch/arm/insts/misc64.hh	/^    IntRegIndex dest;$/;"	m	class:RegRegRegImmOp64
dest	src/arch/arm/insts/pred_inst.hh	/^    IntRegIndex dest, op1, op2, shift;$/;"	m	class:ArmISA::DataRegRegOp
dest	src/arch/arm/insts/pred_inst.hh	/^    IntRegIndex dest, op1, op2;$/;"	m	class:ArmISA::DataRegOp
dest	src/arch/arm/insts/pred_inst.hh	/^    IntRegIndex dest, op1;$/;"	m	class:ArmISA::DataImmOp
dest	src/arch/arm/insts/vfp.hh	/^    IntRegIndex dest, op1, op2;$/;"	m	class:ArmISA::FpCondSelOp
dest	src/arch/arm/insts/vfp.hh	/^    IntRegIndex dest;$/;"	m	class:ArmISA::FpRegImmOp
dest	src/arch/arm/insts/vfp.hh	/^    IntRegIndex dest;$/;"	m	class:ArmISA::FpRegRegImmOp
dest	src/arch/arm/insts/vfp.hh	/^    IntRegIndex dest;$/;"	m	class:ArmISA::FpRegRegOp
dest	src/arch/arm/insts/vfp.hh	/^    IntRegIndex dest;$/;"	m	class:ArmISA::FpRegRegRegImmOp
dest	src/arch/arm/insts/vfp.hh	/^    IntRegIndex dest;$/;"	m	class:ArmISA::FpRegRegRegOp
dest	src/arch/arm/insts/vfp.hh	/^    IntRegIndex dest;$/;"	m	class:ArmISA::FpRegRegRegRegOp
dest	src/arch/x86/insts/microfpop.hh	/^        const RegIndex dest;$/;"	m	class:X86ISA::FpOp
dest	src/arch/x86/insts/micromediaop.hh	/^        const RegIndex dest;$/;"	m	class:X86ISA::MediaOpBase
dest	src/arch/x86/insts/microregop.hh	/^        const RegIndex dest;$/;"	m	class:X86ISA::RegOpBase
dest	src/dev/copy_engine_defs.hh	/^    Addr dest;$/;"	m	struct:CopyEngineReg::DmaDesc
dest	src/dev/x86/i82094aa.hh	/^        Bitfield<63, 56> dest;$/;"	m	class:X86ISA::I82094AA
dest	src/mem/packet.hh	/^    PortID dest;$/;"	m	class:Packet
dest2	src/arch/arm/insts/mem.hh	/^    IntRegIndex dest2;$/;"	m	class:ArmISA::MemoryDImm
dest2	src/arch/arm/insts/mem.hh	/^    IntRegIndex dest2;$/;"	m	class:ArmISA::MemoryDReg
dest2	src/arch/arm/insts/mem64.hh	/^    IntRegIndex dest2;$/;"	m	class:ArmISA::MemoryDImm64
dest2	src/arch/arm/insts/misc.hh	/^    IntRegIndex dest2;$/;"	m	class:MrrcOp
destApicID	src/arch/x86/bios/intelmp.hh	/^    uint8_t destApicID;$/;"	m	class:X86ISA::IntelMP::IntAssignment
destApicIntIn	src/arch/x86/bios/intelmp.hh	/^    uint8_t destApicIntIn;$/;"	m	class:X86ISA::IntelMP::IntAssignment
destMode	src/arch/x86/intmessage.hh	/^        Bitfield<19> destMode;$/;"	m	namespace:X86ISA
destMode	src/arch/x86/regs/apic.hh	/^        Bitfield<11> destMode;$/;"	m	namespace:X86ISA
destMode	src/dev/x86/i82094aa.hh	/^        Bitfield<11> destMode;$/;"	m	class:X86ISA::I82094AA
destRegIdx	src/cpu/base_dyn_inst.hh	/^    RegIndex destRegIdx(int i) const { return staticInst->destRegIdx(i); }$/;"	f	class:BaseDynInst
destRegIdx	src/cpu/inorder/inorder_dyn_inst.hh	/^    RegIndex destRegIdx(int i) const { return staticInst->destRegIdx(i); }$/;"	f	class:InOrderDynInst
destRegIdx	src/cpu/static_inst.hh	/^    RegIndex destRegIdx(int i) const { return _destRegIdx[i]; }$/;"	f	class:StaticInst
destShorthand	src/arch/x86/regs/apic.hh	/^        Bitfield<19, 18> destShorthand;$/;"	m	namespace:X86ISA
destSize	src/arch/x86/insts/micromediaop.hh	/^        const uint8_t destSize;$/;"	m	class:X86ISA::MediaOpBase
dest_io_apic_id	src/arch/x86/bios/IntelMP.py	/^    dest_io_apic_id = Param.UInt8(0,$/;"	v	class:X86IntelMPIOIntAssignment
dest_io_apic_intin	src/arch/x86/bios/IntelMP.py	/^    dest_io_apic_intin = Param.UInt8(0,$/;"	v	class:X86IntelMPIOIntAssignment
dest_local_apic_id	src/arch/x86/bios/IntelMP.py	/^    dest_local_apic_id = Param.UInt8(0,$/;"	v	class:X86IntelMPLocalIntAssignment
dest_local_apic_intin	src/arch/x86/bios/IntelMP.py	/^    dest_local_apic_intin = Param.UInt8(0,$/;"	v	class:X86IntelMPLocalIntAssignment
destination	src/arch/x86/intmessage.hh	/^        Bitfield<7, 0> destination;$/;"	m	namespace:X86ISA
destination	src/arch/x86/regs/apic.hh	/^        Bitfield<31, 24> destination;$/;"	m	namespace:X86ISA
destroyStreams	src/proto/protoio.cc	/^ProtoInputStream::destroyStreams()$/;"	f	class:ProtoInputStream
detach	src/base/remote_gdb.cc	/^BaseRemoteGDB::detach()$/;"	f	class:BaseRemoteGDB
detach	src/base/vnc/vncserver.cc	/^VncServer::detach()$/;"	f	class:VncServer
detach	src/cpu/kvm/perfevent.cc	/^PerfKvmCounter::detach()$/;"	f	class:PerfKvmCounter
detach	src/dev/ethertap.cc	/^EtherTap::detach()$/;"	f	class:EtherTap
detach	src/dev/terminal.cc	/^Terminal::detach()$/;"	f	class:Terminal
dev	src/dev/i8254xGBe.hh	/^    IGbE *dev;$/;"	m	class:IGbEInt
dev	src/dev/ns_gige.hh	/^    NSGigE *dev;$/;"	m	class:NSGigEInt
dev	src/dev/sinic.hh	/^    Device *dev;$/;"	m	class:Sinic::Interface
devID	src/dev/ide_disk.hh	/^    int devID;$/;"	m	class:IdeDisk
devIntrChangeMask	src/dev/ns_gige.cc	/^NSGigE::devIntrChangeMask()$/;"	f	class:NSGigE
devIntrChangeMask	src/dev/sinic.cc	/^Device::devIntrChangeMask(uint32_t newmask)$/;"	f	class:Sinic::Device
devIntrClear	src/dev/ns_gige.cc	/^NSGigE::devIntrClear(uint32_t interrupts)$/;"	f	class:NSGigE
devIntrClear	src/dev/sinic.cc	/^Device::devIntrClear(uint32_t interrupts)$/;"	f	class:Sinic::Device
devIntrPost	src/dev/ns_gige.cc	/^NSGigE::devIntrPost(uint32_t interrupts)$/;"	f	class:NSGigE
devIntrPost	src/dev/sinic.cc	/^Device::devIntrPost(uint32_t interrupts)$/;"	f	class:Sinic::Device
devState	src/dev/ide_disk.hh	/^    DevState_t devState;$/;"	m	class:IdeDisk
dev_mondo_head	src/arch/sparc/isa.hh	/^    uint64_t dev_mondo_head;$/;"	m	class:SparcISA::ISA
dev_mondo_tail	src/arch/sparc/isa.hh	/^    uint64_t dev_mondo_tail;$/;"	m	class:SparcISA::ISA
dev_t	src/kern/solaris/solaris.hh	/^    typedef uint64_t dev_t;$/;"	t	class:Solaris
dev_t	src/kern/tru64/tru64.hh	/^    typedef int32_t  dev_t;$/;"	t	class:Tru64
device	src/dev/dma_device.hh	/^    MemObject *device;$/;"	m	class:DmaPort
device	src/dev/ethertap.hh	/^    std::string device;$/;"	m	class:EtherTap
device	src/dev/io_device.hh	/^    PioDevice *device;$/;"	m	class:PioPort
device	src/dev/pcidev.hh	/^        PciDevice *device;$/;"	m	class:PciDevice::PciConfigPort
device	src/dev/pcireg.h	/^        uint16_t device;$/;"	m	struct:PCIConfig::__anon80
device	src/dev/x86/X86IntPin.py	/^    device = Param.SimObject("Device this pin belongs to")$/;"	v	class:X86IntSinkPin
device	src/dev/x86/intdev.hh	/^        IntDevice * device;$/;"	m	class:X86ISA::IntDevice::IntSlavePort
device	src/dev/x86/intdev.hh	/^        IntDevice* device;$/;"	m	class:X86ISA::IntDevice::IntMasterPort
device	src/dev/x86/intdev.hh	/^    IntDevice * device;$/;"	m	class:X86ISA::IntSinkPin
deviceBusWidth	src/mem/dram_ctrl.hh	/^    const uint32_t deviceBusWidth;$/;"	m	class:DRAMCtrl
deviceConfigFile	src/mem/DRAMSim2.py	/^    deviceConfigFile = Param.String("ini\/DDR3_micron_32M_8B_x8_sg15.ini",$/;"	v	class:DRAMSim2
deviceId	src/dev/pcidev.hh	/^        int deviceId;$/;"	m	class:PciDevice::PciConfigPort
deviceRowBufferSize	src/mem/dram_ctrl.hh	/^    const uint32_t deviceRowBufferSize;$/;"	m	class:DRAMCtrl
deviceTiming	src/dev/ide_ctrl.hh	/^    uint8_t deviceTiming;$/;"	m	class:IdeController
device_bus_width	src/mem/DRAMCtrl.py	/^                                      "device\/chip")$/;"	v	class:DRAMCtrl
device_bus_width	src/mem/DRAMCtrl.py	/^    device_bus_width = 128$/;"	v	class:WideIO_200_x128
device_bus_width	src/mem/DRAMCtrl.py	/^    device_bus_width = 32$/;"	v	class:LPDDR2_S4_1066_x32
device_bus_width	src/mem/DRAMCtrl.py	/^    device_bus_width = 32$/;"	v	class:LPDDR3_1600_x32
device_bus_width	src/mem/DRAMCtrl.py	/^    device_bus_width = 8$/;"	v	class:DDR3_1333_x64_DRAMSim2
device_bus_width	src/mem/DRAMCtrl.py	/^    device_bus_width = 8$/;"	v	class:DDR3_1600_x64
device_rowbuffer_size	src/mem/DRAMCtrl.py	/^                                           "device\/chip")$/;"	v	class:DRAMCtrl
device_rowbuffer_size	src/mem/DRAMCtrl.py	/^    device_rowbuffer_size = '1kB'$/;"	v	class:DDR3_1333_x64_DRAMSim2
device_rowbuffer_size	src/mem/DRAMCtrl.py	/^    device_rowbuffer_size = '1kB'$/;"	v	class:DDR3_1600_x64
device_rowbuffer_size	src/mem/DRAMCtrl.py	/^    device_rowbuffer_size = '1kB'$/;"	v	class:LPDDR2_S4_1066_x32
device_rowbuffer_size	src/mem/DRAMCtrl.py	/^    device_rowbuffer_size = '4kB'$/;"	v	class:LPDDR3_1600_x32
device_rowbuffer_size	src/mem/DRAMCtrl.py	/^    device_rowbuffer_size = '4kB'$/;"	v	class:WideIO_200_x128
devicename	src/dev/BadDevice.py	/^    devicename = Param.String("Name of device to error on")$/;"	v	class:BadDevice
devicesPerRank	src/mem/dram_ctrl.hh	/^    const uint32_t devicesPerRank;$/;"	m	class:DRAMCtrl
devices_per_rank	src/mem/DRAMCtrl.py	/^    devices_per_rank = 1$/;"	v	class:LPDDR2_S4_1066_x32
devices_per_rank	src/mem/DRAMCtrl.py	/^    devices_per_rank = 1$/;"	v	class:LPDDR3_1600_x32
devices_per_rank	src/mem/DRAMCtrl.py	/^    devices_per_rank = 1$/;"	v	class:WideIO_200_x128
devices_per_rank	src/mem/DRAMCtrl.py	/^    devices_per_rank = 8$/;"	v	class:DDR3_1333_x64_DRAMSim2
devices_per_rank	src/mem/DRAMCtrl.py	/^    devices_per_rank = 8$/;"	v	class:DDR3_1600_x64
devices_per_rank	src/mem/DRAMCtrl.py	/^    devices_per_rank = Param.Unsigned("Number of devices\/chips per rank")$/;"	v	class:DRAMCtrl
devlist	src/dev/etherbus.hh	/^    devlist_t devlist;$/;"	m	class:EtherBus
devlist_t	src/dev/etherbus.hh	/^    typedef std::list<EtherInt *> devlist_t;$/;"	t	class:EtherBus
devname	src/dev/baddev.hh	/^    std::string devname;$/;"	m	class:BadDevice
dexcCode	src/arch/mips/dt_constants.hh	/^    Bitfield<14, 10> dexcCode;$/;"	m	namespace:MipsISA
df	src/arch/x86/regs/misc.hh	/^        Bitfield<10> df; \/\/ Direction Flag$/;"	m	namespace:X86ISA
dib	src/arch/mips/dt_constants.hh	/^    Bitfield<4>      dib;$/;"	m	namespace:MipsISA
dibimpr	src/arch/mips/dt_constants.hh	/^    Bitfield<6>      dibimpr;$/;"	m	namespace:MipsISA
diffcount	src/cpu/legiontrace.cc	/^static int diffcount = 0;$/;"	v	file:
digit2i	src/base/remote_gdb.cc	/^BaseRemoteGDB::digit2i(char c)$/;"	f	class:BaseRemoteGDB
dim	src/dev/alpha/tsunami_cchip.hh	/^    uint64_t dim[Tsunami::Max_CPUs];$/;"	m	class:TsunamiCChip
dimm_bit_0	src/mem/ruby/system/RubyMemoryControl.py	/^    dimm_bit_0 = Param.Int(12, "");$/;"	v	class:RubyMemoryControl
dimms_per_channel	src/mem/ruby/system/RubyMemoryControl.py	/^    dimms_per_channel = Param.Int(2, "");$/;"	v	class:RubyMemoryControl
dint	src/arch/mips/dt_constants.hh	/^    Bitfield<5>      dint;$/;"	m	namespace:MipsISA
dir	src/base/output.hh	/^    std::string dir;$/;"	m	class:OutputDirectory
dir	src/dev/alpha/tsunami_cchip.hh	/^    uint64_t dir[Tsunami::Max_CPUs];$/;"	m	class:TsunamiCChip
dir	src/sim/serialize.cc	/^Checkpoint::dir()$/;"	f	class:Checkpoint
directToStage2	src/arch/arm/tlb.hh	/^    bool directToStage2; \/\/ Indicates whether all translation requests should$/;"	m	class:ArmISA::TLB
directedStartEvent	src/cpu/testers/directedtest/RubyDirectedTester.hh	/^    DirectedStartEvent directedStartEvent;$/;"	m	class:RubyDirectedTester
direction	src/mem/ruby/network/Topology.hh	/^    LinkDirection direction;$/;"	m	struct:LinkEntry
directory	src/base/output.cc	/^OutputDirectory::directory() const$/;"	f	class:OutputDirectory
dirent	src/kern/tru64/tru64.hh	/^    struct dirent$/;"	s	class:Tru64
dirty	src/arch/arm/table_walker.hh	/^        bool dirty() const$/;"	f	class:ArmISA::TableWalker::L1Descriptor
dirty	src/arch/arm/table_walker.hh	/^        bool dirty() const$/;"	f	class:ArmISA::TableWalker::L2Descriptor
dirty	src/arch/arm/table_walker.hh	/^        bool dirty() const$/;"	f	class:ArmISA::TableWalker::LongDescriptor
dirty	src/dev/sparc/mm_disk.hh	/^    bool dirty;$/;"	m	class:MmDisk
disA20M	src/arch/x86/regs/misc.hh	/^        Bitfield<2> disA20M;$/;"	m	namespace:X86ISA
disable	src/base/debug.cc	/^    disable()$/;"	f	struct:Debug::AllFlags
disable	src/base/debug.cc	/^CompoundFlag::disable()$/;"	f	class:Debug::CompoundFlag
disable	src/base/debug.hh	/^    void disable() { _status = false; }$/;"	f	class:Debug::SimpleFlag
disable	src/base/pollevent.cc	/^PollEvent::disable()$/;"	f	class:PollEvent
disable	src/python/m5/trace.py	/^def disable():$/;"	f
disableAddrDists	src/mem/comm_monitor.hh	/^        bool disableAddrDists;$/;"	m	struct:CommMonitor::MonitorStats
disableAll	src/base/socket.cc	/^ListenSocket::disableAll()$/;"	f	class:ListenSocket
disableAllListeners	src/python/m5/simulate.py	/^from internal.core import disableAllListeners$/;"	i
disableBandwidthHists	src/mem/comm_monitor.hh	/^        bool disableBandwidthHists;$/;"	m	struct:CommMonitor::MonitorStats
disableBurstLengthHists	src/mem/comm_monitor.hh	/^        bool disableBurstLengthHists;$/;"	m	struct:CommMonitor::MonitorStats
disableITTDists	src/mem/comm_monitor.hh	/^        bool disableITTDists;$/;"	m	struct:CommMonitor::MonitorStats
disableKeyboard	src/dev/x86/i8042.hh	/^        Bitfield<4> disableKeyboard;$/;"	m	class:X86ISA::I8042
disableLatencyHists	src/mem/comm_monitor.hh	/^        bool disableLatencyHists;$/;"	m	struct:CommMonitor::MonitorStats
disableMouse	src/dev/x86/i8042.hh	/^        Bitfield<5> disableMouse;$/;"	m	class:X86ISA::I8042
disableOutstandingHists	src/mem/comm_monitor.hh	/^        bool disableOutstandingHists;$/;"	m	struct:CommMonitor::MonitorStats
disableTransactionHists	src/mem/comm_monitor.hh	/^        bool disableTransactionHists;$/;"	m	struct:CommMonitor::MonitorStats
disable_addr_dists	src/mem/CommMonitor.py	/^    disable_addr_dists = Param.Bool(True, "Disable address distributions")$/;"	v	class:CommMonitor
disable_bandwidth_hists	src/mem/CommMonitor.py	/^    disable_bandwidth_hists = Param.Bool(False, "Disable bandwidth histograms")$/;"	v	class:CommMonitor
disable_burst_length_hists	src/mem/CommMonitor.py	/^                                                "histograms")$/;"	v	class:CommMonitor
disable_itt_dists	src/mem/CommMonitor.py	/^    disable_itt_dists = Param.Bool(False, "Disable ITT distributions")$/;"	v	class:CommMonitor
disable_latency_hists	src/mem/CommMonitor.py	/^    disable_latency_hists = Param.Bool(False, "Disable latency histograms")$/;"	v	class:CommMonitor
disable_outstanding_hists	src/mem/CommMonitor.py	/^                                               "requests histograms")$/;"	v	class:CommMonitor
disable_transaction_hists	src/mem/CommMonitor.py	/^                                               "histograms")$/;"	v	class:CommMonitor
disabled	src/arch/arm/faults.hh	/^    bool disabled;$/;"	m	class:ArmISA::UndefinedInstruction
disabled	src/cpu/kvm/perfevent.hh	/^    PerfKvmCounterConfig &disabled(bool val) {$/;"	f	class:PerfKvmCounterConfig
disabledFault	src/arch/arm/insts/static_inst.hh	/^    disabledFault() const$/;"	f	class:ArmISA::ArmStaticInst
disarm	src/cpu/kvm/timer.cc	/^PerfKvmTimer::disarm()$/;"	f	class:PerfKvmTimer
disarm	src/cpu/kvm/timer.cc	/^PosixKvmTimer::disarm()$/;"	f	class:PosixKvmTimer
disassemble	src/arch/power/insts/branch.cc	/^PCDependentDisassembly::disassemble(Addr pc, const SymbolTable *symtab) const$/;"	f	class:PCDependentDisassembly
disassemble	src/cpu/static_inst.cc	/^StaticInst::disassemble(Addr pc, const SymbolTable *symtab) const$/;"	f	class:StaticInst
discardPendingSignal	src/cpu/kvm/base.cc	/^BaseKvmCPU::discardPendingSignal(int signum) const$/;"	f	class:BaseKvmCPU
disk	src/dev/SimpleDisk.py	/^    disk = Param.DiskImage("Disk Image")$/;"	v	class:SimpleDisk
disk	src/dev/alpha/AlphaBackdoor.py	/^    disk = Param.SimpleDisk("Simple Disk")$/;"	v	class:AlphaBackdoor
disk	src/dev/alpha/backdoor.hh	/^    SimpleDisk *disk;$/;"	m	class:AlphaBackdoor
diskBlock	src/dev/alpha/access.h	/^    uint64_t    diskBlock;              \/\/ 50:$/;"	m	struct:AlphaAccess
diskBlock	src/dev/mips/access.h	/^    uint32_t    diskBlock;              \/\/ 30:$/;"	m	struct:MipsAccess
diskCount	src/dev/alpha/access.h	/^    uint64_t    diskCount;              \/\/ 40:$/;"	m	struct:AlphaAccess
diskCount	src/dev/mips/access.h	/^    uint32_t    diskCount;              \/\/ 28:$/;"	m	struct:MipsAccess
diskData	src/dev/sparc/mm_disk.hh	/^    uint8_t diskData[SectorSize];$/;"	m	class:MmDisk
diskDelay	src/dev/ide_disk.hh	/^    int diskDelay;$/;"	m	class:IdeDisk
diskOperation	src/dev/alpha/access.h	/^    uint64_t    diskOperation;          \/\/ 58:$/;"	m	struct:AlphaAccess
diskOperation	src/dev/mips/access.h	/^    uint32_t    diskOperation;          \/\/ 34:$/;"	m	struct:MipsAccess
diskPAddr	src/dev/alpha/access.h	/^    uint64_t    diskPAddr;              \/\/ 48:$/;"	m	struct:AlphaAccess
diskPAddr	src/dev/mips/access.h	/^    uint32_t    diskPAddr;              \/\/ 2c:$/;"	m	struct:MipsAccess
diskUnit	src/dev/alpha/access.h	/^    uint64_t    diskUnit;               \/\/ 38:$/;"	m	struct:AlphaAccess
diskUnit	src/dev/mips/access.h	/^    uint32_t    diskUnit;               \/\/ 24:$/;"	m	struct:MipsAccess
disk_size	src/dev/disk_image.hh	/^    mutable std::streampos disk_size;$/;"	m	class:RawDiskImage
disks	src/dev/Ide.py	/^    disks = VectorParam.IdeDisk("IDE disks attached to this controller")$/;"	v	class:IdeController
dismiss	src/arch/x86/regs/misc.hh	/^        Bitfield<0> dismiss;$/;"	m	namespace:X86ISA
disp	src/arch/power/insts/branch.hh	/^    uint32_t disp;$/;"	m	class:PowerISA::BranchPCRel
disp	src/arch/power/insts/branch.hh	/^    uint32_t disp;$/;"	m	class:PowerISA::BranchPCRelCond
disp	src/arch/power/insts/mem.hh	/^    int16_t disp;$/;"	m	class:PowerISA::MemDispOp
disp	src/arch/x86/insts/microldstop.hh	/^        const uint64_t disp;$/;"	m	class:X86ISA::LdStOp
dispSize	src/arch/x86/types.hh	/^        uint8_t dispSize;$/;"	m	struct:X86ISA::ExtMachInst
dispatch	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::dispatch(ThreadID tid)$/;"	f	class:DefaultIEW
dispatch	src/cpu/ozone/back_end.hh	/^    std::list<DynInstPtr> dispatch;$/;"	m	class:BackEnd
dispatchAccess	src/dev/ide_ctrl.cc	/^IdeController::dispatchAccess(PacketPtr pkt, bool read)$/;"	f	class:IdeController
dispatchCountStat	src/cpu/ozone/front_end.hh	/^    Stats::Scalar dispatchCountStat;$/;"	m	class:FrontEnd
dispatchInsts	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::dispatchInsts(ThreadID tid)$/;"	f	class:DefaultIEW
dispatchInsts	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::dispatchInsts()$/;"	f	class:BackEnd
dispatchInsts	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::dispatchInsts()$/;"	f	class:LWBackEnd
dispatchRate	src/cpu/ozone/front_end.hh	/^    Stats::Formula dispatchRate;$/;"	m	class:FrontEnd
dispatchSerializeStallCycles	src/cpu/ozone/front_end.hh	/^    Stats::Scalar dispatchSerializeStallCycles;$/;"	m	class:FrontEnd
dispatchSize	src/cpu/ozone/back_end.hh	/^    int dispatchSize;$/;"	m	class:BackEnd
dispatchSize	src/cpu/ozone/lw_back_end.hh	/^    int dispatchSize;$/;"	m	class:LWBackEnd
dispatchStall	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::dispatchStall()$/;"	f	class:BackEnd
dispatchStall	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::dispatchStall()$/;"	f	class:LWBackEnd
dispatchStatus	src/cpu/o3/iew.hh	/^    StageStatus dispatchStatus[Impl::MaxThreads];$/;"	m	class:DefaultIEW
dispatchStatus	src/cpu/ozone/back_end.hh	/^    Status dispatchStatus;$/;"	m	class:BackEnd
dispatchStatus	src/cpu/ozone/lw_back_end.hh	/^    Status dispatchStatus;$/;"	m	class:LWBackEnd
dispatchTick	src/cpu/o3/dyn_inst.hh	/^    int32_t dispatchTick;$/;"	m	class:BaseO3DynInst
dispatchWidth	src/cpu/o3/O3CPU.py	/^    dispatchWidth = Param.Unsigned(8, "Dispatch width")$/;"	v	class:DerivO3CPU
dispatchWidth	src/cpu/o3/iew.hh	/^    unsigned dispatchWidth;$/;"	m	class:DefaultIEW
dispatchWidth	src/cpu/ozone/back_end.hh	/^    int dispatchWidth;$/;"	m	class:BackEnd
dispatchWidth	src/cpu/ozone/lw_back_end.hh	/^    int dispatchWidth;$/;"	m	class:LWBackEnd
dispatchWidth	src/cpu/ozone/simple_params.hh	/^    int dispatchWidth;$/;"	m	class:SimpleParams
dispatched	src/cpu/o3/comm.hh	/^        unsigned dispatched;$/;"	m	struct:TimeBufStruct::iewComm
dispatchedSerializing	src/cpu/ozone/front_end.hh	/^    Stats::Scalar dispatchedSerializing;$/;"	m	class:FrontEnd
dispatchedTempSerializing	src/cpu/ozone/front_end.hh	/^    Stats::Scalar dispatchedTempSerializing;$/;"	m	class:FrontEnd
dispatchedToLSQ	src/cpu/o3/comm.hh	/^        unsigned dispatchedToLSQ;$/;"	m	struct:TimeBufStruct::iewComm
displacement	src/arch/x86/types.hh	/^        uint64_t displacement;$/;"	m	struct:X86ISA::ExtMachInst
displacementSize	src/arch/x86/decoder.hh	/^    int displacementSize;$/;"	m	class:X86ISA::Decoder
display	src/arch/isa_parser.py	/^    def display(self, filename_stack, print_traceback=debug):$/;"	m	class:ISAParserError
display	src/base/stats/info.hh	/^const FlagsType display =       0x0002;$/;"	m	namespace:Stats
display	src/python/m5/util/sorteddict.py	/^    def display(d):$/;"	m	class:SortedDict
dist	src/base/stats/info.hh	/^const FlagsType dist =          0x0080;$/;"	m	namespace:Stats
distAddr	src/dev/arm/gic_pl390.hh	/^    Addr distAddr;$/;"	m	class:Pl390
distPioDelay	src/dev/arm/gic_pl390.hh	/^    Tick distPioDelay;$/;"	m	class:Pl390
dist_addr	src/dev/arm/Gic.py	/^    dist_addr = Param.Addr(0x1f001000, "Address for distributor")$/;"	v	class:Pl390
dist_pio_delay	src/dev/arm/Gic.py	/^    dist_pio_delay = Param.Latency('10ns', "Delay for PIO r\/w to distributor")$/;"	v	class:Pl390
div16Latency	src/cpu/inorder/InOrderCPU.py	/^    div16Latency = Param.Cycles(1, "Latency for 16-bit Divide Operations")$/;"	v	class:InOrderCPU
div16Latency	src/cpu/inorder/resources/mult_div_unit.hh	/^    Cycles div16Latency;$/;"	m	class:MultDivUnit
div16RepeatRate	src/cpu/inorder/InOrderCPU.py	/^    div16RepeatRate = Param.Cycles(1, "Repeat Rate for 16-bit Divide Operations")$/;"	v	class:InOrderCPU
div16RepeatRate	src/cpu/inorder/resources/mult_div_unit.hh	/^    unsigned div16RepeatRate;$/;"	m	class:MultDivUnit
div24Latency	src/cpu/inorder/InOrderCPU.py	/^    div24Latency = Param.Cycles(1, "Latency for 24-bit Divide Operations")$/;"	v	class:InOrderCPU
div24Latency	src/cpu/inorder/resources/mult_div_unit.hh	/^    Cycles div24Latency;$/;"	m	class:MultDivUnit
div24RepeatRate	src/cpu/inorder/InOrderCPU.py	/^    div24RepeatRate = Param.Cycles(1, "Repeat Rate for 24-bit Divide Operations")$/;"	v	class:InOrderCPU
div24RepeatRate	src/cpu/inorder/resources/mult_div_unit.hh	/^    unsigned div24RepeatRate;$/;"	m	class:MultDivUnit
div32Latency	src/cpu/inorder/InOrderCPU.py	/^    div32Latency = Param.Cycles(1, "Latency for 32-bit Divide Operations")$/;"	v	class:InOrderCPU
div32Latency	src/cpu/inorder/resources/mult_div_unit.hh	/^    Cycles div32Latency;$/;"	m	class:MultDivUnit
div32RepeatRate	src/cpu/inorder/InOrderCPU.py	/^    div32RepeatRate = Param.Cycles(1, "Repeat Rate for 32-bit Divide Operations")$/;"	v	class:InOrderCPU
div32RepeatRate	src/cpu/inorder/resources/mult_div_unit.hh	/^    unsigned div32RepeatRate;$/;"	m	class:MultDivUnit
div8Latency	src/cpu/inorder/InOrderCPU.py	/^    div8Latency = Param.Cycles(1, "Latency for 8-bit Divide Operations")$/;"	v	class:InOrderCPU
div8Latency	src/cpu/inorder/resources/mult_div_unit.hh	/^    Cycles div8Latency;$/;"	m	class:MultDivUnit
div8RepeatRate	src/cpu/inorder/InOrderCPU.py	/^    div8RepeatRate = Param.Cycles(1, "Repeat Rate for 8-bit Divide Operations")$/;"	v	class:InOrderCPU
div8RepeatRate	src/cpu/inorder/resources/mult_div_unit.hh	/^    unsigned div8RepeatRate;$/;"	m	class:MultDivUnit
divCeil	src/base/intmath.hh	/^divCeil(const T& a, const U& b)$/;"	f
divide	src/arch/arm/miscregs.hh	/^        Bitfield<19, 16> divide;$/;"	m	namespace:ArmISA
divideFromConf	src/arch/x86/interrupts.cc	/^divideFromConf(uint32_t conf)$/;"	f
divides	src/cpu/inorder/resources/mult_div_unit.hh	/^    Stats::Scalar divides;$/;"	m	class:MultDivUnit
dl	src/arch/mips/pra_constants.hh	/^    Bitfield<12, 10> dl;$/;"	m	namespace:MipsISA
dllla	src/dev/pcireg.h	/^        Bitfield<20>    dllla;$/;"	m	struct:PXCAP
dm	src/arch/mips/dt_constants.hh	/^    Bitfield<30>     dm;$/;"	m	namespace:MipsISA
dm	src/dev/mc146818.hh	/^        Bitfield<2> dm;        \/\/\/ 0 = BCD, 1 = Binary coded time$/;"	m	class:MC146818
dma	src/dev/CopyEngine.py	/^    dma = VectorMasterPort("Copy engine DMA port")$/;"	v	class:CopyEngine
dma	src/dev/Device.py	/^    dma = MasterPort("DMA port")$/;"	v	class:DmaDevice
dma1	src/dev/x86/SouthBridge.py	/^    dma1 = Param.I8237(_dma1, "The first dma controller")$/;"	v	class:SouthBridge
dmaAborted	src/dev/ide_disk.hh	/^    bool dmaAborted;$/;"	m	class:IdeDisk
dmaAction	src/dev/dma_device.cc	/^DmaPort::dmaAction(Packet::Command cmd, Addr addr, int size, Event *event,$/;"	f	class:DmaPort
dmaBuffer	src/dev/arm/pl111.hh	/^    uint8_t *dmaBuffer;$/;"	m	class:Pl111
dmaBurstLength	src/dev/arm/hdlcd.hh	/^    inline size_t dmaBurstLength() const {$/;"	f	class:HDLcd
dmaBytesInFlight	src/dev/arm/hdlcd.hh	/^    uint32_t dmaBytesInFlight;$/;"	m	class:HDLcd
dmaCap0	src/dev/ide_ctrl.hh	/^        Bitfield<6> dmaCap0;$/;"	m	class:IdeController
dmaCap1	src/dev/ide_ctrl.hh	/^        Bitfield<5> dmaCap1;$/;"	m	class:IdeController
dmaCurAddr	src/dev/arm/hdlcd.hh	/^    Addr dmaCurAddr;$/;"	m	class:HDLcd
dmaDataFree	src/dev/ns_gige.hh	/^    bool dmaDataFree;$/;"	m	class:NSGigE
dmaDescFree	src/dev/ns_gige.hh	/^    bool dmaDescFree;$/;"	m	class:NSGigE
dmaDone	src/dev/arm/hdlcd.cc	/^HDLcd::dmaDone(DmaDoneEvent *event)$/;"	f	class:HDLcd
dmaDone	src/dev/arm/pl111.cc	/^Pl111::dmaDone()$/;"	f	class:Pl111
dmaDoneEventAll	src/dev/arm/hdlcd.hh	/^    std::vector<DmaDoneEvent> dmaDoneEventAll;$/;"	m	class:HDLcd
dmaDoneEventAll	src/dev/arm/pl111.hh	/^    std::vector<DmaDoneEvent> dmaDoneEventAll;$/;"	m	class:Pl111
dmaDoneEventFree	src/dev/arm/hdlcd.hh	/^    std::vector<DmaDoneEvent *> dmaDoneEventFree;$/;"	m	class:HDLcd
dmaDoneEventFree	src/dev/arm/pl111.hh	/^    std::vector<DmaDoneEvent *> dmaDoneEventFree;$/;"	m	class:Pl111
dmaError	src/dev/ide_ctrl.hh	/^        Bitfield<1> dmaError;$/;"	m	class:IdeController
dmaIdle	src/dev/ns_gige.hh	/^        dmaIdle,$/;"	e	enum:NSGigE::DmaState
dmaMaxAddr	src/dev/arm/hdlcd.hh	/^    Addr dmaMaxAddr;$/;"	m	class:HDLcd
dmaOutstanding	src/cpu/testers/memtest/memtest.hh	/^    bool dmaOutstanding;$/;"	m	class:MemTest
dmaPending	src/dev/dma_device.hh	/^    bool dmaPending() const { return dmaPort.dmaPending(); }$/;"	f	class:DmaDevice
dmaPending	src/dev/dma_device.hh	/^    bool dmaPending() const { return pendingCount > 0; }$/;"	f	class:DmaPort
dmaPendingNum	src/dev/arm/hdlcd.hh	/^    size_t dmaPendingNum;$/;"	m	class:HDLcd
dmaPendingNum	src/dev/arm/pl111.hh	/^    int dmaPendingNum;$/;"	m	class:Pl111
dmaPort	src/dev/dma_device.hh	/^    DmaPort dmaPort;$/;"	m	class:DmaDevice
dmaPrdReadDone	src/dev/ide_disk.cc	/^IdeDisk::dmaPrdReadDone()$/;"	f	class:IdeDisk
dmaPrdReadEvent	src/dev/ide_disk.hh	/^    EventWrapper<IdeDisk, &IdeDisk::dmaPrdReadDone> dmaPrdReadEvent;$/;"	m	class:IdeDisk
dmaRead	src/dev/dma_device.hh	/^    void dmaRead(Addr addr, int size, Event *event, uint8_t *data,$/;"	f	class:DmaDevice
dmaRead	src/dev/ide_disk.hh	/^    bool dmaRead;$/;"	m	class:IdeDisk
dmaReadBytes	src/dev/ide_disk.hh	/^    Stats::Scalar dmaReadBytes;$/;"	m	class:IdeDisk
dmaReadCG	src/dev/ide_disk.hh	/^    ChunkGenerator *dmaReadCG;$/;"	m	class:IdeDisk
dmaReadDelay	src/dev/ns_gige.hh	/^    Tick dmaReadDelay;$/;"	m	class:NSGigE
dmaReadDelay	src/dev/sinic.hh	/^    Tick dmaReadDelay;$/;"	m	class:Sinic::Device
dmaReadDone	src/dev/ide_disk.cc	/^IdeDisk::dmaReadDone()$/;"	f	class:IdeDisk
dmaReadEvent	src/dev/ide_disk.hh	/^    EventWrapper<IdeDisk, &IdeDisk::dmaReadDone> dmaReadEvent;$/;"	m	class:IdeDisk
dmaReadFactor	src/dev/ns_gige.hh	/^    Tick dmaReadFactor;$/;"	m	class:NSGigE
dmaReadFactor	src/dev/sinic.hh	/^    Tick dmaReadFactor;$/;"	m	class:Sinic::Device
dmaReadFullPages	src/dev/ide_disk.hh	/^    Stats::Scalar dmaReadFullPages;$/;"	m	class:IdeDisk
dmaReadTxs	src/dev/ide_disk.hh	/^    Stats::Scalar dmaReadTxs;$/;"	m	class:IdeDisk
dmaReadWaitEvent	src/dev/ide_disk.hh	/^    EventWrapper<IdeDisk, &IdeDisk::doDmaRead> dmaReadWaitEvent;$/;"	m	class:IdeDisk
dmaReadWaiting	src/dev/ns_gige.hh	/^        dmaReadWaiting,$/;"	e	enum:NSGigE::DmaState
dmaReading	src/dev/ns_gige.hh	/^        dmaReading,$/;"	e	enum:NSGigE::DmaState
dmaSize	src/dev/arm/pl111.hh	/^    static const int dmaSize            = 8;    \/\/ 64 bits$/;"	m	class:Pl111
dmaStartAddr	src/dev/arm/hdlcd.hh	/^    Addr dmaStartAddr;$/;"	m	class:HDLcd
dmaState	src/dev/ide_disk.hh	/^    DmaState_t dmaState;$/;"	m	class:IdeDisk
dmaTransferEvent	src/dev/ide_disk.hh	/^    EventWrapper<IdeDisk, &IdeDisk::doDmaTransfer> dmaTransferEvent;$/;"	m	class:IdeDisk
dmaWrite	src/dev/dma_device.hh	/^    void dmaWrite(Addr addr, int size, Event *event, uint8_t *data,$/;"	f	class:DmaDevice
dmaWriteBytes	src/dev/ide_disk.hh	/^    Stats::Scalar dmaWriteBytes;$/;"	m	class:IdeDisk
dmaWriteCG	src/dev/ide_disk.hh	/^    ChunkGenerator *dmaWriteCG;$/;"	m	class:IdeDisk
dmaWriteDelay	src/dev/ns_gige.hh	/^    Tick dmaWriteDelay;$/;"	m	class:NSGigE
dmaWriteDelay	src/dev/sinic.hh	/^    Tick dmaWriteDelay;$/;"	m	class:Sinic::Device
dmaWriteDone	src/dev/ide_disk.cc	/^IdeDisk::dmaWriteDone()$/;"	f	class:IdeDisk
dmaWriteEvent	src/dev/ide_disk.hh	/^    EventWrapper<IdeDisk, &IdeDisk::dmaWriteDone> dmaWriteEvent;$/;"	m	class:IdeDisk
dmaWriteFactor	src/dev/ns_gige.hh	/^    Tick dmaWriteFactor;$/;"	m	class:NSGigE
dmaWriteFactor	src/dev/sinic.hh	/^    Tick dmaWriteFactor;$/;"	m	class:Sinic::Device
dmaWriteFullPages	src/dev/ide_disk.hh	/^    Stats::Scalar dmaWriteFullPages;$/;"	m	class:IdeDisk
dmaWriteTxs	src/dev/ide_disk.hh	/^    Stats::Scalar dmaWriteTxs;$/;"	m	class:IdeDisk
dmaWriteWaitEvent	src/dev/ide_disk.hh	/^    EventWrapper<IdeDisk, &IdeDisk::doDmaWrite> dmaWriteWaitEvent;$/;"	m	class:IdeDisk
dmaWriteWaiting	src/dev/ns_gige.hh	/^        dmaWriteWaiting$/;"	e	enum:NSGigE::DmaState
dmaWriting	src/dev/ns_gige.hh	/^        dmaWriting,$/;"	e	enum:NSGigE::DmaState
dma_data_free	src/dev/Ethernet.py	/^    dma_data_free = Param.Bool(False, "DMA of Data is free")$/;"	v	class:NSGigE
dma_desc_free	src/dev/Ethernet.py	/^    dma_desc_free = Param.Bool(False, "DMA of Descriptors is free")$/;"	v	class:NSGigE
dma_end	src/dev/arm/hdlcd.hh	/^        Bitfield<0> dma_end;$/;"	m	class:HDLcd
dma_no_allocate	src/dev/Ethernet.py	/^    dma_no_allocate = Param.Bool(True, "Should we allocate cache on read")$/;"	v	class:NSGigE
dma_read_delay	src/dev/Ethernet.py	/^    dma_read_delay = Param.Latency('0us', "fixed delay for dma reads")$/;"	v	class:EtherDevBase
dma_read_factor	src/dev/Ethernet.py	/^    dma_read_factor = Param.Latency('0us', "multiplier for dma reads")$/;"	v	class:EtherDevBase
dma_write_delay	src/dev/Ethernet.py	/^    dma_write_delay = Param.Latency('0us', "fixed delay for dma writes")$/;"	v	class:EtherDevBase
dma_write_factor	src/dev/Ethernet.py	/^    dma_write_factor = Param.Latency('0us', "multiplier for dma writes")$/;"	v	class:EtherDevBase
dmac_fake	src/dev/arm/RealView.py	/^    dmac_fake     = AmbaFake(pio_addr=0x10030000)$/;"	v	class:RealViewEB
dmac_fake	src/dev/arm/RealView.py	/^    dmac_fake     = AmbaFake(pio_addr=0x10030000)$/;"	v	class:RealViewPBX
dn	src/arch/arm/miscregs.hh	/^        Bitfield<25> dn;$/;"	m	namespace:ArmISA
dnHigh	src/base/loader/coff_sym.h	/^    coff_int    dnHigh;         \/* high dimension *\/$/;"	m	union:__anon44
dnLow	src/base/loader/coff_sym.h	/^    coff_int    dnLow;          \/* low dimension *\/$/;"	m	union:__anon44
dnNil	src/base/loader/coff_sym.h	/^#define dnNil /;"	d
doCacheAccess	src/cpu/inorder/resource.hh	/^    virtual void doCacheAccess(DynInstPtr inst, uint64_t *write_result = NULL,$/;"	f	class:Resource
doCacheAccess	src/cpu/inorder/resources/cache_unit.cc	/^CacheUnit::doCacheAccess(DynInstPtr inst, uint64_t *write_res,$/;"	f	class:CacheUnit
doCalibrateClocks	src/arch/alpha/freebsd/system.cc	/^FreebsdAlphaSystem::doCalibrateClocks(ThreadContext *tc)$/;"	f	class:FreebsdAlphaSystem
doContextSwitch	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::doContextSwitch()$/;"	f	class:FullO3CPU
doCpuid	src/arch/x86/cpuid.cc	/^    doCpuid(ThreadContext * tc, uint32_t function,$/;"	f	namespace:X86ISA
doDRAMAccess	src/mem/dram_ctrl.cc	/^DRAMCtrl::doDRAMAccess(DRAMPacket* dram_pkt)$/;"	f	class:DRAMCtrl
doDebugBreak	src/sim/sim_object.hh	/^    bool doDebugBreak;$/;"	m	class:SimObject
doDisplacementState	src/arch/x86/decoder.cc	/^Decoder::doDisplacementState()$/;"	f	class:X86ISA::Decoder
doDmaDataRead	src/dev/ide_disk.cc	/^IdeDisk::doDmaDataRead()$/;"	f	class:IdeDisk
doDmaDataWrite	src/dev/ide_disk.cc	/^IdeDisk::doDmaDataWrite()$/;"	f	class:IdeDisk
doDmaRead	src/dev/ide_disk.cc	/^IdeDisk::doDmaRead()$/;"	f	class:IdeDisk
doDmaTransfer	src/dev/ide_disk.cc	/^IdeDisk::doDmaTransfer()$/;"	f	class:IdeDisk
doDmaWrite	src/dev/ide_disk.cc	/^IdeDisk::doDmaWrite()$/;"	f	class:IdeDisk
doDq	src/base/cp_annotate.cc	/^CPA::doDq(System *sys, int flags, int cpuid, int sm,$/;"	f	class:CPA
doExitCleanup	src/sim/core.cc	/^doExitCleanup()$/;"	f
doFastWrites	src/mem/cache/cache.hh	/^    const bool doFastWrites;$/;"	m	class:Cache
doFetchAccess	src/cpu/inorder/resource.hh	/^    virtual Fault doFetchAccess(DynInstPtr inst)$/;"	f	class:Resource
doFromCacheState	src/arch/x86/decoder.cc	/^Decoder::doFromCacheState()$/;"	f	class:X86ISA::Decoder
doImmediateState	src/arch/x86/decoder.cc	/^Decoder::doImmediateState()$/;"	f	class:X86ISA::Decoder
doInit	src/base/statistics.hh	/^    doInit()$/;"	f	class:Stats::DistBase
doInit	src/base/statistics.hh	/^    doInit()$/;"	f	class:Stats::ScalarBase
doInit	src/base/statistics.hh	/^    doInit()$/;"	f	class:Stats::SparseHistBase
doInit	src/base/statistics.hh	/^    doInit(size_type s)$/;"	f	class:Stats::VectorBase
doInit	src/base/statistics.hh	/^    doInit(size_type s)$/;"	f	class:Stats::VectorDistBase
doL0LongDescEvent	src/arch/arm/table_walker.hh	/^                 &TableWalker::doL0LongDescriptorWrapper> doL0LongDescEvent;$/;"	m	class:ArmISA::TableWalker
doL0LongDescriptorWrapper	src/arch/arm/table_walker.cc	/^TableWalker::doL0LongDescriptorWrapper()$/;"	f	class:TableWalker
doL1DescEvent	src/arch/arm/table_walker.hh	/^                 &TableWalker::doL1DescriptorWrapper> doL1DescEvent;$/;"	m	class:ArmISA::TableWalker
doL1Descriptor	src/arch/arm/table_walker.cc	/^TableWalker::doL1Descriptor()$/;"	f	class:TableWalker
doL1DescriptorWrapper	src/arch/arm/table_walker.cc	/^TableWalker::doL1DescriptorWrapper()$/;"	f	class:TableWalker
doL1LongDescEvent	src/arch/arm/table_walker.hh	/^                 &TableWalker::doL1LongDescriptorWrapper> doL1LongDescEvent;$/;"	m	class:ArmISA::TableWalker
doL1LongDescriptorWrapper	src/arch/arm/table_walker.cc	/^TableWalker::doL1LongDescriptorWrapper()$/;"	f	class:TableWalker
doL2DescEvent	src/arch/arm/table_walker.hh	/^                 &TableWalker::doL2DescriptorWrapper> doL2DescEvent;$/;"	m	class:ArmISA::TableWalker
doL2Descriptor	src/arch/arm/table_walker.cc	/^TableWalker::doL2Descriptor()$/;"	f	class:TableWalker
doL2DescriptorWrapper	src/arch/arm/table_walker.cc	/^TableWalker::doL2DescriptorWrapper()$/;"	f	class:TableWalker
doL2LongDescEvent	src/arch/arm/table_walker.hh	/^                 &TableWalker::doL2LongDescriptorWrapper> doL2LongDescEvent;$/;"	m	class:ArmISA::TableWalker
doL2LongDescriptorWrapper	src/arch/arm/table_walker.cc	/^TableWalker::doL2LongDescriptorWrapper()$/;"	f	class:TableWalker
doL3LongDescEvent	src/arch/arm/table_walker.hh	/^                 &TableWalker::doL3LongDescriptorWrapper> doL3LongDescEvent;$/;"	m	class:ArmISA::TableWalker
doL3LongDescriptorWrapper	src/arch/arm/table_walker.cc	/^TableWalker::doL3LongDescriptorWrapper()$/;"	f	class:TableWalker
doLongDescriptor	src/arch/arm/table_walker.cc	/^TableWalker::doLongDescriptor()$/;"	f	class:TableWalker
doLongDescriptorWrapper	src/arch/arm/table_walker.cc	/^TableWalker::doLongDescriptorWrapper(LookupLevel curr_lookup_level)$/;"	f	class:TableWalker
doMMIOAccess	src/cpu/kvm/base.cc	/^BaseKvmCPU::doMMIOAccess(Addr paddr, void *data, int size, bool write)$/;"	f	class:BaseKvmCPU
doMmuRegRead	src/arch/sparc/tlb.cc	/^TLB::doMmuRegRead(ThreadContext *tc, Packet *pkt)$/;"	f	class:SparcISA::TLB
doMmuRegWrite	src/arch/sparc/tlb.cc	/^TLB::doMmuRegWrite(ThreadContext *tc, Packet *pkt)$/;"	f	class:SparcISA::TLB
doModRM	src/arch/x86/emulenv.cc	/^void EmulEnv::doModRM(const ExtMachInst & machInst)$/;"	f	class:EmulEnv
doModRMState	src/arch/x86/decoder.cc	/^Decoder::doModRMState(uint8_t nextByte)$/;"	f	class:X86ISA::Decoder
doNormalFault	src/arch/sparc/faults.cc	/^doNormalFault(ThreadContext *tc, TrapType tt, bool gotoHpriv)$/;"	f	namespace:SparcISA
doOp	src/arch/arm/insts/vfp.hh	/^    doOp(double op1) const$/;"	f	class:ArmISA::FpOp
doOp	src/arch/arm/insts/vfp.hh	/^    doOp(double op1, double op2) const$/;"	f	class:ArmISA::FpOp
doOp	src/arch/arm/insts/vfp.hh	/^    doOp(float op1) const$/;"	f	class:ArmISA::FpOp
doOp	src/arch/arm/insts/vfp.hh	/^    doOp(float op1, float op2) const$/;"	f	class:ArmISA::FpOp
doOpcodeState	src/arch/x86/decoder.cc	/^Decoder::doOpcodeState(uint8_t nextByte)$/;"	f	class:X86ISA::Decoder
doPrefixState	src/arch/x86/decoder.cc	/^Decoder::doPrefixState(uint8_t nextByte)$/;"	f	class:X86ISA::Decoder
doProcessEvent	src/arch/arm/table_walker.hh	/^    EventWrapper<TableWalker, &TableWalker::processWalkWrapper> doProcessEvent;$/;"	m	class:ArmISA::TableWalker
doQ	src/base/cp_annotate.cc	/^CPA::doQ(System *sys, int flags, int cpuid, int sm,$/;"	f	class:CPA
doREDFault	src/arch/sparc/faults.cc	/^doREDFault(ThreadContext *tc, TrapType tt)$/;"	f	namespace:SparcISA
doResetState	src/arch/x86/decoder.cc	/^Decoder::doResetState()$/;"	f	class:X86ISA::Decoder
doRetry	src/cpu/testers/memtest/memtest.cc	/^MemTest::doRetry()$/;"	f	class:MemTest
doRetry	src/cpu/testers/networktest/networktest.cc	/^NetworkTest::doRetry()$/;"	f	class:NetworkTest
doRxDmaRead	src/dev/ns_gige.cc	/^NSGigE::doRxDmaRead()$/;"	f	class:NSGigE
doRxDmaWrite	src/dev/ns_gige.cc	/^NSGigE::doRxDmaWrite()$/;"	f	class:NSGigE
doSIBState	src/arch/x86/decoder.cc	/^Decoder::doSIBState(uint8_t nextByte)$/;"	f	class:X86ISA::Decoder
doService	src/cpu/pc_event.cc	/^PCEventQueue::doService(ThreadContext *tc)$/;"	f	class:PCEventQueue
doSimLoop	src/sim/simulate.cc	/^doSimLoop(EventQueue *eventq)$/;"	f
doSquash	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::doSquash(const TheISA::PCState &newPC,$/;"	f	class:DefaultFetch
doSquash	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::doSquash(ThreadID tid)$/;"	f	class:InstructionQueue
doSquash	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::doSquash(const InstSeqNum &squashed_seq_num, ThreadID tid)$/;"	f	class:DefaultRename
doSquash	src/cpu/o3/rob_impl.hh	/^ROB<Impl>::doSquash(ThreadID tid)$/;"	f	class:ROB
doSquash	src/cpu/ozone/inst_queue_impl.hh	/^InstQueue<Impl>::doSquash(ThreadID tid)$/;"	f	class:InstQueue
doSwSmEnd	src/base/cp_annotate.cc	/^CPA::doSwSmEnd(System *sys, int cpuid, string sm, uint64_t frame)$/;"	f	class:CPA
doSwitchOut	src/cpu/ozone/front_end_impl.hh	/^FrontEnd<Impl>::doSwitchOut()$/;"	f	class:FrontEnd
doSwitchOut	src/cpu/ozone/inorder_back_end.hh	/^    void doSwitchOut() { panic("Not implemented!"); }$/;"	f	class:InorderBackEnd
doSwitchOut	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::doSwitchOut()$/;"	f	class:LWBackEnd
doSyscall	src/sim/syscall_emul.cc	/^SyscallDesc::doSyscall(int callnum, LiveProcess *process, ThreadContext *tc)$/;"	f	class:SyscallDesc
doTLBAccess	src/cpu/inorder/resources/cache_unit.cc	/^CacheUnit::doTLBAccess(DynInstPtr inst, CacheReqPtr cache_req, int acc_size,$/;"	f	class:CacheUnit
doTimingSupplyResponse	src/mem/cache/cache_impl.hh	/^doTimingSupplyResponse(PacketPtr req_pkt, uint8_t *blk_data,$/;"	f	class:Cache
doTxDmaRead	src/dev/ns_gige.cc	/^NSGigE::doTxDmaRead()$/;"	f	class:NSGigE
doTxDmaWrite	src/dev/ns_gige.cc	/^NSGigE::doTxDmaWrite()$/;"	f	class:NSGigE
doUpdateParams	src/dev/arm/hdlcd.hh	/^    bool doUpdateParams;$/;"	m	class:HDLcd
do_checkpoint_insts	src/cpu/BaseCPU.py	/^    do_checkpoint_insts = Param.Bool(True,$/;"	v
do_dot	src/python/m5/simulate.py	/^from m5.util.dot_writer import do_dot$/;"	i
do_dot	src/python/m5/util/dot_writer.py	/^def do_dot(root, outdir, dotFilename):$/;"	f
do_quiesce	src/cpu/BaseCPU.py	/^    do_quiesce = Param.Bool(True, "enable quiesce instructions")$/;"	v
do_statistics_insts	src/cpu/BaseCPU.py	/^    do_statistics_insts = Param.Bool(True,$/;"	v
do_test	src/unittest/cprintftime.cc	/^do_test(int seconds)$/;"	f
doingStage2	src/arch/arm/table_walker.hh	/^        bool doingStage2;$/;"	m	class:ArmISA::TableWalker::WalkerState
domain	src/arch/arm/faults.hh	/^    TlbEntry::DomainType domain;$/;"	m	class:ArmISA::AbortFault
domain	src/arch/arm/miscregs.hh	/^        Bitfield<7, 4> domain;$/;"	m	namespace:ArmISA
domain	src/arch/arm/pagetable.hh	/^    DomainType domain;         \/\/ Access Domain$/;"	m	struct:ArmISA::TlbEntry
domain	src/arch/arm/table_walker.hh	/^        TlbEntry::DomainType domain() const$/;"	f	class:ArmISA::TableWalker::L1Descriptor
domain	src/arch/arm/table_walker.hh	/^        TlbEntry::DomainType domain() const$/;"	f	class:ArmISA::TableWalker::LongDescriptor
domain	src/arch/arm/table_walker.hh	/^        virtual TlbEntry::DomainType domain() const$/;"	f	class:ArmISA::TableWalker::L2Descriptor
domainFaults	src/arch/arm/tlb.hh	/^    mutable Stats::Scalar domainFaults;$/;"	m	class:ArmISA::TLB
domatch	src/base/match.cc	/^ObjectMatch::domatch(const string &name) const$/;"	f	class:ObjectMatch
done	src/base/chunk_generator.hh	/^    bool done() const { return (curSize == 0); }$/;"	f	class:ChunkGenerator
done	src/cpu/inorder/resource.cc	/^ResourceRequest::done(bool completed)$/;"	f	class:ResourceRequest
doneEACalc	src/cpu/base_dyn_inst.hh	/^    bool doneEACalc() { return instFlags[EACalcDone]; }$/;"	f	class:BaseDynInst
doneEACalc	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool doneEACalc() { return eaCalcDone; }$/;"	f	class:InOrderDynInst
doneEvent	src/dev/etherlink.hh	/^        DoneEvent doneEvent;$/;"	m	class:EtherLink::Link
doneInResource	src/cpu/inorder/resource.hh	/^    bool doneInResource;$/;"	m	class:ResourceRequest
doneSeqNum	src/cpu/inorder/comm.hh	/^        InstSeqNum doneSeqNum;$/;"	m	struct:TimeStruct::StageComm
doneSeqNum	src/cpu/o3/comm.hh	/^        InstSeqNum doneSeqNum; \/\/ *F, I$/;"	m	struct:TimeBufStruct::commitComm
doneSeqNum	src/cpu/o3/comm.hh	/^        InstSeqNum doneSeqNum;$/;"	m	struct:TimeBufStruct::decodeComm
doneSeqNum	src/cpu/ozone/cpu.hh	/^        InstSeqNum doneSeqNum;$/;"	m	struct:OzoneCPU::CommStruct
doneSquashing	src/cpu/o3/rob.hh	/^    bool doneSquashing[Impl::MaxThreads];$/;"	m	class:ROB
doneTargCalc	src/cpu/base_dyn_inst.hh	/^    bool doneTargCalc() { return false; }$/;"	f	class:BaseDynInst
doneTargCalc	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool doneTargCalc() { return false; }$/;"	f	class:InOrderDynInst
dot_add_edge	src/python/m5/util/dot_writer.py	/^def dot_add_edge(simNode, callgraph, full_port_name, peerPort):$/;"	f
dot_create_cluster	src/python/m5/util/dot_writer.py	/^def dot_create_cluster(simNode, full_path, label):$/;"	f
dot_create_edges	src/python/m5/util/dot_writer.py	/^def dot_create_edges(simNode, callgraph):$/;"	f
dot_create_node	src/python/m5/util/dot_writer.py	/^def dot_create_node(simNode, full_path, label):$/;"	f
dot_create_nodes	src/python/m5/util/dot_writer.py	/^def dot_create_nodes(simNode, callgraph):$/;"	f
dot_gen_colour	src/python/m5/util/dot_writer.py	/^def dot_gen_colour(simNode, isPort = False):$/;"	f
dot_rgb_to_html	src/python/m5/util/dot_writer.py	/^def dot_rgb_to_html(r, g, b):$/;"	f
doubleBinSize	src/mem/ruby/common/Histogram.cc	/^Histogram::doubleBinSize()$/;"	f	class:Histogram
doublePrecision	src/arch/arm/miscregs.hh	/^        Bitfield<11, 8> doublePrecision;$/;"	m	namespace:ArmISA
double_braced	src/mem/slicc/generate/tex.py	/^    double_braced = "<<>>"$/;"	v	class:tex_formatter
double_braced	src/python/m5/util/code_formatter.py	/^    double_braced = r'{{}}'$/;"	v	class:code_formatter
downCounter	src/sim/sim_events.hh	/^    int &downCounter;   \/\/ decrement & terminate if zero$/;"	m	class:CountedExitEvent
down_flag	src/base/vnc/vncinput.hh	/^        uint8_t down_flag;$/;"	m	struct:VncInput::KeyEventMessage
downgrade	src/mem/ruby/profiler/StoreTrace.cc	/^StoreTrace::downgrade(NodeID node)$/;"	f	class:StoreTrace
downstreamPending	src/mem/cache/mshr.hh	/^    bool downstreamPending;$/;"	m	class:MSHR
doze	src/arch/mips/dt_constants.hh	/^    Bitfield<27>     doze;$/;"	m	namespace:MipsISA
dp_regs	src/dev/ns_gige.hh	/^struct dp_regs {$/;"	s
dp_rom	src/dev/ns_gige.hh	/^struct dp_rom {$/;"	s
dpd	src/arch/x86/regs/misc.hh	/^        Bitfield<0> dpd;$/;"	m	namespace:X86ISA
dpl	src/arch/x86/regs/misc.hh	/^        Bitfield<1, 0> dpl;$/;"	m	namespace:X86ISA
dpl	src/arch/x86/regs/misc.hh	/^        Bitfield<46, 45> dpl; \/\/ Descriptor Privilege-Level$/;"	m	namespace:X86ISA
dport	src/base/inet.hh	/^    uint16_t dport() const { return ntohs(th_dport); }$/;"	f	struct:Net::TcpHdr
dport	src/base/inet.hh	/^    uint16_t dport() const { return ntohs(uh_dport); }$/;"	f	struct:Net::UdpHdr
dprintf	src/arch/alpha/stacktrace.hh	/^    void dprintf() { if (DTRACE(Stack)) dump(); }$/;"	f	class:AlphaISA::StackTrace
dprintf	src/arch/alpha/stacktrace.hh	/^    void dprintf() {}$/;"	f	class:AlphaISA::StackTrace
dprintf	src/arch/arm/stacktrace.hh	/^    void dprintf() { if (DTRACE(Stack)) dump(); }$/;"	f	class:ArmISA::StackTrace
dprintf	src/arch/arm/stacktrace.hh	/^    void dprintf() {}$/;"	f	class:ArmISA::StackTrace
dprintf	src/arch/mips/stacktrace.hh	/^    void dprintf() { if (DTRACE(Stack)) dump(); }$/;"	f	class:MipsISA::StackTrace
dprintf	src/arch/mips/stacktrace.hh	/^    void dprintf() {}$/;"	f	class:MipsISA::StackTrace
dprintf	src/arch/power/stacktrace.hh	/^    dprintf()$/;"	f	class:PowerISA::StackTrace
dprintf	src/arch/sparc/stacktrace.hh	/^    void dprintf() {}$/;"	f	class:SparcISA::StackTrace
dprintf	src/arch/x86/stacktrace.hh	/^        void dprintf() { if (DTRACE(Stack)) dump(); }$/;"	f	class:X86ISA::StackTrace
dprintf	src/arch/x86/stacktrace.hh	/^        void dprintf() {}$/;"	f	class:X86ISA::StackTrace
dprintf	src/base/trace.cc	/^dprintf(Tick when, const std::string &name, const char *format,$/;"	f	namespace:Trace
dprintf_stream	src/base/trace.cc	/^ostream *dprintf_stream = &cerr;$/;"	m	namespace:Trace	file:
dpt	src/dev/pcireg.h	/^        Bitfield<7,4>   dpt;$/;"	m	struct:PXCAP
dq	src/arch/mips/dt_constants.hh	/^    Bitfield<2> dq;$/;"	m	namespace:MipsISA
drain	src/arch/arm/table_walker.cc	/^TableWalker::drain(DrainManager *dm)$/;"	f	class:TableWalker
drain	src/cpu/kvm/base.cc	/^BaseKvmCPU::drain(DrainManager *dm)$/;"	f	class:BaseKvmCPU
drain	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::drain()$/;"	f	class:DefaultCommit
drain	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::drain(DrainManager *drain_manager)$/;"	f	class:FullO3CPU
drain	src/cpu/o3/fetch.hh	/^        bool drain;$/;"	m	struct:DefaultFetch::Stalls
drain	src/cpu/simple/atomic.cc	/^AtomicSimpleCPU::drain(DrainManager *dm)$/;"	f	class:AtomicSimpleCPU
drain	src/cpu/simple/timing.cc	/^TimingSimpleCPU::drain(DrainManager *drain_manager)$/;"	f	class:TimingSimpleCPU
drain	src/cpu/testers/traffic_gen/traffic_gen.cc	/^TrafficGen::drain(DrainManager *dm)$/;"	f	class:TrafficGen
drain	src/dev/copy_engine.cc	/^CopyEngine::CopyEngineChannel::drain(DrainManager *dm)$/;"	f	class:CopyEngine::CopyEngineChannel
drain	src/dev/copy_engine.cc	/^CopyEngine::drain(DrainManager *dm)$/;"	f	class:CopyEngine
drain	src/dev/dma_device.cc	/^DmaDevice::drain(DrainManager *dm)$/;"	f	class:DmaDevice
drain	src/dev/dma_device.cc	/^DmaPort::drain(DrainManager *dm)$/;"	f	class:DmaPort
drain	src/dev/i8254xGBe.cc	/^IGbE::drain(DrainManager *dm)$/;"	f	class:IGbE
drain	src/dev/io_device.cc	/^PioDevice::drain(DrainManager *dm)$/;"	f	class:PioDevice
drain	src/dev/pcidev.cc	/^PciDevice::drain(DrainManager *dm)$/;"	f	class:PciDevice
drain	src/mem/bus.cc	/^BaseBus::Layer<SrcType,DstType>::drain(DrainManager *dm)$/;"	f	class:BaseBus::Layer
drain	src/mem/cache/base.cc	/^BaseCache::drain(DrainManager *dm)$/;"	f	class:BaseCache
drain	src/mem/cache/mshr_queue.cc	/^MSHRQueue::drain(DrainManager *dm)$/;"	f	class:MSHRQueue
drain	src/mem/coherent_bus.cc	/^CoherentBus::drain(DrainManager *dm)$/;"	f	class:CoherentBus
drain	src/mem/dram_ctrl.cc	/^DRAMCtrl::drain(DrainManager *dm)$/;"	f	class:DRAMCtrl
drain	src/mem/dramsim2.cc	/^DRAMSim2::drain(DrainManager* dm)$/;"	f	class:DRAMSim2
drain	src/mem/noncoherent_bus.cc	/^NoncoherentBus::drain(DrainManager *dm)$/;"	f	class:NoncoherentBus
drain	src/mem/packet_queue.cc	/^PacketQueue::drain(DrainManager *dm)$/;"	f	class:PacketQueue
drain	src/mem/qport.hh	/^    unsigned int drain(DrainManager *dm) { return queue.drain(dm); }$/;"	f	class:QueuedMasterPort
drain	src/mem/qport.hh	/^    unsigned int drain(DrainManager *dm) { return queue.drain(dm); }$/;"	f	class:QueuedSlavePort
drain	src/mem/ruby/system/RubyMemoryControl.cc	/^RubyMemoryControl::drain(DrainManager *dm)$/;"	f	class:RubyMemoryControl
drain	src/mem/ruby/system/RubyPort.cc	/^RubyPort::drain(DrainManager *dm)$/;"	f	class:RubyPort
drain	src/mem/simple_mem.cc	/^SimpleMemory::drain(DrainManager *dm)$/;"	f	class:SimpleMemory
drain	src/python/m5/simulate.py	/^def drain(root):$/;"	f
drain	src/sim/sim_object.cc	/^SimObject::drain(DrainManager *drain_manager)$/;"	f	class:SimObject
drain	src/sim/system.cc	/^System::drain(DrainManager *dm)$/;"	f	class:System
drainCount	src/cpu/inorder/cpu.hh	/^    int drainCount;$/;"	m	class:InOrderCPU
drainCycleDone	src/sim/drain.cc	/^DrainManager::drainCycleDone()$/;"	f	class:DrainManager
drainManager	src/arch/arm/table_walker.hh	/^    DrainManager *drainManager;$/;"	m	class:ArmISA::TableWalker
drainManager	src/cpu/kvm/base.hh	/^    DrainManager *drainManager;$/;"	m	class:BaseKvmCPU
drainManager	src/cpu/o3/cpu.hh	/^    DrainManager *drainManager;$/;"	m	class:FullO3CPU
drainManager	src/cpu/simple/timing.hh	/^    DrainManager *drainManager;$/;"	m	class:TimingSimpleCPU
drainManager	src/cpu/testers/traffic_gen/traffic_gen.hh	/^    DrainManager* drainManager;$/;"	m	class:TrafficGen
drainManager	src/dev/copy_engine.hh	/^        DrainManager *drainManager;$/;"	m	class:CopyEngine::CopyEngineChannel
drainManager	src/dev/dma_device.hh	/^    DrainManager *drainManager;$/;"	m	class:DmaPort
drainManager	src/dev/i8254xGBe.hh	/^    DrainManager *drainManager;$/;"	m	class:IGbE
drainManager	src/mem/bus.hh	/^        DrainManager *drainManager;$/;"	m	class:BaseBus::Layer
drainManager	src/mem/cache/mshr_queue.hh	/^    DrainManager *drainManager;$/;"	m	class:MSHRQueue
drainManager	src/mem/dram_ctrl.hh	/^    DrainManager *drainManager;$/;"	m	class:DRAMCtrl
drainManager	src/mem/dramsim2.hh	/^    DrainManager *drainManager;$/;"	m	class:DRAMSim2
drainManager	src/mem/packet_queue.hh	/^    DrainManager *drainManager;$/;"	m	class:PacketQueue
drainManager	src/mem/ruby/system/RubyPort.hh	/^    DrainManager *drainManager;$/;"	m	class:RubyPort
drainManager	src/mem/simple_mem.hh	/^    DrainManager *drainManager;$/;"	m	class:SimpleMemory
drainPending	src/cpu/o3/commit.hh	/^    bool drainPending;$/;"	m	class:DefaultCommit
drainResume	src/arch/arm/table_walker.cc	/^TableWalker::drainResume()$/;"	f	class:TableWalker
drainResume	src/arch/arm/tlb.cc	/^TLB::drainResume()$/;"	f	class:TLB
drainResume	src/cpu/inorder/cpu.cc	/^InOrderCPU::drainResume()$/;"	f	class:InOrderCPU
drainResume	src/cpu/kvm/base.cc	/^BaseKvmCPU::drainResume()$/;"	f	class:BaseKvmCPU
drainResume	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::drainResume()$/;"	f	class:DefaultCommit
drainResume	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::drainResume()$/;"	f	class:FullO3CPU
drainResume	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::drainResume()$/;"	f	class:DefaultFetch
drainResume	src/cpu/simple/atomic.cc	/^AtomicSimpleCPU::drainResume()$/;"	f	class:AtomicSimpleCPU
drainResume	src/cpu/simple/timing.cc	/^TimingSimpleCPU::drainResume()$/;"	f	class:TimingSimpleCPU
drainResume	src/dev/copy_engine.cc	/^CopyEngine::CopyEngineChannel::drainResume()$/;"	f	class:CopyEngine::CopyEngineChannel
drainResume	src/dev/copy_engine.cc	/^CopyEngine::drainResume()$/;"	f	class:CopyEngine
drainResume	src/dev/i8254xGBe.cc	/^IGbE::drainResume()$/;"	f	class:IGbE
drainResume	src/dev/ns_gige.cc	/^NSGigE::drainResume()$/;"	f	class:NSGigE
drainResume	src/dev/sinic.cc	/^Device::drainResume()$/;"	f	class:Sinic::Device
drainResume	src/sim/drain.cc	/^Drainable::drainResume()$/;"	f	class:Drainable
drainResume	src/sim/system.cc	/^System::drainResume()$/;"	f	class:System
drainSanityCheck	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::drainSanityCheck() const$/;"	f	class:DefaultCommit
drainSanityCheck	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::drainSanityCheck() const$/;"	f	class:FullO3CPU
drainSanityCheck	src/cpu/o3/decode_impl.hh	/^DefaultDecode<Impl>::drainSanityCheck() const$/;"	f	class:DefaultDecode
drainSanityCheck	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::drainSanityCheck() const$/;"	f	class:DefaultFetch
drainSanityCheck	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::drainSanityCheck() const$/;"	f	class:DefaultIEW
drainSanityCheck	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::drainSanityCheck() const$/;"	f	class:InstructionQueue
drainSanityCheck	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::drainSanityCheck() const$/;"	f	class:LSQ
drainSanityCheck	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::drainSanityCheck() const$/;"	f	class:LSQUnit
drainSanityCheck	src/cpu/o3/mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::drainSanityCheck() const$/;"	f	class:MemDepUnit
drainSanityCheck	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::drainSanityCheck() const$/;"	f	class:DefaultRename
drainSanityCheck	src/cpu/o3/rob_impl.hh	/^ROB<Impl>::drainSanityCheck() const$/;"	f	class:ROB
drainSanityCheck	src/cpu/pred/bpred_unit_impl.hh	/^BPredUnit::drainSanityCheck() const$/;"	f	class:BPredUnit
drainStall	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::drainStall(ThreadID tid)$/;"	f	class:DefaultFetch
drain_manager	src/cpu/simple/atomic.hh	/^    DrainManager *drain_manager;$/;"	m	class:AtomicSimpleCPU
draina	src/arch/alpha/osfpal.hh	/^        draina = 0x02,$/;"	e	enum:PAL::__anon3
dramsim	src/mem/dramsim2_wrapper.hh	/^    DRAMSim::MultiChannelMemorySystem* dramsim;$/;"	m	class:DRAMSim2Wrapper
drir	src/dev/alpha/tsunami_cchip.hh	/^    uint64_t drir;$/;"	m	class:TsunamiCChip
drive	src/dev/ide_disk.hh	/^        uint8_t drive;$/;"	m	union:CommandReg::__anon76
driveID	src/dev/Ide.py	/^    driveID = Param.IdeID('master', "Drive ID")$/;"	v	class:IdeDisk
driveID	src/dev/ide_disk.hh	/^    struct ataparams driveID;$/;"	m	class:IdeDisk	typeref:struct:IdeDisk::ataparams
driveIrqEn	src/dev/arm/gic_pl390.cc	/^Pl390::driveIrqEn( bool state)$/;"	f	class:Pl390
driveLegFIQ	src/dev/arm/gic_pl390.cc	/^Pl390::driveLegFIQ(bool state)$/;"	f	class:Pl390
driveLegIRQ	src/dev/arm/gic_pl390.cc	/^Pl390::driveLegIRQ(bool state)$/;"	f	class:Pl390
driveSPI	src/dev/arm/gic_pl390.cc	/^Pl390::driveSPI(unsigned int spiVect)$/;"	f	class:Pl390
driverInitialized	src/dev/arm/kmi.hh	/^    bool driverInitialized;$/;"	m	class:Pl050
droppedPackets	src/dev/etherdevice.hh	/^    Stats::Scalar droppedPackets;$/;"	m	class:EtherDevice
drqBytesLeft	src/dev/ide_disk.hh	/^    uint32_t drqBytesLeft;$/;"	m	class:IdeDisk
ds	src/arch/mips/pra_constants.hh	/^    Bitfield<15, 13> ds;$/;"	m	namespace:MipsISA
ds0	src/arch/arm/miscregs.hh	/^       Bitfield<16> ds0;$/;"	m	namespace:ArmISA
ds1	src/arch/arm/miscregs.hh	/^       Bitfield<17> ds1;$/;"	m	namespace:ArmISA
dsc	src/dev/pcireg.h	/^        Bitfield<14,13> dsc;$/;"	m	struct:PMCAP
dse	src/dev/mc146818.hh	/^        Bitfield<0> dse;       \/\/\/ USA Daylight Savings Time enable$/;"	m	class:MC146818
dse	src/dev/pcireg.h	/^        Bitfield<12,9>  dse;$/;"	m	struct:PMCAP
dsi	src/dev/pcireg.h	/^        Bitfield<5>     dsi;$/;"	m	struct:PMCAP
dsize	src/arch/alpha/aout_machdep.h	/^    uint64_t    dsize;          \/\/\/< data segment size$/;"	m	struct:aout_exechdr
dsize	src/base/loader/exec_ecoff.h	/^        coff_ulong  dsize;$/;"	m	struct:ecoff_aouthdr
dspAbs	src/arch/mips/dsp.cc	/^MipsISA::dspAbs(int32_t a, int32_t fmt, uint32_t *dspctl)$/;"	f	class:MipsISA
dspAdd	src/arch/mips/dsp.cc	/^MipsISA::dspAdd(int32_t a, int32_t b, int32_t fmt, int32_t saturate,$/;"	f	class:MipsISA
dspAddh	src/arch/mips/dsp.cc	/^MipsISA::dspAddh(int32_t a, int32_t b, int32_t fmt, int32_t round,$/;"	f	class:MipsISA
dspCmp	src/arch/mips/dsp.cc	/^MipsISA::dspCmp(int32_t a, int32_t b, int32_t fmt, int32_t sign, int32_t op,$/;"	f	class:MipsISA
dspCmpg	src/arch/mips/dsp.cc	/^MipsISA::dspCmpg(int32_t a, int32_t b, int32_t fmt, int32_t sign, int32_t op)$/;"	f	class:MipsISA
dspCmpgd	src/arch/mips/dsp.cc	/^MipsISA::dspCmpgd(int32_t a, int32_t b, int32_t fmt, int32_t sign, int32_t op,$/;"	f	class:MipsISA
dspDpa	src/arch/mips/dsp.cc	/^MipsISA::dspDpa(int64_t dspac, int32_t a, int32_t b, int32_t ac,$/;"	f	class:MipsISA
dspDpaq	src/arch/mips/dsp.cc	/^MipsISA::dspDpaq(int64_t dspac, int32_t a, int32_t b, int32_t ac,$/;"	f	class:MipsISA
dspDps	src/arch/mips/dsp.cc	/^MipsISA::dspDps(int64_t dspac, int32_t a, int32_t b, int32_t ac,$/;"	f	class:MipsISA
dspDpsq	src/arch/mips/dsp.cc	/^MipsISA::dspDpsq(int64_t dspac, int32_t a, int32_t b, int32_t ac,$/;"	f	class:MipsISA
dspExtp	src/arch/mips/dsp.cc	/^MipsISA::dspExtp(int64_t dspac, int32_t size, uint32_t *dspctl)$/;"	f	class:MipsISA
dspExtpd	src/arch/mips/dsp.cc	/^MipsISA::dspExtpd(int64_t dspac, int32_t size, uint32_t *dspctl)$/;"	f	class:MipsISA
dspExtr	src/arch/mips/dsp.cc	/^MipsISA::dspExtr(int64_t dspac, int32_t fmt, int32_t sa, int32_t round,$/;"	f	class:MipsISA
dspMaq	src/arch/mips/dsp.cc	/^MipsISA::dspMaq(int64_t dspac, int32_t a, int32_t b, int32_t ac,$/;"	f	class:MipsISA
dspMul	src/arch/mips/dsp.cc	/^MipsISA::dspMul(int32_t a, int32_t b, int32_t fmt, int32_t saturate,$/;"	f	class:MipsISA
dspMuleq	src/arch/mips/dsp.cc	/^MipsISA::dspMuleq(int32_t a, int32_t b, int32_t mode, uint32_t *dspctl)$/;"	f	class:MipsISA
dspMuleu	src/arch/mips/dsp.cc	/^MipsISA::dspMuleu(int32_t a, int32_t b, int32_t mode, uint32_t *dspctl)$/;"	f	class:MipsISA
dspMulq	src/arch/mips/dsp.cc	/^MipsISA::dspMulq(int32_t a, int32_t b, int32_t fmt, int32_t saturate,$/;"	f	class:MipsISA
dspMulsa	src/arch/mips/dsp.cc	/^MipsISA::dspMulsa(int64_t dspac, int32_t a, int32_t b, int32_t ac, int32_t fmt)$/;"	f	class:MipsISA
dspMulsaq	src/arch/mips/dsp.cc	/^MipsISA::dspMulsaq(int64_t dspac, int32_t a, int32_t b, int32_t ac,$/;"	f	class:MipsISA
dspPack	src/arch/mips/dsp.cc	/^MipsISA::dspPack(int32_t a, int32_t b, int32_t fmt)$/;"	f	class:MipsISA
dspPick	src/arch/mips/dsp.cc	/^MipsISA::dspPick(int32_t a, int32_t b, int32_t fmt, uint32_t *dspctl)$/;"	f	class:MipsISA
dspPrece	src/arch/mips/dsp.cc	/^MipsISA::dspPrece(int32_t a, int32_t infmt, int32_t insign, int32_t outfmt,$/;"	f	class:MipsISA
dspPrecrSra	src/arch/mips/dsp.cc	/^MipsISA::dspPrecrSra(int32_t a, int32_t b, int32_t sa, int32_t fmt,$/;"	f	class:MipsISA
dspPrecrq	src/arch/mips/dsp.cc	/^MipsISA::dspPrecrq(int32_t a, int32_t b, int32_t fmt, uint32_t *dspctl)$/;"	f	class:MipsISA
dspPrecrqu	src/arch/mips/dsp.cc	/^MipsISA::dspPrecrqu(int32_t a, int32_t b, uint32_t *dspctl)$/;"	f	class:MipsISA
dspSaturate	src/arch/mips/dsp.cc	/^MipsISA::dspSaturate(uint64_t value, int32_t fmt, int32_t sign,$/;"	f	class:MipsISA
dspShll	src/arch/mips/dsp.cc	/^MipsISA::dspShll(int32_t a, uint32_t sa, int32_t fmt, int32_t saturate,$/;"	f	class:MipsISA
dspShra	src/arch/mips/dsp.cc	/^MipsISA::dspShra(int32_t a, uint32_t sa, int32_t fmt, int32_t round,$/;"	f	class:MipsISA
dspShrl	src/arch/mips/dsp.cc	/^MipsISA::dspShrl(int32_t a, uint32_t sa, int32_t fmt, int32_t sign)$/;"	f	class:MipsISA
dspSub	src/arch/mips/dsp.cc	/^MipsISA::dspSub(int32_t a, int32_t b, int32_t fmt, int32_t saturate,$/;"	f	class:MipsISA
dspSubh	src/arch/mips/dsp.cc	/^MipsISA::dspSubh(int32_t a, int32_t b, int32_t fmt, int32_t round,$/;"	f	class:MipsISA
dspp	src/arch/mips/pra_constants.hh	/^    Bitfield<10> dspp;$/;"	m	namespace:MipsISA
dsrmim	src/dev/arm/pl011.hh	/^        Bitfield<3> dsrmim;$/;"	m	class:Pl011
dss	src/arch/mips/dt_constants.hh	/^    Bitfield<0>      dss;$/;"	m	namespace:MipsISA
dst	src/base/inet.hh	/^    const EthAddr &dst() const { return *(EthAddr *)&eth_dst; }$/;"	f	struct:Net::EthHdr
dst	src/base/inet.hh	/^    const uint8_t* dst() const { return ip6_dst.data; }$/;"	f	struct:Net::Ip6Hdr
dst	src/base/inet.hh	/^    uint32_t dst() const { return ntohl(ip_dst); }$/;"	f	struct:Net::IpHdr
dstOptAddr	src/base/inet.hh	/^    const uint8_t* dstOptAddr() const { return ext_data.dstOpts.addr.data; }$/;"	f	struct:Net::Ip6Opt
dstOptExt	src/base/inet.hh	/^    const Ip6Opt* dstOptExt() const { return getExt(IP_PROTO_DSTOPTS); }$/;"	f	struct:Net::Ip6Hdr
dstOptLength	src/base/inet.hh	/^    uint8_t dstOptLength() const { return ext_data.dstOpts.length; }$/;"	f	struct:Net::Ip6Opt
dstOptType	src/base/inet.hh	/^    uint8_t dstOptType() const { return ext_data.dstOpts.type; }$/;"	f	struct:Net::Ip6Opt
dstOpts	src/base/inet.hh	/^        struct ip6_opt_dstopts dstOpts;$/;"	m	union:Net::ip6_opt_hdr::__anon40	typeref:struct:Net::ip6_opt_hdr::__anon40::ip6_opt_dstopts
dt	src/arch/mips/mt_constants.hh	/^    Bitfield<20>     dt;$/;"	m	namespace:MipsISA
dtb	src/cpu/checker/cpu.hh	/^    TheISA::TLB *dtb;$/;"	m	class:CheckerCPU
dtb	src/cpu/m5legion_interface.h	/^    uint64_t dtb[64];$/;"	m	struct:__anon55
dtb	src/cpu/o3/cpu.hh	/^    TheISA::TLB * dtb;$/;"	m	class:FullO3CPU
dtb	src/cpu/ozone/cpu.hh	/^    TheISA::TLB *dtb;$/;"	m	class:OzoneCPU
dtb	src/cpu/ozone/simple_params.hh	/^    TheISA::TLB *itb; TheISA::TLB *dtb;$/;"	m	class:SimpleParams
dtb	src/cpu/simple_thread.hh	/^    TheISA::TLB *dtb;$/;"	m	class:SimpleThread
dtb_filename	src/arch/arm/ArmSystem.py	/^    dtb_filename = Param.String("",$/;"	v	class:LinuxArmSystem
dummy	src/arch/power/isa.hh	/^    MiscReg dummy;$/;"	m	class:PowerISA::ISA
dummy	src/arch/x86/decoder.cc	/^Decoder::InstBytes Decoder::dummy;$/;"	m	class:X86ISA::Decoder	file:
dummy	src/arch/x86/decoder.hh	/^    static InstBytes dummy;$/;"	m	class:X86ISA::Decoder
dummy	src/kern/tru64/tru64.hh	/^        uint64_t dummy[10]; \/\/ was union mount_info mount_info;$/;"	m	struct:Tru64::F64_statfs
dummy	src/kern/tru64/tru64.hh	/^        uint64_t dummy[10]; \/\/ was union mount_info mount_info;$/;"	m	struct:Tru64::pre_F64_statfs
dummyBufferInst	src/cpu/inorder/cpu.hh	/^    DynInstPtr dummyBufferInst;$/;"	m	class:InOrderCPU
dummyBufferInst	src/cpu/inorder/pipeline_stage.hh	/^    DynInstPtr dummyBufferInst;$/;"	m	class:PipelineStage
dummyInst	src/cpu/inorder/cpu.hh	/^    DynInstPtr dummyInst[ThePipeline::MaxThreads];$/;"	m	class:InOrderCPU
dummyInst	src/cpu/inorder/resource_pool.hh	/^    DynInstPtr dummyInst[ThePipeline::MaxThreads];$/;"	m	class:ResourcePool
dummyInst	src/cpu/o3/rob.hh	/^    DynInstPtr dummyInst;$/;"	m	class:ROB
dummyReq	src/cpu/inorder/cpu.hh	/^    ResourceRequest *dummyReq[ThePipeline::MaxThreads];$/;"	m	class:InOrderCPU
dummyReqInst	src/cpu/inorder/cpu.hh	/^    DynInstPtr dummyReqInst;$/;"	m	class:InOrderCPU
dummyTrapInst	src/cpu/inorder/cpu.hh	/^    DynInstPtr dummyTrapInst[ThePipeline::MaxThreads];$/;"	m	class:InOrderCPU
dump	src/arch/alpha/stacktrace.cc	/^StackTrace::dump()$/;"	f	class:AlphaISA::StackTrace
dump	src/arch/arm/stacktrace.cc	/^    StackTrace::dump()$/;"	f	class:ArmISA::StackTrace
dump	src/arch/mips/stacktrace.cc	/^StackTrace::dump()$/;"	f	class:StackTrace
dump	src/arch/power/stacktrace.cc	/^StackTrace::dump()$/;"	f	class:PowerISA::StackTrace
dump	src/arch/x86/stacktrace.cc	/^    StackTrace::dump()$/;"	f	class:X86ISA::StackTrace
dump	src/base/circlebuf.cc	/^CircleBuf::dump()$/;"	f	class:CircleBuf
dump	src/base/cp_annotate.cc	/^CPA::dump(bool all)$/;"	f	class:CPA
dump	src/base/cp_annotate.hh	/^        bool dump;$/;"	m	struct:CPA::AnnotateData
dump	src/base/inifile.cc	/^IniFile::Section::dump(const string &sectionName)$/;"	f	class:IniFile::Section
dump	src/base/inifile.cc	/^IniFile::dump()$/;"	f	class:IniFile
dump	src/base/trace.cc	/^dump(Tick when, const std::string &name, const void *d, int len)$/;"	f	namespace:Trace
dump	src/base/trie.hh	/^        dump(int level)$/;"	f	struct:Trie::Node
dump	src/base/trie.hh	/^    dump(const char *title)$/;"	f	class:Trie
dump	src/cpu/activity.cc	/^ActivityRecorder::dump()$/;"	f	class:ActivityRecorder
dump	src/cpu/base_dyn_inst_impl.hh	/^BaseDynInst<Impl>::dump()$/;"	f	class:BaseDynInst
dump	src/cpu/base_dyn_inst_impl.hh	/^BaseDynInst<Impl>::dump(std::string &outstring)$/;"	f	class:BaseDynInst
dump	src/cpu/exetrace.cc	/^Trace::ExeTracerRecord::dump()$/;"	f	class:Trace::Trace::ExeTracerRecord
dump	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::dump()$/;"	f	class:InOrderDynInst
dump	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::dump(std::string &outstring)$/;"	f	class:InOrderDynInst
dump	src/cpu/inorder/reg_dep_map.cc	/^RegDepMap::dump()$/;"	f	class:RegDepMap
dump	src/cpu/inteltrace.cc	/^Trace::IntelTraceRecord::dump()$/;"	f	class:Trace::Trace::IntelTraceRecord
dump	src/cpu/kvm/arm_cpu.cc	/^ArmKvmCPU::dump()$/;"	f	class:ArmKvmCPU
dump	src/cpu/kvm/base.cc	/^BaseKvmCPU::dump()$/;"	f	class:BaseKvmCPU
dump	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::dump()$/;"	f	class:X86KvmCPU
dump	src/cpu/legiontrace.cc	/^Trace::LegionTraceRecord::dump()$/;"	f	class:Trace::Trace::LegionTraceRecord
dump	src/cpu/nativetrace.cc	/^Trace::NativeTraceRecord::dump()$/;"	f	class:Trace::Trace::NativeTraceRecord
dump	src/cpu/o3/dep_graph.hh	/^DependencyGraph<DynInstPtr>::dump()$/;"	f	class:DependencyGraph
dump	src/cpu/o3/fu_pool.cc	/^FUPool::dump()$/;"	f	class:FUPool
dump	src/cpu/o3/store_set.cc	/^StoreSet::dump()$/;"	f	class:StoreSet
dump	src/cpu/pc_event.cc	/^PCEventQueue::dump() const$/;"	f	class:PCEventQueue
dump	src/cpu/pred/bpred_unit_impl.hh	/^BPredUnit::dump()$/;"	f	class:BPredUnit
dump	src/cpu/profile.cc	/^FunctionProfile::dump(ThreadContext *tc, ostream &os) const$/;"	f	class:FunctionProfile
dump	src/cpu/profile.cc	/^ProfileNode::dump(const string &symbol, uint64_t id, const SymbolTable *symtab,$/;"	f	class:ProfileNode
dump	src/dev/Ethernet.py	/^    dump = Param.EtherDump(NULL, "dump object")$/;"	v	class:EtherBus
dump	src/dev/Ethernet.py	/^    dump = Param.EtherDump(NULL, "dump object")$/;"	v	class:EtherLink
dump	src/dev/Ethernet.py	/^    dump = Param.EtherDump(NULL, "dump object")$/;"	v	class:EtherTap
dump	src/dev/etherbus.hh	/^    EtherDump *dump;$/;"	m	class:EtherBus
dump	src/dev/etherdump.hh	/^    inline void dump(EthPacketPtr &pkt) { dumpPacket(pkt); }$/;"	f	class:EtherDump
dump	src/dev/etherlink.hh	/^        EtherDump *dump;$/;"	m	class:EtherLink::Link
dump	src/dev/ethertap.hh	/^    EtherDump *dump;$/;"	m	class:EtherTap
dump	src/python/m5/stats/__init__.py	/^def dump():$/;"	f
dump	src/sim/eventq.cc	/^Event::dump() const$/;"	f	class:Event
dump	src/sim/eventq.cc	/^EventQueue::dump() const$/;"	f	class:EventQueue
dump	src/sim/stat_control.cc	/^    bool dump;$/;"	m	class:Stats::StatEvent	file:
dumpAll	src/arch/sparc/tlb.cc	/^TLB::dumpAll()$/;"	f	class:SparcISA::TLB
dumpAndExit	src/cpu/checker/cpu.cc	/^CheckerCPU::dumpAndExit()$/;"	f	class:CheckerCPU
dumpAndExit	src/cpu/checker/cpu_impl.hh	/^Checker<Impl>::dumpAndExit(DynInstPtr &inst)$/;"	f	class:Checker
dumpDebugFlags	src/base/debug.cc	/^dumpDebugFlags()$/;"	f
dumpDebugRegs	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::dumpDebugRegs() const$/;"	f	class:X86KvmCPU
dumpEvent	src/sim/stat_control.cc	/^GlobalEvent *dumpEvent;$/;"	m	namespace:Stats	file:
dumpFpuCommon	src/cpu/kvm/x86_cpu.cc	/^dumpFpuCommon(const T &fpu)$/;"	f	file:
dumpFpuRegs	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::dumpFpuRegs() const$/;"	f	class:X86KvmCPU
dumpFpuSpec	src/cpu/kvm/x86_cpu.cc	/^dumpFpuSpec(const struct FXSave &xs)$/;"	f	file:
dumpFpuSpec	src/cpu/kvm/x86_cpu.cc	/^dumpFpuSpec(const struct kvm_fpu &fpu)$/;"	f	file:
dumpFuncProfile	src/cpu/checker/thread_context.hh	/^    void dumpFuncProfile() { actualTC->dumpFuncProfile(); }$/;"	f	class:CheckerThreadContext
dumpFuncProfile	src/cpu/inorder/thread_context.cc	/^InOrderThreadContext::dumpFuncProfile()$/;"	f	class:InOrderThreadContext
dumpFuncProfile	src/cpu/inorder/thread_state.cc	/^InOrderThreadState::dumpFuncProfile()    $/;"	f	class:InOrderThreadState
dumpFuncProfile	src/cpu/o3/thread_context_impl.hh	/^O3ThreadContext<Impl>::dumpFuncProfile()$/;"	f	class:O3ThreadContext
dumpFuncProfile	src/cpu/o3/thread_state.hh	/^    void dumpFuncProfile()$/;"	f	struct:O3ThreadState
dumpFuncProfile	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::OzoneTC::dumpFuncProfile()$/;"	f	class:OzoneCPU::OzoneTC
dumpFuncProfile	src/cpu/ozone/thread_state.hh	/^    void dumpFuncProfile()$/;"	f	struct:OzoneThreadState
dumpFuncProfile	src/cpu/simple_thread.cc	/^SimpleThread::dumpFuncProfile()$/;"	f	class:SimpleThread
dumpFuncProfile	src/cpu/thread_context.hh	/^    void dumpFuncProfile() { actualTC->dumpFuncProfile(); }$/;"	f	class:ProxyThreadContext
dumpHistory	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::dumpHistory()$/;"	f	class:DefaultRename
dumpInsts	src/cpu/checker/cpu_impl.hh	/^Checker<Impl>::dumpInsts()$/;"	f	class:Checker
dumpInsts	src/cpu/inorder/cpu.cc	/^InOrderCPU::dumpInsts()$/;"	f	class:InOrderCPU
dumpInsts	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::dumpInsts()$/;"	f	class:PipelineStage
dumpInsts	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::dumpInsts()$/;"	f	class:FullO3CPU
dumpInsts	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::dumpInsts()$/;"	f	class:InstructionQueue
dumpInsts	src/cpu/o3/lsq.hh	/^    void dumpInsts(ThreadID tid) const$/;"	f	class:LSQ
dumpInsts	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::dumpInsts() const$/;"	f	class:LSQ
dumpInsts	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::dumpInsts() const$/;"	f	class:LSQUnit
dumpInsts	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::InstQueue::dumpInsts()$/;"	f	class:BackEnd::InstQueue
dumpInsts	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::dumpInsts()$/;"	f	class:BackEnd
dumpInsts	src/cpu/ozone/cpu.hh	/^    void dumpInsts() { frontEnd->dumpInsts(); }$/;"	f	class:OzoneCPU
dumpInsts	src/cpu/ozone/front_end_impl.hh	/^FrontEnd<Impl>::dumpInsts()$/;"	f	class:FrontEnd
dumpInsts	src/cpu/ozone/inorder_back_end_impl.hh	/^InorderBackEnd<Impl>::dumpInsts()$/;"	f	class:InorderBackEnd
dumpInsts	src/cpu/ozone/inst_queue_impl.hh	/^InstQueue<Impl>::dumpInsts()$/;"	f	class:InstQueue
dumpInsts	src/cpu/ozone/lsq_unit_impl.hh	/^OzoneLSQ<Impl>::dumpInsts()$/;"	f	class:OzoneLSQ
dumpInsts	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::dumpInsts()$/;"	f	class:LWBackEnd
dumpInsts	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::dumpInsts()$/;"	f	class:OzoneLWLSQ
dumpIntRegs	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::dumpIntRegs() const$/;"	f	class:X86KvmCPU
dumpKey	src/base/cp_annotate.cc	/^CPA::dumpKey()$/;"	f	class:CPA
dumpKvm	src/cpu/kvm/x86_cpu.cc	/^dumpKvm(const char *reg_name, const struct kvm_dtable &dtable)$/;"	f	file:
dumpKvm	src/cpu/kvm/x86_cpu.cc	/^dumpKvm(const char *reg_name, const struct kvm_segment &seg)$/;"	f	file:
dumpKvm	src/cpu/kvm/x86_cpu.cc	/^dumpKvm(const struct kvm_debugregs &regs)$/;"	f	file:
dumpKvm	src/cpu/kvm/x86_cpu.cc	/^dumpKvm(const struct kvm_fpu &fpu)$/;"	f	file:
dumpKvm	src/cpu/kvm/x86_cpu.cc	/^dumpKvm(const struct kvm_msrs &msrs)$/;"	f	file:
dumpKvm	src/cpu/kvm/x86_cpu.cc	/^dumpKvm(const struct kvm_regs &regs)$/;"	f	file:
dumpKvm	src/cpu/kvm/x86_cpu.cc	/^dumpKvm(const struct kvm_sregs &sregs)$/;"	f	file:
dumpKvm	src/cpu/kvm/x86_cpu.cc	/^dumpKvm(const struct kvm_vcpu_events &events)$/;"	f	file:
dumpKvm	src/cpu/kvm/x86_cpu.cc	/^dumpKvm(const struct kvm_xcrs &regs)$/;"	f	file:
dumpKvm	src/cpu/kvm/x86_cpu.cc	/^dumpKvm(const struct kvm_xsave &xsave)$/;"	f	file:
dumpKvmStateCoProc	src/cpu/kvm/arm_cpu.cc	/^ArmKvmCPU::dumpKvmStateCoProc(uint64_t id)$/;"	f	class:ArmKvmCPU
dumpKvmStateCore	src/cpu/kvm/arm_cpu.cc	/^ArmKvmCPU::dumpKvmStateCore()$/;"	f	class:ArmKvmCPU
dumpKvmStateMisc	src/cpu/kvm/arm_cpu.cc	/^ArmKvmCPU::dumpKvmStateMisc()$/;"	f	class:ArmKvmCPU
dumpKvmStateVFP	src/cpu/kvm/arm_cpu.cc	/^ArmKvmCPU::dumpKvmStateVFP(uint64_t id)$/;"	f	class:ArmKvmCPU
dumpLists	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::dumpLists()$/;"	f	class:InstructionQueue
dumpLists	src/cpu/o3/mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::dumpLists()$/;"	f	class:MemDepUnit
dumpLists	src/cpu/ozone/inst_queue_impl.hh	/^InstQueue<Impl>::dumpLists()$/;"	f	class:InstQueue
dumpMSRs	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::dumpMSRs() const$/;"	f	class:X86KvmCPU
dumpMainQueue	src/sim/eventq.cc	/^dumpMainQueue()$/;"	f
dumpMbufEvent	src/arch/alpha/tru64/system.hh	/^    DumpMbufEvent *dumpMbufEvent;$/;"	m	class:Tru64AlphaSystem
dumpPacket	src/dev/etherdump.cc	/^EtherDump::dumpPacket(EthPacketPtr &packet)$/;"	f	class:EtherDump
dumpQueue	src/base/statistics.cc	/^CallbackQueue dumpQueue;$/;"	m	namespace:Stats	file:
dumpSNList	src/cpu/base_dyn_inst_impl.hh	/^BaseDynInst<Impl>::dumpSNList()$/;"	f	class:BaseDynInst
dumpSpecRegs	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::dumpSpecRegs() const$/;"	f	class:X86KvmCPU
dumpStatsHandler	src/sim/init.cc	/^dumpStatsHandler(int sigtype)$/;"	f
dumpStatsPCEvent	src/arch/arm/linux/system.hh	/^    DumpStatsPCEvent *dumpStatsPCEvent;$/;"	m	class:LinuxArmSystem
dumpTicks	src/cpu/exetrace.cc	/^ExeTracerRecord::dumpTicks(ostream &outs)$/;"	f	class:Trace::ExeTracerRecord
dumpTicks	src/cpu/inorder/inorder_trace.cc	/^Trace::InOrderTraceRecord::dumpTicks(std::ostream &outs)$/;"	f	class:Trace::Trace::InOrderTraceRecord
dumpVCpuEvents	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::dumpVCpuEvents() const$/;"	f	class:X86KvmCPU
dumpWb	src/cpu/o3/iew.hh	/^    void dumpWb()$/;"	f	class:DefaultIEW
dumpXCRs	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::dumpXCRs() const$/;"	f	class:X86KvmCPU
dumpXSave	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::dumpXSave() const$/;"	f	class:X86KvmCPU
dumpresetstats	src/sim/pseudo_inst.cc	/^dumpresetstats(ThreadContext *tc, Tick delay, Tick period)$/;"	f	namespace:PseudoInst
dumprstStatsHandler	src/sim/init.cc	/^dumprstStatsHandler(int sigtype)$/;"	f
dumpstats	src/sim/pseudo_inst.cc	/^dumpstats(ThreadContext *tc, Tick delay, Tick period)$/;"	f	namespace:PseudoInst
dup	src/kern/linux/linux_syscalls.hh	/^    dup = 28,$/;"	e	enum:SystemCalls::__anon87
dup	src/kern/tru64/tru64_syscalls.hh	/^        dup = 41,$/;"	e	enum:SystemCalls::__anon102
dup2	src/kern/linux/linux_syscalls.hh	/^    dup2 = 29,$/;"	e	enum:SystemCalls::__anon87
dup2	src/kern/tru64/tru64_syscalls.hh	/^        dup2 = 90,$/;"	e	enum:SystemCalls::__anon102
dupFunc	src/sim/syscall_emul.cc	/^dupFunc(SyscallDesc *desc, int num, LiveProcess *process, ThreadContext *tc)$/;"	f
dup_fd	src/sim/process.cc	/^Process::dup_fd(int sim_fd, int tgt_fd)$/;"	f	class:Process
duration	src/cpu/testers/traffic_gen/generators.hh	/^    const Tick duration;$/;"	m	class:BaseGen
dv	src/dev/mc146818.hh	/^        Bitfield<6, 4> dv;  \/\/\/ Divider configuration$/;"	m	class:MC146818
dz	src/arch/arm/miscregs.hh	/^        Bitfield<19>   dz;      \/\/ Divide by Zero fault enable$/;"	m	namespace:ArmISA
dzc	src/arch/arm/miscregs.hh	/^        Bitfield<1> dzc;$/;"	m	namespace:ArmISA
dze	src/arch/arm/miscregs.hh	/^        Bitfield<14>   dze;     \/\/ Enable EL0 access to DC ZVA$/;"	m	namespace:ArmISA
dze	src/arch/arm/miscregs.hh	/^        Bitfield<9> dze;$/;"	m	namespace:ArmISA
e	src/arch/arm/miscregs.hh	/^        Bitfield<9> e;$/;"	m	namespace:ArmISA
e	src/arch/mips/dt_constants.hh	/^    Bitfield<24>     e;$/;"	m	namespace:MipsISA
e	src/arch/mips/dt_constants.hh	/^    Bitfield<28>     e;$/;"	m	namespace:MipsISA
e	src/arch/x86/regs/misc.hh	/^            Bitfield<42> e; \/\/ Expand-Down$/;"	m	namespace:X86ISA
e	src/arch/x86/regs/misc.hh	/^        Bitfield<11> e; \/\/ MTRR enable$/;"	m	namespace:X86ISA
e	src/arch/x86/regs/misc.hh	/^        Bitfield<18> e; \/\/ Edge detect$/;"	m	namespace:X86ISA
e0e	src/arch/arm/miscregs.hh	/^        Bitfield<24>   e0e;     \/\/ Endianness of explicit data accesses at EL0$/;"	m	namespace:ArmISA
e2c	src/cpu/ozone/back_end.hh	/^    TimeBuffer<ExecToCommit> e2c;$/;"	m	class:BackEnd
e2c	src/cpu/ozone/lw_back_end.hh	/^    TimeBuffer<ExecToCommit> e2c;$/;"	m	class:LWBackEnd
e820Table	src/arch/x86/linux/system.hh	/^    X86ISA::E820Table * e820Table;$/;"	m	class:LinuxX86System
e820_table	src/arch/x86/X86System.py	/^    e820_table = Param.X86E820Table($/;"	v	class:LinuxX86System
eSize	src/arch/arm/insts/macromem.hh	/^    uint8_t eSize, dataSize, numStructElems, index;$/;"	m	class:ArmISA::VldSingleOp64
eSize	src/arch/arm/insts/macromem.hh	/^    uint8_t eSize, dataSize, numStructElems, index;$/;"	m	class:ArmISA::VstSingleOp64
eSize	src/arch/arm/insts/macromem.hh	/^    uint8_t eSize, dataSize, numStructElems, lane, step;$/;"	m	class:ArmISA::MicroNeonMixLaneOp64
eSize	src/arch/arm/insts/macromem.hh	/^    uint8_t eSize, dataSize, numStructElems, numRegs, step;$/;"	m	class:ArmISA::MicroNeonMixOp64
eSize	src/arch/arm/insts/macromem.hh	/^    uint8_t eSize, dataSize, numStructElems, numRegs;$/;"	m	class:ArmISA::VldMultOp64
eSize	src/arch/arm/insts/macromem.hh	/^    uint8_t eSize, dataSize, numStructElems, numRegs;$/;"	m	class:ArmISA::VstMultOp64
ea	src/arch/arm/miscregs.hh	/^        Bitfield<3> ea;$/;"	m	namespace:ArmISA
eaCalcDone	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool eaCalcDone;$/;"	m	class:InOrderDynInst
eaCompInst	src/cpu/static_inst.hh	/^    StaticInstPtr &eaCompInst() const { return nullStaticInstPtr; }$/;"	f	class:StaticInst
eaCompPtr	src/arch/power/insts/mem.hh	/^    const StaticInstPtr eaCompPtr;$/;"	m	class:PowerISA::MemOp
eaList	src/cpu/ozone/ea_list.hh	/^    std::list<instEA> eaList;$/;"	m	class:EAList
eaListIt	src/cpu/ozone/ea_list.hh	/^    typedef std::list<instEA>::iterator eaListIt;$/;"	t	class:EAList
eaSrcsReady	src/cpu/base_dyn_inst_impl.hh	/^BaseDynInst<Impl>::eaSrcsReady()$/;"	f	class:BaseDynInst
eaSrcsReady	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool eaSrcsReady()$/;"	f	class:InOrderDynInst
eaSrcsReady	src/cpu/ozone/dyn_inst_impl.hh	/^OzoneDynInst<Impl>::eaSrcsReady()$/;"	f	class:OzoneDynInst
eae	src/arch/arm/miscregs.hh	/^        Bitfield<31> eae;$/;"	m	namespace:ArmISA
early_kernel_symbols	src/arch/arm/ArmSystem.py	/^    early_kernel_symbols = Param.Bool(False,$/;"	v	class:LinuxArmSystem
eat_end_white	src/base/str.hh	/^eat_end_white(std::string &s)$/;"	f
eat_lead_white	src/base/str.hh	/^eat_lead_white(std::string &s)$/;"	f
eat_white	src/base/str.hh	/^eat_white(std::string &s)$/;"	f
eb	src/arch/mips/pra_constants.hh	/^    Bitfield<25>     eb;$/;"	m	namespace:MipsISA
ec	src/arch/arm/faults.cc	/^DataAbort::ec(ThreadContext *tc) const$/;"	f	class:ArmISA::DataAbort
ec	src/arch/arm/faults.cc	/^HypervisorTrap::ec(ThreadContext *tc) const$/;"	f	class:ArmISA::HypervisorTrap
ec	src/arch/arm/faults.cc	/^PrefetchAbort::ec(ThreadContext *tc) const$/;"	f	class:ArmISA::PrefetchAbort
ec	src/arch/arm/faults.cc	/^SecureMonitorCall::ec(ThreadContext *tc) const$/;"	f	class:ArmISA::SecureMonitorCall
ec	src/arch/arm/faults.cc	/^SecureMonitorTrap::ec(ThreadContext *tc) const$/;"	f	class:ArmISA::SecureMonitorTrap
ec	src/arch/arm/faults.cc	/^SupervisorCall::ec(ThreadContext *tc) const$/;"	f	class:ArmISA::SupervisorCall
ec	src/arch/arm/faults.cc	/^SupervisorTrap::ec(ThreadContext *tc) const$/;"	f	class:ArmISA::SupervisorTrap
ec	src/arch/arm/faults.cc	/^UndefinedInstruction::ec(ThreadContext *tc) const$/;"	f	class:ArmISA::UndefinedInstruction
ec	src/arch/arm/faults.hh	/^        const ExceptionClass ec;$/;"	m	struct:ArmISA::ArmFault::FaultVals
ec	src/arch/arm/faults.hh	/^    virtual ExceptionClass ec(ThreadContext *tc) const { return vals.ec; }$/;"	f	class:ArmISA::ArmFaultVals
ec	src/arch/arm/miscregs.hh	/^        Bitfield<31, 26> ec;$/;"	m	namespace:ArmISA
ec	src/arch/mips/pra_constants.hh	/^    Bitfield<30>     ec;$/;"	m	namespace:MipsISA
eccandParityEnable	src/arch/arm/miscregs.hh	/^      Bitfield<21>    eccandParityEnable;$/;"	m	namespace:ArmISA
ecf	src/arch/x86/regs/misc.hh	/^        Bitfield<3> ecf;$/;"	m	namespace:X86ISA
echo	src/base/inet.hh	/^    uint32_t echo() const { return ntohl(opt_data.echo); }$/;"	f	struct:Net::TcpOpt
ecoff_aouthdr	src/base/loader/exec_ecoff.h	/^struct ecoff_aouthdr {$/;"	s
ecoff_exechdr	src/base/loader/exec_ecoff.h	/^struct ecoff_exechdr {$/;"	s
ecoff_extsym	src/base/loader/coff_sym.h	/^typedef struct ecoff_extsym {$/;"	s
ecoff_fdr	src/base/loader/coff_sym.h	/^typedef struct ecoff_fdr {$/;"	s
ecoff_filehdr	src/base/loader/exec_ecoff.h	/^struct ecoff_filehdr {$/;"	s
ecoff_scnhdr	src/base/loader/exec_ecoff.h	/^struct ecoff_scnhdr {		\/* needed for size info *\/$/;"	s
ecoff_sym	src/base/loader/coff_sym.h	/^typedef struct ecoff_sym {$/;"	s
ecoff_symhdr	src/base/loader/coff_sym.h	/^typedef struct ecoff_symhdr {$/;"	s
ecpm	src/dev/pcireg.h	/^        Bitfield<8>     ecpm;$/;"	m	struct:PXCAP
ed	src/arch/mips/pra_constants.hh	/^    Bitfield<29>     ed;$/;"	m	namespace:MipsISA
edgeTriggered	src/dev/x86/i8259.hh	/^    bool edgeTriggered;$/;"	m	class:X86ISA::I8259
ee	src/arch/arm/miscregs.hh	/^        Bitfield<25>   ee;      \/\/ Exception Endianness$/;"	m	namespace:ArmISA
ee	src/arch/mips/pra_constants.hh	/^    Bitfield<26>     ee;$/;"	m	namespace:MipsISA
eeAddr	src/dev/i8254xGBe.hh	/^    uint8_t eeOpcode, eeAddr;$/;"	m	class:IGbE
eeAddrBits	src/dev/i8254xGBe.hh	/^    int eeOpBits, eeAddrBits, eeDataBits;$/;"	m	class:IGbE
eeDataBits	src/dev/i8254xGBe.hh	/^    int eeOpBits, eeAddrBits, eeDataBits;$/;"	m	class:IGbE
eeOpBits	src/dev/i8254xGBe.hh	/^    int eeOpBits, eeAddrBits, eeDataBits;$/;"	m	class:IGbE
eeOpcode	src/dev/i8254xGBe.hh	/^    uint8_t eeOpcode, eeAddr;$/;"	m	class:IGbE
eecd	src/dev/i8254xGBe_defs.hh	/^    EECD eecd;$/;"	m	struct:iGbReg::Regs
eepromAddress	src/dev/ns_gige.hh	/^    uint8_t eepromAddress;$/;"	m	class:NSGigE
eepromBitsToRx	src/dev/ns_gige.hh	/^    uint8_t eepromBitsToRx;$/;"	m	class:NSGigE
eepromClk	src/dev/ns_gige.hh	/^    bool eepromClk;$/;"	m	class:NSGigE
eepromData	src/dev/ns_gige.hh	/^    uint16_t eepromData;$/;"	m	class:NSGigE
eepromGetAddress	src/dev/ns_gige.hh	/^        eepromGetAddress,$/;"	e	enum:NSGigE::EEPROMState
eepromGetOpcode	src/dev/ns_gige.hh	/^        eepromGetOpcode,$/;"	e	enum:NSGigE::EEPROMState
eepromKick	src/dev/ns_gige.cc	/^NSGigE::eepromKick()$/;"	f	class:NSGigE
eepromOpcode	src/dev/ns_gige.hh	/^    uint8_t eepromOpcode;$/;"	m	class:NSGigE
eepromRead	src/dev/ns_gige.hh	/^        eepromRead$/;"	e	enum:NSGigE::EEPROMState
eepromStart	src/dev/ns_gige.hh	/^        eepromStart,$/;"	e	enum:NSGigE::EEPROMState
eepromState	src/dev/ns_gige.hh	/^    EEPROMState eepromState;$/;"	m	class:NSGigE
eerd	src/dev/i8254xGBe_defs.hh	/^    EERD eerd;$/;"	m	struct:iGbReg::Regs
eetps	src/dev/pcireg.h	/^        Bitfield<21>    eetps;$/;"	m	struct:PXCAP
effAddr	src/cpu/base_dyn_inst.hh	/^    Addr effAddr;$/;"	m	class:BaseDynInst
effAddr	src/cpu/inorder/inorder_dyn_inst.hh	/^    Addr effAddr;$/;"	m	class:InOrderDynInst
effAddrValid	src/cpu/base_dyn_inst.hh	/^    bool effAddrValid() const { return instFlags[EffAddrValid]; }$/;"	f	class:BaseDynInst
effSize	src/cpu/base_dyn_inst.hh	/^    uint8_t effSize;$/;"	m	class:BaseDynInst
effs	src/dev/pcireg.h	/^        Bitfield<20>    effs;$/;"	m	struct:PXCAP
egid	src/sim/Process.py	/^    egid = Param.Int(100, 'effective group id')$/;"	v	class:LiveProcess
egid	src/sim/process.hh	/^    inline uint64_t egid() {return __egid;}$/;"	f	class:LiveProcess
eicss	src/arch/mips/pra_constants.hh	/^    Bitfield<21, 18> eicss;$/;"	m	namespace:MipsISA
eipv	src/arch/x86/regs/misc.hh	/^        Bitfield<1> eipv; \/\/ Error-IP valid$/;"	m	namespace:X86ISA
eisr	src/dev/arm/vgic.hh	/^        uint64_t eisr;$/;"	m	struct:VGic::vcpuIntData
ejtagVer0	src/arch/mips/dt_constants.hh	/^        Bitfield<15> ejtagVer0;$/;"	m	namespace:MipsISA
ejtagVer1	src/arch/mips/dt_constants.hh	/^        Bitfield<16> ejtagVer1;$/;"	m	namespace:MipsISA
ejtagVer2	src/arch/mips/dt_constants.hh	/^        Bitfield<17> ejtagVer2;$/;"	m	namespace:MipsISA
el	src/arch/arm/miscregs.hh	/^        Bitfield<3, 2> el;      \/\/ AArch64$/;"	m	namespace:ArmISA
el	src/arch/arm/pagetable.hh	/^    uint8_t el;$/;"	m	struct:ArmISA::TlbEntry
el	src/arch/arm/table_walker.hh	/^        ExceptionLevel el;$/;"	m	class:ArmISA::TableWalker::WalkerState
el	src/arch/arm/types.hh	/^        Bitfield<3, 2> el;$/;"	m	namespace:ArmISA
elasticReq	src/cpu/testers/traffic_gen/traffic_gen.hh	/^    const bool elasticReq;$/;"	m	class:TrafficGen
elastic_req	src/cpu/testers/traffic_gen/TrafficGen.py	/^    elastic_req = Param.Bool(False,$/;"	v	class:TrafficGen
elementAt	src/mem/ruby/common/NetDest.cc	/^NetDest::elementAt(MachineID index)$/;"	f	class:NetDest
elementAt	src/mem/ruby/common/Set.hh	/^    elementAt(int index) const$/;"	f	class:Set
elpa	src/arch/mips/pra_constants.hh	/^    Bitfield<29>     elpa;$/;"	m	namespace:MipsISA
em	src/arch/x86/regs/misc.hh	/^        Bitfield<2> em; \/\/ Emulation$/;"	m	namespace:X86ISA
em	src/mem/packet_queue.hh	/^    EventManager& em;$/;"	m	class:PacketQueue
em	src/mem/ruby/common/Consumer.hh	/^    ClockedObject *em;$/;"	m	class:Consumer
embContFirmwareMajor	src/arch/x86/bios/smbios.hh	/^    uint8_t embContFirmwareMajor;$/;"	m	class:X86ISA::SMBios::BiosInformation
embContFirmwareMinor	src/arch/x86/bios/smbios.hh	/^    uint8_t embContFirmwareMinor;$/;"	m	class:X86ISA::SMBios::BiosInformation
emb_cont_firmware_major	src/arch/x86/bios/SMBios.py	/^    emb_cont_firmware_major = Param.UInt8(0,$/;"	v	class:X86SMBiosBiosInformation
emb_cont_firmware_minor	src/arch/x86/bios/SMBios.py	/^    emb_cont_firmware_minor = Param.UInt8(0,$/;"	v	class:X86SMBiosBiosInformation
embedError	src/mem/slicc/ast/AST.py	/^    def embedError(self, message, *args):$/;"	m	class:AST
emi	src/arch/arm/decoder.hh	/^    ExtMachInst emi;$/;"	m	class:ArmISA::Decoder
emi	src/arch/mips/decoder.hh	/^    ExtMachInst emi;$/;"	m	class:MipsISA::Decoder
emi	src/arch/power/decoder.hh	/^    ExtMachInst emi;$/;"	m	class:PowerISA::Decoder
emi	src/arch/sparc/decoder.hh	/^    ExtMachInst emi;$/;"	m	class:SparcISA::Decoder
emi	src/arch/x86/decoder.hh	/^    ExtMachInst emi;$/;"	m	class:X86ISA::Decoder
empty	src/arch/sparc/tlb_map.hh	/^    empty()$/;"	f	class:SparcISA::TlbMap
empty	src/base/addr_range_map.hh	/^    empty() const$/;"	f	class:AddrRangeMap
empty	src/base/callback.hh	/^    bool empty() const { return callbacks.empty(); }$/;"	f	class:CallbackQueue
empty	src/base/circlebuf.hh	/^    bool empty() const { return _size == 0; }$/;"	f	class:CircleBuf
empty	src/base/varargs.hh	/^    bool empty() const { return l.empty(); }$/;"	f	class:VarArgs::List
empty	src/cpu/inorder/resource_sked.cc	/^ResourceSked::empty()$/;"	f	class:ResourceSked
empty	src/cpu/o3/dep_graph.hh	/^    bool empty(PhysRegIndex idx) const { return !dependGraph[idx].next; }$/;"	f	class:DependencyGraph
empty	src/cpu/o3/dep_graph.hh	/^DependencyGraph<DynInstPtr>::empty() const$/;"	f	class:DependencyGraph
empty	src/cpu/pred/ras.hh	/^     bool empty() { return usedEntries == 0; }$/;"	f	class:ReturnAddrStack
empty	src/dev/pktfifo.hh	/^    bool empty() const { return size() <= 0; }$/;"	f	class:PacketFifo
empty	src/mem/ruby/system/Sequencer.cc	/^Sequencer::empty() const$/;"	f	class:Sequencer
empty	src/sim/eventq.hh	/^    bool empty() const { return head == NULL; }$/;"	f	class:EventQueue
emptyROB	src/cpu/o3/comm.hh	/^        bool emptyROB; \/\/ *R$/;"	m	struct:TimeBufStruct::commitComm
emptyROB	src/cpu/o3/rename.hh	/^    bool emptyROB[Impl::MaxThreads];$/;"	m	class:DefaultRename
emptyRenameInsts	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::emptyRenameInsts(ThreadID tid)$/;"	f	class:DefaultIEW
empty_count	src/cpu/ozone/back_end.hh	/^        Stats::Scalar empty_count;$/;"	m	class:BackEnd::InstQueue
empty_rate	src/cpu/ozone/back_end.hh	/^        Stats::Formula empty_rate;$/;"	m	class:BackEnd::InstQueue
en	src/arch/arm/miscregs.hh	/^        Bitfield<30> en;$/;"	m	namespace:ArmISA
en	src/arch/x86/regs/misc.hh	/^        Bitfield<22> en; \/\/ Counter enable$/;"	m	namespace:X86ISA
en	src/arch/x86/regs/misc.hh	/^        Bitfield<60> en; \/\/ Error condition enabled$/;"	m	namespace:X86ISA
enable	src/arch/x86/bios/IntelMP.py	/^    enable = Param.Bool(True, 'if this APIC is usable')$/;"	v	class:X86IntelMPIOAPIC
enable	src/arch/x86/bios/IntelMP.py	/^    enable = Param.Bool(True, 'if this processor is usable')$/;"	v	class:X86IntelMPProcessor
enable	src/arch/x86/regs/misc.hh	/^        Bitfield<11> enable;$/;"	m	namespace:X86ISA
enable	src/base/debug.cc	/^    enable()$/;"	f	struct:Debug::AllFlags
enable	src/base/debug.cc	/^CompoundFlag::enable()$/;"	f	class:Debug::CompoundFlag
enable	src/base/debug.hh	/^    void enable() { _status = true; }$/;"	f	class:Debug::SimpleFlag
enable	src/base/pollevent.cc	/^PollEvent::enable()$/;"	f	class:PollEvent
enable	src/base/statistics.cc	/^Info::enable()$/;"	f	class:Stats::Info
enable	src/base/statistics.cc	/^Vector2dInfo::enable()$/;"	f	class:Stats::Vector2dInfo
enable	src/base/statistics.cc	/^VectorDistInfo::enable()$/;"	f	class:Stats::VectorDistInfo
enable	src/base/statistics.cc	/^VectorInfo::enable()$/;"	f	class:Stats::VectorInfo
enable	src/base/statistics.cc	/^enable()$/;"	f	namespace:Stats
enable	src/dev/arm/generic_timer.hh	/^            Bitfield<0> enable;$/;"	m	class:GenericTimer::ArchTimer
enable	src/dev/arm/hdlcd.hh	/^        Bitfield<0>    enable;$/;"	m	class:HDLcd
enable	src/dev/arm/kmi.hh	/^        Bitfield<2> enable;$/;"	m	class:Pl050
enable	src/dev/arm/timer_cpulocal.hh	/^            Bitfield<0>   enable;$/;"	m	class:CpuLocalTimer::Timer
enable	src/python/m5/stats/__init__.py	/^def enable():$/;"	f
enable	src/python/m5/trace.py	/^def enable():$/;"	f
enableCapture	src/dev/arm/hdlcd.hh	/^    bool enableCapture;$/;"	m	class:HDLcd
enableCapture	src/dev/arm/pl111.hh	/^    bool enableCapture;$/;"	m	class:Pl111
enableContextSwitchStatsDump	src/arch/arm/linux/system.hh	/^    bool enableContextSwitchStatsDump;$/;"	m	class:LinuxArmSystem
enableDebug	src/mem/DRAMSim2.py	/^    enableDebug = Param.Bool(False, "Enable DRAMSim2 debug output")$/;"	v	class:DRAMSim2
enableFunctionTrace	src/cpu/base.cc	/^BaseCPU::enableFunctionTrace()$/;"	f	class:BaseCPU
enableNX	src/arch/x86/pagetable_walker.hh	/^            bool enableNX;$/;"	m	class:X86ISA::Walker::WalkerState
enableSignals	src/cpu/kvm/perfevent.cc	/^PerfKvmCounter::enableSignals(pid_t tid, int signal)$/;"	f	class:PerfKvmCounter
enableSignals	src/cpu/kvm/perfevent.hh	/^    void enableSignals(int signal) { enableSignals(gettid(), signal); }$/;"	f	class:PerfKvmCounter
enableSm	src/dev/i8254xGBe.cc	/^IGbE::RxDescCache::enableSm()$/;"	f	class:IGbE::RxDescCache
enableSm	src/dev/i8254xGBe.cc	/^IGbE::TxDescCache::enableSm()$/;"	f	class:IGbE::TxDescCache
enable_capture	src/dev/arm/RealView.py	/^    enable_capture = Param.Bool(True, "capture frame to system.framebuffer.bmp")$/;"	v	class:HDLcd
enable_capture	src/dev/arm/RealView.py	/^    enable_capture = Param.Bool(True, "capture frame to system.framebuffer.bmp")$/;"	v	class:Pl111
enable_context_switch_stats_dump	src/arch/arm/ArmSystem.py	/^    enable_context_switch_stats_dump = Param.Bool(False, "enable stats\/task info dumping at context switch boundaries")$/;"	v	class:LinuxArmSystem
enable_fault_model	src/mem/ruby/network/garnet/BaseGarnetNetwork.py	/^    enable_fault_model = Param.Bool(False, "enable network fault model");$/;"	v	class:BaseGarnetNetwork
enabled	src/base/CPA.py	/^    enabled = Param.Bool(False, "Is Annotation enabled?")$/;"	v	class:CPA
enabled	src/base/cp_annotate.hh	/^    bool enabled()                                          { return false; }$/;"	f	class:CPA
enabled	src/base/cp_annotate.hh	/^    enabled() $/;"	f	class:CPA
enabled	src/base/pollevent.hh	/^    bool enabled;$/;"	m	class:PollEvent
enabled	src/base/statistics.cc	/^enabled()$/;"	f	namespace:Stats
enabled	src/base/trace.cc	/^bool enabled = false;$/;"	m	namespace:Trace	file:
enabled	src/base/varargs.hh	/^    enum { enabled = false };$/;"	e	enum:VarArgs::Traits::__anon47
enabled	src/base/varargs.hh	/^    enum { enabled = true };$/;"	e	enum:VarArgs::Traits::__anon46
enabled	src/dev/arm/gic_pl390.hh	/^    bool enabled;$/;"	m	class:Pl390
enabled	src/dev/x86/i8042.hh	/^        Bitfield<5> enabled;$/;"	m	class:X86ISA::PS2Mouse
encodePhysAddrRange64	src/arch/arm/utility.cc	/^encodePhysAddrRange64(int pa_size)$/;"	f	namespace:ArmISA
encoding	src/arch/arm/types.hh	/^        Bitfield<27, 25> encoding;$/;"	m	namespace:ArmISA
encoding	src/base/vnc/vncserver.hh	/^        int32_t encoding;$/;"	m	struct:VncServer::FrameBufferRect
end	src/arch/sparc/tlb_map.hh	/^    end()$/;"	f	class:SparcISA::TlbMap
end	src/base/addr_range_map.hh	/^    end() const$/;"	f	class:AddrRangeMap
end	src/base/addr_range_map.hh	/^    end()$/;"	f	class:AddrRangeMap
end	src/base/stats/text.cc	/^Text::end()$/;"	f	class:Stats::Text
end	src/base/varargs.hh	/^    const_iterator end() const { return l.end(); }$/;"	f	class:VarArgs::List
end	src/base/varargs.hh	/^    iterator end() { return l.end(); }$/;"	f	class:VarArgs::List
end	src/cpu/inorder/resource_sked.cc	/^ResourceSked::end()$/;"	f	class:ResourceSked
end	src/cpu/inorder/resource_sked.cc	/^ResourceSked::end(int stage_num)$/;"	f	class:ResourceSked
end	src/dev/pktfifo.hh	/^    iterator end() { return fifo.end(); }$/;"	f	class:PacketFifo
end	src/python/m5/util/region.py	/^    def end(self):$/;"	m	class:Region
endAccess	src/mem/ruby/system/BankedArray.hh	/^        Tick endAccess;$/;"	m	class:BankedArray::AccessRecord
endAddr	src/cpu/testers/traffic_gen/generators.hh	/^    const Addr endAddr;$/;"	m	class:LinearGen
endAddr	src/cpu/testers/traffic_gen/generators.hh	/^    const Addr endAddr;$/;"	m	class:RandomGen
endFrame	src/dev/arm/hdlcd.cc	/^HDLcd::endFrame() {$/;"	f	class:HDLcd
endFrameEvent	src/dev/arm/hdlcd.hh	/^    EventWrapper<HDLcd, &HDLcd::endFrame> endFrameEvent;$/;"	m	class:HDLcd
endOfSkedIt	src/cpu/inorder/cpu.hh	/^    SkedCacheIt endOfSkedIt;$/;"	m	class:InOrderCPU
endOfTable	src/dev/ide_disk.hh	/^    uint16_t endOfTable;$/;"	m	struct:PrdEntry
endOnEOT	src/dev/arm/pl011.hh	/^    bool endOnEOT;$/;"	m	class:Pl011
endWalk	src/arch/x86/pagetable_walker.cc	/^Walker::WalkerState::endWalk()$/;"	f	class:X86ISA::Walker::WalkerState
end_args	src/base/cprintf.cc	/^Print::end_args()$/;"	f	class:cp::Print
end_on_eot	src/dev/arm/RealView.py	/^    end_on_eot = Param.Bool(False, "End the simulation when a EOT is received on the UART")$/;"	v	class:Pl011
endpoint_bandwidth	src/mem/ruby/network/simple/SimpleNetwork.py	/^    endpoint_bandwidth = Param.Int(1000, "bandwidth adjustment factor");$/;"	v	class:SimpleNetwork
enqueue	src/mem/dramsim2_wrapper.cc	/^DRAMSim2Wrapper::enqueue(bool is_write, uint64_t addr)$/;"	f	class:DRAMSim2Wrapper
enqueue	src/mem/ruby/buffers/MessageBuffer.cc	/^MessageBuffer::enqueue(MsgPtr message, Cycles delta)$/;"	f	class:MessageBuffer
enqueue	src/mem/ruby/buffers/MessageBuffer.hh	/^    void enqueue(MsgPtr message) { enqueue(message, Cycles(1)); }$/;"	f	class:MessageBuffer
enqueue	src/mem/ruby/system/RubyMemoryControl.cc	/^RubyMemoryControl::enqueue(const MsgPtr& message, Cycles latency)$/;"	f	class:RubyMemoryControl
enqueue	src/mem/ruby/system/WireBuffer.cc	/^WireBuffer::enqueue(MsgPtr message, Cycles latency)$/;"	f	class:WireBuffer
enqueueMemRef	src/mem/ruby/system/RubyMemoryControl.cc	/^RubyMemoryControl::enqueueMemRef(MemoryNode *memRef)$/;"	f	class:RubyMemoryControl
enqueueNextFetchRequest	src/mem/ruby/recorder/CacheRecorder.cc	/^CacheRecorder::enqueueNextFetchRequest()$/;"	f	class:CacheRecorder
enqueueNextFlushRequest	src/mem/ruby/recorder/CacheRecorder.cc	/^CacheRecorder::enqueueNextFlushRequest()$/;"	f	class:CacheRecorder
enqueuePrefetch	src/mem/ruby/slicc_interface/AbstractController.hh	/^    virtual void enqueuePrefetch(const Address&, const RubyRequestType&)$/;"	f	class:AbstractController
enqueueRubyEvent	src/mem/ruby/system/System.hh	/^    void enqueueRubyEvent(Tick tick)$/;"	f	class:RubySystem
enqueueToDirectory	src/mem/ruby/system/RubyMemoryControl.cc	/^RubyMemoryControl::enqueueToDirectory(MemoryNode *req, Cycles latency)$/;"	f	class:RubyMemoryControl
ens	src/dev/pcireg.h	/^        Bitfield<11>    ens;$/;"	m	struct:PXCAP
enter	src/arch/x86/regs/misc.hh	/^        Bitfield<1> enter;$/;"	m	namespace:X86ISA
enter	src/cpu/testers/traffic_gen/generators.cc	/^LinearGen::enter()$/;"	f	class:LinearGen
enter	src/cpu/testers/traffic_gen/generators.cc	/^RandomGen::enter()$/;"	f	class:RandomGen
enter	src/cpu/testers/traffic_gen/generators.cc	/^TraceGen::enter()$/;"	f	class:TraceGen
enter	src/cpu/testers/traffic_gen/generators.hh	/^    void enter() { }$/;"	f	class:IdleGen
enterREDState	src/arch/sparc/faults.cc	/^enterREDState(ThreadContext *tc)$/;"	f	namespace:SparcISA
enterState	src/cpu/testers/traffic_gen/traffic_gen.cc	/^TrafficGen::enterState(uint32_t newState)$/;"	f	class:TrafficGen
entries	src/arch/x86/bios/ACPI.py	/^    entries = VectorParam.X86ACPISysDescTable([], 'system description tables')$/;"	v	class:X86ACPIRSDT
entries	src/arch/x86/bios/ACPI.py	/^    entries = VectorParam.X86ACPISysDescTable([], 'system description tables')$/;"	v	class:X86ACPIXSDT
entries	src/arch/x86/bios/E820.py	/^    entries = VectorParam.X86E820Entry('entries for the e820 table')$/;"	v	class:X86E820Table
entries	src/arch/x86/bios/acpi.hh	/^    std::vector<SysDescTable *> entries;$/;"	m	class:X86ISA::ACPI::RSDT
entries	src/arch/x86/bios/acpi.hh	/^    std::vector<SysDescTable *> entries;$/;"	m	class:X86ISA::ACPI::XSDT
entries	src/arch/x86/bios/e820.hh	/^        std::vector<E820Entry *> entries;$/;"	m	class:X86ISA::E820Table
entry	src/arch/alpha/aout_machdep.h	/^    uint64_t    entry;          \/\/\/< entry point$/;"	m	struct:aout_exechdr
entry	src/arch/alpha/pagetable.hh	/^    uint64_t entry;$/;"	m	struct:AlphaISA::PageTableEntry
entry	src/arch/arm/isa.hh	/^            struct MiscRegLUTEntry entry;$/;"	m	struct:ArmISA::ISA::MiscRegInitializerEntry	typeref:struct:ArmISA::ISA::MiscRegInitializerEntry::MiscRegLUTEntry
entry	src/arch/sparc/pagetable.hh	/^    uint64_t entry;$/;"	m	class:SparcISA::PageTableEntry
entry	src/arch/sparc/pagetable.hh	/^    uint64_t entry;$/;"	m	class:SparcISA::TteTag
entry	src/arch/x86/pagetable_walker.hh	/^            TlbEntry entry;$/;"	m	class:X86ISA::Walker::WalkerState
entry	src/base/loader/exec_ecoff.h	/^        coff_ulong  entry;$/;"	m	struct:ecoff_aouthdr
entry	src/base/loader/object_file.hh	/^    Addr entry;$/;"	m	class:ObjectFile
entry	src/dev/ide_disk.hh	/^    PrdEntry_t entry;$/;"	m	class:PrdTableEntry
entry	src/mem/page_table.hh	/^        TheISA::TlbEntry entry;$/;"	m	struct:PageTable::cacheElement
entry4u	src/arch/sparc/pagetable.hh	/^    uint64_t entry4u;$/;"	m	class:SparcISA::PageTableEntry
entryAmount	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::entryAmount(ThreadID num_threads)$/;"	f	class:InstructionQueue
entryAmount	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::entryAmount(ThreadID num_threads)$/;"	f	class:LSQ
entryAmount	src/cpu/o3/rob_impl.hh	/^ROB<Impl>::entryAmount(ThreadID num_threads)$/;"	f	class:ROB
entryCompare	src/cpu/inorder/pipeline_traits.5stage.hh	/^    struct entryCompare {$/;"	s	namespace:ThePipeline
entryCompare	src/cpu/inorder/pipeline_traits.9stage.hh	/^    struct entryCompare {$/;"	s	namespace:ThePipeline
entryCompare	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^    struct entryCompare {$/;"	s	namespace:ThePipeline
entryPoint	src/base/loader/object_file.hh	/^    Addr entryPoint() const { return entry; }$/;"	f	class:ObjectFile
entryPoint	src/dev/alpha/access.h	/^    uint64_t    entryPoint;             \/\/ 30:$/;"	m	struct:AlphaAccess
entryPoint	src/dev/mips/access.h	/^    uint32_t    entryPoint;             \/\/ 1c:$/;"	m	struct:MipsAccess
entryPointLength	src/arch/x86/bios/smbios.cc	/^        SMBiosHeader::entryPointLength = 0x1F;$/;"	m	class:X86ISA::SMBios::SMBiosTable::SMBiosHeader	file:
entryPointLength	src/arch/x86/bios/smbios.hh	/^        static const uint8_t entryPointLength;$/;"	m	struct:X86ISA::SMBios::SMBiosTable::SMBiosHeader
entryPointRevision	src/arch/x86/bios/smbios.cc	/^        SMBiosHeader::entryPointRevision = 0;$/;"	m	class:X86ISA::SMBios::SMBiosTable::SMBiosHeader	file:
entryPointRevision	src/arch/x86/bios/smbios.hh	/^        static const uint8_t entryPointRevision;$/;"	m	struct:X86ISA::SMBios::SMBiosTable::SMBiosHeader
entryTime	src/mem/dram_ctrl.hh	/^        const Tick entryTime;$/;"	m	class:DRAMCtrl::DRAMPacket
entry_number	src/arch/x86/linux/syscalls.cc	/^    uint32_t entry_number;$/;"	m	struct:UserDesc32	file:
entry_number	src/arch/x86/linux/syscalls.cc	/^    uint32_t entry_number;$/;"	m	struct:UserDesc64	file:
env	src/arch/x86/insts/macroop.hh	/^    X86ISA::EmulEnv env;$/;"	m	class:X86ISA::MacroopBase
env	src/sim/Process.py	/^    env = VectorParam.String([], "environment settings")$/;"	v	class:LiveProcess
envp	src/sim/process.hh	/^    std::vector<std::string> envp;$/;"	m	class:LiveProcess
eop	src/dev/i8254xGBe_defs.hh	/^inline bool eop(TxDesc *d)  { assert(isLegacy(d) || isData(d)); return bits(d->d2, 24,24); }$/;"	f	namespace:iGbReg::TxdOp
ep	src/arch/mips/pra_constants.hh	/^    Bitfield<1>      ep;$/;"	m	namespace:MipsISA
epd0	src/arch/arm/miscregs.hh	/^        Bitfield<7> epd0;$/;"	m	namespace:ArmISA
epd1	src/arch/arm/miscregs.hh	/^        Bitfield<23> epd1;$/;"	m	namespace:ArmISA
epoll_create	src/kern/linux/linux_syscalls.hh	/^    epoll_create = 30,$/;"	e	enum:SystemCalls::__anon87
epoll_ctl	src/kern/linux/linux_syscalls.hh	/^    epoll_ctl = 31,$/;"	e	enum:SystemCalls::__anon87
epoll_wait	src/kern/linux/linux_syscalls.hh	/^    epoll_wait = 32,$/;"	e	enum:SystemCalls::__anon87
eprint	src/mem/slicc/main.py	/^def eprint(format, *args):$/;"	f
eq	src/arch/power/miscregs.hh	/^        Bitfield<29> eq;$/;"	m	namespace:PowerISA
equal	src/mem/ruby/common/DataBlock.cc	/^DataBlock::equal(const DataBlock& obj) const$/;"	f	class:DataBlock
equal_range	src/cpu/pc_event.cc	/^PCEventQueue::equal_range(Addr pc)$/;"	f	class:PCEventQueue
equal_range	src/cpu/pc_event.hh	/^    range_t equal_range(PCEvent *event) { return equal_range(event->pc()); }$/;"	f	class:PCEventQueue
equal_to	src/mem/ruby/common/Address.hh	/^template <> struct equal_to<Address>$/;"	s	namespace:std
er	src/arch/mips/pra_constants.hh	/^    Bitfield<31>     er;$/;"	m	namespace:MipsISA
erase	src/arch/sparc/tlb_map.hh	/^    erase(TlbRange k)$/;"	f	class:SparcISA::TlbMap
erase	src/arch/sparc/tlb_map.hh	/^    erase(iterator p)$/;"	f	class:SparcISA::TlbMap
erase	src/arch/sparc/tlb_map.hh	/^    erase(iterator p, iterator q)$/;"	f	class:SparcISA::TlbMap
erase	src/base/addr_range_map.hh	/^    erase(iterator p)$/;"	f	class:AddrRangeMap
erase	src/base/addr_range_map.hh	/^    erase(iterator p, iterator q)$/;"	f	class:AddrRangeMap
erase	src/base/varargs.hh	/^    void erase(iterator first, iterator last) { return l.erase(first, last); }$/;"	f	class:VarArgs::List
erase	src/base/varargs.hh	/^    void erase(iterator position) { return l.erase(position); }$/;"	f	class:VarArgs::List
eraseCacheEntry	src/mem/page_table.hh	/^    inline void eraseCacheEntry(Addr vaddr)$/;"	f	class:PageTable
erg	src/arch/arm/miscregs.hh	/^      Bitfield<23,20> erg;$/;"	m	namespace:ArmISA
erl	src/arch/mips/pra_constants.hh	/^    Bitfield<2>      erl;$/;"	m	namespace:MipsISA
ero	src/dev/pcireg.h	/^        Bitfield<4>     ero;$/;"	m	struct:PXCAP
erroneous_allocation__VC	src/mem/ruby/network/fault_model/FaultModel.hh	/^        erroneous_allocation__VC,$/;"	e	enum:FaultModel::fault_type
erroneous_allocation__switch	src/mem/ruby/network/fault_model/FaultModel.hh	/^        erroneous_allocation__switch,$/;"	e	enum:FaultModel::fault_type
error	src/arch/isa_parser.py	/^def error(*args):$/;"	f
error	src/arch/micro_asm.py	/^def error(lineno, string, print_traceback = False):$/;"	f
error	src/dev/copy_engine_defs.hh	/^    CHANERR error;$/;"	m	struct:CopyEngineReg::ChanRegs
error	src/dev/ide_disk.hh	/^    uint8_t error;$/;"	m	struct:CommandReg
error	src/mem/slicc/ast/AST.py	/^    def error(self, message, *args):$/;"	m	class:AST
error	src/mem/slicc/symbols/Symbol.py	/^    def error(self, message, *args):$/;"	m	class:Symbol
error	src/mem/slicc/util.py	/^    def error(self, message, *args):$/;"	m	class:Location
errorCode	src/arch/x86/faults.hh	/^        uint64_t errorCode;$/;"	m	class:X86ISA::X86FaultBase
errors	src/dev/i8254xGBe_defs.hh	/^            uint32_t errors:12;$/;"	m	struct:iGbReg::RxDesc::__anon70::__anon73
errors	src/dev/i8254xGBe_defs.hh	/^            uint8_t errors;$/;"	m	struct:iGbReg::RxDesc::__anon70::__anon71
errout	src/sim/Process.py	/^    errout = Param.String('cerr', 'filename for stderr')$/;"	v	class:Process
es	src/arch/mips/pra_constants.hh	/^    Bitfield<27>     es;$/;"	m	namespace:MipsISA
es	src/dev/pcireg.h	/^        Bitfield<7>     es;$/;"	m	struct:PXCAP
esi	src/arch/x86/regs/misc.hh	/^        Bitfield<63, 3> esi; \/\/ Extended selector$/;"	m	namespace:X86ISA
esp	src/arch/mips/pra_constants.hh	/^    Bitfield<28>     esp;$/;"	m	namespace:MipsISA
ess	src/arch/mips/pra_constants.hh	/^    Bitfield<15, 12> ess;$/;"	m	namespace:MipsISA
estimateLatency	src/mem/dram_ctrl.cc	/^DRAMCtrl::estimateLatency(DRAMPacket* dram_pkt, Tick inTime)$/;"	f	class:DRAMCtrl
et	src/arch/mips/pra_constants.hh	/^    Bitfield<28>     et;$/;"	m	namespace:MipsISA
et	src/arch/x86/regs/misc.hh	/^        Bitfield<4> et; \/\/ Extension Type$/;"	m	namespace:X86ISA
ete	src/dev/pcireg.h	/^        Bitfield<8>     ete;$/;"	m	struct:PXCAP
etfs	src/dev/pcireg.h	/^        Bitfield<5>     etfs;$/;"	m	struct:PXCAP
ethRxPkt	src/dev/i8254xGBe.cc	/^IGbE::ethRxPkt(EthPacketPtr pkt)$/;"	f	class:IGbE
ethTxDone	src/dev/i8254xGBe.cc	/^IGbE::ethTxDone()$/;"	f	class:IGbE
eth_hdr_vlan	src/base/inet.hh	/^    bool eth_hdr_vlan;$/;"	m	class:Net::Ip6Ptr
eth_hdr_vlan	src/base/inet.hh	/^    bool eth_hdr_vlan;$/;"	m	class:Net::IpPtr
etherInt	src/dev/i8254xGBe.hh	/^    IGbEInt *etherInt;$/;"	m	class:IGbE
ethernet	src/dev/arm/RealView.py	/^    ethernet = IGbE_e1000(pci_bus=0, pci_dev=0, pci_func=0,$/;"	v	class:VExpress_EMM
euid	src/sim/Process.py	/^    euid = Param.Int(100, 'effective user id')$/;"	v	class:LiveProcess
euid	src/sim/process.hh	/^    inline uint64_t euid() {return __euid;}$/;"	f	class:LiveProcess
event	src/arch/arm/stage2_mmu.hh	/^        Event     *event;$/;"	m	class:ArmISA::Stage2MMU::Stage2Translation
event	src/arch/mips/pra_constants.hh	/^    Bitfield<10, 5> event;$/;"	m	namespace:MipsISA
event	src/base/remote_gdb.hh	/^    Event *event;$/;"	m	class:BaseRemoteGDB
event	src/base/remote_gdb.hh	/^    Event *event;$/;"	m	class:GDBListener
event	src/dev/etherbus.hh	/^    DoneEvent event;$/;"	m	class:EtherBus
event	src/dev/ethertap.cc	/^    Event *event;$/;"	m	class:TapListener	file:
event	src/dev/ethertap.hh	/^    TapEvent *event;$/;"	m	class:EtherTap
event	src/dev/intel_8254_timer.hh	/^        CounterEvent event;$/;"	m	class:Intel8254Timer::Counter
event	src/dev/mc146818.hh	/^    RTCEvent event;$/;"	m	class:MC146818
event	src/python/m5/event.py	/^import internal.event$/;"	i
event	src/python/m5/main.py	/^    import event$/;"	i
eventMask	src/arch/x86/regs/misc.hh	/^        Bitfield<7,0> eventMask;$/;"	m	namespace:X86ISA
eventNames	src/cpu/inorder/cpu.cc	/^std::string InOrderCPU::eventNames[NumCPUEvents] =$/;"	m	class:InOrderCPU	file:
eventNames	src/cpu/inorder/cpu.hh	/^    static std::string eventNames[NumCPUEvents];$/;"	m	class:InOrderCPU
eventQueue	src/sim/eventq.hh	/^    eventQueue() const$/;"	f	class:EventManager
eventQueueEmpty	src/mem/ruby/system/System.hh	/^    bool eventQueueEmpty() { return eventq->empty(); }$/;"	f	class:RubySystem
eventType	src/cpu/inorder/resource_pool.hh	/^        InOrderCPU::CPUEventType eventType;$/;"	m	class:ResourcePool::ResPoolEvent
eventq	src/sim/eventq.hh	/^    EventQueue *eventq;$/;"	m	class:EventManager
eventqDump	src/sim/debug.cc	/^eventqDump()$/;"	f
eventq_index	src/python/m5/SimObject.py	/^    eventq_index = Param.UInt32(Parent.eventq_index, "Event Queue Index")$/;"	v	class:SimObject
eventq_index	src/sim/Root.py	/^    eventq_index = 0$/;"	v	class:Root
events	src/base/pollevent.hh	/^    eventvec_t events;$/;"	m	class:PollQueue
eventvec_t	src/base/pollevent.hh	/^    typedef std::vector<PollEvent *> eventvec_t;$/;"	t	class:PollQueue
evictLRU	src/arch/x86/tlb.cc	/^TLB::evictLRU()$/;"	f	class:X86ISA::TLB
evictionCallback	src/mem/ruby/system/Sequencer.cc	/^Sequencer::evictionCallback(const Address& address)$/;"	f	class:Sequencer
evp	src/arch/mips/mt_constants.hh	/^    Bitfield<0> evp;$/;"	m	namespace:MipsISA
evpc	src/cpu/pc_event.hh	/^    Addr evpc;$/;"	m	class:PCEvent
ex	src/arch/arm/miscregs.hh	/^        Bitfield<31> ex;$/;"	m	namespace:ArmISA
exa	src/python/m5/util/convert.py	/^exa  = 1.0e18$/;"	v
exactFullStall	src/cpu/ozone/back_end.hh	/^    bool exactFullStall;$/;"	m	class:BackEnd
exactFullStall	src/cpu/ozone/lw_back_end.hh	/^    bool exactFullStall;$/;"	m	class:LWBackEnd
exbi	src/python/m5/util/convert.py	/^exbi = pebi * 1024$/;"	v
excCode	src/arch/mips/pra_constants.hh	/^    Bitfield<6,  2>  excCode;$/;"	m	namespace:MipsISA
exceptionBase	src/arch/mips/pra_constants.hh	/^    Bitfield<29, 12> exceptionBase;$/;"	m	namespace:MipsISA
exclude_host	src/cpu/kvm/perfevent.hh	/^    PerfKvmCounterConfig &exclude_host(bool val) {$/;"	f	class:PerfKvmCounterConfig
exclude_hv	src/cpu/kvm/perfevent.hh	/^    PerfKvmCounterConfig &exclude_hv(bool val) {$/;"	f	class:PerfKvmCounterConfig
excpt	src/arch/mips/mt_constants.hh	/^    Bitfield<18, 16> excpt;$/;"	m	namespace:MipsISA
exeBranches	src/cpu/ozone/lw_back_end.hh	/^    Stats::Vector exeBranches;$/;"	m	class:LWBackEnd
exeInst	src/cpu/ozone/lw_back_end.hh	/^    Stats::Vector exeInst;$/;"	m	class:LWBackEnd
exeList	src/cpu/ozone/lw_back_end.hh	/^    ReadyInstQueue exeList;$/;"	m	class:LWBackEnd
exeLoads	src/cpu/ozone/lw_back_end.hh	/^    Stats::Vector exeLoads;$/;"	m	class:LWBackEnd
exeMulDiv	src/cpu/inorder/resources/mult_div_unit.cc	/^MultDivUnit::exeMulDiv(int slot_num)$/;"	f	class:MultDivUnit
exeNop	src/cpu/ozone/lw_back_end.hh	/^    Stats::Vector exeNop;$/;"	m	class:LWBackEnd
exeRefs	src/cpu/ozone/lw_back_end.hh	/^    Stats::Vector exeRefs;$/;"	m	class:LWBackEnd
exeStatus	src/cpu/o3/iew.hh	/^    StageStatus exeStatus;$/;"	m	class:DefaultIEW
exeSwp	src/cpu/ozone/lw_back_end.hh	/^    Stats::Vector exeSwp;$/;"	m	class:LWBackEnd
exe_branches	src/cpu/ozone/back_end.hh	/^    Stats::Vector exe_branches;$/;"	m	class:BackEnd
exe_inst	src/cpu/ozone/back_end.hh	/^    Stats::Vector exe_inst;$/;"	m	class:BackEnd
exe_loads	src/cpu/ozone/back_end.hh	/^    Stats::Vector exe_loads;$/;"	m	class:BackEnd
exe_nop	src/cpu/ozone/back_end.hh	/^    Stats::Vector exe_nop;$/;"	m	class:BackEnd
exe_refs	src/cpu/ozone/back_end.hh	/^    Stats::Vector exe_refs;$/;"	m	class:BackEnd
exe_swp	src/cpu/ozone/back_end.hh	/^    Stats::Vector exe_swp;$/;"	m	class:BackEnd
execHdr	src/base/loader/aout_object.hh	/^    aout_exechdr *execHdr;$/;"	m	class:AoutObject
execHdr	src/base/loader/ecoff_object.hh	/^    ecoff_exechdr *execHdr;$/;"	m	class:EcoffObject
exec_with_loader	src/kern/tru64/tru64_syscalls.hh	/^        exec_with_loader = 25,$/;"	e	enum:SystemCalls::__anon102
executable	src/sim/Process.py	/^    executable = Param.String('', "executable (overrides cmd[0] if set)")$/;"	v	class:LiveProcess
execute	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::execute()$/;"	f	class:InOrderDynInst
execute	src/cpu/inorder/resource.cc	/^Resource::execute(int slot_idx)$/;"	f	class:Resource
execute	src/cpu/inorder/resources/agen_unit.cc	/^AGENUnit::execute(int slot_num)$/;"	f	class:AGENUnit
execute	src/cpu/inorder/resources/branch_predictor.cc	/^BranchPredictor::execute(int slot_num)$/;"	f	class:BranchPredictor
execute	src/cpu/inorder/resources/cache_unit.cc	/^CacheUnit::execute(int slot_num)$/;"	f	class:CacheUnit
execute	src/cpu/inorder/resources/decode_unit.cc	/^DecodeUnit::execute(int slot_num)$/;"	f	class:DecodeUnit
execute	src/cpu/inorder/resources/execution_unit.cc	/^ExecutionUnit::execute(int slot_num)$/;"	f	class:ExecutionUnit
execute	src/cpu/inorder/resources/fetch_seq_unit.cc	/^FetchSeqUnit::execute(int slot_num)$/;"	f	class:FetchSeqUnit
execute	src/cpu/inorder/resources/fetch_unit.cc	/^FetchUnit::execute(int slot_num)$/;"	f	class:FetchUnit
execute	src/cpu/inorder/resources/graduation_unit.cc	/^GraduationUnit::execute(int slot_num)$/;"	f	class:GraduationUnit
execute	src/cpu/inorder/resources/inst_buffer.cc	/^InstBuffer::execute(int slot_idx)$/;"	f	class:InstBuffer
execute	src/cpu/inorder/resources/mult_div_unit.cc	/^MultDivUnit::execute(int slot_num)$/;"	f	class:MultDivUnit
execute	src/cpu/inorder/resources/tlb_unit.cc	/^TLBUnit::execute(int slot_idx)$/;"	f	class:TLBUnit
execute	src/cpu/inorder/resources/use_def.cc	/^UseDefUnit::execute(int slot_idx)$/;"	f	class:UseDefUnit
execute	src/cpu/o3/dyn_inst_impl.hh	/^BaseO3DynInst<Impl>::execute()$/;"	f	class:BaseO3DynInst
execute	src/cpu/ozone/dyn_inst_impl.hh	/^OzoneDynInst<Impl>::execute()$/;"	f	class:OzoneDynInst
executeBranchWidth	src/cpu/ozone/OzoneCPU.py	/^    executeBranchWidth = Param.Unsigned("Branch execute width")$/;"	v	class:DerivOzoneCPU
executeBranchWidth	src/cpu/ozone/SimpleOzoneCPU.py	/^    executeBranchWidth = Param.Unsigned("Branch execute width")$/;"	v	class:SimpleOzoneCPU
executeBranchWidth	src/cpu/ozone/simple_params.hh	/^    unsigned executeBranchWidth;$/;"	m	class:SimpleParams
executeCycle	src/mem/ruby/system/RubyMemoryControl.cc	/^RubyMemoryControl::executeCycle()$/;"	f	class:RubyMemoryControl
executeEAComp	src/cpu/ozone/dyn_inst.hh	/^    Fault executeEAComp()$/;"	f	class:OzoneDynInst
executeFloatWidth	src/cpu/ozone/OzoneCPU.py	/^    executeFloatWidth = Param.Unsigned("Floating point execute width")$/;"	v	class:DerivOzoneCPU
executeFloatWidth	src/cpu/ozone/SimpleOzoneCPU.py	/^    executeFloatWidth = Param.Unsigned("Floating point execute width")$/;"	v	class:SimpleOzoneCPU
executeFloatWidth	src/cpu/ozone/simple_params.hh	/^    unsigned executeFloatWidth;$/;"	m	class:SimpleParams
executeInsts	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::executeInsts()$/;"	f	class:DefaultIEW
executeInsts	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::executeInsts()$/;"	f	class:BackEnd
executeInsts	src/cpu/ozone/inorder_back_end_impl.hh	/^InorderBackEnd<Impl>::executeInsts()$/;"	f	class:InorderBackEnd
executeInsts	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::executeInsts()$/;"	f	class:LWBackEnd
executeIntWidth	src/cpu/ozone/OzoneCPU.py	/^    executeIntWidth = Param.Unsigned("Integer execute width")$/;"	v	class:DerivOzoneCPU
executeIntWidth	src/cpu/ozone/SimpleOzoneCPU.py	/^    executeIntWidth = Param.Unsigned("Integer execute width")$/;"	v	class:SimpleOzoneCPU
executeIntWidth	src/cpu/ozone/simple_params.hh	/^    unsigned executeIntWidth;$/;"	m	class:SimpleParams
executeLoad	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::executeLoad(DynInstPtr &inst)$/;"	f	class:LSQ
executeLoad	src/cpu/o3/lsq_unit.hh	/^    Fault executeLoad(int lq_idx) { panic("Not implemented"); return NoFault; }$/;"	f	class:LSQUnit
executeLoad	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::executeLoad(DynInstPtr &inst)$/;"	f	class:LSQUnit
executeLoad	src/cpu/ozone/lsq_unit_impl.hh	/^OzoneLSQ<Impl>::executeLoad(DynInstPtr &inst)$/;"	f	class:OzoneLSQ
executeLoad	src/cpu/ozone/lsq_unit_impl.hh	/^OzoneLSQ<Impl>::executeLoad(int lq_idx)$/;"	f	class:OzoneLSQ
executeLoad	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::executeLoad(DynInstPtr &inst)$/;"	f	class:OzoneLWLSQ
executeMemAcc	src/cpu/ozone/dyn_inst.hh	/^    Fault executeMemAcc()$/;"	f	class:OzoneDynInst
executeMemoryWidth	src/cpu/ozone/OzoneCPU.py	/^    executeMemoryWidth = Param.Unsigned("Memory execute width")$/;"	v	class:DerivOzoneCPU
executeMemoryWidth	src/cpu/ozone/SimpleOzoneCPU.py	/^    executeMemoryWidth = Param.Unsigned("Memory execute width")$/;"	v	class:SimpleOzoneCPU
executeMemoryWidth	src/cpu/ozone/simple_params.hh	/^    unsigned executeMemoryWidth;$/;"	m	class:SimpleParams
executeStore	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::executeStore(DynInstPtr &inst)$/;"	f	class:LSQ
executeStore	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::executeStore(DynInstPtr &store_inst)$/;"	f	class:LSQUnit
executeStore	src/cpu/ozone/lsq_unit_impl.hh	/^OzoneLSQ<Impl>::executeStore(DynInstPtr &store_inst)$/;"	f	class:OzoneLSQ
executeStore	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::executeStore(DynInstPtr &store_inst)$/;"	f	class:OzoneLWLSQ
executeWidth	src/cpu/ozone/OzoneCPU.py	/^    executeWidth = Param.Unsigned("Execute width")$/;"	v	class:DerivOzoneCPU
executeWidth	src/cpu/ozone/SimpleOzoneCPU.py	/^    executeWidth = Param.Unsigned("Execute width")$/;"	v	class:SimpleOzoneCPU
executeWidth	src/cpu/ozone/simple_params.hh	/^    unsigned executeWidth;$/;"	m	class:SimpleParams
executions	src/cpu/inorder/resources/execution_unit.hh	/^    Stats::Scalar executions;$/;"	m	class:ExecutionUnit
execv	src/kern/tru64/tru64_syscalls.hh	/^        execv = 11,$/;"	e	enum:SystemCalls::__anon102
execve	src/kern/linux/linux_syscalls.hh	/^    execve = 33,$/;"	e	enum:SystemCalls::__anon87
execve	src/kern/tru64/tru64_syscalls.hh	/^        execve = 59,$/;"	e	enum:SystemCalls::__anon102
exist	src/mem/ruby/system/SparseMemory.cc	/^SparseMemory::exist(const Address& address) const$/;"	f	class:SparseMemory
exists	src/base/cp_annotate.hh	/^    static bool exists;$/;"	m	class:CPA
exit	src/arch/isa_parser.py	/^    def exit(self, filename_stack, print_traceback=debug):$/;"	m	class:ISAParserError
exit	src/arch/x86/regs/misc.hh	/^        Bitfield<3> exit;$/;"	m	namespace:X86ISA
exit	src/cpu/testers/traffic_gen/generators.cc	/^TraceGen::exit()$/;"	f	class:TraceGen
exit	src/cpu/testers/traffic_gen/generators.hh	/^    virtual void exit() { };$/;"	f	class:BaseGen
exit	src/cpu/thread_context.hh	/^    virtual int exit() { return 1; };$/;"	f	class:ThreadContext
exit	src/kern/linux/linux_syscalls.hh	/^    exit = 34,$/;"	e	enum:SystemCalls::__anon87
exit	src/kern/tru64/tru64_syscalls.hh	/^        exit = 1,$/;"	e	enum:SystemCalls::__anon102
exitCallbacks	src/sim/core.cc	/^exitCallbacks()$/;"	f
exitFunc	src/sim/syscall_emul.cc	/^exitFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
exitGroupFunc	src/sim/syscall_emul.cc	/^exitGroupFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
exitNowHandler	src/sim/init.cc	/^exitNowHandler(int sigtype)$/;"	f
exitOnError	src/cpu/CheckerCPU.py	/^    exitOnError = Param.Bool(False, "Exit on an error")$/;"	v	class:CheckerCPU
exitOnError	src/cpu/checker/cpu.hh	/^    bool exitOnError;$/;"	m	class:CheckerCPU
exitOnError	src/cpu/ozone/OzoneChecker.py	/^    exitOnError = Param.Bool(False, "Exit on an error")$/;"	v	class:OzoneChecker
exitSimLoop	src/sim/sim_events.cc	/^exitSimLoop(const std::string &message, int exit_code, Tick when, Tick repeat,$/;"	f
exit_group	src/kern/linux/linux_syscalls.hh	/^    exit_group = 35,$/;"	e	enum:SystemCalls::__anon87
exit_message	src/base/misc.hh	/^#define exit_message(/;"	d
exl	src/arch/mips/pra_constants.hh	/^    Bitfield<0>     exl;$/;"	m	namespace:MipsISA
exl	src/arch/mips/pra_constants.hh	/^    Bitfield<1>      exl;$/;"	m	namespace:MipsISA
expandCpuSymbolsToDict	src/arch/isa_parser.py	/^    def expandCpuSymbolsToDict(self, template):$/;"	m	class:ISAParser
expandCpuSymbolsToString	src/arch/isa_parser.py	/^    def expandCpuSymbolsToString(self, template):$/;"	m	class:ISAParser
expandDown	src/arch/x86/regs/misc.hh	/^        Bitfield<14> expandDown;$/;"	m	namespace:X86ISA
expanduser	src/python/m5/util/jobfile.py	/^    from os.path import expanduser, isfile, join as joinpath$/;"	i
expansionROM	src/dev/pcireg.h	/^        uint32_t expansionROM;$/;"	m	struct:PCIConfig::__anon80
expectICW4	src/dev/x86/i8259.hh	/^    bool expectICW4;$/;"	m	class:X86ISA::I8259
export_method_cxx_predecls	src/cpu/kvm/BaseKvmCPU.py	/^    def export_method_cxx_predecls(cls, code):$/;"	m	class:BaseKvmCPU
export_method_cxx_predecls	src/python/m5/SimObject.py	/^    def export_method_cxx_predecls(cls, code):$/;"	m	class:MetaSimObject
export_method_cxx_predecls	src/sim/System.py	/^    def export_method_cxx_predecls(cls, code):$/;"	m	class:System
export_method_swig_predecls	src/python/m5/SimObject.py	/^    def export_method_swig_predecls(cls, code):$/;"	m	class:MetaSimObject
export_method_swig_predecls	src/python/m5/SimObject.py	/^    def export_method_swig_predecls(cls, code):$/;"	m	class:SimObject
export_methods	src/cpu/BaseCPU.py	/^    def export_methods(cls, code):$/;"	m	class:BaseCPU
export_methods	src/cpu/kvm/BaseKvmCPU.py	/^    def export_methods(cls, code):$/;"	m	class:BaseKvmCPU
export_methods	src/cpu/kvm/X86KvmCPU.py	/^    def export_methods(cls, code):$/;"	m	class:X86KvmCPU
export_methods	src/python/m5/SimObject.py	/^    def export_methods(cls, code):$/;"	f
export_methods	src/python/m5/SimObject.py	/^    def export_methods(cls, code):$/;"	m	class:MetaSimObject
export_methods	src/sim/Process.py	/^    def export_methods(cls, code):$/;"	m	class:Process
export_methods	src/sim/System.py	/^    def export_methods(cls, code):$/;"	m	class:System
exportfs	src/kern/tru64/tru64_syscalls.hh	/^        exportfs = 169,$/;"	e	enum:SystemCalls::__anon102
ext	src/arch/arm/miscregs.hh	/^        Bitfield<12> ext;$/;"	m	namespace:ArmISA
ext	src/arch/x86/insts/micromediaop.hh	/^        const uint8_t ext;$/;"	m	class:X86ISA::MediaOpBase
ext	src/arch/x86/insts/microregop.hh	/^        const uint16_t ext;$/;"	m	class:X86ISA::RegOpBase
extEntries	src/arch/x86/bios/intelmp.hh	/^    std::vector<ExtConfigEntry *> extEntries;$/;"	m	class:X86ISA::IntelMP::ConfigTable
extIntPic	src/dev/x86/i82094aa.hh	/^    I8259 * extIntPic;$/;"	m	class:X86ISA::I82094AA
extIntVector	src/arch/x86/interrupts.hh	/^    uint8_t extIntVector;$/;"	m	class:X86ISA::Interrupts
extNil	src/base/loader/coff_sym.h	/^#define extNil /;"	d
ext_arg	src/kern/tru64/mbuf.hh	/^    Addr        ext_arg;        \/\/ 0x18$/;"	m	struct:tru64::m_ext
ext_buf	src/kern/tru64/mbuf.hh	/^    Addr        ext_buf;        \/\/ 0x00$/;"	m	struct:tru64::m_ext
ext_data	src/base/inet.hh	/^    } ext_data;$/;"	m	struct:Net::ip6_opt_hdr	typeref:union:Net::ip6_opt_hdr::__anon40
ext_entries	src/arch/x86/bios/IntelMP.py	/^    ext_entries = VectorParam.X86IntelMPExtConfigEntry([],$/;"	v	class:X86IntelMPConfigTable
ext_free	src/kern/tru64/mbuf.hh	/^    Addr        ext_free;       \/\/ 0x08$/;"	m	struct:tru64::m_ext
ext_inst	src/arch/alpha/decoder.hh	/^    ExtMachInst ext_inst;$/;"	m	class:AlphaISA::Decoder
ext_len	src/base/inet.hh	/^    uint8_t ext_len;$/;"	m	struct:Net::ip6_opt_hdr
ext_links	src/mem/ruby/network/Network.py	/^    ext_links = VectorParam.BasicExtLink("Links to external nodes")$/;"	v	class:RubyNetwork
ext_node	src/mem/ruby/network/BasicLink.py	/^    ext_node = Param.RubyController("External node")$/;"	v	class:BasicExtLink
ext_nxt	src/base/inet.hh	/^    uint8_t ext_nxt;$/;"	m	struct:Net::ip6_opt_hdr
ext_pad0	src/kern/tru64/mbuf.hh	/^    uint32_t    ext_pad0;       \/\/ 0x14$/;"	m	struct:tru64::m_ext
ext_ref	src/kern/tru64/mbuf.hh	/^    } ext_ref;$/;"	m	struct:tru64::m_ext	typeref:struct:tru64::m_ext::ext_refq
ext_refq	src/kern/tru64/mbuf.hh	/^    struct      ext_refq {$/;"	s	struct:tru64::m_ext
ext_size	src/kern/tru64/mbuf.hh	/^    uint32_t    ext_size;       \/\/ 0x10$/;"	m	struct:tru64::m_ext
extend	src/python/m5/util/region.py	/^    def extend(self, *args):$/;"	m	class:Regions
extendMask	src/base/trie.hh	/^    extendMask(Key orig)$/;"	f	class:Trie
extendReg64	src/arch/arm/insts/static_inst.cc	/^ArmStaticInst::extendReg64(uint64_t base, ArmExtendType type,$/;"	f	class:ArmISA::ArmStaticInst
extendType	src/arch/arm/insts/data64.hh	/^    ArmExtendType extendType;$/;"	m	class:ArmISA::DataXERegOp
extend_shortest_path	src/mem/ruby/network/Topology.cc	/^extend_shortest_path(Matrix& current_dist, Matrix& latencies,$/;"	f
extensionLength	src/base/inet.cc	/^Ip6Hdr::extensionLength() const$/;"	f	class:Net::Ip6Hdr
external_int_pic	src/dev/x86/I82094AA.py	/^    external_int_pic = Param.I8259(NULL, "External PIC, if any")$/;"	v	class:I82094AA
extlen	src/base/inet.hh	/^    uint8_t extlen() const { return ext_len; }$/;"	f	struct:Net::Ip6Opt
extraDataValid	src/mem/request.hh	/^    extraDataValid()$/;"	f	class:Request
extraSegments	src/base/loader/elf_object.hh	/^    std::vector<Segment> extraSegments;$/;"	m	class:ElfObject
extractBlkOffset	src/mem/cache/tags/fa_lru.hh	/^    int extractBlkOffset(Addr addr) const$/;"	f	class:FALRU
extractBlkOffset	src/mem/cache/tags/lru.hh	/^    int extractBlkOffset(Addr addr) const$/;"	f	class:LRU
extractConfig	src/mem/dramsim2_wrapper.cc	/^DRAMSim2Wrapper::extractConfig(const std::string& field_name,$/;"	f	class:DRAMSim2Wrapper
extractSet	src/mem/cache/tags/fa_lru.hh	/^    int extractSet(Addr addr) const$/;"	f	class:FALRU
extractSet	src/mem/cache/tags/lru.hh	/^    int extractSet(Addr addr) const$/;"	f	class:LRU
extractTag	src/mem/cache/tags/fa_lru.hh	/^    Addr extractTag(Addr addr) const$/;"	f	class:FALRU
extractTag	src/mem/cache/tags/lru.hh	/^    Addr extractTag(Addr addr) const$/;"	f	class:LRU
extsts	src/dev/ns_gige_reg.h	/^    uint32_t extsts;  \/* extended status field for VLAN and IP info *\/$/;"	m	struct:ns_desc32
extsts	src/dev/ns_gige_reg.h	/^    uint32_t extsts;  \/* extended status field for VLAN and IP info *\/$/;"	m	struct:ns_desc64
extstsEnable	src/dev/ns_gige.hh	/^    bool extstsEnable;$/;"	m	class:NSGigE
ezf	src/arch/x86/regs/misc.hh	/^        Bitfield<5> ezf;$/;"	m	namespace:X86ISA
f	src/arch/arm/miscregs.hh	/^        Bitfield<0>      f;$/;"	m	namespace:ArmISA
f	src/arch/arm/miscregs.hh	/^        Bitfield<6> f;$/;"	m	namespace:ArmISA
f	src/base/loader/exec_ecoff.h	/^        struct ecoff_filehdr f;$/;"	m	struct:ecoff_exechdr	typeref:struct:ecoff_exechdr::ecoff_filehdr
f	src/cpu/inorder/cpu.hh	/^        FloatReg f[ThePipeline::MaxThreads][TheISA::NumFloatRegs];$/;"	m	union:InOrderCPU::__anon49
f	src/cpu/inorder/inorder_dyn_inst.hh	/^            FloatReg f;$/;"	m	union:InOrderDynInst::InstValue::__anon51
f	src/cpu/simple_thread.hh	/^        FloatReg f[TheISA::NumFloatRegs];$/;"	m	union:SimpleThread::__anon62
f	src/python/m5/util/code_formatter.py	/^    f = code_formatter()$/;"	v	class:code_formatter
f1	src/unittest/stattest.cc	/^    Formula f1;$/;"	m	struct:StatTest	file:
f2	src/unittest/stattest.cc	/^    Formula f2;$/;"	m	struct:StatTest	file:
f3	src/unittest/stattest.cc	/^    Formula f3;$/;"	m	struct:StatTest	file:
f4	src/unittest/stattest.cc	/^    Formula f4;$/;"	m	struct:StatTest	file:
f5	src/unittest/stattest.cc	/^    Formula f5;$/;"	m	struct:StatTest	file:
f6	src/unittest/stattest.cc	/^    Formula f6;$/;"	m	struct:StatTest	file:
fBigendian	src/base/loader/coff_sym.h	/^    unsigned fBigendian : 1;\/* if set, was compiled on big endian machine *\/$/;"	m	struct:ecoff_fdr
fBitfield	src/base/loader/coff_sym.h	/^    unsigned fBitfield : 1; \/* set if bit width is specified *\/$/;"	m	struct:__anon41
fMerge	src/base/loader/coff_sym.h	/^    unsigned fMerge : 1;        \/* whether this file can be merged *\/$/;"	m	struct:ecoff_fdr
fReadin	src/base/loader/coff_sym.h	/^    unsigned fReadin : 1;       \/* true if it was read in (not just created) *\/$/;"	m	struct:ecoff_fdr
f_bavail	src/kern/tru64/tru64.hh	/^        int32_t     f_bavail;$/;"	m	struct:Tru64::pre_F64_statfs
f_bavail	src/kern/tru64/tru64.hh	/^        int64_t    f_bavail;$/;"	m	struct:Tru64::F64_statfs
f_bfree	src/kern/tru64/tru64.hh	/^        int32_t     f_bfree;$/;"	m	struct:Tru64::pre_F64_statfs
f_bfree	src/kern/tru64/tru64.hh	/^        int64_t    f_bfree;$/;"	m	struct:Tru64::F64_statfs
f_blocks	src/kern/tru64/tru64.hh	/^        int32_t     f_blocks;$/;"	m	struct:Tru64::pre_F64_statfs
f_blocks	src/kern/tru64/tru64.hh	/^        int64_t    f_blocks;$/;"	m	struct:Tru64::F64_statfs
f_bsize	src/kern/tru64/tru64.hh	/^        int32_t     f_bsize;$/;"	m	struct:Tru64::pre_F64_statfs
f_bsize	src/kern/tru64/tru64.hh	/^        int64_t    f_bsize;$/;"	m	struct:Tru64::F64_statfs
f_ffree	src/kern/tru64/tru64.hh	/^        int32_t     f_ffree;$/;"	m	struct:Tru64::pre_F64_statfs
f_ffree	src/kern/tru64/tru64.hh	/^        int64_t    f_ffree;$/;"	m	struct:Tru64::F64_statfs
f_files	src/kern/tru64/tru64.hh	/^        int32_t     f_files;$/;"	m	struct:Tru64::pre_F64_statfs
f_files	src/kern/tru64/tru64.hh	/^        int64_t    f_files;$/;"	m	struct:Tru64::F64_statfs
f_flags	src/base/loader/exec_ecoff.h	/^        coff_ushort f_flags;	\/* flags??? *\/$/;"	m	struct:ecoff_filehdr
f_flags	src/kern/tru64/tru64.hh	/^        int16_t   f_flags;$/;"	m	struct:Tru64::F64_statfs
f_flags	src/kern/tru64/tru64.hh	/^        int16_t   f_flags;$/;"	m	struct:Tru64::pre_F64_statfs
f_flags2	src/kern/tru64/tru64.hh	/^        uint64_t  f_flags2;$/;"	m	struct:Tru64::F64_statfs
f_fsid	src/kern/tru64/tru64.hh	/^        fsid_t  f_fsid;$/;"	m	struct:Tru64::F64_statfs
f_fsid	src/kern/tru64/tru64.hh	/^        fsid_t  f_fsid;$/;"	m	struct:Tru64::pre_F64_statfs
f_fsize	src/kern/tru64/tru64.hh	/^        int32_t     f_fsize;$/;"	m	struct:Tru64::pre_F64_statfs
f_fsize	src/kern/tru64/tru64.hh	/^        int64_t    f_fsize;$/;"	m	struct:Tru64::F64_statfs
f_magic	src/base/loader/exec_ecoff.h	/^        coff_ushort f_magic;	\/* magic number *\/$/;"	m	struct:ecoff_filehdr
f_mntfromname	src/kern/tru64/tru64.hh	/^        char    f_mntfromname[1024];$/;"	m	struct:Tru64::F64_statfs
f_mntfromname	src/kern/tru64/tru64.hh	/^        char    f_mntfromname[90];$/;"	m	struct:Tru64::pre_F64_statfs
f_mntonname	src/kern/tru64/tru64.hh	/^        char    f_mntonname[1024];$/;"	m	struct:Tru64::F64_statfs
f_mntonname	src/kern/tru64/tru64.hh	/^        char    f_mntonname[90];$/;"	m	struct:Tru64::pre_F64_statfs
f_nscns	src/base/loader/exec_ecoff.h	/^        coff_ushort f_nscns;	\/* # of sections *\/$/;"	m	struct:ecoff_filehdr
f_nsyms	src/base/loader/exec_ecoff.h	/^        coff_uint   f_nsyms;	\/* # of symbol table entries *\/$/;"	m	struct:ecoff_filehdr
f_opthdr	src/base/loader/exec_ecoff.h	/^        coff_ushort f_opthdr;	\/* sizeof the optional header *\/$/;"	m	struct:ecoff_filehdr
f_retired1	src/kern/tru64/tru64.hh	/^        int32_t     f_retired1;$/;"	m	struct:Tru64::F64_statfs
f_retired2	src/kern/tru64/tru64.hh	/^        int32_t     f_retired2;$/;"	m	struct:Tru64::F64_statfs
f_retired3	src/kern/tru64/tru64.hh	/^        int32_t     f_retired3;$/;"	m	struct:Tru64::F64_statfs
f_retired4	src/kern/tru64/tru64.hh	/^        int32_t     f_retired4;$/;"	m	struct:Tru64::F64_statfs
f_retired5	src/kern/tru64/tru64.hh	/^        int32_t     f_retired5;$/;"	m	struct:Tru64::F64_statfs
f_retired6	src/kern/tru64/tru64.hh	/^        int32_t     f_retired6;$/;"	m	struct:Tru64::F64_statfs
f_retired7	src/kern/tru64/tru64.hh	/^        int32_t     f_retired7;$/;"	m	struct:Tru64::F64_statfs
f_retired8	src/kern/tru64/tru64.hh	/^        char    f_retired8[90];$/;"	m	struct:Tru64::F64_statfs
f_retired9	src/kern/tru64/tru64.hh	/^        char    f_retired9[90];$/;"	m	struct:Tru64::F64_statfs
f_spare	src/kern/tru64/tru64.hh	/^        int32_t     f_spare[9];$/;"	m	struct:Tru64::F64_statfs
f_spare	src/kern/tru64/tru64.hh	/^        int32_t     f_spare[9];$/;"	m	struct:Tru64::pre_F64_statfs
f_spare2	src/kern/tru64/tru64.hh	/^        int64_t    f_spare2[14];$/;"	m	struct:Tru64::F64_statfs
f_symptr	src/base/loader/exec_ecoff.h	/^        coff_ulong  f_symptr;	\/* file offset of symbol table *\/$/;"	m	struct:ecoff_filehdr
f_timdat	src/base/loader/exec_ecoff.h	/^        coff_uint   f_timdat;	\/* time and date stamp *\/$/;"	m	struct:ecoff_filehdr
f_type	src/kern/tru64/tru64.hh	/^        int16_t   f_type;$/;"	m	struct:Tru64::F64_statfs
f_type	src/kern/tru64/tru64.hh	/^        int16_t   f_type;$/;"	m	struct:Tru64::pre_F64_statfs
fadvise64	src/kern/linux/linux_syscalls.hh	/^    fadvise64 = 36,$/;"	e	enum:SystemCalls::__anon87
fadvise64_64	src/kern/linux/linux_syscalls.hh	/^    fadvise64_64 = 37,$/;"	e	enum:SystemCalls::__anon87
failedTiming	src/mem/bus.cc	/^BaseBus::Layer<SrcType,DstType>::failedTiming(SrcType* src_port,$/;"	f	class:BaseBus::Layer
failures	src/unittest/unittest.cc	/^unsigned failures() { return _failures; }$/;"	f	namespace:UnitTest
fake_OROM	src/dev/alpha/Tsunami.py	/^    fake_OROM = IsaFake(pio_addr=0x800000a0000, pio_size=0x60000)$/;"	v	class:Tsunami
fake_ata0	src/dev/alpha/Tsunami.py	/^    fake_ata0 = IsaFake(pio_addr=0x801fc0001f0)$/;"	v	class:Tsunami
fake_ata1	src/dev/alpha/Tsunami.py	/^    fake_ata1 = IsaFake(pio_addr=0x801fc000170)$/;"	v	class:Tsunami
fake_clk	src/dev/sparc/T1000.py	/^    fake_clk = IsaFake(pio_addr=0x9600000000, pio_size=0x100000000)$/;"	v	class:T1000
fake_com_2	src/dev/x86/Pc.py	/^    fake_com_2 = IsaFake(pio_addr=x86IOAddress(0x2f8), pio_size=8)$/;"	v	class:Pc
fake_com_3	src/dev/x86/Pc.py	/^    fake_com_3 = IsaFake(pio_addr=x86IOAddress(0x3e8), pio_size=8)$/;"	v	class:Pc
fake_com_4	src/dev/x86/Pc.py	/^    fake_com_4 = IsaFake(pio_addr=x86IOAddress(0x2e8), pio_size=8)$/;"	v	class:Pc
fake_floppy	src/dev/x86/Pc.py	/^    fake_floppy = IsaFake(pio_addr=x86IOAddress(0x3f2), pio_size=2)$/;"	v	class:Pc
fake_jbi	src/dev/sparc/T1000.py	/^    fake_jbi = IsaFake(pio_addr=0x8000000000, pio_size=0x100000000)$/;"	v	class:T1000
fake_l2_1	src/dev/sparc/T1000.py	/^    fake_l2_1 = IsaFake(pio_addr=0xA900000000, pio_size=0x8,$/;"	v	class:T1000
fake_l2_2	src/dev/sparc/T1000.py	/^    fake_l2_2 = IsaFake(pio_addr=0xA900000040, pio_size=0x8,$/;"	v	class:T1000
fake_l2_3	src/dev/sparc/T1000.py	/^    fake_l2_3 = IsaFake(pio_addr=0xA900000080, pio_size=0x8,$/;"	v	class:T1000
fake_l2_4	src/dev/sparc/T1000.py	/^    fake_l2_4 = IsaFake(pio_addr=0xA9000000C0, pio_size=0x8,$/;"	v	class:T1000
fake_l2esr_1	src/dev/sparc/T1000.py	/^    fake_l2esr_1 = IsaFake(pio_addr=0xAB00000000, pio_size=0x8,$/;"	v	class:T1000
fake_l2esr_2	src/dev/sparc/T1000.py	/^    fake_l2esr_2 = IsaFake(pio_addr=0xAB00000040, pio_size=0x8,$/;"	v	class:T1000
fake_l2esr_3	src/dev/sparc/T1000.py	/^    fake_l2esr_3 = IsaFake(pio_addr=0xAB00000080, pio_size=0x8,$/;"	v	class:T1000
fake_l2esr_4	src/dev/sparc/T1000.py	/^    fake_l2esr_4 = IsaFake(pio_addr=0xAB000000C0, pio_size=0x8,$/;"	v	class:T1000
fake_mem	src/dev/Device.py	/^    fake_mem = Param.Bool(False,$/;"	v	class:IsaFake
fake_mem	src/dev/arm/RealView.py	/^                            fake_mem=True)$/;"	v	class:RealViewEB
fake_mem	src/dev/arm/RealView.py	/^                            fake_mem=True)$/;"	v	class:RealViewPBX
fake_membnks	src/dev/sparc/T1000.py	/^    fake_membnks = IsaFake(pio_addr=0x9700000000, pio_size=16384,$/;"	v	class:T1000
fake_pnp_addr	src/dev/alpha/Tsunami.py	/^    fake_pnp_addr = IsaFake(pio_addr=0x801fc000279)$/;"	v	class:Tsunami
fake_pnp_read0	src/dev/alpha/Tsunami.py	/^    fake_pnp_read0 = IsaFake(pio_addr=0x801fc000203)$/;"	v	class:Tsunami
fake_pnp_read1	src/dev/alpha/Tsunami.py	/^    fake_pnp_read1 = IsaFake(pio_addr=0x801fc000243)$/;"	v	class:Tsunami
fake_pnp_read2	src/dev/alpha/Tsunami.py	/^    fake_pnp_read2 = IsaFake(pio_addr=0x801fc000283)$/;"	v	class:Tsunami
fake_pnp_read3	src/dev/alpha/Tsunami.py	/^    fake_pnp_read3 = IsaFake(pio_addr=0x801fc0002c3)$/;"	v	class:Tsunami
fake_pnp_read4	src/dev/alpha/Tsunami.py	/^    fake_pnp_read4 = IsaFake(pio_addr=0x801fc000303)$/;"	v	class:Tsunami
fake_pnp_read5	src/dev/alpha/Tsunami.py	/^    fake_pnp_read5 = IsaFake(pio_addr=0x801fc000343)$/;"	v	class:Tsunami
fake_pnp_read6	src/dev/alpha/Tsunami.py	/^    fake_pnp_read6 = IsaFake(pio_addr=0x801fc000383)$/;"	v	class:Tsunami
fake_pnp_read7	src/dev/alpha/Tsunami.py	/^    fake_pnp_read7 = IsaFake(pio_addr=0x801fc0003c3)$/;"	v	class:Tsunami
fake_pnp_write	src/dev/alpha/Tsunami.py	/^    fake_pnp_write = IsaFake(pio_addr=0x801fc000a79)$/;"	v	class:Tsunami
fake_ppc	src/dev/alpha/Tsunami.py	/^    fake_ppc = IsaFake(pio_addr=0x801fc0003bb)$/;"	v	class:Tsunami
fake_sm_chip	src/dev/alpha/Tsunami.py	/^    fake_sm_chip = IsaFake(pio_addr=0x801fc000370)$/;"	v	class:Tsunami
fake_ssi	src/dev/sparc/T1000.py	/^    fake_ssi = IsaFake(pio_addr=0xff00000000, pio_size=0x10000000)$/;"	v	class:T1000
fake_uart1	src/dev/alpha/Tsunami.py	/^    fake_uart1 = IsaFake(pio_addr=0x801fc0002f8)$/;"	v	class:Tsunami
fake_uart2	src/dev/alpha/Tsunami.py	/^    fake_uart2 = IsaFake(pio_addr=0x801fc0003e8)$/;"	v	class:Tsunami
fake_uart3	src/dev/alpha/Tsunami.py	/^    fake_uart3 = IsaFake(pio_addr=0x801fc0002e8)$/;"	v	class:Tsunami
fake_uart4	src/dev/alpha/Tsunami.py	/^    fake_uart4 = IsaFake(pio_addr=0x801fc0003f0)$/;"	v	class:Tsunami
family	src/arch/x86/bios/IntelMP.py	/^    family = Param.UInt8(0, 'Processor family')$/;"	v	class:X86IntelMPProcessor
fastWrites	src/mem/cache/base.hh	/^    Stats::Scalar fastWrites;$/;"	m	class:BaseCache
fastmem	src/cpu/simple/AtomicSimpleCPU.py	/^    fastmem = Param.Bool(False, "Access memory directly")$/;"	v	class:AtomicSimpleCPU
fastmem	src/cpu/simple/atomic.hh	/^    bool fastmem;$/;"	m	class:AtomicSimpleCPU
fatal	src/base/misc.hh	/^#define fatal(/;"	d
fatal	src/python/m5/main.py	/^    from util import fatal$/;"	i
fatal	src/python/m5/simulate.py	/^from util import fatal$/;"	i
fatal	src/python/m5/stats/__init__.py	/^from m5.util import attrdict, fatal$/;"	i
fatal	src/python/m5/util/__init__.py	/^def fatal(fmt, *args):$/;"	f
fatal	src/sim/Root.py	/^from m5.util import fatal$/;"	i
fatal_if	src/base/misc.hh	/^#define fatal_if(/;"	d
fault	src/arch/arm/stage2_lookup.hh	/^    Fault                   fault;$/;"	m	class:ArmISA::Stage2LookUp
fault	src/arch/arm/stage2_mmu.hh	/^        Fault fault;$/;"	m	class:ArmISA::Stage2MMU::Stage2Translation
fault	src/arch/arm/table_walker.hh	/^        Fault fault;$/;"	m	class:ArmISA::TableWalker::WalkerState
fault	src/arch/mips/isa.hh	/^            Fault fault;$/;"	m	class:MipsISA::ISA::CP0Event
fault	src/cpu/base_dyn_inst.hh	/^    Fault fault;$/;"	m	class:BaseDynInst
fault	src/cpu/inorder/cpu.hh	/^        Fault fault;$/;"	m	class:InOrderCPU::CPUEvent
fault	src/cpu/inorder/inorder_dyn_inst.hh	/^    Fault fault;$/;"	m	class:InOrderDynInst
fault	src/cpu/o3/fetch.hh	/^        Fault fault;$/;"	m	class:DefaultFetch::FinishTranslationEvent
faultAddr	src/arch/arm/faults.hh	/^    Addr faultAddr;$/;"	m	class:ArmISA::AbortFault
faultFromFetch	src/cpu/ozone/back_end.hh	/^    Fault faultFromFetch;$/;"	m	class:BackEnd
faultFromFetch	src/cpu/ozone/inorder_back_end.hh	/^    Fault faultFromFetch;$/;"	m	class:InorderBackEnd
faultName	src/arch/x86/faults.hh	/^        const char * faultName;$/;"	m	class:X86ISA::X86FaultBase
faultPC	src/arch/arm/faults.hh	/^    Addr faultPC;$/;"	m	class:ArmISA::PCAlignmentFault
faultSked	src/cpu/inorder/cpu.hh	/^    ThePipeline::RSkedPtr faultSked;$/;"	m	class:InOrderCPU
fault_model	src/mem/ruby/network/garnet/BaseGarnetNetwork.hh	/^    FaultModel* fault_model;$/;"	m	class:BaseGarnetNetwork
fault_model	src/mem/ruby/network/garnet/BaseGarnetNetwork.py	/^    fault_model = Param.FaultModel(NULL, "network fault model");$/;"	v	class:BaseGarnetNetwork
fault_prob	src/mem/ruby/network/fault_model/FaultModel.cc	/^FaultModel::fault_prob(int routerID, $/;"	f	class:FaultModel
fault_type	src/mem/ruby/network/fault_model/FaultModel.hh	/^        float fault_type[number_of_fault_types];$/;"	m	struct:FaultModel::system_conf
fault_type	src/mem/ruby/network/fault_model/FaultModel.hh	/^    enum fault_type $/;"	g	class:FaultModel
fault_type_to_string	src/mem/ruby/network/fault_model/FaultModel.cc	/^FaultModel::fault_type_to_string(int ft)$/;"	f	class:FaultModel
fault_vector	src/mem/ruby/network/fault_model/FaultModel.cc	/^FaultModel::fault_vector(int routerID, $/;"	f	class:FaultModel
faults	src/cpu/translation.hh	/^    Fault faults[2];$/;"	m	class:WholeTranslationState
fb	src/arch/arm/miscregs.hh	/^        Bitfield<9>      fb;$/;"	m	namespace:ArmISA
fb	src/dev/alpha/Tsunami.py	/^    fb = BadDevice(pio_addr=0x801fc0003d0, devicename='FrameBuffer')$/;"	v	class:Tsunami
fbHeight	src/base/vnc/vncserver.hh	/^        uint16_t fbHeight;$/;"	m	struct:VncServer::ServerInitMsg
fbPtr	src/base/vnc/vncinput.hh	/^    uint8_t* fbPtr;$/;"	m	class:VncInput
fbWidth	src/base/vnc/vncserver.hh	/^        uint16_t fbWidth;$/;"	m	struct:VncServer::ServerInitMsg
fb_base	src/dev/arm/hdlcd.hh	/^    uint32_t fb_base;               \/**< Frame buffer base address register *\/$/;"	m	class:HDLcd
fb_line_count	src/dev/arm/hdlcd.hh	/^        Bitfield<11,0>  fb_line_count;$/;"	m	class:HDLcd
fb_line_count	src/dev/arm/hdlcd.hh	/^    FbLineCountReg fb_line_count;   \/**< Frame buffer Line count register *\/$/;"	m	class:HDLcd
fb_line_length	src/dev/arm/hdlcd.hh	/^    uint32_t fb_line_length;        \/**< Frame buffer Line length register *\/$/;"	m	class:HDLcd
fb_line_pitch	src/dev/arm/hdlcd.hh	/^    uint32_t fb_line_pitch;         \/**< Frame buffer Line pitch register *\/$/;"	m	class:HDLcd
fbrd	src/dev/arm/pl011.hh	/^    uint16_t fbrd;$/;"	m	class:Pl011
fchdir	src/kern/linux/linux_syscalls.hh	/^    fchdir = 38,$/;"	e	enum:SystemCalls::__anon87
fchdir	src/kern/tru64/tru64_syscalls.hh	/^        fchdir = 13,$/;"	e	enum:SystemCalls::__anon102
fchflags	src/kern/tru64/tru64_syscalls.hh	/^        fchflags = 35,$/;"	e	enum:SystemCalls::__anon102
fchmod	src/kern/linux/linux_syscalls.hh	/^    fchmod = 39,$/;"	e	enum:SystemCalls::__anon87
fchmod	src/kern/tru64/tru64_syscalls.hh	/^        fchmod = 124,$/;"	e	enum:SystemCalls::__anon102
fchmodFunc	src/sim/syscall_emul.hh	/^fchmodFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
fchown	src/kern/linux/linux_syscalls.hh	/^    fchown = 40,$/;"	e	enum:SystemCalls::__anon87
fchown	src/kern/tru64/tru64_syscalls.hh	/^        fchown = 123,$/;"	e	enum:SystemCalls::__anon102
fchown32	src/kern/linux/linux_syscalls.hh	/^    fchown32 = 41,$/;"	e	enum:SystemCalls::__anon87
fchownFunc	src/sim/syscall_emul.cc	/^fchownFunc(SyscallDesc *desc, int num, LiveProcess *process, ThreadContext *tc)$/;"	f
fcntl	src/cpu/kvm/perfevent.cc	/^PerfKvmCounter::fcntl(int cmd, long p1)$/;"	f	class:PerfKvmCounter
fcntl	src/cpu/kvm/perfevent.hh	/^    int fcntl(int cmd, void *p1) { return fcntl(cmd, (long)p1); }$/;"	f	class:PerfKvmCounter
fcntl	src/kern/linux/linux_syscalls.hh	/^    fcntl = 42,$/;"	e	enum:SystemCalls::__anon87
fcntl	src/kern/tru64/tru64_syscalls.hh	/^        fcntl = 92,$/;"	e	enum:SystemCalls::__anon102
fcntl64	src/kern/linux/linux_syscalls.hh	/^    fcntl64 = 43,$/;"	e	enum:SystemCalls::__anon87
fcntl64Func	src/sim/syscall_emul.cc	/^fcntl64Func(SyscallDesc *desc, int num, LiveProcess *process,$/;"	f
fcntlFunc	src/sim/syscall_emul.cc	/^fcntlFunc(SyscallDesc *desc, int num, LiveProcess *process,$/;"	f
fcrth	src/dev/i8254xGBe_defs.hh	/^    FCRTH fcrth;$/;"	m	struct:iGbReg::Regs
fcrtl	src/dev/i8254xGBe_defs.hh	/^    FCRTL fcrtl;$/;"	m	struct:iGbReg::Regs
fcttv	src/dev/i8254xGBe_defs.hh	/^    FCTTV fcttv;$/;"	m	struct:iGbReg::Regs
fcw	src/cpu/kvm/x86_cpu.cc	/^    uint16_t fcw;$/;"	m	struct:FXSave	file:
fd	src/arch/arm/types.hh	/^        Bitfield<14, 12> fd;$/;"	m	namespace:ArmISA
fd	src/base/remote_gdb.hh	/^    int fd;$/;"	m	class:BaseRemoteGDB
fd	src/base/socket.hh	/^    int fd;$/;"	m	class:ListenSocket
fd	src/cpu/kvm/perfevent.hh	/^    int fd;$/;"	m	class:PerfKvmCounter
fd	src/cpu/nativetrace.hh	/^    int fd;$/;"	m	class:Trace::NativeTrace
fd	src/sim/process.hh	/^        int fd;$/;"	m	class:Process::FdMap
fdNil	src/base/loader/coff_sym.h	/^#define fdNil /;"	d
fd_map	src/sim/process.hh	/^    FdMap fd_map[MAX_FD+1];$/;"	m	class:Process
fdatasync	src/kern/linux/linux_syscalls.hh	/^    fdatasync = 44,$/;"	e	enum:SystemCalls::__anon87
fdatasync	src/kern/tru64/tru64_syscalls.hh	/^        fdatasync = 261,$/;"	e	enum:SystemCalls::__anon102
fe	src/arch/power/miscregs.hh	/^            Bitfield<13> fe;$/;"	m	namespace:PowerISA
fe	src/arch/x86/regs/misc.hh	/^        Bitfield<10> fe; \/\/ Fixed range enable$/;"	m	namespace:X86ISA
fe	src/cpu/ozone/front_end.hh	/^        FrontEnd<Impl> *fe;$/;"	m	class:FrontEnd::IcachePort
feBuffer	src/cpu/ozone/front_end.hh	/^    InstBuff feBuffer;$/;"	m	class:FrontEnd
featureFlags	src/arch/x86/bios/intelmp.hh	/^    uint32_t featureFlags;$/;"	m	class:X86ISA::IntelMP::Processor
feature_flags	src/arch/x86/bios/IntelMP.py	/^    feature_flags = Param.UInt32(0, 'flags returned by the CPUID instruction')$/;"	v	class:X86IntelMPProcessor
fed	src/dev/pcireg.h	/^        Bitfield<2>     fed;$/;"	m	struct:PXCAP
feim	src/dev/arm/pl011.hh	/^        Bitfield<7> feim;$/;"	m	class:Pl011
femto	src/python/m5/util/convert.py	/^femto = 1.0e-15$/;"	v
fere	src/dev/pcireg.h	/^        Bitfield<2>     fere;$/;"	m	struct:PXCAP
fetch	src/arch/x86/faults.hh	/^            Bitfield<4> fetch;$/;"	m	class:X86ISA::PageFault
fetch	src/cpu/o3/cpu.hh	/^        DefaultFetch<Impl> *fetch;$/;"	m	class:FullO3CPU::IcachePort
fetch	src/cpu/o3/cpu.hh	/^    typename CPUPolicy::Fetch fetch;$/;"	m	class:FullO3CPU
fetch	src/cpu/o3/fetch.hh	/^        DefaultFetch<Impl> *fetch;$/;"	m	class:DefaultFetch::FetchTranslation
fetch	src/cpu/o3/fetch.hh	/^        DefaultFetch<Impl> *fetch;$/;"	m	class:DefaultFetch::FinishTranslationEvent
fetch	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::fetch(bool &status_change)$/;"	f	class:DefaultFetch
fetch	src/cpu/simple/timing.cc	/^TimingSimpleCPU::fetch()$/;"	f	class:TimingSimpleCPU
fetchAddrComplete	src/dev/copy_engine.cc	/^CopyEngine::CopyEngineChannel::fetchAddrComplete()$/;"	f	class:CopyEngine::CopyEngineChannel
fetchAddress	src/dev/copy_engine.hh	/^        Addr fetchAddress;$/;"	m	class:CopyEngine::CopyEngineChannel
fetchAfterWb	src/dev/i8254xGBe.hh	/^        virtual void fetchAfterWb() {$/;"	f	class:IGbE::RxDescCache
fetchAfterWb	src/dev/i8254xGBe.hh	/^        virtual void fetchAfterWb() {$/;"	f	class:IGbE::TxDescCache
fetchBlockedCycles	src/cpu/o3/fetch.hh	/^    Stats::Scalar fetchBlockedCycles;$/;"	m	class:DefaultFetch
fetchBlockedCycles	src/cpu/ozone/front_end.hh	/^    Stats::Scalar fetchBlockedCycles;$/;"	m	class:FrontEnd
fetchBuf	src/dev/i8254xGBe.hh	/^        T *fetchBuf;$/;"	m	class:IGbE::DescCache
fetchBuffSize	src/cpu/inorder/InOrderCPU.py	/^    fetchBuffSize = Param.Unsigned(4, "Fetch Buffer Size (Number of Cache Blocks Stored)")$/;"	v	class:InOrderCPU
fetchBuffSize	src/cpu/inorder/resources/fetch_unit.hh	/^    int fetchBuffSize;$/;"	m	class:FetchUnit
fetchBuffer	src/cpu/inorder/resources/fetch_unit.hh	/^    std::list<FetchBlock*> fetchBuffer;$/;"	m	class:FetchUnit
fetchBuffer	src/cpu/o3/fetch.hh	/^    uint8_t *fetchBuffer[Impl::MaxThreads];$/;"	m	class:DefaultFetch
fetchBufferAlignPC	src/cpu/o3/fetch.hh	/^    Addr fetchBufferAlignPC(Addr addr)$/;"	f	class:DefaultFetch
fetchBufferFill	src/cpu/inorder/resources/cache_unit.hh	/^    bool fetchBufferFill;$/;"	m	class:CacheRequest
fetchBufferMask	src/cpu/o3/fetch.hh	/^    Addr fetchBufferMask;$/;"	m	class:DefaultFetch
fetchBufferPC	src/cpu/o3/fetch.hh	/^    Addr fetchBufferPC[Impl::MaxThreads];$/;"	m	class:DefaultFetch
fetchBufferSize	src/cpu/o3/O3CPU.py	/^    fetchBufferSize = Param.Unsigned(64, "Fetch buffer size in bytes")$/;"	v	class:DerivO3CPU
fetchBufferSize	src/cpu/o3/fetch.hh	/^    unsigned fetchBufferSize;$/;"	m	class:DefaultFetch
fetchBufferValid	src/cpu/o3/fetch.hh	/^    bool fetchBufferValid[Impl::MaxThreads];$/;"	m	class:DefaultFetch
fetchCacheLine	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::fetchCacheLine(Addr vaddr, ThreadID tid, Addr pc)$/;"	f	class:DefaultFetch
fetchCacheLine	src/cpu/ozone/front_end_impl.hh	/^FrontEnd<Impl>::fetchCacheLine()$/;"	f	class:FrontEnd
fetchCacheLineNextCycle	src/cpu/ozone/front_end.hh	/^    bool fetchCacheLineNextCycle;$/;"	m	class:FrontEnd
fetchChunk	src/arch/x86/decoder.hh	/^    MachInst fetchChunk;$/;"	m	class:X86ISA::Decoder
fetchCompDelay	src/dev/i8254xGBe.hh	/^    Tick fetchCompDelay, wbCompDelay;$/;"	m	class:IGbE
fetchComplete	src/dev/i8254xGBe.cc	/^IGbE::DescCache<T>::fetchComplete()$/;"	f	class:IGbE::DescCache
fetchCompleteEvent	src/dev/copy_engine.hh	/^            fetchCompleteEvent;$/;"	m	class:CopyEngine::CopyEngineChannel
fetchCycles	src/cpu/o3/fetch.hh	/^    Stats::Scalar fetchCycles;$/;"	m	class:DefaultFetch
fetchCycles	src/cpu/ozone/front_end.hh	/^    Stats::Scalar fetchCycles;$/;"	m	class:FrontEnd
fetchDelay	src/dev/i8254xGBe.hh	/^    Tick fetchDelay, wbDelay;$/;"	m	class:IGbE
fetchDelayEvent	src/dev/i8254xGBe.hh	/^        EventWrapper<DescCache, &DescCache::fetchDescriptors1> fetchDelayEvent;$/;"	m	class:IGbE::DescCache
fetchDescComplete	src/dev/copy_engine.cc	/^CopyEngine::CopyEngineChannel::fetchDescComplete()$/;"	f	class:CopyEngine::CopyEngineChannel
fetchDescriptor	src/arch/arm/table_walker.cc	/^TableWalker::fetchDescriptor(Addr descAddr, uint8_t *data, int numBytes,$/;"	f	class:TableWalker
fetchDescriptor	src/dev/copy_engine.cc	/^CopyEngine::CopyEngineChannel::fetchDescriptor(Addr address)$/;"	f	class:CopyEngine::CopyEngineChannel
fetchDescriptors	src/dev/i8254xGBe.cc	/^IGbE::DescCache<T>::fetchDescriptors()$/;"	f	class:IGbE::DescCache
fetchDescriptors1	src/dev/i8254xGBe.cc	/^IGbE::DescCache<T>::fetchDescriptors1()$/;"	f	class:IGbE::DescCache
fetchEvent	src/cpu/simple/timing.hh	/^    FetchEvent fetchEvent;$/;"	m	class:TimingSimpleCPU
fetchEvent	src/dev/i8254xGBe.hh	/^        EventWrapper<DescCache, &DescCache::fetchComplete> fetchEvent;$/;"	m	class:IGbE::DescCache
fetchFault	src/cpu/o3/comm.hh	/^    Fault fetchFault;$/;"	m	struct:DefaultFetchDefaultDecode
fetchFault	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::fetchFault(Fault &fault)$/;"	f	class:BackEnd
fetchFault	src/cpu/ozone/front_end.hh	/^    Fault fetchFault;$/;"	m	class:FrontEnd
fetchFault	src/cpu/ozone/inorder_back_end_impl.hh	/^InorderBackEnd<Impl>::fetchFault(Fault &fault)$/;"	f	class:InorderBackEnd
fetchFaultSN	src/cpu/o3/comm.hh	/^    InstSeqNum fetchFaultSN;$/;"	m	struct:DefaultFetchDefaultDecode
fetchIcacheSquashes	src/cpu/o3/fetch.hh	/^    Stats::Scalar fetchIcacheSquashes;$/;"	m	class:DefaultFetch
fetchIcacheSquashes	src/cpu/ozone/front_end.hh	/^    Stats::Scalar fetchIcacheSquashes;$/;"	m	class:FrontEnd
fetchIcacheWaitRetryStallCycles	src/cpu/o3/fetch.hh	/^    Stats::Scalar fetchIcacheWaitRetryStallCycles;$/;"	m	class:DefaultFetch
fetchIdleCycles	src/cpu/o3/fetch.hh	/^    Stats::Scalar fetchIdleCycles;$/;"	m	class:DefaultFetch
fetchIdleCycles	src/cpu/ozone/front_end.hh	/^    Stats::Scalar fetchIdleCycles;$/;"	m	class:FrontEnd
fetchInstsValid	src/cpu/o3/decode_impl.hh	/^DefaultDecode<Impl>::fetchInstsValid()$/;"	f	class:DefaultDecode
fetchMemReq	src/cpu/inorder/inorder_dyn_inst.hh	/^    RequestPtr fetchMemReq;$/;"	m	class:InOrderDynInst
fetchMicroop	src/arch/arm/insts/mem.hh	/^    fetchMicroop(MicroPC microPC) const$/;"	f	class:ArmISA::Memory
fetchMicroop	src/arch/arm/insts/mem.hh	/^    fetchMicroop(MicroPC microPC) const$/;"	f	class:ArmISA::RfeOp
fetchMicroop	src/arch/arm/insts/mem.hh	/^    fetchMicroop(MicroPC microPC) const$/;"	f	class:ArmISA::SrsOp
fetchMicroop	src/arch/arm/insts/mem64.hh	/^    fetchMicroop(MicroPC microPC) const$/;"	f	class:ArmISA::Memory64
fetchMicroop	src/arch/arm/insts/pred_inst.hh	/^    fetchMicroop(MicroPC microPC) const$/;"	f	class:ArmISA::PredMacroOp
fetchMicroop	src/arch/x86/insts/macroop.hh	/^    fetchMicroop(MicroPC microPC) const$/;"	f	class:X86ISA::MacroopBase
fetchMicroop	src/arch/x86/microcode_rom.hh	/^        fetchMicroop(MicroPC microPC, StaticInstPtr curMacroop)$/;"	f	class:X86ISAInst::MicrocodeRom
fetchMicroop	src/cpu/static_inst.cc	/^StaticInst::fetchMicroop(MicroPC upc) const$/;"	f	class:StaticInst
fetchMicroop	src/sim/microcode_rom.hh	/^    fetchMicroop(MicroPC micropc, StaticInstPtr curMacroop)$/;"	f	class:MicrocodeRom
fetchMiscStallCycles	src/cpu/o3/fetch.hh	/^    Stats::Scalar fetchMiscStallCycles;$/;"	m	class:DefaultFetch
fetchNextAddr	src/dev/copy_engine.cc	/^CopyEngine::CopyEngineChannel::fetchNextAddr(Addr address)$/;"	f	class:CopyEngine::CopyEngineChannel
fetchNisnDist	src/cpu/o3/fetch.hh	/^    Stats::Distribution fetchNisnDist;$/;"	m	class:DefaultFetch
fetchNisnDist	src/cpu/ozone/front_end.hh	/^    Stats::Distribution fetchNisnDist;$/;"	m	class:FrontEnd
fetchNoActiveThreadStallCycles	src/cpu/o3/fetch.hh	/^    Stats::Scalar fetchNoActiveThreadStallCycles;$/;"	m	class:DefaultFetch
fetchOffset	src/cpu/o3/fetch.hh	/^    Addr fetchOffset[Impl::MaxThreads];$/;"	m	class:DefaultFetch
fetchOffset	src/cpu/simple/base.hh	/^    Addr fetchOffset;$/;"	m	class:BaseSimpleCPU
fetchPendingDrainCycles	src/cpu/o3/fetch.hh	/^    Stats::Scalar fetchPendingDrainCycles;$/;"	m	class:DefaultFetch
fetchPendingQuiesceStallCycles	src/cpu/o3/fetch.hh	/^    Stats::Scalar fetchPendingQuiesceStallCycles;$/;"	m	class:DefaultFetch
fetchPendingTrapStallCycles	src/cpu/o3/fetch.hh	/^    Stats::Scalar fetchPendingTrapStallCycles;$/;"	m	class:DefaultFetch
fetchPolicy	src/cpu/inorder/first_stage.hh	/^    FetchPriority fetchPolicy;$/;"	m	class:FirstStage
fetchPolicy	src/cpu/o3/fetch.hh	/^    FetchPriority fetchPolicy;$/;"	m	class:DefaultFetch
fetchPriorityList	src/cpu/inorder/cpu.hh	/^    std::list<ThreadID> fetchPriorityList;$/;"	m	class:InOrderCPU
fetchPriorityList	src/cpu/inorder/first_stage.hh	/^    std::list<ThreadID> *fetchPriorityList;$/;"	m	class:FirstStage
fetchQueue	src/cpu/o3/commit.hh	/^    TimeBuffer<FetchStruct> *fetchQueue;$/;"	m	class:DefaultCommit
fetchQueue	src/cpu/o3/cpu.hh	/^    TimeBuffer<FetchStruct> fetchQueue;$/;"	m	class:FullO3CPU
fetchQueue	src/cpu/o3/decode.hh	/^    TimeBuffer<FetchStruct> *fetchQueue;$/;"	m	class:DefaultDecode
fetchQueue	src/cpu/o3/fetch.hh	/^    TimeBuffer<FetchStruct> *fetchQueue;$/;"	m	class:DefaultFetch
fetchRate	src/cpu/o3/fetch.hh	/^    Stats::Formula fetchRate;$/;"	m	class:DefaultFetch
fetchRate	src/cpu/ozone/front_end.hh	/^    Stats::Formula fetchRate;$/;"	m	class:FrontEnd
fetchRedirect	src/cpu/o3/iew.hh	/^    bool fetchRedirect[Impl::MaxThreads];$/;"	m	class:DefaultIEW
fetchRedirect	src/cpu/ozone/back_end.hh	/^    bool fetchRedirect[Impl::MaxThreads];$/;"	m	class:BackEnd
fetchSquashCycles	src/cpu/o3/fetch.hh	/^    Stats::Scalar fetchSquashCycles;$/;"	m	class:DefaultFetch
fetchSquashCycles	src/cpu/ozone/front_end.hh	/^    Stats::Scalar fetchSquashCycles;$/;"	m	class:FrontEnd
fetchStatus	src/cpu/o3/fetch.hh	/^    ThreadStatus fetchStatus[Impl::MaxThreads];$/;"	m	class:DefaultFetch
fetchTick	src/cpu/o3/dyn_inst.hh	/^    Tick fetchTick;	     \/\/ instruction fetch is completed.$/;"	m	class:BaseO3DynInst
fetchTlbCycles	src/cpu/o3/fetch.hh	/^    Stats::Scalar fetchTlbCycles;$/;"	m	class:DefaultFetch
fetchTlbSquashes	src/cpu/o3/fetch.hh	/^    Stats::Scalar fetchTlbSquashes;$/;"	m	class:DefaultFetch
fetchToCommitDelay	src/cpu/o3/commit.hh	/^    Cycles fetchToCommitDelay;$/;"	m	class:DefaultCommit
fetchToDecodeDelay	src/cpu/o3/O3CPU.py	/^    fetchToDecodeDelay = Param.Cycles(1, "Fetch to decode delay")$/;"	v	class:DerivO3CPU
fetchToDecodeDelay	src/cpu/o3/decode.hh	/^    Cycles fetchToDecodeDelay;$/;"	m	class:DefaultDecode
fetchToDecodeDelay	src/cpu/ozone/OzoneCPU.py	/^    fetchToDecodeDelay = Param.Unsigned("Fetch to decode delay")$/;"	v	class:DerivOzoneCPU
fetchToDecodeDelay	src/cpu/ozone/SimpleOzoneCPU.py	/^    fetchToDecodeDelay = Param.Unsigned("Fetch to decode delay")$/;"	v	class:SimpleOzoneCPU
fetchToDecodeDelay	src/cpu/ozone/simple_params.hh	/^    unsigned fetchToDecodeDelay;$/;"	m	class:SimpleParams
fetchTranslation	src/cpu/simple/timing.hh	/^    FetchTranslation fetchTranslation;$/;"	m	class:TimingSimpleCPU
fetchTrapLatency	src/cpu/o3/O3CPU.py	/^    fetchTrapLatency = Param.Cycles(1, "Fetch trap latency")$/;"	v	class:DerivO3CPU
fetchWidth	src/cpu/o3/O3CPU.py	/^    fetchWidth = Param.Unsigned(8, "Fetch width")$/;"	v	class:DerivO3CPU
fetchWidth	src/cpu/o3/fetch.hh	/^    unsigned fetchWidth;$/;"	m	class:DefaultFetch
fetchWidth	src/cpu/ozone/OzoneCPU.py	/^    fetchWidth = Param.Unsigned("Fetch width")$/;"	v	class:DerivOzoneCPU
fetchWidth	src/cpu/ozone/SimpleOzoneCPU.py	/^    fetchWidth = Param.Unsigned("Fetch width")$/;"	v	class:SimpleOzoneCPU
fetchWidth	src/cpu/ozone/simple_params.hh	/^    unsigned fetchWidth;$/;"	m	class:SimpleParams
fetch_accesses	src/arch/alpha/tlb.hh	/^    mutable Stats::Formula fetch_accesses;$/;"	m	class:AlphaISA::TLB
fetch_acv	src/arch/alpha/tlb.hh	/^    mutable Stats::Scalar fetch_acv;$/;"	m	class:AlphaISA::TLB
fetch_comp_delay	src/dev/Ethernet.py	/^    fetch_comp_delay = Param.Latency('10ns', "delay after desc fetch occurs")$/;"	v	class:IGbE
fetch_delay	src/dev/Ethernet.py	/^    fetch_delay = Param.Latency('10ns', "delay before desc fetch occurs")$/;"	v	class:IGbE
fetch_hits	src/arch/alpha/tlb.hh	/^    mutable Stats::Scalar fetch_hits;$/;"	m	class:AlphaISA::TLB
fetch_misses	src/arch/alpha/tlb.hh	/^    mutable Stats::Scalar fetch_misses;$/;"	m	class:AlphaISA::TLB
fetch_seq	src/sim/insttracer.hh	/^    InstSeqNum fetch_seq;$/;"	m	class:Trace::InstRecord
fetch_seq_valid	src/sim/insttracer.hh	/^    bool fetch_seq_valid;$/;"	m	class:Trace::InstRecord
fetchedBranches	src/cpu/o3/fetch.hh	/^    Stats::Scalar fetchedBranches;$/;"	m	class:DefaultFetch
fetchedBranches	src/cpu/ozone/front_end.hh	/^    Stats::Scalar fetchedBranches;$/;"	m	class:FrontEnd
fetchedCacheLines	src/cpu/o3/fetch.hh	/^    Stats::Scalar fetchedCacheLines;$/;"	m	class:DefaultFetch
fetchedCacheLines	src/cpu/ozone/front_end.hh	/^    Stats::Scalar fetchedCacheLines;$/;"	m	class:FrontEnd
fetchedInsts	src/cpu/o3/fetch.hh	/^    Stats::Scalar fetchedInsts;$/;"	m	class:DefaultFetch
fetchedInsts	src/cpu/ozone/front_end.hh	/^    Stats::Scalar fetchedInsts;$/;"	m	class:FrontEnd
fex	src/arch/power/miscregs.hh	/^    Bitfield<30> fex;$/;"	m	namespace:PowerISA
ffxsr	src/arch/x86/regs/misc.hh	/^        Bitfield<14> ffxsr; \/\/ Fast fxsave\/fxrstor$/;"	m	namespace:X86ISA
fg	src/arch/power/miscregs.hh	/^            Bitfield<14> fg;$/;"	m	namespace:PowerISA
fgetxattr	src/kern/linux/linux_syscalls.hh	/^    fgetxattr = 45,$/;"	e	enum:SystemCalls::__anon87
fi	src/arch/arm/miscregs.hh	/^        Bitfield<21>   fi;      \/\/ Fast interrupts configuration enable$/;"	m	namespace:ArmISA
fi	src/arch/power/miscregs.hh	/^    Bitfield<17> fi;$/;"	m	namespace:PowerISA
fiNil	src/base/loader/coff_sym.h	/^#define fiNil /;"	d
fields	src/dev/pcireg.h	/^    } fields;$/;"	m	union:MSIXTable	typeref:struct:MSIXTable::__anon81
fields_per_conf_record	src/mem/ruby/network/fault_model/FaultModel.hh	/^        fields_per_conf_record$/;"	e	enum:FaultModel::conf_record_format
fields_per_temperature_record	src/mem/ruby/network/fault_model/FaultModel.hh	/^        fields_per_temperature_record$/;"	e	enum:FaultModel::temperature_record_format
fifo	src/dev/pktfifo.hh	/^    std::list<PacketFifoEntry> fifo;$/;"	m	class:PacketFifo
fifo_list	src/dev/pktfifo.hh	/^    typedef std::list<PacketFifoEntry> fifo_list;$/;"	t	class:PacketFifo
file	src/dev/Ethernet.py	/^    file = Param.String("dump file")$/;"	v	class:EtherDump
file	src/dev/disk_image.hh	/^    std::string file;$/;"	m	class:RawDiskImage
fileData	src/base/loader/object_file.hh	/^    uint8_t *fileData;$/;"	m	class:ObjectFile
fileDataMmapped	src/base/loader/dtb_object.hh	/^        bool fileDataMmapped;$/;"	m	class:DtbObject
fileHdr	src/base/loader/ecoff_object.hh	/^    ecoff_filehdr *fileHdr;$/;"	m	class:EcoffObject
fileImage	src/base/loader/object_file.hh	/^        uint8_t *fileImage;$/;"	m	struct:ObjectFile::Section
fileName	src/proto/protoio.hh	/^    const std::string fileName;$/;"	m	class:ProtoInputStream
fileOffset	src/sim/process.hh	/^        uint64_t fileOffset;$/;"	m	class:Process::FdMap
filePath	src/mem/DRAMSim2.py	/^    filePath = Param.String("ext\/dramsim2\/DRAMSim2\/",$/;"	v	class:DRAMSim2
fileStream	src/proto/protoio.hh	/^    std::ifstream fileStream;$/;"	m	class:ProtoInputStream
fileStream	src/proto/protoio.hh	/^    std::ofstream fileStream;$/;"	m	class:ProtoOutputStream
file_not_found	src/mem/ruby/network/orion/ConfigFile.hh	/^		file_not_found( const string& filename_ = string() )$/;"	f	struct:ConfigFile::file_not_found
file_not_found	src/mem/ruby/network/orion/ConfigFile.hh	/^	struct file_not_found {$/;"	s	class:ConfigFile
filename	src/base/loader/hex_file.hh	/^    const std::string filename;$/;"	m	class:HexFile
filename	src/base/loader/object_file.hh	/^    const std::string filename;$/;"	m	class:ObjectFile
filename	src/dev/disk_image.hh	/^    std::string filename;$/;"	m	class:CowDiskImage
filename	src/mem/ruby/network/orion/ConfigFile.hh	/^		string filename;$/;"	m	struct:ConfigFile::file_not_found
filename	src/sim/init.hh	/^    const char *filename;$/;"	m	struct:EmbeddedPython
filename	src/sim/process.hh	/^        std::string filename;$/;"	m	class:Process::FdMap
files	src/base/output.hh	/^    map_t files;$/;"	m	class:OutputDirectory
files	src/mem/slicc/ast/DeclAST.py	/^    def files(self, parent=None):$/;"	m	class:DeclAST
files	src/mem/slicc/ast/DeclListAST.py	/^    def files(self, parent=None):$/;"	m	class:DeclListAST
files	src/mem/slicc/ast/EnumDeclAST.py	/^    def files(self, parent=None):$/;"	m	class:EnumDeclAST
files	src/mem/slicc/ast/FuncDeclAST.py	/^    def files(self, parent=None):$/;"	m	class:FuncDeclAST
files	src/mem/slicc/ast/MachineAST.py	/^    def files(self, parent=None):$/;"	m	class:MachineAST
files	src/mem/slicc/ast/StateDeclAST.py	/^    def files(self, parent=None):$/;"	m	class:StateDeclAST
files	src/mem/slicc/ast/TypeDeclAST.py	/^    def files(self, parent=None):$/;"	m	class:TypeDeclAST
files	src/mem/slicc/parser.py	/^    def files(self):$/;"	m	class:SLICC
fill	src/arch/mips/pra_constants.hh	/^    Bitfield<61, 40> fill;$/;"	m	namespace:MipsISA
fill	src/arch/mips/pra_constants.hh	/^    Bitfield<63, 30> fill;$/;"	m	namespace:MipsISA
fillFifo	src/dev/arm/pl111.cc	/^Pl111::fillFifo()$/;"	f	class:Pl111
fillFifoEvent	src/dev/arm/pl111.hh	/^    EventWrapper<Pl111, &Pl111::fillFifo> fillFifoEvent;$/;"	m	class:Pl111
fillHandler32	src/arch/sparc/handlers.hh	/^const MachInst fillHandler32[numFillInsts] =$/;"	m	namespace:SparcISA
fillHandler64	src/arch/sparc/handlers.hh	/^const MachInst fillHandler64[numFillInsts] =$/;"	m	namespace:SparcISA
fillPixelBuffer	src/dev/arm/hdlcd.cc	/^HDLcd::fillPixelBuffer()$/;"	f	class:HDLcd
fillPixelBufferEvent	src/dev/arm/hdlcd.hh	/^    EventWrapper<HDLcd, &HDLcd::fillPixelBuffer> fillPixelBufferEvent;$/;"	m	class:HDLcd
fillStart	src/arch/sparc/process.hh	/^    Addr fillStart, spillStart;$/;"	m	class:SparcLiveProcess
fill_zero	src/base/cprintf_formats.hh	/^    bool fill_zero;$/;"	m	struct:cp::Format
filterCP0Write	src/arch/mips/isa.cc	/^ISA::filterCP0Write(int misc_reg, int reg_sel, const MiscReg &val)$/;"	f	class:MipsISA::ISA
filterHash	src/dev/ns_gige.hh	/^    uint8_t filterHash[FHASH_SIZE];$/;"	m	struct:dp_rom
finalTick	src/sim/stat_control.cc	/^Stats::Value finalTick;$/;"	v
finalize	src/arch/isa_parser.py	/^    def finalize(self, predRead, predWrite):$/;"	m	class:Operand
finalizePhysical	src/arch/alpha/tlb.cc	/^TLB::finalizePhysical(RequestPtr req, ThreadContext *tc, Mode mode) const$/;"	f	class:AlphaISA::TLB
finalizePhysical	src/arch/arm/tlb.cc	/^TLB::finalizePhysical(RequestPtr req, ThreadContext *tc, Mode mode) const$/;"	f	class:TLB
finalizePhysical	src/arch/mips/tlb.cc	/^TLB::finalizePhysical(RequestPtr req, ThreadContext *tc, Mode mode) const$/;"	f	class:TLB
finalizePhysical	src/arch/power/tlb.cc	/^TLB::finalizePhysical(RequestPtr req, ThreadContext *tc, Mode mode) const$/;"	f	class:TLB
finalizePhysical	src/arch/sparc/tlb.cc	/^TLB::finalizePhysical(RequestPtr req, ThreadContext *tc, Mode mode) const$/;"	f	class:SparcISA::TLB
finalizePhysical	src/arch/x86/tlb.cc	/^TLB::finalizePhysical(RequestPtr req, ThreadContext *tc, Mode mode) const$/;"	f	class:X86ISA::TLB
finalizePhysical	src/sim/tlb.cc	/^GenericTLB::finalizePhysical(RequestPtr req, ThreadContext *tc, Mode mode) const$/;"	f	class:GenericTLB
find	src/arch/sparc/tlb_map.hh	/^    find(const TlbRange &r)$/;"	f	class:SparcISA::TlbMap
find	src/base/addr_range_map.hh	/^    find(const Addr &r) const$/;"	f	class:AddrRangeMap
find	src/base/addr_range_map.hh	/^    find(const AddrRange &r) const$/;"	f	class:AddrRangeMap
find	src/base/inifile.cc	/^IniFile::find(const string &sectionName, const string &entryName,$/;"	f	class:IniFile
find	src/base/output.cc	/^OutputDirectory::find(const string &name) const$/;"	f	class:OutputDirectory
find	src/cpu/inorder/resource_sked.cc	/^ResourceSked::find(int stage_num, int cmd)$/;"	f	class:ResourceSked
find	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::InstQueue::find(queue q, InstListIt it)$/;"	f	class:BackEnd::InstQueue
find	src/mem/slicc/symbols/SymbolTable.py	/^    def find(self, ident, types=None):$/;"	m	class:SymbolTable
find	src/python/m5/proxy.py	/^    def find(self, obj):$/;"	m	class:AllProxy
find	src/python/m5/proxy.py	/^    def find(self, obj):$/;"	m	class:AnyProxy
find	src/python/m5/proxy.py	/^    def find(self, obj):$/;"	m	class:AttrProxy
find	src/python/m5/util/jobfile.py	/^    def find(self, jobname):$/;"	m	class:Configuration
find	src/sim/serialize.cc	/^Checkpoint::find(const string &section, const string &entry, string &value)$/;"	f	class:Checkpoint
find	src/sim/sim_object.cc	/^SimObject::find(const char *name)$/;"	f	class:SimObject
findAddress	src/base/loader/symtab.hh	/^    findAddress(const std::string &symbol, Addr &address) const$/;"	f	class:SymbolTable
findBlk	src/mem/cache/tags/cacheset.hh	/^CacheSet<Blktype>::findBlk(Addr tag, bool is_secure) const$/;"	f	class:CacheSet
findBlk	src/mem/cache/tags/cacheset.hh	/^CacheSet<Blktype>::findBlk(Addr tag, bool is_secure, int& way_id) const$/;"	f	class:CacheSet
findBlock	src/cpu/inorder/resources/fetch_unit.cc	/^FetchUnit::findBlock(std::list<FetchBlock*> &fetch_blocks, int asid,$/;"	f	class:FetchUnit
findBlock	src/mem/cache/cache.hh	/^    CacheBlk *findBlock(Addr addr, bool is_secure) const {$/;"	f	class:Cache
findBlock	src/mem/cache/tags/fa_lru.cc	/^FALRU::findBlock(Addr addr, bool is_secure) const$/;"	f	class:FALRU
findBlock	src/mem/cache/tags/lru.cc	/^LRU::findBlock(Addr addr, bool is_secure) const$/;"	f	class:LRU
findCarry	src/base/condcodes.hh	/^findCarry(int width, uint64_t dest, uint64_t src1, uint64_t src2) {$/;"	f
findContext	src/cpu/base.cc	/^BaseCPU::findContext(ThreadContext *tc)$/;"	f	class:BaseCPU
findEntry	src/base/inifile.cc	/^IniFile::Section::findEntry(const std::string &entryName) const$/;"	f	class:IniFile::Section
findFlag	src/base/debug.cc	/^findFlag(const std::string &name)$/;"	f	namespace:Debug
findFreeContext	src/sim/process.cc	/^Process::findFreeContext()$/;"	f	class:Process
findHighestPendingLR	src/dev/arm/vgic.hh	/^    int findHighestPendingLR(struct vcpuIntData *vid)$/;"	f	class:VGic
findInHash	src/cpu/o3/mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::findInHash(const DynInstPtr &inst)$/;"	f	class:MemDepUnit
findInst	src/cpu/inorder/cpu.cc	/^InOrderCPU::findInst(InstSeqNum seq_num, ThreadID tid)$/;"	f	class:InOrderCPU
findInst	src/cpu/o3/rob_impl.hh	/^ROB<Impl>::findInst(ThreadID tid, InstSeqNum squash_inst)$/;"	f	class:ROB
findIterByCommand	src/cpu/inorder/resource_sked.cc	/^ResourceSked::findIterByCommand(ScheduleEntry* sked_entry, int stage_num,$/;"	f	class:ResourceSked
findIterByPriority	src/cpu/inorder/resource_sked.cc	/^ResourceSked::findIterByPriority(ScheduleEntry* sked_entry, int stage_num)$/;"	f	class:ResourceSked
findLRForVIRQ	src/dev/arm/vgic.hh	/^    int findLRForVIRQ(struct vcpuIntData *vid, int virq, int vcpu)$/;"	f	class:VGic
findLsbSet	src/base/bitfield.hh	/^findLsbSet(uint64_t val) {$/;"	f
findMachines	src/mem/slicc/ast/DeclAST.py	/^    def findMachines(self):$/;"	m	class:DeclAST
findMachines	src/mem/slicc/ast/DeclListAST.py	/^    def findMachines(self):$/;"	m	class:DeclListAST
findMachines	src/mem/slicc/ast/MachineAST.py	/^    def findMachines(self):$/;"	m	class:MachineAST
findMatch	src/mem/cache/mshr_queue.cc	/^MSHRQueue::findMatch(Addr addr, bool is_secure) const$/;"	f	class:MSHRQueue
findMatches	src/mem/cache/mshr_queue.cc	/^MSHRQueue::findMatches(Addr addr, bool is_secure, vector<MSHR*>& matches) const$/;"	f	class:MSHRQueue
findMsbSet	src/base/bitfield.hh	/^findMsbSet(uint64_t val) {$/;"	f
findNearestAddr	src/base/loader/symtab.hh	/^    findNearestAddr(Addr addr, Addr &symaddr) const$/;"	f	class:SymbolTable
findNearestAddr	src/base/loader/symtab.hh	/^    findNearestAddr(Addr addr, Addr &symaddr, Addr &nextaddr) const$/;"	f	class:SymbolTable
findNearestSymbol	src/base/loader/symtab.hh	/^    findNearestSymbol(Addr addr, std::string &symbol, Addr &symaddr) const$/;"	f	class:SymbolTable
findNearestSymbol	src/base/loader/symtab.hh	/^    findNearestSymbol(Addr addr, std::string &symbol, Addr &symaddr,$/;"	f	class:SymbolTable
findNegative	src/base/condcodes.hh	/^findNegative(int width, uint64_t dest) {$/;"	f
findNextSenderState	src/mem/packet.hh	/^    T * findNextSenderState() const$/;"	f	class:Packet
findObj	src/sim/serialize.cc	/^Checkpoint::findObj(const string &section, const string &entry,$/;"	f	class:Checkpoint
findOverflow	src/base/condcodes.hh	/^findOverflow(int width, uint64_t dest, uint64_t src1, uint64_t src2) {$/;"	f
findParity	src/base/condcodes.hh	/^findParity(int width, uint64_t dest) {$/;"	f
findPending	src/mem/cache/mshr_queue.cc	/^MSHRQueue::findPending(Addr addr, int size, bool is_secure) const$/;"	f	class:MSHRQueue
findPort	src/mem/bus.cc	/^BaseBus::findPort(Addr addr)$/;"	f	class:BaseBus
findRegArrayMSB	src/arch/x86/interrupts.hh	/^    findRegArrayMSB(ApicRegIndex base)$/;"	f	class:X86ISA::Interrupts
findReplacementBlock	src/cpu/inorder/resources/fetch_unit.cc	/^FetchUnit::findReplacementBlock()$/;"	f	class:FetchUnit
findRequest	src/cpu/inorder/resource.cc	/^Resource::findRequest(DynInstPtr inst)$/;"	f	class:Resource
findRequest	src/cpu/inorder/resources/cache_unit.cc	/^CacheUnit::findRequest(DynInstPtr inst)$/;"	f	class:CacheUnit
findRequest	src/cpu/inorder/resources/cache_unit.cc	/^CacheUnit::findRequest(DynInstPtr inst, int idx)$/;"	f	class:CacheUnit
findRequest	src/cpu/inorder/resources/use_def.cc	/^UseDefUnit::findRequest(DynInstPtr inst)$/;"	f	class:UseDefUnit
findResources	src/mem/slicc/ast/CheckAllocateStatementAST.py	/^    def findResources(self, resources):$/;"	m	class:CheckAllocateStatementAST
findResources	src/mem/slicc/ast/EnqueueStatementAST.py	/^    def findResources(self, resources):$/;"	m	class:EnqueueStatementAST
findResources	src/mem/slicc/ast/ExprAST.py	/^    def findResources(self, resources):$/;"	m	class:ExprAST
findResources	src/mem/slicc/ast/ExprStatementAST.py	/^    def findResources(self, resources):$/;"	m	class:ExprStatementAST
findResources	src/mem/slicc/ast/IfStatementAST.py	/^    def findResources(self, resources):$/;"	m	class:IfStatementAST
findResources	src/mem/slicc/ast/MethodCallExprAST.py	/^    def findResources(self, resources):$/;"	m	class:MethodCallExprAST
findResources	src/mem/slicc/ast/PeekStatementAST.py	/^    def findResources(self, resources):$/;"	m	class:PeekStatementAST
findResources	src/mem/slicc/ast/ReturnStatementAST.py	/^    def findResources(self, resources):$/;"	m	class:ReturnStatementAST
findResources	src/mem/slicc/ast/StatementAST.py	/^    def findResources(self, resources):$/;"	m	class:StatementAST
findResources	src/mem/slicc/ast/StatementListAST.py	/^    def findResources(self, resources):$/;"	m	class:StatementListAST
findSection	src/base/inifile.cc	/^IniFile::findSection(const string &sectionName) const$/;"	f	class:IniFile
findSlot	src/cpu/inorder/resource.cc	/^Resource::findSlot(DynInstPtr inst)$/;"	f	class:Resource
findSmallest	src/mem/ruby/system/PersistentTable.cc	/^PersistentTable::findSmallest(const Address& address) const$/;"	f	class:PersistentTable
findSymbol	src/base/loader/symtab.hh	/^    findSymbol(Addr address, std::string &symbol) const$/;"	f	class:SymbolTable
findTagInSet	src/mem/ruby/system/CacheMemory.cc	/^CacheMemory::findTagInSet(Index cacheSet, const Address& tag) const$/;"	f	class:CacheMemory
findTagInSetIgnorePermissions	src/mem/ruby/system/CacheMemory.cc	/^CacheMemory::findTagInSetIgnorePermissions(Index cacheSet,$/;"	f	class:CacheMemory
findVictim	src/mem/cache/tags/fa_lru.cc	/^FALRU::findVictim(Addr addr)$/;"	f	class:FALRU
findVictim	src/mem/cache/tags/lru.cc	/^LRU::findVictim(Addr addr)$/;"	f	class:LRU
findZero	src/base/condcodes.hh	/^findZero(int width, uint64_t dest) {$/;"	f
find_all	src/python/m5/SimObject.py	/^    def find_all(self, ptype):$/;"	f
find_any	src/python/m5/SimObject.py	/^    def find_any(self, ptype):$/;"	f
find_base	src/arch/isa_parser.py	/^    def find_base(self, base_name):$/;"	m	class:OperandList
find_file_offsets	src/sim/process.cc	/^Process::find_file_offsets()$/;"	f	class:Process
find_module	src/python/importer.py	/^    def find_module(self, fullname, path):$/;"	m	class:CodeImporter
finish	src/arch/arm/stage2_lookup.cc	/^Stage2LookUp::finish(Fault _fault, RequestPtr req,$/;"	f	class:Stage2LookUp
finish	src/arch/arm/stage2_mmu.cc	/^Stage2MMU::Stage2Translation::finish(Fault _fault, RequestPtr req, ThreadContext *tc,$/;"	f	class:Stage2MMU::Stage2Translation
finish	src/cpu/o3/fetch.hh	/^        finish(Fault fault, RequestPtr req, ThreadContext *tc,$/;"	f	class:DefaultFetch::FetchTranslation
finish	src/cpu/simple/timing.hh	/^        finish(Fault fault, RequestPtr req, ThreadContext *tc,$/;"	f	class:TimingSimpleCPU::FetchTranslation
finish	src/cpu/translation.hh	/^    finish(Fault fault, RequestPtr req, ThreadContext *tc,$/;"	f	class:DataTranslation
finish	src/cpu/translation.hh	/^    finish(Fault fault, int index)$/;"	f	class:WholeTranslationState
finishCacheUnitReq	src/cpu/inorder/resources/cache_unit.cc	/^CacheUnit::finishCacheUnitReq(DynInstPtr inst, CacheRequest *cache_req)$/;"	f	class:CacheUnit
finishSkedEntry	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool finishSkedEntry()$/;"	f	class:InOrderDynInst
finishTranslation	src/cpu/base_dyn_inst.hh	/^BaseDynInst<Impl>::finishTranslation(WholeTranslationState *state)$/;"	f	class:BaseDynInst
finishTranslation	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::finishTranslation(Fault fault, RequestPtr mem_req)$/;"	f	class:DefaultFetch
finishTranslation	src/cpu/simple/timing.cc	/^TimingSimpleCPU::finishTranslation(WholeTranslationState *state)$/;"	f	class:TimingSimpleCPU
finishTranslationEvent	src/cpu/o3/fetch.hh	/^    FinishTranslationEvent finishTranslationEvent;$/;"	m	class:DefaultFetch
finishVfp	src/arch/arm/insts/vfp.cc	/^finishVfp(FPSCR &fpscr, VfpSavedState state, bool flush, FPSCR mask)$/;"	f	namespace:ArmISA
fiq	src/arch/arm/miscregs.hh	/^        Bitfield<2> fiq;$/;"	m	namespace:ArmISA
fiqAsserted	src/cpu/kvm/arm_cpu.hh	/^    bool fiqAsserted;$/;"	m	class:ArmKvmCPU
fiqDisable	src/arch/arm/faults.cc	/^FastInterrupt::fiqDisable(ThreadContext *tc)$/;"	f	class:ArmISA::FastInterrupt
fiqDisable	src/arch/arm/faults.hh	/^        const bool fiqDisable;$/;"	m	struct:ArmISA::ArmFault::FaultVals
fiqDisable	src/arch/arm/faults.hh	/^    virtual bool fiqDisable(ThreadContext* tc) { return vals.fiqDisable; }$/;"	f	class:ArmISA::ArmFaultVals
first	src/base/stl_helpers.hh	/^    bool first;$/;"	m	class:m5::stl_helpers::ContainerPrint
fix	src/arch/x86/regs/misc.hh	/^        Bitfield<8> fix; \/\/ Fixed-Range Registers$/;"	m	namespace:X86ISA
fix	src/python/m5/util/code_formatter.py	/^    def fix(self, status):$/;"	m	class:code_formatter
fixDest	src/arch/arm/insts/vfp.cc	/^fixDest(bool flush, bool defaultNan, fpType val, fpType op1)$/;"	f	namespace:ArmISA
fixDest	src/arch/arm/insts/vfp.cc	/^fixDest(bool flush, bool defaultNan, fpType val, fpType op1, fpType op2)$/;"	f	namespace:ArmISA
fixDivDest	src/arch/arm/insts/vfp.cc	/^fixDivDest(bool flush, bool defaultNan, fpType val, fpType op1, fpType op2)$/;"	f	namespace:ArmISA
fixFpDFpSDest	src/arch/arm/insts/vfp.cc	/^fixFpDFpSDest(FPSCR fpscr, double val)$/;"	f	namespace:ArmISA
fixFpSFpDDest	src/arch/arm/insts/vfp.cc	/^fixFpSFpDDest(FPSCR fpscr, float val)$/;"	f	namespace:ArmISA
fixFuncEventAddr	src/arch/alpha/system.cc	/^AlphaSystem::fixFuncEventAddr(Addr addr)$/;"	f	class:AlphaSystem
fixFuncEventAddr	src/arch/arm/system.hh	/^    virtual Addr fixFuncEventAddr(Addr addr)$/;"	f	class:ArmSystem
fixFuncEventAddr	src/arch/mips/system.cc	/^MipsSystem::fixFuncEventAddr(Addr addr)$/;"	f	class:MipsSystem
fixFuncEventAddr	src/arch/sparc/system.hh	/^    fixFuncEventAddr(Addr addr)$/;"	f	class:SparcSystem
fixFuncEventAddr	src/arch/x86/system.hh	/^    virtual Addr fixFuncEventAddr(Addr addr)$/;"	f	class:X86System
fixFuncEventAddr	src/sim/system.hh	/^    virtual Addr fixFuncEventAddr(Addr addr)$/;"	f	class:System
fixGlobalFrequency	src/python/m5/ticks.py	/^def fixGlobalFrequency():$/;"	f
fixPythonIndentation	src/arch/isa_parser.py	/^def fixPythonIndentation(s):$/;"	f
fix_file_offsets	src/sim/process.cc	/^Process::fix_file_offsets()$/;"	f	class:Process
fix_newlines	src/python/m5/util/code_formatter.py	/^    fix_newlines = True$/;"	v	class:code_formatter
fixed	src/base/cprintf_formats.hh	/^    enum { best, fixed, scientific } float_format;$/;"	e	enum:cp::Format::__anon39
fixedPkts	src/cpu/testers/networktest/networktest.hh	/^    bool fixedPkts;$/;"	m	class:NetworkTest
fixed_pkts	src/cpu/testers/networktest/NetworkTest.py	/^    fixed_pkts = Param.Bool(False, "Send fixed number of packets")$/;"	v	class:NetworkTest
fixupStackFault	src/sim/process.cc	/^Process::fixupStackFault(Addr vaddr)$/;"	f	class:Process
fl	src/arch/power/miscregs.hh	/^            Bitfield<15> fl;$/;"	m	namespace:PowerISA
flag	src/base/cp_annotate.hh	/^        uint8_t  flag;$/;"	m	struct:CPA::AnnotateData
flags	src/arch/alpha/faults.hh	/^    uint64_t flags;$/;"	m	class:AlphaISA::DtbFault
flags	src/arch/arm/linux/atag.hh	/^    void flags(uint32_t i) { storage[2] = i; }$/;"	f	class:AtagCore
flags	src/arch/arm/types.hh	/^        uint8_t flags;$/;"	m	class:ArmISA::PCState
flags	src/arch/x86/bios/intelmp.hh	/^    uint16_t flags;$/;"	m	class:X86ISA::IntelMP::IntAssignment
flags	src/arch/x86/bios/intelmp.hh	/^    uint8_t flags;$/;"	m	class:X86ISA::IntelMP::IOAPIC
flags	src/arch/x86/linux/syscalls.cc	/^    uint32_t flags;$/;"	m	struct:UserDesc32	file:
flags	src/arch/x86/linux/syscalls.cc	/^    uint32_t flags;$/;"	m	struct:UserDesc64	file:
flags	src/base/cp_annotate.hh	/^    enum flags {$/;"	g	class:CPA
flags	src/base/inet.hh	/^    uint8_t  flags() const { return th_flags & 0x3f; }$/;"	f	struct:Net::TcpHdr
flags	src/base/inet.hh	/^    void flags(uint8_t _flags) { th_flags  = _flags; } $/;"	f	struct:Net::TcpHdr
flags	src/base/statistics.hh	/^    flags(Flags _flags)$/;"	f	class:Stats::DataWrap
flags	src/base/stats/info.hh	/^    Flags flags;$/;"	m	class:Stats::Info
flags	src/base/stats/text.cc	/^    Flags flags;$/;"	m	struct:Stats::DistPrint	file:
flags	src/base/stats/text.cc	/^    Flags flags;$/;"	m	struct:Stats::ScalarPrint	file:
flags	src/base/stats/text.cc	/^    Flags flags;$/;"	m	struct:Stats::SparseHistPrint	file:
flags	src/base/stats/text.cc	/^    Flags flags;$/;"	m	struct:Stats::VectorPrint	file:
flags	src/cpu/m5legion_interface.h	/^    uint32_t flags;$/;"	m	struct:__anon55
flags	src/cpu/static_inst.hh	/^    std::bitset<NumFlags> flags;$/;"	m	class:StaticInst
flags	src/cpu/testers/traffic_gen/generators.hh	/^        Request::FlagsType flags;$/;"	m	struct:TraceGen::TraceElement
flags	src/dev/arm/rv_ctrl.hh	/^    uint32_t flags;$/;"	m	class:RealViewCtrl
flags	src/kern/tru64/tru64.hh	/^        int             flags;          \/\/!< shared flags$/;"	m	struct:Tru64::ushared_state
flags	src/kern/tru64/tru64.hh	/^        uint64_t        flags;          \/\/!< MAP_FIXED etc.$/;"	m	struct:Tru64::vm_stack
flags	src/kern/tru64/tru64.hh	/^        unsigned short flags;   \/\/!< flags$/;"	m	struct:Tru64::nxm_task_attr
flags	src/mem/packet.hh	/^    Flags flags;$/;"	m	class:Packet
flags	src/python/m5/debug.py	/^flags = AllFlags()$/;"	v
flags	src/python/m5/stats/__init__.py	/^flags = attrdict({$/;"	v
flags	src/sim/eventq.hh	/^    Flags flags;$/;"	m	class:Event
flags	src/sim/process.hh	/^        int flags;$/;"	m	class:Process::FdMap
flags	src/sim/syscall_emul.hh	/^    int flags;          \/\/!< Flags (see Flags enum).$/;"	m	class:SyscallDesc
flags_addr	src/arch/arm/ArmSystem.py	/^    flags_addr = Param.Addr(0, "Address of the flags register for MP booting")$/;"	v	class:ArmSystem
flash	src/dev/i8254xGBe.hh	/^    uint16_t flash[iGbReg::EEPROM_SIZE];$/;"	m	class:IGbE
flash_fake	src/dev/arm/RealView.py	/^    flash_fake    = IsaFake(pio_addr=0x40000000, pio_size=0x20000000,$/;"	v	class:RealViewPBX
flash_fake	src/dev/arm/RealView.py	/^    flash_fake    = IsaFake(pio_addr=0x40000000, pio_size=0x20000000-1,$/;"	v	class:RealViewEB
flatten	src/python/m5/util/__init__.py	/^def flatten(items):$/;"	f
flattenCCIndex	src/arch/alpha/isa.hh	/^        flattenCCIndex(int reg) const$/;"	f	class:AlphaISA::ISA
flattenCCIndex	src/arch/arm/isa.hh	/^        flattenCCIndex(int reg) const$/;"	f	class:ArmISA::ISA
flattenCCIndex	src/arch/mips/isa.hh	/^        flattenCCIndex(int reg) const$/;"	f	class:MipsISA::ISA
flattenCCIndex	src/arch/power/isa.hh	/^    flattenCCIndex(int reg) const$/;"	f	class:PowerISA::ISA
flattenCCIndex	src/arch/sparc/isa.hh	/^    flattenCCIndex(int reg) const$/;"	f	class:SparcISA::ISA
flattenCCIndex	src/arch/x86/isa.hh	/^        flattenCCIndex(int reg) const$/;"	f	class:X86ISA::ISA
flattenCCIndex	src/cpu/checker/thread_context.hh	/^    int flattenCCIndex(int reg) { return actualTC->flattenCCIndex(reg); }$/;"	f	class:CheckerThreadContext
flattenCCIndex	src/cpu/inorder/thread_context.hh	/^    int flattenCCIndex(int reg)$/;"	f	class:InOrderThreadContext
flattenCCIndex	src/cpu/o3/thread_context_impl.hh	/^O3ThreadContext<Impl>::flattenCCIndex(int reg)$/;"	f	class:O3ThreadContext
flattenCCIndex	src/cpu/simple_thread.hh	/^    flattenCCIndex(int reg)$/;"	f	class:SimpleThread
flattenCCIndex	src/cpu/thread_context.hh	/^    int flattenCCIndex(int reg)$/;"	f	class:ProxyThreadContext
flattenDestReg	src/cpu/base_dyn_inst.hh	/^    void flattenDestReg(int idx, TheISA::RegIndex flattened_dest)$/;"	f	class:BaseDynInst
flattenDestReg	src/cpu/inorder/inorder_dyn_inst.hh	/^    void flattenDestReg(int idx, TheISA::RegIndex flattened_dest)$/;"	f	class:InOrderDynInst
flattenFloatIndex	src/arch/alpha/isa.hh	/^        flattenFloatIndex(int reg) const$/;"	f	class:AlphaISA::ISA
flattenFloatIndex	src/arch/arm/isa.hh	/^        flattenFloatIndex(int reg) const$/;"	f	class:ArmISA::ISA
flattenFloatIndex	src/arch/mips/isa.hh	/^        flattenFloatIndex(int reg) const$/;"	f	class:MipsISA::ISA
flattenFloatIndex	src/arch/power/isa.hh	/^    flattenFloatIndex(int reg) const$/;"	f	class:PowerISA::ISA
flattenFloatIndex	src/arch/sparc/isa.hh	/^    flattenFloatIndex(int reg) const$/;"	f	class:SparcISA::ISA
flattenFloatIndex	src/arch/x86/isa.hh	/^        flattenFloatIndex(int reg) const$/;"	f	class:X86ISA::ISA
flattenFloatIndex	src/cpu/checker/thread_context.hh	/^    int flattenFloatIndex(int reg) { return actualTC->flattenFloatIndex(reg); }$/;"	f	class:CheckerThreadContext
flattenFloatIndex	src/cpu/inorder/thread_context.hh	/^    int flattenFloatIndex(int reg)$/;"	f	class:InOrderThreadContext
flattenFloatIndex	src/cpu/o3/thread_context_impl.hh	/^O3ThreadContext<Impl>::flattenFloatIndex(int reg)$/;"	f	class:O3ThreadContext
flattenFloatIndex	src/cpu/simple_thread.hh	/^    flattenFloatIndex(int reg)$/;"	f	class:SimpleThread
flattenFloatIndex	src/cpu/thread_context.hh	/^    int flattenFloatIndex(int reg)$/;"	f	class:ProxyThreadContext
flattenIntIndex	src/arch/alpha/isa.hh	/^        flattenIntIndex(int reg) const$/;"	f	class:AlphaISA::ISA
flattenIntIndex	src/arch/arm/isa.hh	/^        flattenIntIndex(int reg) const$/;"	f	class:ArmISA::ISA
flattenIntIndex	src/arch/mips/isa.hh	/^        flattenIntIndex(int reg) const$/;"	f	class:MipsISA::ISA
flattenIntIndex	src/arch/power/isa.hh	/^    flattenIntIndex(int reg) const$/;"	f	class:PowerISA::ISA
flattenIntIndex	src/arch/sparc/isa.hh	/^    flattenIntIndex(int reg) const$/;"	f	class:SparcISA::ISA
flattenIntIndex	src/arch/x86/isa.hh	/^        flattenIntIndex(int reg) const$/;"	f	class:X86ISA::ISA
flattenIntIndex	src/cpu/checker/thread_context.hh	/^    int flattenIntIndex(int reg) { return actualTC->flattenIntIndex(reg); }$/;"	f	class:CheckerThreadContext
flattenIntIndex	src/cpu/inorder/thread_context.hh	/^    int flattenIntIndex(int reg)$/;"	f	class:InOrderThreadContext
flattenIntIndex	src/cpu/o3/thread_context_impl.hh	/^O3ThreadContext<Impl>::flattenIntIndex(int reg)$/;"	f	class:O3ThreadContext
flattenIntIndex	src/cpu/simple_thread.hh	/^    flattenIntIndex(int reg)$/;"	f	class:SimpleThread
flattenIntIndex	src/cpu/thread_context.hh	/^    int flattenIntIndex(int reg)$/;"	f	class:ProxyThreadContext
flattenIntRegModeIndex	src/arch/arm/intregs.hh	/^flattenIntRegModeIndex(int reg)$/;"	f	namespace:ArmISA
flattenMiscIndex	src/arch/alpha/isa.hh	/^        flattenMiscIndex(int reg) const$/;"	f	class:AlphaISA::ISA
flattenMiscIndex	src/arch/arm/isa.hh	/^        flattenMiscIndex(int reg) const$/;"	f	class:ArmISA::ISA
flattenMiscIndex	src/arch/mips/isa.hh	/^        flattenMiscIndex(int reg) const$/;"	f	class:MipsISA::ISA
flattenMiscIndex	src/arch/power/isa.hh	/^    flattenMiscIndex(int reg) const$/;"	f	class:PowerISA::ISA
flattenMiscIndex	src/arch/sparc/isa.hh	/^    flattenMiscIndex(int reg) const$/;"	f	class:SparcISA::ISA
flattenMiscIndex	src/arch/x86/isa.hh	/^        flattenMiscIndex(int reg) const$/;"	f	class:X86ISA::ISA
flattenMiscIndex	src/cpu/checker/thread_context.hh	/^    int flattenMiscIndex(int reg) { return actualTC->flattenMiscIndex(reg); }$/;"	f	class:CheckerThreadContext
flattenMiscIndex	src/cpu/inorder/thread_context.hh	/^    int flattenMiscIndex(int reg)$/;"	f	class:InOrderThreadContext
flattenMiscIndex	src/cpu/o3/thread_context_impl.hh	/^O3ThreadContext<Impl>::flattenMiscIndex(int reg)$/;"	f	class:O3ThreadContext
flattenMiscIndex	src/cpu/simple_thread.hh	/^    flattenMiscIndex(int reg)$/;"	f	class:SimpleThread
flattenMiscIndex	src/cpu/thread_context.hh	/^    int flattenMiscIndex(int reg)$/;"	f	class:ProxyThreadContext
flattenMiscRegNsBanked	src/arch/arm/miscregs.cc	/^flattenMiscRegNsBanked(int reg, ThreadContext *tc)$/;"	f	namespace:ArmISA
flattenMiscRegNsBanked	src/arch/arm/miscregs.cc	/^flattenMiscRegNsBanked(int reg, ThreadContext *tc, bool ns)$/;"	f	namespace:ArmISA
flattenRegIdx	src/cpu/inorder/cpu.cc	/^InOrderCPU::flattenRegIdx(RegIndex reg_idx, RegClass &reg_type, ThreadID tid)$/;"	f	class:InOrderCPU
flattenSrcReg	src/cpu/inorder/inorder_dyn_inst.hh	/^    void flattenSrcReg(int idx, TheISA::RegIndex flattened_src)$/;"	f	class:InOrderDynInst
flattenedDestRegIdx	src/cpu/base_dyn_inst.hh	/^    TheISA::RegIndex flattenedDestRegIdx(int idx) const$/;"	f	class:BaseDynInst
flattenedDestRegIdx	src/cpu/inorder/inorder_dyn_inst.hh	/^    TheISA::RegIndex flattenedDestRegIdx(int idx) const$/;"	f	class:InOrderDynInst
flattenedSrcRegIdx	src/cpu/inorder/inorder_dyn_inst.hh	/^    TheISA::RegIndex flattenedSrcRegIdx(int idx) const$/;"	f	class:InOrderDynInst
flistxattr	src/kern/linux/linux_syscalls.hh	/^    flistxattr = 46,$/;"	e	enum:SystemCalls::__anon87
flit	src/mem/ruby/network/garnet/flexible-pipeline/flit.cc	/^flit::flit(int id, int  vc, int vnet, int size, MsgPtr msg_ptr, Cycles curTime)$/;"	f	class:flit
flit	src/mem/ruby/network/garnet/flexible-pipeline/flit.hh	/^class flit$/;"	c
flitBuffer	src/mem/ruby/network/garnet/flexible-pipeline/flitBuffer.cc	/^flitBuffer::flitBuffer()$/;"	f	class:flitBuffer
flitBuffer	src/mem/ruby/network/garnet/flexible-pipeline/flitBuffer.cc	/^flitBuffer::flitBuffer(int maximum_size)$/;"	f	class:flitBuffer
flitBuffer	src/mem/ruby/network/garnet/flexible-pipeline/flitBuffer.hh	/^class flitBuffer$/;"	c
flitBuffer_d	src/mem/ruby/network/garnet/fixed-pipeline/flitBuffer_d.cc	/^flitBuffer_d::flitBuffer_d()$/;"	f	class:flitBuffer_d
flitBuffer_d	src/mem/ruby/network/garnet/fixed-pipeline/flitBuffer_d.cc	/^flitBuffer_d::flitBuffer_d(int maximum_size)$/;"	f	class:flitBuffer_d
flitBuffer_d	src/mem/ruby/network/garnet/fixed-pipeline/flitBuffer_d.hh	/^class flitBuffer_d$/;"	c
flit_conservation__flit_duplication	src/mem/ruby/network/fault_model/FaultModel.hh	/^        flit_conservation__flit_duplication,$/;"	e	enum:FaultModel::fault_type
flit_conservation__flit_loss_or_split	src/mem/ruby/network/fault_model/FaultModel.hh	/^        flit_conservation__flit_loss_or_split,$/;"	e	enum:FaultModel::fault_type
flit_d	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.cc	/^flit_d::flit_d(int id, int  vc, int vnet, int size, MsgPtr msg_ptr,$/;"	f	class:flit_d
flit_d	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.cc	/^flit_d::flit_d(int vc, bool is_free_signal, Cycles curTime)$/;"	f	class:flit_d
flit_d	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.hh	/^class flit_d$/;"	c
flit_stage	src/mem/ruby/network/garnet/NetworkHeader.hh	/^enum flit_stage {I_, VA_, SA_, ST_, LT_, NUM_FLIT_STAGE_};$/;"	g
flit_type	src/mem/ruby/network/garnet/NetworkHeader.hh	/^enum flit_type {HEAD_, BODY_, TAIL_, HEAD_TAIL_, NUM_FLIT_TYPE_};$/;"	g
flitisizeMessage	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.cc	/^NetworkInterface_d::flitisizeMessage(MsgPtr msg_ptr, int vnet)$/;"	f	class:NetworkInterface_d
flitisizeMessage	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.cc	/^NetworkInterface::flitisizeMessage(MsgPtr msg_ptr, int vnet)$/;"	f	class:NetworkInterface
floatList	src/cpu/o3/free_list.hh	/^    SimpleFreeList floatList;$/;"	m	class:UnifiedFreeList
floatMap	src/cpu/o3/rename_map.hh	/^    SimpleRenameMap floatMap;$/;"	m	class:UnifiedRenameMap
floatRegFile	src/cpu/o3/regfile.hh	/^    std::vector<PhysFloatReg> floatRegFile;$/;"	m	class:PhysRegFile
floatRegFileAccs	src/cpu/inorder/resources/use_def.hh	/^    Stats::Formula floatRegFileAccs;$/;"	m	class:UseDefUnit
floatRegFileReads	src/cpu/inorder/resources/use_def.hh	/^    Stats::Scalar floatRegFileReads;$/;"	m	class:UseDefUnit
floatRegFileWrites	src/cpu/inorder/resources/use_def.hh	/^    Stats::Scalar floatRegFileWrites;$/;"	m	class:UseDefUnit
floatRegs	src/cpu/inorder/cpu.hh	/^    } floatRegs;$/;"	m	class:InOrderCPU	typeref:union:InOrderCPU::__anon49
floatRegs	src/cpu/simple_thread.hh	/^    } floatRegs;$/;"	m	class:SimpleThread	typeref:union:SimpleThread::__anon62
float_format	src/base/cprintf_formats.hh	/^    enum { best, fixed, scientific } float_format;$/;"	m	struct:cp::Format	typeref:enum:cp::Format::__anon39
floating	src/base/cprintf_formats.hh	/^    enum { none, string, integer, character, floating } format;$/;"	e	enum:cp::Format::__anon38
flock	src/kern/linux/linux_syscalls.hh	/^    flock = 47,$/;"	e	enum:SystemCalls::__anon87
flock	src/kern/tru64/tru64_syscalls.hh	/^        flock = 131,$/;"	e	enum:SystemCalls::__anon102
floorLog2	src/base/intmath.hh	/^floorLog2(int x)$/;"	f
floorLog2	src/base/intmath.hh	/^floorLog2(long long x)$/;"	f
floorLog2	src/base/intmath.hh	/^floorLog2(long x)$/;"	f
floorLog2	src/base/intmath.hh	/^floorLog2(unsigned long long x)$/;"	f
floorLog2	src/base/intmath.hh	/^floorLog2(unsigned long x)$/;"	f
floorLog2	src/base/intmath.hh	/^floorLog2(unsigned x)$/;"	f
floorPow2	src/base/intmath.hh	/^floorPow2(T n)$/;"	f
flow	src/base/inet.hh	/^    uint32_t flow() const { return ntohl(ip6_flow); }$/;"	f	struct:Net::Ip6Hdr
flrc	src/dev/pcireg.h	/^        Bitfield<28>    flrc;$/;"	m	struct:PXCAP
flush	src/base/circlebuf.cc	/^CircleBuf::flush()$/;"	f	class:CircleBuf
flushAddr	src/arch/alpha/tlb.cc	/^TLB::flushAddr(Addr addr, uint8_t asn)$/;"	f	class:AlphaISA::TLB
flushAll	src/arch/alpha/tlb.cc	/^TLB::flushAll()$/;"	f	class:AlphaISA::TLB
flushAll	src/arch/arm/tlb.hh	/^    void flushAll()$/;"	f	class:ArmISA::TLB
flushAll	src/arch/mips/tlb.cc	/^TLB::flushAll()$/;"	f	class:TLB
flushAll	src/arch/power/tlb.cc	/^TLB::flushAll()$/;"	f	class:TLB
flushAll	src/arch/sparc/tlb.cc	/^TLB::flushAll()$/;"	f	class:SparcISA::TLB
flushAll	src/arch/x86/tlb.cc	/^TLB::flushAll()$/;"	f	class:X86ISA::TLB
flushAllNs	src/arch/arm/tlb.cc	/^TLB::flushAllNs(bool hyp, uint8_t target_el, bool ignore_el)$/;"	f	class:TLB
flushAllSecurity	src/arch/arm/tlb.cc	/^TLB::flushAllSecurity(bool secure_lookup, uint8_t target_el, bool ignore_el)$/;"	f	class:TLB
flushAsid	src/arch/arm/tlb.cc	/^TLB::flushAsid(uint64_t asn, bool secure_lookup, uint8_t target_el)$/;"	f	class:TLB
flushCache	src/arch/alpha/tlb.hh	/^    flushCache()$/;"	f	class:AlphaISA::TLB
flushCoalescedMMIO	src/cpu/kvm/base.cc	/^BaseKvmCPU::flushCoalescedMMIO()$/;"	f	class:BaseKvmCPU
flushMva	src/arch/arm/tlb.cc	/^TLB::flushMva(Addr mva, bool secure_lookup, bool hyp, uint8_t target_el)$/;"	f	class:TLB
flushMvaAsid	src/arch/arm/tlb.cc	/^TLB::flushMvaAsid(Addr mva, uint64_t asn, bool secure_lookup, uint8_t target_el)$/;"	f	class:TLB
flushNonGlobal	src/arch/x86/tlb.cc	/^TLB::flushNonGlobal()$/;"	f	class:X86ISA::TLB
flushProcesses	src/arch/alpha/tlb.cc	/^TLB::flushProcesses()$/;"	f	class:AlphaISA::TLB
flushTLBs	src/cpu/base.cc	/^BaseCPU::flushTLBs()$/;"	f	class:BaseCPU
flushTlb	src/arch/arm/tlb.hh	/^    mutable Stats::Scalar flushTlb;$/;"	m	class:ArmISA::TLB
flushTlbAsid	src/arch/arm/tlb.hh	/^    mutable Stats::Scalar flushTlbAsid;$/;"	m	class:ArmISA::TLB
flushTlbMva	src/arch/arm/tlb.hh	/^    mutable Stats::Scalar flushTlbMva;$/;"	m	class:ArmISA::TLB
flushTlbMvaAsid	src/arch/arm/tlb.hh	/^    mutable Stats::Scalar flushTlbMvaAsid;$/;"	m	class:ArmISA::TLB
flushToZero	src/arch/arm/insts/vfp.hh	/^flushToZero(fpType &op)$/;"	f	namespace:ArmISA
flushToZero	src/arch/arm/insts/vfp.hh	/^flushToZero(fpType &op1, fpType &op2)$/;"	f	namespace:ArmISA
flushToZero	src/arch/arm/miscregs.hh	/^        Bitfield<3, 0> flushToZero;$/;"	m	namespace:ArmISA
flushWindows	src/arch/sparc/process.cc	/^Sparc64LiveProcess::flushWindows(ThreadContext *tc)$/;"	f	class:Sparc64LiveProcess
flushWindows	src/arch/sparc/process.cc	/^void Sparc32LiveProcess::flushWindows(ThreadContext *tc)$/;"	f	class:Sparc32LiveProcess
flush_left	src/base/cprintf_formats.hh	/^    bool flush_left;$/;"	m	struct:cp::Format
flushedEntries	src/arch/arm/tlb.hh	/^    mutable Stats::Scalar flushedEntries;$/;"	m	class:ArmISA::TLB
fm	src/arch/arm/types.hh	/^        Bitfield<3,  0>  fm;$/;"	m	namespace:ArmISA
fm	src/dev/pcireg.h	/^        Bitfield<14>    fm;$/;"	m	struct:MSIXCAP
fmo	src/arch/arm/miscregs.hh	/^        Bitfield<3>      fmo;$/;"	m	namespace:ArmISA
fmt	src/base/cprintf.hh	/^    Format fmt;$/;"	m	struct:cp::Print
fn	src/arch/arm/types.hh	/^        Bitfield<18, 16> fn;$/;"	m	namespace:ArmISA
foldABit	src/arch/x86/insts/microldstop.hh	/^        RegIndex foldOBit, foldABit;$/;"	m	class:X86ISA::LdStOp
foldOBit	src/arch/x86/insts/microldstop.hh	/^        RegIndex foldOBit, foldABit;$/;"	m	class:X86ISA::LdStOp
foldOBit	src/arch/x86/insts/micromediaop.hh	/^        static const RegIndex foldOBit = 0;$/;"	m	class:X86ISA::MediaOpBase
foldOBit	src/arch/x86/insts/microregop.hh	/^        RegIndex foldOBit;$/;"	m	class:X86ISA::RegOpBase
fonr	src/arch/alpha/pagetable.hh	/^    bool fonr;              \/\/ fault on read$/;"	m	struct:AlphaISA::TlbEntry
fonw	src/arch/alpha/pagetable.hh	/^    bool fonw;              \/\/ fault on write$/;"	m	struct:AlphaISA::TlbEntry
for	src/python/m5/proxy.py	/^import params # for EthernetAddr$/;"	i
forEachBlk	src/mem/cache/tags/fa_lru.hh	/^    void forEachBlk(V &visitor) {$/;"	f	class:FALRU
forEachBlk	src/mem/cache/tags/lru.hh	/^    void forEachBlk(V &visitor) {$/;"	f	class:LRU
forceSegAccessed	src/cpu/kvm/x86_cpu.cc	/^forceSegAccessed(struct kvm_segment &seg)$/;"	f	file:
forceSubnames	src/base/stats/text.cc	/^    bool forceSubnames;$/;"	m	struct:Stats::VectorPrint	file:
force_clock_low	src/dev/arm/kmi.hh	/^        Bitfield<0> force_clock_low;$/;"	m	class:Pl050
force_data_low	src/dev/arm/kmi.hh	/^        Bitfield<1> force_data_low;$/;"	m	class:Pl050
fork	src/kern/linux/linux_syscalls.hh	/^    fork = 48,$/;"	e	enum:SystemCalls::__anon87
fork	src/kern/tru64/tru64_syscalls.hh	/^        fork = 2,$/;"	e	enum:SystemCalls::__anon102
forkThread	src/arch/mips/mt.hh	/^forkThread(TC *tc, Fault &fault, int Rd_bits, int Rs, int Rt)$/;"	f	namespace:MipsISA
format	src/arch/arm/miscregs.hh	/^      Bitfield<31,29> format;$/;"	m	namespace:ArmISA
format	src/base/cprintf.hh	/^    const char *format;$/;"	m	struct:cp::Print
format	src/base/cprintf_formats.hh	/^    enum { none, string, integer, character, floating } format;$/;"	m	struct:cp::Format	typeref:enum:cp::Format::__anon38
format24h	src/dev/mc146818.hh	/^        Bitfield<1> format24h; \/\/\/ 0 = 12 hours, 1 = 24 hours$/;"	m	class:MC146818
formatShorthand	src/mem/slicc/generate/html.py	/^def formatShorthand(short):$/;"	f
format_char	src/base/cprintf_formats.hh	/^format_char(std::ostream &out, char data, Format &fmt)$/;"	f	namespace:cp
format_char	src/base/cprintf_formats.hh	/^format_char(std::ostream &out, const T &data, Format &fmt)$/;"	f	namespace:cp
format_char	src/base/cprintf_formats.hh	/^format_char(std::ostream &out, int data, Format &fmt)$/;"	f	namespace:cp
format_char	src/base/cprintf_formats.hh	/^format_char(std::ostream &out, long data, Format &fmt)$/;"	f	namespace:cp
format_char	src/base/cprintf_formats.hh	/^format_char(std::ostream &out, long long data, Format &fmt)$/;"	f	namespace:cp
format_char	src/base/cprintf_formats.hh	/^format_char(std::ostream &out, short data, Format &fmt)$/;"	f	namespace:cp
format_char	src/base/cprintf_formats.hh	/^format_char(std::ostream &out, signed char data, Format &fmt)$/;"	f	namespace:cp
format_char	src/base/cprintf_formats.hh	/^format_char(std::ostream &out, unsigned char data, Format &fmt)$/;"	f	namespace:cp
format_char	src/base/cprintf_formats.hh	/^format_char(std::ostream &out, unsigned int data, Format &fmt)$/;"	f	namespace:cp
format_char	src/base/cprintf_formats.hh	/^format_char(std::ostream &out, unsigned long data, Format &fmt)$/;"	f	namespace:cp
format_char	src/base/cprintf_formats.hh	/^format_char(std::ostream &out, unsigned long long data, Format &fmt)$/;"	f	namespace:cp
format_char	src/base/cprintf_formats.hh	/^format_char(std::ostream &out, unsigned short data, Format &fmt)$/;"	f	namespace:cp
format_float	src/base/cprintf_formats.hh	/^format_float(std::ostream &out, const T &data, Format &fmt)$/;"	f	namespace:cp
format_float	src/base/cprintf_formats.hh	/^format_float(std::ostream &out, double data, Format &fmt)$/;"	f	namespace:cp
format_float	src/base/cprintf_formats.hh	/^format_float(std::ostream &out, float data, Format &fmt)$/;"	f	namespace:cp
format_integer	src/base/cprintf_formats.hh	/^format_integer(std::ostream &out, char data, Format &fmt)$/;"	f	namespace:cp
format_integer	src/base/cprintf_formats.hh	/^format_integer(std::ostream &out, const T &data, Format &fmt)$/;"	f	namespace:cp
format_integer	src/base/cprintf_formats.hh	/^format_integer(std::ostream &out, signed char data, Format &fmt)$/;"	f	namespace:cp
format_integer	src/base/cprintf_formats.hh	/^format_integer(std::ostream &out, unsigned char data, Format &fmt)$/;"	f	namespace:cp
format_string	src/base/cprintf_formats.hh	/^format_string(std::ostream &out, const T &data, Format &fmt)$/;"	f	namespace:cp
format_string	src/base/cprintf_formats.hh	/^format_string(std::ostream &out, const std::stringstream &data, Format &fmt)$/;"	f	namespace:cp
formattedArea	src/arch/x86/bios/smbios.cc	/^        SMBiosHeader::formattedArea[] = {0,0,0,0,0};$/;"	m	class:X86ISA::SMBios::SMBiosTable::SMBiosHeader	file:
formattedArea	src/arch/x86/bios/smbios.hh	/^        static const uint8_t formattedArea[5];$/;"	m	struct:X86ISA::SMBios::SMBiosTable::SMBiosHeader
formula	src/base/statistics.hh	/^    const Formula &formula;$/;"	m	class:Stats::FormulaNode
forw	src/kern/tru64/mbuf.hh	/^        Addr    forw, back;     \/\/ 0x20, 0x28$/;"	m	struct:tru64::m_ext::ext_refq
forwardAtomic	src/mem/coherent_bus.cc	/^CoherentBus::forwardAtomic(PacketPtr pkt, PortID exclude_slave_port_id)$/;"	f	class:CoherentBus
forwardComSize	src/cpu/o3/O3CPU.py	/^    forwardComSize = Param.Unsigned(5, "Time buffer size for forward communication")$/;"	v	class:DerivO3CPU
forwardFunctional	src/mem/coherent_bus.cc	/^CoherentBus::forwardFunctional(PacketPtr pkt, PortID exclude_slave_port_id)$/;"	f	class:CoherentBus
forwardOldRegs	src/cpu/o3/dyn_inst.hh	/^    void forwardOldRegs()$/;"	f	class:BaseO3DynInst
forwardSnoops	src/mem/cache/base.hh	/^    const bool forwardSnoops;$/;"	m	class:BaseCache
forwardTiming	src/mem/coherent_bus.cc	/^CoherentBus::forwardTiming(PacketPtr pkt, PortID exclude_slave_port_id)$/;"	f	class:CoherentBus
forward_snoops	src/mem/cache/BaseCache.py	/^    forward_snoops = Param.Bool(True,$/;"	v	class:BaseCache
foundIt	src/arch/arm/decoder.hh	/^    bool foundIt;$/;"	m	class:ArmISA::Decoder
fp	src/arch/mips/pra_constants.hh	/^    Bitfield<0>      fp;$/;"	m	namespace:MipsISA
fp	src/base/loader/hex_file.hh	/^    FILE *fp;$/;"	m	class:HexFile
fp128_normalise	src/arch/arm/insts/fplib.cc	/^fp128_normalise(uint64_t *mnt0, uint64_t *mnt1, int *exp)$/;"	f	namespace:ArmISA
fp16_FPConvertNaN_32	src/arch/arm/insts/fplib.cc	/^fp16_FPConvertNaN_32(uint32_t op)$/;"	f	namespace:ArmISA
fp16_FPConvertNaN_64	src/arch/arm/insts/fplib.cc	/^fp16_FPConvertNaN_64(uint64_t op)$/;"	f	namespace:ArmISA
fp16_defaultNaN	src/arch/arm/insts/fplib.cc	/^fp16_defaultNaN()$/;"	f	namespace:ArmISA
fp16_infinity	src/arch/arm/insts/fplib.cc	/^fp16_infinity(int sgn)$/;"	f	namespace:ArmISA
fp16_max_normal	src/arch/arm/insts/fplib.cc	/^fp16_max_normal(int sgn)$/;"	f	namespace:ArmISA
fp16_normalise	src/arch/arm/insts/fplib.cc	/^fp16_normalise(uint16_t mnt, int *exp)$/;"	f	namespace:ArmISA
fp16_pack	src/arch/arm/insts/fplib.cc	/^fp16_pack(uint16_t sgn, uint16_t exp, uint16_t mnt)$/;"	f	namespace:ArmISA
fp16_round_	src/arch/arm/insts/fplib.cc	/^fp16_round_(int sgn, int exp, uint16_t mnt, int rm, int mode, int *flags)$/;"	f	namespace:ArmISA
fp16_unpack	src/arch/arm/insts/fplib.cc	/^fp16_unpack(int *sgn, int *exp, uint16_t *mnt, uint16_t x, int mode,$/;"	f	namespace:ArmISA
fp16_zero	src/arch/arm/insts/fplib.cc	/^fp16_zero(int sgn)$/;"	f	namespace:ArmISA
fp32_FPConvertNaN_16	src/arch/arm/insts/fplib.cc	/^fp32_FPConvertNaN_16(uint16_t op)$/;"	f	namespace:ArmISA
fp32_FPConvertNaN_64	src/arch/arm/insts/fplib.cc	/^fp32_FPConvertNaN_64(uint64_t op)$/;"	f	namespace:ArmISA
fp32_FPOnePointFive	src/arch/arm/insts/fplib.cc	/^fp32_FPOnePointFive(int sgn)$/;"	f	namespace:ArmISA
fp32_FPThree	src/arch/arm/insts/fplib.cc	/^fp32_FPThree(int sgn)$/;"	f	namespace:ArmISA
fp32_FPTwo	src/arch/arm/insts/fplib.cc	/^fp32_FPTwo(int sgn)$/;"	f	namespace:ArmISA
fp32_add	src/arch/arm/insts/fplib.cc	/^fp32_add(uint32_t a, uint32_t b, int neg, int mode, int *flags)$/;"	f	namespace:ArmISA
fp32_compare_eq	src/arch/arm/insts/fplib.cc	/^fp32_compare_eq(uint32_t a, uint32_t b, int mode, int *flags)$/;"	f	namespace:ArmISA
fp32_compare_ge	src/arch/arm/insts/fplib.cc	/^fp32_compare_ge(uint32_t a, uint32_t b, int mode, int *flags)$/;"	f	namespace:ArmISA
fp32_compare_gt	src/arch/arm/insts/fplib.cc	/^fp32_compare_gt(uint32_t a, uint32_t b, int mode, int *flags)$/;"	f	namespace:ArmISA
fp32_cvtf	src/arch/arm/insts/fplib.cc	/^fp32_cvtf(uint64_t a, int fbits, int u, int mode, int *flags)$/;"	f	namespace:ArmISA
fp32_defaultNaN	src/arch/arm/insts/fplib.cc	/^fp32_defaultNaN()$/;"	f	namespace:ArmISA
fp32_div	src/arch/arm/insts/fplib.cc	/^fp32_div(uint32_t a, uint32_t b, int mode, int *flags)$/;"	f	namespace:ArmISA
fp32_infinity	src/arch/arm/insts/fplib.cc	/^fp32_infinity(int sgn)$/;"	f	namespace:ArmISA
fp32_max_normal	src/arch/arm/insts/fplib.cc	/^fp32_max_normal(int sgn)$/;"	f	namespace:ArmISA
fp32_minmaxnum	src/arch/arm/insts/fplib.cc	/^fp32_minmaxnum(uint32_t *op1, uint32_t *op2, int sgn)$/;"	f	namespace:ArmISA
fp32_mul	src/arch/arm/insts/fplib.cc	/^fp32_mul(uint32_t a, uint32_t b, int mode, int *flags)$/;"	f	namespace:ArmISA
fp32_muladd	src/arch/arm/insts/fplib.cc	/^fp32_muladd(uint32_t a, uint32_t b, uint32_t c, int scale,$/;"	f	namespace:ArmISA
fp32_normalise	src/arch/arm/insts/fplib.cc	/^fp32_normalise(uint32_t mnt, int *exp)$/;"	f	namespace:ArmISA
fp32_pack	src/arch/arm/insts/fplib.cc	/^fp32_pack(uint32_t sgn, uint32_t exp, uint32_t mnt)$/;"	f	namespace:ArmISA
fp32_process_NaN	src/arch/arm/insts/fplib.cc	/^fp32_process_NaN(uint32_t a, int mode, int *flags)$/;"	f	namespace:ArmISA
fp32_process_NaNs	src/arch/arm/insts/fplib.cc	/^fp32_process_NaNs(uint32_t a, uint32_t b, int mode, int *flags)$/;"	f	namespace:ArmISA
fp32_process_NaNs3	src/arch/arm/insts/fplib.cc	/^fp32_process_NaNs3(uint32_t a, uint32_t b, uint32_t c, int mode, int *flags)$/;"	f	namespace:ArmISA
fp32_repack	src/arch/arm/insts/fplib.cc	/^fp32_repack(int sgn, int exp, uint32_t mnt)$/;"	f	namespace:ArmISA
fp32_round	src/arch/arm/insts/fplib.cc	/^fp32_round(int sgn, int exp, uint32_t mnt, int mode, int *flags)$/;"	f	namespace:ArmISA
fp32_round_	src/arch/arm/insts/fplib.cc	/^fp32_round_(int sgn, int exp, uint32_t mnt, int rm, int mode, int *flags)$/;"	f	namespace:ArmISA
fp32_sqrt	src/arch/arm/insts/fplib.cc	/^fp32_sqrt(uint32_t a, int mode, int *flags)$/;"	f	namespace:ArmISA
fp32_unpack	src/arch/arm/insts/fplib.cc	/^fp32_unpack(int *sgn, int *exp, uint32_t *mnt, uint32_t x, int mode,$/;"	f	namespace:ArmISA
fp32_zero	src/arch/arm/insts/fplib.cc	/^fp32_zero(int sgn)$/;"	f	namespace:ArmISA
fp64_FPConvertNaN_16	src/arch/arm/insts/fplib.cc	/^fp64_FPConvertNaN_16(uint16_t op)$/;"	f	namespace:ArmISA
fp64_FPConvertNaN_32	src/arch/arm/insts/fplib.cc	/^fp64_FPConvertNaN_32(uint32_t op)$/;"	f	namespace:ArmISA
fp64_FPOnePointFive	src/arch/arm/insts/fplib.cc	/^fp64_FPOnePointFive(int sgn)$/;"	f	namespace:ArmISA
fp64_FPThree	src/arch/arm/insts/fplib.cc	/^fp64_FPThree(int sgn)$/;"	f	namespace:ArmISA
fp64_FPTwo	src/arch/arm/insts/fplib.cc	/^fp64_FPTwo(int sgn)$/;"	f	namespace:ArmISA
fp64_add	src/arch/arm/insts/fplib.cc	/^fp64_add(uint64_t a, uint64_t b, int neg, int mode, int *flags)$/;"	f	namespace:ArmISA
fp64_compare_eq	src/arch/arm/insts/fplib.cc	/^fp64_compare_eq(uint64_t a, uint64_t b, int mode, int *flags)$/;"	f	namespace:ArmISA
fp64_compare_ge	src/arch/arm/insts/fplib.cc	/^fp64_compare_ge(uint64_t a, uint64_t b, int mode, int *flags)$/;"	f	namespace:ArmISA
fp64_compare_gt	src/arch/arm/insts/fplib.cc	/^fp64_compare_gt(uint64_t a, uint64_t b, int mode, int *flags)$/;"	f	namespace:ArmISA
fp64_cvtf	src/arch/arm/insts/fplib.cc	/^fp64_cvtf(uint64_t a, int fbits, int u, int mode, int *flags)$/;"	f	namespace:ArmISA
fp64_defaultNaN	src/arch/arm/insts/fplib.cc	/^fp64_defaultNaN()$/;"	f	namespace:ArmISA
fp64_div	src/arch/arm/insts/fplib.cc	/^fp64_div(uint64_t a, uint64_t b, int mode, int *flags)$/;"	f	namespace:ArmISA
fp64_infinity	src/arch/arm/insts/fplib.cc	/^fp64_infinity(int sgn)$/;"	f	namespace:ArmISA
fp64_max_normal	src/arch/arm/insts/fplib.cc	/^fp64_max_normal(int sgn)$/;"	f	namespace:ArmISA
fp64_minmaxnum	src/arch/arm/insts/fplib.cc	/^fp64_minmaxnum(uint64_t *op1, uint64_t *op2, int sgn)$/;"	f	namespace:ArmISA
fp64_mul	src/arch/arm/insts/fplib.cc	/^fp64_mul(uint64_t a, uint64_t b, int mode, int *flags)$/;"	f	namespace:ArmISA
fp64_muladd	src/arch/arm/insts/fplib.cc	/^fp64_muladd(uint64_t a, uint64_t b, uint64_t c, int scale,$/;"	f	namespace:ArmISA
fp64_normalise	src/arch/arm/insts/fplib.cc	/^fp64_normalise(uint64_t mnt, int *exp)$/;"	f	namespace:ArmISA
fp64_pack	src/arch/arm/insts/fplib.cc	/^fp64_pack(uint64_t sgn, uint64_t exp, uint64_t mnt)$/;"	f	namespace:ArmISA
fp64_process_NaN	src/arch/arm/insts/fplib.cc	/^fp64_process_NaN(uint64_t a, int mode, int *flags)$/;"	f	namespace:ArmISA
fp64_process_NaNs	src/arch/arm/insts/fplib.cc	/^fp64_process_NaNs(uint64_t a, uint64_t b, int mode, int *flags)$/;"	f	namespace:ArmISA
fp64_process_NaNs3	src/arch/arm/insts/fplib.cc	/^fp64_process_NaNs3(uint64_t a, uint64_t b, uint64_t c, int mode, int *flags)$/;"	f	namespace:ArmISA
fp64_repack	src/arch/arm/insts/fplib.cc	/^fp64_repack(int sgn, int exp, uint64_t mnt)$/;"	f	namespace:ArmISA
fp64_round	src/arch/arm/insts/fplib.cc	/^fp64_round(int sgn, int exp, uint64_t mnt, int mode, int *flags)$/;"	f	namespace:ArmISA
fp64_round_	src/arch/arm/insts/fplib.cc	/^fp64_round_(int sgn, int exp, uint64_t mnt, int rm, int mode, int *flags)$/;"	f	namespace:ArmISA
fp64_sqrt	src/arch/arm/insts/fplib.cc	/^fp64_sqrt(uint64_t a, int mode, int *flags)$/;"	f	namespace:ArmISA
fp64_unpack	src/arch/arm/insts/fplib.cc	/^fp64_unpack(int *sgn, int *exp, uint64_t *mnt, uint64_t x, int mode,$/;"	f	namespace:ArmISA
fp64_zero	src/arch/arm/insts/fplib.cc	/^fp64_zero(int sgn)$/;"	f	namespace:ArmISA
fpAdd	src/arch/arm/insts/vfp.hh	/^fpAdd(T a, T b)$/;"	f	namespace:ArmISA
fpAddD	src/arch/arm/insts/vfp.hh	/^fpAddD(double a, double b)$/;"	f	namespace:ArmISA
fpAddS	src/arch/arm/insts/vfp.hh	/^fpAddS(float a, float b)$/;"	f	namespace:ArmISA
fpAluAccesses	src/cpu/o3/inst_queue.hh	/^    Stats::Scalar fpAluAccesses;$/;"	m	class:InstructionQueue
fpConvert	src/arch/mips/utility.cc	/^fpConvert(ConvertType cvt_type, double fp_val)$/;"	f	namespace:MipsISA
fpDiv	src/arch/arm/insts/vfp.hh	/^fpDiv(T a, T b)$/;"	f	namespace:ArmISA
fpDivD	src/arch/arm/insts/vfp.hh	/^fpDivD(double a, double b)$/;"	f	namespace:ArmISA
fpDivS	src/arch/arm/insts/vfp.hh	/^fpDivS(float a, float b)$/;"	f	namespace:ArmISA
fpImm	src/arch/arm/types.hh	/^        Bitfield<2,  0>  fpImm;$/;"	m	namespace:ArmISA
fpInstQueueReads	src/cpu/o3/inst_queue.hh	/^    Stats::Scalar fpInstQueueReads;$/;"	m	class:InstructionQueue
fpInstQueueWakeupQccesses	src/cpu/o3/inst_queue.hh	/^    Stats::Scalar fpInstQueueWakeupQccesses;$/;"	m	class:InstructionQueue
fpInstQueueWrites	src/cpu/o3/inst_queue.hh	/^    Stats::Scalar fpInstQueueWrites;$/;"	m	class:InstructionQueue
fpMax	src/arch/arm/insts/vfp.hh	/^fpMax(T a, T b)$/;"	f	namespace:ArmISA
fpMaxNum	src/arch/arm/insts/vfp.hh	/^fpMaxNum(T a, T b)$/;"	f	namespace:ArmISA
fpMin	src/arch/arm/insts/vfp.hh	/^fpMin(T a, T b)$/;"	f	namespace:ArmISA
fpMinNum	src/arch/arm/insts/vfp.hh	/^fpMinNum(T a, T b)$/;"	f	namespace:ArmISA
fpMul	src/arch/arm/insts/vfp.hh	/^fpMul(T a, T b)$/;"	f	namespace:ArmISA
fpMulAdd	src/arch/arm/insts/vfp.hh	/^fpMulAdd(T op1, T op2, T addend)$/;"	f	namespace:ArmISA
fpMulD	src/arch/arm/insts/vfp.hh	/^fpMulD(double a, double b)$/;"	f	namespace:ArmISA
fpMulS	src/arch/arm/insts/vfp.hh	/^fpMulS(float a, float b)$/;"	f	namespace:ArmISA
fpMulX	src/arch/arm/insts/vfp.hh	/^fpMulX(T a, T b)$/;"	f	namespace:ArmISA
fpRIntX	src/arch/arm/insts/vfp.hh	/^fpRIntX(T a, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fpRSqrts	src/arch/arm/insts/vfp.hh	/^fpRSqrts(T a, T b)$/;"	f	namespace:ArmISA
fpRSqrtsS	src/arch/arm/insts/vfp.hh	/^fpRSqrtsS(float a, float b)$/;"	f	namespace:ArmISA
fpRecipEstimate	src/arch/arm/insts/vfp.cc	/^fpRecipEstimate(FPSCR &fpscr, float op)$/;"	f	namespace:ArmISA
fpRecps	src/arch/arm/insts/vfp.hh	/^fpRecps(T a, T b)$/;"	f	namespace:ArmISA
fpRecpsS	src/arch/arm/insts/vfp.hh	/^fpRecpsS(float a, float b)$/;"	f	namespace:ArmISA
fpReg	src/arch/x86/registers.hh	/^    FloatReg fpReg;$/;"	m	union:X86ISA::__anon35
fpRegImm	src/arch/arm/types.hh	/^        Bitfield<3>      fpRegImm;$/;"	m	namespace:ArmISA
fpRegfileReads	src/cpu/o3/cpu.hh	/^    Stats::Scalar fpRegfileReads;$/;"	m	class:FullO3CPU
fpRegfileWrites	src/cpu/o3/cpu.hh	/^    Stats::Scalar fpRegfileWrites;$/;"	m	class:FullO3CPU
fpRenameLookups	src/cpu/o3/rename.hh	/^    Stats::Scalar fpRenameLookups;$/;"	m	class:DefaultRename
fpSqrt	src/arch/arm/insts/vfp.hh	/^    fpSqrt (FPSCR fpscr,double x) const$/;"	f	class:ArmISA::FpOp
fpSqrt	src/arch/arm/insts/vfp.hh	/^    fpSqrt (FPSCR fpscr,float x) const$/;"	f	class:ArmISA::FpOp
fpSub	src/arch/arm/insts/vfp.hh	/^fpSub(T a, T b)$/;"	f	namespace:ArmISA
fpSubD	src/arch/arm/insts/vfp.hh	/^fpSubD(double a, double b)$/;"	f	namespace:ArmISA
fpSubS	src/arch/arm/insts/vfp.hh	/^fpSubS(float a, float b)$/;"	f	namespace:ArmISA
fpToBits	src/arch/arm/insts/vfp.hh	/^fpToBits(double fp)$/;"	f	namespace:ArmISA
fpToBits	src/arch/arm/insts/vfp.hh	/^fpToBits(float fp)$/;"	f	namespace:ArmISA
fpVal	src/cpu/inorder/inorder_dyn_inst.hh	/^        } fpVal;$/;"	m	struct:InOrderDynInst::InstValue	typeref:union:InOrderDynInst::InstValue::__anon51
fpZeroRegIdx	src/cpu/o3/scoreboard.hh	/^    PhysRegIndex fpZeroRegIdx;$/;"	m	class:Scoreboard
fpathconf	src/kern/tru64/tru64_syscalls.hh	/^        fpathconf = 248,$/;"	e	enum:SystemCalls::__anon102
fpcr	src/arch/alpha/isa.hh	/^        uint64_t fpcr;       \/\/ floating point condition codes$/;"	m	class:AlphaISA::ISA
fpen	src/arch/arm/miscregs.hh	/^        Bitfield<21, 20> fpen;  \/\/ AArch64$/;"	m	namespace:ArmISA
fplibAbs	src/arch/arm/insts/fplib.cc	/^fplibAbs(uint32_t op)$/;"	f	namespace:ArmISA
fplibAbs	src/arch/arm/insts/fplib.cc	/^fplibAbs(uint64_t op)$/;"	f	namespace:ArmISA
fplibAdd	src/arch/arm/insts/fplib.cc	/^fplibAdd(uint32_t op1, uint32_t op2, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibAdd	src/arch/arm/insts/fplib.cc	/^fplibAdd(uint64_t op1, uint64_t op2, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibCompare	src/arch/arm/insts/fplib.cc	/^fplibCompare(uint32_t op1, uint32_t op2, bool signal_nans, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibCompare	src/arch/arm/insts/fplib.cc	/^fplibCompare(uint64_t op1, uint64_t op2, bool signal_nans, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibCompareEQ	src/arch/arm/insts/fplib.cc	/^fplibCompareEQ(uint32_t a, uint32_t b, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibCompareEQ	src/arch/arm/insts/fplib.cc	/^fplibCompareEQ(uint64_t a, uint64_t b, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibCompareGE	src/arch/arm/insts/fplib.cc	/^fplibCompareGE(uint32_t a, uint32_t b, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibCompareGE	src/arch/arm/insts/fplib.cc	/^fplibCompareGE(uint64_t a, uint64_t b, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibCompareGT	src/arch/arm/insts/fplib.cc	/^fplibCompareGT(uint32_t a, uint32_t b, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibCompareGT	src/arch/arm/insts/fplib.cc	/^fplibCompareGT(uint64_t a, uint64_t b, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibConvert	src/arch/arm/insts/fplib.cc	/^fplibConvert(uint16_t op, FPRounding rounding, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibConvert	src/arch/arm/insts/fplib.cc	/^fplibConvert(uint32_t op, FPRounding rounding, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibConvert	src/arch/arm/insts/fplib.cc	/^fplibConvert(uint64_t op, FPRounding rounding, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibDiv	src/arch/arm/insts/fplib.cc	/^fplibDiv(uint32_t op1, uint32_t op2, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibDiv	src/arch/arm/insts/fplib.cc	/^fplibDiv(uint64_t op1, uint64_t op2, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibFPToFixed	src/arch/arm/insts/fplib.cc	/^fplibFPToFixed(uint32_t op, int fbits, bool u, FPRounding rounding, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibFPToFixed	src/arch/arm/insts/fplib.cc	/^fplibFPToFixed(uint64_t op, int fbits, bool u, FPRounding rounding, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibFixedToFP	src/arch/arm/insts/fplib.cc	/^fplibFixedToFP(uint64_t op, int fbits, bool u, FPRounding rounding, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibMax	src/arch/arm/insts/fplib.cc	/^fplibMax(uint32_t op1, uint32_t op2, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibMax	src/arch/arm/insts/fplib.cc	/^fplibMax(uint64_t op1, uint64_t op2, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibMaxNum	src/arch/arm/insts/fplib.cc	/^fplibMaxNum(uint32_t op1, uint32_t op2, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibMaxNum	src/arch/arm/insts/fplib.cc	/^fplibMaxNum(uint64_t op1, uint64_t op2, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibMin	src/arch/arm/insts/fplib.cc	/^fplibMin(uint32_t op1, uint32_t op2, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibMin	src/arch/arm/insts/fplib.cc	/^fplibMin(uint64_t op1, uint64_t op2, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibMinNum	src/arch/arm/insts/fplib.cc	/^fplibMinNum(uint32_t op1, uint32_t op2, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibMinNum	src/arch/arm/insts/fplib.cc	/^fplibMinNum(uint64_t op1, uint64_t op2, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibMul	src/arch/arm/insts/fplib.cc	/^fplibMul(uint32_t op1, uint32_t op2, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibMul	src/arch/arm/insts/fplib.cc	/^fplibMul(uint64_t op1, uint64_t op2, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibMulAdd	src/arch/arm/insts/fplib.cc	/^fplibMulAdd(uint32_t addend, uint32_t op1, uint32_t op2, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibMulAdd	src/arch/arm/insts/fplib.cc	/^fplibMulAdd(uint64_t addend, uint64_t op1, uint64_t op2, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibMulX	src/arch/arm/insts/fplib.cc	/^fplibMulX(uint32_t op1, uint32_t op2, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibMulX	src/arch/arm/insts/fplib.cc	/^fplibMulX(uint64_t op1, uint64_t op2, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibNeg	src/arch/arm/insts/fplib.cc	/^fplibNeg(uint32_t op)$/;"	f	namespace:ArmISA
fplibNeg	src/arch/arm/insts/fplib.cc	/^fplibNeg(uint64_t op)$/;"	f	namespace:ArmISA
fplibRSqrtEstimate	src/arch/arm/insts/fplib.cc	/^fplibRSqrtEstimate(uint32_t op, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibRSqrtEstimate	src/arch/arm/insts/fplib.cc	/^fplibRSqrtEstimate(uint64_t op, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibRSqrtStepFused	src/arch/arm/insts/fplib.cc	/^fplibRSqrtStepFused(uint32_t op1, uint32_t op2, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibRSqrtStepFused	src/arch/arm/insts/fplib.cc	/^fplibRSqrtStepFused(uint64_t op1, uint64_t op2, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibRecipEstimate	src/arch/arm/insts/fplib.cc	/^fplibRecipEstimate(uint32_t op, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibRecipEstimate	src/arch/arm/insts/fplib.cc	/^fplibRecipEstimate(uint64_t op, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibRecipStepFused	src/arch/arm/insts/fplib.cc	/^fplibRecipStepFused(uint32_t op1, uint32_t op2, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibRecipStepFused	src/arch/arm/insts/fplib.cc	/^fplibRecipStepFused(uint64_t op1, uint64_t op2, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibRecpX	src/arch/arm/insts/fplib.cc	/^fplibRecpX(uint32_t op, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibRecpX	src/arch/arm/insts/fplib.cc	/^fplibRecpX(uint64_t op, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibRoundInt	src/arch/arm/insts/fplib.cc	/^fplibRoundInt(uint32_t op, FPRounding rounding, bool exact, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibRoundInt	src/arch/arm/insts/fplib.cc	/^fplibRoundInt(uint64_t op, FPRounding rounding, bool exact, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibSqrt	src/arch/arm/insts/fplib.cc	/^fplibSqrt(uint32_t op, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibSqrt	src/arch/arm/insts/fplib.cc	/^fplibSqrt(uint64_t op, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibSub	src/arch/arm/insts/fplib.cc	/^fplibSub(uint32_t op1, uint32_t op2, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fplibSub	src/arch/arm/insts/fplib.cc	/^fplibSub(uint64_t op1, uint64_t op2, FPSCR &fpscr)$/;"	f	namespace:ArmISA
fpr	src/cpu/kvm/x86_cpu.cc	/^    uint8_t fpr[8][16];$/;"	m	struct:FXSave	file:
fprSqrtEstimate	src/arch/arm/insts/vfp.cc	/^fprSqrtEstimate(FPSCR &fpscr, float op)$/;"	f	namespace:ArmISA
fpreg	src/arch/alpha/registers.hh	/^    FloatReg   fpreg;$/;"	m	union:AlphaISA::AnyReg
fpreg	src/arch/arm/registers.hh	/^    FloatReg fpreg;$/;"	m	union:ArmISA::__anon12
fpreg	src/arch/mips/registers.hh	/^    FloatReg fpreg;$/;"	m	union:MipsISA::__anon21
fpreg	src/arch/power/registers.hh	/^    FloatReg fpreg;$/;"	m	union:PowerISA::__anon24
fpreg	src/arch/sparc/registers.hh	/^    FloatReg fpreg;$/;"	m	union:SparcISA::__anon29
fpregs	src/cpu/m5legion_interface.h	/^    uint64_t fpregs[32];$/;"	m	struct:__anon55
fprmask	src/arch/alpha/aout_machdep.h	/^    uint32_t    fprmask;        \/\/\/< FPR mask (unused, AFAIK)$/;"	m	struct:aout_exechdr
fprs	src/arch/sparc/isa.hh	/^    uint8_t fprs;           \/\/ Floating-Point Register State$/;"	m	class:SparcISA::ISA
fpscrLen	src/arch/arm/decoder.hh	/^    int fpscrLen;$/;"	m	class:ArmISA::Decoder
fpscrLen	src/arch/arm/types.hh	/^        Bitfield<39, 37> fpscrLen;$/;"	m	namespace:ArmISA
fpscrStride	src/arch/arm/decoder.hh	/^    int fpscrStride;$/;"	m	class:ArmISA::Decoder
fpscrStride	src/arch/arm/types.hh	/^        Bitfield<41, 40> fpscrStride;$/;"	m	namespace:ArmISA
fpsid	src/arch/arm/ArmISA.py	/^    fpsid = Param.UInt32(0x410430a0, "Floating-point System ID Register")$/;"	v	class:ArmISA
fpu_cs	src/cpu/kvm/x86_cpu.cc	/^            uint16_t fpu_cs;$/;"	m	struct:FXSave::__anon52::__anon53	file:
fpu_dp	src/cpu/kvm/x86_cpu.cc	/^            uint32_t fpu_dp;$/;"	m	struct:FXSave::__anon52::__anon53	file:
fpu_dp	src/cpu/kvm/x86_cpu.cc	/^            uint64_t fpu_dp;$/;"	m	struct:FXSave::__anon52::__anon54	file:
fpu_ds	src/cpu/kvm/x86_cpu.cc	/^            uint16_t fpu_ds;$/;"	m	struct:FXSave::__anon52::__anon53	file:
fpu_ip	src/cpu/kvm/x86_cpu.cc	/^            uint32_t fpu_ip;$/;"	m	struct:FXSave::__anon52::__anon53	file:
fpu_ip	src/cpu/kvm/x86_cpu.cc	/^            uint64_t fpu_ip;$/;"	m	struct:FXSave::__anon52::__anon54	file:
fr	src/arch/mips/pra_constants.hh	/^    Bitfield<26>     fr;$/;"	m	namespace:MipsISA
fr	src/arch/power/miscregs.hh	/^    Bitfield<18> fr;$/;"	m	namespace:PowerISA
frag_flags	src/base/inet.hh	/^    uint16_t frag_flags() const { return ntohs(ip_off) >> 13; }$/;"	f	struct:Net::IpHdr
frag_off	src/base/inet.hh	/^    uint16_t frag_off() const { return ntohs(ip_off) & 0x1fff; }$/;"	f	struct:Net::IpHdr
fragment	src/base/inet.hh	/^        struct ip6_opt_fragment fragment;$/;"	m	union:Net::ip6_opt_hdr::__anon40	typeref:struct:Net::ip6_opt_hdr::__anon40::ip6_opt_fragment
fragmentExt	src/base/inet.hh	/^    const Ip6Opt* fragmentExt() const { return getExt(IP_PROTO_FRAGMENT); }$/;"	f	struct:Net::Ip6Hdr
fragmentIdent	src/base/inet.hh	/^    uint32_t fragmentIdent() const { return ntohl(ext_data.fragment.ident); }$/;"	f	struct:Net::Ip6Opt
fragmentOfflg	src/base/inet.hh	/^    uint16_t fragmentOfflg() const { return ntohs(ext_data.fragment.offlg); }$/;"	f	struct:Net::Ip6Opt
fragments	src/cpu/simple/timing.hh	/^        PacketPtr fragments[2];$/;"	m	class:TimingSimpleCPU::SplitMainSenderState
frameReadStartTime	src/dev/arm/hdlcd.hh	/^    Tick frameReadStartTime;$/;"	m	class:HDLcd
frameRef	src/mem/slicc/symbols/StateMachine.py	/^    def frameRef(self, click_href, click_target, over_href, over_num, text):$/;"	m	class:StateMachine
frameUnderrun	src/dev/arm/hdlcd.hh	/^    bool frameUnderrun;$/;"	m	class:HDLcd
frameUnderway	src/dev/arm/hdlcd.hh	/^    bool frameUnderway;$/;"	m	class:HDLcd
frame_capture	src/base/vnc/Vnc.py	/^    frame_capture = Param.Bool(False, "capture changed frames to files")$/;"	v	class:VncInput
frameoffset	src/base/loader/coff_sym.h	/^    coff_int    frameoffset;    \/* frame size *\/$/;"	m	struct:pdr
framereg	src/base/loader/coff_sym.h	/^    coff_short  framereg;       \/* frame pointer register *\/$/;"	m	struct:pdr
freeAt	src/mem/dram_ctrl.hh	/^        Tick freeAt;$/;"	m	class:DRAMCtrl::Bank
freeEntries	src/cpu/o3/inst_queue.hh	/^    unsigned freeEntries;$/;"	m	class:InstructionQueue
freeEntries	src/cpu/o3/rename.hh	/^    FreeEntries freeEntries[Impl::MaxThreads];$/;"	m	class:DefaultRename
freeEntries	src/cpu/ozone/inst_queue.hh	/^    unsigned freeEntries;$/;"	m	class:InstQueue
freeFU	src/cpu/o3/inst_queue.hh	/^        bool freeFU;$/;"	m	class:InstructionQueue::FUCompletion
freeIQEntries	src/cpu/o3/comm.hh	/^        unsigned freeIQEntries;$/;"	m	struct:TimeBufStruct::iewComm
freeLSQEntries	src/cpu/o3/comm.hh	/^        unsigned freeLSQEntries;$/;"	m	struct:TimeBufStruct::iewComm
freeList	src/arch/sparc/tlb.hh	/^    std::list<TlbEntry*> freeList;$/;"	m	class:SparcISA::TLB
freeList	src/arch/x86/tlb.hh	/^        EntryList freeList;$/;"	m	class:X86ISA::TLB
freeList	src/cpu/o3/cpu.hh	/^    typename CPUPolicy::FreeList freeList;$/;"	m	class:FullO3CPU
freeList	src/cpu/o3/rename.hh	/^    FreeList *freeList;$/;"	m	class:DefaultRename
freeList	src/cpu/o3/rename_map.hh	/^    SimpleFreeList *freeList;$/;"	m	class:SimpleRenameMap
freeList	src/mem/cache/mshr_queue.hh	/^    MSHR::List freeList;$/;"	m	class:MSHRQueue
freeMemSize	src/sim/system.cc	/^System::freeMemSize() const$/;"	f	class:System
freeROBEntries	src/cpu/o3/comm.hh	/^        unsigned freeROBEntries; \/\/ *R$/;"	m	struct:TimeBufStruct::commitComm
freeRegs	src/cpu/o3/free_list.hh	/^    std::queue<PhysRegIndex> freeRegs;$/;"	m	class:SimpleFreeList
freeRegs	src/cpu/ozone/front_end.hh	/^    int freeRegs;$/;"	m	class:FrontEnd
freeSlot	src/cpu/inorder/resource.cc	/^Resource::freeSlot(int slot_idx)$/;"	f	class:Resource
freeSlot	src/cpu/inorder/resource.cc	/^ResourceRequest::freeSlot()$/;"	f	class:ResourceRequest
freeUnitNextCycle	src/cpu/o3/fu_pool.cc	/^FUPool::freeUnitNextCycle(int fu_idx)$/;"	f	class:FUPool
free_fd	src/sim/process.cc	/^Process::free_fd(int tgt_fd)$/;"	f	class:Process
freehigh	src/arch/alpha/linux/linux.hh	/^       uint64_t freehigh;  \/* Available high memory size *\/$/;"	m	struct:AlphaLinux::__anon2
freehigh	src/arch/arm/linux/linux.hh	/^        uint32_t freehigh;  \/* Available high memory size *\/$/;"	m	struct:ArmLinux32::__anon8
freehigh	src/arch/arm/linux/linux.hh	/^        uint64_t freehigh;  \/* Available high memory size *\/$/;"	m	struct:ArmLinux64::__anon11
freehigh	src/arch/mips/linux/linux.hh	/^       uint32_t freehigh;  \/* Available high memory size *\/$/;"	m	struct:MipsLinux::__anon20
freehigh	src/arch/sparc/linux/linux.hh	/^        uint32_t freehigh;  \/* Available high memory size *\/$/;"	m	struct:Sparc32Linux::__anon28
freehigh	src/arch/sparc/linux/linux.hh	/^        uint64_t freehigh;  \/* Available high memory size *\/$/;"	m	struct:SparcLinux::__anon26
freehigh	src/arch/x86/linux/linux.hh	/^        uint64_t freehigh;  \/* Available high memory size *\/$/;"	m	struct:X86Linux64::__anon32
freehigh	src/arch/x86/linux/linux.hh	/^       uint32_t freehigh;  \/* Available high memory size *\/$/;"	m	struct:X86Linux32::__anon34
freeram	src/arch/alpha/linux/linux.hh	/^       uint64_t freeram;   \/* Available memory size *\/$/;"	m	struct:AlphaLinux::__anon2
freeram	src/arch/arm/linux/linux.hh	/^        uint32_t freeram;   \/* Available memory size *\/$/;"	m	struct:ArmLinux32::__anon8
freeram	src/arch/arm/linux/linux.hh	/^        uint64_t freeram;   \/* Available memory size *\/$/;"	m	struct:ArmLinux64::__anon11
freeram	src/arch/mips/linux/linux.hh	/^       uint32_t freeram;   \/* Available memory size *\/$/;"	m	struct:MipsLinux::__anon20
freeram	src/arch/sparc/linux/linux.hh	/^        uint32_t freeram;   \/* Available memory size *\/$/;"	m	struct:Sparc32Linux::__anon28
freeram	src/arch/sparc/linux/linux.hh	/^        uint64_t freeram;   \/* Available memory size *\/$/;"	m	struct:SparcLinux::__anon26
freeram	src/arch/x86/linux/linux.hh	/^        uint64_t freeram;   \/* Available memory size *\/$/;"	m	struct:X86Linux64::__anon32
freeram	src/arch/x86/linux/linux.hh	/^       uint32_t freeram;   \/* Available memory size *\/$/;"	m	struct:X86Linux32::__anon34
freeswap	src/arch/alpha/linux/linux.hh	/^       uint64_t freeswap;  \/* swap space still available *\/$/;"	m	struct:AlphaLinux::__anon2
freeswap	src/arch/arm/linux/linux.hh	/^        uint32_t freeswap;  \/* swap space still available *\/$/;"	m	struct:ArmLinux32::__anon8
freeswap	src/arch/arm/linux/linux.hh	/^        uint64_t freeswap;  \/* swap space still available *\/$/;"	m	struct:ArmLinux64::__anon11
freeswap	src/arch/mips/linux/linux.hh	/^       uint32_t freeswap;  \/* swap space still available *\/$/;"	m	struct:MipsLinux::__anon20
freeswap	src/arch/sparc/linux/linux.hh	/^        uint32_t freeswap;  \/* swap space still available *\/$/;"	m	struct:Sparc32Linux::__anon28
freeswap	src/arch/sparc/linux/linux.hh	/^        uint64_t freeswap;  \/* swap space still available *\/$/;"	m	struct:SparcLinux::__anon26
freeswap	src/arch/x86/linux/linux.hh	/^        uint64_t freeswap;  \/* swap space still available *\/$/;"	m	struct:X86Linux64::__anon32
freeswap	src/arch/x86/linux/linux.hh	/^       uint32_t freeswap;  \/* swap space still available *\/$/;"	m	struct:X86Linux32::__anon34
fregmask	src/base/loader/coff_sym.h	/^    coff_uint   fregmask;       \/* save floating point register mask *\/$/;"	m	struct:pdr
fregoffset	src/base/loader/coff_sym.h	/^    coff_int    fregoffset;     \/* save floating point register offset *\/$/;"	m	struct:pdr
fremovexattr	src/kern/linux/linux_syscalls.hh	/^    fremovexattr = 49,$/;"	e	enum:SystemCalls::__anon87
freq	src/dev/arm/generic_timer.hh	/^        uint64_t freq() const { return _freq; }$/;"	f	class:GenericTimer::SystemCounter
frequency	src/dev/alpha/Tsunami.py	/^    frequency = Param.Frequency('1024Hz', "frequency of interrupts")$/;"	v	class:TsunamiIO
frequency	src/dev/alpha/tsunami_io.cc	/^TsunamiIO::frequency() const$/;"	f	class:TsunamiIO
frequency	src/dev/mips/Malta.py	/^    frequency = Param.Frequency('1024Hz', "frequency of interrupts")$/;"	v	class:MaltaIO
frequency	src/dev/mips/malta_io.cc	/^MaltaIO::frequency() const$/;"	f	class:MaltaIO
frequency	src/sim/clocked_object.hh	/^    inline uint64_t frequency() const$/;"	f	class:ClockedObject
frequency_tolerance	src/python/m5/params.py	/^frequency_tolerance = 0.001  # 0.1%$/;"	v
frequency_tolerance	src/python/m5/ticks.py	/^frequency_tolerance = 0.001  # 0.1%$/;"	v
from	src/cpu/testers/traffic_gen/traffic_gen.hh	/^        uint32_t from;$/;"	m	struct:TrafficGen::Transition
from	src/python/m5/util/jobfile.py	/^        raise ImportError, 'cannot import name conf from %s' % jobfile$/;"	i
from64	src/arch/arm/faults.hh	/^    bool from64;  \/\/ True if the exception is generated from the AArch64 state$/;"	m	class:ArmISA::ArmFault
fromCommit	src/cpu/o3/decode.hh	/^    typename TimeBuffer<TimeStruct>::wire fromCommit;$/;"	m	class:DefaultDecode
fromCommit	src/cpu/o3/fetch.hh	/^    typename TimeBuffer<TimeStruct>::wire fromCommit;$/;"	m	class:DefaultFetch
fromCommit	src/cpu/o3/iew.hh	/^    typename TimeBuffer<TimeStruct>::wire fromCommit;$/;"	m	class:DefaultIEW
fromCommit	src/cpu/o3/inst_queue.hh	/^    typename TimeBuffer<TimeStruct>::wire fromCommit;$/;"	m	class:InstructionQueue
fromCommit	src/cpu/o3/rename.hh	/^    typename TimeBuffer<TimeStruct>::wire fromCommit;$/;"	m	class:DefaultRename
fromCommit	src/cpu/ozone/back_end.hh	/^    typename TimeBuffer<CommStruct>::wire fromCommit;$/;"	m	class:BackEnd
fromCommit	src/cpu/ozone/front_end.hh	/^    typename TimeBuffer<CommStruct>::wire fromCommit;$/;"	m	class:FrontEnd
fromCommit	src/cpu/ozone/lw_back_end.hh	/^    typename TimeBuffer<CommStruct>::wire fromCommit;$/;"	m	class:LWBackEnd
fromDecode	src/cpu/o3/fetch.hh	/^    typename TimeBuffer<TimeStruct>::wire fromDecode;$/;"	m	class:DefaultFetch
fromDecode	src/cpu/o3/rename.hh	/^    typename TimeBuffer<DecodeStruct>::wire fromDecode;$/;"	m	class:DefaultRename
fromEL	src/arch/arm/faults.hh	/^    ExceptionLevel fromEL;  \/\/ Source exception level$/;"	m	class:ArmISA::ArmFault
fromFetch	src/cpu/o3/commit.hh	/^    typename TimeBuffer<FetchStruct>::wire fromFetch;$/;"	m	class:DefaultCommit
fromFetch	src/cpu/o3/decode.hh	/^    typename TimeBuffer<FetchStruct>::wire fromFetch;$/;"	m	class:DefaultDecode
fromIEW	src/cpu/o3/commit.hh	/^    typename TimeBuffer<IEWStruct>::wire fromIEW;$/;"	m	class:DefaultCommit
fromIEW	src/cpu/o3/decode.hh	/^    typename TimeBuffer<TimeStruct>::wire fromIEW;$/;"	m	class:DefaultDecode
fromIEW	src/cpu/o3/fetch.hh	/^    typename TimeBuffer<TimeStruct>::wire fromIEW;$/;"	m	class:DefaultFetch
fromIEW	src/cpu/o3/rename.hh	/^    typename TimeBuffer<TimeStruct>::wire fromIEW;$/;"	m	class:DefaultRename
fromInt	src/sim/serialize.hh	/^void fromInt(T &t, int i)$/;"	f
fromIssue	src/cpu/o3/iew.hh	/^    typename TimeBuffer<IssueStruct>::wire fromIssue;$/;"	m	class:DefaultIEW
fromIssue	src/cpu/o3/lsq_unit.hh	/^    typename TimeBuffer<IssueStruct>::wire fromIssue;$/;"	m	class:LSQUnit
fromIssue	src/cpu/ozone/lsq_unit.hh	/^    typename TimeBuffer<IssueStruct>::wire fromIssue;$/;"	m	class:OzoneLSQ
fromMode	src/arch/arm/faults.hh	/^    OperatingMode fromMode;  \/\/ Source operating mode$/;"	m	class:ArmISA::ArmFault
fromNextStages	src/cpu/inorder/pipeline_stage.hh	/^    TimeBuffer<TimeStruct>::wire fromNextStages;$/;"	m	class:PipelineStage
fromRename	src/cpu/o3/commit.hh	/^    typename TimeBuffer<RenameStruct>::wire fromRename;$/;"	m	class:DefaultCommit
fromRename	src/cpu/o3/decode.hh	/^    typename TimeBuffer<TimeStruct>::wire fromRename;$/;"	m	class:DefaultDecode
fromRename	src/cpu/o3/fetch.hh	/^    typename TimeBuffer<TimeStruct>::wire fromRename;$/;"	m	class:DefaultFetch
fromRename	src/cpu/o3/iew.hh	/^    typename TimeBuffer<RenameStruct>::wire fromRename;$/;"	m	class:DefaultIEW
fromSeconds	src/python/m5/ticks.py	/^def fromSeconds(value):$/;"	f
fromSimObject	src/sim/serialize.hh	/^void fromSimObject(T &t, SimObject *s)$/;"	f
fromkeys	src/python/m5/util/sorteddict.py	/^    def fromkeys(cls, seq, value=None):$/;"	m	class:SortedDict
front	src/base/varargs.hh	/^    Argument& front() { return l.front(); }$/;"	f	class:VarArgs::List
front	src/base/varargs.hh	/^    const Argument& front() const { return l.front(); }$/;"	f	class:VarArgs::List
front	src/dev/pktfifo.hh	/^    EthPacketPtr front() { return fifo.begin()->packet; }$/;"	f	class:PacketFifo
frontEnd	src/cpu/ozone/back_end.hh	/^    FrontEnd *frontEnd;$/;"	m	class:BackEnd
frontEnd	src/cpu/ozone/cpu.hh	/^    FrontEnd *frontEnd;$/;"	m	class:OzoneCPU
frontEnd	src/cpu/ozone/inorder_back_end.hh	/^    FrontEnd *frontEnd;$/;"	m	class:InorderBackEnd
frontEnd	src/cpu/ozone/lw_back_end.hh	/^    FrontEnd *frontEnd;$/;"	m	class:LWBackEnd
frontEndLatency	src/cpu/ozone/OzoneCPU.py	/^    frontEndLatency = Param.Unsigned("Front end latency")$/;"	v	class:DerivOzoneCPU
frontEndLatency	src/cpu/ozone/simple_params.hh	/^    unsigned frontEndLatency;$/;"	m	class:SimpleParams
frontEndSked	src/cpu/inorder/cpu.hh	/^    ThePipeline::RSkedPtr frontEndSked;$/;"	m	class:InOrderCPU
frontEndWidth	src/cpu/ozone/OzoneCPU.py	/^    frontEndWidth = Param.Unsigned("Front end width")$/;"	v	class:DerivOzoneCPU
frontEndWidth	src/cpu/ozone/SimpleOzoneCPU.py	/^    frontEndWidth = Param.Unsigned("Front end width")$/;"	v	class:SimpleOzoneCPU
frontEndWidth	src/cpu/ozone/simple_params.hh	/^    unsigned frontEndWidth;$/;"	m	class:SimpleParams
frontSked	src/cpu/inorder/inorder_dyn_inst.hh	/^    RSkedPtr frontSked;$/;"	m	class:InOrderDynInst
frontSked_end	src/cpu/inorder/inorder_dyn_inst.hh	/^    RSkedIt frontSked_end;$/;"	m	class:InOrderDynInst
frontendLatency	src/mem/dram_ctrl.hh	/^    const Tick frontendLatency;$/;"	m	class:DRAMCtrl
fsHigh	src/arch/arm/miscregs.hh	/^        Bitfield<10> fsHigh;$/;"	m	namespace:ArmISA
fsLow	src/arch/arm/miscregs.hh	/^        Bitfield<3, 0> fsLow;$/;"	m	namespace:ArmISA
fsetxattr	src/kern/linux/linux_syscalls.hh	/^    fsetxattr = 50,$/;"	e	enum:SystemCalls::__anon87
fsid_t	src/kern/tru64/tru64.hh	/^    typedef quad fsid_t;$/;"	t	class:Tru64
fsr	src/arch/sparc/isa.hh	/^    uint64_t fsr;           \/\/ Floating-Point State Register$/;"	m	class:SparcISA::ISA
fsr	src/cpu/m5legion_interface.h	/^    uint64_t fsr;$/;"	m	struct:__anon55
fstat	src/kern/linux/linux_syscalls.hh	/^    fstat = 51,$/;"	e	enum:SystemCalls::__anon87
fstat	src/kern/tru64/tru64_syscalls.hh	/^        fstat = 226,$/;"	e	enum:SystemCalls::__anon102
fstat64	src/kern/linux/linux_syscalls.hh	/^    fstat64 = 52,$/;"	e	enum:SystemCalls::__anon87
fstat64Func	src/sim/syscall_emul.hh	/^fstat64Func(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
fstatFunc	src/sim/syscall_emul.hh	/^fstatFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
fstatat64Func	src/sim/syscall_emul.hh	/^fstatat64Func(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
fstatfs	src/kern/linux/linux_syscalls.hh	/^    fstatfs = 53,$/;"	e	enum:SystemCalls::__anon87
fstatfs	src/kern/tru64/tru64_syscalls.hh	/^        fstatfs = 228,$/;"	e	enum:SystemCalls::__anon102
fstatfs64	src/kern/linux/linux_syscalls.hh	/^    fstatfs64 = 54,$/;"	e	enum:SystemCalls::__anon87
fstatfsFunc	src/sim/syscall_emul.hh	/^fstatfsFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
fsw	src/cpu/kvm/x86_cpu.cc	/^    uint16_t fsw;$/;"	m	struct:FXSave	file:
fsync	src/kern/linux/linux_syscalls.hh	/^    fsync = 55,$/;"	e	enum:SystemCalls::__anon87
fsync	src/kern/tru64/tru64_syscalls.hh	/^        fsync = 95,$/;"	e	enum:SystemCalls::__anon102
ftime	src/kern/linux/linux_syscalls.hh	/^    ftime = 56,$/;"	e	enum:SystemCalls::__anon87
ftruncate	src/kern/linux/linux_syscalls.hh	/^    ftruncate = 57,$/;"	e	enum:SystemCalls::__anon87
ftruncate	src/kern/tru64/tru64_syscalls.hh	/^        ftruncate = 130,$/;"	e	enum:SystemCalls::__anon102
ftruncate64	src/kern/linux/linux_syscalls.hh	/^    ftruncate64 = 58,$/;"	e	enum:SystemCalls::__anon87
ftruncate64Func	src/sim/syscall_emul.cc	/^ftruncate64Func(SyscallDesc *desc, int num,$/;"	f
ftruncateFunc	src/sim/syscall_emul.cc	/^ftruncateFunc(SyscallDesc *desc, int num,$/;"	f
ftwx	src/cpu/kvm/x86_cpu.cc	/^    uint8_t ftwx;$/;"	m	struct:FXSave	file:
fu	src/arch/power/miscregs.hh	/^            Bitfield<12> fu;$/;"	m	namespace:PowerISA
fuBusy	src/cpu/o3/inst_queue.hh	/^    Stats::Vector fuBusy;$/;"	m	class:InstructionQueue
fuBusyRate	src/cpu/o3/inst_queue.hh	/^    Stats::Formula fuBusyRate;$/;"	m	class:InstructionQueue
fuIdx	src/cpu/o3/inst_queue.hh	/^        int fuIdx;$/;"	m	class:InstructionQueue::FUCompletion
fuListIterator	src/cpu/o3/fu_pool.hh	/^    typedef std::vector<FuncUnit *>::iterator fuListIterator;$/;"	t	class:FUPool
fuPerCapList	src/cpu/o3/fu_pool.hh	/^    FUIdxQueue fuPerCapList[Num_OpClasses];$/;"	m	class:FUPool
fuPool	src/cpu/o3/O3CPU.py	/^    fuPool = Param.FUPool(DefaultFUPool(), "Functional Unit pool")$/;"	v	class:DerivO3CPU
fuPool	src/cpu/o3/iew.hh	/^    FUPool *fuPool;$/;"	m	class:DefaultIEW
fuPool	src/cpu/o3/inst_queue.hh	/^    FUPool *fuPool;$/;"	m	class:InstructionQueue
fuPool	src/cpu/ozone/simple_params.hh	/^    FUPool *fuPool;$/;"	m	class:SimpleParams
full	src/cpu/pred/ras.hh	/^     bool full() { return usedEntries == numEntries; }$/;"	f	class:ReturnAddrStack
full	src/dev/pktfifo.hh	/^    bool full() const { return avail() <= 0; }$/;"	f	class:PacketFifo
fullCount	src/cpu/ozone/back_end.hh	/^        Stats::Scalar fullCount;$/;"	m	class:BackEnd::InstQueue
fullMask	src/arch/power/insts/integer.hh	/^    uint32_t fullMask;$/;"	m	class:PowerISA::IntRotateOp
fullPath	src/sim/process.hh	/^    fullPath(const std::string &filename)$/;"	f	class:LiveProcess
full_rate	src/cpu/ozone/back_end.hh	/^        Stats::Formula full_rate;$/;"	m	class:BackEnd::InstQueue
full_system	src/sim/Root.py	/^    full_system = Param.Bool("if this is a full system simulation")$/;"	v	class:Root
func	src/arch/generic/debugfaults.hh	/^    DebugFunc func;$/;"	m	class:GenericISA::M5DebugFault
funcExeInst	src/cpu/ozone/back_end.hh	/^    Counter funcExeInst;$/;"	m	class:BackEnd
funcExeInst	src/cpu/ozone/lw_back_end.hh	/^    Counter funcExeInst;$/;"	m	class:LWBackEnd
funcExeInst	src/cpu/thread_state.hh	/^    Counter funcExeInst;$/;"	m	struct:ThreadState
funcMasterId	src/mem/request.hh	/^    static const MasterID funcMasterId = 1;$/;"	m	class:Request
funcPort	src/cpu/testers/memtest/memtest.hh	/^    CpuPort funcPort;$/;"	m	class:MemTest
funcProxy	src/cpu/testers/memtest/memtest.hh	/^    PortProxy funcProxy;$/;"	m	class:MemTest
funcPtr	src/sim/syscall_emul.hh	/^    FuncPtr funcPtr;    \/\/!< Pointer to emulation function.$/;"	m	class:SyscallDesc
funcState	src/arch/x86/pagetable_walker.hh	/^        WalkerState funcState;$/;"	m	class:X86ISA::Walker
funcUnits	src/cpu/o3/fu_pool.hh	/^    std::vector<FuncUnit *> funcUnits;$/;"	m	class:FUPool
funcUnitsIdx	src/cpu/o3/fu_pool.hh	/^        std::vector<int> funcUnitsIdx;$/;"	m	class:FUPool::FUIdxQueue
func_reset	src/dev/pcireg.h	/^        Bitfield<15>    func_reset;$/;"	m	struct:PXCAP
function	src/sim/probe/probe.hh	/^    void (T::* function)(const Arg &);$/;"	m	class:ProbeListenerArg
functionEntryTick	src/cpu/base.hh	/^    Tick functionEntryTick;$/;"	m	class:BaseCPU
functionId	src/dev/pcidev.hh	/^        int functionId;$/;"	m	class:PciDevice::PciConfigPort
functionTraceStream	src/cpu/base.hh	/^    std::ostream *functionTraceStream;$/;"	m	class:BaseCPU
functionTracingEnabled	src/cpu/base.hh	/^    bool functionTracingEnabled;$/;"	m	class:BaseCPU
function_trace	src/cpu/BaseCPU.py	/^    function_trace = Param.Bool(False, "Enable function trace")$/;"	v
function_trace_start	src/cpu/BaseCPU.py	/^    function_trace_start = Param.Tick(0, "Tick to start function trace")$/;"	v
functional	src/arch/arm/stage2_lookup.hh	/^    bool                    functional;$/;"	m	class:ArmISA::Stage2LookUp
functional	src/arch/arm/table_walker.hh	/^        bool functional;$/;"	m	class:ArmISA::TableWalker::WalkerState
functional	src/arch/x86/pagetable_walker.hh	/^            bool functional;$/;"	m	class:X86ISA::Walker::WalkerState
functional	src/cpu/testers/memtest/MemTest.py	/^                                "used for verification")$/;"	v	class:MemTest
functionalAccess	src/mem/abstract_mem.cc	/^AbstractMemory::functionalAccess(PacketPtr pkt)$/;"	f	class:AbstractMemory
functionalAccess	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::functionalAccess(PacketPtr pkt, bool fromCpuSide)$/;"	f	class:Cache
functionalAccess	src/mem/physical.cc	/^PhysicalMemory::functionalAccess(PacketPtr pkt)$/;"	f	class:PhysicalMemory
functionalRead	src/mem/ruby/buffers/MessageBuffer.cc	/^MessageBuffer::functionalRead(Packet *pkt)$/;"	f	class:MessageBuffer
functionalRead	src/mem/ruby/network/Network.hh	/^    virtual bool functionalRead(Packet *pkt)$/;"	f	class:Network
functionalRead	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.cc	/^GarnetNetwork::functionalRead(Packet *pkt)$/;"	f	class:GarnetNetwork
functionalRead	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.cc	/^NetworkInterface::functionalRead(Packet *pkt)$/;"	f	class:NetworkInterface
functionalRead	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.cc	/^NetworkLink::functionalRead(Packet *pkt)$/;"	f	class:NetworkLink
functionalRead	src/mem/ruby/network/garnet/flexible-pipeline/Router.cc	/^Router::functionalRead(Packet *pkt)$/;"	f	class:Router
functionalRead	src/mem/ruby/network/garnet/flexible-pipeline/flit.cc	/^flit::functionalRead(Packet *pkt)$/;"	f	class:flit
functionalRead	src/mem/ruby/network/garnet/flexible-pipeline/flitBuffer.cc	/^flitBuffer::functionalRead(Packet *pkt)$/;"	f	class:flitBuffer
functionalRead	src/mem/ruby/network/simple/SimpleNetwork.cc	/^SimpleNetwork::functionalRead(Packet *pkt)$/;"	f	class:SimpleNetwork
functionalRead	src/mem/ruby/network/simple/Switch.cc	/^Switch::functionalRead(Packet *pkt)$/;"	f	class:Switch
functionalRead	src/mem/ruby/slicc_interface/RubyRequest.cc	/^RubyRequest::functionalRead(Packet *pkt)$/;"	f	class:RubyRequest
functionalRead	src/mem/ruby/system/System.cc	/^RubySystem::functionalRead(PacketPtr pkt)$/;"	f	class:RubySystem
functionalReadBuffers	src/mem/ruby/system/MemoryControl.hh	/^    virtual bool functionalReadBuffers(Packet *pkt)$/;"	f	class:MemoryControl
functionalReadBuffers	src/mem/ruby/system/RubyMemoryControl.cc	/^RubyMemoryControl::functionalReadBuffers(Packet *pkt)$/;"	f	class:RubyMemoryControl
functionalWrite	src/mem/ruby/buffers/MessageBuffer.cc	/^MessageBuffer::functionalWrite(Packet *pkt)$/;"	f	class:MessageBuffer
functionalWrite	src/mem/ruby/network/Network.hh	/^    virtual uint32_t functionalWrite(Packet *pkt)$/;"	f	class:Network
functionalWrite	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.cc	/^GarnetNetwork_d::functionalWrite(Packet *pkt)$/;"	f	class:GarnetNetwork_d
functionalWrite	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.cc	/^InputUnit_d::functionalWrite(Packet *pkt)$/;"	f	class:InputUnit_d
functionalWrite	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.cc	/^NetworkInterface_d::functionalWrite(Packet *pkt)$/;"	f	class:NetworkInterface_d
functionalWrite	src/mem/ruby/network/garnet/fixed-pipeline/NetworkLink_d.cc	/^NetworkLink_d::functionalWrite(Packet *pkt)$/;"	f	class:NetworkLink_d
functionalWrite	src/mem/ruby/network/garnet/fixed-pipeline/OutputUnit_d.cc	/^OutputUnit_d::functionalWrite(Packet *pkt)$/;"	f	class:OutputUnit_d
functionalWrite	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.cc	/^Router_d::functionalWrite(Packet *pkt)$/;"	f	class:Router_d
functionalWrite	src/mem/ruby/network/garnet/fixed-pipeline/Switch_d.cc	/^Switch_d::functionalWrite(Packet *pkt)$/;"	f	class:Switch_d
functionalWrite	src/mem/ruby/network/garnet/fixed-pipeline/VirtualChannel_d.cc	/^VirtualChannel_d::functionalWrite(Packet *pkt)$/;"	f	class:VirtualChannel_d
functionalWrite	src/mem/ruby/network/garnet/fixed-pipeline/flitBuffer_d.cc	/^flitBuffer_d::functionalWrite(Packet *pkt)$/;"	f	class:flitBuffer_d
functionalWrite	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.cc	/^flit_d::functionalWrite(Packet *pkt)$/;"	f	class:flit_d
functionalWrite	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.cc	/^GarnetNetwork::functionalWrite(Packet *pkt)$/;"	f	class:GarnetNetwork
functionalWrite	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.cc	/^NetworkInterface::functionalWrite(Packet *pkt)$/;"	f	class:NetworkInterface
functionalWrite	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.cc	/^NetworkLink::functionalWrite(Packet *pkt)$/;"	f	class:NetworkLink
functionalWrite	src/mem/ruby/network/garnet/flexible-pipeline/Router.cc	/^Router::functionalWrite(Packet *pkt)$/;"	f	class:Router
functionalWrite	src/mem/ruby/network/garnet/flexible-pipeline/flit.cc	/^flit::functionalWrite(Packet *pkt)$/;"	f	class:flit
functionalWrite	src/mem/ruby/network/garnet/flexible-pipeline/flitBuffer.cc	/^flitBuffer::functionalWrite(Packet *pkt)$/;"	f	class:flitBuffer
functionalWrite	src/mem/ruby/network/simple/SimpleNetwork.cc	/^SimpleNetwork::functionalWrite(Packet *pkt)$/;"	f	class:SimpleNetwork
functionalWrite	src/mem/ruby/network/simple/Switch.cc	/^Switch::functionalWrite(Packet *pkt)$/;"	f	class:Switch
functionalWrite	src/mem/ruby/slicc_interface/RubyRequest.cc	/^RubyRequest::functionalWrite(Packet *pkt)$/;"	f	class:RubyRequest
functionalWrite	src/mem/ruby/system/System.cc	/^RubySystem::functionalWrite(PacketPtr pkt)$/;"	f	class:RubySystem
functionalWriteBuffers	src/mem/ruby/system/MemoryControl.hh	/^    virtual uint32_t functionalWriteBuffers(Packet *pkt)$/;"	f	class:MemoryControl
functionalWriteBuffers	src/mem/ruby/system/RubyMemoryControl.cc	/^RubyMemoryControl::functionalWriteBuffers(Packet *pkt)$/;"	f	class:RubyMemoryControl
functor	src/base/statistics.hh	/^    T *functor;$/;"	m	class:Stats::FunctorProxy
functor	src/base/statistics.hh	/^    functor(T &func)$/;"	f	class:Stats::ValueBase
fuser	src/kern/tru64/tru64_syscalls.hh	/^        fuser = 243,$/;"	e	enum:SystemCalls::__anon102
futex	src/kern/linux/linux_syscalls.hh	/^    futex = 59,$/;"	e	enum:SystemCalls::__anon87
futexFunc	src/sim/syscall_emul.hh	/^futexFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
futexMap	src/sim/system.hh	/^    std::map<uint64_t, std::list<ThreadContext *> * > futexMap;$/;"	m	class:System
future	src/cpu/timebuf.hh	/^    int future;$/;"	m	class:TimeBuffer
fw	src/arch/arm/miscregs.hh	/^        Bitfield<4> fw;$/;"	m	namespace:ArmISA
fwsm	src/dev/i8254xGBe_defs.hh	/^    FWSM fwsm;$/;"	m	struct:iGbReg::Regs
fx	src/arch/power/miscregs.hh	/^    Bitfield<31> fx;$/;"	m	namespace:PowerISA
fxm	src/arch/power/types.hh	/^    Bitfield<19, 12> fxm;$/;"	m	namespace:PowerISA
fz	src/arch/arm/miscregs.hh	/^        Bitfield<24> fz;$/;"	m	namespace:ArmISA
g	src/arch/mips/dt_constants.hh	/^    Bitfield<4>      g;$/;"	m	namespace:MipsISA
g	src/arch/mips/pra_constants.hh	/^    Bitfield<0>      g;     \/\/ Global Bit$/;"	m	namespace:MipsISA
g	src/arch/mips/pra_constants.hh	/^    Bitfield<30>     g;$/;"	m	namespace:MipsISA
g	src/arch/x86/pagetable_walker.cc	/^    Bitfield<8> g;$/;"	m	namespace:X86ISA	file:
g	src/arch/x86/regs/misc.hh	/^        Bitfield<55> g; \/\/ Granularity$/;"	m	namespace:X86ISA
g0	src/arch/x86/regs/misc.hh	/^        Bitfield<1> g0;$/;"	m	namespace:X86ISA
g1	src/arch/x86/regs/misc.hh	/^        Bitfield<3> g1;$/;"	m	namespace:X86ISA
g2	src/arch/x86/regs/misc.hh	/^        Bitfield<5> g2;$/;"	m	namespace:X86ISA
g3	src/arch/x86/regs/misc.hh	/^        Bitfield<7> g3;$/;"	m	namespace:X86ISA
g_abs_controls	src/mem/ruby/common/Global.cc	/^vector<map<uint32_t, AbstractController *> > g_abs_controls;$/;"	v
g_ruby_start	src/mem/ruby/common/Global.cc	/^Cycles g_ruby_start;$/;"	v
gate	src/dev/x86/speaker.hh	/^        Bitfield<0> gate;$/;"	m	class:X86ISA::Speaker
gd	src/arch/x86/regs/misc.hh	/^        Bitfield<13> gd;$/;"	m	namespace:X86ISA
gdb	src/base/remote_gdb.hh	/^        BaseRemoteGDB *gdb;$/;"	m	class:BaseRemoteGDB::Event
gdb	src/base/remote_gdb.hh	/^        BaseRemoteGDB *gdb;$/;"	m	class:BaseRemoteGDB::HardBreakpoint
gdb	src/base/remote_gdb.hh	/^    BaseRemoteGDB *gdb;$/;"	m	class:GDBListener
gdbListen	src/sim/system.hh	/^    std::vector<GDBListener *> gdbListen;$/;"	m	class:System
gdb_command	src/base/remote_gdb.cc	/^BaseRemoteGDB::gdb_command(char cmd)$/;"	f	class:BaseRemoteGDB
gdbregs	src/base/remote_gdb.hh	/^    GdbRegCache gdbregs;$/;"	m	class:BaseRemoteGDB
gdtSize	src/arch/x86/process.hh	/^        Addr gdtSize()$/;"	f	class:X86ISA::X86LiveProcess
gdtStart	src/arch/x86/process.hh	/^        Addr gdtStart()$/;"	f	class:X86ISA::X86LiveProcess
ge	src/arch/arm/miscregs.hh	/^        Bitfield<19, 16> ge;$/;"	m	namespace:ArmISA
ge	src/arch/x86/regs/misc.hh	/^        Bitfield<9> ge;$/;"	m	namespace:X86ISA
gem5CheckpointVersion	src/sim/serialize.hh	/^static const uint64_t gem5CheckpointVersion = 0x0000000000000009;$/;"	v
genCCVector	src/arch/mips/utility.cc	/^genCCVector(uint32_t fcsr, int cc_num, uint32_t cc_val)$/;"	f	namespace:MipsISA
genCenteredLabel	src/cpu/legiontrace.cc	/^inline char * genCenteredLabel(int length, char * buffer, const char * label)$/;"	f	namespace:Trace
genFlags	src/arch/x86/insts/microregop.cc	/^    uint64_t RegOpBase::genFlags(uint64_t oldFlags, uint64_t flagMask,$/;"	f	class:X86ISA::RegOpBase
genFuncs	src/arch/x86/microcode_rom.hh	/^        GenFunc * genFuncs;$/;"	m	class:X86ISAInst::MicrocodeRom
genInvalidVector	src/arch/mips/utility.cc	/^genInvalidVector(uint32_t fcsr_bits)$/;"	f	namespace:MipsISA
genSkedID	src/cpu/inorder/cpu.hh	/^    inline SkedID genSkedID(DynInstPtr inst)$/;"	f	class:InOrderCPU
genSwiMask	src/dev/arm/gic_pl390.cc	/^Pl390::genSwiMask(int cpu)$/;"	f	class:Pl390
genX87Tags	src/arch/x86/utility.cc	/^genX87Tags(uint16_t ftw, uint8_t top, int8_t spm)$/;"	f	namespace:X86ISA
gen_real1	src/base/random.hh	/^    gen_real1()$/;"	f	class:Random
gen_real2	src/base/random.hh	/^    gen_real2()$/;"	f	class:Random
gen_real3	src/base/random.hh	/^    gen_real3()$/;"	f	class:Random
generate	src/mem/slicc/ast/ActionDeclAST.py	/^    def generate(self):$/;"	m	class:ActionDeclAST
generate	src/mem/slicc/ast/AssignStatementAST.py	/^    def generate(self, code, return_type):$/;"	m	class:AssignStatementAST
generate	src/mem/slicc/ast/CheckAllocateStatementAST.py	/^    def generate(self, code, return_type):$/;"	m	class:CheckAllocateStatementAST
generate	src/mem/slicc/ast/DeclListAST.py	/^    def generate(self):$/;"	m	class:DeclListAST
generate	src/mem/slicc/ast/EnqueueStatementAST.py	/^    def generate(self, code, return_type):$/;"	m	class:EnqueueStatementAST
generate	src/mem/slicc/ast/EnumDeclAST.py	/^    def generate(self):$/;"	m	class:EnumDeclAST
generate	src/mem/slicc/ast/EnumExprAST.py	/^    def generate(self, code):$/;"	m	class:EnumExprAST
generate	src/mem/slicc/ast/ExprStatementAST.py	/^    def generate(self, code, return_type):$/;"	m	class:ExprStatementAST
generate	src/mem/slicc/ast/FormalParamAST.py	/^    def generate(self):$/;"	m	class:FormalParamAST
generate	src/mem/slicc/ast/FuncCallExprAST.py	/^    def generate(self, code):$/;"	m	class:FuncCallExprAST
generate	src/mem/slicc/ast/FuncDeclAST.py	/^    def generate(self, parent = None):$/;"	m	class:FuncDeclAST
generate	src/mem/slicc/ast/IfStatementAST.py	/^    def generate(self, code, return_type):$/;"	m	class:IfStatementAST
generate	src/mem/slicc/ast/InPortDeclAST.py	/^    def generate(self):$/;"	m	class:InPortDeclAST
generate	src/mem/slicc/ast/IsValidPtrExprAST.py	/^    def generate(self, code):$/;"	m	class:IsValidPtrExprAST
generate	src/mem/slicc/ast/LiteralExprAST.py	/^    def generate(self, code):$/;"	m	class:LiteralExprAST
generate	src/mem/slicc/ast/LocalVariableAST.py	/^    def generate(self, code):$/;"	m	class:LocalVariableAST
generate	src/mem/slicc/ast/MachineAST.py	/^    def generate(self):$/;"	m	class:MachineAST
generate	src/mem/slicc/ast/MemberExprAST.py	/^    def generate(self, code):$/;"	m	class:MemberExprAST
generate	src/mem/slicc/ast/MethodCallExprAST.py	/^    def generate(self, code):$/;"	m	class:MethodCallExprAST
generate	src/mem/slicc/ast/NewExprAST.py	/^    def generate(self, code):$/;"	m	class:NewExprAST
generate	src/mem/slicc/ast/ObjDeclAST.py	/^    def generate(self):$/;"	m	class:ObjDeclAST
generate	src/mem/slicc/ast/OodAST.py	/^    def generate(self, code):$/;"	m	class:OodAST
generate	src/mem/slicc/ast/OperatorExprAST.py	/^    def generate(self, code):$/;"	m	class:InfixOperatorExprAST
generate	src/mem/slicc/ast/OperatorExprAST.py	/^    def generate(self, code):$/;"	m	class:PrefixOperatorExprAST
generate	src/mem/slicc/ast/OutPortDeclAST.py	/^    def generate(self):$/;"	m	class:OutPortDeclAST
generate	src/mem/slicc/ast/PeekStatementAST.py	/^    def generate(self, code, return_type):$/;"	m	class:PeekStatementAST
generate	src/mem/slicc/ast/ReturnStatementAST.py	/^    def generate(self, code, return_type):$/;"	m	class:ReturnStatementAST
generate	src/mem/slicc/ast/StallAndWaitStatementAST.py	/^    def generate(self, code, return_type):$/;"	m	class:StallAndWaitStatementAST
generate	src/mem/slicc/ast/StateDeclAST.py	/^    def generate(self):$/;"	m	class:StateDeclAST
generate	src/mem/slicc/ast/StatementListAST.py	/^    def generate(self, code, return_type):$/;"	m	class:StatementListAST
generate	src/mem/slicc/ast/StaticCastAST.py	/^    def generate(self, code):$/;"	m	class:StaticCastAST
generate	src/mem/slicc/ast/TransitionDeclAST.py	/^    def generate(self):$/;"	m	class:TransitionDeclAST
generate	src/mem/slicc/ast/TypeDeclAST.py	/^    def generate(self):$/;"	m	class:TypeDeclAST
generate	src/mem/slicc/ast/TypeFieldEnumAST.py	/^    def generate(self, type):$/;"	m	class:TypeFieldEnumAST
generate	src/mem/slicc/ast/TypeFieldMemberAST.py	/^    def generate(self, type):$/;"	m	class:TypeFieldMemberAST
generate	src/mem/slicc/ast/TypeFieldMethodAST.py	/^    def generate(self, type):$/;"	m	class:TypeFieldMethodAST
generate	src/mem/slicc/ast/TypeFieldStateAST.py	/^    def generate(self, type):$/;"	m	class:TypeFieldStateAST
generate	src/mem/slicc/ast/VarExprAST.py	/^    def generate(self, code):$/;"	m	class:VarExprAST
generate	src/mem/slicc/symbols/StateMachine.py	/^import slicc.generate.html as html$/;"	i
generateCode	src/mem/slicc/symbols/Func.py	/^    def generateCode(self):$/;"	m	class:Func
generateDisassembly	src/arch/arm/insts/branch64.cc	/^BranchEret64::generateDisassembly($/;"	f	class:ArmISA::BranchEret64
generateDisassembly	src/arch/arm/insts/branch64.cc	/^BranchImm64::generateDisassembly($/;"	f	class:ArmISA::BranchImm64
generateDisassembly	src/arch/arm/insts/branch64.cc	/^BranchImmCond64::generateDisassembly($/;"	f	class:ArmISA::BranchImmCond64
generateDisassembly	src/arch/arm/insts/branch64.cc	/^BranchImmImmReg64::generateDisassembly($/;"	f	class:ArmISA::BranchImmImmReg64
generateDisassembly	src/arch/arm/insts/branch64.cc	/^BranchImmReg64::generateDisassembly($/;"	f	class:ArmISA::BranchImmReg64
generateDisassembly	src/arch/arm/insts/branch64.cc	/^BranchReg64::generateDisassembly($/;"	f	class:ArmISA::BranchReg64
generateDisassembly	src/arch/arm/insts/branch64.cc	/^BranchRet64::generateDisassembly($/;"	f	class:ArmISA::BranchRet64
generateDisassembly	src/arch/arm/insts/data64.cc	/^DataX1Reg2ImmOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::DataX1Reg2ImmOp
generateDisassembly	src/arch/arm/insts/data64.cc	/^DataX1RegImmOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::DataX1RegImmOp
generateDisassembly	src/arch/arm/insts/data64.cc	/^DataX1RegOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::DataX1RegOp
generateDisassembly	src/arch/arm/insts/data64.cc	/^DataX2RegImmOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::DataX2RegImmOp
generateDisassembly	src/arch/arm/insts/data64.cc	/^DataX2RegOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::DataX2RegOp
generateDisassembly	src/arch/arm/insts/data64.cc	/^DataX3RegOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::DataX3RegOp
generateDisassembly	src/arch/arm/insts/data64.cc	/^DataXCondCompImmOp::generateDisassembly($/;"	f	class:ArmISA::DataXCondCompImmOp
generateDisassembly	src/arch/arm/insts/data64.cc	/^DataXCondCompRegOp::generateDisassembly($/;"	f	class:ArmISA::DataXCondCompRegOp
generateDisassembly	src/arch/arm/insts/data64.cc	/^DataXCondSelOp::generateDisassembly($/;"	f	class:ArmISA::DataXCondSelOp
generateDisassembly	src/arch/arm/insts/data64.cc	/^DataXERegOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::DataXERegOp
generateDisassembly	src/arch/arm/insts/data64.cc	/^DataXImmOnlyOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::DataXImmOnlyOp
generateDisassembly	src/arch/arm/insts/data64.cc	/^DataXImmOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::DataXImmOp
generateDisassembly	src/arch/arm/insts/data64.cc	/^DataXSRegOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::DataXSRegOp
generateDisassembly	src/arch/arm/insts/macromem.cc	/^MicroIntImmOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::MicroIntImmOp
generateDisassembly	src/arch/arm/insts/macromem.cc	/^MicroIntImmXOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::MicroIntImmXOp
generateDisassembly	src/arch/arm/insts/macromem.cc	/^MicroIntMov::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::MicroIntMov
generateDisassembly	src/arch/arm/insts/macromem.cc	/^MicroIntOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::MicroIntOp
generateDisassembly	src/arch/arm/insts/macromem.cc	/^MicroIntRegXOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::MicroIntRegXOp
generateDisassembly	src/arch/arm/insts/macromem.cc	/^MicroMemOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::MicroMemOp
generateDisassembly	src/arch/arm/insts/macromem.cc	/^MicroSetPCCPSR::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::MicroSetPCCPSR
generateDisassembly	src/arch/arm/insts/mem.cc	/^RfeOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::RfeOp
generateDisassembly	src/arch/arm/insts/mem.cc	/^SrsOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::SrsOp
generateDisassembly	src/arch/arm/insts/mem.cc	/^Swap::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::Swap
generateDisassembly	src/arch/arm/insts/mem.hh	/^    generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::MemoryOffset
generateDisassembly	src/arch/arm/insts/mem.hh	/^    generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::MemoryPostIndex
generateDisassembly	src/arch/arm/insts/mem.hh	/^    generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::MemoryPreIndex
generateDisassembly	src/arch/arm/insts/mem64.cc	/^MemoryDImm64::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::MemoryDImm64
generateDisassembly	src/arch/arm/insts/mem64.cc	/^MemoryDImmEx64::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::MemoryDImmEx64
generateDisassembly	src/arch/arm/insts/mem64.cc	/^MemoryEx64::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::MemoryEx64
generateDisassembly	src/arch/arm/insts/mem64.cc	/^MemoryImm64::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::MemoryImm64
generateDisassembly	src/arch/arm/insts/mem64.cc	/^MemoryLiteral64::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::MemoryLiteral64
generateDisassembly	src/arch/arm/insts/mem64.cc	/^MemoryPostIndex64::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::MemoryPostIndex64
generateDisassembly	src/arch/arm/insts/mem64.cc	/^MemoryPreIndex64::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::MemoryPreIndex64
generateDisassembly	src/arch/arm/insts/mem64.cc	/^MemoryRaw64::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::MemoryRaw64
generateDisassembly	src/arch/arm/insts/mem64.cc	/^MemoryReg64::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::MemoryReg64
generateDisassembly	src/arch/arm/insts/mem64.cc	/^SysDC64::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::SysDC64
generateDisassembly	src/arch/arm/insts/misc.cc	/^ImmOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ImmOp
generateDisassembly	src/arch/arm/insts/misc.cc	/^McrrOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:McrrOp
generateDisassembly	src/arch/arm/insts/misc.cc	/^MrrcOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:MrrcOp
generateDisassembly	src/arch/arm/insts/misc.cc	/^MrsOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:MrsOp
generateDisassembly	src/arch/arm/insts/misc.cc	/^MsrImmOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:MsrImmOp
generateDisassembly	src/arch/arm/insts/misc.cc	/^MsrRegOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:MsrRegOp
generateDisassembly	src/arch/arm/insts/misc.cc	/^RegImmImmOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:RegImmImmOp
generateDisassembly	src/arch/arm/insts/misc.cc	/^RegImmOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:RegImmOp
generateDisassembly	src/arch/arm/insts/misc.cc	/^RegImmRegOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:RegImmRegOp
generateDisassembly	src/arch/arm/insts/misc.cc	/^RegImmRegShiftOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:RegImmRegShiftOp
generateDisassembly	src/arch/arm/insts/misc.cc	/^RegRegImmImmOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:RegRegImmImmOp
generateDisassembly	src/arch/arm/insts/misc.cc	/^RegRegImmOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:RegRegImmOp
generateDisassembly	src/arch/arm/insts/misc.cc	/^RegRegOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:RegRegOp
generateDisassembly	src/arch/arm/insts/misc.cc	/^RegRegRegImmOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:RegRegRegImmOp
generateDisassembly	src/arch/arm/insts/misc.cc	/^RegRegRegOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:RegRegRegOp
generateDisassembly	src/arch/arm/insts/misc.cc	/^RegRegRegRegOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:RegRegRegRegOp
generateDisassembly	src/arch/arm/insts/misc.cc	/^UnknownOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:UnknownOp
generateDisassembly	src/arch/arm/insts/misc64.cc	/^RegRegImmImmOp64::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:RegRegImmImmOp64
generateDisassembly	src/arch/arm/insts/misc64.cc	/^RegRegRegImmOp64::generateDisassembly($/;"	f	class:RegRegRegImmOp64
generateDisassembly	src/arch/arm/insts/misc64.cc	/^UnknownOp64::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:UnknownOp64
generateDisassembly	src/arch/arm/insts/pred_inst.cc	/^DataImmOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::DataImmOp
generateDisassembly	src/arch/arm/insts/pred_inst.cc	/^DataRegOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::DataRegOp
generateDisassembly	src/arch/arm/insts/pred_inst.cc	/^DataRegRegOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::DataRegRegOp
generateDisassembly	src/arch/arm/insts/pred_inst.cc	/^PredImmOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::PredImmOp
generateDisassembly	src/arch/arm/insts/pred_inst.cc	/^PredIntOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::PredIntOp
generateDisassembly	src/arch/arm/insts/pred_inst.cc	/^PredMacroOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:ArmISA::PredMacroOp
generateDisassembly	src/arch/arm/insts/static_inst.cc	/^ArmStaticInst::generateDisassembly(Addr pc,$/;"	f	class:ArmISA::ArmStaticInst
generateDisassembly	src/arch/arm/insts/vfp.cc	/^FpCondCompRegOp::generateDisassembly($/;"	f	class:FpCondCompRegOp
generateDisassembly	src/arch/arm/insts/vfp.cc	/^FpCondSelOp::generateDisassembly($/;"	f	class:FpCondSelOp
generateDisassembly	src/arch/arm/insts/vfp.cc	/^FpRegImmOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:FpRegImmOp
generateDisassembly	src/arch/arm/insts/vfp.cc	/^FpRegRegImmOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:FpRegRegImmOp
generateDisassembly	src/arch/arm/insts/vfp.cc	/^FpRegRegOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:FpRegRegOp
generateDisassembly	src/arch/arm/insts/vfp.cc	/^FpRegRegRegImmOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:FpRegRegRegImmOp
generateDisassembly	src/arch/arm/insts/vfp.cc	/^FpRegRegRegOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:FpRegRegRegOp
generateDisassembly	src/arch/arm/insts/vfp.cc	/^FpRegRegRegRegOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:FpRegRegRegRegOp
generateDisassembly	src/arch/power/insts/branch.cc	/^BranchNonPCRel::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:BranchNonPCRel
generateDisassembly	src/arch/power/insts/branch.cc	/^BranchNonPCRelCond::generateDisassembly(Addr pc,$/;"	f	class:BranchNonPCRelCond
generateDisassembly	src/arch/power/insts/branch.cc	/^BranchPCRel::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:BranchPCRel
generateDisassembly	src/arch/power/insts/branch.cc	/^BranchPCRelCond::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:BranchPCRelCond
generateDisassembly	src/arch/power/insts/branch.cc	/^BranchRegCond::generateDisassembly(Addr pc,$/;"	f	class:BranchRegCond
generateDisassembly	src/arch/power/insts/condition.cc	/^CondLogicOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:CondLogicOp
generateDisassembly	src/arch/power/insts/condition.cc	/^CondMoveOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:CondMoveOp
generateDisassembly	src/arch/power/insts/floating.cc	/^FloatOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:FloatOp
generateDisassembly	src/arch/power/insts/integer.cc	/^IntImmOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:IntImmOp
generateDisassembly	src/arch/power/insts/integer.cc	/^IntOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:IntOp
generateDisassembly	src/arch/power/insts/integer.cc	/^IntRotateOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:IntRotateOp
generateDisassembly	src/arch/power/insts/integer.cc	/^IntShiftOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:IntShiftOp
generateDisassembly	src/arch/power/insts/mem.cc	/^MemDispOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:MemDispOp
generateDisassembly	src/arch/power/insts/mem.cc	/^MemOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:MemOp
generateDisassembly	src/arch/power/insts/misc.cc	/^MiscOp::generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:MiscOp
generateDisassembly	src/arch/power/insts/static_inst.cc	/^PowerStaticInst::generateDisassembly(Addr pc,$/;"	f	class:PowerStaticInst
generateDisassembly	src/arch/x86/insts/macroop.hh	/^    generateDisassembly(Addr pc, const SymbolTable *symtab) const$/;"	f	class:X86ISA::MacroopBase
generateDisassembly	src/arch/x86/insts/microfpop.cc	/^    std::string FpOp::generateDisassembly(Addr pc,$/;"	f	class:X86ISA::FpOp
generateDisassembly	src/arch/x86/insts/microldstop.cc	/^    std::string LdStOp::generateDisassembly(Addr pc,$/;"	f	class:X86ISA::LdStOp
generateDisassembly	src/arch/x86/insts/micromediaop.cc	/^    std::string MediaOpImm::generateDisassembly(Addr pc,$/;"	f	class:X86ISA::MediaOpImm
generateDisassembly	src/arch/x86/insts/micromediaop.cc	/^    std::string MediaOpReg::generateDisassembly(Addr pc,$/;"	f	class:X86ISA::MediaOpReg
generateDisassembly	src/arch/x86/insts/microop.hh	/^        std::string generateDisassembly(Addr pc,$/;"	f	class:X86ISA::X86MicroopBase
generateDisassembly	src/arch/x86/insts/microregop.cc	/^    std::string RegOp::generateDisassembly(Addr pc,$/;"	f	class:X86ISA::RegOp
generateDisassembly	src/arch/x86/insts/microregop.cc	/^    std::string RegOpImm::generateDisassembly(Addr pc,$/;"	f	class:X86ISA::RegOpImm
generateDisassembly	src/arch/x86/insts/static_inst.cc	/^    std::string X86StaticInst::generateDisassembly(Addr pc,$/;"	f	class:X86ISA::X86StaticInst
generateInterrupt	src/dev/arm/hdlcd.cc	/^HDLcd::generateInterrupt()$/;"	f	class:HDLcd
generateInterrupt	src/dev/arm/kmi.cc	/^Pl050::generateInterrupt()$/;"	f	class:Pl050
generateInterrupt	src/dev/arm/pl011.cc	/^Pl011::generateInterrupt()$/;"	f	class:Pl011
generateInterrupt	src/dev/arm/pl111.cc	/^Pl111::generateInterrupt()$/;"	f	class:Pl111
generateIpi	src/dev/sparc/iob.cc	/^Iob::generateIpi(Type type, int cpu_id, int vector)$/;"	f	class:Iob
generatePkt	src/cpu/testers/networktest/networktest.cc	/^NetworkTest::generatePkt()$/;"	f	class:NetworkTest
generateTCEvent	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::generateTCEvent(ThreadID tid)$/;"	f	class:DefaultCommit
generateTCEvent	src/cpu/ozone/lw_back_end.hh	/^    void generateTCEvent() { tcSquash = true; }$/;"	f	class:LWBackEnd
generateTrapEvent	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::generateTrapEvent(ThreadID tid)$/;"	f	class:DefaultCommit
generateTrapEvent	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::generateTrapEvent(Tick latency)$/;"	f	class:LWBackEnd
generateXCEvent	src/cpu/ozone/inorder_back_end.hh	/^    void generateXCEvent() { }$/;"	f	class:InorderBackEnd
generate_prefix	src/mem/slicc/ast/MethodCallExprAST.py	/^    def generate_prefix(self, paramTypes):$/;"	m	class:ClassMethodCallExprAST
generate_prefix	src/mem/slicc/ast/MethodCallExprAST.py	/^    def generate_prefix(self, paramTypes):$/;"	m	class:MemberMethodCallExprAST
generation	src/base/barrier.hh	/^    unsigned generation;$/;"	m	class:Barrier
generator	src/cpu/testers/directedtest/RubyDirectedTester.hh	/^    DirectedGenerator* generator;$/;"	m	class:RubyDirectedTester
generator	src/cpu/testers/directedtest/RubyDirectedTester.py	/^    generator = Param.DirectedGenerator("the request generator")$/;"	v	class:RubyDirectedTester
generic_timer	src/dev/arm/RealView.py	/^    generic_timer = GenericTimer(int_num=29)$/;"	v	class:VExpress_EMM
genrand	src/base/random.cc	/^Random::genrand(uint32_t max)$/;"	f	class:Random
genrand	src/base/random.cc	/^Random::genrand(uint64_t max)$/;"	f	class:Random
genrand	src/base/random_mt.cc	/^Random::genrand()$/;"	f	class:Random
gentrap	src/arch/alpha/osfpal.hh	/^        gentrap = 0xaa,$/;"	e	enum:PAL::__anon3
get	src/base/inet.hh	/^    Ip6Hdr *get() { return (Ip6Hdr *)(p->data + sizeof(eth_hdr)$/;"	f	class:Net::Ip6Ptr
get	src/base/inet.hh	/^    IpHdr *get() { return (IpHdr *)(p->data + sizeof(eth_hdr) +$/;"	f	class:Net::IpPtr
get	src/base/inet.hh	/^    TcpHdr *get() { return (TcpHdr *)(p->data + _off); }$/;"	f	class:Net::TcpPtr
get	src/base/inet.hh	/^    UdpHdr *get() { return (UdpHdr *)(p->data + _off); }$/;"	f	class:Net::UdpPtr
get	src/base/inet.hh	/^    const Ip6Hdr *get() const$/;"	f	class:Net::Ip6Ptr
get	src/base/inet.hh	/^    const IpHdr *get() const$/;"	f	class:Net::IpPtr
get	src/base/inet.hh	/^    const TcpHdr *get() const { return (const TcpHdr *)(p->data + _off); }$/;"	f	class:Net::TcpPtr
get	src/base/inet.hh	/^    const UdpHdr *get() const { return (const UdpHdr *)(p->data + _off); }$/;"	f	class:Net::UdpPtr
get	src/base/refcnt.hh	/^    T *get() const { return data; }$/;"	f	class:RefCountingPtr
get	src/cpu/base_dyn_inst.hh	/^        void get(double& d) { d = dbl; }$/;"	f	union:BaseDynInst::Result
get	src/cpu/base_dyn_inst.hh	/^        void get(uint64_t& i) { i = integer; }$/;"	f	union:BaseDynInst::Result
get	src/cpu/checker/cpu.hh	/^        void get(double& d) { d = dbl; }$/;"	f	union:CheckerCPU::Result
get	src/cpu/checker/cpu.hh	/^        void get(uint64_t& i) { i = integer; }$/;"	f	union:CheckerCPU::Result
get	src/mem/packet_access.hh	/^Packet::get()$/;"	f	class:Packet
get	src/mem/ruby/network/orion/OrionConfig.hh	/^T OrionConfig::get(const string& key_) const$/;"	f	class:OrionConfig
get	src/mem/slicc/util.py	/^    def get(self, item, failobj=None):$/;"	m	class:PairContainer
get	src/python/m5/config.py	/^def get(name):$/;"	f
get	src/python/m5/util/multidict.py	/^    def get(self, key, default=None):$/;"	m	class:multidict
get	src/python/m5/util/smartdict.py	/^    def get(self, key, default='False'):$/;"	m	class:SmartDict
getAPIVersion	src/cpu/kvm/vm.hh	/^    int getAPIVersion() const { return apiVersion; }$/;"	f	class:Kvm
getAccessDepth	src/mem/request.hh	/^    int getAccessDepth() const { return depth; }$/;"	f	class:Request
getAccessLatency	src/mem/request.hh	/^    Tick getAccessLatency() const { return accessDelta; }$/;"	f	class:Request
getAccessMode	src/mem/ruby/slicc_interface/RubyRequest.hh	/^    const RubyAccessMode& getAccessMode() const { return m_AccessMode; }$/;"	f	class:RubyRequest
getActionShorthands	src/mem/slicc/symbols/Transition.py	/^    def getActionShorthands(self):$/;"	m	class:Transition
getActivityCount	src/cpu/activity.hh	/^    int getActivityCount() { return activityCount; }$/;"	f	class:ActivityRecorder
getAdaptiveRouting	src/mem/ruby/network/simple/SimpleNetwork.hh	/^    bool getAdaptiveRouting() {return m_adaptive_routing; }$/;"	f	class:SimpleNetwork
getAddr	src/mem/packet.hh	/^    Addr getAddr() const { assert(flags.isSet(VALID_ADDR)); return addr; }$/;"	f	class:Packet
getAddr	src/sim/insttracer.hh	/^    Addr getAddr() { return addr; }$/;"	f	class:Trace::InstRecord
getAddrRange	src/mem/abstract_mem.cc	/^AbstractMemory::getAddrRange() const$/;"	f	class:AbstractMemory
getAddrRanges	src/dev/arm/gic_pl390.cc	/^Pl390::getAddrRanges() const$/;"	f	class:Pl390
getAddrRanges	src/dev/arm/hdlcd.cc	/^HDLcd::getAddrRanges() const$/;"	f	class:HDLcd
getAddrRanges	src/dev/arm/pl111.cc	/^Pl111::getAddrRanges() const$/;"	f	class:Pl111
getAddrRanges	src/dev/arm/vgic.cc	/^VGic::getAddrRanges() const$/;"	f	class:VGic
getAddrRanges	src/dev/io_device.cc	/^BasicPioDevice::getAddrRanges() const$/;"	f	class:BasicPioDevice
getAddrRanges	src/dev/io_device.cc	/^PioPort::getAddrRanges() const$/;"	f	class:PioPort
getAddrRanges	src/dev/pcidev.cc	/^PciDevice::PciConfigPort::getAddrRanges() const$/;"	f	class:PciDevice::PciConfigPort
getAddrRanges	src/dev/pcidev.cc	/^PciDevice::getAddrRanges() const$/;"	f	class:PciDevice
getAddrRanges	src/dev/sparc/iob.cc	/^Iob::getAddrRanges() const$/;"	f	class:Iob
getAddrRanges	src/dev/uart8250.cc	/^Uart8250::getAddrRanges() const$/;"	f	class:Uart8250
getAddrRanges	src/dev/x86/i8042.cc	/^X86ISA::I8042::getAddrRanges() const$/;"	f	class:X86ISA::I8042
getAddrRanges	src/dev/x86/intdev.hh	/^        AddrRangeList getAddrRanges() const$/;"	f	class:X86ISA::IntDevice::IntSlavePort
getAddrRanges	src/mem/addr_mapper.cc	/^RangeAddrMapper::getAddrRanges() const$/;"	f	class:RangeAddrMapper
getAddrRanges	src/mem/addr_mapper.hh	/^        AddrRangeList getAddrRanges() const$/;"	f	class:AddrMapper::MapperSlavePort
getAddrRanges	src/mem/bridge.cc	/^Bridge::BridgeSlavePort::getAddrRanges() const$/;"	f	class:Bridge::BridgeSlavePort
getAddrRanges	src/mem/bus.cc	/^BaseBus::getAddrRanges() const$/;"	f	class:BaseBus
getAddrRanges	src/mem/cache/base.hh	/^    const AddrRangeList &getAddrRanges() const { return addrRanges; }$/;"	f	class:BaseCache
getAddrRanges	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::CpuSidePort::getAddrRanges() const$/;"	f	class:Cache::CpuSidePort
getAddrRanges	src/mem/coherent_bus.hh	/^        virtual AddrRangeList getAddrRanges() const$/;"	f	class:CoherentBus::CoherentBusSlavePort
getAddrRanges	src/mem/comm_monitor.cc	/^CommMonitor::getAddrRanges() const$/;"	f	class:CommMonitor
getAddrRanges	src/mem/comm_monitor.hh	/^        AddrRangeList getAddrRanges() const$/;"	f	class:CommMonitor::MonitorSlavePort
getAddrRanges	src/mem/dram_ctrl.cc	/^DRAMCtrl::MemoryPort::getAddrRanges() const$/;"	f	class:DRAMCtrl::MemoryPort
getAddrRanges	src/mem/dramsim2.cc	/^DRAMSim2::MemoryPort::getAddrRanges() const$/;"	f	class:DRAMSim2::MemoryPort
getAddrRanges	src/mem/noncoherent_bus.hh	/^        virtual AddrRangeList getAddrRanges() const$/;"	f	class:NoncoherentBus::NoncoherentBusSlavePort
getAddrRanges	src/mem/port.cc	/^MasterPort::getAddrRanges() const$/;"	f	class:MasterPort
getAddrRanges	src/mem/ruby/system/RubyPort.cc	/^RubyPort::PioSlavePort::getAddrRanges() const$/;"	f	class:RubyPort::PioSlavePort
getAddrRanges	src/mem/ruby/system/RubyPort.hh	/^        AddrRangeList getAddrRanges() const$/;"	f	class:RubyPort::MemSlavePort
getAddrRanges	src/mem/simple_mem.cc	/^SimpleMemory::MemoryPort::getAddrRanges() const$/;"	f	class:SimpleMemory::MemoryPort
getAddrTable	src/base/loader/symtab.hh	/^    const ATable &getAddrTable() const { return addrTable; }$/;"	f	class:SymbolTable
getAddrValid	src/sim/insttracer.hh	/^    bool getAddrValid() { return addr_valid; }$/;"	f	class:Trace::InstRecord
getAddress	src/cpu/testers/rubytest/Check.hh	/^    const Address& getAddress() { return m_address; }$/;"	f	class:Check
getAddress	src/mem/ruby/common/Address.hh	/^    physical_address_t getAddress() const {return m_address;}$/;"	f	class:Address
getAddress	src/mem/ruby/common/SubBlock.hh	/^    const Address& getAddress() const { return m_address; }$/;"	f	class:SubBlock
getAddress	src/mem/ruby/profiler/AccessTraceForAddress.hh	/^    const Address& getAddress() const { return m_addr; }$/;"	f	class:AccessTraceForAddress
getAddressProfiler	src/mem/ruby/profiler/Profiler.hh	/^    AddressProfiler* getAddressProfiler() { return m_address_profiler_ptr; }$/;"	f	class:Profiler
getAllDest	src/mem/ruby/common/NetDest.cc	/^NetDest::getAllDest()$/;"	f	class:NetDest
getAllInstructions	src/mem/ruby/profiler/Profiler.hh	/^    bool getAllInstructions() { return m_all_instructions; }$/;"	f	class:Profiler
getAllType	src/mem/slicc/symbols/SymbolTable.py	/^    def getAllType(self, type):$/;"	m	class:SymbolTable
getAndFormatOneReg	src/cpu/kvm/base.cc	/^BaseKvmCPU::getAndFormatOneReg(uint64_t id) const$/;"	f	class:BaseKvmCPU
getAndIncrementInstSeq	src/cpu/inorder/cpu.hh	/^    InstSeqNum getAndIncrementInstSeq(ThreadID tid)$/;"	f	class:InOrderCPU
getAndIncrementInstSeq	src/cpu/o3/cpu.hh	/^    InstSeqNum getAndIncrementInstSeq()$/;"	f	class:FullO3CPU
getAndIncrementInstSeq	src/cpu/ozone/front_end.hh	/^    InstSeqNum getAndIncrementInstSeq()$/;"	f	class:FrontEnd
getArch	src/base/loader/object_file.hh	/^    Arch  getArch()  const { return arch; }$/;"	f	class:ObjectFile
getArchFlags	src/mem/request.hh	/^    getArchFlags()$/;"	f	class:Request
getArchTimer	src/arch/arm/isa.cc	/^ISA::getArchTimer(ThreadContext *tc, int cpu_id)$/;"	f	class:ArmISA::ISA
getArchTimer	src/arch/arm/system.cc	/^ArmSystem::getArchTimer(int cpu_id) const$/;"	f	class:ArmSystem
getArchTimer	src/dev/arm/generic_timer.hh	/^    ArchTimer *getArchTimer(int cpu_id) { return &_archTimers[cpu_id]; }$/;"	f	class:GenericTimer
getArg	src/sim/arguments.cc	/^Arguments::getArg(uint16_t size, bool fp)$/;"	f	class:Arguments
getArgument	src/arch/alpha/utility.cc	/^getArgument(ThreadContext *tc, int &number, uint16_t size, bool fp)$/;"	f	namespace:AlphaISA
getArgument	src/arch/arm/utility.cc	/^getArgument(ThreadContext *tc, int &number, uint16_t size, bool fp)$/;"	f	namespace:ArmISA
getArgument	src/arch/mips/utility.cc	/^getArgument(ThreadContext *tc, int &number, uint16_t size, bool fp)$/;"	f	namespace:MipsISA
getArgument	src/arch/null/utility.hh	/^inline uint64_t getArgument(ThreadContext *tc, int &number, uint16_t size,$/;"	f	namespace:NullISA
getArgument	src/arch/power/utility.cc	/^getArgument(ThreadContext *tc, int &number, uint16_t size, bool fp)$/;"	f	namespace:PowerISA
getArgument	src/arch/sparc/utility.cc	/^getArgument(ThreadContext *tc, int &number, uint16_t size, bool fp)$/;"	f	namespace:SparcISA
getArgument	src/arch/x86/utility.cc	/^getArgument(ThreadContext *tc, int &number, uint16_t size, bool fp)$/;"	f	namespace:X86ISA
getAsid	src/mem/request.hh	/^    getAsid()$/;"	f	class:Request
getAttr	src/arch/arm/tlb.hh	/^    getAttr() const$/;"	f	class:ArmISA::TLB
getBAR	src/dev/pcidev.hh	/^    getBAR(Addr addr)$/;"	f	class:PciDevice
getBAR	src/dev/pcidev.hh	/^    getBAR(Addr addr, int &bar, Addr &offs)$/;"	f	class:PciDevice
getBackingStore	src/mem/physical.hh	/^    std::vector<std::pair<AddrRange, uint8_t*> > getBackingStore() const$/;"	f	class:PhysicalMemory
getBank	src/mem/ruby/system/RubyMemoryControl.cc	/^RubyMemoryControl::getBank(const physical_address_t addr) const$/;"	f	class:RubyMemoryControl
getBanksPerRank	src/mem/ruby/system/RubyMemoryControl.hh	/^    int getBanksPerRank() { return m_banks_per_rank; };$/;"	f	class:RubyMemoryControl
getBaseAddr	src/dev/ide_disk.hh	/^    uint32_t getBaseAddr()$/;"	f	class:PrdTableEntry
getBinSize	src/mem/ruby/common/Histogram.hh	/^    int getBinSize() const { return m_binsize; }$/;"	f	class:Histogram
getBins	src/mem/ruby/common/Histogram.hh	/^    uint32_t getBins() const { return m_data.size(); }$/;"	f	class:Histogram
getBits	src/base/bitunion.hh	/^        getBits(int first, int last) const$/;"	f	class:BitfieldBackend::BitfieldBase
getBlockPtr	src/mem/ruby/system/MemoryVector.hh	/^MemoryVector::getBlockPtr(const PhysAddress & paddr)$/;"	f	class:MemoryVector
getBlockSize	src/mem/cache/base.hh	/^    getBlockSize() const$/;"	f	class:BaseCache
getBlockSize	src/mem/cache/tags/fa_lru.hh	/^    getBlockSize() const$/;"	f	class:FALRU
getBlockSize	src/mem/cache/tags/lru.hh	/^    getBlockSize() const$/;"	f	class:LRU
getBlockSizeBits	src/mem/ruby/system/System.hh	/^    static uint32_t getBlockSizeBits() { return m_block_size_bits; }$/;"	f	class:RubySystem
getBlockSizeBytes	src/mem/ruby/system/System.hh	/^    static uint32_t getBlockSizeBytes() { return m_block_size_bytes; }$/;"	f	class:RubySystem
getBuf	src/dev/i8254xGBe_defs.hh	/^inline Addr getBuf(TxDesc *d) { assert(isLegacy(d) || isData(d)); return d->d1; }$/;"	f	namespace:iGbReg::TxdOp
getBufferSize	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.hh	/^    int getBufferSize() { return m_buffer_size; }$/;"	f	class:GarnetNetwork
getBufferSize	src/mem/ruby/network/simple/SimpleNetwork.hh	/^    int getBufferSize() { return m_buffer_size; }$/;"	f	class:SimpleNetwork
getBuffersPerCtrlVC	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.hh	/^    int getBuffersPerCtrlVC() {return m_buffers_per_ctrl_vc; }$/;"	f	class:GarnetNetwork_d
getBuffersPerDataVC	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.hh	/^    int getBuffersPerDataVC() {return m_buffers_per_data_vc; }$/;"	f	class:GarnetNetwork_d
getBusPacket	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::getBusPacket(PacketPtr cpu_pkt, BlkType *blk,$/;"	f	class:Cache
getByte	src/mem/ruby/common/DataBlock.hh	/^DataBlock::getByte(int whichByte) const$/;"	f	class:DataBlock
getByte	src/mem/ruby/common/SubBlock.hh	/^    uint8_t getByte(int offset) const { return m_data[offset]; }$/;"	f	class:SubBlock
getByteCount	src/dev/ide_disk.hh	/^    uint32_t getByteCount()$/;"	f	class:PrdTableEntry
getCCList	src/cpu/o3/free_list.hh	/^    SimpleFreeList *getCCList() { return &ccList; }$/;"	f	class:UnifiedFreeList
getCCObject	src/python/m5/SimObject.py	/^    def getCCObject(self):$/;"	f
getCCParams	src/python/m5/SimObject.py	/^    def getCCParams(self):$/;"	f
getCCReg	src/cpu/o3/free_list.hh	/^    PhysRegIndex getCCReg() { return ccList.getReg(); }$/;"	f	class:UnifiedFreeList
getCause	src/sim/sim_events.hh	/^    const std::string getCause() const { return cause; }$/;"	f	class:GlobalSimLoopExitEvent
getCause	src/sim/sim_events.hh	/^    const std::string getCause() const { return cause; }$/;"	f	class:LocalSimLoopExitEvent
getCauseIP	src/arch/mips/interrupts.cc	/^getCauseIP(ThreadContext *tc) {$/;"	f	namespace:MipsISA
getChannel	src/mem/ruby/system/RubyMemoryControl.cc	/^RubyMemoryControl::getChannel(const physical_address_t addr) const$/;"	f	class:RubyMemoryControl
getCheck	src/cpu/testers/rubytest/CheckTable.cc	/^CheckTable::getCheck(const Address& address)$/;"	f	class:CheckTable
getCheckFlush	src/cpu/testers/rubytest/RubyTester.hh	/^    bool getCheckFlush() { return m_check_flush; }$/;"	f	class:RubyTester
getCheckerCpuPtr	src/cpu/checker/thread_context.hh	/^    CheckerCPU *getCheckerCpuPtr()$/;"	f	class:CheckerThreadContext
getCheckerCpuPtr	src/cpu/inorder/thread_context.hh	/^    CheckerCPU *getCheckerCpuPtr() { return NULL; }$/;"	f	class:InOrderThreadContext
getCheckerCpuPtr	src/cpu/o3/thread_context.hh	/^    CheckerCPU *getCheckerCpuPtr() { return NULL; }$/;"	f	class:O3ThreadContext
getCheckerCpuPtr	src/cpu/simple_thread.hh	/^    CheckerCPU *getCheckerCpuPtr() { return NULL; }$/;"	f	class:SimpleThread
getCheckerCpuPtr	src/cpu/thread_context.hh	/^    CheckerCPU *getCheckerCpuPtr() { return actualTC->getCheckerCpuPtr(); }$/;"	f	class:ProxyThreadContext
getCheckpoint	src/python/swig/pyobject.hh	/^getCheckpoint(const std::string &cpt_dir)$/;"	f
getChildDrainCount	src/mem/ruby/system/RubyPort.cc	/^RubyPort::getChildDrainCount(DrainManager *dm)$/;"	f	class:RubyPort
getCode	src/sim/init.cc	/^EmbeddedPython::getCode() const$/;"	f	class:EmbeddedPython
getCode	src/sim/sim_events.hh	/^    const int getCode() const { return code; }$/;"	f	class:GlobalSimLoopExitEvent
getCode	src/sim/sim_events.hh	/^    const int getCode() const { return code; }$/;"	f	class:LocalSimLoopExitEvent
getComment	src/mem/ruby/network/orion/ConfigFile.hh	/^	string getComment() const { return myComment; }$/;"	f	class:ConfigFile
getCommittingThread	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::getCommittingThread()$/;"	f	class:DefaultCommit
getCondCode	src/arch/mips/utility.cc	/^getCondCode(uint32_t fcsr, int cc_idx)$/;"	f	namespace:MipsISA
getConfAddrRanges	src/mem/physical.cc	/^PhysicalMemory::getConfAddrRanges() const$/;"	f	class:PhysicalMemory
getConsumer	src/mem/ruby/buffers/MessageBuffer.hh	/^    Consumer* getConsumer() { return m_consumer; }$/;"	f	class:MessageBuffer
getConsumer	src/mem/ruby/system/RubyMemoryControl.hh	/^    Consumer* getConsumer() { return m_consumer_ptr; };$/;"	f	class:RubyMemoryControl
getConsumer	src/mem/ruby/system/WireBuffer.hh	/^    Consumer* getConsumer() { return m_consumer_ptr; };$/;"	f	class:WireBuffer
getContext	src/cpu/base.hh	/^   virtual ThreadContext *getContext(int tn) { return threadContexts[tn]; }$/;"	f	class:BaseCPU
getContext	src/cpu/kvm/base.cc	/^BaseKvmCPU::getContext(int tn)$/;"	f	class:BaseKvmCPU
getCount	src/cpu/o3/inst_queue.hh	/^    unsigned getCount(ThreadID tid) { return count[tid]; };$/;"	f	class:InstructionQueue
getCount	src/cpu/o3/lsq.hh	/^    int getCount(ThreadID tid)$/;"	f	class:LSQ
getCount	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::getCount()$/;"	f	class:LSQ
getCount	src/cpu/o3/lsq_unit.hh	/^    unsigned getCount() { return loads + stores; }$/;"	f	class:LSQUnit
getCount	src/cpu/ozone/inst_queue.hh	/^    unsigned getCount(ThreadID tid) { return count[tid]; };$/;"	f	class:InstQueue
getCount	src/cpu/ozone/lsq_unit.hh	/^    unsigned getCount() { return loads + stores; }$/;"	f	class:OzoneLSQ
getCount	src/cpu/ozone/lw_lsq.hh	/^    unsigned getCount() { return loads + stores; }$/;"	f	class:OzoneLWLSQ
getCount	src/mem/ruby/filters/BlockBloomFilter.cc	/^BlockBloomFilter::getCount(const Address& addr)$/;"	f	class:BlockBloomFilter
getCount	src/mem/ruby/filters/BulkBloomFilter.cc	/^BulkBloomFilter::getCount(const Address& addr)$/;"	f	class:BulkBloomFilter
getCount	src/mem/ruby/filters/GenericBloomFilter.cc	/^GenericBloomFilter::getCount(const Address& addr)$/;"	f	class:GenericBloomFilter
getCount	src/mem/ruby/filters/H3BloomFilter.cc	/^H3BloomFilter::getCount(const Address& addr)$/;"	f	class:H3BloomFilter
getCount	src/mem/ruby/filters/LSB_CountingBloomFilter.cc	/^LSB_CountingBloomFilter::getCount(const Address& addr)$/;"	f	class:LSB_CountingBloomFilter
getCount	src/mem/ruby/filters/MultiBitSelBloomFilter.cc	/^MultiBitSelBloomFilter::getCount(const Address& addr)$/;"	f	class:MultiBitSelBloomFilter
getCount	src/mem/ruby/filters/MultiGrainBloomFilter.cc	/^MultiGrainBloomFilter::getCount(const Address& addr)$/;"	f	class:MultiGrainBloomFilter
getCount	src/mem/ruby/filters/NonCountingBloomFilter.cc	/^NonCountingBloomFilter::getCount(const Address& addr)$/;"	f	class:NonCountingBloomFilter
getCount	src/sim/drain.hh	/^    unsigned int getCount() const { return _count; }$/;"	f	class:DrainManager
getCount	src/sim/sim_events.hh	/^    const int getCount() const { return count; }$/;"	f	class:CountedDrainEvent
getCpSeq	src/sim/insttracer.hh	/^    InstSeqNum getCpSeq() { return cp_seq; }$/;"	f	class:Trace::InstRecord
getCpSeqValid	src/sim/insttracer.hh	/^    bool getCpSeqValid() { return cp_seq_valid; }$/;"	f	class:Trace::InstRecord
getCpuName	src/cpu/inorder/thread_context.hh	/^    std::string getCpuName() { return cpu->name(); }$/;"	f	class:InOrderThreadContext
getCpuPort	src/cpu/testers/directedtest/RubyDirectedTester.cc	/^RubyDirectedTester::getCpuPort(int idx)$/;"	f	class:RubyDirectedTester
getCpuPtr	src/cpu/base_dyn_inst.hh	/^    BaseCPU *getCpuPtr() { return cpu; }$/;"	f	class:BaseDynInst
getCpuPtr	src/cpu/checker/thread_context.hh	/^    BaseCPU *getCpuPtr() { return actualTC->getCpuPtr(); }$/;"	f	class:CheckerThreadContext
getCpuPtr	src/cpu/inorder/thread_context.hh	/^    BaseCPU *getCpuPtr() { return cpu; }$/;"	f	class:InOrderThreadContext
getCpuPtr	src/cpu/o3/thread_context.hh	/^    virtual BaseCPU *getCpuPtr() { return cpu; }$/;"	f	class:O3ThreadContext
getCpuPtr	src/cpu/ozone/cpu.hh	/^    BaseCPU *getCpuPtr() { return this; }$/;"	f	class:OzoneCPU
getCpuPtr	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::OzoneTC::getCpuPtr()$/;"	f	class:OzoneCPU::OzoneTC
getCpuPtr	src/cpu/simple_thread.hh	/^    BaseCPU *getCpuPtr() { return baseCpu; }$/;"	f	class:SimpleThread
getCpuPtr	src/cpu/thread_context.hh	/^    BaseCPU *getCpuPtr() { return actualTC->getCpuPtr(); }$/;"	f	class:ProxyThreadContext
getCreditQueue	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.hh	/^    flitBuffer_d* getCreditQueue() { return creditQueue; }$/;"	f	class:InputUnit_d
getCso	src/dev/i8254xGBe_defs.hh	/^inline uint8_t getCso(TxDesc *d) { assert(isLegacy(d)); return bits(d->d2, 23,16); }$/;"	f	namespace:iGbReg::TxdOp
getCss	src/dev/i8254xGBe_defs.hh	/^inline uint8_t getCss(TxDesc *d) { assert(isLegacy(d)); return bits(d->d2, 47,40); }$/;"	f	namespace:iGbReg::TxdOp
getCurResSlot	src/cpu/inorder/inorder_dyn_inst.hh	/^    unsigned getCurResSlot() { return curResSlot; }$/;"	f	class:InOrderDynInst
getCurTick	src/sim/eventq.hh	/^    Tick getCurTick() { return _curTick; }$/;"	f	class:EventQueue
getDTBPtr	src/cpu/checker/cpu.hh	/^    TheISA::TLB* getDTBPtr() { return dtb; }$/;"	f	class:CheckerCPU
getDTBPtr	src/cpu/checker/thread_context.hh	/^    TheISA::TLB *getDTBPtr() { return actualTC->getDTBPtr(); }$/;"	f	class:CheckerThreadContext
getDTBPtr	src/cpu/inorder/cpu.cc	/^InOrderCPU::getDTBPtr()$/;"	f	class:InOrderCPU
getDTBPtr	src/cpu/inorder/thread_context.hh	/^    TheISA::TLB *getDTBPtr() { return cpu->getDTBPtr(); }$/;"	f	class:InOrderThreadContext
getDTBPtr	src/cpu/o3/thread_context.hh	/^    TheISA::TLB *getDTBPtr() { return cpu->dtb; }$/;"	f	class:O3ThreadContext
getDTBPtr	src/cpu/ozone/cpu.hh	/^        TheISA::TLB * getDTBPtr() { return cpu->dtb; }$/;"	f	class:OzoneCPU::OzoneTC
getDTBPtr	src/cpu/simple_thread.hh	/^    TheISA::TLB *getDTBPtr() { return dtb; }$/;"	f	class:SimpleThread
getDTBPtr	src/cpu/thread_context.hh	/^    TheISA::TLB *getDTBPtr() { return actualTC->getDTBPtr(); }$/;"	f	class:ProxyThreadContext
getData	src/cpu/inorder/resource.hh	/^    virtual PacketDataPtr getData() { return NULL; }$/;"	f	class:ResourceRequest
getData	src/cpu/inorder/resources/cache_unit.hh	/^    virtual PacketDataPtr getData()$/;"	f	class:CacheRequest
getData	src/dev/x86/i8042.hh	/^    uint8_t getData()$/;"	f	class:X86ISA::PS2Device
getData	src/mem/ruby/common/DataBlock.cc	/^DataBlock::getData(int offset, int len) const$/;"	f	class:DataBlock
getData	src/mem/ruby/common/Histogram.hh	/^    uint64_t getData(int index) const { return m_data[index]; }$/;"	f	class:Histogram
getDataPort	src/cpu/checker/cpu.hh	/^    MasterPort &getDataPort()$/;"	f	class:CheckerCPU
getDataPort	src/cpu/inorder/cpu.hh	/^    virtual MasterPort &getDataPort() { return dataPort; }$/;"	f	class:InOrderCPU
getDataPort	src/cpu/kvm/base.hh	/^    MasterPort &getDataPort() { return dataPort; }$/;"	f	class:BaseKvmCPU
getDataPort	src/cpu/o3/cpu.hh	/^    virtual MasterPort &getDataPort() { return dcachePort; }$/;"	f	class:FullO3CPU
getDataPort	src/cpu/simple/atomic.hh	/^    virtual MasterPort &getDataPort() { return dcachePort; }$/;"	f	class:AtomicSimpleCPU
getDataPort	src/cpu/simple/timing.hh	/^    virtual MasterPort &getDataPort() { return dcachePort; }$/;"	f	class:TimingSimpleCPU
getDataStatus	src/sim/insttracer.hh	/^    int getDataStatus() { return data_status; }$/;"	f	class:Trace::InstRecord
getDataUnit	src/cpu/inorder/resource_pool.hh	/^    CacheUnit *getDataUnit() const { return dataUnit; }$/;"	f	class:ResourcePool
getDcachePort	src/cpu/ozone/lw_back_end.hh	/^    Port *getDcachePort() { return LSQ.getDcachePort(); }$/;"	f	class:LWBackEnd
getDcachePort	src/cpu/ozone/lw_lsq.hh	/^    Port *getDcachePort() { return &dcachePort; }$/;"	f	class:OzoneLWLSQ
getDebugRegisters	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::getDebugRegisters(struct kvm_debugregs &regs) const$/;"	f	class:X86KvmCPU
getDecoderPtr	src/cpu/checker/thread_context.hh	/^    TheISA::Decoder *getDecoderPtr() { return actualTC->getDecoderPtr(); }$/;"	f	class:CheckerThreadContext
getDecoderPtr	src/cpu/inorder/cpu.cc	/^InOrderCPU::getDecoderPtr(unsigned tid)$/;"	f	class:InOrderCPU
getDecoderPtr	src/cpu/inorder/thread_context.hh	/^    getDecoderPtr()$/;"	f	class:InOrderThreadContext
getDecoderPtr	src/cpu/o3/thread_context.hh	/^    getDecoderPtr()$/;"	f	class:O3ThreadContext
getDecoderPtr	src/cpu/simple_thread.hh	/^    TheISA::Decoder *getDecoderPtr() { return &decoder; }$/;"	f	class:SimpleThread
getDecoderPtr	src/cpu/thread_context.hh	/^    TheISA::Decoder *getDecoderPtr() { return actualTC->getDecoderPtr(); }$/;"	f	class:ProxyThreadContext
getDeferredMemInstToExecute	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::getDeferredMemInstToExecute()$/;"	f	class:InstructionQueue
getDelayHist	src/mem/ruby/slicc_interface/AbstractController.hh	/^    Stats::Histogram& getDelayHist() { return m_delayHistogram; }$/;"	f	class:AbstractController
getDelayVCHist	src/mem/ruby/slicc_interface/AbstractController.hh	/^    Stats::Histogram& getDelayVCHist(uint32_t index)$/;"	f	class:AbstractController
getDelayedTicks	src/mem/ruby/slicc_interface/Message.hh	/^    const Tick getDelayedTicks() const {return m_DelayedTicks;}$/;"	f	class:Message
getDelimiter	src/mem/ruby/network/orion/ConfigFile.hh	/^	string getDelimiter() const { return myDelimiter; }$/;"	f	class:ConfigFile
getDependents	src/cpu/ozone/dyn_inst.hh	/^    std::vector<DynInstPtr> &getDependents() { return dependents; }$/;"	f	class:OzoneDynInst
getDesc	src/arch/alpha/linux/process.cc	/^AlphaLinuxProcess::getDesc(int callnum)$/;"	f	class:AlphaLinuxProcess
getDesc	src/arch/alpha/tru64/process.cc	/^AlphaTru64Process::getDesc(int callnum)$/;"	f	class:AlphaTru64Process
getDesc	src/arch/arm/linux/process.cc	/^ArmLinuxProcess32::getDesc(int callnum)$/;"	f	class:ArmLinuxProcess32
getDesc	src/arch/arm/linux/process.cc	/^ArmLinuxProcess64::getDesc(int callnum)$/;"	f	class:ArmLinuxProcess64
getDesc	src/arch/arm/linux/process.cc	/^ArmLinuxProcessBits::SyscallTable::getDesc(int callnum) const$/;"	f	class:ArmLinuxProcessBits::SyscallTable
getDesc	src/arch/mips/linux/process.cc	/^MipsLinuxProcess::getDesc(int callnum)$/;"	f	class:MipsLinuxProcess
getDesc	src/arch/power/linux/process.cc	/^PowerLinuxProcess::getDesc(int callnum)$/;"	f	class:PowerLinuxProcess
getDesc	src/arch/sparc/linux/process.cc	/^SparcLinuxProcess::getDesc(int callnum)$/;"	f	class:SparcLinuxProcess
getDesc	src/arch/sparc/linux/process.hh	/^    getDesc(int callnum)$/;"	f	class:SparcISA::Sparc32LinuxProcess
getDesc	src/arch/sparc/linux/process.hh	/^    getDesc(int callnum)$/;"	f	class:SparcISA::Sparc64LinuxProcess
getDesc	src/arch/sparc/solaris/process.cc	/^SparcSolarisProcess::getDesc(int callnum)$/;"	f	class:SparcSolarisProcess
getDesc	src/arch/x86/process.cc	/^X86LiveProcess::getDesc(int callnum)$/;"	f	class:X86LiveProcess
getDesc32	src/arch/sparc/linux/process.cc	/^SparcLinuxProcess::getDesc32(int callnum)$/;"	f	class:SparcLinuxProcess
getDescription	src/mem/ruby/buffers/MessageBuffer.hh	/^    std::string getDescription() { return m_name;}$/;"	f	class:MessageBuffer
getDescription	src/mem/ruby/system/RubyMemoryControl.hh	/^    std::string getDescription() { return m_description; };$/;"	f	class:RubyMemoryControl
getDescription	src/mem/ruby/system/WireBuffer.hh	/^    std::string getDescription() { return m_description; };$/;"	f	class:WireBuffer
getDest	src/mem/packet.hh	/^    PortID getDest() const { assert(isDestValid()); return dest; }$/;"	f	class:Packet
getDestIdxNum	src/cpu/inorder/inorder_dyn_inst.hh	/^    int getDestIdxNum(PhysRegIndex dest_idx)$/;"	f	class:InOrderDynInst
getDimmsPerChannel	src/mem/ruby/system/RubyMemoryControl.hh	/^    int getDimmsPerChannel() { return m_dimms_per_channel; }$/;"	f	class:RubyMemoryControl
getDivOpSize	src/cpu/inorder/resources/mult_div_unit.cc	/^MultDivUnit::getDivOpSize(DynInstPtr inst)$/;"	f	class:MultDivUnit
getDoubleBits	src/arch/x86/utility.hh	/^    inline uint64_t getDoubleBits(double val) {$/;"	f	namespace:X86ISA
getDrainState	src/sim/drain.hh	/^    State getDrainState() const { return _drainState; }$/;"	f	class:Drainable
getEA	src/cpu/base_dyn_inst.hh	/^    const Addr &getEA() const { return instEffAddr; }$/;"	f	class:BaseDynInst
getEA	src/cpu/checker/cpu.hh	/^    Addr getEA()        { panic("SimpleCPU::getEA() not implemented\\n"); }$/;"	f	class:CheckerCPU
getEA	src/cpu/inorder/inorder_dyn_inst.hh	/^    const Addr &getEA() const { return instEffAddr; }$/;"	f	class:InOrderDynInst
getEA	src/cpu/simple/base.hh	/^    Addr getEA()        { panic("BaseSimpleCPU::getEA() not implemented\\n");$/;"	f	class:BaseSimpleCPU
getEOT	src/dev/ide_disk.hh	/^    uint16_t getEOT()$/;"	f	class:PrdTableEntry
getElapsedTime	src/sim/syscall_emul.hh	/^getElapsedTime(T1 &sec, T2 &usec)$/;"	f
getEmulEnv	src/arch/x86/insts/macroop.hh	/^    getEmulEnv()$/;"	f	class:X86ISA::MacroopBase
getEndpointBandwidth	src/mem/ruby/network/simple/SimpleNetwork.hh	/^    int getEndpointBandwidth() { return m_endpoint_bandwidth; }$/;"	f	class:SimpleNetwork
getEntry	src/arch/mips/tlb.cc	/^TLB::getEntry(unsigned Index) const$/;"	f	class:TLB
getEntry	src/arch/power/tlb.cc	/^TLB::getEntry(unsigned Index) const$/;"	f	class:TLB
getEthPort	src/dev/etherbus.cc	/^EtherBus::getEthPort(const std::string &if_name, int idx)$/;"	f	class:EtherBus
getEthPort	src/dev/etherlink.cc	/^EtherLink::getEthPort(const std::string &if_name, int idx)$/;"	f	class:EtherLink
getEthPort	src/dev/ethertap.cc	/^EtherTap::getEthPort(const std::string &if_name, int idx)$/;"	f	class:EtherTap
getEthPort	src/dev/i8254xGBe.cc	/^IGbE::getEthPort(const std::string &if_name, int idx)$/;"	f	class:IGbE
getEthPort	src/dev/ns_gige.cc	/^NSGigE::getEthPort(const std::string &if_name, int idx)$/;"	f	class:NSGigE
getEthPort	src/dev/sinic.cc	/^Device::getEthPort(const std::string &if_name, int idx)$/;"	f	class:Sinic::Device
getEventQueue	src/python/m5/event.py	/^def getEventQueue(index):$/;"	f
getEventQueue	src/sim/eventq.cc	/^getEventQueue(uint32_t index)$/;"	f
getExecutingAsid	src/arch/alpha/utility.hh	/^getExecutingAsid(ThreadContext *tc)$/;"	f	namespace:AlphaISA
getExecutingAsid	src/arch/arm/utility.hh	/^getExecutingAsid(ThreadContext *tc)$/;"	f	namespace:ArmISA
getExecutingAsid	src/arch/mips/utility.hh	/^getExecutingAsid(ThreadContext *tc)$/;"	f	namespace:MipsISA
getExecutingAsid	src/arch/power/utility.hh	/^getExecutingAsid(ThreadContext *tc)$/;"	f	namespace:PowerISA
getExecutingAsid	src/arch/sparc/utility.hh	/^getExecutingAsid(ThreadContext *tc)$/;"	f	namespace:SparcISA
getExecutingAsid	src/arch/x86/utility.hh	/^    getExecutingAsid(ThreadContext *tc)$/;"	f	namespace:X86ISA
getExt	src/base/inet.cc	/^Ip6Hdr::getExt(uint8_t ext_type) const$/;"	f	class:Net::Ip6Hdr
getExtMachInst	src/arch/x86/insts/macroop.hh	/^    getExtMachInst()$/;"	f	class:X86ISA::MacroopBase
getExtraData	src/mem/request.hh	/^    getExtraData() const$/;"	f	class:Request
getFPUState	src/cpu/kvm/base.cc	/^BaseKvmCPU::getFPUState(struct kvm_fpu &state) const$/;"	f	class:BaseKvmCPU
getFU	src/cpu/o3/fu_pool.cc	/^FUPool::FUIdxQueue::getFU()$/;"	f	class:FUPool::FUIdxQueue
getFault	src/cpu/base_dyn_inst.hh	/^    Fault getFault() const { return fault; }$/;"	f	class:BaseDynInst
getFault	src/cpu/inorder/inorder_dyn_inst.hh	/^    Fault getFault() { return fault; }$/;"	f	class:InOrderDynInst
getFault	src/cpu/ozone/front_end.hh	/^    Fault getFault() { return fetchFault; }$/;"	f	class:FrontEnd
getFault	src/cpu/translation.hh	/^    getFault() const$/;"	f	class:WholeTranslationState
getFaultAddrReg64	src/arch/arm/faults.cc	/^ArmFault::getFaultAddrReg64() const$/;"	f	class:ArmISA::ArmFault
getFetchSeq	src/sim/insttracer.hh	/^    InstSeqNum getFetchSeq() { return fetch_seq; }$/;"	f	class:Trace::InstRecord
getFetchSeqValid	src/sim/insttracer.hh	/^    bool getFetchSeqValid() { return fetch_seq_valid; }$/;"	f	class:Trace::InstRecord
getFetchingThread	src/cpu/inorder/first_stage.cc	/^FirstStage::getFetchingThread(FetchPriority &fetch_priority)$/;"	f	class:FirstStage
getFetchingThread	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::getFetchingThread(FetchPriority &fetch_priority)$/;"	f	class:DefaultFetch
getFilter	src/mem/ruby/filters/GenericBloomFilter.hh	/^    getFilter()$/;"	f	class:GenericBloomFilter
getFirstResponseToCompletionDelayHist	src/mem/ruby/system/Sequencer.hh	/^    getFirstResponseToCompletionDelayHist(const MachineType t) const$/;"	f	class:Sequencer
getFlags	src/arch/isa_parser.py	/^    def getFlags(self):$/;"	m	class:Operand
getFlags	src/cpu/translation.hh	/^    getFlags()$/;"	f	class:WholeTranslationState
getFlags	src/mem/request.hh	/^    getFlags()$/;"	f	class:Request
getFlags	src/sim/eventq.hh	/^    getFlags() const$/;"	f	class:Event
getFloatData	src/sim/insttracer.hh	/^    double getFloatData() { return data.as_double; }$/;"	f	class:Trace::InstRecord
getFloatReg	src/cpu/o3/free_list.hh	/^    PhysRegIndex getFloatReg() { return floatList.getReg(); }$/;"	f	class:UnifiedFreeList
getForwardRequestToFirstResponseHist	src/mem/ruby/system/Sequencer.hh	/^    getForwardRequestToFirstResponseHist(const MachineType t) const$/;"	f	class:Sequencer
getFrame	src/base/cp_annotate.hh	/^    inline uint64_t getFrame(ThreadContext *tc)$/;"	f	class:CPA
getFreeTid	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::getFreeTid()$/;"	f	class:FullO3CPU
getFromNetQueue	src/mem/ruby/network/garnet/BaseGarnetNetwork.cc	/^BaseGarnetNetwork::getFromNetQueue(NodeID id, bool ordered, int network_num,  $/;"	f	class:BaseGarnetNetwork
getFromNetQueue	src/mem/ruby/network/simple/SimpleNetwork.cc	/^SimpleNetwork::getFromNetQueue(NodeID id, bool ordered, int network_num,$/;"	f	class:SimpleNetwork
getFsr	src/arch/arm/faults.cc	/^AbortFault<T>::getFsr(ThreadContext *tc)$/;"	f	class:ArmISA::AbortFault
getFsr	src/arch/arm/faults.hh	/^    virtual FSR getFsr(ThreadContext *tc) { return 0; }$/;"	f	class:ArmISA::ArmFault
getGuestData	src/cpu/kvm/base.hh	/^    uint8_t *getGuestData(uint64_t offset) const {$/;"	f	class:BaseKvmCPU
getHash	src/base/bitmap.hh	/^    uint64_t getHash() const { return vc.getHash(data); }$/;"	f	class:Bitmap
getHash	src/base/vnc/convert.hh	/^    inline uint64_t getHash(const uint8_t *fb) const {$/;"	f	class:VideoConvert
getHitLatency	src/mem/cache/tags/fa_lru.hh	/^    Cycles getHitLatency() const$/;"	f	class:FALRU
getHitLatency	src/mem/cache/tags/lru.hh	/^    Cycles getHitLatency() const$/;"	f	class:LRU
getHitLatencyHist	src/mem/ruby/system/Sequencer.hh	/^    Stats::Histogram& getHitLatencyHist() { return m_hitLatencyHist; }$/;"	f	class:Sequencer
getHitMachLatencyHist	src/mem/ruby/system/Sequencer.hh	/^    Stats::Histogram& getHitMachLatencyHist(uint32_t t)$/;"	f	class:Sequencer
getHitTypeLatencyHist	src/mem/ruby/system/Sequencer.hh	/^    Stats::Histogram& getHitTypeLatencyHist(uint32_t t)$/;"	f	class:Sequencer
getHitTypeMachLatencyHist	src/mem/ruby/system/Sequencer.hh	/^    Stats::Histogram& getHitTypeMachLatencyHist(uint32_t r, uint32_t t)$/;"	f	class:Sequencer
getHostCycles	src/cpu/kvm/base.cc	/^BaseKvmCPU::getHostCycles() const$/;"	f	class:BaseKvmCPU
getHostCycles	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::getHostCycles() const$/;"	f	class:X86KvmCPU
getHotLines	src/mem/ruby/profiler/Profiler.hh	/^    bool getHotLines() { return m_hot_lines; }$/;"	f	class:Profiler
getHyperVector	src/arch/sparc/faults.cc	/^getHyperVector(ThreadContext * tc, Addr &PC, Addr &NPC, MiscReg TT)$/;"	f	namespace:SparcISA
getISR	src/arch/arm/interrupts.hh	/^    getISR(HCR hcr, CPSR cpsr, SCR scr)$/;"	f	class:ArmISA::Interrupts
getITBPtr	src/cpu/checker/cpu.hh	/^    TheISA::TLB* getITBPtr() { return itb; }$/;"	f	class:CheckerCPU
getITBPtr	src/cpu/checker/thread_context.hh	/^    TheISA::TLB *getITBPtr() { return actualTC->getITBPtr(); }$/;"	f	class:CheckerThreadContext
getITBPtr	src/cpu/inorder/cpu.cc	/^InOrderCPU::getITBPtr()$/;"	f	class:InOrderCPU
getITBPtr	src/cpu/inorder/thread_context.hh	/^    TheISA::TLB *getITBPtr() { return cpu->getITBPtr(); }$/;"	f	class:InOrderThreadContext
getITBPtr	src/cpu/o3/thread_context.hh	/^    TheISA::TLB *getITBPtr() { return cpu->itb; }$/;"	f	class:O3ThreadContext
getITBPtr	src/cpu/ozone/cpu.hh	/^        TheISA::TLB *getITBPtr() { return cpu->itb; }$/;"	f	class:OzoneCPU::OzoneTC
getITBPtr	src/cpu/simple_thread.hh	/^    TheISA::TLB *getITBPtr() { return itb; }$/;"	f	class:SimpleThread
getITBPtr	src/cpu/thread_context.hh	/^    TheISA::TLB *getITBPtr() { return actualTC->getITBPtr(); }$/;"	f	class:ProxyThreadContext
getIcachePort	src/cpu/ozone/front_end.hh	/^    Port *getIcachePort() { return &icachePort; }$/;"	f	class:FrontEnd
getId	src/cpu/inorder/resource.hh	/^    int getId() { return id; }$/;"	f	class:Resource
getId	src/mem/port.hh	/^    PortID getId() const { return id; }$/;"	f	class:Port
getId	src/mem/ruby/system/RubyPort.hh	/^    uint32_t getId() { return m_version; }$/;"	f	class:RubyPort
getImmediate	src/arch/x86/decoder.hh	/^    void getImmediate(int &collected, uint64_t &current, int size)$/;"	f	class:X86ISA::Decoder
getInLinks	src/mem/ruby/network/simple/PerfectSwitch.hh	/^    int getInLinks() const { return m_in.size(); }$/;"	f	class:PerfectSwitch
getIncomingLink	src/mem/ruby/slicc_interface/NetworkMessage.hh	/^    int getIncomingLink() const { return incoming_link; }$/;"	f	class:NetworkMessage
getIncompleteTimes	src/mem/ruby/system/Sequencer.hh	/^    Stats::Counter getIncompleteTimes(const MachineType t) const$/;"	f	class:Sequencer
getIndex	src/cpu/pred/btb.cc	/^DefaultBTB::getIndex(Addr instPC)$/;"	f	class:DefaultBTB
getIndex	src/mem/ruby/filters/BlockBloomFilter.cc	/^BlockBloomFilter::getIndex(const Address& addr)$/;"	f	class:BlockBloomFilter
getIndex	src/mem/ruby/filters/BulkBloomFilter.cc	/^BulkBloomFilter::getIndex(const Address& addr)$/;"	f	class:BulkBloomFilter
getIndex	src/mem/ruby/filters/GenericBloomFilter.cc	/^GenericBloomFilter::getIndex(const Address& addr)$/;"	f	class:GenericBloomFilter
getIndex	src/mem/ruby/filters/H3BloomFilter.cc	/^H3BloomFilter::getIndex(const Address& addr)$/;"	f	class:H3BloomFilter
getIndex	src/mem/ruby/filters/LSB_CountingBloomFilter.cc	/^LSB_CountingBloomFilter::getIndex(const Address& addr)$/;"	f	class:LSB_CountingBloomFilter
getIndex	src/mem/ruby/filters/MultiBitSelBloomFilter.cc	/^MultiBitSelBloomFilter::getIndex(const Address& addr)$/;"	f	class:MultiBitSelBloomFilter
getIndex	src/mem/ruby/filters/MultiGrainBloomFilter.cc	/^MultiGrainBloomFilter::getIndex(const Address& addr)$/;"	f	class:MultiGrainBloomFilter
getIndex	src/mem/ruby/filters/NonCountingBloomFilter.cc	/^NonCountingBloomFilter::getIndex(const Address& addr)$/;"	f	class:NonCountingBloomFilter
getInitialApicId	src/arch/x86/interrupts.hh	/^    int getInitialApicId() { return initialApicId; }$/;"	f	class:X86ISA::Interrupts
getInitialToForwardDelayHist	src/mem/ruby/system/Sequencer.hh	/^    getInitialToForwardDelayHist(const MachineType t) const$/;"	f	class:Sequencer
getInst	src/cpu/inorder/resource.hh	/^    DynInstPtr getInst() { return inst; }$/;"	f	class:ResourceRequest
getInst	src/cpu/ozone/front_end_impl.hh	/^FrontEnd<Impl>::getInst()$/;"	f	class:FrontEnd
getInstFromCacheline	src/cpu/ozone/front_end_impl.hh	/^FrontEnd<Impl>::getInstFromCacheline()$/;"	f	class:FrontEnd
getInstListIt	src/cpu/base_dyn_inst.hh	/^    ListIt &getInstListIt() { return instListIt; }$/;"	f	class:BaseDynInst
getInstListIt	src/cpu/inorder/inorder_dyn_inst.hh	/^    ListIt getInstListIt() { return instListIt; }$/;"	f	class:InOrderDynInst
getInstPort	src/cpu/checker/cpu.hh	/^    MasterPort &getInstPort()$/;"	f	class:CheckerCPU
getInstPort	src/cpu/inorder/cpu.hh	/^    virtual MasterPort &getInstPort() { return instPort; }$/;"	f	class:InOrderCPU
getInstPort	src/cpu/kvm/base.hh	/^    MasterPort &getInstPort() { return instPort; }$/;"	f	class:BaseKvmCPU
getInstPort	src/cpu/o3/cpu.hh	/^    virtual MasterPort &getInstPort() { return icachePort; }$/;"	f	class:FullO3CPU
getInstPort	src/cpu/simple/atomic.hh	/^    virtual MasterPort &getInstPort() { return icachePort; }$/;"	f	class:AtomicSimpleCPU
getInstPort	src/cpu/simple/timing.hh	/^    virtual MasterPort &getInstPort() { return icachePort; }$/;"	f	class:TimingSimpleCPU
getInstRecord	src/cpu/exetrace.hh	/^    getInstRecord(Tick when, ThreadContext *tc,$/;"	f	class:Trace::ExeTracer
getInstRecord	src/cpu/inorder/inorder_trace.cc	/^InOrderTrace::getInstRecord(Tick when, ThreadContext *tc,$/;"	f	class:Trace::InOrderTrace
getInstRecord	src/cpu/inorder/inorder_trace.cc	/^InOrderTrace::getInstRecord(unsigned num_stages, bool stage_tracing,$/;"	f	class:Trace::InOrderTrace
getInstRecord	src/cpu/inteltrace.hh	/^    getInstRecord(Tick when, ThreadContext *tc,$/;"	f	class:Trace::IntelTrace
getInstRecord	src/cpu/legiontrace.hh	/^    getInstRecord(Tick when, ThreadContext *tc,$/;"	f	class:Trace::LegionTrace
getInstRecord	src/cpu/nativetrace.hh	/^    getInstRecord(Tick when, ThreadContext *tc,$/;"	f	class:Trace::NativeTrace
getInstSize	src/arch/arm/decoder.hh	/^    int getInstSize() const$/;"	f	class:ArmISA::Decoder
getInstToExecute	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::getInstToExecute()$/;"	f	class:InstructionQueue
getInstUnit	src/cpu/inorder/resource_pool.hh	/^    FetchUnit *getInstUnit() const { return instUnit; }$/;"	f	class:ResourcePool
getInstance	src/sim/Root.py	/^    def getInstance(cls):$/;"	m	class:Root
getInstructionProfiler	src/mem/ruby/profiler/Profiler.hh	/^    AddressProfiler* getInstructionProfiler() { return m_inst_profiler_ptr; }$/;"	f	class:Profiler
getInsts	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::getInsts()$/;"	f	class:DefaultCommit
getIntAddrRange	src/arch/x86/interrupts.cc	/^X86ISA::Interrupts::getIntAddrRange() const$/;"	f	class:X86ISA::Interrupts
getIntAddrRange	src/dev/x86/i82094aa.cc	/^X86ISA::I82094AA::getIntAddrRange() const$/;"	f	class:X86ISA::I82094AA
getIntAddrRange	src/dev/x86/intdev.hh	/^    getIntAddrRange() const$/;"	f	class:X86ISA::IntDevice
getIntData	src/sim/insttracer.hh	/^    uint64_t getIntData() { return data.as_int; }$/;"	f	class:Trace::InstRecord
getIntReg	src/cpu/o3/free_list.hh	/^    PhysRegIndex getIntReg() { return intList.getReg(); }$/;"	f	class:UnifiedFreeList
getIntResultPtr	src/cpu/inorder/inorder_dyn_inst.hh	/^    IntReg* getIntResultPtr(int idx) { return &instResult[idx].res.intVal; }$/;"	f	class:InOrderDynInst
getIntSrcPtr	src/cpu/inorder/inorder_dyn_inst.hh	/^    TheISA::IntReg* getIntSrcPtr(int idx) { return &instSrc[idx].intVal; }$/;"	f	class:InOrderDynInst
getInternalDestination	src/mem/ruby/slicc_interface/NetworkMessage.hh	/^    getInternalDestination() const$/;"	f	class:NetworkMessage
getInternalDestination	src/mem/ruby/slicc_interface/NetworkMessage.hh	/^    getInternalDestination()$/;"	f	class:NetworkMessage
getInterrupt	src/arch/alpha/interrupts.hh	/^    getInterrupt(ThreadContext *tc)$/;"	f	class:AlphaISA::Interrupts
getInterrupt	src/arch/arm/interrupts.hh	/^    getInterrupt(ThreadContext *tc)$/;"	f	class:ArmISA::Interrupts
getInterrupt	src/arch/mips/interrupts.cc	/^Interrupts::getInterrupt(ThreadContext * tc)$/;"	f	class:MipsISA::Interrupts
getInterrupt	src/arch/power/interrupts.hh	/^    getInterrupt(ThreadContext *tc)$/;"	f	class:PowerISA::Interrupts
getInterrupt	src/arch/sparc/interrupts.hh	/^    getInterrupt(ThreadContext *tc)$/;"	f	class:SparcISA::Interrupts
getInterrupt	src/arch/x86/interrupts.cc	/^X86ISA::Interrupts::getInterrupt(ThreadContext *tc)$/;"	f	class:X86ISA::Interrupts
getInterruptController	src/cpu/base.hh	/^    getInterruptController()$/;"	f	class:BaseCPU
getInterrupts	src/cpu/inorder/cpu.cc	/^InOrderCPU::getInterrupts()$/;"	f	class:InOrderCPU
getInterrupts	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::getInterrupts()$/;"	f	class:FullO3CPU
getIssueLatency	src/cpu/o3/fu_pool.hh	/^    Cycles getIssueLatency(OpClass capability) {$/;"	f	class:FUPool
getIssueToInitialDelayHist	src/mem/ruby/system/Sequencer.hh	/^    Stats::Histogram& getIssueToInitialDelayHist(uint32_t t) const$/;"	f	class:Sequencer
getIt	src/cpu/inorder/resource_sked.hh	/^    ResourceSked::SkedIt getIt()$/;"	f	class:RSkedIt
getKernelEnd	src/sim/system.hh	/^    Addr getKernelEnd() const { return kernelEnd; }$/;"	f	class:System
getKernelEntry	src/sim/system.hh	/^    Addr getKernelEntry() const { return kernelEntry; }$/;"	f	class:System
getKernelStart	src/sim/system.hh	/^    Addr getKernelStart() const { return kernelStart; }$/;"	f	class:System
getKernelStats	src/cpu/checker/thread_context.hh	/^    TheISA::Kernel::Statistics *getKernelStats()$/;"	f	class:CheckerThreadContext
getKernelStats	src/cpu/inorder/thread_context.hh	/^    TheISA::Kernel::Statistics *getKernelStats()$/;"	f	class:InOrderThreadContext
getKernelStats	src/cpu/o3/thread_context.hh	/^    virtual TheISA::Kernel::Statistics *getKernelStats()$/;"	f	class:O3ThreadContext
getKernelStats	src/cpu/ozone/cpu.hh	/^        TheISA::Kernel::Statistics *getKernelStats()$/;"	f	class:OzoneCPU::OzoneTC
getKernelStats	src/cpu/thread_context.hh	/^    TheISA::Kernel::Statistics *getKernelStats()$/;"	f	class:ProxyThreadContext
getKernelStats	src/cpu/thread_state.hh	/^    TheISA::Kernel::Statistics *getKernelStats() { return kernelStats; }$/;"	f	struct:ThreadState
getKvmRunState	src/cpu/kvm/base.hh	/^    struct kvm_run *getKvmRunState() { return _kvmRun; };$/;"	f	class:BaseKvmCPU
getLBABase	src/dev/ide_disk.hh	/^    uint32_t getLBABase()$/;"	f	class:IdeDisk
getLRUindex	src/mem/ruby/structures/Prefetcher.cc	/^Prefetcher::getLRUindex(void)$/;"	f	class:Prefetcher
getLastAccess	src/mem/ruby/system/AbstractReplacementPolicy.hh	/^AbstractReplacementPolicy::getLastAccess(Index set, Index way)$/;"	f	class:AbstractReplacementPolicy
getLastEnqueueTime	src/mem/ruby/slicc_interface/Message.hh	/^    const Tick getLastEnqueueTime() const {return m_LastEnqueueTime;}$/;"	f	class:Message
getLatency	src/cpu/inorder/resource.hh	/^    virtual Cycles getLatency(int slot_num) { return latency; }$/;"	f	class:Resource
getLatency	src/mem/ruby/network/simple/Throttle.hh	/^    Cycles getLatency() const { return m_link_latency; }$/;"	f	class:Throttle
getLatency	src/mem/ruby/system/CacheMemory.hh	/^    Cycles getLatency() const { return m_latency; }$/;"	f	class:CacheMemory
getLatency	src/mem/simple_mem.cc	/^SimpleMemory::getLatency() const$/;"	f	class:SimpleMemory
getLatencyHist	src/mem/ruby/system/Sequencer.hh	/^    Stats::Histogram& getLatencyHist() { return m_latencyHist; }$/;"	f	class:Sequencer
getLen	src/dev/i8254xGBe_defs.hh	/^inline Addr getLen(TxDesc *d) { if (isLegacy(d)) return bits(d->d2,15,0); else return bits(d->d2, 19,0); }$/;"	f	namespace:iGbReg::TxdOp
getLength	src/arch/x86/bios/smbios.hh	/^    getLength()$/;"	f	class:X86ISA::SMBios::SMBiosStructure
getLength	src/arch/x86/bios/smbios.hh	/^    uint8_t getLength() { return 0x18; }$/;"	f	class:X86ISA::SMBios::BiosInformation
getLineAddress	src/mem/ruby/common/Address.cc	/^Address::getLineAddress() const$/;"	f	class:Address
getLineAddress	src/mem/ruby/slicc_interface/RubyRequest.hh	/^    const Address& getLineAddress() const { return m_LineAddress; }$/;"	f	class:RubyRequest
getLinkBandwidth	src/mem/ruby/network/simple/Throttle.hh	/^    int getLinkBandwidth() const$/;"	f	class:Throttle
getLinkUtilization	src/mem/ruby/network/garnet/fixed-pipeline/NetworkLink_d.hh	/^    unsigned int getLinkUtilization() const { return m_link_utilized; }$/;"	f	class:NetworkLink_d
getLinkUtilization	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.hh	/^    unsigned int getLinkUtilization() const { return m_link_utilized; }$/;"	f	class:NetworkLink
getLinuxDesc	src/arch/arm/linux/process.cc	/^ArmLinuxProcessBits::getLinuxDesc(int callnum)$/;"	f	class:ArmLinuxProcessBits
getList	src/sim/init.cc	/^EmbeddedPython::getList()$/;"	f	class:EmbeddedPython
getList	src/sim/init.cc	/^EmbeddedSwig::getList()$/;"	f	class:EmbeddedSwig
getLoadHead	src/cpu/o3/lsq.hh	/^    int getLoadHead(ThreadID tid)$/;"	f	class:LSQ
getLoadHead	src/cpu/o3/lsq_unit.hh	/^    int getLoadHead() { return loadHead; }$/;"	f	class:LSQUnit
getLoadHead	src/cpu/ozone/lsq_unit.hh	/^    int getLoadHead() { return loadHead; }$/;"	f	class:OzoneLSQ
getLoadHeadSeqNum	src/cpu/o3/lsq.hh	/^    InstSeqNum getLoadHeadSeqNum(ThreadID tid)$/;"	f	class:LSQ
getLoadHeadSeqNum	src/cpu/o3/lsq_unit.hh	/^    InstSeqNum getLoadHeadSeqNum()$/;"	f	class:LSQUnit
getLoadHeadSeqNum	src/cpu/ozone/lsq_unit.hh	/^    InstSeqNum getLoadHeadSeqNum()$/;"	f	class:OzoneLSQ
getLoadHeadSeqNum	src/cpu/ozone/lw_lsq.hh	/^    InstSeqNum getLoadHeadSeqNum()$/;"	f	class:OzoneLWLSQ
getLocalIndex	src/cpu/pred/2bit_local.cc	/^LocalBP::getLocalIndex(Addr &branch_addr)$/;"	f	class:LocalBP
getLockedAddrList	src/mem/abstract_mem.hh	/^    const std::list<LockedAddr>& getLockedAddrList() const$/;"	f	class:AbstractMemory
getMISR	src/dev/arm/vgic.cc	/^VGic::getMISR(struct vcpuIntData *vid)$/;"	f	class:VGic
getMPIDR	src/arch/arm/utility.cc	/^getMPIDR(ArmSystem *arm_sys, ThreadContext *tc)$/;"	f	namespace:ArmISA
getMSR	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::getMSR(uint32_t index) const$/;"	f	class:X86KvmCPU
getMSRs	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::getMSRs(struct kvm_msrs &msrs) const$/;"	f	class:X86KvmCPU
getMachInst	src/cpu/inorder/inorder_dyn_inst.hh	/^    ExtMachInst getMachInst() { return staticInst->machInst; }$/;"	f	class:InOrderDynInst
getMachineID	src/mem/ruby/slicc_interface/AbstractController.hh	/^    MachineID getMachineID() const { return m_machineID; }$/;"	f	class:AbstractController
getMacroStaticInst	src/sim/insttracer.hh	/^    StaticInstPtr getMacroStaticInst() { return macroStaticInst; }$/;"	f	class:Trace::InstRecord
getMasterId	src/sim/system.cc	/^System::getMasterId(std::string master_name)$/;"	f	class:System
getMasterName	src/sim/system.cc	/^System::getMasterName(MasterID master_id)$/;"	f	class:System
getMasterPort	src/arch/arm/table_walker.cc	/^TableWalker::getMasterPort(const std::string &if_name, PortID idx)$/;"	f	class:TableWalker
getMasterPort	src/arch/arm/tlb.cc	/^TLB::getMasterPort()$/;"	f	class:TLB
getMasterPort	src/arch/x86/interrupts.hh	/^    BaseMasterPort &getMasterPort(const std::string &if_name,$/;"	f	class:X86ISA::Interrupts
getMasterPort	src/arch/x86/pagetable_walker.cc	/^Walker::getMasterPort(const std::string &if_name, PortID idx)$/;"	f	class:X86ISA::Walker
getMasterPort	src/arch/x86/tlb.cc	/^TLB::getMasterPort()$/;"	f	class:X86ISA::TLB
getMasterPort	src/cpu/base.cc	/^BaseCPU::getMasterPort(const string &if_name, PortID idx)$/;"	f	class:BaseCPU
getMasterPort	src/cpu/testers/directedtest/RubyDirectedTester.cc	/^RubyDirectedTester::getMasterPort(const std::string &if_name, PortID idx)$/;"	f	class:RubyDirectedTester
getMasterPort	src/cpu/testers/memtest/memtest.cc	/^MemTest::getMasterPort(const std::string &if_name, PortID idx)$/;"	f	class:MemTest
getMasterPort	src/cpu/testers/networktest/networktest.cc	/^NetworkTest::getMasterPort(const std::string &if_name, PortID idx)$/;"	f	class:NetworkTest
getMasterPort	src/cpu/testers/rubytest/RubyTester.cc	/^RubyTester::getMasterPort(const std::string &if_name, PortID idx)$/;"	f	class:RubyTester
getMasterPort	src/cpu/testers/traffic_gen/traffic_gen.cc	/^TrafficGen::getMasterPort(const string& if_name, PortID idx)$/;"	f	class:TrafficGen
getMasterPort	src/dev/copy_engine.cc	/^CopyEngine::CopyEngineChannel::getMasterPort()$/;"	f	class:CopyEngine::CopyEngineChannel
getMasterPort	src/dev/copy_engine.cc	/^CopyEngine::getMasterPort(const std::string &if_name, PortID idx)$/;"	f	class:CopyEngine
getMasterPort	src/dev/dma_device.cc	/^DmaDevice::getMasterPort(const std::string &if_name, PortID idx)$/;"	f	class:DmaDevice
getMasterPort	src/dev/x86/i82094aa.cc	/^X86ISA::I82094AA::getMasterPort(const std::string &if_name, PortID idx)$/;"	f	class:X86ISA::I82094AA
getMasterPort	src/mem/addr_mapper.cc	/^AddrMapper::getMasterPort(const std::string& if_name, PortID idx)$/;"	f	class:AddrMapper
getMasterPort	src/mem/bridge.cc	/^Bridge::getMasterPort(const std::string &if_name, PortID idx)$/;"	f	class:Bridge
getMasterPort	src/mem/bus.cc	/^BaseBus::getMasterPort(const std::string &if_name, PortID idx)$/;"	f	class:BaseBus
getMasterPort	src/mem/cache/base.cc	/^BaseCache::getMasterPort(const std::string &if_name, PortID idx)$/;"	f	class:BaseCache
getMasterPort	src/mem/comm_monitor.cc	/^CommMonitor::getMasterPort(const std::string& if_name, PortID idx)$/;"	f	class:CommMonitor
getMasterPort	src/mem/mem_object.cc	/^MemObject::getMasterPort(const std::string& if_name, PortID idx)$/;"	f	class:MemObject
getMasterPort	src/mem/port.cc	/^BaseSlavePort::getMasterPort() const$/;"	f	class:BaseSlavePort
getMasterPort	src/mem/ruby/system/RubyPort.cc	/^RubyPort::getMasterPort(const std::string &if_name, PortID idx)$/;"	f	class:RubyPort
getMasterPort	src/sim/system.cc	/^System::getMasterPort(const std::string &if_name, PortID idx)$/;"	f	class:System
getMasterPort	src/sim/tlb.hh	/^    virtual BaseMasterPort* getMasterPort() { return NULL; }$/;"	f	class:BaseTLB
getMax	src/mem/ruby/common/Histogram.hh	/^    int64 getMax() const { return m_max; }$/;"	f	class:Histogram
getMaxEntries	src/cpu/o3/rob.hh	/^    unsigned getMaxEntries(ThreadID tid)$/;"	f	class:ROB
getMem	src/arch/generic/memhelpers.hh	/^getMem(PacketPtr pkt, MemT &mem, Trace::InstRecord *traceData)$/;"	f
getMem	src/arch/x86/memhelpers.hh	/^getMem(PacketPtr pkt, unsigned dataSize, Trace::InstRecord *traceData)$/;"	f	namespace:X86ISA
getMemAddr	src/cpu/inorder/inorder_dyn_inst.hh	/^    Addr getMemAddr()$/;"	f	class:InOrderDynInst
getMemDepViolator	src/cpu/o3/lsq.hh	/^    DynInstPtr getMemDepViolator(ThreadID tid)$/;"	f	class:LSQ
getMemDepViolator	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::getMemDepViolator()$/;"	f	class:LSQUnit
getMemDepViolator	src/cpu/ozone/lsq_unit_impl.hh	/^OzoneLSQ<Impl>::getMemDepViolator()$/;"	f	class:OzoneLSQ
getMemDepViolator	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::getMemDepViolator()$/;"	f	class:OzoneLWLSQ
getMemDeps	src/cpu/ozone/dyn_inst.hh	/^    std::vector<DynInstPtr> &getMemDeps() { return memDependents; }$/;"	f	class:OzoneDynInst
getMemProxy	src/cpu/checker/thread_context.hh	/^    SETranslatingPortProxy &getMemProxy() { return actualTC->getMemProxy(); }$/;"	f	class:CheckerThreadContext
getMemProxy	src/cpu/inorder/thread_context.hh	/^    SETranslatingPortProxy &getMemProxy() { return thread->getMemProxy(); }$/;"	f	class:InOrderThreadContext
getMemProxy	src/cpu/o3/thread_context.hh	/^    virtual SETranslatingPortProxy &getMemProxy()$/;"	f	class:O3ThreadContext
getMemProxy	src/cpu/ozone/cpu.hh	/^        SETranslatingPortProxy &getMemProxy() { return thread->getMemProxy(); }$/;"	f	class:OzoneCPU::OzoneTC
getMemProxy	src/cpu/thread_context.hh	/^    SETranslatingPortProxy &getMemProxy() { return actualTC->getMemProxy(); }$/;"	f	class:ProxyThreadContext
getMemProxy	src/cpu/thread_state.cc	/^ThreadState::getMemProxy()$/;"	f	class:ThreadState
getMemSrcs	src/cpu/ozone/dyn_inst.hh	/^    std::list<DynInstPtr> &getMemSrcs() { return srcMemInsts; }$/;"	f	class:OzoneDynInst
getMemoryMode	src/sim/system.hh	/^    Enums::MemoryMode getMemoryMode() const { return memoryMode; }$/;"	f	class:System
getMemorySizeBits	src/mem/ruby/system/System.hh	/^    static uint32_t getMemorySizeBits() { return m_memory_size_bits; }$/;"	f	class:RubySystem
getMemorySizeBytes	src/mem/ruby/system/System.hh	/^    static uint64_t getMemorySizeBytes() { return m_memory_size_bytes; }$/;"	f	class:RubySystem
getMemoryVector	src/mem/ruby/system/System.hh	/^    getMemoryVector()$/;"	f	class:RubySystem
getMiscRegName	src/arch/sparc/ua2005.cc	/^getMiscRegName(RegIndex index)$/;"	f	file:
getMissLatencyHist	src/mem/ruby/system/Sequencer.hh	/^    Stats::Histogram& getMissLatencyHist()$/;"	f	class:Sequencer
getMissMachLatencyHist	src/mem/ruby/system/Sequencer.hh	/^    Stats::Histogram& getMissMachLatencyHist(uint32_t t) const$/;"	f	class:Sequencer
getMissTypeLatencyHist	src/mem/ruby/system/Sequencer.hh	/^    Stats::Histogram& getMissTypeLatencyHist(uint32_t t)$/;"	f	class:Sequencer
getMissTypeMachLatencyHist	src/mem/ruby/system/Sequencer.hh	/^    getMissTypeMachLatencyHist(uint32_t r, uint32_t t) const$/;"	f	class:Sequencer
getMisspeculating	src/sim/insttracer.hh	/^    bool getMisspeculating() { return misspeculating; }$/;"	f	class:Trace::InstRecord
getMsgCount	src/mem/ruby/network/simple/Switch.hh	/^    const Stats::Formula & getMsgCount(unsigned int type) const$/;"	f	class:Switch
getMsgCount	src/mem/ruby/network/simple/Throttle.hh	/^    const Stats::Vector & getMsgCount(unsigned int type) const$/;"	f	class:Throttle
getMsrIntersection	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::getMsrIntersection() const$/;"	f	class:X86KvmCPU
getName	src/cpu/static_inst.hh	/^    std::string getName() { return mnemonic; }$/;"	f	class:StaticInst
getName	src/sim/probe/probe.hh	/^    std::string getName() const { return name; }$/;"	f	class:ProbePoint
getNextByte	src/arch/x86/decoder.hh	/^    uint8_t getNextByte()$/;"	f	class:X86ISA::Decoder
getNextEventNum	src/cpu/inorder/cpu.hh	/^    InstSeqNum getNextEventNum()$/;"	f	class:InOrderCPU
getNextLevel	src/arch/sparc/faults.hh	/^    getNextLevel(PrivilegeLevel current)$/;"	f	class:SparcISA::SparcFault
getNextMSHR	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::getNextMSHR()$/;"	f	class:Cache
getNextMSHR	src/mem/cache/mshr_queue.hh	/^    MSHR *getNextMSHR() const$/;"	f	class:MSHRQueue
getNextPacket	src/cpu/testers/traffic_gen/generators.cc	/^DramGen::getNextPacket()$/;"	f	class:DramGen
getNextPacket	src/cpu/testers/traffic_gen/generators.cc	/^LinearGen::getNextPacket()$/;"	f	class:LinearGen
getNextPacket	src/cpu/testers/traffic_gen/generators.cc	/^RandomGen::getNextPacket()$/;"	f	class:RandomGen
getNextPacket	src/cpu/testers/traffic_gen/generators.cc	/^TraceGen::getNextPacket()$/;"	f	class:TraceGen
getNextPacket	src/cpu/testers/traffic_gen/generators.hh	/^    PacketPtr getNextPacket() { return NULL; }$/;"	f	class:IdleGen
getNextPriority	src/cpu/inorder/pipeline_traits.5stage.cc	/^int getNextPriority(DynInstPtr &inst, int stage_num)$/;"	f	namespace:ThePipeline
getNextPriority	src/cpu/inorder/pipeline_traits.9stage.cc	/^int getNextPriority(DynInstPtr &inst, int stage_num)$/;"	f	namespace:ThePipeline
getNextPriority	src/cpu/inorder/pipeline_traits.9stage.smt2.cc	/^int getNextPriority(DynInstPtr &inst, int stage_num)$/;"	f	namespace:ThePipeline
getNextStage	src/cpu/inorder/inorder_dyn_inst.hh	/^    int getNextStage() { return nextStage; }$/;"	f	class:InOrderDynInst
getNiFlitSize	src/mem/ruby/network/garnet/BaseGarnetNetwork.hh	/^    int getNiFlitSize() {return m_ni_flit_size; }$/;"	f	class:BaseGarnetNetwork
getNum	src/mem/ruby/system/MachineID.hh	/^    NodeID getNum() const { return num; }$/;"	f	struct:MachineID
getNumNodes	src/mem/ruby/network/Network.hh	/^    virtual int getNumNodes() {return 1;}$/;"	f	class:Network
getNumNodes	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.hh	/^    int getNumNodes() { return m_nodes; }$/;"	f	class:GarnetNetwork_d
getNumNodes	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.hh	/^    int getNumNodes(){ return m_nodes; }$/;"	f	class:GarnetNetwork
getNumNodes	src/mem/ruby/network/simple/SimpleNetwork.hh	/^    int getNumNodes() {return m_nodes; }$/;"	f	class:SimpleNetwork
getNumPipeStages	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.hh	/^    int getNumPipeStages() {return m_number_of_pipe_stages; }$/;"	f	class:GarnetNetwork
getNumTargets	src/mem/cache/mshr.hh	/^    int getNumTargets() const$/;"	f	class:MSHR
getNumberOfVirtualNetworks	src/mem/ruby/network/Network.hh	/^    static uint32_t getNumberOfVirtualNetworks() { return m_virtual_networks; }$/;"	f	class:Network
getOffset	src/mem/packet.hh	/^    Addr getOffset(int blkSize) const { return getAddr() & (Addr)(blkSize - 1); }$/;"	f	class:Packet
getOffset	src/mem/ruby/common/Address.cc	/^Address::getOffset() const$/;"	f	class:Address
getOneReg	src/cpu/kvm/base.cc	/^BaseKvmCPU::getOneReg(uint64_t id, void *addr) const$/;"	f	class:BaseKvmCPU
getOneRegU32	src/cpu/kvm/base.hh	/^    uint32_t getOneRegU32(uint64_t id) const {$/;"	f	class:BaseKvmCPU
getOneRegU64	src/cpu/kvm/base.hh	/^    uint64_t getOneRegU64(uint64_t id) const {$/;"	f	class:BaseKvmCPU
getOpLatency	src/cpu/o3/fu_pool.hh	/^    Cycles getOpLatency(OpClass capability) {$/;"	f	class:FUPool
getOpSys	src/base/loader/object_file.hh	/^    OpSys getOpSys() const { return opSys; }$/;"	f	class:ObjectFile
getOperatingMode	src/arch/mips/tlb.cc	/^getOperatingMode(MiscReg Stat)$/;"	f	file:
getOutLinks	src/mem/ruby/network/simple/PerfectSwitch.hh	/^    int getOutLinks() const { return m_out.size(); }$/;"	f	class:PerfectSwitch
getOutQueue	src/mem/ruby/network/garnet/fixed-pipeline/OutputUnit_d.cc	/^OutputUnit_d::getOutQueue()$/;"	f	class:OutputUnit_d
getOutstandReqHist	src/mem/ruby/system/Sequencer.hh	/^    Stats::Histogram& getOutstandReqHist() { return m_outstandReqHist; }$/;"	f	class:Sequencer
getPC	src/mem/request.hh	/^    getPC() const$/;"	f	class:Request
getPCState	src/sim/insttracer.hh	/^    TheISA::PCState getPCState() { return pc; }$/;"	f	class:Trace::InstRecord
getPacket	src/cpu/testers/traffic_gen/generators.cc	/^BaseGen::getPacket(Addr addr, unsigned size, const MemCmd& cmd,$/;"	f	class:BaseGen
getPacket	src/mem/cache/prefetch/base.cc	/^BasePrefetcher::getPacket()$/;"	f	class:BasePrefetcher
getPacketData	src/dev/i8254xGBe.cc	/^IGbE::TxDescCache::getPacketData(EthPacketPtr p)$/;"	f	class:IGbE::TxDescCache
getPacketSize	src/dev/i8254xGBe.cc	/^IGbE::TxDescCache::getPacketSize(EthPacketPtr p)$/;"	f	class:IGbE::TxDescCache
getPaddr	src/cpu/translation.hh	/^    getPaddr() const$/;"	f	class:WholeTranslationState
getPaddr	src/mem/request.hh	/^    getPaddr()$/;"	f	class:Request
getPage	src/cpu/decode_cache.hh	/^    getPage(Addr addr)$/;"	f	class:DecodeCache::AddrMap
getPcEventQueue	src/base/remote_gdb.cc	/^PCEventQueue *BaseRemoteGDB::getPcEventQueue()$/;"	f	class:BaseRemoteGDB
getPeer	src/dev/etherint.hh	/^    EtherInt* getPeer() { return peer; }$/;"	f	class:EtherInt
getPeerQueue	src/mem/ruby/slicc_interface/AbstractController.hh	/^    MessageBuffer *getPeerQueue(uint32_t pid)$/;"	f	class:AbstractController
getPendingFragment	src/cpu/simple/timing.hh	/^        getPendingFragment()$/;"	f	class:TimingSimpleCPU::SplitMainSenderState
getPermission	src/mem/ruby/slicc_interface/AbstractEntry.cc	/^AbstractEntry::getPermission() const$/;"	f	class:AbstractEntry
getPermission	src/mem/ruby/system/PerfectCacheMemory.hh	/^PerfectCacheMemory<ENTRY>::getPermission(const Address& address) const$/;"	f	class:PerfectCacheMemory
getPhysMem	src/sim/system.hh	/^    PhysicalMemory& getPhysMem() { return physmem; }$/;"	f	class:System
getPhysProxy	src/cpu/checker/thread_context.hh	/^    PortProxy &getPhysProxy() { return actualTC->getPhysProxy(); }$/;"	f	class:CheckerThreadContext
getPhysProxy	src/cpu/inorder/thread_context.hh	/^    PortProxy &getPhysProxy() { return thread->getPhysProxy(); }$/;"	f	class:InOrderThreadContext
getPhysProxy	src/cpu/o3/thread_context.hh	/^    virtual PortProxy &getPhysProxy() { return thread->getPhysProxy(); }$/;"	f	class:O3ThreadContext
getPhysProxy	src/cpu/ozone/cpu.hh	/^        PortProxy &getPhysProxy() { return thread->getPhysProxy(); }$/;"	f	class:OzoneCPU::OzoneTC
getPhysProxy	src/cpu/thread_context.hh	/^    PortProxy &getPhysProxy() { return actualTC->getPhysProxy(); }$/;"	f	class:ProxyThreadContext
getPhysProxy	src/cpu/thread_state.cc	/^ThreadState::getPhysProxy()$/;"	f	class:ThreadState
getPhysicalAddress	src/mem/ruby/slicc_interface/RubyRequest.hh	/^    const Address& getPhysicalAddress() const { return m_PhysicalAddress; }$/;"	f	class:RubyRequest
getPid	src/cpu/base.hh	/^    uint32_t getPid() const { return _pid; }$/;"	f	class:BaseCPU
getPipeStage	src/cpu/inorder/cpu.cc	/^InOrderCPU::getPipeStage(int stage_num)$/;"	f	class:InOrderCPU
getPrediction	src/cpu/pred/2bit_local.cc	/^LocalBP::getPrediction(uint8_t &count)$/;"	f	class:LocalBP
getPrefetch	src/mem/ruby/slicc_interface/RubyRequest.hh	/^    const PrefetchBit& getPrefetch() const { return m_Prefetch; }$/;"	f	class:RubyRequest
getPrefetchEntry	src/mem/ruby/structures/Prefetcher.cc	/^Prefetcher::getPrefetchEntry(const Address &address, uint32_t &index)$/;"	f	class:Prefetcher
getPrevDestInst	src/cpu/ozone/dyn_inst.hh	/^    DynInstPtr &getPrevDestInst(int regIdx)$/;"	f	class:OzoneDynInst
getPriority	src/mem/ruby/buffers/MessageBuffer.hh	/^    int getPriority() { return m_priority_rank; }$/;"	f	class:MessageBuffer
getPrivVector	src/arch/sparc/faults.cc	/^getPrivVector(ThreadContext *tc, Addr &PC, Addr &NPC, MiscReg TT, MiscReg TL)$/;"	f	namespace:SparcISA
getProbeManager	src/sim/probe/probe.hh	/^    ProbeManager* getProbeManager() { return manager; }$/;"	f	class:ProbeListenerObject
getProbeManager	src/sim/sim_object.cc	/^SimObject::getProbeManager()$/;"	f	class:SimObject
getProcessPtr	src/cpu/checker/thread_context.hh	/^    Process *getProcessPtr() { return actualTC->getProcessPtr(); }$/;"	f	class:CheckerThreadContext
getProcessPtr	src/cpu/inorder/thread_context.hh	/^    Process *getProcessPtr() { return thread->getProcessPtr(); }$/;"	f	class:InOrderThreadContext
getProcessPtr	src/cpu/o3/thread_context.hh	/^    virtual Process *getProcessPtr() { return thread->getProcessPtr(); }$/;"	f	class:O3ThreadContext
getProcessPtr	src/cpu/ozone/cpu.hh	/^        Process *getProcessPtr() { return thread->getProcessPtr(); }$/;"	f	class:OzoneCPU::OzoneTC
getProcessPtr	src/cpu/thread_context.hh	/^    Process *getProcessPtr() { return actualTC->getProcessPtr(); }$/;"	f	class:ProxyThreadContext
getProcessPtr	src/cpu/thread_state.hh	/^    Process *getProcessPtr() { return process; }$/;"	f	struct:ThreadState
getProfiler	src/mem/ruby/system/System.hh	/^    getProfiler()$/;"	f	class:RubySystem
getProgramCounter	src/mem/ruby/slicc_interface/RubyRequest.hh	/^    const Address& getProgramCounter() const { return m_ProgramCounter; }$/;"	f	class:RubyRequest
getPtr	src/mem/packet.hh	/^    getPtr(bool null_ok = false)$/;"	f	class:Packet
getQ	src/base/cp_annotate.hh	/^    getQ(int sys, std::string q, uint64_t id)$/;"	f	class:CPA
getQueuesFromPeer	src/mem/ruby/slicc_interface/AbstractController.hh	/^    virtual void getQueuesFromPeer(AbstractController *)$/;"	f	class:AbstractController
getQuiesceEvent	src/cpu/checker/thread_context.hh	/^    EndQuiesceEvent *getQuiesceEvent() { return actualTC->getQuiesceEvent(); }$/;"	f	class:CheckerThreadContext
getQuiesceEvent	src/cpu/inorder/thread_context.hh	/^    EndQuiesceEvent *getQuiesceEvent()$/;"	f	class:InOrderThreadContext
getQuiesceEvent	src/cpu/o3/thread_context.hh	/^    virtual EndQuiesceEvent *getQuiesceEvent()$/;"	f	class:O3ThreadContext
getQuiesceEvent	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::OzoneTC::getQuiesceEvent()$/;"	f	class:OzoneCPU::OzoneTC
getQuiesceEvent	src/cpu/thread_context.hh	/^    EndQuiesceEvent *getQuiesceEvent() { return actualTC->getQuiesceEvent(); }$/;"	f	class:ProxyThreadContext
getQuiesceEvent	src/cpu/thread_state.hh	/^    EndQuiesceEvent *getQuiesceEvent() { return quiesceEvent; }$/;"	f	struct:ThreadState
getREDVector	src/arch/sparc/faults.cc	/^getREDVector(MiscReg TT, Addr &PC, Addr &NPC)$/;"	f	namespace:SparcISA
getRFlags	src/arch/x86/utility.cc	/^getRFlags(ThreadContext *tc)$/;"	f	namespace:X86ISA
getRandomCheck	src/cpu/testers/rubytest/CheckTable.cc	/^CheckTable::getRandomCheck()$/;"	f	class:CheckTable
getRandomSeed	src/mem/ruby/system/System.hh	/^    static int getRandomSeed() { return m_random_seed; }$/;"	f	class:RubySystem
getRandomization	src/mem/ruby/system/System.hh	/^    static int getRandomization() { return m_randomization; }$/;"	f	class:RubySystem
getRank	src/mem/ruby/system/RubyMemoryControl.cc	/^RubyMemoryControl::getRank(const physical_address_t addr) const$/;"	f	class:RubyMemoryControl
getRank	src/mem/ruby/system/RubyMemoryControl.cc	/^RubyMemoryControl::getRank(int bank) const$/;"	f	class:RubyMemoryControl
getRanksPerDimm	src/mem/ruby/system/RubyMemoryControl.hh	/^    int getRanksPerDimm() { return m_ranks_per_dimm; };$/;"	f	class:RubyMemoryControl
getRawData	src/arch/arm/table_walker.hh	/^        virtual uint64_t getRawData() const$/;"	f	class:ArmISA::TableWalker::L1Descriptor
getRawData	src/arch/arm/table_walker.hh	/^        virtual uint64_t getRawData() const$/;"	f	class:ArmISA::TableWalker::L2Descriptor
getRawData	src/arch/arm/table_walker.hh	/^        virtual uint64_t getRawData() const$/;"	f	class:ArmISA::TableWalker::LongDescriptor
getReadableCpuPort	src/cpu/testers/rubytest/RubyTester.cc	/^RubyTester::getReadableCpuPort(int idx)$/;"	f	class:RubyTester
getReadyInst	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::InstQueue::getReadyInst()$/;"	f	class:BackEnd::InstQueue
getReg	src/cpu/o3/free_list.hh	/^    PhysRegIndex getReg()$/;"	f	class:SimpleFreeList
getReg	src/cpu/o3/scoreboard.hh	/^    bool getReg(PhysRegIndex reg_idx) const$/;"	f	class:Scoreboard
getRegArrayBit	src/arch/x86/interrupts.hh	/^    getRegArrayBit(ApicRegIndex base, uint8_t vector)$/;"	f	class:X86ISA::Interrupts
getRegList	src/cpu/kvm/arm_cpu.cc	/^ArmKvmCPU::getRegList() const$/;"	f	class:ArmKvmCPU
getRegList	src/cpu/kvm/arm_cpu.cc	/^ArmKvmCPU::getRegList(struct kvm_reg_list &regs) const$/;"	f	class:ArmKvmCPU
getRegisters	src/cpu/kvm/base.cc	/^BaseKvmCPU::getRegisters(struct kvm_regs &regs) const$/;"	f	class:BaseKvmCPU
getRemoteGDBPort	src/sim/debug.cc	/^getRemoteGDBPort()$/;"	f
getRequest	src/cpu/inorder/resource.cc	/^Resource::getRequest(DynInstPtr inst, int stage_num, int res_idx,$/;"	f	class:Resource
getRequest	src/cpu/inorder/resources/cache_unit.cc	/^CacheUnit::getRequest(DynInstPtr inst, int stage_num, int res_idx,$/;"	f	class:CacheUnit
getRequest	src/cpu/inorder/resources/fetch_unit.cc	/^FetchUnit::getRequest(DynInstPtr inst, int stage_num, int res_idx,$/;"	f	class:FetchUnit
getRequest	src/cpu/inorder/resources/tlb_unit.cc	/^TLBUnit::getRequest(DynInstPtr _inst, int stage_num,$/;"	f	class:TLBUnit
getRequest	src/cpu/inorder/resources/use_def.cc	/^UseDefUnit::getRequest(DynInstPtr inst, int stage_num, int res_idx,$/;"	f	class:UseDefUnit
getResIdx	src/cpu/inorder/resource.hh	/^    int getResIdx() { return resIdx; }$/;"	f	class:ResourceRequest
getResIdx	src/cpu/inorder/resource_pool.cc	/^ResourcePool::getResIdx(const ThePipeline::ResourceId &res_id)$/;"	f	class:ResourcePool
getResource	src/cpu/inorder/resource_pool.hh	/^    Resource* getResource(int res_idx) { return resources[res_idx]; }$/;"	f	class:ResourcePool
getResultTe	src/arch/arm/tlb.cc	/^TLB::getResultTe(TlbEntry **te, RequestPtr req, ThreadContext *tc, Mode mode,$/;"	f	class:TLB
getRoute	src/mem/ruby/network/garnet/flexible-pipeline/Router.cc	/^Router::getRoute(NetDest destination)$/;"	f	class:Router
getRow	src/mem/ruby/system/RubyMemoryControl.cc	/^RubyMemoryControl::getRow(const physical_address_t addr) const$/;"	f	class:RubyMemoryControl
getSections	src/base/loader/elf_object.cc	/^ElfObject::getSections()$/;"	f	class:ElfObject
getSentry	src/mem/ruby/network/orion/ConfigFile.hh	/^	string getSentry() const { return mySentry; }$/;"	f	class:ConfigFile
getSharing	src/mem/ruby/profiler/AccessTraceForAddress.hh	/^    int getSharing() const { return m_sharing; }$/;"	f	class:AccessTraceForAddress
getSize	src/cpu/timebuf.hh	/^    unsigned getSize()$/;"	f	class:TimeBuffer
getSize	src/mem/packet.hh	/^    unsigned getSize() const  { assert(flags.isSet(VALID_SIZE)); return size; }$/;"	f	class:Packet
getSize	src/mem/request.hh	/^    getSize()$/;"	f	class:Request
getSize	src/mem/ruby/buffers/MessageBuffer.cc	/^MessageBuffer::getSize()$/;"	f	class:MessageBuffer
getSize	src/mem/ruby/common/NetDest.hh	/^    int getSize() const { return m_bits.size(); }$/;"	f	class:NetDest
getSize	src/mem/ruby/common/Set.hh	/^    int getSize() const { return m_nSize; }$/;"	f	class:Set
getSize	src/mem/ruby/common/SubBlock.hh	/^    int getSize() const { return m_data.size(); }$/;"	f	class:SubBlock
getSize	src/mem/ruby/slicc_interface/RubyRequest.hh	/^    const int& getSize() const { return m_Size; }$/;"	f	class:RubyRequest
getSize	src/mem/ruby/system/DirectoryMemory.hh	/^    uint64 getSize() { return m_size_bytes; }$/;"	f	class:DirectoryMemory
getSlavePort	src/arch/x86/interrupts.hh	/^    BaseSlavePort &getSlavePort(const std::string &if_name,$/;"	f	class:X86ISA::Interrupts
getSlavePort	src/dev/io_device.cc	/^PioDevice::getSlavePort(const std::string &if_name, PortID idx)$/;"	f	class:PioDevice
getSlavePort	src/dev/pcidev.hh	/^    virtual BaseSlavePort &getSlavePort(const std::string &if_name,$/;"	f	class:PciDevice
getSlavePort	src/mem/addr_mapper.cc	/^AddrMapper::getSlavePort(const std::string& if_name, PortID idx)$/;"	f	class:AddrMapper
getSlavePort	src/mem/bridge.cc	/^Bridge::getSlavePort(const std::string &if_name, PortID idx)$/;"	f	class:Bridge
getSlavePort	src/mem/bus.cc	/^BaseBus::getSlavePort(const std::string &if_name, PortID idx)$/;"	f	class:BaseBus
getSlavePort	src/mem/cache/base.cc	/^BaseCache::getSlavePort(const std::string &if_name, PortID idx)$/;"	f	class:BaseCache
getSlavePort	src/mem/comm_monitor.cc	/^CommMonitor::getSlavePort(const std::string& if_name, PortID idx)$/;"	f	class:CommMonitor
getSlavePort	src/mem/dram_ctrl.cc	/^DRAMCtrl::getSlavePort(const string &if_name, PortID idx)$/;"	f	class:DRAMCtrl
getSlavePort	src/mem/dramsim2.cc	/^DRAMSim2::getSlavePort(const std::string &if_name, PortID idx)$/;"	f	class:DRAMSim2
getSlavePort	src/mem/mem_object.cc	/^MemObject::getSlavePort(const std::string& if_name, PortID idx)$/;"	f	class:MemObject
getSlavePort	src/mem/port.cc	/^BaseMasterPort::getSlavePort() const$/;"	f	class:BaseMasterPort
getSlavePort	src/mem/ruby/system/RubyPort.cc	/^RubyPort::getSlavePort(const std::string &if_name, PortID idx)$/;"	f	class:RubyPort
getSlavePort	src/mem/simple_mem.cc	/^SimpleMemory::getSlavePort(const std::string &if_name, PortID idx)$/;"	f	class:SimpleMemory
getSlot	src/cpu/inorder/resource.cc	/^Resource::getSlot(DynInstPtr inst)$/;"	f	class:Resource
getSlot	src/cpu/inorder/resource.hh	/^    int getSlot() { return slotNum; }$/;"	f	class:ResourceRequest
getSlot	src/cpu/inorder/resources/cache_unit.cc	/^CacheUnit::getSlot(DynInstPtr inst)$/;"	f	class:CacheUnit
getSlot	src/cpu/inorder/resources/mult_div_unit.cc	/^MultDivUnit::getSlot(DynInstPtr inst)$/;"	f	class:MultDivUnit
getSlot	src/cpu/inorder/resources/tlb_unit.cc	/^TLBUnit::getSlot(DynInstPtr inst)$/;"	f	class:TLBUnit
getSm	src/base/cp_annotate.hh	/^    getSm(int sysi, std::string si, uint64_t id)$/;"	f	class:CPA
getSpecialRegisters	src/cpu/kvm/base.cc	/^BaseKvmCPU::getSpecialRegisters(struct kvm_sregs &regs) const$/;"	f	class:BaseKvmCPU
getSquaredTotal	src/mem/ruby/common/Histogram.hh	/^    uint64_t getSquaredTotal() const { return m_sumSquaredSamples; }$/;"	f	class:Histogram
getSrc	src/mem/packet.hh	/^    PortID getSrc() const { assert(isSrcValid()); return src; }$/;"	f	class:Packet
getSrcIdxNum	src/cpu/inorder/inorder_dyn_inst.hh	/^    int getSrcIdxNum(PhysRegIndex src_idx)$/;"	f	class:InOrderDynInst
getSt	src/base/cp_annotate.hh	/^    getSt(std::string sm, std::string s)$/;"	f	class:CPA
getStageNum	src/cpu/inorder/resource.hh	/^    int getStageNum() { return stageNum; }$/;"	f	class:ResourceRequest
getStages	src/cpu/inorder/resource_sked.hh	/^    StageList *getStages()$/;"	f	class:ResourceSked
getStandardDeviation	src/mem/ruby/common/Histogram.cc	/^Histogram::getStandardDeviation() const$/;"	f	class:Histogram
getStaticInst	src/sim/insttracer.hh	/^    StaticInstPtr getStaticInst() { return staticInst; }$/;"	f	class:Trace::InstRecord
getStoreHead	src/cpu/o3/lsq.hh	/^    int getStoreHead(ThreadID tid)$/;"	f	class:LSQ
getStoreHead	src/cpu/o3/lsq_unit.hh	/^    int getStoreHead() { return storeHead; }$/;"	f	class:LSQUnit
getStoreHead	src/cpu/ozone/lsq_unit.hh	/^    int getStoreHead() { return storeHead; }$/;"	f	class:OzoneLSQ
getStoreHeadSeqNum	src/cpu/o3/lsq.hh	/^    InstSeqNum getStoreHeadSeqNum(ThreadID tid)$/;"	f	class:LSQ
getStoreHeadSeqNum	src/cpu/o3/lsq_unit.hh	/^    InstSeqNum getStoreHeadSeqNum()$/;"	f	class:LSQUnit
getStoreHeadSeqNum	src/cpu/ozone/lsq_unit.hh	/^    InstSeqNum getStoreHeadSeqNum()$/;"	f	class:OzoneLSQ
getStoreHeadSeqNum	src/cpu/ozone/lw_lsq.hh	/^    InstSeqNum getStoreHeadSeqNum()$/;"	f	class:OzoneLWLSQ
getStringLength	src/arch/x86/bios/smbios.cc	/^X86ISA::SMBios::SMBiosStructure::getStringLength()$/;"	f	class:X86ISA::SMBios::SMBiosStructure
getSubBlockSize	src/mem/cache/tags/fa_lru.hh	/^    getSubBlockSize() const$/;"	f	class:FALRU
getSubBlockSize	src/mem/cache/tags/lru.hh	/^    getSubBlockSize() const$/;"	f	class:LRU
getSupportedCPUID	src/cpu/kvm/vm.cc	/^Kvm::getSupportedCPUID() const$/;"	f	class:Kvm
getSupportedCPUID	src/cpu/kvm/vm.cc	/^Kvm::getSupportedCPUID(struct kvm_cpuid2 &cpuid) const$/;"	f	class:Kvm
getSupportedMSRs	src/cpu/kvm/vm.cc	/^Kvm::getSupportedMSRs() const$/;"	f	class:Kvm
getSupportedMSRs	src/cpu/kvm/vm.cc	/^Kvm::getSupportedMSRs(struct kvm_msr_list &msrs) const$/;"	f	class:Kvm
getSymbolTable	src/base/loader/symtab.hh	/^    const STable &getSymbolTable() const { return symbolTable; }$/;"	f	class:SymbolTable
getSyndromeReg64	src/arch/arm/faults.cc	/^ArmFault::getSyndromeReg64() const$/;"	f	class:ArmISA::ArmFault
getSys	src/base/cp_annotate.hh	/^    getSys(System *s)$/;"	f	class:CPA
getSyscallArg	src/arch/alpha/process.cc	/^AlphaLiveProcess::getSyscallArg(ThreadContext *tc, int &i)$/;"	f	class:AlphaLiveProcess
getSyscallArg	src/arch/arm/process.cc	/^ArmLiveProcess32::getSyscallArg(ThreadContext *tc, int &i)$/;"	f	class:ArmLiveProcess32
getSyscallArg	src/arch/arm/process.cc	/^ArmLiveProcess32::getSyscallArg(ThreadContext *tc, int &i, int width)$/;"	f	class:ArmLiveProcess32
getSyscallArg	src/arch/arm/process.cc	/^ArmLiveProcess64::getSyscallArg(ThreadContext *tc, int &i)$/;"	f	class:ArmLiveProcess64
getSyscallArg	src/arch/arm/process.cc	/^ArmLiveProcess64::getSyscallArg(ThreadContext *tc, int &i, int width)$/;"	f	class:ArmLiveProcess64
getSyscallArg	src/arch/mips/process.cc	/^MipsLiveProcess::getSyscallArg(ThreadContext *tc, int &i)$/;"	f	class:MipsLiveProcess
getSyscallArg	src/arch/power/linux/process.cc	/^PowerLinuxProcess::getSyscallArg(ThreadContext *tc, int &i)$/;"	f	class:PowerLinuxProcess
getSyscallArg	src/arch/power/process.cc	/^PowerLiveProcess::getSyscallArg(ThreadContext *tc, int &i)$/;"	f	class:PowerLiveProcess
getSyscallArg	src/arch/sparc/process.cc	/^Sparc32LiveProcess::getSyscallArg(ThreadContext *tc, int &i)$/;"	f	class:Sparc32LiveProcess
getSyscallArg	src/arch/sparc/process.cc	/^Sparc64LiveProcess::getSyscallArg(ThreadContext *tc, int &i)$/;"	f	class:Sparc64LiveProcess
getSyscallArg	src/arch/x86/process.cc	/^I386LiveProcess::getSyscallArg(ThreadContext *tc, int &i)$/;"	f	class:I386LiveProcess
getSyscallArg	src/arch/x86/process.cc	/^I386LiveProcess::getSyscallArg(ThreadContext *tc, int &i, int width)$/;"	f	class:I386LiveProcess
getSyscallArg	src/arch/x86/process.cc	/^X86_64LiveProcess::getSyscallArg(ThreadContext *tc, int &i)$/;"	f	class:X86_64LiveProcess
getSyscallArg	src/sim/process.cc	/^LiveProcess::getSyscallArg(ThreadContext *tc, int &i, int width)$/;"	f	class:LiveProcess
getSystemCounter	src/arch/arm/isa.cc	/^ISA::getSystemCounter(ThreadContext *tc)$/;"	f	class:ArmISA::ISA
getSystemCounter	src/arch/arm/system.cc	/^ArmSystem::getSystemCounter() const$/;"	f	class:ArmSystem
getSystemCounter	src/dev/arm/generic_timer.hh	/^    SystemCounter *getSystemCounter() { return &_systemCounter; }$/;"	f	class:GenericTimer
getSystemPort	src/sim/system.hh	/^    MasterPort& getSystemPort() { return _systemPort; }$/;"	f	class:System
getSystemPtr	src/cpu/checker/thread_context.hh	/^    System *getSystemPtr() { return actualTC->getSystemPtr(); }$/;"	f	class:CheckerThreadContext
getSystemPtr	src/cpu/inorder/thread_context.hh	/^    System *getSystemPtr() { return cpu->system; }$/;"	f	class:InOrderThreadContext
getSystemPtr	src/cpu/o3/thread_context.hh	/^    virtual System *getSystemPtr() { return cpu->system; }$/;"	f	class:O3ThreadContext
getSystemPtr	src/cpu/ozone/cpu.hh	/^        System *getSystemPtr() { return cpu->system; }$/;"	f	class:OzoneCPU::OzoneTC
getSystemPtr	src/cpu/simple_thread.hh	/^    System *getSystemPtr() { return system; }$/;"	f	class:SimpleThread
getSystemPtr	src/cpu/thread_context.hh	/^    System *getSystemPtr() { return actualTC->getSystemPtr(); }$/;"	f	class:ProxyThreadContext
getTC	src/cpu/cpuevent.hh	/^    ThreadContext* getTC() { return tc; }$/;"	f	class:CpuEvent
getTC	src/cpu/inorder/thread_state.hh	/^    ThreadContext *getTC() { return tc; }$/;"	f	class:InOrderThreadState
getTC	src/cpu/o3/thread_state.hh	/^    ThreadContext *getTC() { return tc; }$/;"	f	struct:O3ThreadState
getTC	src/cpu/ozone/thread_state.hh	/^    ThreadContext *getTC() { return tc; }$/;"	f	struct:OzoneThreadState
getTC	src/cpu/simple_thread.hh	/^    ThreadContext *getTC() { return tc; }$/;"	f	class:SimpleThread
getTE	src/arch/arm/tlb.cc	/^TLB::getTE(TlbEntry **te, RequestPtr req, ThreadContext *tc, Mode mode,$/;"	f	class:TLB
getTableAddr	src/arch/x86/bios/intelmp.hh	/^    Addr getTableAddr()$/;"	f	class:X86ISA::IntelMP::FloatingPointer
getTableAddr	src/arch/x86/bios/smbios.hh	/^    Addr getTableAddr()$/;"	f	class:X86ISA::SMBios::SMBiosTable
getTag	src/cpu/pred/btb.cc	/^DefaultBTB::getTag(Addr instPC)$/;"	f	class:DefaultBTB
getTarget	src/mem/cache/mshr.hh	/^    Target *getTarget()$/;"	f	class:MSHR
getTargetThread	src/arch/alpha/mt.hh	/^getTargetThread(TC *tc)$/;"	f	namespace:AlphaISA
getTargetThread	src/arch/mips/mt.hh	/^getTargetThread(TC *tc)$/;"	f	namespace:MipsISA
getTargetThread	src/arch/sparc/mt.hh	/^getTargetThread(TC *tc)$/;"	f	namespace:SparcISA
getTe	src/arch/arm/stage2_lookup.cc	/^Stage2LookUp::getTe(ThreadContext *tc, TlbEntry *destTe)$/;"	f	class:Stage2LookUp
getThread	src/sim/insttracer.hh	/^    ThreadContext *getThread() { return thread; }$/;"	f	class:Trace::InstRecord
getThreadContext	src/sim/arguments.hh	/^    ThreadContext *getThreadContext() const { return tc; }$/;"	f	class:Arguments
getThreadContext	src/sim/system.hh	/^    ThreadContext *getThreadContext(ThreadID tid)$/;"	f	class:System
getThreadEntries	src/cpu/o3/rob.hh	/^    unsigned getThreadEntries(ThreadID tid)$/;"	f	class:ROB
getThreadNum	src/cpu/inorder/thread_context.hh	/^    int getThreadNum() { return thread->threadId(); }$/;"	f	class:InOrderThreadContext
getThrottle	src/mem/ruby/network/simple/Switch.cc	/^Switch::getThrottle(LinkID link_number) const$/;"	f	class:Switch
getTick	src/base/time.cc	/^Time::getTick() const$/;"	f	class:Time
getTid	src/cpu/inorder/resource.hh	/^    ThreadID getTid() { return tid; }$/;"	f	class:ResourceRequest
getTime	src/mem/ruby/slicc_interface/Message.hh	/^    const Tick& getTime() const { return m_time; }$/;"	f	class:Message
getTimingPacket	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::getTimingPacket()$/;"	f	class:Cache
getTlb	src/arch/arm/table_walker.hh	/^    TLB* getTlb() { return tlb; }$/;"	f	class:ArmISA::TableWalker
getToNetQueue	src/mem/ruby/network/garnet/BaseGarnetNetwork.cc	/^BaseGarnetNetwork::getToNetQueue(NodeID id, bool ordered, int network_num,$/;"	f	class:BaseGarnetNetwork
getToNetQueue	src/mem/ruby/network/simple/SimpleNetwork.cc	/^SimpleNetwork::getToNetQueue(NodeID id, bool ordered, int network_num,$/;"	f	class:SimpleNetwork
getTopFlit	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.hh	/^    getTopFlit(int vc)$/;"	f	class:InputUnit_d
getTopFlit	src/mem/ruby/network/garnet/fixed-pipeline/VirtualChannel_d.hh	/^    getTopFlit()$/;"	f	class:VirtualChannel_d
getTopFlit	src/mem/ruby/network/garnet/fixed-pipeline/flitBuffer_d.hh	/^    getTopFlit()$/;"	f	class:flitBuffer_d
getTopFlit	src/mem/ruby/network/garnet/flexible-pipeline/flitBuffer.cc	/^flitBuffer:: getTopFlit()$/;"	f	class:flitBuffer
getTotal	src/mem/ruby/common/Histogram.hh	/^    int64 getTotal() const { return m_sumSamples; }$/;"	f	class:Histogram
getTotal	src/mem/ruby/profiler/AccessTraceForAddress.cc	/^AccessTraceForAddress::getTotal() const$/;"	f	class:AccessTraceForAddress
getTotal	src/mem/ruby/profiler/StoreTrace.hh	/^    int getTotal() const { return m_total_samples; }$/;"	f	class:StoreTrace
getTotalCount	src/mem/ruby/filters/BlockBloomFilter.cc	/^BlockBloomFilter::getTotalCount()$/;"	f	class:BlockBloomFilter
getTotalCount	src/mem/ruby/filters/BulkBloomFilter.cc	/^BulkBloomFilter::getTotalCount()$/;"	f	class:BulkBloomFilter
getTotalCount	src/mem/ruby/filters/GenericBloomFilter.cc	/^GenericBloomFilter::getTotalCount()$/;"	f	class:GenericBloomFilter
getTotalCount	src/mem/ruby/filters/H3BloomFilter.cc	/^H3BloomFilter::getTotalCount()$/;"	f	class:H3BloomFilter
getTotalCount	src/mem/ruby/filters/LSB_CountingBloomFilter.cc	/^LSB_CountingBloomFilter::getTotalCount()$/;"	f	class:LSB_CountingBloomFilter
getTotalCount	src/mem/ruby/filters/MultiBitSelBloomFilter.cc	/^MultiBitSelBloomFilter::getTotalCount()$/;"	f	class:MultiBitSelBloomFilter
getTotalCount	src/mem/ruby/filters/MultiGrainBloomFilter.cc	/^MultiGrainBloomFilter::getTotalCount()$/;"	f	class:MultiGrainBloomFilter
getTotalCount	src/mem/ruby/filters/NonCountingBloomFilter.cc	/^NonCountingBloomFilter::getTotalCount()$/;"	f	class:NonCountingBloomFilter
getTouchedBy	src/mem/ruby/profiler/AccessTraceForAddress.hh	/^    int getTouchedBy() const { return m_touched_by.count(); }$/;"	f	class:AccessTraceForAddress
getTracer	src/cpu/base.hh	/^    Trace::InstTracer * getTracer() { return tracer; }$/;"	f	class:BaseCPU
getTransactionSize	src/dev/arm/hdlcd.hh	/^        size_t getTransactionSize() const {$/;"	f	class:HDLcd::DmaDoneEvent
getTranslateLatency	src/mem/request.hh	/^    Tick getTranslateLatency() const { return translateDelta; }$/;"	f	class:Request
getTsoLen	src/dev/i8254xGBe_defs.hh	/^inline int getTsoLen(TxDesc *d) { assert(isType(d, TXD_ADVDATA)); return bits(d->d2, 63,46); }$/;"	f	namespace:iGbReg::TxdOp
getType	src/dev/i8254xGBe_defs.hh	/^inline uint8_t getType(TxDesc *d) { return bits(d->d2, 23,20); }$/;"	f	namespace:iGbReg::TxdOp
getType	src/mem/ruby/slicc_interface/AbstractController.hh	/^    const MachineType getType() const { return m_machineID.getType(); }$/;"	f	class:AbstractController
getType	src/mem/ruby/slicc_interface/RubyRequest.hh	/^    const RubyRequestType& getType() const { return m_Type; }$/;"	f	class:RubyRequest
getType	src/mem/ruby/system/MachineID.hh	/^    MachineType getType() const { return type; }$/;"	f	struct:MachineID
getTypeLatencyHist	src/mem/ruby/system/Sequencer.hh	/^    Stats::Histogram& getTypeLatencyHist(uint32_t t)$/;"	f	class:Sequencer
getUnit	src/cpu/o3/fu_pool.cc	/^FUPool::getUnit(OpClass capability)$/;"	f	class:FUPool
getUtilization	src/mem/ruby/network/simple/Throttle.hh	/^    const Stats::Scalar & getUtilization() const$/;"	f	class:Throttle
getVCPUMMapSize	src/cpu/kvm/vm.hh	/^    int getVCPUMMapSize() const { return vcpuMMapSize; }$/;"	f	class:Kvm
getVCpuEvents	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::getVCpuEvents(struct kvm_vcpu_events &events) const$/;"	f	class:X86KvmCPU
getVCsPerVnet	src/mem/ruby/network/garnet/BaseGarnetNetwork.hh	/^    int getVCsPerVnet() {return m_vcs_per_vnet; }$/;"	f	class:BaseGarnetNetwork
getVPENum	src/arch/mips/isa.cc	/^ISA::getVPENum(ThreadID tid)$/;"	f	class:MipsISA::ISA
getVaddr	src/mem/request.hh	/^    getVaddr()$/;"	f	class:Request
getValue	src/base/inifile.cc	/^IniFile::Entry::getValue() const$/;"	f	class:IniFile::Entry
getValue	src/python/m5/SimObject.py	/^    def getValue(self):$/;"	f
getValue	src/python/m5/params.py	/^    def getValue(self):$/;"	m	class:AddrRange
getValue	src/python/m5/params.py	/^    def getValue(self):$/;"	m	class:Bool
getValue	src/python/m5/params.py	/^    def getValue(self):$/;"	m	class:CheckedInt
getValue	src/python/m5/params.py	/^    def getValue(self):$/;"	m	class:Clock
getValue	src/python/m5/params.py	/^    def getValue(self):$/;"	m	class:Cycles
getValue	src/python/m5/params.py	/^    def getValue(self):$/;"	m	class:Enum
getValue	src/python/m5/params.py	/^    def getValue(self):$/;"	m	class:EthernetAddr
getValue	src/python/m5/params.py	/^    def getValue(self):$/;"	m	class:Float
getValue	src/python/m5/params.py	/^    def getValue(self):$/;"	m	class:Frequency
getValue	src/python/m5/params.py	/^    def getValue(self):$/;"	m	class:IpAddress
getValue	src/python/m5/params.py	/^    def getValue(self):$/;"	m	class:IpNetmask
getValue	src/python/m5/params.py	/^    def getValue(self):$/;"	m	class:IpWithPort
getValue	src/python/m5/params.py	/^    def getValue(self):$/;"	m	class:Latency
getValue	src/python/m5/params.py	/^    def getValue(self):$/;"	m	class:MemoryBandwidth
getValue	src/python/m5/params.py	/^    def getValue(self):$/;"	m	class:NetworkBandwidth
getValue	src/python/m5/params.py	/^    def getValue(self):$/;"	m	class:NullSimObject
getValue	src/python/m5/params.py	/^    def getValue(self):$/;"	m	class:String
getValue	src/python/m5/params.py	/^    def getValue(self):$/;"	m	class:TickParamValue
getValue	src/python/m5/params.py	/^    def getValue(self):$/;"	m	class:Time
getValue	src/python/m5/params.py	/^    def getValue(self):$/;"	m	class:VectorParamValue
getValue	src/python/m5/params.py	/^    def getValue(self):$/;"	m	class:Voltage
getVcLoad	src/mem/ruby/network/garnet/fixed-pipeline/NetworkLink_d.hh	/^    const std::vector<unsigned int> & getVcLoad() const { return m_vc_load; }$/;"	f	class:NetworkLink_d
getVcLoad	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.hh	/^    const std::vector<unsigned int> & getVcLoad() const { return m_vc_load; }$/;"	f	class:NetworkLink
getVector	src/arch/arm/faults.cc	/^ArmFault::getVector(ThreadContext *tc)$/;"	f	class:ArmISA::ArmFault
getVector	src/arch/x86/faults.hh	/^        virtual uint8_t getVector() const { return vector; }$/;"	f	class:X86ISA::X86FaultBase
getVector	src/dev/x86/i8259.cc	/^X86ISA::I8259::getVector()$/;"	f	class:X86ISA::I8259
getVector64	src/arch/arm/faults.cc	/^ArmFault::getVector64(ThreadContext *tc)$/;"	f	class:ArmISA::ArmFault
getVersion	src/mem/ruby/slicc_interface/AbstractController.hh	/^    const NodeID getVersion() const { return m_machineID.getNum(); }$/;"	f	class:AbstractController
getVictim	src/mem/ruby/system/LRUPolicy.hh	/^LRUPolicy::getVictim(Index set) const$/;"	f	class:LRUPolicy
getVictim	src/mem/ruby/system/PseudoLRUPolicy.hh	/^PseudoLRUPolicy::getVictim(Index set) const$/;"	f	class:PseudoLRUPolicy
getVirtProcNum	src/arch/alpha/mt.hh	/^getVirtProcNum(TC *tc)$/;"	f	namespace:AlphaISA
getVirtProcNum	src/arch/mips/mt.hh	/^getVirtProcNum(TC *tc)$/;"	f	namespace:MipsISA
getVirtProcNum	src/arch/sparc/mt.hh	/^getVirtProcNum(TC *tc)$/;"	f	namespace:SparcISA
getVirtProxy	src/cpu/checker/thread_context.hh	/^    FSTranslatingPortProxy &getVirtProxy()$/;"	f	class:CheckerThreadContext
getVirtProxy	src/cpu/inorder/thread_context.cc	/^InOrderThreadContext::getVirtProxy()$/;"	f	class:InOrderThreadContext
getVirtProxy	src/cpu/o3/thread_context_impl.hh	/^O3ThreadContext<Impl>::getVirtProxy()$/;"	f	class:O3ThreadContext
getVirtProxy	src/cpu/ozone/cpu.hh	/^        FSTranslatingPortProxy &getVirtProxy()$/;"	f	class:OzoneCPU::OzoneTC
getVirtProxy	src/cpu/thread_context.hh	/^    FSTranslatingPortProxy &getVirtProxy() { return actualTC->getVirtProxy(); }$/;"	f	class:ProxyThreadContext
getVirtProxy	src/cpu/thread_state.cc	/^ThreadState::getVirtProxy()$/;"	f	class:ThreadState
getVnet	src/mem/ruby/slicc_interface/NetworkMessage.hh	/^    int getVnet() const { return vnet; }$/;"	f	class:NetworkMessage
getWalker	src/arch/x86/tlb.cc	/^TLB::getWalker()$/;"	f	class:X86ISA::TLB
getWalkerPort	src/arch/arm/table_walker.hh	/^    DmaPort& getWalkerPort() { return port; }$/;"	f	class:ArmISA::TableWalker
getWalkerPort	src/arch/arm/tlb.cc	/^TLB::getWalkerPort()$/;"	f	class:TLB
getWhen	src/sim/insttracer.hh	/^    Tick getWhen() { return when; }$/;"	f	class:Trace::InstRecord
getWire	src/cpu/timebuf.hh	/^    wire getWire(int idx)$/;"	f	class:TimeBuffer
getWritableCpuPort	src/cpu/testers/rubytest/RubyTester.cc	/^RubyTester::getWritableCpuPort(int idx)$/;"	f	class:RubyTester
getXCRs	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::getXCRs(struct kvm_xcrs &regs) const$/;"	f	class:X86KvmCPU
getXSave	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::getXSave(struct kvm_xsave &xsave) const$/;"	f	class:X86KvmCPU
get_BitWidth	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_BitWidth() const { return m_BitWidth; }$/;"	f	class:TechParameter
get_BitlineSpacing	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_BitlineSpacing() const { return m_BitlineSpacing; }$/;"	f	class:TechParameter
get_BufferDriveResistance	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_BufferDriveResistance() const { return m_BufferDriveResistance; }$/;"	f	class:TechParameter
get_BufferInputCapacitance	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_BufferInputCapacitance() const { return m_BufferInputCapacitance; }$/;"	f	class:TechParameter
get_BufferNMOSOffCurrent	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_BufferNMOSOffCurrent() const { return m_BufferNMOSOffCurrent; }$/;"	f	class:TechParameter
get_BufferPMOSOffCurrent	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_BufferPMOSOffCurrent() const { return m_BufferPMOSOffCurrent; }$/;"	f	class:TechParameter
get_CC2M2metal	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_CC2M2metal() const { return m_CC2M2metal; }$/;"	f	class:TechParameter
get_CC2M3metal	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_CC2M3metal() const { return m_CC2M3metal; }$/;"	f	class:TechParameter
get_CC2metal	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_CC2metal() const { return m_CC2metal; }$/;"	f	class:TechParameter
get_CC3M2metal	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_CC3M2metal() const { return m_CC3M2metal; }$/;"	f	class:TechParameter
get_CC3M3metal	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_CC3M3metal() const { return m_CC3M3metal; }$/;"	f	class:TechParameter
get_CC3metal	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_CC3metal() const { return m_CC3metal; }$/;"	f	class:TechParameter
get_CCM2metal	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_CCM2metal() const { return m_CCM2metal; }$/;"	f	class:TechParameter
get_CCM3metal	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_CCM3metal() const { return m_CCM3metal; }$/;"	f	class:TechParameter
get_CCmetal	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_CCmetal() const { return m_CCmetal; }$/;"	f	class:TechParameter
get_CM2metal	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_CM2metal() const { return m_CM2metal; }$/;"	f	class:TechParameter
get_CM3metal	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_CM3metal() const { return m_CM3metal; }$/;"	f	class:TechParameter
get_ClockCap	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_ClockCap() const { return m_ClockCap; }$/;"	f	class:TechParameter
get_Clockwire	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_Clockwire() const { return m_Clockwire; }$/;"	f	class:TechParameter
get_Cmetal	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_Cmetal() const { return m_Cmetal; }$/;"	f	class:TechParameter
get_CrsbarCellHeight	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_CrsbarCellHeight() const { return m_CrsbarCellHeight; }$/;"	f	class:TechParameter
get_CrsbarCellWidth	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_CrsbarCellWidth() const { return m_CrsbarCellWidth; }$/;"	f	class:TechParameter
get_DFF_TAB	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_DFF_TAB(uint32_t idx) const { return m_DFF_TAB[idx]; }$/;"	f	class:TechParameter
get_EnergyFactor	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_EnergyFactor() const { return m_EnergyFactor; }$/;"	f	class:TechParameter
get_Lamda	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_Lamda() const { return m_Lamda; }$/;"	f	class:TechParameter
get_MSCALE	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_MSCALE() const { return m_MSCALE; }$/;"	f	class:TechParameter
get_NAND2_TAB	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_NAND2_TAB(uint32_t idx) const { return m_NAND2_TAB[idx]; }$/;"	f	class:TechParameter
get_NMOS_TAB	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_NMOS_TAB(uint32_t idx) const { return m_NMOS_TAB[idx]; }$/;"	f	class:TechParameter
get_NOR2_TAB	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_NOR2_TAB(uint32_t idx) const { return m_NOR2_TAB[idx]; }$/;"	f	class:TechParameter
get_PMOS_TAB	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_PMOS_TAB(uint32_t idx) const { return m_PMOS_TAB[idx]; }$/;"	f	class:TechParameter
get_RegCellHeight	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_RegCellHeight() const { return m_RegCellHeight; }$/;"	f	class:TechParameter
get_RegCellWidth	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_RegCellWidth() const { return m_RegCellWidth; }$/;"	f	class:TechParameter
get_Reswire	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_Reswire() const { return m_Reswire; }$/;"	f	class:TechParameter
get_SCALE_S	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_SCALE_S() const { return m_SCALE_S; }$/;"	f	class:TechParameter
get_SenseEnergyFactor	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_SenseEnergyFactor() const { return m_SenseEnergyFactor; }$/;"	f	class:TechParameter
get_Wbitmuxn	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_Wbitmuxn() const { return m_Wbitmuxn; }$/;"	f	class:TechParameter
get_Wdec3to8n	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_Wdec3to8n() const { return m_Wdec3to8n; }$/;"	f	class:TechParameter
get_Wdec3to8p	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_Wdec3to8p() const { return m_Wdec3to8p; }$/;"	f	class:TechParameter
get_WdecNORn	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_WdecNORn() const { return m_WdecNORn; }$/;"	f	class:TechParameter
get_WdecNORp	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_WdecNORp() const { return m_WdecNORp; }$/;"	f	class:TechParameter
get_Wdecdriven	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_Wdecdriven() const { return m_Wdecdriven; }$/;"	f	class:TechParameter
get_Wdecdrivep	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_Wdecdrivep() const { return m_Wdecdrivep; }$/;"	f	class:TechParameter
get_Wdecinvn	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_Wdecinvn() const { return m_Wdecinvn; }$/;"	f	class:TechParameter
get_Wdecinvp	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_Wdecinvp() const { return m_Wdecinvp; }$/;"	f	class:TechParameter
get_Wdff	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_Wdff() const { return m_Wdff; }$/;"	f	class:TechParameter
get_WireBarrierThickness	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_WireBarrierThickness() const { return m_WireBarrierThickness; }$/;"	f	class:TechParameter
get_WireDielectricConstant	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_WireDielectricConstant() const { return m_WireDielectricConstant; }$/;"	f	class:TechParameter
get_WireDielectricThickness	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_WireDielectricThickness() const { return m_WireDielectricThickness; }$/;"	f	class:TechParameter
get_WireMetalThickness	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_WireMetalThickness() const { return m_WireMetalThickness; }$/;"	f	class:TechParameter
get_WireMinSpacing	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_WireMinSpacing() const { return m_WireMinSpacing; }$/;"	f	class:TechParameter
get_WireMinWidth	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_WireMinWidth() const { return m_WireMinWidth; }$/;"	f	class:TechParameter
get_Wmemcella	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_Wmemcella() const { return m_Wmemcella; }$/;"	f	class:TechParameter
get_Wmemcellbscale	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_Wmemcellbscale() const { return m_Wmemcellbscale; }$/;"	f	class:TechParameter
get_Wmemcellr	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_Wmemcellr() const { return m_Wmemcellr; }$/;"	f	class:TechParameter
get_Wmemcellw	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_Wmemcellw() const { return m_Wmemcellw; }$/;"	f	class:TechParameter
get_WordlineSpacing	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_WordlineSpacing() const { return m_WordlineSpacing; }$/;"	f	class:TechParameter
get_Woutdrivern	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_Woutdrivern() const { return m_Woutdrivern; }$/;"	f	class:TechParameter
get_Woutdriverp	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_Woutdriverp() const { return m_Woutdriverp; }$/;"	f	class:TechParameter
get_Woutdrvnandn	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_Woutdrvnandn() const { return m_Woutdrvnandn; }$/;"	f	class:TechParameter
get_Woutdrvnandp	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_Woutdrvnandp() const { return m_Woutdrvnandp; }$/;"	f	class:TechParameter
get_Woutdrvnorn	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_Woutdrvnorn() const { return m_Woutdrvnorn; }$/;"	f	class:TechParameter
get_Woutdrvnorp	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_Woutdrvnorp() const { return m_Woutdrvnorp; }$/;"	f	class:TechParameter
get_Woutdrvseln	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_Woutdrvseln() const { return m_Woutdrvseln; }$/;"	f	class:TechParameter
get_Woutdrvselp	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_Woutdrvselp() const { return m_Woutdrvselp; }$/;"	f	class:TechParameter
get_WsenseQ1to4	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_WsenseQ1to4() const { return m_WsenseQ1to4; }$/;"	f	class:TechParameter
get_aggregate_fault_probability	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    bool get_aggregate_fault_probability(int temperature, $/;"	f	class:Router_d
get_amp_idsat	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_amp_idsat() const { return m_amp_idsat; }$/;"	f	class:TechParameter
get_block_index	src/mem/ruby/filters/MultiGrainBloomFilter.cc	/^MultiGrainBloomFilter::get_block_index(const Address& addr)$/;"	f	class:MultiGrainBloomFilter
get_buf_read_count	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.hh	/^    double get_buf_read_count(unsigned int vnet) const$/;"	f	class:InputUnit_d
get_buf_write_count	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.hh	/^    double get_buf_write_count(unsigned int vnet) const$/;"	f	class:InputUnit_d
get_clk_power	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    double get_clk_power() const { return m_clk_power; }$/;"	f	class:Router_d
get_config_as_dict	src/python/m5/SimObject.py	/^    def get_config_as_dict(self):$/;"	f
get_config_as_dict	src/python/m5/params.py	/^    def get_config_as_dict(self):$/;"	m	class:PortRef
get_config_as_dict	src/python/m5/params.py	/^    def get_config_as_dict(self):$/;"	m	class:SimObjectVector
get_config_as_dict	src/python/m5/params.py	/^    def get_config_as_dict(self):$/;"	m	class:Time
get_config_as_dict	src/python/m5/params.py	/^    def get_config_as_dict(self):$/;"	m	class:VectorPortRef
get_credit_cnt	src/mem/ruby/network/garnet/fixed-pipeline/OutputUnit_d.hh	/^    get_credit_cnt(int vc)$/;"	f	class:OutputUnit_d
get_credit_count	src/mem/ruby/network/garnet/fixed-pipeline/OutVcState_d.hh	/^    int get_credit_count()          { return m_credit_count; }$/;"	f	class:OutVcState_d
get_crossbar_count	src/mem/ruby/network/garnet/fixed-pipeline/Switch_d.hh	/^    inline double get_crossbar_count() { return m_crossbar_activity; }$/;"	f	class:Switch_d
get_data	src/arch/generic/linux/threadinfo.hh	/^    get_data(const char *symbol, T &data)$/;"	f	class:Linux::ThreadInfo
get_dec_width	src/mem/ruby/network/orion/Buffer/DecoderUnit.hh	/^    uint32_t get_dec_width() const { return m_dec_width; }$/;"	f	class:DecoderUnit
get_delay	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.hh	/^    Cycles get_delay() { return src_delay; }$/;"	f	class:flit_d
get_delay	src/mem/ruby/network/garnet/flexible-pipeline/flit.cc	/^flit::get_delay()$/;"	f	class:flit
get_dynamic_energy	src/mem/ruby/network/orion/Buffer/Buffer.cc	/^double Buffer::get_dynamic_energy($/;"	f	class:Buffer
get_dynamic_energy	src/mem/ruby/network/orion/Clock.cc	/^double Clock::get_dynamic_energy() const$/;"	f	class:Clock
get_dynamic_energy	src/mem/ruby/network/orion/Crossbar/MatrixCrossbar.cc	/^double MatrixCrossbar::get_dynamic_energy(bool is_max_) const$/;"	f	class:MatrixCrossbar
get_dynamic_energy	src/mem/ruby/network/orion/Crossbar/MultreeCrossbar.cc	/^double MultreeCrossbar::get_dynamic_energy(bool is_max_) const$/;"	f	class:MultreeCrossbar
get_dynamic_energy_global_sw_arb	src/mem/ruby/network/orion/Allocator/SWAllocator.cc	/^double SWAllocator::get_dynamic_energy_global_sw_arb(double num_req_, bool is_max_) const$/;"	f	class:SWAllocator
get_dynamic_energy_global_vc_arb	src/mem/ruby/network/orion/Allocator/VCAllocator.cc	/^double VCAllocator::get_dynamic_energy_global_vc_arb(double num_req_, bool is_max_) const$/;"	f	class:VCAllocator
get_dynamic_energy_local_sw_arb	src/mem/ruby/network/orion/Allocator/SWAllocator.cc	/^double SWAllocator::get_dynamic_energy_local_sw_arb(double num_req_, bool is_max_) const$/;"	f	class:SWAllocator
get_dynamic_energy_local_vc_arb	src/mem/ruby/network/orion/Allocator/VCAllocator.cc	/^double VCAllocator::get_dynamic_energy_local_vc_arb(double num_req_, bool is_max_) const$/;"	f	class:VCAllocator
get_dynamic_energy_vc_select	src/mem/ruby/network/orion/Allocator/VCAllocator.cc	/^double VCAllocator::get_dynamic_energy_vc_select(bool is_read_, bool is_max_) const$/;"	f	class:VCAllocator
get_dynamic_power	src/mem/ruby/network/garnet/fixed-pipeline/NetworkLink_d.hh	/^    double get_dynamic_power() const { return m_power_dyn; }$/;"	f	class:NetworkLink_d
get_dynamic_power	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    double get_dynamic_power() const { return m_power_dyn; }$/;"	f	class:Router_d
get_e_access	src/mem/ruby/network/orion/Buffer/AmpUnit.hh	/^    double get_e_access() const { return m_e_access; }$/;"	f	class:AmpUnit
get_e_charge_drain	src/mem/ruby/network/orion/Buffer/PrechargeUnit.hh	/^    double get_e_charge_drain() const { return m_e_charge_drain; }$/;"	f	class:PrechargeUnit
get_e_charge_gate	src/mem/ruby/network/orion/Buffer/PrechargeUnit.hh	/^    double get_e_charge_gate() const { return m_e_charge_gate; }$/;"	f	class:PrechargeUnit
get_e_chg_addr	src/mem/ruby/network/orion/Buffer/DecoderUnit.hh	/^    double get_e_chg_addr() const { return m_e_chg_addr; }$/;"	f	class:DecoderUnit
get_e_chg_data	src/mem/ruby/network/orion/Buffer/OutdrvUnit.hh	/^    double get_e_chg_data() const { return m_e_chg_data; }$/;"	f	class:OutdrvUnit
get_e_chg_l1	src/mem/ruby/network/orion/Buffer/DecoderUnit.hh	/^    double get_e_chg_l1() const { return m_e_chg_l1; }$/;"	f	class:DecoderUnit
get_e_chg_output	src/mem/ruby/network/orion/Buffer/DecoderUnit.hh	/^    double get_e_chg_output() const { return m_e_chg_output; }$/;"	f	class:DecoderUnit
get_e_clock	src/mem/ruby/network/orion/FlipFlop.hh	/^    double get_e_clock() const { return m_e_clock; }$/;"	f	class:FlipFlop
get_e_col_read	src/mem/ruby/network/orion/Buffer/BitlineUnit.hh	/^    double get_e_col_read() const { return m_e_col_read; }$/;"	f	class:BitlineUnit
get_e_col_wrtie	src/mem/ruby/network/orion/Buffer/BitlineUnit.hh	/^    double get_e_col_wrtie() const { return m_e_col_write; }$/;"	f	class:BitlineUnit
get_e_keep_0	src/mem/ruby/network/orion/FlipFlop.hh	/^    double get_e_keep_0() const { return m_e_keep_0; }$/;"	f	class:FlipFlop
get_e_keep_1	src/mem/ruby/network/orion/FlipFlop.hh	/^    double get_e_keep_1() const { return m_e_keep_1; }$/;"	f	class:FlipFlop
get_e_out_0	src/mem/ruby/network/orion/Buffer/OutdrvUnit.hh	/^    double get_e_out_0() const { return m_e_out_0; }$/;"	f	class:OutdrvUnit
get_e_out_1	src/mem/ruby/network/orion/Buffer/OutdrvUnit.hh	/^    double get_e_out_1() const { return m_e_out_1; }$/;"	f	class:OutdrvUnit
get_e_read	src/mem/ruby/network/orion/Buffer/WordlineUnit.hh	/^    double get_e_read() const { return m_e_read; }$/;"	f	class:WordlineUnit
get_e_select	src/mem/ruby/network/orion/Buffer/OutdrvUnit.hh	/^    double get_e_select() const { return m_e_select; }$/;"	f	class:OutdrvUnit
get_e_switch	src/mem/ruby/network/orion/Buffer/MemUnit.hh	/^    double get_e_switch() const { return m_e_switch; }$/;"	f	class:MemUnit
get_e_switch	src/mem/ruby/network/orion/FlipFlop.hh	/^    double get_e_switch() const { return m_e_switch; }$/;"	f	class:FlipFlop
get_e_write	src/mem/ruby/network/orion/Buffer/WordlineUnit.hh	/^    double get_e_write() const { return m_e_write; }$/;"	f	class:WordlineUnit
get_enqueue_time	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.hh	/^    get_enqueue_time(int invc)$/;"	f	class:InputUnit_d
get_enqueue_time	src/mem/ruby/network/garnet/fixed-pipeline/VirtualChannel_d.hh	/^    inline Cycles get_enqueue_time()          { return m_enqueue_time; }$/;"	f	class:VirtualChannel_d
get_enqueue_time	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.hh	/^    Cycles get_enqueue_time() { return m_enqueue_time; }$/;"	f	class:flit_d
get_enqueue_time	src/mem/ruby/network/garnet/flexible-pipeline/flit.cc	/^flit::get_enqueue_time()$/;"	f	class:flit
get_fault_vector	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    bool get_fault_vector(int temperature, float fault_vector[]){ $/;"	f	class:Router_d
get_flit_width	src/mem/ruby/network/orion/OrionConfig.hh	/^    uint32_t get_flit_width() const { return m_flit_width; }$/;"	f	class:OrionConfig
get_freq	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_freq() const { return m_freq; }$/;"	f	class:TechParameter
get_global_arbit_count	src/mem/ruby/network/garnet/fixed-pipeline/SWallocator_d.hh	/^    get_global_arbit_count()$/;"	f	class:SWallocator_d
get_global_arbit_count	src/mem/ruby/network/garnet/fixed-pipeline/VCallocator_d.hh	/^    double get_global_arbit_count(unsigned int vnet) const$/;"	f	class:VCallocator_d
get_i_static	src/mem/ruby/network/orion/Buffer/BitlineUnit.hh	/^    double get_i_static() const { return m_i_static; }$/;"	f	class:BitlineUnit
get_i_static	src/mem/ruby/network/orion/Buffer/MemUnit.hh	/^    double get_i_static() const { return m_i_static; }$/;"	f	class:MemUnit
get_i_static	src/mem/ruby/network/orion/Buffer/PrechargeUnit.hh	/^    double get_i_static() const { return m_i_static; }$/;"	f	class:PrechargeUnit
get_i_static	src/mem/ruby/network/orion/Buffer/WordlineUnit.hh	/^    double get_i_static() const { return m_i_static; }$/;"	f	class:WordlineUnit
get_i_static	src/mem/ruby/network/orion/FlipFlop.hh	/^    double get_i_static() const { return m_i_static; }$/;"	f	class:FlipFlop
get_id	src/mem/ruby/network/garnet/fixed-pipeline/NetworkLink_d.hh	/^    int get_id(){return m_id;}$/;"	f	class:NetworkLink_d
get_id	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    int get_id()            { return m_id; }$/;"	f	class:Router_d
get_id	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.hh	/^    int get_id() { return m_id; }$/;"	f	class:flit_d
get_id	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.hh	/^    int get_id() const { return m_id; }$/;"	f	class:NetworkLink
get_id	src/mem/ruby/network/garnet/flexible-pipeline/flit.cc	/^flit::get_id()$/;"	f	class:flit
get_in_buf_num_set	src/mem/ruby/network/orion/OrionConfig.hh	/^    uint32_t get_in_buf_num_set() const { return m_in_buf_num_set; }$/;"	f	class:OrionConfig
get_index	src/mem/ruby/filters/BlockBloomFilter.cc	/^BlockBloomFilter::get_index(const Address& addr)$/;"	f	class:BlockBloomFilter
get_index	src/mem/ruby/filters/BulkBloomFilter.cc	/^BulkBloomFilter::get_index(const Address& addr)$/;"	f	class:BulkBloomFilter
get_index	src/mem/ruby/filters/H3BloomFilter.cc	/^H3BloomFilter::get_index(const Address& addr, int i)$/;"	f	class:H3BloomFilter
get_index	src/mem/ruby/filters/LSB_CountingBloomFilter.cc	/^LSB_CountingBloomFilter::get_index(const Address& addr)$/;"	f	class:LSB_CountingBloomFilter
get_index	src/mem/ruby/filters/MultiBitSelBloomFilter.cc	/^MultiBitSelBloomFilter::get_index(const Address& addr, int i)$/;"	f	class:MultiBitSelBloomFilter
get_index	src/mem/ruby/filters/NonCountingBloomFilter.cc	/^NonCountingBloomFilter::get_index(const Address& addr)$/;"	f	class:NonCountingBloomFilter
get_inlink_id	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.hh	/^    inline int get_inlink_id() { return m_in_link->get_id(); }$/;"	f	class:InputUnit_d
get_inport	src/mem/ruby/network/garnet/fixed-pipeline/OutVcState_d.hh	/^    int get_inport()                { return m_in_port; }$/;"	f	class:OutVcState_d
get_inputUnit_ref	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    std::vector<InputUnit_d *>& get_inputUnit_ref()   { return m_input_unit; }$/;"	f	class:Router_d
get_invc	src/mem/ruby/network/garnet/fixed-pipeline/OutVcState_d.hh	/^    int get_invc()                  { return m_in_vc; }$/;"	f	class:OutVcState_d
get_is_outdrv	src/mem/ruby/network/orion/Buffer/SRAM.hh	/^    bool get_is_outdrv() const { return m_is_outdrv; }$/;"	f	class:SRAM
get_kernel_syms	src/kern/linux/linux_syscalls.hh	/^    get_kernel_syms = 60,$/;"	e	enum:SystemCalls::__anon87
get_len_req_wire	src/mem/ruby/network/orion/Crossbar/Crossbar.hh	/^    double get_len_req_wire() const { return m_len_req_wire; }$/;"	f	class:Crossbar
get_line_width	src/mem/ruby/network/orion/Buffer/SRAM.hh	/^    uint32_t get_line_width() const { return m_line_width; }$/;"	f	class:SRAM
get_local_arbit_count	src/mem/ruby/network/garnet/fixed-pipeline/SWallocator_d.hh	/^    get_local_arbit_count()$/;"	f	class:SWallocator_d
get_local_arbit_count	src/mem/ruby/network/garnet/fixed-pipeline/VCallocator_d.hh	/^    double get_local_arbit_count(unsigned int vnet) const$/;"	f	class:VCallocator_d
get_msg_ptr	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.hh	/^    MsgPtr& get_msg_ptr() { return m_msg_ptr; }$/;"	f	class:flit_d
get_msg_ptr	src/mem/ruby/network/garnet/flexible-pipeline/flit.cc	/^flit::get_msg_ptr()$/;"	f	class:flit
get_name	src/python/m5/SimObject.py	/^    def get_name(self):$/;"	f
get_name	src/python/m5/params.py	/^    def get_name(self):$/;"	m	class:SimObjectVector
get_net_ptr	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    GarnetNetwork_d* get_net_ptr()                  { return m_network_ptr; }$/;"	f	class:Router_d
get_node_type	src/python/m5/util/dot_writer.py	/^def get_node_type(simNode):$/;"	f
get_num_col	src/mem/ruby/network/orion/Buffer/SRAM.hh	/^    uint32_t get_num_col() const { return m_line_width; }$/;"	f	class:SRAM
get_num_data_end	src/mem/ruby/network/orion/Buffer/SRAM.hh	/^    uint32_t get_num_data_end() const { return m_num_data_end; }$/;"	f	class:SRAM
get_num_in_2nd	src/mem/ruby/network/orion/Buffer/DecoderUnit.hh	/^    uint32_t get_num_in_2nd() const { return m_num_in_2nd; }$/;"	f	class:DecoderUnit
get_num_in_port	src/mem/ruby/network/orion/OrionConfig.hh	/^    uint32_t get_num_in_port() const { return m_num_in_port; }$/;"	f	class:OrionConfig
get_num_inports	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    int get_num_inports()   { return m_input_unit.size(); }$/;"	f	class:Router_d
get_num_out_port	src/mem/ruby/network/orion/OrionConfig.hh	/^    uint32_t get_num_out_port() const { return m_num_out_port; }$/;"	f	class:OrionConfig
get_num_outports	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    int get_num_outports()  { return m_output_unit.size(); }$/;"	f	class:Router_d
get_num_port	src/mem/ruby/network/orion/Buffer/SRAM.hh	/^    uint32_t get_num_port() const { return (m_num_read_port+m_num_write_port); }$/;"	f	class:SRAM
get_num_read_port	src/mem/ruby/network/orion/Buffer/SRAM.hh	/^    uint32_t get_num_read_port() const { return m_num_read_port; }$/;"	f	class:SRAM
get_num_row	src/mem/ruby/network/orion/Buffer/SRAM.hh	/^    uint32_t get_num_row() const { return m_num_entry; }$/;"	f	class:SRAM
get_num_vchannel	src/mem/ruby/network/orion/OrionConfig.hh	/^    uint32_t get_num_vchannel() const { return m_num_vchannel; }$/;"	f	class:OrionConfig
get_num_vclass	src/mem/ruby/network/orion/OrionConfig.hh	/^    uint32_t get_num_vclass() const { return m_num_vclass; }$/;"	f	class:OrionConfig
get_num_vcs	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    int get_num_vcs()       { return m_num_vcs; }$/;"	f	class:Router_d
get_num_vnets	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    int get_num_vnets()     { return m_virtual_networks; }$/;"	f	class:Router_d
get_num_write_port	src/mem/ruby/network/orion/Buffer/SRAM.hh	/^    uint32_t get_num_write_port() const { return m_num_write_port; }$/;"	f	class:SRAM
get_number	src/base/cprintf.hh	/^    get_number(const T& data)$/;"	f	struct:cp::Print
get_number	src/base/cprintf.hh	/^    get_number(int data)$/;"	f	struct:cp::Print
get_outlink_id	src/mem/ruby/network/garnet/fixed-pipeline/OutputUnit_d.hh	/^    get_outlink_id()$/;"	f	class:OutputUnit_d
get_outport	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.hh	/^    int get_outport() {return m_outport; }$/;"	f	class:flit_d
get_outport	src/mem/ruby/network/garnet/flexible-pipeline/InVcState.cc	/^InVcState::get_outport()$/;"	f	class:InVcState
get_outputUnit_ref	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    std::vector<OutputUnit_d *>& get_outputUnit_ref() { return m_output_unit; }$/;"	f	class:Router_d
get_outvc	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.hh	/^    get_outvc(int invc)$/;"	f	class:InputUnit_d
get_outvc	src/mem/ruby/network/garnet/fixed-pipeline/VirtualChannel_d.hh	/^    inline int get_outvc()                  { return m_output_vc; }$/;"	f	class:VirtualChannel_d
get_outvc	src/mem/ruby/network/garnet/flexible-pipeline/InVcState.cc	/^InVcState::get_outvc()$/;"	f	class:InVcState
get_page_index	src/mem/ruby/filters/MultiGrainBloomFilter.cc	/^MultiGrainBloomFilter::get_page_index(const Address & addr)$/;"	f	class:MultiGrainBloomFilter
get_parent	src/python/m5/SimObject.py	/^    def get_parent(self):$/;"	f
get_period	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_period() const { return m_period; }$/;"	f	class:TechParameter
get_pre_unit_load	src/mem/ruby/network/orion/Buffer/BitlineUnit.hh	/^    double get_pre_unit_load() const { return m_pre_unit_load; }$/;"	f	class:BitlineUnit
get_precision	src/base/cprintf_formats.hh	/^    bool get_precision;$/;"	m	struct:cp::Format
get_route	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.hh	/^    get_route(int vc)$/;"	f	class:InputUnit_d
get_route	src/mem/ruby/network/garnet/fixed-pipeline/VirtualChannel_d.hh	/^    inline int get_route()                  { return route; }$/;"	f	class:VirtualChannel_d
get_size	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.hh	/^    int get_size() { return m_size; }$/;"	f	class:flit_d
get_size	src/mem/ruby/network/garnet/flexible-pipeline/flit.cc	/^flit::get_size()$/;"	f	class:flit
get_stage	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.hh	/^    std::pair<flit_stage, Cycles> get_stage() { return m_stage; }$/;"	f	class:flit_d
get_state	src/mem/ruby/network/garnet/fixed-pipeline/VirtualChannel_d.hh	/^    inline VC_state_type get_state()        { return m_vc_state.first; }$/;"	f	class:VirtualChannel_d
get_static_power	src/mem/ruby/network/garnet/fixed-pipeline/NetworkLink_d.hh	/^    double get_static_power()const { return m_power_sta; }$/;"	f	class:NetworkLink_d
get_static_power	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    double get_static_power() const { return m_power_sta; }$/;"	f	class:Router_d
get_static_power	src/mem/ruby/network/orion/Allocator/Arbiter.cc	/^Arbiter::get_static_power() const$/;"	f	class:Arbiter
get_static_power	src/mem/ruby/network/orion/Allocator/SWAllocator.cc	/^double SWAllocator::get_static_power() const$/;"	f	class:SWAllocator
get_static_power	src/mem/ruby/network/orion/Allocator/VCAllocator.cc	/^double VCAllocator::get_static_power() const$/;"	f	class:VCAllocator
get_static_power	src/mem/ruby/network/orion/Buffer/Buffer.cc	/^double Buffer::get_static_power() const$/;"	f	class:Buffer
get_static_power	src/mem/ruby/network/orion/Clock.cc	/^double Clock::get_static_power() const$/;"	f	class:Clock
get_static_power	src/mem/ruby/network/orion/Crossbar/Crossbar.cc	/^double Crossbar::get_static_power() const$/;"	f	class:Crossbar
get_static_power	src/mem/ruby/network/orion/OrionLink.cc	/^double OrionLink::get_static_power() const$/;"	f	class:OrionLink
get_static_power_buf	src/mem/ruby/network/orion/OrionRouter.cc	/^double OrionRouter::get_static_power_buf() const$/;"	f	class:OrionRouter
get_static_power_clock	src/mem/ruby/network/orion/OrionRouter.cc	/^double OrionRouter::get_static_power_clock() const$/;"	f	class:OrionRouter
get_static_power_sa	src/mem/ruby/network/orion/OrionRouter.cc	/^double OrionRouter::get_static_power_sa() const$/;"	f	class:OrionRouter
get_static_power_va	src/mem/ruby/network/orion/OrionRouter.cc	/^double OrionRouter::get_static_power_va() const$/;"	f	class:OrionRouter
get_static_power_xbar	src/mem/ruby/network/orion/OrionRouter.cc	/^double OrionRouter::get_static_power_xbar() const$/;"	f	class:OrionRouter
get_tech_node	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_tech_node() const { return m_tech_node; }$/;"	f	class:TechParameter
get_tech_param_ptr	src/mem/ruby/network/orion/OrionConfig.hh	/^    const TechParameter* get_tech_param_ptr() const { return m_tech_param_ptr; }$/;"	f	class:OrionConfig
get_termcap	src/python/m5/util/terminal.py	/^def get_termcap(use_colors = None):$/;"	f
get_thread_area	src/kern/linux/linux_syscalls.hh	/^    get_thread_area = 61,$/;"	e	enum:SystemCalls::__anon87
get_time	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.hh	/^    Cycles get_time() { return m_time; }$/;"	f	class:flit_d
get_time	src/mem/ruby/network/garnet/flexible-pipeline/flit.cc	/^flit::get_time()$/;"	f	class:flit
get_type	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.hh	/^    flit_type get_type() { return m_type; }$/;"	f	class:flit_d
get_type	src/mem/ruby/network/garnet/flexible-pipeline/flit.cc	/^flit::get_type()$/;"	f	class:flit
get_type_colour	src/python/m5/util/dot_writer.py	/^def get_type_colour(nodeType):$/;"	f
get_valid_vcs	src/mem/ruby/network/garnet/flexible-pipeline/Router.cc	/^Router::get_valid_vcs(int invc)$/;"	f	class:Router
get_vc	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.hh	/^    int get_vc() { return m_vc; }$/;"	f	class:flit_d
get_vc	src/mem/ruby/network/garnet/flexible-pipeline/flit.cc	/^flit::get_vc()$/;"	f	class:flit
get_vc_per_vnet	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    int get_vc_per_vnet()   { return m_vc_per_vnet; }$/;"	f	class:Router_d
get_vdd	src/mem/ruby/network/orion/TechParameter.hh	/^    double get_vdd() const { return m_vdd; }$/;"	f	class:TechParameter
get_vec	src/arch/sparc/interrupts.hh	/^    get_vec(int int_num)$/;"	f	class:SparcISA::Interrupts
get_vnet	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.cc	/^NetworkInterface_d::get_vnet(int vc)$/;"	f	class:NetworkInterface_d
get_vnet	src/mem/ruby/network/garnet/fixed-pipeline/SWallocator_d.cc	/^SWallocator_d::get_vnet(int invc)$/;"	f	class:SWallocator_d
get_vnet	src/mem/ruby/network/garnet/fixed-pipeline/VCallocator_d.cc	/^VCallocator_d::get_vnet(int invc)$/;"	f	class:VCallocator_d
get_vnet	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.hh	/^    int get_vnet() { return m_vnet; }$/;"	f	class:flit_d
get_vnet	src/mem/ruby/network/garnet/flexible-pipeline/Router.cc	/^Router::get_vnet(int vc)$/;"	f	class:Router
get_vnet	src/mem/ruby/network/garnet/flexible-pipeline/flit.cc	/^flit::get_vnet()$/;"	f	class:flit
get_vnet_type	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.hh	/^    get_vnet_type(int vc)$/;"	f	class:GarnetNetwork_d
get_width	src/base/cprintf_formats.hh	/^    bool get_width;$/;"	m	struct:cp::Format
getaddressconf	src/kern/tru64/tru64_syscalls.hh	/^        getaddressconf = 214,$/;"	e	enum:SystemCalls::__anon102
getbyte	src/base/remote_gdb.cc	/^BaseRemoteGDB::getbyte()$/;"	f	class:BaseRemoteGDB
getcwd	src/kern/linux/linux_syscalls.hh	/^    getcwd = 62,$/;"	e	enum:SystemCalls::__anon87
getcwd	src/sim/process.hh	/^    std::string getcwd() const { return cwd; }$/;"	f	class:LiveProcess
getcwdFunc	src/sim/syscall_emul.cc	/^getcwdFunc(SyscallDesc *desc, int num, LiveProcess *p, ThreadContext *tc)$/;"	f
getdents	src/kern/linux/linux_syscalls.hh	/^    getdents = 63,$/;"	e	enum:SystemCalls::__anon87
getdents64	src/kern/linux/linux_syscalls.hh	/^    getdents64 = 64,$/;"	e	enum:SystemCalls::__anon87
getdirentries	src/kern/tru64/tru64_syscalls.hh	/^        getdirentries = 159,$/;"	e	enum:SystemCalls::__anon102
getdirentriesFunc	src/kern/tru64/tru64.hh	/^    getdirentriesFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	class:Tru64
getdomainname	src/kern/tru64/tru64_syscalls.hh	/^        getdomainname = 165,$/;"	e	enum:SystemCalls::__anon102
getdtablesize	src/kern/tru64/tru64_syscalls.hh	/^        getdtablesize = 89,$/;"	e	enum:SystemCalls::__anon102
getegid	src/kern/linux/linux_syscalls.hh	/^    getegid = 65,$/;"	e	enum:SystemCalls::__anon87
getegid32	src/kern/linux/linux_syscalls.hh	/^    getegid32 = 66,$/;"	e	enum:SystemCalls::__anon87
getegidFunc	src/sim/syscall_emul.cc	/^getegidFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
geteuid	src/kern/linux/linux_syscalls.hh	/^    geteuid = 67,$/;"	e	enum:SystemCalls::__anon87
geteuid32	src/kern/linux/linux_syscalls.hh	/^    geteuid32 = 68,$/;"	e	enum:SystemCalls::__anon87
geteuidFunc	src/sim/syscall_emul.cc	/^geteuidFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
getfd	src/base/socket.hh	/^    int getfd() const { return fd; }$/;"	f	class:ListenSocket
getfh	src/kern/tru64/tru64_syscalls.hh	/^        getfh = 164,$/;"	e	enum:SystemCalls::__anon102
getfsstat	src/kern/tru64/tru64_syscalls.hh	/^        getfsstat = 229,$/;"	e	enum:SystemCalls::__anon102
getgid	src/kern/linux/linux_syscalls.hh	/^    getgid = 69,$/;"	e	enum:SystemCalls::__anon87
getgid	src/kern/tru64/tru64_syscalls.hh	/^        getgid = 47,$/;"	e	enum:SystemCalls::__anon102
getgid32	src/kern/linux/linux_syscalls.hh	/^    getgid32 = 70,$/;"	e	enum:SystemCalls::__anon87
getgidFunc	src/sim/syscall_emul.cc	/^getgidFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
getgidPseudoFunc	src/sim/syscall_emul.cc	/^getgidPseudoFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
getgroups	src/kern/linux/linux_syscalls.hh	/^    getgroups = 71,$/;"	e	enum:SystemCalls::__anon87
getgroups	src/kern/tru64/tru64_syscalls.hh	/^        getgroups = 79,$/;"	e	enum:SystemCalls::__anon102
getgroups32	src/kern/linux/linux_syscalls.hh	/^    getgroups32 = 72,$/;"	e	enum:SystemCalls::__anon87
gethostid	src/kern/tru64/tru64_syscalls.hh	/^        gethostid = 142,$/;"	e	enum:SystemCalls::__anon102
gethostname	src/kern/tru64/tru64_syscalls.hh	/^        gethostname = 87,$/;"	e	enum:SystemCalls::__anon102
gethostnameFunc	src/sim/syscall_emul.cc	/^gethostnameFunc(SyscallDesc *desc, int num, LiveProcess *p, ThreadContext *tc)$/;"	f
getindex	src/python/m5/proxy.py	/^    def getindex(obj, index):$/;"	m	class:BaseProxy
getindex	src/python/m5/proxy.py	/^    getindex = staticmethod(getindex)$/;"	v	class:BaseProxy
getitimer	src/kern/linux/linux_syscalls.hh	/^    getitimer = 73,$/;"	e	enum:SystemCalls::__anon87
getitimer	src/kern/tru64/tru64_syscalls.hh	/^        getitimer = 86,$/;"	e	enum:SystemCalls::__anon102
getlogin	src/kern/tru64/tru64_syscalls.hh	/^        getlogin = 49,$/;"	e	enum:SystemCalls::__anon102
getmnt	src/kern/tru64/tru64_syscalls.hh	/^        getmnt = 184,$/;"	e	enum:SystemCalls::__anon102
getopt	src/python/m5/util/jobfile.py	/^        import getopt$/;"	i
getopt	src/unittest/genini.py	/^import getopt, os, os.path, sys$/;"	i
getpagesize	src/kern/tru64/tru64_syscalls.hh	/^        getpagesize = 64,$/;"	e	enum:SystemCalls::__anon102
getpagesizeFunc	src/sim/syscall_emul.cc	/^getpagesizeFunc(SyscallDesc *desc, int num, LiveProcess *p, ThreadContext *tc)$/;"	f
getpeername	src/kern/tru64/tru64_syscalls.hh	/^        getpeername = 31,$/;"	e	enum:SystemCalls::__anon102
getpgid	src/kern/linux/linux_syscalls.hh	/^    getpgid = 74,$/;"	e	enum:SystemCalls::__anon87
getpgid	src/kern/tru64/tru64_syscalls.hh	/^        getpgid = 233,$/;"	e	enum:SystemCalls::__anon102
getpgrp	src/kern/linux/linux_syscalls.hh	/^    getpgrp = 75,$/;"	e	enum:SystemCalls::__anon87
getpgrp	src/kern/tru64/tru64_syscalls.hh	/^        getpgrp = 63,$/;"	e	enum:SystemCalls::__anon102
getpid	src/kern/linux/linux_syscalls.hh	/^    getpid = 76,$/;"	e	enum:SystemCalls::__anon87
getpid	src/kern/tru64/tru64_syscalls.hh	/^        getpid = 20,$/;"	e	enum:SystemCalls::__anon102
getpidFunc	src/sim/syscall_emul.cc	/^getpidFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
getpidPseudoFunc	src/sim/syscall_emul.cc	/^getpidPseudoFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
getpmsg	src/kern/linux/linux_syscalls.hh	/^    getpmsg = 77,$/;"	e	enum:SystemCalls::__anon87
getppid	src/kern/linux/linux_syscalls.hh	/^    getppid = 78,$/;"	e	enum:SystemCalls::__anon87
getppidFunc	src/sim/syscall_emul.cc	/^getppidFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
getpriority	src/kern/linux/linux_syscalls.hh	/^    getpriority = 79,$/;"	e	enum:SystemCalls::__anon87
getpriority	src/kern/tru64/tru64_syscalls.hh	/^        getpriority = 100,$/;"	e	enum:SystemCalls::__anon102
getregs	src/arch/alpha/remote_gdb.cc	/^RemoteGDB::getregs()$/;"	f	class:RemoteGDB
getregs	src/arch/arm/remote_gdb.cc	/^RemoteGDB::getregs()$/;"	f	class:RemoteGDB
getregs	src/arch/mips/remote_gdb.cc	/^RemoteGDB::getregs()$/;"	f	class:RemoteGDB
getregs	src/arch/power/remote_gdb.hh	/^    getregs()$/;"	f	class:PowerISA::RemoteGDB
getregs	src/arch/sparc/remote_gdb.cc	/^RemoteGDB::getregs()$/;"	f	class:RemoteGDB
getregs	src/arch/x86/remote_gdb.cc	/^void RemoteGDB::getregs()$/;"	f	class:RemoteGDB
getresgid	src/kern/linux/linux_syscalls.hh	/^    getresgid = 80,$/;"	e	enum:SystemCalls::__anon87
getresgid32	src/kern/linux/linux_syscalls.hh	/^    getresgid32 = 81,$/;"	e	enum:SystemCalls::__anon87
getresuid	src/kern/linux/linux_syscalls.hh	/^    getresuid = 82,$/;"	e	enum:SystemCalls::__anon87
getresuid32	src/kern/linux/linux_syscalls.hh	/^    getresuid32 = 83,$/;"	e	enum:SystemCalls::__anon87
getresuidFunc	src/arch/sparc/linux/syscalls.cc	/^getresuidFunc(SyscallDesc *desc, int num, LiveProcess *p, ThreadContext *tc)$/;"	f	namespace:SparcISA
getrlimit	src/kern/linux/linux_syscalls.hh	/^    getrlimit = 84,$/;"	e	enum:SystemCalls::__anon87
getrlimit	src/kern/tru64/tru64_syscalls.hh	/^        getrlimit = 144,$/;"	e	enum:SystemCalls::__anon102
getrlimitFunc	src/sim/syscall_emul.hh	/^getrlimitFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
getrusage	src/kern/linux/linux_syscalls.hh	/^    getrusage = 85,$/;"	e	enum:SystemCalls::__anon87
getrusage	src/kern/tru64/tru64_syscalls.hh	/^        getrusage = 117,$/;"	e	enum:SystemCalls::__anon102
getrusageFunc	src/sim/syscall_emul.hh	/^getrusageFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
getsid	src/kern/linux/linux_syscalls.hh	/^    getsid = 86,$/;"	e	enum:SystemCalls::__anon87
getsid	src/kern/tru64/tru64_syscalls.hh	/^        getsid = 234,$/;"	e	enum:SystemCalls::__anon102
getsize	src/arch/alpha/tlb.hh	/^    int getsize() const { return size; }$/;"	f	class:AlphaISA::TLB
getsize	src/arch/arm/tlb.hh	/^    int getsize() const { return size; }$/;"	f	class:ArmISA::TLB
getsize	src/arch/mips/tlb.hh	/^    int getsize() const { return size; }$/;"	f	class:MipsISA::TLB
getsize	src/arch/power/tlb.hh	/^    getsize() const$/;"	f	class:PowerISA::TLB
getsockname	src/kern/tru64/tru64_syscalls.hh	/^        getsockname = 32,$/;"	e	enum:SystemCalls::__anon102
getsockopt	src/kern/tru64/tru64_syscalls.hh	/^        getsockopt = 118,$/;"	e	enum:SystemCalls::__anon102
getstack	src/arch/alpha/stacktrace.hh	/^    const std::vector<Addr> &getstack() const { return stack; }$/;"	f	class:AlphaISA::StackTrace
getstack	src/arch/arm/stacktrace.hh	/^    const std::vector<Addr> &getstack() const { return stack; }$/;"	f	class:ArmISA::StackTrace
getstack	src/arch/mips/stacktrace.hh	/^    const std::vector<Addr> &getstack() const { return stack; }$/;"	f	class:MipsISA::StackTrace
getstack	src/arch/power/stacktrace.hh	/^    getstack() const$/;"	f	class:PowerISA::StackTrace
getstack	src/arch/sparc/stacktrace.hh	/^    const std::vector<Addr> &getstack() const { return stack; }$/;"	f	class:SparcISA::StackTrace
getstack	src/arch/x86/stacktrace.hh	/^        const std::vector<Addr> &getstack() const { return stack; }$/;"	f	class:X86ISA::StackTrace
getsysinfo	src/kern/tru64/tru64_syscalls.hh	/^        getsysinfo = 256,$/;"	e	enum:SystemCalls::__anon102
getsysinfoFunc	src/arch/alpha/tru64/process.cc	/^getsysinfoFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	file:
gettid	src/cpu/kvm/perfevent.cc	/^PerfKvmCounter::gettid()$/;"	f	class:PerfKvmCounter
gettid	src/cpu/kvm/timer.cc	/^gettid()$/;"	f	file:
gettid	src/kern/linux/linux_syscalls.hh	/^    gettid = 87,$/;"	e	enum:SystemCalls::__anon87
gettimeofday	src/kern/linux/linux_syscalls.hh	/^    gettimeofday = 88,$/;"	e	enum:SystemCalls::__anon87
gettimeofday	src/kern/tru64/tru64_syscalls.hh	/^        gettimeofday = 116,$/;"	e	enum:SystemCalls::__anon102
gettimeofday64	src/kern/tru64/tru64_syscalls.hh	/^        gettimeofday64 = 230,$/;"	e	enum:SystemCalls::__anon102
gettimeofdayFunc	src/sim/syscall_emul.hh	/^gettimeofdayFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
getuid	src/kern/linux/linux_syscalls.hh	/^    getuid = 89,$/;"	e	enum:SystemCalls::__anon87
getuid	src/kern/tru64/tru64_syscalls.hh	/^        getuid = 24,$/;"	e	enum:SystemCalls::__anon102
getuid32	src/kern/linux/linux_syscalls.hh	/^    getuid32 = 90,$/;"	e	enum:SystemCalls::__anon87
getuidFunc	src/sim/syscall_emul.cc	/^getuidFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
getuidPseudoFunc	src/sim/syscall_emul.cc	/^getuidPseudoFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
getxattr	src/kern/linux/linux_syscalls.hh	/^    getxattr = 91,$/;"	e	enum:SystemCalls::__anon87
gibi	src/python/m5/util/convert.py	/^gibi = mebi * 1024$/;"	v
gic	src/dev/arm/RealView.py	/^    gic = Param.BaseGic(Parent.any, "GIC to use for interrupting")$/;"	v	class:GenericTimer
gic	src/dev/arm/RealView.py	/^    gic = Param.BaseGic(Parent.any, "Gic to use for interrupting")$/;"	v	class:AmbaDmaDevice
gic	src/dev/arm/RealView.py	/^    gic = Param.BaseGic(Parent.any, "Gic to use for interrupting")$/;"	v	class:AmbaIntDevice
gic	src/dev/arm/RealView.py	/^    gic = Param.BaseGic(Parent.any, "Gic to use for interrupting")$/;"	v	class:CpuLocalTimer
gic	src/dev/arm/RealView.py	/^    gic = Param.BaseGic(Parent.any, "Gic to use for interrupting")$/;"	v	class:Pl011
gic	src/dev/arm/RealView.py	/^    gic = Param.BaseGic(Parent.any, "Gic to use for interrupting")$/;"	v	class:Sp804
gic	src/dev/arm/RealView.py	/^    gic = Param.BaseGic(Parent.any, "Gic to use for interrupting")$/;"	v	class:VGic
gic	src/dev/arm/RealView.py	/^    gic = Pl390()$/;"	v	class:RealViewPBX
gic	src/dev/arm/RealView.py	/^    gic = Pl390(dist_addr=0x10041000, cpu_addr=0x10040000)$/;"	v	class:RealViewEB
gic	src/dev/arm/RealView.py	/^    gic = Pl390(dist_addr=0x2C001000, cpu_addr=0x2C002000)$/;"	v	class:VExpress_EMM
gic	src/dev/arm/amba_device.hh	/^    BaseGic  *gic;$/;"	m	class:AmbaDmaDevice
gic	src/dev/arm/amba_device.hh	/^    BaseGic *gic;$/;"	m	class:AmbaIntDevice
gic	src/dev/arm/pl011.hh	/^    BaseGic *gic;$/;"	m	class:Pl011
gic	src/dev/arm/realview.hh	/^    BaseGic *gic;$/;"	m	class:RealView
gic	src/dev/arm/timer_cpulocal.hh	/^    BaseGic *gic;$/;"	m	class:CpuLocalTimer
gic	src/dev/arm/timer_sp804.hh	/^    BaseGic *gic;$/;"	m	class:Sp804
gic	src/dev/arm/vgic.hh	/^    BaseGic *gic;$/;"	m	class:VGic
gic_cpu_addr	src/arch/arm/ArmSystem.py	/^    gic_cpu_addr = Param.Addr(0, "Addres of the GIC CPU interface")$/;"	v	class:ArmSystem
gid	src/sim/Process.py	/^    gid = Param.Int(100, 'group id')$/;"	v	class:LiveProcess
gid	src/sim/process.hh	/^    inline uint64_t gid() {return __gid;}$/;"	f	class:LiveProcess
gid_t	src/kern/linux/linux.hh	/^    typedef uint32_t gid_t;$/;"	t	class:Linux
gid_t	src/kern/solaris/solaris.hh	/^    typedef int32_t gid_t;$/;"	t	class:Solaris
gid_t	src/kern/tru64/tru64.hh	/^    typedef uint32_t gid_t;$/;"	t	class:Tru64
giga	src/python/m5/util/convert.py	/^giga = 1.0e9$/;"	v
gl	src/arch/sparc/isa.hh	/^    uint8_t gl;             \/\/ Global level register$/;"	m	class:SparcISA::ISA
gl	src/cpu/m5legion_interface.h	/^    uint8_t gl;$/;"	m	struct:__anon55
glevel	src/base/loader/coff_sym.h	/^    unsigned glevel : 2;        \/* level this file was compiled with *\/$/;"	m	struct:ecoff_fdr
global	src/arch/arm/pagetable.hh	/^    bool global;$/;"	m	struct:ArmISA::TlbEntry
global	src/arch/arm/table_walker.hh	/^        bool global(WalkerState *currState) const$/;"	f	class:ArmISA::TableWalker::L1Descriptor
global	src/arch/arm/table_walker.hh	/^        bool global(WalkerState *currState) const$/;"	f	class:ArmISA::TableWalker::L2Descriptor
global	src/arch/arm/table_walker.hh	/^        bool global(WalkerState *currState) const$/;"	f	class:ArmISA::TableWalker::LongDescriptor
global	src/arch/x86/pagetable.hh	/^        bool global;$/;"	m	struct:X86ISA::TlbEntry
globalBarrier	src/sim/global_event.hh	/^        bool globalBarrier()$/;"	f	class:BaseGlobalEvent::BarrierEvent
globalCtrBits	src/cpu/ozone/OzoneCPU.py	/^    globalCtrBits = Param.Unsigned("Bits per counter")$/;"	v	class:DerivOzoneCPU
globalCtrBits	src/cpu/ozone/SimpleOzoneCPU.py	/^    globalCtrBits = Param.Unsigned("Bits per counter")$/;"	v	class:SimpleOzoneCPU
globalCtrBits	src/cpu/ozone/simple_params.hh	/^    unsigned globalCtrBits;$/;"	m	class:SimpleParams
globalCtrBits	src/cpu/pred/BranchPredictor.py	/^    globalCtrBits = Param.Unsigned(2, "Bits per counter")$/;"	v	class:BranchPredictor
globalCtrBits	src/cpu/pred/tournament.hh	/^    unsigned globalCtrBits;$/;"	m	class:TournamentBP
globalCtrs	src/cpu/pred/tournament.hh	/^    std::vector<SatCounter> globalCtrs;$/;"	m	class:TournamentBP
globalEvent	src/sim/eventq.hh	/^    virtual BaseGlobalEvent *globalEvent() { return NULL; }$/;"	f	class:Event
globalEvent	src/sim/global_event.hh	/^        virtual BaseGlobalEvent *globalEvent() { return _globalEvent; }$/;"	f	class:BaseGlobalEvent::BarrierEvent
globalHistory	src/cpu/pred/tournament.hh	/^        unsigned globalHistory;$/;"	m	struct:TournamentBP::BPHistory
globalHistory	src/cpu/pred/tournament.hh	/^    unsigned globalHistory;$/;"	m	class:TournamentBP
globalHistoryBits	src/cpu/ozone/OzoneCPU.py	/^    globalHistoryBits = Param.Unsigned("Bits of history")$/;"	v	class:DerivOzoneCPU
globalHistoryBits	src/cpu/ozone/SimpleOzoneCPU.py	/^    globalHistoryBits = Param.Unsigned("Bits of history")$/;"	v	class:SimpleOzoneCPU
globalHistoryBits	src/cpu/ozone/simple_params.hh	/^    unsigned globalHistoryBits;$/;"	m	class:SimpleParams
globalHistoryBits	src/cpu/pred/tournament.hh	/^    unsigned globalHistoryBits;$/;"	m	class:TournamentBP
globalHistoryMask	src/cpu/pred/tournament.hh	/^    unsigned globalHistoryMask;$/;"	m	class:TournamentBP
globalPointer	src/base/loader/object_file.hh	/^    Addr globalPointer() const { return globalPtr; }$/;"	f	class:ObjectFile
globalPredTaken	src/cpu/pred/tournament.hh	/^        bool globalPredTaken;$/;"	m	struct:TournamentBP::BPHistory
globalPredictorSize	src/cpu/ozone/OzoneCPU.py	/^    globalPredictorSize = Param.Unsigned("Size of global predictor")$/;"	v	class:DerivOzoneCPU
globalPredictorSize	src/cpu/ozone/SimpleOzoneCPU.py	/^    globalPredictorSize = Param.Unsigned("Size of global predictor")$/;"	v	class:SimpleOzoneCPU
globalPredictorSize	src/cpu/ozone/simple_params.hh	/^    unsigned globalPredictorSize;$/;"	m	class:SimpleParams
globalPredictorSize	src/cpu/pred/BranchPredictor.py	/^    globalPredictorSize = Param.Unsigned(8192, "Size of global predictor")$/;"	v	class:BranchPredictor
globalPredictorSize	src/cpu/pred/tournament.hh	/^    unsigned globalPredictorSize;$/;"	m	class:TournamentBP
globalPtr	src/base/loader/object_file.hh	/^    Addr globalPtr;$/;"	m	class:ObjectFile
globalQMutex	src/sim/global_event.cc	/^std::mutex BaseGlobalEvent::globalQMutex;$/;"	m	class:BaseGlobalEvent	file:
globalQMutex	src/sim/global_event.hh	/^      static std::mutex globalQMutex;$/;"	m	class:BaseGlobalEvent
globalSeqNum	src/cpu/inorder/cpu.hh	/^    InstSeqNum globalSeqNum[ThePipeline::MaxThreads];$/;"	m	class:InOrderCPU
globalSeqNum	src/cpu/o3/cpu.hh	/^    InstSeqNum globalSeqNum;\/\/[Impl::MaxThreads];$/;"	m	class:FullO3CPU
globalSeqNum	src/cpu/ozone/cpu.hh	/^    InstSeqNum globalSeqNum;$/;"	m	class:OzoneCPU
globalThreshold	src/cpu/pred/tournament.hh	/^    unsigned globalThreshold;$/;"	m	class:TournamentBP
globalUsed	src/cpu/pred/tournament.hh	/^        bool globalUsed;$/;"	m	struct:TournamentBP::BPHistory
global_dirent	src/kern/tru64/tru64.hh	/^typedef struct dirent global_dirent;$/;"	t	typeref:struct:dirent
global_stat	src/kern/tru64/tru64.hh	/^typedef struct stat global_stat;$/;"	t	typeref:struct:stat
global_statfs	src/kern/tru64/tru64.hh	/^typedef struct statfs global_statfs;$/;"	t	typeref:struct:statfs
globals	src/python/m5/util/code_formatter.py	/^    globals = True$/;"	v	class:code_formatter
globals	src/sim/serialize.cc	/^Globals globals;$/;"	v
gmtime	src/python/m5/params.py	/^    from time import gmtime, strptime, struct_time, time$/;"	i
goesAfter	src/base/trie.hh	/^    goesAfter(Node **parent, Node *kid, Key key, Key new_mask)$/;"	f	class:Trie
gotAddrRanges	src/mem/bus.hh	/^    std::vector<bool> gotAddrRanges;$/;"	m	class:BaseBus
gotAddrRanges	src/mem/ruby/system/RubyPort.hh	/^    unsigned int gotAddrRanges;$/;"	m	class:RubyPort
gotAllAddrRanges	src/mem/bus.hh	/^    bool gotAllAddrRanges;$/;"	m	class:BaseBus
gp_prologue	src/base/loader/coff_sym.h	/^    unsigned gp_prologue : 8; \/* byte size of GP prologue *\/$/;"	m	struct:pdr
gp_used	src/base/loader/coff_sym.h	/^    unsigned gp_used : 1;       \/* true if the procedure uses GP *\/$/;"	m	struct:pdr
gp_value	src/arch/alpha/aout_machdep.h	/^    uint64_t    gp_value;       \/\/\/< global pointer reg value$/;"	m	struct:aout_exechdr
gpio0_fake	src/dev/arm/RealView.py	/^    gpio0_fake    = AmbaFake(pio_addr=0x10013000)$/;"	v	class:RealViewEB
gpio0_fake	src/dev/arm/RealView.py	/^    gpio0_fake    = AmbaFake(pio_addr=0x10013000)$/;"	v	class:RealViewPBX
gpio1_fake	src/dev/arm/RealView.py	/^    gpio1_fake    = AmbaFake(pio_addr=0x10014000)$/;"	v	class:RealViewEB
gpio1_fake	src/dev/arm/RealView.py	/^    gpio1_fake    = AmbaFake(pio_addr=0x10014000)$/;"	v	class:RealViewPBX
gpio2_fake	src/dev/arm/RealView.py	/^    gpio2_fake    = AmbaFake(pio_addr=0x10015000)$/;"	v	class:RealViewEB
gpio2_fake	src/dev/arm/RealView.py	/^    gpio2_fake    = AmbaFake(pio_addr=0x10015000)$/;"	v	class:RealViewPBX
gpior	src/dev/ns_gige.hh	/^    uint32_t    gpior;$/;"	m	struct:dp_regs
gprmask	src/arch/alpha/aout_machdep.h	/^    uint32_t    gprmask;        \/\/\/< GPR mask (unused, AFAIK)$/;"	m	struct:aout_exechdr
gradObjects	src/cpu/inorder/resource_pool.hh	/^    std::vector<int> gradObjects;$/;"	m	class:ResourcePool
grainSize	src/arch/arm/table_walker.hh	/^        int grainSize;$/;"	m	class:ArmISA::TableWalker::LongDescriptor
grant_vc	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.hh	/^    grant_vc(int in_vc, int out_vc, Cycles curTime)$/;"	f	class:InputUnit_d
grant_vc	src/mem/ruby/network/garnet/fixed-pipeline/VirtualChannel_d.cc	/^VirtualChannel_d::grant_vc(int out_vc, Cycles curTime)$/;"	f	class:VirtualChannel_d
grant_vc	src/mem/ruby/network/garnet/flexible-pipeline/FlexibleConsumer.hh	/^    virtual void grant_vc(int out_port, int vc, Cycles grant_time) {}$/;"	f	class:FlexibleConsumer
grant_vc	src/mem/ruby/network/garnet/flexible-pipeline/InVcState.cc	/^InVcState::grant_vc(int out_vc, Cycles grant_time)$/;"	f	class:InVcState
grant_vc	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.cc	/^NetworkInterface::grant_vc(int out_port, int vc, Cycles grant_time)$/;"	f	class:NetworkInterface
grant_vc	src/mem/ruby/network/garnet/flexible-pipeline/OutVcState.cc	/^OutVcState::grant_vc(Cycles grant_time)$/;"	f	class:OutVcState
grant_vc	src/mem/ruby/network/garnet/flexible-pipeline/Router.cc	/^Router::grant_vc(int out_port, int vc, Cycles grant_time)$/;"	f	class:Router
grant_vc_link	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.cc	/^NetworkLink::grant_vc_link(int vc, Cycles grant_time)$/;"	f	class:NetworkLink
granularity	src/arch/x86/regs/misc.hh	/^        Bitfield<6> granularity;$/;"	m	namespace:X86ISA
granularity	src/base/addr_range.hh	/^    uint64_t granularity() const$/;"	f	class:AddrRange
greater	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.hh	/^    greater(flit_d* n1, flit_d* n2)$/;"	f	class:flit_d
greater	src/mem/ruby/network/garnet/flexible-pipeline/flit.hh	/^    greater(flit* n1, flit* n2)$/;"	f	class:flit
green	src/base/vnc/convert.hh	/^        Bitfield<10,5> green;$/;"	m	class:VideoConvert
green	src/base/vnc/convert.hh	/^        Bitfield<15,8> green;$/;"	m	class:VideoConvert
green_select	src/dev/arm/hdlcd.hh	/^    ColorSelectReg green_select;    \/**< Green color select register *\/$/;"	m	class:HDLcd
greenmax	src/base/vnc/vncinput.hh	/^        uint16_t greenmax;$/;"	m	struct:VncInput::PixelFormat
greenshift	src/base/vnc/vncinput.hh	/^        uint8_t greenshift;$/;"	m	struct:VncInput::PixelFormat
group	src/python/m5/util/jobfile.py	/^    def group(self, name, desc, **kwargs):$/;"	m	class:Configuration
groups	src/python/m5/util/jobfile.py	/^    def groups(self):$/;"	m	class:Configuration
grow_convert	src/base/statistics.cc	/^HistStor::grow_convert()$/;"	f	class:Stats::HistStor
grow_out	src/base/statistics.cc	/^HistStor::grow_out()$/;"	f	class:Stats::HistStor
grow_up	src/base/statistics.cc	/^HistStor::grow_up()$/;"	f	class:Stats::HistStor
gs	src/arch/mips/mt_constants.hh	/^    Bitfield<28>     gs;$/;"	m	namespace:MipsISA
gsize	src/kern/tru64/tru64.hh	/^        size_t  gsize;          \/\/!< green zone size$/;"	m	struct:Tru64::vm_stack
gsr	src/arch/sparc/isa.hh	/^    uint64_t gsr;           \/\/ General Status Register$/;"	m	class:SparcISA::ISA
gt	src/arch/power/miscregs.hh	/^        Bitfield<30> gt;$/;"	m	namespace:PowerISA
gtobe	src/sim/byteswap.hh	/^    inline T gtobe(T value) {return letobe(value);}$/;"	f	namespace:LittleEndianGuest
gtobe	src/sim/byteswap.hh	/^    inline T gtobe(T value) {return value;}$/;"	f	namespace:BigEndianGuest
gtoh	src/sim/byteswap.hh	/^    inline T gtoh(T value) {return betoh(value);}$/;"	f	namespace:BigEndianGuest
gtoh	src/sim/byteswap.hh	/^    inline T gtoh(T value) {return letoh(value);}$/;"	f	namespace:LittleEndianGuest
gtole	src/sim/byteswap.hh	/^    inline T gtole(T value) {return betole(value);}$/;"	f	namespace:BigEndianGuest
gtole	src/sim/byteswap.hh	/^    inline T gtole(T value) {return value;}$/;"	f	namespace:LittleEndianGuest
gtty	src/kern/linux/linux_syscalls.hh	/^    gtty = 92,$/;"	e	enum:SystemCalls::__anon87
gzipStream	src/proto/protoio.hh	/^    google::protobuf::io::GzipInputStream* gzipStream;$/;"	m	class:ProtoInputStream
gzipStream	src/proto/protoio.hh	/^    google::protobuf::io::GzipOutputStream* gzipStream;$/;"	m	class:ProtoOutputStream
h	src/arch/mips/mt_constants.hh	/^    Bitfield<0> h;$/;"	m	namespace:MipsISA
h01	src/unittest/stattest.cc	/^    Histogram h01;$/;"	m	struct:StatTest	file:
h02	src/unittest/stattest.cc	/^    Histogram h02;$/;"	m	struct:StatTest	file:
h03	src/unittest/stattest.cc	/^    Histogram h03;$/;"	m	struct:StatTest	file:
h04	src/unittest/stattest.cc	/^    Histogram h04;$/;"	m	struct:StatTest	file:
h05	src/unittest/stattest.cc	/^    Histogram h05;$/;"	m	struct:StatTest	file:
h06	src/unittest/stattest.cc	/^    Histogram h06;$/;"	m	struct:StatTest	file:
h07	src/unittest/stattest.cc	/^    Histogram h07;$/;"	m	struct:StatTest	file:
h08	src/unittest/stattest.cc	/^    Histogram h08;$/;"	m	struct:StatTest	file:
h09	src/unittest/stattest.cc	/^    Histogram h09;$/;"	m	struct:StatTest	file:
h10	src/unittest/stattest.cc	/^    Histogram h10;$/;"	m	struct:StatTest	file:
h11	src/unittest/stattest.cc	/^    Histogram h11;$/;"	m	struct:StatTest	file:
h12	src/unittest/stattest.cc	/^    Histogram h12;$/;"	m	struct:StatTest	file:
hSTickCompare	src/arch/sparc/isa.hh	/^    HSTickCompareEvent *hSTickCompare;$/;"	m	class:SparcISA::ISA
h_back_porch	src/dev/arm/hdlcd.hh	/^    TimingReg h_back_porch;         \/**< Horizontal back porch width register *\/$/;"	m	class:HDLcd
h_data	src/dev/arm/hdlcd.hh	/^    TimingReg h_data;               \/**< Horizontal data width register *\/$/;"	m	class:HDLcd
h_front_porch	src/dev/arm/hdlcd.hh	/^    TimingReg h_front_porch;        \/**< Horizontal front porch width reg *\/$/;"	m	class:HDLcd
h_sync	src/dev/arm/hdlcd.hh	/^    TimingReg h_sync;               \/**< Horizontal sync width register *\/$/;"	m	class:HDLcd
hack	src/base/misc.hh	/^#define hack(/;"	d
hack_once	src/base/misc.hh	/^#define hack_once(/;"	d
hack_verbose	src/base/misc.cc	/^bool hack_verbose = false;$/;"	v
hadBadAddress	src/mem/packet.hh	/^    bool hadBadAddress() const { return cmd == MemCmd::BadAddressError; }$/;"	f	class:Packet
halt	src/arch/alpha/osfpal.hh	/^        halt = 0x00,$/;"	e	enum:PAL::__anon3
halt	src/arch/mips/dt_constants.hh	/^    Bitfield<26>     halt;$/;"	m	namespace:MipsISA
halt	src/cpu/checker/thread_context.hh	/^    void halt(Cycles delay) { actualTC->halt(delay); }$/;"	f	class:CheckerThreadContext
halt	src/cpu/inorder/cpu.hh	/^    void halt() { panic("Halt not implemented!\\n"); }$/;"	f	class:InOrderCPU
halt	src/cpu/inorder/thread_context.cc	/^InOrderThreadContext::halt(Cycles delay)$/;"	f	class:InOrderThreadContext
halt	src/cpu/o3/cpu.hh	/^    void halt() { panic("Halt not implemented!\\n"); }$/;"	f	class:FullO3CPU
halt	src/cpu/o3/thread_context_impl.hh	/^O3ThreadContext<Impl>::halt(Cycles delay)$/;"	f	class:O3ThreadContext
halt	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::OzoneTC::halt()$/;"	f	class:OzoneCPU::OzoneTC
halt	src/cpu/simple_thread.cc	/^SimpleThread::halt()$/;"	f	class:SimpleThread
halt	src/cpu/thread_context.hh	/^    void halt(Cycles delay = Cycles(0)) { actualTC->halt(); }$/;"	f	class:ProxyThreadContext
haltContext	src/cpu/base.hh	/^    virtual void haltContext(ThreadID thread_num) {}$/;"	f	class:BaseCPU
haltContext	src/cpu/inorder/cpu.cc	/^InOrderCPU::haltContext(ThreadID tid)$/;"	f	class:InOrderCPU
haltContext	src/cpu/kvm/base.cc	/^BaseKvmCPU::haltContext(ThreadID thread_num)$/;"	f	class:BaseKvmCPU
haltContext	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::haltContext(ThreadID tid)$/;"	f	class:FullO3CPU
haltContext	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::haltContext(int thread_num)$/;"	f	class:OzoneCPU
haltContext	src/cpu/simple/base.cc	/^BaseSimpleCPU::haltContext(ThreadID thread_num)$/;"	f	class:BaseSimpleCPU
haltThread	src/arch/mips/mt.hh	/^haltThread(TC *tc)$/;"	f	namespace:MipsISA
haltThread	src/cpu/inorder/cpu.cc	/^InOrderCPU::haltThread(ThreadID tid)$/;"	f	class:InOrderCPU
haltedThreads	src/cpu/inorder/cpu.hh	/^    std::list<ThreadID> haltedThreads;$/;"	m	class:InOrderCPU
handle	src/arch/x86/bios/smbios.hh	/^    uint16_t handle;$/;"	m	class:X86ISA::SMBios::SMBiosStructure
handleAsyncInsertions	src/sim/eventq.cc	/^EventQueue::handleAsyncInsertions()$/;"	f	class:EventQueue
handleEOI	src/dev/x86/i8259.cc	/^X86ISA::I8259::handleEOI(int line)$/;"	f	class:X86ISA::I8259
handleError	src/cpu/checker/cpu.hh	/^    void handleError()$/;"	f	class:CheckerCPU
handleError	src/cpu/checker/cpu.hh	/^    void handleError(DynInstPtr &inst)$/;"	f	class:Checker
handleEvent	src/dev/alpha/tsunami_io.hh	/^        void handleEvent()$/;"	f	class:TsunamiIO::RTC
handleEvent	src/dev/mc146818.hh	/^    virtual void handleEvent()$/;"	f	class:MC146818
handleEvent	src/dev/mips/malta_io.hh	/^        void handleEvent()$/;"	f	class:MaltaIO::RTC
handleEvent	src/dev/x86/cmos.cc	/^X86ISA::Cmos::X86RTC::handleEvent()$/;"	f	class:X86ISA::Cmos::X86RTC
handleFault	src/cpu/ozone/front_end_impl.hh	/^FrontEnd<Impl>::handleFault(Fault &fault)$/;"	f	class:FrontEnd
handleFault	src/cpu/ozone/inorder_back_end_impl.hh	/^InorderBackEnd<Impl>::handleFault()$/;"	f	class:InorderBackEnd
handleFault	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::handleFault(Fault &fault, Tick latency)$/;"	f	class:LWBackEnd
handleFill	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::handleFill(PacketPtr pkt, BlkType *blk,$/;"	f	class:Cache
handleFill	src/mem/cache/mshr.cc	/^MSHR::handleFill(Packet *pkt, CacheBlk *blk)$/;"	f	class:MSHR
handleGenericIprRead	src/arch/generic/mmapped_ipr.cc	/^GenericISA::handleGenericIprRead(ThreadContext *xc, Packet *pkt)$/;"	f	class:GenericISA
handleGenericIprWrite	src/arch/generic/mmapped_ipr.cc	/^GenericISA::handleGenericIprWrite(ThreadContext *xc, Packet *pkt)$/;"	f	class:GenericISA
handleIOMiscReg32	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::handleIOMiscReg32(int miscreg)$/;"	f	class:X86KvmCPU
handleInterrupt	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::handleInterrupt()$/;"	f	class:DefaultCommit
handleIprRead	src/arch/generic/mmapped_ipr.hh	/^    handleIprRead(ThreadContext *xc, Packet *pkt)$/;"	f	namespace:GenericISA
handleIprRead	src/arch/sparc/mmapped_ipr.hh	/^handleIprRead(ThreadContext *xc, Packet *pkt)$/;"	f	namespace:SparcISA
handleIprRead	src/arch/x86/mmapped_ipr.hh	/^    handleIprRead(ThreadContext *xc, Packet *pkt)$/;"	f	namespace:X86ISA
handleIprWrite	src/arch/generic/mmapped_ipr.hh	/^    handleIprWrite(ThreadContext *xc, Packet *pkt)$/;"	f	namespace:GenericISA
handleIprWrite	src/arch/sparc/mmapped_ipr.hh	/^handleIprWrite(ThreadContext *xc, Packet *pkt)$/;"	f	namespace:SparcISA
handleIprWrite	src/arch/x86/mmapped_ipr.hh	/^    handleIprWrite(ThreadContext *xc, Packet *pkt)$/;"	f	namespace:X86ISA
handleKvmExit	src/cpu/kvm/base.cc	/^BaseKvmCPU::handleKvmExit()$/;"	f	class:BaseKvmCPU
handleKvmExitException	src/cpu/kvm/base.cc	/^BaseKvmCPU::handleKvmExitException()$/;"	f	class:BaseKvmCPU
handleKvmExitFailEntry	src/cpu/kvm/base.cc	/^BaseKvmCPU::handleKvmExitFailEntry()$/;"	f	class:BaseKvmCPU
handleKvmExitHypercall	src/cpu/kvm/base.cc	/^BaseKvmCPU::handleKvmExitHypercall()$/;"	f	class:BaseKvmCPU
handleKvmExitIO	src/cpu/kvm/base.cc	/^BaseKvmCPU::handleKvmExitIO()$/;"	f	class:BaseKvmCPU
handleKvmExitIO	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::handleKvmExitIO()$/;"	f	class:X86KvmCPU
handleKvmExitIRQWindowOpen	src/cpu/kvm/base.cc	/^BaseKvmCPU::handleKvmExitIRQWindowOpen()$/;"	f	class:BaseKvmCPU
handleKvmExitIRQWindowOpen	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::handleKvmExitIRQWindowOpen()$/;"	f	class:X86KvmCPU
handleKvmExitUnknown	src/cpu/kvm/base.cc	/^BaseKvmCPU::handleKvmExitUnknown()$/;"	f	class:BaseKvmCPU
handleLlsc	src/mem/ruby/system/Sequencer.cc	/^Sequencer::handleLlsc(const Address& address, SequencerRequest* request)$/;"	f	class:Sequencer
handleLockedRead	src/arch/alpha/locked_mem.hh	/^handleLockedRead(XC *xc, Request *req)$/;"	f	namespace:AlphaISA
handleLockedRead	src/arch/arm/locked_mem.hh	/^handleLockedRead(XC *xc, Request *req)$/;"	f	namespace:ArmISA
handleLockedRead	src/arch/mips/locked_mem.hh	/^handleLockedRead(XC *xc, Request *req)$/;"	f	namespace:MipsISA
handleLockedRead	src/arch/power/locked_mem.hh	/^handleLockedRead(XC *xc, Request *req)$/;"	f	namespace:PowerISA
handleLockedRead	src/arch/sparc/locked_mem.hh	/^handleLockedRead(XC *xc, Request *req)$/;"	f	namespace:SparcISA
handleLockedRead	src/arch/x86/locked_mem.hh	/^    handleLockedRead(XC *xc, Request *req)$/;"	f	namespace:X86ISA
handleLockedSnoop	src/arch/alpha/locked_mem.hh	/^handleLockedSnoop(XC *xc, PacketPtr pkt, Addr cacheBlockMask)$/;"	f	namespace:AlphaISA
handleLockedSnoop	src/arch/arm/locked_mem.hh	/^handleLockedSnoop(XC *xc, PacketPtr pkt, Addr cacheBlockMask)$/;"	f	namespace:ArmISA
handleLockedSnoop	src/arch/mips/locked_mem.hh	/^handleLockedSnoop(XC *xc, PacketPtr pkt, Addr cacheBlockMask)$/;"	f	namespace:MipsISA
handleLockedSnoop	src/arch/power/locked_mem.hh	/^handleLockedSnoop(XC *xc, PacketPtr pkt, Addr cacheBlockMask)$/;"	f	namespace:PowerISA
handleLockedSnoop	src/arch/sparc/locked_mem.hh	/^handleLockedSnoop(XC *xc, PacketPtr pkt, Addr cacheBlockMask)$/;"	f	namespace:SparcISA
handleLockedSnoop	src/arch/x86/locked_mem.hh	/^    handleLockedSnoop(XC *xc, PacketPtr pkt, Addr cacheBlockMask)$/;"	f	namespace:X86ISA
handleLockedSnoopHit	src/arch/alpha/locked_mem.hh	/^handleLockedSnoopHit(XC *xc)$/;"	f	namespace:AlphaISA
handleLockedSnoopHit	src/arch/arm/locked_mem.hh	/^handleLockedSnoopHit(XC *xc)$/;"	f	namespace:ArmISA
handleLockedSnoopHit	src/arch/mips/locked_mem.hh	/^handleLockedSnoopHit(XC *xc)$/;"	f	namespace:MipsISA
handleLockedSnoopHit	src/arch/power/locked_mem.hh	/^handleLockedSnoopHit(XC *xc)$/;"	f	namespace:PowerISA
handleLockedSnoopHit	src/arch/sparc/locked_mem.hh	/^handleLockedSnoopHit(XC *xc)$/;"	f	namespace:SparcISA
handleLockedSnoopHit	src/arch/x86/locked_mem.hh	/^    handleLockedSnoopHit(XC *xc)$/;"	f	namespace:X86ISA
handleLockedWrite	src/arch/alpha/locked_mem.hh	/^handleLockedWrite(XC *xc, Request *req, Addr cacheBlockMask)$/;"	f	namespace:AlphaISA
handleLockedWrite	src/arch/arm/locked_mem.hh	/^handleLockedWrite(XC *xc, Request *req, Addr cacheBlockMask)$/;"	f	namespace:ArmISA
handleLockedWrite	src/arch/mips/locked_mem.hh	/^handleLockedWrite(XC *xc, Request *req, Addr cacheBlockMask)$/;"	f	namespace:MipsISA
handleLockedWrite	src/arch/power/locked_mem.hh	/^handleLockedWrite(XC *xc, Request *req, Addr cacheBlockMask)$/;"	f	namespace:PowerISA
handleLockedWrite	src/arch/sparc/locked_mem.hh	/^handleLockedWrite(XC *xc, Request *req, Addr cacheBlockMask)$/;"	f	namespace:SparcISA
handleLockedWrite	src/arch/x86/locked_mem.hh	/^    handleLockedWrite(XC *xc, Request *req, Addr cacheBlockMask)$/;"	f	namespace:X86ISA
handlePendingInt	src/cpu/checker/cpu_impl.hh	/^Checker<Impl>::handlePendingInt()$/;"	f	class:Checker
handlePseudoInst	src/arch/generic/mmapped_ipr.cc	/^handlePseudoInst(ThreadContext *xc, Packet *pkt)$/;"	f	file:
handleReadPacket	src/cpu/simple/timing.cc	/^TimingSimpleCPU::handleReadPacket(PacketPtr pkt)$/;"	f	class:TimingSimpleCPU
handleResp	src/dev/dma_device.cc	/^DmaPort::handleResp(PacketPtr pkt, Tick delay)$/;"	f	class:DmaPort
handleSnoop	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::handleSnoop(PacketPtr pkt, BlkType *blk,$/;"	f	class:Cache
handleSnoop	src/mem/cache/mshr.cc	/^MSHR::handleSnoop(PacketPtr pkt, Counter _order)$/;"	f	class:MSHR
handleTrap	src/arch/sparc/linux/process.cc	/^void Sparc32LinuxProcess::handleTrap(int trapNum, ThreadContext *tc)$/;"	f	class:Sparc32LinuxProcess
handleTrap	src/arch/sparc/linux/process.cc	/^void Sparc64LinuxProcess::handleTrap(int trapNum, ThreadContext *tc)$/;"	f	class:Sparc64LinuxProcess
handleTrap	src/arch/sparc/process.cc	/^SparcLiveProcess::handleTrap(int trapNum, ThreadContext *tc)$/;"	f	class:SparcLiveProcess
handleWritePacket	src/cpu/simple/timing.cc	/^TimingSimpleCPU::handleWritePacket()$/;"	f	class:TimingSimpleCPU
handle_alarm	src/unittest/cprintftime.cc	/^handle_alarm(int signal)$/;"	f
handle_kwarg	src/python/m5/params.py	/^        def handle_kwarg(self, kwargs, key, elseVal = None):$/;"	f	function:IpNetmask.__init__
handle_kwarg	src/python/m5/params.py	/^        def handle_kwarg(self, kwargs, key, elseVal = None):$/;"	f	function:IpWithPort.__init__
handle_kwargs	src/python/m5/params.py	/^        def handle_kwargs(self, kwargs):$/;"	f	function:AddrRange.__init__
handle_statement	src/arch/micro_asm.py	/^def handle_statement(parser, container, statement):$/;"	f
hap	src/arch/arm/pagetable.hh	/^    uint8_t hap;            \/\/ Hyp access permissions bits$/;"	m	struct:ArmISA::TlbEntry
hardBreakMap	src/base/remote_gdb.hh	/^    break_map_t hardBreakMap;$/;"	m	class:BaseRemoteGDB
hardware_address	src/dev/Ethernet.py	/^    hardware_address = Param.EthernetAddr(NextEthernetAddr,$/;"	v	class:EtherDevBase
hardware_address	src/dev/Ethernet.py	/^    hardware_address = Param.EthernetAddr(NextEthernetAddr,$/;"	v	class:IGbE
hasBranchTarget	src/cpu/static_inst.cc	/^StaticInst::hasBranchTarget(const TheISA::PCState &pc, ThreadContext *tc,$/;"	f	class:StaticInst
hasContextId	src/mem/request.hh	/^    hasContextId() const$/;"	f	class:Request
hasData	src/dev/x86/i8042.hh	/^    bool hasData()$/;"	f	class:X86ISA::PS2Device
hasData	src/mem/packet.hh	/^    bool hasData() const        { return cmd.hasData(); }$/;"	f	class:Packet
hasData	src/mem/packet.hh	/^    bool hasData() const        { return testCmdAttrib(HasData); }$/;"	f	class:MemCmd
hasFreeCCRegs	src/cpu/o3/free_list.hh	/^    bool hasFreeCCRegs() const { return ccList.hasFreeRegs(); }$/;"	f	class:UnifiedFreeList
hasFreeFloatRegs	src/cpu/o3/free_list.hh	/^    bool hasFreeFloatRegs() const { return floatList.hasFreeRegs(); }$/;"	f	class:UnifiedFreeList
hasFreeIntRegs	src/cpu/o3/free_list.hh	/^    bool hasFreeIntRegs() const { return intList.hasFreeRegs(); }$/;"	f	class:UnifiedFreeList
hasFreeRegs	src/cpu/o3/free_list.hh	/^    bool hasFreeRegs() const { return !freeRegs.empty(); }$/;"	f	class:SimpleFreeList
hasKernelIRQChip	src/cpu/kvm/vm.hh	/^    bool hasKernelIRQChip() const { return _hasKernelIRQChip; }$/;"	f	class:KvmVM
hasOutstandingEvents	src/dev/i8254xGBe.cc	/^IGbE::RxDescCache::hasOutstandingEvents()$/;"	f	class:IGbE::RxDescCache
hasOutstandingEvents	src/dev/i8254xGBe.cc	/^IGbE::TxDescCache::hasOutstandingEvents()$/;"	f	class:IGbE::TxDescCache
hasOutstandingEvents	src/dev/i8254xGBe.hh	/^        virtual bool hasOutstandingEvents() {$/;"	f	class:IGbE::DescCache
hasPC	src/mem/request.hh	/^    hasPC() const$/;"	f	class:Request
hasPaddr	src/mem/request.hh	/^    hasPaddr()$/;"	f	class:Request
hasPendingPkt	src/cpu/o3/lsq_unit.hh	/^    bool hasPendingPkt;$/;"	m	class:LSQUnit
hasPendingUnmaskable	src/arch/x86/interrupts.hh	/^    bool hasPendingUnmaskable() const { return pendingUnmaskableInt; }$/;"	f	class:X86ISA::Interrupts
hasPostDowngrade	src/mem/cache/mshr.hh	/^    bool hasPostDowngrade() const {$/;"	f	class:MSHR
hasPostInvalidate	src/mem/cache/mshr.hh	/^    bool hasPostInvalidate() const {$/;"	f	class:MSHR
hasReadPred	src/arch/isa_parser.py	/^    def hasReadPred(self):$/;"	m	class:Operand
hasReadyInsts	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::hasReadyInsts()$/;"	f	class:InstructionQueue
hasReadyInsts	src/cpu/ozone/inst_queue_impl.hh	/^InstQueue<Impl>::hasReadyInsts()$/;"	f	class:InstQueue
hasRequest	src/cpu/base_dyn_inst.hh	/^    bool hasRequest() { return instFlags[ReqMade]; }$/;"	f	class:BaseDynInst
hasSize	src/mem/request.hh	/^    hasSize()$/;"	f	class:Request
hasSlot	src/cpu/inorder/resource.hh	/^    bool hasSlot()  { return slotNum >= 0; }     $/;"	f	class:ResourceRequest
hasSlot	src/cpu/inorder/resources/cache_unit.hh	/^    bool hasSlot;$/;"	m	class:CacheReqPacket
hasStoresToWB	src/cpu/o3/iew.hh	/^    bool hasStoresToWB() { return ldstQueue.hasStoresToWB(); }$/;"	f	class:DefaultIEW
hasStoresToWB	src/cpu/o3/iew.hh	/^    bool hasStoresToWB(ThreadID tid) { return ldstQueue.hasStoresToWB(tid); }$/;"	f	class:DefaultIEW
hasStoresToWB	src/cpu/o3/lsq.hh	/^    bool hasStoresToWB(ThreadID tid)$/;"	f	class:LSQ
hasStoresToWB	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::hasStoresToWB()$/;"	f	class:LSQ
hasStoresToWB	src/cpu/o3/lsq_unit.hh	/^    bool hasStoresToWB() { return storesToWB; }$/;"	f	class:LSQUnit
hasStoresToWB	src/cpu/ozone/lsq_unit.hh	/^    bool hasStoresToWB() { return storesToWB; }$/;"	f	class:OzoneLSQ
hasStoresToWB	src/cpu/ozone/lw_lsq.hh	/^    bool hasStoresToWB() { return storesToWB; }$/;"	f	class:OzoneLWLSQ
hasTLS	src/base/loader/elf_object.hh	/^    virtual bool hasTLS() { return sectionExists(".tbss"); }$/;"	f	class:ElfObject
hasTLS	src/base/loader/object_file.hh	/^    virtual bool hasTLS() { return false; }$/;"	f	class:ObjectFile
hasTargets	src/mem/cache/mshr.hh	/^    bool hasTargets() const { return !targets.empty(); }$/;"	f	class:MSHR
hasUpgrade	src/mem/cache/mshr.hh	/^        bool hasUpgrade;$/;"	m	class:MSHR::TargetList
hasWritePred	src/arch/isa_parser.py	/^    def hasWritePred(self):$/;"	m	class:Operand
has_credits	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.hh	/^    has_credits(int vc)$/;"	f	class:InputUnit_d
has_credits	src/mem/ruby/network/garnet/fixed-pipeline/OutVcState_d.hh	/^    inline bool has_credits()       { return (m_credit_count > 0); }$/;"	f	class:OutVcState_d
has_credits	src/mem/ruby/network/garnet/fixed-pipeline/VirtualChannel_d.hh	/^    inline bool has_credits()               { return (m_credit_count > 0); }$/;"	f	class:VirtualChannel_d
has_key	src/python/m5/util/multidict.py	/^    def has_key(self, key):$/;"	m	class:multidict
has_parent	src/python/m5/SimObject.py	/^    def has_parent(self):$/;"	f
has_parent	src/python/m5/params.py	/^    def has_parent(self):$/;"	m	class:SimObjectVector
hash	src/arch/arm/types.hh	/^    struct hash<ArmISA::ExtMachInst> : public hash<uint32_t> {$/;"	s
hash	src/arch/power/types.hh	/^struct hash<PowerISA::ExtMachInst> : public hash<uint32_t> {$/;"	s
hash	src/arch/x86/types.hh	/^    struct hash<X86ISA::ExtMachInst> {$/;"	s
hash	src/cpu/simple/atomic.hh	/^struct hash<BasicBlockRange>$/;"	s
hash	src/mem/ruby/common/Address.hh	/^template <> struct hash<Address>$/;"	s
hashLookup	src/mem/cache/tags/fa_lru.cc	/^FALRU::hashLookup(Addr addr) const$/;"	f	class:FALRU
hash_H3	src/mem/ruby/filters/H3BloomFilter.cc	/^H3BloomFilter::hash_H3(uint64 value, int index)$/;"	f	class:H3BloomFilter
hash_bitsel	src/mem/ruby/filters/MultiBitSelBloomFilter.cc	/^MultiBitSelBloomFilter::hash_bitsel(uint64 value, int index, int jump,$/;"	f	class:MultiBitSelBloomFilter
hash_map	src/base/hashmap.hh	/^#define hash_map /;"	d
hash_multimap	src/base/hashmap.hh	/^#define hash_multimap /;"	d
hash_multiset	src/base/hashmap.hh	/^#define hash_multiset /;"	d
hash_set	src/base/hashmap.hh	/^#define hash_set /;"	d
hash_t	src/mem/cache/tags/fa_lru.hh	/^    typedef m5::hash_map<Addr, FALRUBlk *, m5::hash<Addr> > hash_t;$/;"	t	class:FALRU
haveDebugRegs	src/cpu/kvm/x86_cpu.hh	/^    bool haveDebugRegs;$/;"	m	class:X86KvmCPU
haveGenericTimer	src/arch/arm/system.hh	/^    bool haveGenericTimer() const { return _haveGenericTimer; }$/;"	f	class:ArmSystem
haveLPAE	src/arch/arm/isa.hh	/^        bool haveLPAE;$/;"	m	class:ArmISA::ISA
haveLPAE	src/arch/arm/system.cc	/^ArmSystem::haveLPAE(ThreadContext *tc)$/;"	f	class:ArmSystem
haveLPAE	src/arch/arm/system.hh	/^    bool haveLPAE() const { return _haveLPAE; }$/;"	f	class:ArmSystem
haveLPAE	src/arch/arm/table_walker.hh	/^    bool haveLPAE() const { return _haveLPAE; }$/;"	f	class:ArmISA::TableWalker
haveLPAE	src/arch/arm/tlb.hh	/^    bool haveLPAE;$/;"	m	class:ArmISA::TLB
haveLargeAsid64	src/arch/arm/isa.hh	/^        bool haveLargeAsid64;$/;"	m	class:ArmISA::ISA
haveLargeAsid64	src/arch/arm/system.cc	/^ArmSystem::haveLargeAsid64(ThreadContext *tc)$/;"	f	class:ArmSystem
haveLargeAsid64	src/arch/arm/system.hh	/^    bool haveLargeAsid64() const { return _haveLargeAsid64; }$/;"	f	class:ArmSystem
haveLargeAsid64	src/arch/arm/table_walker.hh	/^    bool haveLargeAsid64() const { return _haveLargeAsid64; }$/;"	f	class:ArmISA::TableWalker
haveLargeAsid64	src/arch/arm/tlb.hh	/^    bool haveLargeAsid64;$/;"	m	class:ArmISA::TLB
havePending	src/mem/cache/mshr_queue.hh	/^    bool havePending() const$/;"	f	class:MSHRQueue
havePending	src/mem/cache/prefetch/base.hh	/^    bool havePending()$/;"	f	class:BasePrefetcher
haveSecurity	src/arch/arm/isa.hh	/^        bool haveSecurity;$/;"	m	class:ArmISA::ISA
haveSecurity	src/arch/arm/system.cc	/^ArmSystem::haveSecurity(ThreadContext *tc)$/;"	f	class:ArmSystem
haveSecurity	src/arch/arm/system.hh	/^    bool haveSecurity() const { return _haveSecurity; }$/;"	f	class:ArmSystem
haveSecurity	src/arch/arm/table_walker.hh	/^    bool haveSecurity;$/;"	m	class:ArmISA::TableWalker
haveVirtualization	src/arch/arm/isa.hh	/^        bool haveVirtualization;$/;"	m	class:ArmISA::ISA
haveVirtualization	src/arch/arm/system.cc	/^ArmSystem::haveVirtualization(ThreadContext *tc)$/;"	f	class:ArmSystem
haveVirtualization	src/arch/arm/system.hh	/^    bool haveVirtualization() const { return _haveVirtualization; }$/;"	f	class:ArmSystem
haveVirtualization	src/arch/arm/table_walker.hh	/^    bool haveVirtualization() const { return _haveVirtualization; }$/;"	f	class:ArmISA::TableWalker
haveVirtualization	src/arch/arm/tlb.hh	/^    bool haveVirtualization;$/;"	m	class:ArmISA::TLB
haveXCRs	src/cpu/kvm/x86_cpu.hh	/^    bool haveXCRs;$/;"	m	class:X86KvmCPU
haveXSave	src/cpu/kvm/x86_cpu.hh	/^    bool haveXSave;$/;"	m	class:X86KvmCPU
have_generic_timer	src/arch/arm/ArmSystem.py	/^    have_generic_timer = Param.Bool(False,$/;"	v	class:ArmSystem
have_large_asid_64	src/arch/arm/ArmSystem.py	/^    have_large_asid_64 = Param.Bool(False,$/;"	v	class:ArmSystem
have_lpae	src/arch/arm/ArmSystem.py	/^    have_lpae = Param.Bool(False, "True if LPAE is implemented")$/;"	v	class:ArmSystem
have_security	src/arch/arm/ArmSystem.py	/^    have_security = Param.Bool(False,$/;"	v	class:ArmSystem
have_virtualization	src/arch/arm/ArmSystem.py	/^    have_virtualization = Param.Bool(False,$/;"	v	class:ArmSystem
hawd	src/dev/pcireg.h	/^        Bitfield<9>     hawd;$/;"	m	struct:PXCAP
hbp	src/dev/arm/pl111.hh	/^        Bitfield<31,24> hbp;$/;"	m	class:Pl111
hcd	src/arch/arm/miscregs.hh	/^        Bitfield<29>     hcd;   \/\/ AArch64$/;"	m	namespace:ArmISA
hce	src/arch/arm/miscregs.hh	/^        Bitfield<8> hce;$/;"	m	namespace:ArmISA
hcr	src/arch/arm/table_walker.hh	/^        HCR  hcr;$/;"	m	class:ArmISA::TableWalker::WalkerState
hcr	src/arch/arm/tlb.hh	/^    HCR hcr;$/;"	m	class:ArmISA::TLB
hcr	src/dev/arm/vgic.hh	/^        HCR hcr;$/;"	m	struct:VGic::vcpuIntData
hdlcd	src/dev/arm/RealView.py	/^    hdlcd  = HDLcd(pio_addr=0x2b000000, int_num=117)$/;"	v	class:VExpress_EMM
hdr	src/dev/i8254xGBe_defs.hh	/^            Addr hdr;$/;"	m	struct:iGbReg::RxDesc::__anon70::__anon72
hdrLen	src/dev/i8254xGBe_defs.hh	/^        unsigned hdrLen() { return hdrlen() << 6; }$/;"	f	struct:iGbReg::Regs::SRRCTL
hdrNil	src/base/loader/coff_sym.h	/^#define hdrNil /;"	d
hdrlen	src/dev/i8254xGBe_defs.hh	/^inline int hdrlen(TxDesc *d) {$/;"	f	namespace:iGbReg::TxdOp
head	src/base/trie.hh	/^    Node head;$/;"	m	class:Trie
head	src/cpu/o3/rob.hh	/^    InstIt head;$/;"	m	class:ROB
head	src/dev/ide_disk.hh	/^        uint8_t head;$/;"	m	union:CommandReg::__anon76
head	src/mem/cache/tags/fa_lru.hh	/^    FALRUBlk *head;$/;"	m	class:FALRU
head	src/sim/eventq.hh	/^    Event *head;$/;"	m	class:EventQueue
headerBuffer	src/base/bitmap.hh	/^    mutable char *headerBuffer;$/;"	m	class:Bitmap
headerComplete	src/dev/i8254xGBe.cc	/^IGbE::TxDescCache::headerComplete()$/;"	f	class:IGbE::TxDescCache
headerCycles	src/mem/bus.hh	/^    const Cycles headerCycles;$/;"	m	class:BaseBus
headerEvent	src/dev/i8254xGBe.hh	/^        EventWrapper<TxDescCache, &TxDescCache::headerComplete> headerEvent;$/;"	m	class:IGbE::TxDescCache
headerType	src/dev/pcireg.h	/^        uint8_t headerType;$/;"	m	struct:PCIConfig::__anon80
header_cycles	src/mem/Bus.py	/^    header_cycles = Param.Cycles(1, "cycles of overhead per transaction")$/;"	v	class:BaseBus
header_len	src/dev/i8254xGBe_defs.hh	/^            uint16_t header_len:10;$/;"	m	struct:iGbReg::RxDesc::__anon70::__anon73
height	src/base/bitmap.hh	/^    uint16_t height;$/;"	m	class:Bitmap
height	src/base/vnc/convert.hh	/^    int height;$/;"	m	class:VideoConvert
height	src/base/vnc/vncinput.hh	/^        uint16_t height;$/;"	m	struct:VncInput::FrameBufferUpdateReq
height	src/base/vnc/vncserver.hh	/^        uint16_t height;$/;"	m	struct:VncServer::FrameBufferRect
height	src/dev/arm/hdlcd.hh	/^    inline size_t height() const {$/;"	f	class:HDLcd
height	src/dev/arm/pl111.hh	/^    uint16_t height;$/;"	m	class:Pl111
help	src/python/m5/debug.py	/^def help():$/;"	f
hex	src/base/cprintf_formats.hh	/^    enum { dec, hex, oct } base;$/;"	e	enum:cp::Format::__anon37
hex2Int	src/base/intmath.hh	/^hex2Int(char c)$/;"	f
hex2i	src/base/remote_gdb.cc	/^BaseRemoteGDB::hex2i(const char **srcp)$/;"	f	class:BaseRemoteGDB
hex2mem	src/base/remote_gdb.cc	/^BaseRemoteGDB::hex2mem(void *vdst, const char *src, int maxlen)$/;"	f	class:BaseRemoteGDB
hexFile	src/arch/mips/system.hh	/^    HexFile *hexFile;$/;"	m	class:MipsSystem
hex_file_name	src/arch/mips/MipsSystem.py	/^    hex_file_name = Param.String("test.hex","hex file that contains [address,data] pairs")$/;"	v	class:MipsSystem
hex_file_name	src/arch/mips/MipsSystem.py	/^    hex_file_name = Param.String('test.hex',"hex file that contains [address,data] pairs")$/;"	v	class:BareIronMipsSystem
hfp	src/dev/arm/pl111.hh	/^        Bitfield<23,16> hfp;$/;"	m	class:Pl111
hi	src/arch/arm/insts/neon64_mem.hh	/^    XReg hi;$/;"	m	struct:ArmISA::VReg
highAddr	src/mem/cache/blk.hh	/^        Addr highAddr;     \/\/ high address of lock range$/;"	m	class:CacheBlk::Lock
highBit	src/mem/ruby/system/SparseMemory.hh	/^    int highBit;$/;"	m	struct:CurNextInfo
highFromDouble	src/arch/arm/insts/vfp.hh	/^highFromDouble(double val)$/;"	f	namespace:ArmISA
highestEL	src/arch/arm/system.cc	/^ArmSystem::highestEL(ThreadContext *tc)$/;"	f	class:ArmSystem
highestEL	src/arch/arm/system.hh	/^    ExceptionLevel highestEL() const$/;"	f	class:ArmSystem
highestELIs64	src/arch/arm/system.cc	/^ArmSystem::highestELIs64(ThreadContext *tc)$/;"	f	class:ArmSystem
highestELIs64	src/arch/arm/system.hh	/^    bool highestELIs64() const { return _highestELIs64; }$/;"	f	class:ArmSystem
highest_el_is_64	src/arch/arm/ArmSystem.py	/^    highest_el_is_64 = Param.Bool(False,$/;"	v	class:ArmSystem
hintp	src/arch/sparc/isa.hh	/^    uint64_t hintp;$/;"	m	class:SparcISA::ISA
historyBuffer	src/cpu/o3/rename.hh	/^    std::list<RenameHistory> historyBuffer[Impl::MaxThreads];$/;"	m	class:DefaultRename
historyRegisterMask	src/cpu/pred/tournament.hh	/^    unsigned historyRegisterMask;$/;"	m	class:TournamentBP
hitCallback	src/cpu/testers/directedtest/RubyDirectedTester.cc	/^RubyDirectedTester::hitCallback(NodeID proc, Addr addr)$/;"	f	class:RubyDirectedTester
hitCallback	src/cpu/testers/rubytest/RubyTester.cc	/^RubyTester::hitCallback(NodeID proc, SubBlock* data)$/;"	f	class:RubyTester
hitCallback	src/mem/ruby/system/RubyPort.cc	/^RubyPort::MemSlavePort::hitCallback(PacketPtr pkt)$/;"	f	class:RubyPort::MemSlavePort
hitCallback	src/mem/ruby/system/Sequencer.cc	/^Sequencer::hitCallback(SequencerRequest* srequest, DataBlock& data,$/;"	f	class:Sequencer
hitExternalSnoop	src/cpu/base_dyn_inst.hh	/^    bool hitExternalSnoop() const { return instFlags[HitExternalSnoop]; }$/;"	f	class:BaseDynInst
hitExternalSnoop	src/cpu/base_dyn_inst.hh	/^    void hitExternalSnoop(bool f) { instFlags[HitExternalSnoop] = f; }$/;"	f	class:BaseDynInst
hitLatency	src/mem/cache/base.hh	/^    const Cycles hitLatency;$/;"	m	class:BaseCache
hitLatency	src/mem/cache/tags/base.hh	/^    const Cycles hitLatency;$/;"	m	class:BaseTags
hit_latency	src/mem/cache/BaseCache.py	/^    hit_latency = Param.Cycles("The hit latency for this cache")$/;"	v	class:BaseCache
hit_latency	src/mem/cache/tags/Tags.py	/^    hit_latency = Param.Cycles(Parent.hit_latency,$/;"	v	class:BaseTags
hits	src/arch/arm/tlb.hh	/^    Stats::Formula hits;$/;"	m	class:ArmISA::TLB
hits	src/arch/mips/tlb.hh	/^    Stats::Formula hits;$/;"	m	class:MipsISA::TLB
hits	src/arch/power/tlb.hh	/^    Stats::Formula hits;$/;"	m	class:PowerISA::TLB
hits	src/mem/cache/base.hh	/^    Stats::Vector hits[MemCmd::NUM_MEM_CMDS];$/;"	m	class:BaseCache
hits	src/mem/cache/tags/fa_lru.hh	/^    Stats::Vector hits;$/;"	m	class:FALRU
hlen	src/base/inet.hh	/^    uint16_t hlen() const { return IP6_HDR_LEN; }$/;"	f	struct:Net::Ip6Hdr
hlen	src/base/inet.hh	/^    uint8_t  hlen() const { return ip_hl * 4; }$/;"	f	struct:Net::IpHdr
hlim	src/base/inet.hh	/^    uint8_t hlim() const { return ip6_hlim; }$/;"	f	struct:Net::Ip6Hdr
homedir	src/python/m5/config.py	/^    homedir = os.environ.get('HOME')$/;"	v
hostCycles	src/cpu/kvm/timer.hh	/^    uint64_t hostCycles(Tick ticks) {$/;"	f	class:BaseKvmTimer
hostFactor	src/cpu/kvm/BaseKvmCPU.py	/^    hostFactor = Param.Float(1.0, "Cycle scale factor")$/;"	v
hostFactor	src/cpu/kvm/base.hh	/^    float hostFactor;$/;"	m	class:BaseKvmCPU
hostFactor	src/cpu/kvm/timer.hh	/^    float hostFactor;$/;"	m	class:BaseKvmTimer
hostFlag	src/kern/operatingsystem.hh	/^    int hostFlag;       \/\/!< Corresponding host system flag value.$/;"	m	struct:OpenFlagTransTable
hostFreq	src/cpu/kvm/BaseKvmCPU.py	/^    hostFreq = Param.Clock("2GHz", "Host clock frequency")$/;"	v
hostFreq	src/cpu/kvm/timer.hh	/^    Tick hostFreq;$/;"	m	class:BaseKvmTimer
hostInstRate	src/sim/stat_control.cc	/^    Stats::Formula hostInstRate;$/;"	m	struct:Stats::Global	file:
hostMemory	src/sim/stat_control.cc	/^    Stats::Value hostMemory;$/;"	m	struct:Stats::Global	file:
hostNs	src/cpu/kvm/timer.hh	/^    uint64_t hostNs(Tick ticks) {$/;"	f	class:BaseKvmTimer
hostOpRate	src/sim/stat_control.cc	/^    Stats::Formula hostOpRate;$/;"	m	struct:Stats::Global	file:
hostSeconds	src/sim/stat_control.cc	/^    Stats::Value hostSeconds;$/;"	m	struct:Stats::Global	file:
hostTickRate	src/sim/stat_control.cc	/^    Stats::Formula hostTickRate;$/;"	m	struct:Stats::Global	file:
host_priv_self	src/kern/tru64/tru64_syscalls.hh	/^        host_priv_self = 56,$/;"	e	enum:SystemCalls::__anon103
host_self	src/kern/tru64/tru64_syscalls.hh	/^        host_self = 55,$/;"	e	enum:SystemCalls::__anon103
hostname	src/arch/mips/linux/process.hh	/^    static const char *hostname;$/;"	m	class:MipsLinuxProcess
hostname	src/arch/sparc/solaris/process.hh	/^    static const char *hostname;$/;"	m	class:SparcISA::SparcSolarisProcess
hostname	src/base/hostinfo.cc	/^hostname()$/;"	f
hostname	src/kern/tru64/tru64.hh	/^    static const char *hostname;$/;"	m	class:Tru64
hostname	src/sim/syscall_emul.cc	/^const char *hostname = "m5.eecs.umich.edu";$/;"	v
hot_lines	src/mem/ruby/system/RubySystem.py	/^    hot_lines = Param.Bool(False, "")$/;"	v	class:RubySystem
hour	src/dev/mc146818.hh	/^            uint8_t hour;$/;"	m	struct:MC146818::__anon78::__anon79
hour_alrm	src/dev/mc146818.hh	/^            uint8_t hour_alrm;$/;"	m	struct:MC146818::__anon78::__anon79
hpme	src/arch/arm/miscregs.hh	/^        Bitfield<7>    hpme;$/;"	m	namespace:ArmISA
hpmn	src/arch/arm/miscregs.hh	/^        Bitfield<4, 0> hpmn;$/;"	m	namespace:ArmISA
hpriv	src/arch/sparc/miscregs.hh	/^    Bitfield<2> hpriv;$/;"	m	namespace:SparcISA
hpstate	src/arch/sparc/isa.hh	/^    HPSTATE hpstate;       \/\/ Hyperprivileged State Register$/;"	m	class:SparcISA::ISA
hpstate	src/cpu/m5legion_interface.h	/^    uint64_t hpstate;$/;"	m	struct:__anon55
hsplit	src/base/inet.cc	/^hsplit(const EthPacketPtr &ptr)$/;"	f	namespace:Net
hss	src/arch/mips/pra_constants.hh	/^    Bitfield<29, 26> hss;$/;"	m	namespace:MipsISA
hst_stat	src/sim/syscall_emul.hh	/^    typedef struct stat hst_stat;$/;"	t	typeref:struct:stat
hst_stat64	src/sim/syscall_emul.hh	/^    typedef struct stat hst_stat64;$/;"	t	typeref:struct:stat
hst_stat64	src/sim/syscall_emul.hh	/^    typedef struct stat64 hst_stat64;$/;"	t	typeref:struct:stat64
hstick_cmpr	src/arch/sparc/isa.hh	/^    uint64_t hstick_cmpr;   \/\/ Hardware tick compare registers$/;"	m	class:SparcISA::ISA
hsw	src/dev/arm/pl111.hh	/^        Bitfield<15,8> hsw;$/;"	m	class:Pl111
hsync_polarity	src/dev/arm/hdlcd.hh	/^        Bitfield<1>    hsync_polarity;$/;"	m	class:HDLcd
htba	src/arch/sparc/isa.hh	/^    uint64_t htba;          \/\/ Hyperprivileged Trap Base Address register$/;"	m	class:SparcISA::ISA
htba	src/cpu/m5legion_interface.h	/^    uint64_t htba;$/;"	m	struct:__anon55
htcr	src/arch/arm/table_walker.hh	/^        HTCR htcr;$/;"	m	class:ArmISA::TableWalker::WalkerState
hterm	src/dev/sparc/T1000.py	/^    hterm = Terminal()$/;"	v	class:T1000
htg_unix_syscall	src/kern/tru64/tru64_syscalls.hh	/^        htg_unix_syscall = 52,$/;"	e	enum:SystemCalls::__anon103
html	src/mem/slicc/symbols/StateMachine.py	/^import slicc.generate.html as html$/;"	i
html	src/mem/slicc/symbols/SymbolTable.py	/^from slicc.generate import html$/;"	i
htobe	src/sim/byteswap.hh	/^template <typename T> inline T htobe(T value) {return swap_byte(value);}$/;"	f
htobe	src/sim/byteswap.hh	/^template <typename T> inline T htobe(T value) {return value;}$/;"	f
htod	src/dev/sparc/T1000.py	/^    htod = DumbTOD()$/;"	v	class:T1000
htog	src/sim/byteswap.hh	/^    inline T htog(T value) {return htobe(value);}$/;"	f	namespace:BigEndianGuest
htog	src/sim/byteswap.hh	/^    inline T htog(T value) {return htole(value);}$/;"	f	namespace:LittleEndianGuest
htole	src/sim/byteswap.hh	/^template <typename T> inline T htole(T value) {return swap_byte(value);}$/;"	f
htole	src/sim/byteswap.hh	/^template <typename T> inline T htole(T value) {return value;}$/;"	f
htopcode10_9	src/arch/arm/types.hh	/^        Bitfield<26, 25> htopcode10_9;$/;"	m	namespace:ArmISA
htopcode12_11	src/arch/arm/types.hh	/^        Bitfield<28, 27> htopcode12_11;$/;"	m	namespace:ArmISA
htopcode4	src/arch/arm/types.hh	/^        Bitfield<20>     htopcode4;$/;"	m	namespace:ArmISA
htopcode5_4	src/arch/arm/types.hh	/^        Bitfield<21, 20> htopcode5_4;$/;"	m	namespace:ArmISA
htopcode6	src/arch/arm/types.hh	/^        Bitfield<22>     htopcode6;$/;"	m	namespace:ArmISA
htopcode6_5	src/arch/arm/types.hh	/^        Bitfield<22, 21> htopcode6_5;$/;"	m	namespace:ArmISA
htopcode7	src/arch/arm/types.hh	/^        Bitfield<23>     htopcode7;$/;"	m	namespace:ArmISA
htopcode7_5	src/arch/arm/types.hh	/^        Bitfield<23, 21> htopcode7_5;$/;"	m	namespace:ArmISA
htopcode8	src/arch/arm/types.hh	/^        Bitfield<24>     htopcode8;$/;"	m	namespace:ArmISA
htopcode8_5	src/arch/arm/types.hh	/^        Bitfield<24, 21> htopcode8_5;$/;"	m	namespace:ArmISA
htopcode8_6	src/arch/arm/types.hh	/^        Bitfield<24, 22> htopcode8_6;$/;"	m	namespace:ArmISA
htopcode8_7	src/arch/arm/types.hh	/^        Bitfield<24, 23> htopcode8_7;$/;"	m	namespace:ArmISA
htopcode9	src/arch/arm/types.hh	/^        Bitfield<25>     htopcode9;$/;"	m	namespace:ArmISA
htopcode9_4	src/arch/arm/types.hh	/^        Bitfield<25, 20> htopcode9_4;$/;"	m	namespace:ArmISA
htopcode9_5	src/arch/arm/types.hh	/^        Bitfield<25, 21> htopcode9_5;$/;"	m	namespace:ArmISA
htopcode9_8	src/arch/arm/types.hh	/^        Bitfield<25, 24> htopcode9_8;$/;"	m	namespace:ArmISA
htrn	src/arch/arm/types.hh	/^        Bitfield<19, 16> htrn;$/;"	m	namespace:ArmISA
hts	src/arch/arm/types.hh	/^        Bitfield<20>     hts;$/;"	m	namespace:ArmISA
htstate	src/arch/sparc/isa.hh	/^    uint64_t htstate[MaxTL];\/\/ Hyperprivileged Trap State Register$/;"	m	class:SparcISA::ISA
htstate	src/cpu/m5legion_interface.h	/^    uint64_t htstate[8];$/;"	m	struct:__anon55
hvAddr	src/dev/arm/vgic.hh	/^    Addr hvAddr;$/;"	m	class:VGic
hv_addr	src/dev/arm/RealView.py	/^    hv_addr = Param.Addr(0, "Address for hv control")$/;"	v	class:VGic
hvuart	src/dev/sparc/T1000.py	/^    hvuart = Uart8250(pio_addr=0xfff0c2c000)$/;"	v	class:T1000
hwBegin	src/base/cp_annotate.hh	/^    inline void hwBegin(flags f, System *sys, uint64_t frame, std::string sm, $/;"	f	class:CPA
hwBegin	src/base/cp_annotate.hh	/^    void hwBegin(flags f, System *sys, uint64_t frame, std::string sm, $/;"	f	class:CPA
hwCycles	src/cpu/kvm/base.hh	/^    PerfKvmCounter hwCycles;$/;"	m	class:BaseKvmCPU
hwDq	src/base/cp_annotate.hh	/^    inline void hwDq(flags f, System *sys, uint64_t frame, std::string sm, $/;"	f	class:CPA
hwDq	src/base/cp_annotate.hh	/^    void hwDq(flags f, System *sys, uint64_t frame, std::string sm, $/;"	f	class:CPA
hwInstructions	src/cpu/kvm/base.hh	/^    PerfKvmCounter hwInstructions;$/;"	m	class:BaseKvmCPU
hwOverflow	src/cpu/kvm/timer.hh	/^    PerfKvmCounter &hwOverflow;$/;"	m	class:PerfKvmTimer
hwPq	src/base/cp_annotate.hh	/^    inline void hwPq(flags f, System *sys, uint64_t frame, std::string sm, $/;"	f	class:CPA
hwPq	src/base/cp_annotate.hh	/^    void hwPq(flags f, System *sys, uint64_t frame, std::string sm, $/;"	f	class:CPA
hwQ	src/base/cp_annotate.hh	/^    inline void hwQ(flags f, System *sys, uint64_t frame, std::string sm, $/;"	f	class:CPA
hwQ	src/base/cp_annotate.hh	/^    void hwQ(flags f, System *sys, uint64_t frame, std::string sm, $/;"	f	class:CPA
hwRq	src/base/cp_annotate.hh	/^    inline void hwRq(flags f, System *sys, uint64_t frame, std::string sm, $/;"	f	class:CPA
hwRq	src/base/cp_annotate.hh	/^    void hwRq(flags f, System *sys, uint64_t frame, std::string sm, $/;"	f	class:CPA
hwWe	src/base/cp_annotate.hh	/^    inline void hwWe(flags f, System *sys, uint64_t frame, std::string sm, $/;"	f	class:CPA
hwWe	src/base/cp_annotate.hh	/^    void hwWe(flags f, System *sys, uint64_t frame, std::string sm, $/;"	f	class:CPA
hwWf	src/base/cp_annotate.hh	/^    inline void hwWf(flags f, System *sys, uint64_t frame, std::string sm, $/;"	f	class:CPA
hwWf	src/base/cp_annotate.hh	/^    void hwWf(flags f, System *sys, uint64_t frame, std::string sm, $/;"	f	class:CPA
hwrei	src/arch/alpha/ev5.cc	/^SimpleThread::hwrei()$/;"	f	class:SimpleThread
hwrei	src/arch/alpha/kernel_stats.hh	/^    void hwrei() { _hwrei++; }$/;"	f	class:AlphaISA::Kernel::Statistics
hwrei	src/cpu/checker/cpu.hh	/^    Fault hwrei() { return thread->hwrei(); }$/;"	f	class:CheckerCPU
hwrei	src/cpu/inorder/cpu.cc	/^InOrderCPU::hwrei(ThreadID tid)$/;"	f	class:InOrderCPU
hwrei	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::hwrei()$/;"	f	class:InOrderDynInst
hwrei	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::hwrei(ThreadID tid)$/;"	f	class:FullO3CPU
hwrei	src/cpu/o3/dyn_inst_impl.hh	/^BaseO3DynInst<Impl>::hwrei()$/;"	f	class:BaseO3DynInst
hwrei	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::hwrei()$/;"	f	class:OzoneCPU
hwrei	src/cpu/ozone/dyn_inst_impl.hh	/^OzoneDynInst<Impl>::hwrei()$/;"	f	class:OzoneDynInst
hwrei	src/cpu/simple/base.hh	/^    Fault hwrei() { return thread->hwrei(); }$/;"	f	class:BaseSimpleCPU
hypTrappable	src/arch/arm/faults.hh	/^        const bool hypTrappable;$/;"	m	struct:ArmISA::ArmFault::FaultVals
hypervisor	src/arch/arm/kernel_stats.hh	/^enum cpu_mode { hypervisor, kernel, user, idle, cpu_mode_num };$/;"	e	enum:ArmISA::Kernel::cpu_mode
hypervisor	src/arch/power/kernel_stats.hh	/^enum cpu_mode { hypervisor, kernel, user, idle, cpu_mode_num };$/;"	e	enum:PowerISA::Kernel::cpu_mode
hypervisor	src/arch/sparc/kernel_stats.hh	/^enum cpu_mode { hypervisor, kernel, user, idle, cpu_mode_num };$/;"	e	enum:SparcISA::Kernel::cpu_mode
hypervisor	src/arch/sparc/system.hh	/^    ObjectFile *hypervisor;$/;"	m	class:SparcSystem
hypervisorDescSymtab	src/arch/sparc/system.hh	/^    SymbolTable *hypervisorDescSymtab;$/;"	m	class:SparcSystem
hypervisorSymtab	src/arch/sparc/system.hh	/^    SymbolTable *hypervisorSymtab;$/;"	m	class:SparcSystem
hypervisor_addr	src/arch/sparc/SparcSystem.py	/^    hypervisor_addr = Param.Addr(Addr('64kB') + _rom_base,$/;"	v	class:SparcSystem
hypervisor_bin	src/arch/sparc/SparcSystem.py	/^    hypervisor_bin = Param.String("file that contains the hypervisor code")$/;"	v	class:SparcSystem
hypervisor_desc	src/arch/sparc/SparcSystem.py	/^    hypervisor_desc = Param.SimpleMemory($/;"	v	class:SparcSystem
hypervisor_desc	src/arch/sparc/system.hh	/^    ObjectFile *hypervisor_desc;$/;"	m	class:SparcSystem
hypervisor_desc_addr	src/arch/sparc/SparcSystem.py	/^    hypervisor_desc_addr = Param.Addr(_hypervisor_desc_base,$/;"	v	class:SparcSystem
hypervisor_desc_bin	src/arch/sparc/SparcSystem.py	/^    hypervisor_desc_bin = Param.String("file that contains the hypervisor description")$/;"	v	class:SparcSystem
i	src/arch/arm/miscregs.hh	/^        Bitfield<12>   i;       \/\/ Instruction cache enable$/;"	m	namespace:ArmISA
i	src/arch/arm/miscregs.hh	/^        Bitfield<7> i;$/;"	m	namespace:ArmISA
i	src/arch/mips/pra_constants.hh	/^    Bitfield<2>      i;$/;"	m	namespace:MipsISA
i	src/arch/mips/pra_constants.hh	/^    Bitfield<2>     i;$/;"	m	namespace:MipsISA
i	src/cpu/inorder/cpu.hh	/^        FloatRegBits i[ThePipeline::MaxThreads][TheISA::NumFloatRegs];$/;"	m	union:InOrderCPU::__anon49
i	src/cpu/inorder/inorder_dyn_inst.hh	/^            FloatRegBits i;$/;"	m	union:InOrderDynInst::InstValue::__anon51
i	src/cpu/simple_thread.hh	/^        FloatRegBits i[TheISA::NumFloatRegs];$/;"	m	union:SimpleThread::__anon62
i2digit	src/base/remote_gdb.cc	/^BaseRemoteGDB::i2digit(int n)$/;"	f	class:BaseRemoteGDB
i2e	src/cpu/ozone/back_end.hh	/^        TimeBuffer<IssueToExec> *i2e;$/;"	m	class:BackEnd::InstQueue
i2e	src/cpu/ozone/back_end.hh	/^    TimeBuffer<IssueToExec> i2e;$/;"	m	class:BackEnd
i2e	src/cpu/ozone/lw_back_end.hh	/^    TimeBuffer<IssueToExec> i2e;$/;"	m	class:LWBackEnd
i8254	src/dev/x86/PcSpeaker.py	/^    i8254 = Param.I8254('Timer that drives the speaker')$/;"	v	class:PcSpeaker
iCacheLineSize	src/arch/arm/miscregs.hh	/^      Bitfield<3,0>   iCacheLineSize;$/;"	m	namespace:ArmISA
iGbReg	src/dev/i8254xGBe_defs.hh	/^namespace iGbReg {$/;"	n
i_dont_exist	src/dev/x86/Pc.py	/^    i_dont_exist = IsaFake(pio_addr=x86IOAddress(0x80), pio_size=1)$/;"	v	class:Pc
ia	src/arch/mips/pra_constants.hh	/^    Bitfield<18, 16> ia;$/;"	m	namespace:MipsISA
iam	src/dev/i8254xGBe_defs.hh	/^    uint32_t iam;$/;"	m	struct:iGbReg::Regs
iauxBase	src/base/loader/coff_sym.h	/^    coff_int    iauxBase;       \/* file's auxiliary entries *\/$/;"	m	struct:ecoff_fdr
iauxMax	src/base/loader/coff_sym.h	/^    coff_int    iauxMax;        \/* number of auxillary symbol entries *\/$/;"	m	struct:ecoff_symhdr
iauxNil	src/base/loader/coff_sym.h	/^#define iauxNil /;"	d
ibe	src/arch/sparc/miscregs.hh	/^    Bitfield<10> ibe;$/;"	m	namespace:SparcISA
ibrd	src/dev/arm/pl011.hh	/^    uint16_t ibrd;$/;"	m	class:Pl011
ibusep	src/arch/mips/dt_constants.hh	/^    Bitfield<24>     ibusep;$/;"	m	namespace:MipsISA
ic	src/dev/i8254xGBe_defs.hh	/^inline bool ic(TxDesc *d)   { assert(isLegacy(d) || isData(d)); return isLegacy(d) && bits(d->d2, 26,26); }$/;"	f	namespace:iGbReg::TxdOp
ic	src/dev/sparc/iob.hh	/^    IntrControl *ic;$/;"	m	class:Iob
icache	src/mem/ruby/system/Sequencer.py	/^    icache = Param.RubyCache("")$/;"	v	class:RubySequencer
icacheBlockAlignPC	src/cpu/ozone/front_end.hh	/^    Addr icacheBlockAlignPC(Addr addr)$/;"	f	class:FrontEnd
icachePort	src/cpu/checker/cpu.hh	/^    MasterPort *icachePort;$/;"	m	class:CheckerCPU
icachePort	src/cpu/o3/cpu.hh	/^    IcachePort icachePort;$/;"	m	class:FullO3CPU
icachePort	src/cpu/ozone/front_end.hh	/^    IcachePort icachePort;$/;"	m	class:FrontEnd
icachePort	src/cpu/simple/atomic.hh	/^    AtomicCPUPort icachePort;$/;"	m	class:AtomicSimpleCPU
icachePort	src/cpu/simple/timing.hh	/^    IcachePort icachePort;$/;"	m	class:TimingSimpleCPU
icacheRetryCycles	src/cpu/simple/base.hh	/^    Stats::Scalar icacheRetryCycles;$/;"	m	class:BaseSimpleCPU
icacheStallCycles	src/cpu/o3/fetch.hh	/^    Stats::Scalar icacheStallCycles;$/;"	m	class:DefaultFetch
icacheStallCycles	src/cpu/ozone/front_end.hh	/^    Stats::Scalar icacheStallCycles;$/;"	m	class:FrontEnd
icacheStallCycles	src/cpu/simple/base.hh	/^    Stats::Scalar icacheStallCycles;$/;"	m	class:BaseSimpleCPU
icache_port	src/cpu/BaseCPU.py	/^    icache_port = MasterPort("Instruction Port")$/;"	v
iccrpr	src/dev/arm/gic_pl390.hh	/^    uint32_t iccrpr[CPU_MAX];$/;"	m	class:Pl390
icr	src/dev/i8254xGBe_defs.hh	/^    ICR icr;$/;"	m	struct:iGbReg::Regs
ics	src/arch/mips/mt_constants.hh	/^    Bitfield<16>     ics;$/;"	m	namespace:MipsISA
id	src/arch/arm/miscregs.hh	/^        Bitfield<33>     id;    \/\/ AArch64$/;"	m	namespace:ArmISA
id	src/arch/sparc/miscregs.hh	/^    Bitfield<11> id;  \/\/ this impl. dependent (id) field m$/;"	m	namespace:SparcISA
id	src/arch/x86/bios/IntelMP.py	/^    id = Param.UInt8(0, 'id of this APIC')$/;"	v	class:X86IntelMPIOAPIC
id	src/arch/x86/bios/intelmp.hh	/^    uint8_t id;$/;"	m	class:X86ISA::IntelMP::IOAPIC
id	src/arch/x86/regs/misc.hh	/^        Bitfield<21> id; \/\/ ID Flag$/;"	m	namespace:X86ISA
id	src/base/inet.hh	/^    uint16_t id() const { return ntohs(ip_id); }$/;"	f	struct:Net::IpHdr
id	src/base/inet.hh	/^    void id(uint16_t _id) { ip_id = htons(_id); }$/;"	f	struct:Net::IpHdr
id	src/base/stats/info.hh	/^    int id;$/;"	m	class:Stats::Info
id	src/cpu/inorder/resource.hh	/^    int id;$/;"	m	class:Resource
id	src/cpu/kvm/arm_cpu.hh	/^        const uint64_t id;$/;"	m	struct:ArmKvmCPU::KvmCoreMiscRegInfo
id	src/cpu/kvm/arm_cpu.hh	/^        const uint64_t id;$/;"	m	struct:ArmKvmCPU::KvmIntRegInfo
id	src/cpu/o3/mem_dep_unit.hh	/^    int id;$/;"	m	class:MemDepUnit
id	src/cpu/simple/atomic.hh	/^        uint64_t id;$/;"	m	struct:AtomicSimpleCPU::BBInfo
id	src/cpu/testers/memtest/memtest.hh	/^    int id;$/;"	m	class:MemTest
id	src/cpu/testers/networktest/networktest.hh	/^    int id;$/;"	m	class:NetworkTest
id	src/cpu/timebuf.hh	/^    int id()$/;"	f	class:TimeBuffer
id	src/cpu/timebuf.hh	/^    void id(int id)$/;"	f	class:TimeBuffer
id	src/dev/i8254xGBe_defs.hh	/^                    uint16_t id;$/;"	m	struct:iGbReg::RxDesc::__anon70::__anon73::__anon74::__anon75
id	src/dev/x86/i82094aa.hh	/^    uint8_t id;$/;"	m	class:X86ISA::I82094AA
id	src/mem/bus.hh	/^        PortID id;$/;"	m	struct:BaseBus::PortCache
id	src/mem/port.hh	/^    const PortID id;$/;"	m	class:Port
id	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.py	/^    id = Param.UInt32("ID in relation to other network interfaces")$/;"	v	class:GarnetNetworkInterface_d
id	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.py	/^    id = Param.UInt32("ID in relation to other network interfaces")$/;"	v	class:GarnetNetworkInterface
id_aa64afr0_el1	src/arch/arm/ArmISA.py	/^    id_aa64afr0_el1 = Param.UInt64(0x0000000000000000,$/;"	v	class:ArmISA
id_aa64afr1_el1	src/arch/arm/ArmISA.py	/^    id_aa64afr1_el1 = Param.UInt64(0x0000000000000000,$/;"	v	class:ArmISA
id_aa64dfr0_el1	src/arch/arm/ArmISA.py	/^    id_aa64dfr0_el1 = Param.UInt64(0x0000000000101006,$/;"	v	class:ArmISA
id_aa64dfr1_el1	src/arch/arm/ArmISA.py	/^    id_aa64dfr1_el1 = Param.UInt64(0x0000000000000000,$/;"	v	class:ArmISA
id_aa64isar0_el1	src/arch/arm/ArmISA.py	/^    id_aa64isar0_el1 = Param.UInt64(0x0000000000000000,$/;"	v	class:ArmISA
id_aa64isar1_el1	src/arch/arm/ArmISA.py	/^    id_aa64isar1_el1 = Param.UInt64(0x0000000000000000,$/;"	v	class:ArmISA
id_aa64mmfr0_el1	src/arch/arm/ArmISA.py	/^    id_aa64mmfr0_el1 = Param.UInt64(0x0000000000f00002,$/;"	v	class:ArmISA
id_aa64mmfr1_el1	src/arch/arm/ArmISA.py	/^    id_aa64mmfr1_el1 = Param.UInt64(0x0000000000000000,$/;"	v	class:ArmISA
id_aa64pfr0_el1	src/arch/arm/ArmISA.py	/^    id_aa64pfr0_el1 = Param.UInt64(0x0000000000000011,$/;"	v	class:ArmISA
id_aa64pfr1_el1	src/arch/arm/ArmISA.py	/^    id_aa64pfr1_el1 = Param.UInt64(0x0000000000000000,$/;"	v	class:ArmISA
id_count	src/base/statistics.cc	/^int Info::id_count = 0;$/;"	m	class:Stats::Info	file:
id_count	src/base/stats/info.hh	/^    static int id_count;$/;"	m	class:Stats::Info
id_isar0	src/arch/arm/ArmISA.py	/^    id_isar0 = Param.UInt32(0x02101111, "Instruction Set Attribute Register 0")$/;"	v	class:ArmISA
id_isar1	src/arch/arm/ArmISA.py	/^    id_isar1 = Param.UInt32(0x02112111, "Instruction Set Attribute Register 1")$/;"	v	class:ArmISA
id_isar2	src/arch/arm/ArmISA.py	/^    id_isar2 = Param.UInt32(0x21232141, "Instruction Set Attribute Register 2")$/;"	v	class:ArmISA
id_isar3	src/arch/arm/ArmISA.py	/^    id_isar3 = Param.UInt32(0x01112131, "Instruction Set Attribute Register 3")$/;"	v	class:ArmISA
id_isar4	src/arch/arm/ArmISA.py	/^    id_isar4 = Param.UInt32(0x10010142, "Instruction Set Attribute Register 4")$/;"	v	class:ArmISA
id_isar5	src/arch/arm/ArmISA.py	/^    id_isar5 = Param.UInt32(0x00000000, "Instruction Set Attribute Register 5")$/;"	v	class:ArmISA
id_mmfr0	src/arch/arm/ArmISA.py	/^    id_mmfr0 = Param.UInt32(0x10201103, "Memory Model Feature Register 0")$/;"	v	class:ArmISA
id_mmfr1	src/arch/arm/ArmISA.py	/^    id_mmfr1 = Param.UInt32(0x00000000, "Memory Model Feature Register 1")$/;"	v	class:ArmISA
id_mmfr2	src/arch/arm/ArmISA.py	/^    id_mmfr2 = Param.UInt32(0x01230000, "Memory Model Feature Register 2")$/;"	v	class:ArmISA
id_mmfr3	src/arch/arm/ArmISA.py	/^    id_mmfr3 = Param.UInt32(0x02102211, "Memory Model Feature Register 3")$/;"	v	class:ArmISA
id_pfr0	src/arch/arm/ArmISA.py	/^    id_pfr0 = Param.UInt32(0x00000031, "Processor Feature Register 0")$/;"	v	class:ArmISA
id_pfr1	src/arch/arm/ArmISA.py	/^    id_pfr1 = Param.UInt32(0x00001011, "Processor Feature Register 1")$/;"	v	class:ArmISA
idc	src/arch/arm/miscregs.hh	/^        Bitfield<7> idc;$/;"	m	namespace:ArmISA
ide	src/arch/arm/miscregs.hh	/^        Bitfield<15> ide;$/;"	m	namespace:ArmISA
ide	src/dev/arm/RealView.py	/^    ide = IdeController(disks = [], pci_bus=0, pci_dev=1, pci_func=0,$/;"	v	class:VExpress_EMM
ide	src/dev/i8254xGBe_defs.hh	/^inline bool ide(TxDesc *d)  { return bits(d->d2, 31,31) && (getType(d) == TXD_DATA || isLegacy(d)); }$/;"	f	namespace:iGbReg::TxdOp
ide	src/dev/x86/SouthBridge.py	/^    ide = IdeController(disks=[], pci_func=0, pci_dev=4, pci_bus=0)$/;"	v	class:SouthBridge
ideConfig	src/dev/ide_ctrl.hh	/^    uint16_t ideConfig;$/;"	m	class:IdeController
ident	src/base/inet.hh	/^    uint32_t ident;$/;"	m	struct:Net::ip6_opt_fragment
ident	src/python/m5/util/code_formatter.py	/^    ident = r'[_A-z]\\w*'$/;"	v	class:code_formatter
idle	src/arch/alpha/kernel_stats.hh	/^enum cpu_mode { kernel, user, idle, cpu_mode_num };$/;"	e	enum:AlphaISA::Kernel::cpu_mode
idle	src/arch/arm/kernel_stats.hh	/^enum cpu_mode { hypervisor, kernel, user, idle, cpu_mode_num };$/;"	e	enum:ArmISA::Kernel::cpu_mode
idle	src/arch/mips/kernel_stats.hh	/^enum cpu_mode { kernel, user, idle, cpu_mode_num };$/;"	e	enum:MipsISA::Kernel::cpu_mode
idle	src/arch/power/kernel_stats.hh	/^enum cpu_mode { hypervisor, kernel, user, idle, cpu_mode_num };$/;"	e	enum:PowerISA::Kernel::cpu_mode
idle	src/arch/sparc/kernel_stats.hh	/^enum cpu_mode { hypervisor, kernel, user, idle, cpu_mode_num };$/;"	e	enum:SparcISA::Kernel::cpu_mode
idle	src/arch/x86/kernel_stats.hh	/^    idle,$/;"	e	enum:X86ISA::Kernel::cpu_mode
idle	src/cpu/inorder/pipeline_stage.hh	/^    bool idle;$/;"	m	class:PipelineStage
idle	src/kern/linux/linux_syscalls.hh	/^    idle = 93,$/;"	e	enum:SystemCalls::__anon87
idleCycles	src/cpu/inorder/cpu.hh	/^    Stats::Scalar idleCycles;$/;"	m	class:InOrderCPU
idleCycles	src/cpu/inorder/pipeline_stage.hh	/^    Stats::Scalar idleCycles;$/;"	m	class:PipelineStage
idleCycles	src/cpu/o3/cpu.hh	/^    Stats::Scalar idleCycles;$/;"	m	class:FullO3CPU
idleFraction	src/cpu/ozone/cpu.hh	/^    Stats::Formula idleFraction;$/;"	m	class:OzoneCPU
idleFraction	src/cpu/simple/base.hh	/^    Stats::Formula idleFraction;$/;"	m	class:BaseSimpleCPU
idleProcess	src/arch/alpha/kernel_stats.hh	/^    Addr idleProcess;$/;"	m	class:AlphaISA::Kernel::Statistics
idleRate	src/cpu/o3/fetch.hh	/^    Stats::Formula idleRate;$/;"	m	class:DefaultFetch
idleRate	src/cpu/ozone/front_end.hh	/^    Stats::Formula idleRate;$/;"	m	class:FrontEnd
idleStartEvent	src/arch/alpha/linux/system.hh	/^    IdleStartEvent *idleStartEvent;$/;"	m	class:LinuxAlphaSystem
idleStartEvent	src/arch/mips/linux/system.hh	/^    IdleStartEvent *idleStartEvent;$/;"	m	class:LinuxMipsSystem
idnMax	src/base/loader/coff_sym.h	/^    coff_int    idnMax;         \/* max index into dense number table *\/$/;"	m	struct:ecoff_symhdr
idreg	src/dev/arm/RealView.py	/^    idreg = Param.UInt32(0x00000000, "ID Register, SYS_ID")$/;"	v	class:RealViewCtrl
idx	src/arch/x86/insts/static_inst.hh	/^        RegIndex idx;$/;"	m	struct:X86ISA::InstRegIndex
idx	src/cpu/inorder/pipeline_traits.5stage.hh	/^        unsigned idx;$/;"	m	struct:ThePipeline::ScheduleEntry
idx	src/cpu/inorder/pipeline_traits.9stage.hh	/^        unsigned idx;$/;"	m	struct:ThePipeline::ScheduleEntry
idx	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^        unsigned idx;$/;"	m	struct:ThePipeline::ScheduleEntry
idx	src/cpu/inorder/resource_sked.hh	/^    unsigned idx;$/;"	m	class:ScheduleEntry
idx	src/cpu/kvm/arm_cpu.hh	/^        const IntRegIndex idx;$/;"	m	struct:ArmKvmCPU::KvmIntRegInfo
idx	src/cpu/kvm/arm_cpu.hh	/^        const MiscRegIndex idx;$/;"	m	struct:ArmKvmCPU::KvmCoreMiscRegInfo
idx	src/cpu/o3/fu_pool.hh	/^        int idx;$/;"	m	class:FUPool::FUIdxQueue
idx	src/cpu/o3/lsq_unit.hh	/^        uint8_t idx;$/;"	m	class:LSQUnit::LSQSenderState
idx	src/cpu/ozone/lw_lsq.hh	/^        int idx;$/;"	m	class:OzoneLWLSQ::LSQSenderState
idx	src/mem/ruby/system/BankedArray.hh	/^        Index idx;$/;"	m	class:BankedArray::AccessRecord
idxMask	src/cpu/pred/btb.hh	/^    unsigned idxMask;$/;"	m	class:DefaultBTB
idx_len	src/base/cp_annotate.hh	/^        uint32_t idx_len;$/;"	m	struct:CPA::AnnotateHeader
idx_off	src/base/cp_annotate.hh	/^        uint64_t idx_off;$/;"	m	struct:CPA::AnnotateHeader
ie	src/arch/mips/pra_constants.hh	/^    Bitfield<0>      ie;$/;"	m	namespace:MipsISA
ie	src/arch/mips/pra_constants.hh	/^    Bitfield<4>     ie;$/;"	m	namespace:MipsISA
ie	src/arch/sparc/miscregs.hh	/^    Bitfield<1> ie;$/;"	m	namespace:SparcISA
ie	src/arch/sparc/pagetable.hh	/^    bool ie()       const { return bits(entry4u, 59,59); }$/;"	f	class:SparcISA::PageTableEntry
ier	src/dev/ns_gige.hh	/^    uint32_t    ier;$/;"	m	struct:dp_regs
iew	src/cpu/o3/cpu.hh	/^    typename CPUPolicy::IEW iew;$/;"	m	class:FullO3CPU
iew	src/cpu/o3/decode.hh	/^        bool iew;$/;"	m	struct:DefaultDecode::Stalls
iew	src/cpu/o3/fetch.hh	/^        bool iew;$/;"	m	struct:DefaultFetch::Stalls
iew	src/cpu/o3/rename.hh	/^        bool iew;$/;"	m	struct:DefaultRename::Stalls
iewBlock	src/cpu/o3/comm.hh	/^    bool iewBlock[Impl::MaxThreads];$/;"	m	struct:TimeBufStruct
iewBlockCycles	src/cpu/o3/iew.hh	/^    Stats::Scalar iewBlockCycles;$/;"	m	class:DefaultIEW
iewComm	src/cpu/o3/comm.hh	/^    struct iewComm {$/;"	s	struct:TimeBufStruct
iewDispLoadInsts	src/cpu/o3/iew.hh	/^    Stats::Scalar iewDispLoadInsts;$/;"	m	class:DefaultIEW
iewDispNonSpecInsts	src/cpu/o3/iew.hh	/^    Stats::Scalar iewDispNonSpecInsts;$/;"	m	class:DefaultIEW
iewDispSquashedInsts	src/cpu/o3/iew.hh	/^    Stats::Scalar iewDispSquashedInsts;$/;"	m	class:DefaultIEW
iewDispStoreInsts	src/cpu/o3/iew.hh	/^    Stats::Scalar iewDispStoreInsts;$/;"	m	class:DefaultIEW
iewDispatchedInsts	src/cpu/o3/iew.hh	/^    Stats::Scalar iewDispatchedInsts;$/;"	m	class:DefaultIEW
iewExecLoadInsts	src/cpu/o3/iew.hh	/^    Stats::Vector iewExecLoadInsts;$/;"	m	class:DefaultIEW
iewExecRate	src/cpu/o3/iew.hh	/^    Stats::Formula iewExecRate;$/;"	m	class:DefaultIEW
iewExecSquashedInsts	src/cpu/o3/iew.hh	/^    Stats::Scalar iewExecSquashedInsts;$/;"	m	class:DefaultIEW
iewExecStoreInsts	src/cpu/o3/iew.hh	/^    Stats::Formula iewExecStoreInsts;$/;"	m	class:DefaultIEW
iewExecutedBranches	src/cpu/o3/iew.hh	/^    Stats::Vector iewExecutedBranches;$/;"	m	class:DefaultIEW
iewExecutedInsts	src/cpu/o3/iew.hh	/^    Stats::Scalar iewExecutedInsts;$/;"	m	class:DefaultIEW
iewExecutedNop	src/cpu/o3/iew.hh	/^    Stats::Vector iewExecutedNop;$/;"	m	class:DefaultIEW
iewExecutedRefs	src/cpu/o3/iew.hh	/^    Stats::Vector iewExecutedRefs;$/;"	m	class:DefaultIEW
iewExecutedSwp	src/cpu/o3/iew.hh	/^    Stats::Vector iewExecutedSwp;$/;"	m	class:DefaultIEW
iewIQFullEvents	src/cpu/o3/iew.hh	/^    Stats::Scalar iewIQFullEvents;$/;"	m	class:DefaultIEW
iewIdleCycles	src/cpu/o3/iew.hh	/^    Stats::Scalar iewIdleCycles;$/;"	m	class:DefaultIEW
iewInfo	src/cpu/o3/comm.hh	/^    iewComm iewInfo[Impl::MaxThreads];$/;"	m	struct:TimeBufStruct
iewInstsToCommit	src/cpu/o3/iew.hh	/^    Stats::Vector iewInstsToCommit;$/;"	m	class:DefaultIEW
iewLSQFullEvents	src/cpu/o3/iew.hh	/^    Stats::Scalar iewLSQFullEvents;$/;"	m	class:DefaultIEW
iewQueue	src/cpu/o3/commit.hh	/^    TimeBuffer<IEWStruct> *iewQueue;$/;"	m	class:DefaultCommit
iewQueue	src/cpu/o3/cpu.hh	/^    TimeBuffer<IEWStruct> iewQueue;$/;"	m	class:FullO3CPU
iewQueue	src/cpu/o3/iew.hh	/^    TimeBuffer<IEWStruct> *iewQueue;$/;"	m	class:DefaultIEW
iewSquashCycles	src/cpu/o3/iew.hh	/^    Stats::Scalar iewSquashCycles;$/;"	m	class:DefaultIEW
iewStage	src/cpu/o3/commit.hh	/^    IEW *iewStage;$/;"	m	class:DefaultCommit
iewStage	src/cpu/o3/inst_queue.hh	/^    IEW *iewStage;$/;"	m	class:InstructionQueue
iewStage	src/cpu/o3/lsq.hh	/^    IEW *iewStage;$/;"	m	class:LSQ
iewStage	src/cpu/o3/lsq_unit.hh	/^    IEW *iewStage;$/;"	m	class:LSQUnit
iewToCommitDelay	src/cpu/o3/O3CPU.py	/^    iewToCommitDelay = Param.Cycles(1, "Issue\/Execute\/Writeback to commit "$/;"	v	class:DerivO3CPU
iewToCommitDelay	src/cpu/o3/commit.hh	/^    Cycles iewToCommitDelay;$/;"	m	class:DefaultCommit
iewToCommitDelay	src/cpu/ozone/OzoneCPU.py	/^    iewToCommitDelay = Param.Unsigned("Issue\/Execute\/Writeback to commit "$/;"	v	class:DerivOzoneCPU
iewToCommitDelay	src/cpu/ozone/SimpleOzoneCPU.py	/^    iewToCommitDelay = Param.Unsigned("Issue\/Execute\/Writeback to commit "$/;"	v	class:SimpleOzoneCPU
iewToCommitDelay	src/cpu/ozone/simple_params.hh	/^    unsigned iewToCommitDelay;$/;"	m	class:SimpleParams
iewToDecodeDelay	src/cpu/o3/O3CPU.py	/^    iewToDecodeDelay = Param.Cycles(1, "Issue\/Execute\/Writeback to decode "$/;"	v	class:DerivO3CPU
iewToDecodeDelay	src/cpu/o3/decode.hh	/^    Cycles iewToDecodeDelay;$/;"	m	class:DefaultDecode
iewToDecodeDelay	src/cpu/ozone/OzoneCPU.py	/^    iewToDecodeDelay = Param.Unsigned("Issue\/Execute\/Writeback to decode "$/;"	v	class:DerivOzoneCPU
iewToDecodeDelay	src/cpu/ozone/SimpleOzoneCPU.py	/^    iewToDecodeDelay = Param.Unsigned("Issue\/Execute\/Writeback to decode "$/;"	v	class:SimpleOzoneCPU
iewToDecodeDelay	src/cpu/ozone/simple_params.hh	/^    unsigned iewToDecodeDelay;$/;"	m	class:SimpleParams
iewToFetchDelay	src/cpu/o3/O3CPU.py	/^    iewToFetchDelay = Param.Cycles(1, "Issue\/Execute\/Writeback to fetch "$/;"	v	class:DerivO3CPU
iewToFetchDelay	src/cpu/o3/fetch.hh	/^    Cycles iewToFetchDelay;$/;"	m	class:DefaultFetch
iewToFetchDelay	src/cpu/ozone/OzoneCPU.py	/^    iewToFetchDelay = Param.Unsigned("Issue\/Execute\/Writeback to fetch "$/;"	v	class:DerivOzoneCPU
iewToFetchDelay	src/cpu/ozone/SimpleOzoneCPU.py	/^    iewToFetchDelay = Param.Unsigned("Issue\/Execute\/Writeback to fetch "$/;"	v	class:SimpleOzoneCPU
iewToFetchDelay	src/cpu/ozone/simple_params.hh	/^    unsigned iewToFetchDelay;$/;"	m	class:SimpleParams
iewToRenameDelay	src/cpu/o3/O3CPU.py	/^    iewToRenameDelay = Param.Cycles(1, "Issue\/Execute\/Writeback to rename "$/;"	v	class:DerivO3CPU
iewToRenameDelay	src/cpu/o3/rename.hh	/^    int iewToRenameDelay;$/;"	m	class:DefaultRename
iewToRenameDelay	src/cpu/ozone/OzoneCPU.py	/^    iewToRenameDelay = Param.Unsigned("Issue\/Execute\/Writeback to rename "$/;"	v	class:DerivOzoneCPU
iewToRenameDelay	src/cpu/ozone/SimpleOzoneCPU.py	/^    iewToRenameDelay = Param.Unsigned("Issue\/Execute\/Writeback to rename "$/;"	v	class:SimpleOzoneCPU
iewToRenameDelay	src/cpu/ozone/simple_params.hh	/^    unsigned iewToRenameDelay;$/;"	m	class:SimpleParams
iewUnblock	src/cpu/o3/comm.hh	/^    bool iewUnblock[Impl::MaxThreads];$/;"	m	struct:TimeBufStruct
iewUnblockCycles	src/cpu/o3/iew.hh	/^    Stats::Scalar iewUnblockCycles;$/;"	m	class:DefaultIEW
iew_ptr	src/cpu/o3/rename.hh	/^    IEW *iew_ptr;$/;"	m	class:DefaultRename
iexi	src/arch/mips/dt_constants.hh	/^    Bitfield<20, 19> iexi;$/;"	m	namespace:MipsISA
iextMax	src/base/loader/coff_sym.h	/^    coff_int    iextMax;        \/* max index into external symbols *\/$/;"	m	struct:ecoff_symhdr
ifcs	src/dev/i8254xGBe_defs.hh	/^inline bool ifcs(TxDesc *d) { assert(isLegacy(d) || isData(d)); return bits(d->d2, 25,25); }$/;"	f	namespace:iGbReg::TxdOp
ifd	src/base/loader/coff_sym.h	/^    coff_int ifd;               \/* where the iss and index fields point into *\/$/;"	m	struct:ecoff_extsym
ifdMax	src/base/loader/coff_sym.h	/^    coff_int    ifdMax;         \/* number of file descriptor entries *\/$/;"	m	struct:ecoff_symhdr
ifdNil	src/base/loader/coff_sym.h	/^#define ifdNil /;"	d
ifdTemp	src/base/loader/coff_sym.h	/^#define ifdTemp /;"	d
ifetch_pkt	src/cpu/simple/timing.hh	/^    PacketPtr ifetch_pkt;$/;"	m	class:TimingSimpleCPU
ifetch_req	src/cpu/simple/atomic.hh	/^    Request ifetch_req;$/;"	m	class:AtomicSimpleCPU
ifiNil	src/base/loader/coff_sym.h	/^#define ifiNil /;"	d
ifls	src/dev/arm/pl011.hh	/^    uint16_t ifls;$/;"	m	class:Pl011
igbe	src/dev/i8254xGBe.hh	/^        IGbE *igbe;$/;"	m	class:IGbE::DescCache
ignne	src/arch/x86/regs/misc.hh	/^        Bitfield<0> ignne;$/;"	m	namespace:X86ISA
ignore	src/base/trace.cc	/^ObjectMatch ignore;$/;"	m	namespace:Trace	file:
ignore	src/python/m5/trace.py	/^from internal.trace import output, ignore$/;"	i
ignoreFunc	src/sim/syscall_emul.cc	/^ignoreFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
ignoreSymbols	src/base/cp_annotate.cc	/^CPAIgnoreSymbol ignoreSymbols[] = {$/;"	v
ignoreWarnOnceFunc	src/sim/syscall_emul.cc	/^ignoreWarnOnceFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
ignore_access	src/dev/arm/RealView.py	/^    ignore_access = Param.Bool(False, "Ignore reads\/writes to this device, (e.g. IsaFake + AMBA)")$/;"	v	class:AmbaFake
ihr	src/dev/ns_gige.hh	/^    uint32_t    ihr;$/;"	m	struct:dp_regs
ihs	src/dev/arm/pl111.hh	/^        Bitfield<12> ihs;$/;"	m	class:Pl111
il	src/arch/arm/miscregs.hh	/^        Bitfield<20> il;        \/\/ AArch64$/;"	m	namespace:ArmISA
il	src/arch/arm/miscregs.hh	/^        Bitfield<25> il;$/;"	m	namespace:ArmISA
il	src/arch/mips/pra_constants.hh	/^    Bitfield<21, 19> il;$/;"	m	namespace:MipsISA
iline	src/base/loader/coff_sym.h	/^    coff_int    iline;          \/* start of line number entries*\/$/;"	m	struct:pdr
ilineBase	src/base/loader/coff_sym.h	/^    coff_int    ilineBase;      \/* file's line symbols *\/$/;"	m	struct:ecoff_fdr
ilineMax	src/base/loader/coff_sym.h	/^    coff_int    ilineMax;       \/* number of line number entries *\/$/;"	m	struct:ecoff_symhdr
ilineNil	src/base/loader/coff_sym.h	/^#define ilineNil /;"	d
ilnNil	src/base/loader/coff_sym.h	/^#define ilnNil /;"	d
im0	src/arch/mips/pra_constants.hh	/^        Bitfield<8>  im0;$/;"	m	namespace:MipsISA
im1	src/arch/mips/pra_constants.hh	/^        Bitfield<9>  im1;$/;"	m	namespace:MipsISA
im2	src/arch/mips/pra_constants.hh	/^        Bitfield<10> im2;$/;"	m	namespace:MipsISA
im3	src/arch/mips/pra_constants.hh	/^        Bitfield<11> im3;$/;"	m	namespace:MipsISA
im4	src/arch/mips/pra_constants.hh	/^        Bitfield<12> im4;$/;"	m	namespace:MipsISA
im5	src/arch/mips/pra_constants.hh	/^        Bitfield<13> im5;$/;"	m	namespace:MipsISA
im6	src/arch/mips/pra_constants.hh	/^        Bitfield<14> im6;$/;"	m	namespace:MipsISA
im7	src/arch/mips/pra_constants.hh	/^        Bitfield<15> im7;$/;"	m	namespace:MipsISA
image	src/dev/Ide.py	/^    image = Param.DiskImage("Disk image")$/;"	v	class:IdeDisk
image	src/dev/disk_image.cc	/^    CowDiskImage *image;$/;"	m	class:CowDiskCallback	file:
image	src/dev/ide_disk.hh	/^    DiskImage *image;$/;"	m	class:IdeDisk
image	src/dev/simple_disk.hh	/^    DiskImage *image;$/;"	m	class:SimpleDisk
image	src/dev/sparc/T1000.py	/^    image = Param.DiskImage("Disk Image")$/;"	v	class:MmDisk
image	src/dev/sparc/mm_disk.hh	/^    DiskImage *image;$/;"	m	class:MmDisk
image_file	src/dev/DiskImage.py	/^    image_file = ""$/;"	v	class:CowDiskImage
image_file	src/dev/DiskImage.py	/^    image_file = Param.String("disk image file")$/;"	v	class:DiskImage
imask	src/dev/arm/generic_timer.hh	/^            Bitfield<1> imask;$/;"	m	class:GenericTimer::ArchTimer
imb	src/arch/alpha/osfpal.hh	/^        imb = 0x86,$/;"	e	enum:PAL::__anon3
imcrPresent	src/arch/x86/bios/intelmp.hh	/^    bool imcrPresent;$/;"	m	class:X86ISA::IntelMP::FloatingPointer
imcr_present	src/arch/x86/bios/IntelMP.py	/^    imcr_present = Param.Bool(True,$/;"	v	class:X86IntelMPFloatingPointer
imm	src/arch/arm/insts/branch.hh	/^    int32_t imm;$/;"	m	class:ArmISA::BranchImm
imm	src/arch/arm/insts/branch.hh	/^    int32_t imm;$/;"	m	class:ArmISA::BranchImmReg
imm	src/arch/arm/insts/branch64.hh	/^    int64_t imm;$/;"	m	class:ArmISA::BranchImm64
imm	src/arch/arm/insts/branch64.hh	/^    int64_t imm;$/;"	m	class:ArmISA::BranchImmReg64
imm	src/arch/arm/insts/data64.hh	/^    uint64_t imm;$/;"	m	class:ArmISA::DataX1RegImmOp
imm	src/arch/arm/insts/data64.hh	/^    uint64_t imm;$/;"	m	class:ArmISA::DataX2RegImmOp
imm	src/arch/arm/insts/data64.hh	/^    uint64_t imm;$/;"	m	class:ArmISA::DataXCondCompImmOp
imm	src/arch/arm/insts/data64.hh	/^    uint64_t imm;$/;"	m	class:ArmISA::DataXImmOnlyOp
imm	src/arch/arm/insts/data64.hh	/^    uint64_t imm;$/;"	m	class:ArmISA::DataXImmOp
imm	src/arch/arm/insts/macromem.hh	/^    int32_t imm;$/;"	m	class:ArmISA::MicroIntImmOp
imm	src/arch/arm/insts/macromem.hh	/^    int64_t imm;$/;"	m	class:ArmISA::MicroIntImmXOp
imm	src/arch/arm/insts/macromem.hh	/^    uint32_t imm;$/;"	m	class:ArmISA::MicroNeonMemOp
imm	src/arch/arm/insts/mem.hh	/^    int32_t imm;$/;"	m	class:ArmISA::MemoryImm
imm	src/arch/arm/insts/mem64.hh	/^    int64_t imm;$/;"	m	class:ArmISA::MemoryImm64
imm	src/arch/arm/insts/mem64.hh	/^    int64_t imm;$/;"	m	class:ArmISA::MemoryLiteral64
imm	src/arch/arm/insts/mem64.hh	/^    uint64_t imm;$/;"	m	class:ArmISA::SysDC64
imm	src/arch/arm/insts/misc.hh	/^    uint32_t    imm;$/;"	m	class:McrrOp
imm	src/arch/arm/insts/misc.hh	/^    uint32_t    imm;$/;"	m	class:MrrcOp
imm	src/arch/arm/insts/misc.hh	/^    uint32_t imm;$/;"	m	class:MsrImmOp
imm	src/arch/arm/insts/misc.hh	/^    uint64_t imm;$/;"	m	class:ImmOp
imm	src/arch/arm/insts/misc.hh	/^    uint64_t imm;$/;"	m	class:RegImmOp
imm	src/arch/arm/insts/misc.hh	/^    uint64_t imm;$/;"	m	class:RegImmRegOp
imm	src/arch/arm/insts/misc.hh	/^    uint64_t imm;$/;"	m	class:RegImmRegShiftOp
imm	src/arch/arm/insts/misc.hh	/^    uint64_t imm;$/;"	m	class:RegRegImmOp
imm	src/arch/arm/insts/misc.hh	/^    uint64_t imm;$/;"	m	class:RegRegRegImmOp
imm	src/arch/arm/insts/misc64.hh	/^    uint64_t imm;$/;"	m	class:RegRegRegImmOp64
imm	src/arch/arm/insts/pred_inst.hh	/^    uint32_t imm;$/;"	m	class:ArmISA::DataImmOp
imm	src/arch/arm/insts/pred_inst.hh	/^    uint32_t imm;$/;"	m	class:ArmISA::PredImmOp
imm	src/arch/arm/insts/vfp.hh	/^    uint64_t imm;$/;"	m	class:ArmISA::FpRegImmOp
imm	src/arch/arm/insts/vfp.hh	/^    uint64_t imm;$/;"	m	class:ArmISA::FpRegRegImmOp
imm	src/arch/arm/insts/vfp.hh	/^    uint64_t imm;$/;"	m	class:ArmISA::FpRegRegRegImmOp
imm	src/arch/arm/types.hh	/^        Bitfield<7, 0> imm;$/;"	m	namespace:ArmISA
imm	src/arch/power/insts/integer.hh	/^    int32_t imm;$/;"	m	class:PowerISA::IntImmOp
imm1	src/arch/arm/insts/branch64.hh	/^    int64_t imm1;$/;"	m	class:ArmISA::BranchImmImmReg64
imm1	src/arch/arm/insts/data64.hh	/^    uint64_t imm1, imm2;$/;"	m	class:ArmISA::DataX1Reg2ImmOp
imm1	src/arch/arm/insts/misc.hh	/^    uint64_t imm1;$/;"	m	class:RegImmImmOp
imm1	src/arch/arm/insts/misc.hh	/^    uint64_t imm1;$/;"	m	class:RegRegImmImmOp
imm1	src/arch/arm/insts/misc64.hh	/^    uint64_t imm1;$/;"	m	class:RegRegImmImmOp64
imm16	src/arch/arm/miscregs.hh	/^        Bitfield<15, 0> imm16;$/;"	m	namespace:ArmISA
imm2	src/arch/arm/insts/branch64.hh	/^    int64_t imm2;$/;"	m	class:ArmISA::BranchImmImmReg64
imm2	src/arch/arm/insts/data64.hh	/^    uint64_t imm1, imm2;$/;"	m	class:ArmISA::DataX1Reg2ImmOp
imm2	src/arch/arm/insts/misc.hh	/^    uint64_t imm2;$/;"	m	class:RegImmImmOp
imm2	src/arch/arm/insts/misc.hh	/^    uint64_t imm2;$/;"	m	class:RegRegImmImmOp
imm2	src/arch/arm/insts/misc64.hh	/^    uint64_t imm2;$/;"	m	class:RegRegImmImmOp64
imm8	src/arch/x86/insts/micromediaop.hh	/^        uint8_t imm8;$/;"	m	class:X86ISA::MediaOpImm
imm8	src/arch/x86/insts/microregop.hh	/^        const uint8_t imm8;$/;"	m	class:X86ISA::RegOpImm
immed11_0	src/arch/arm/types.hh	/^        Bitfield<11, 0>  immed11_0;$/;"	m	namespace:ArmISA
immed23_0	src/arch/arm/types.hh	/^        Bitfield<23, 0>  immed23_0;$/;"	m	namespace:ArmISA
immed7_0	src/arch/arm/types.hh	/^        Bitfield<7,  0>  immed7_0;$/;"	m	namespace:ArmISA
immedHi11_8	src/arch/arm/types.hh	/^        Bitfield<11, 8>  immedHi11_8;$/;"	m	namespace:ArmISA
immedLo3_0	src/arch/arm/types.hh	/^        Bitfield<3,  0>  immedLo3_0;$/;"	m	namespace:ArmISA
immediate	src/arch/x86/types.hh	/^        uint64_t immediate;$/;"	m	struct:X86ISA::ExtMachInst
immediateCollected	src/arch/x86/decoder.hh	/^    int immediateCollected;$/;"	m	class:X86ISA::Decoder
immediateSize	src/arch/x86/decoder.hh	/^    int immediateSize;$/;"	m	class:X86ISA::Decoder
imn	src/dev/pcireg.h	/^        Bitfield<13,9>  imn;$/;"	m	struct:PXCAP
imo	src/arch/arm/miscregs.hh	/^        Bitfield<4>      imo;$/;"	m	namespace:ArmISA
imp	src/python/importer.py	/^        import imp$/;"	i
impl	src/arch/mips/mt_constants.hh	/^    Bitfield<19, 16> impl;$/;"	m	namespace:MipsISA
impl	src/arch/mips/pra_constants.hh	/^    Bitfield<17, 16> impl;$/;"	m	namespace:MipsISA
impl	src/arch/mips/pra_constants.hh	/^    Bitfield<24, 16> impl;$/;"	m	namespace:MipsISA
impl	src/arch/mips/pra_constants.hh	/^    Bitfield<24, 22> impl;$/;"	m	namespace:MipsISA
impl	src/arch/mips/pra_constants.hh	/^    Bitfield<31, 30> impl;$/;"	m	namespace:MipsISA
impl	src/arch/mips/pra_constants.hh	/^    Bitfield<4,  3> impl;$/;"	m	namespace:MipsISA
importer	src/python/importer.py	/^importer = CodeImporter()$/;"	v
importer	src/sim/init.cc	/^EmbeddedPython *EmbeddedPython::importer = NULL;$/;"	m	class:EmbeddedPython	file:
importer	src/sim/init.hh	/^    static EmbeddedPython *importer;$/;"	m	struct:EmbeddedPython
importerModule	src/sim/init.cc	/^PyObject *EmbeddedPython::importerModule = NULL;$/;"	m	class:EmbeddedPython	file:
importerModule	src/sim/init.hh	/^    static PyObject *importerModule;$/;"	m	struct:EmbeddedPython
imr	src/dev/i8254xGBe_defs.hh	/^    uint32_t imr; \/\/ register that contains the current interrupt mask$/;"	m	struct:iGbReg::Regs
imr	src/dev/ns_gige.hh	/^    uint32_t    imr;$/;"	m	struct:dp_regs
imsc	src/dev/arm/pl011.hh	/^    INTREG imsc;$/;"	m	class:Pl011
in	src/dev/terminal.cc	/^Terminal::in()$/;"	f	class:Terminal
inAArch64	src/arch/arm/utility.cc	/^inAArch64(ThreadContext *tc)$/;"	f	namespace:ArmISA
inAddrMap	src/mem/abstract_mem.hh	/^    bool inAddrMap;$/;"	m	class:AbstractMemory
inCache	src/mem/cache/cache.hh	/^    bool inCache(Addr addr, bool is_secure) const {$/;"	f	class:Cache
inCache	src/mem/cache/prefetch/base.cc	/^BasePrefetcher::inCache(Addr addr, bool is_secure)$/;"	f	class:BasePrefetcher
inCache	src/mem/cache/tags/fa_lru.hh	/^    int inCache;$/;"	m	class:FALRUBlk
inDrain	src/dev/copy_engine.cc	/^CopyEngine::CopyEngineChannel::inDrain()$/;"	f	class:CopyEngine::CopyEngineChannel
inFrontEnd	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool inFrontEnd;$/;"	m	class:InOrderDynInst
inMissQueue	src/mem/cache/cache.hh	/^    bool inMissQueue(Addr addr, bool is_secure) const {$/;"	f	class:Cache
inMissQueue	src/mem/cache/prefetch/base.cc	/^BasePrefetcher::inMissQueue(Addr addr, bool is_secure)$/;"	f	class:BasePrefetcher
inNetLink	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.hh	/^    NetworkLink_d *inNetLink;$/;"	m	class:NetworkInterface_d
inNetLink	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.hh	/^    NetworkLink *inNetLink;$/;"	m	class:NetworkInterface
inNode_ptr	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.hh	/^    std::vector<MessageBuffer *> inNode_ptr;$/;"	m	class:NetworkInterface_d
inNode_ptr	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.hh	/^    std::vector<MessageBuffer *> inNode_ptr;$/;"	m	class:NetworkInterface
inParallelMode	src/sim/eventq.cc	/^bool inParallelMode = false;$/;"	v
inPrefetch	src/mem/cache/prefetch/base.cc	/^BasePrefetcher::inPrefetch(Addr address, bool is_secure)$/;"	f	class:BasePrefetcher
inPrivilegedMode	src/arch/arm/utility.hh	/^inPrivilegedMode(CPSR cpsr)$/;"	f	namespace:ArmISA
inPrivilegedMode	src/arch/arm/utility.hh	/^inPrivilegedMode(ThreadContext *tc)$/;"	f	namespace:ArmISA
inRetry	src/dev/dma_device.hh	/^    bool inRetry;$/;"	m	class:DmaPort
inScalarBank	src/arch/arm/insts/vfp.hh	/^    inScalarBank(IntRegIndex idx)$/;"	f	class:ArmISA::VfpMacroOp
inSecureState	src/arch/arm/utility.cc	/^inSecureState(ThreadContext *tc)$/;"	f	namespace:ArmISA
inSecureState	src/arch/arm/utility.hh	/^inSecureState(SCR scr, CPSR cpsr)$/;"	f	namespace:ArmISA
inService	src/mem/cache/mshr.hh	/^    bool inService;$/;"	m	class:MSHR
inServiceEntries	src/mem/cache/mshr_queue.hh	/^    int inServiceEntries;$/;"	m	class:MSHRQueue
inUserMode	src/arch/alpha/utility.hh	/^inUserMode(ThreadContext *tc)$/;"	f	namespace:AlphaISA
inUserMode	src/arch/arm/utility.hh	/^inUserMode(CPSR cpsr)$/;"	f	namespace:ArmISA
inUserMode	src/arch/arm/utility.hh	/^inUserMode(ThreadContext *tc)$/;"	f	namespace:ArmISA
inUserMode	src/arch/mips/utility.hh	/^inUserMode(ThreadContext *tc)$/;"	f	namespace:MipsISA
inUserMode	src/arch/power/utility.hh	/^inUserMode(ThreadContext *tc)$/;"	f	namespace:PowerISA
inUserMode	src/arch/sparc/utility.hh	/^inUserMode(ThreadContext *tc)$/;"	f	namespace:SparcISA
inUserMode	src/arch/x86/utility.hh	/^    inUserMode(ThreadContext *tc)$/;"	f	namespace:X86ISA
in_addr_map	src/mem/AbstractMemory.py	/^    in_addr_map = Param.Bool(True, "Memory part of the global address map")$/;"	v	class:AbstractMemory
inc	src/base/statistics.hh	/^    void inc(Counter val) { data += val; }$/;"	f	class:Stats::StatStor
inc	src/base/statistics.hh	/^    void inc(Counter val) { set(current + val); }$/;"	f	class:Stats::AvgStor
incAccessDepth	src/mem/request.hh	/^    void incAccessDepth() { depth++; }$/;"	f	class:Request
incHitCount	src/mem/cache/base.hh	/^    void incHitCount(PacketPtr pkt)$/;"	f	class:BaseCache
incMissCount	src/mem/cache/base.hh	/^    void incMissCount(PacketPtr pkt)$/;"	f	class:BaseCache
incWorkItemsBegin	src/sim/system.hh	/^    incWorkItemsBegin()$/;"	f	class:System
incWorkItemsEnd	src/sim/system.hh	/^    incWorkItemsEnd()$/;"	f	class:System
includeRE	src/arch/isa_parser.py	/^    includeRE = re.compile(r'^\\s*##include\\s+"(?P<filename>[^"]*)".*$',$/;"	v	class:ISAParser
includeSquashInst	src/cpu/o3/comm.hh	/^    bool includeSquashInst[Impl::MaxThreads];$/;"	m	struct:DefaultIEWDefaultCommit
incoming_link	src/mem/ruby/slicc_interface/NetworkMessage.hh	/^    int incoming_link;$/;"	m	class:NetworkMessage
incr	src/kern/tru64/tru64.hh	/^        size_t  incr;           \/\/!< growth increment$/;"	m	struct:Tru64::vm_stack
incrFullStat	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::incrFullStat(const FullSource &source)$/;"	f	class:DefaultRename
incrInstSeqNum	src/cpu/inorder/cpu.hh	/^    void incrInstSeqNum(ThreadID tid)$/;"	f	class:InOrderCPU
incrLdIdx	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::incrLdIdx(int &load_idx) const$/;"	f	class:LSQUnit
incrLdIdx	src/cpu/ozone/lsq_unit_impl.hh	/^OzoneLSQ<Impl>::incrLdIdx(int &load_idx)$/;"	f	class:OzoneLSQ
incrStIdx	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::incrStIdx(int &store_idx) const$/;"	f	class:LSQUnit
incrStIdx	src/cpu/ozone/lsq_unit_impl.hh	/^OzoneLSQ<Impl>::incrStIdx(int &store_idx)$/;"	f	class:OzoneLSQ
incrTos	src/cpu/pred/ras.hh	/^    inline void incrTos()$/;"	f	class:ReturnAddrStack
incrWb	src/cpu/o3/iew.hh	/^    void incrWb(InstSeqNum &sn)$/;"	f	class:DefaultIEW
incref	src/base/refcnt.hh	/^    void incref() { ++count; }$/;"	f	class:RefCounted
incref	src/python/swig/pyevent.hh	/^    void incref() { Py_INCREF(object); }$/;"	f	class:PythonEvent
increment	src/cpu/pred/sat_counter.hh	/^    void increment()$/;"	f	class:SatCounter
increment	src/mem/ruby/filters/BlockBloomFilter.cc	/^BlockBloomFilter::increment(const Address& addr)$/;"	f	class:BlockBloomFilter
increment	src/mem/ruby/filters/BulkBloomFilter.cc	/^BulkBloomFilter::increment(const Address& addr)$/;"	f	class:BulkBloomFilter
increment	src/mem/ruby/filters/GenericBloomFilter.cc	/^GenericBloomFilter::increment(const Address& addr)$/;"	f	class:GenericBloomFilter
increment	src/mem/ruby/filters/H3BloomFilter.cc	/^H3BloomFilter::increment(const Address& addr)$/;"	f	class:H3BloomFilter
increment	src/mem/ruby/filters/LSB_CountingBloomFilter.cc	/^LSB_CountingBloomFilter::increment(const Address& addr)$/;"	f	class:LSB_CountingBloomFilter
increment	src/mem/ruby/filters/MultiBitSelBloomFilter.cc	/^MultiBitSelBloomFilter::increment(const Address& addr)$/;"	f	class:MultiBitSelBloomFilter
increment	src/mem/ruby/filters/MultiGrainBloomFilter.cc	/^MultiGrainBloomFilter::increment(const Address& addr)$/;"	f	class:MultiGrainBloomFilter
increment	src/mem/ruby/filters/NonCountingBloomFilter.cc	/^NonCountingBloomFilter::increment(const Address& addr)$/;"	f	class:NonCountingBloomFilter
incrementCheckCompletions	src/cpu/testers/rubytest/RubyTester.hh	/^    void incrementCheckCompletions() { m_checks_completed++; }$/;"	f	class:RubyTester
incrementCycleCompletions	src/cpu/testers/directedtest/RubyDirectedTester.hh	/^    void incrementCycleCompletions() { m_requests_completed++; }$/;"	f	class:RubyDirectedTester
increment_credit	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.hh	/^    increment_credit(int in_vc, bool free_signal, Cycles curTime)$/;"	f	class:InputUnit_d
increment_credit	src/mem/ruby/network/garnet/fixed-pipeline/OutVcState_d.hh	/^    inline void increment_credit()  { m_credit_count++; }$/;"	f	class:OutVcState_d
increment_credit	src/mem/ruby/network/garnet/fixed-pipeline/VirtualChannel_d.hh	/^    inline void increment_credit()          { m_credit_count++; }$/;"	f	class:VirtualChannel_d
increment_injected_flits	src/mem/ruby/network/garnet/BaseGarnetNetwork.hh	/^    void increment_injected_flits(int vnet) { m_flits_injected[vnet]++; }$/;"	f	class:BaseGarnetNetwork
increment_network_latency	src/mem/ruby/network/garnet/BaseGarnetNetwork.hh	/^    increment_network_latency(Cycles latency, int vnet)$/;"	f	class:BaseGarnetNetwork
increment_queueing_latency	src/mem/ruby/network/garnet/BaseGarnetNetwork.hh	/^    increment_queueing_latency(Cycles latency, int vnet)$/;"	f	class:BaseGarnetNetwork
increment_received_flits	src/mem/ruby/network/garnet/BaseGarnetNetwork.hh	/^    void increment_received_flits(int vnet) { m_flits_received[vnet]++; }$/;"	f	class:BaseGarnetNetwork
incremental	src/base/vnc/vncinput.hh	/^        uint8_t incremental;$/;"	m	struct:VncInput::FrameBufferUpdateReq
indent	src/arch/isa_parser.py	/^def indent(s):$/;"	f
indent	src/python/m5/util/code_formatter.py	/^    def indent(self, count=1):$/;"	m	class:code_formatter
indent_lines	src/python/m5/util/code_formatter.py	/^                def indent_lines(gen):$/;"	f	function:code_formatter.__call__.convert
index	src/arch/alpha/tlb.cc	/^TLB::index(bool advance)$/;"	f	class:AlphaISA::TLB
index	src/arch/arm/insts/macromem.hh	/^    uint8_t eSize, dataSize, numStructElems, index;$/;"	m	class:ArmISA::VldSingleOp64
index	src/arch/arm/insts/macromem.hh	/^    uint8_t eSize, dataSize, numStructElems, index;$/;"	m	class:ArmISA::VstSingleOp64
index	src/arch/arm/insts/mem.hh	/^    IntRegIndex index;$/;"	m	class:ArmISA::MemoryReg
index	src/arch/arm/isa.hh	/^            uint32_t index;$/;"	m	struct:ArmISA::ISA::MiscRegInitializerEntry
index	src/arch/mips/pra_constants.hh	/^    Bitfield<22, 0>  index;$/;"	m	namespace:MipsISA
index	src/arch/mips/pra_constants.hh	/^    Bitfield<30, 0> index;$/;"	m	namespace:MipsISA
index	src/arch/mips/tlb.cc	/^TLB::index(bool advance)$/;"	f	class:TLB
index	src/arch/power/tlb.cc	/^TLB::index(bool advance)$/;"	f	class:TLB
index	src/arch/x86/emulenv.hh	/^        RegIndex index;$/;"	m	struct:X86ISA::EmulEnv
index	src/arch/x86/insts/microldstop.hh	/^        const RegIndex index;$/;"	m	class:X86ISA::LdStOp
index	src/arch/x86/types.hh	/^        Bitfield<5,3> index;$/;"	m	namespace:X86ISA
index	src/base/loader/coff_sym.h	/^    coff_uint   index;  \/* index int sym\/aux\/iss tables *\/$/;"	m	struct:__anon43
index	src/base/loader/coff_sym.h	/^    unsigned    index : 20; \/* index int sym\/aux\/iss tables *\/$/;"	m	struct:__anon42
index	src/base/loader/coff_sym.h	/^    unsigned index : 20;        \/* index into sym\/aux table *\/$/;"	m	struct:ecoff_sym
index	src/base/statistics.hh	/^    off_type index;$/;"	m	class:Stats::DistProxy
index	src/base/statistics.hh	/^    off_type index;$/;"	m	class:Stats::ScalarProxy
index	src/cpu/simple/timing.hh	/^        int index;$/;"	m	class:TimingSimpleCPU::SplitFragmentSenderState
index	src/cpu/timebuf.hh	/^        int index;$/;"	m	class:TimeBuffer::wire
index	src/cpu/timebuf.hh	/^    std::vector<char *> index;$/;"	m	class:TimeBuffer
index	src/cpu/translation.hh	/^    int index;$/;"	m	class:DataTranslation
index	src/mem/cache/mshr_queue.hh	/^    const int index;$/;"	m	class:MSHRQueue
indexMask	src/cpu/o3/store_set.hh	/^    int indexMask;$/;"	m	class:StoreSet
indexMask	src/cpu/pred/2bit_local.hh	/^    unsigned indexMask;$/;"	m	class:LocalBP
indexNil	src/base/loader/coff_sym.h	/^#define indexNil /;"	d
indirectSyscallFunc	src/kern/tru64/tru64.hh	/^    indirectSyscallFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	class:Tru64
inflight	src/arch/x86/pagetable_walker.hh	/^            unsigned inflight;$/;"	m	class:X86ISA::Walker::WalkerState
info	src/arch/x86/bios/intelmp.hh	/^    uint8_t info;$/;"	m	class:X86ISA::IntelMP::BusHierarchy
info	src/base/statistics.cc	/^InfoAccess::info() const$/;"	f	class:Stats::InfoAccess
info	src/base/statistics.cc	/^InfoAccess::info()$/;"	f	class:Stats::InfoAccess
info	src/base/statistics.hh	/^    info() const$/;"	f	class:Stats::DataWrap
info	src/base/statistics.hh	/^    info()$/;"	f	class:Stats::DataWrap
info	src/python/m5/main.py	/^    import info$/;"	i
info_verbose	src/base/misc.cc	/^bool info_verbose = false;$/;"	v
inform	src/base/misc.hh	/^#define inform(/;"	d
inform	src/python/m5/util/__init__.py	/^def inform(fmt, *args):$/;"	f
inform_once	src/base/misc.hh	/^#define inform_once(/;"	d
ini_str	src/python/m5/SimObject.py	/^    def ini_str(self):$/;"	f
ini_str	src/python/m5/params.py	/^    def ini_str(self):$/;"	m	class:Bool
ini_str	src/python/m5/params.py	/^    def ini_str(self):$/;"	m	class:Clock
ini_str	src/python/m5/params.py	/^    def ini_str(self):$/;"	m	class:EthernetAddr
ini_str	src/python/m5/params.py	/^    def ini_str(self):$/;"	m	class:Frequency
ini_str	src/python/m5/params.py	/^    def ini_str(self):$/;"	m	class:Latency
ini_str	src/python/m5/params.py	/^    def ini_str(self):$/;"	m	class:MemoryBandwidth
ini_str	src/python/m5/params.py	/^    def ini_str(self):$/;"	m	class:NetworkBandwidth
ini_str	src/python/m5/params.py	/^    def ini_str(self):$/;"	m	class:NullSimObject
ini_str	src/python/m5/params.py	/^    def ini_str(self):$/;"	m	class:ParamValue
ini_str	src/python/m5/params.py	/^    def ini_str(self):$/;"	m	class:PortRef
ini_str	src/python/m5/params.py	/^    def ini_str(self):$/;"	m	class:Time
ini_str	src/python/m5/params.py	/^    def ini_str(self):$/;"	m	class:VectorParamValue
ini_str	src/python/m5/params.py	/^    def ini_str(self):$/;"	m	class:VectorPortRef
ini_str	src/python/m5/params.py	/^    def ini_str(self):$/;"	m	class:Voltage
inifile	src/python/swig/pyobject.cc	/^inifile()$/;"	f
init	src/arch/arm/tlb.cc	/^TLB::init()$/;"	f	class:TLB
init	src/arch/x86/interrupts.cc	/^X86ISA::Interrupts::init()$/;"	f	class:X86ISA::Interrupts
init	src/base/random_mt.cc	/^Random::init(uint32_t init_key[], int key_length)$/;"	f	class:Random
init	src/base/random_mt.cc	/^Random::init(uint32_t s)$/;"	f	class:Random
init	src/base/statistics.hh	/^    init(Counter min, Counter max, Counter bkt)$/;"	f	class:Stats::Distribution
init	src/base/statistics.hh	/^    init(size_type _x, size_type _y)$/;"	f	class:Stats::Vector2dBase
init	src/base/statistics.hh	/^    init(size_type size)$/;"	f	class:Stats::Histogram
init	src/base/statistics.hh	/^    init(size_type size)$/;"	f	class:Stats::SparseHistogram
init	src/base/statistics.hh	/^    init(size_type size)$/;"	f	class:Stats::VectorAverageDeviation
init	src/base/statistics.hh	/^    init(size_type size)$/;"	f	class:Stats::VectorBase
init	src/base/statistics.hh	/^    init(size_type size)$/;"	f	class:Stats::VectorStandardDeviation
init	src/base/statistics.hh	/^    init(size_type size, Counter min, Counter max, Counter bkt)$/;"	f	class:Stats::VectorDistribution
init	src/base/stats/info.hh	/^const FlagsType init =          0x0001;$/;"	m	namespace:Stats
init	src/base/stats/text.cc	/^DistPrint::init(const Text *text, const Info &info)$/;"	f	class:Stats::DistPrint
init	src/base/stats/text.cc	/^SparseHistPrint::init(const Text *text, const Info &info)$/;"	f	class:Stats::SparseHistPrint
init	src/cpu/base.cc	/^BaseCPU::init()$/;"	f	class:BaseCPU
init	src/cpu/checker/cpu.cc	/^CheckerCPU::init()$/;"	f	class:CheckerCPU
init	src/cpu/inorder/cpu.cc	/^InOrderCPU::init()$/;"	f	class:InOrderCPU
init	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::init(Params *params)$/;"	f	class:PipelineStage
init	src/cpu/inorder/resource.cc	/^Resource::init()$/;"	f	class:Resource
init	src/cpu/inorder/resource.cc	/^ResourceEvent::init(Resource *res, int slot_idx)$/;"	f	class:ResourceEvent
init	src/cpu/inorder/resource_pool.9stage.cc	/^ResourcePool::init()$/;"	f	class:ResourcePool
init	src/cpu/inorder/resource_pool.cc	/^ResourcePool::init()$/;"	f	class:ResourcePool
init	src/cpu/inorder/resource_sked.cc	/^ResourceSked::init()$/;"	f	class:ResourceSked
init	src/cpu/inorder/resource_sked.hh	/^    void init(ResourceSked* rsked)$/;"	f	class:RSkedIt
init	src/cpu/inorder/resources/cache_unit.cc	/^CacheUnit::init()$/;"	f	class:CacheUnit
init	src/cpu/inorder/resources/fetch_seq_unit.cc	/^FetchSeqUnit::init()$/;"	f	class:FetchSeqUnit
init	src/cpu/inorder/resources/mult_div_unit.cc	/^MultDivUnit::init()$/;"	f	class:MultDivUnit
init	src/cpu/inorder/resources/tlb_unit.cc	/^TLBUnit::init()$/;"	f	class:TLBUnit
init	src/cpu/inorder/resources/use_def.cc	/^UseDefUnit::init()$/;"	f	class:UseDefUnit
init	src/cpu/kvm/base.cc	/^BaseKvmCPU::init()$/;"	f	class:BaseKvmCPU
init	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::ActivateThreadEvent::init(int thread_num,$/;"	f	class:FullO3CPU::ActivateThreadEvent
init	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::DeallocateContextEvent::init(int thread_num,$/;"	f	class:FullO3CPU::DeallocateContextEvent
init	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::init()$/;"	f	class:FullO3CPU
init	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::init(O3CPU *cpu_ptr, IEW *iew_ptr, DerivO3CPUParams *params,$/;"	f	class:LSQUnit
init	src/cpu/o3/mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::init(DerivO3CPUParams *params, ThreadID tid)$/;"	f	class:MemDepUnit
init	src/cpu/o3/rename_map.cc	/^SimpleRenameMap::init(unsigned size, SimpleFreeList *_freeList,$/;"	f	class:SimpleRenameMap
init	src/cpu/o3/rename_map.cc	/^UnifiedRenameMap::init(PhysRegFile *_regFile,$/;"	f	class:UnifiedRenameMap
init	src/cpu/o3/store_set.cc	/^StoreSet::init(uint64_t clear_period, int _SSIT_size, int _LFST_size)$/;"	f	class:StoreSet
init	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::init()$/;"	f	class:OzoneCPU
init	src/cpu/ozone/lsq_unit_impl.hh	/^OzoneLSQ<Impl>::init(Params *params, unsigned maxLQEntries,$/;"	f	class:OzoneLSQ
init	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::init(Params *params, unsigned maxLQEntries,$/;"	f	class:OzoneLWLSQ
init	src/cpu/pred/ras.cc	/^ReturnAddrStack::init(unsigned _numEntries)$/;"	f	class:ReturnAddrStack
init	src/cpu/simple/atomic.cc	/^AtomicSimpleCPU::init()$/;"	f	class:AtomicSimpleCPU
init	src/cpu/simple/timing.cc	/^TimingSimpleCPU::init()$/;"	f	class:TimingSimpleCPU
init	src/cpu/testers/directedtest/RubyDirectedTester.cc	/^RubyDirectedTester::init()$/;"	f	class:RubyDirectedTester
init	src/cpu/testers/memtest/memtest.cc	/^MemTest::init()$/;"	f	class:MemTest
init	src/cpu/testers/networktest/networktest.cc	/^NetworkTest::init()$/;"	f	class:NetworkTest
init	src/cpu/testers/rubytest/RubyTester.cc	/^RubyTester::init()$/;"	f	class:RubyTester
init	src/cpu/testers/traffic_gen/generators.cc	/^TraceGen::InputStream::init()$/;"	f	class:TraceGen::InputStream
init	src/cpu/testers/traffic_gen/traffic_gen.cc	/^TrafficGen::init()$/;"	f	class:TrafficGen
init	src/dev/alpha/tsunami.cc	/^Tsunami::init()$/;"	f	class:Tsunami
init	src/dev/dma_device.cc	/^DmaDevice::init()$/;"	f	class:DmaDevice
init	src/dev/etherdump.cc	/^EtherDump::init()$/;"	f	class:EtherDump
init	src/dev/i8254xGBe.cc	/^IGbE::init()$/;"	f	class:IGbE
init	src/dev/io_device.cc	/^PioDevice::init()$/;"	f	class:PioDevice
init	src/dev/pcidev.cc	/^PciDevice::init()$/;"	f	class:PciDevice
init	src/dev/x86/i82094aa.cc	/^X86ISA::I82094AA::init()$/;"	f	class:X86ISA::I82094AA
init	src/dev/x86/intdev.cc	/^X86ISA::IntDevice::init()$/;"	f	class:X86ISA::IntDevice
init	src/dev/x86/pc.cc	/^Pc::init()$/;"	f	class:Pc
init	src/mem/addr_mapper.cc	/^AddrMapper::init()$/;"	f	class:AddrMapper
init	src/mem/bridge.cc	/^Bridge::init()$/;"	f	class:Bridge
init	src/mem/bus.cc	/^BaseBus::init()$/;"	f	class:BaseBus
init	src/mem/cache/base.cc	/^BaseCache::init()$/;"	f	class:BaseCache
init	src/mem/coherent_bus.cc	/^CoherentBus::init()$/;"	f	class:CoherentBus
init	src/mem/comm_monitor.cc	/^CommMonitor::init()$/;"	f	class:CommMonitor
init	src/mem/dram_ctrl.cc	/^DRAMCtrl::init()$/;"	f	class:DRAMCtrl
init	src/mem/dramsim2.cc	/^DRAMSim2::init()$/;"	f	class:DRAMSim2
init	src/mem/ruby/network/BasicLink.cc	/^BasicLink::init()$/;"	f	class:BasicLink
init	src/mem/ruby/network/BasicRouter.cc	/^BasicRouter::init()$/;"	f	class:BasicRouter
init	src/mem/ruby/network/Network.cc	/^Network::init()$/;"	f	class:Network
init	src/mem/ruby/network/garnet/BaseGarnetNetwork.cc	/^BaseGarnetNetwork::init()$/;"	f	class:BaseGarnetNetwork
init	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.cc	/^GarnetExtLink_d::init()$/;"	f	class:GarnetExtLink_d
init	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.cc	/^GarnetIntLink_d::init()$/;"	f	class:GarnetIntLink_d
init	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.cc	/^GarnetNetwork_d::init()$/;"	f	class:GarnetNetwork_d
init	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.cc	/^NetworkInterface_d::init()$/;"	f	class:NetworkInterface_d
init	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.cc	/^Router_d::init()$/;"	f	class:Router_d
init	src/mem/ruby/network/garnet/fixed-pipeline/SWallocator_d.cc	/^SWallocator_d::init()$/;"	f	class:SWallocator_d
init	src/mem/ruby/network/garnet/fixed-pipeline/Switch_d.cc	/^Switch_d::init()$/;"	f	class:Switch_d
init	src/mem/ruby/network/garnet/fixed-pipeline/VCallocator_d.cc	/^VCallocator_d::init()$/;"	f	class:VCallocator_d
init	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.cc	/^GarnetExtLink::init()$/;"	f	class:GarnetExtLink
init	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.cc	/^GarnetIntLink::init()$/;"	f	class:GarnetIntLink
init	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.cc	/^GarnetNetwork::init()$/;"	f	class:GarnetNetwork
init	src/mem/ruby/network/orion/Allocator/MatrixArbiter.cc	/^void MatrixArbiter::init(const string& ff_model_str_)$/;"	f	class:MatrixArbiter
init	src/mem/ruby/network/orion/Allocator/RRArbiter.cc	/^void RRArbiter::init(const string& ff_model_str_)$/;"	f	class:RRArbiter
init	src/mem/ruby/network/orion/Buffer/AmpUnit.cc	/^void AmpUnit::init()$/;"	f	class:AmpUnit
init	src/mem/ruby/network/orion/Buffer/BitlineUnit.cc	/^void BitlineUnit::init()$/;"	f	class:BitlineUnit
init	src/mem/ruby/network/orion/Buffer/Buffer.cc	/^void Buffer::init()$/;"	f	class:Buffer
init	src/mem/ruby/network/orion/Buffer/DecoderUnit.cc	/^void DecoderUnit::init()$/;"	f	class:DecoderUnit
init	src/mem/ruby/network/orion/Buffer/MemUnit.cc	/^void MemUnit::init()$/;"	f	class:MemUnit
init	src/mem/ruby/network/orion/Buffer/OutdrvUnit.cc	/^void OutdrvUnit::init()$/;"	f	class:OutdrvUnit
init	src/mem/ruby/network/orion/Buffer/PrechargeUnit.cc	/^void PrechargeUnit::init()$/;"	f	class:PrechargeUnit
init	src/mem/ruby/network/orion/Buffer/Register.cc	/^void Register::init()$/;"	f	class:Register
init	src/mem/ruby/network/orion/Buffer/SRAM.cc	/^void SRAM::init()$/;"	f	class:SRAM
init	src/mem/ruby/network/orion/Buffer/WordlineUnit.cc	/^void WordlineUnit::init()$/;"	f	class:WordlineUnit
init	src/mem/ruby/network/orion/Clock.cc	/^void Clock::init()$/;"	f	class:Clock
init	src/mem/ruby/network/orion/Crossbar/MatrixCrossbar.cc	/^void MatrixCrossbar::init()$/;"	f	class:MatrixCrossbar
init	src/mem/ruby/network/orion/Crossbar/MultreeCrossbar.cc	/^void MultreeCrossbar::init()$/;"	f	class:MultreeCrossbar
init	src/mem/ruby/network/orion/FlipFlop.cc	/^void FlipFlop::init()$/;"	f	class:FlipFlop
init	src/mem/ruby/network/orion/OrionLink.cc	/^void OrionLink::init()$/;"	f	class:OrionLink
init	src/mem/ruby/network/orion/OrionRouter.cc	/^void OrionRouter::init()$/;"	f	class:OrionRouter
init	src/mem/ruby/network/orion/TechParameter.cc	/^void TechParameter::init()$/;"	f	class:TechParameter
init	src/mem/ruby/network/orion/Wire.cc	/^void Wire::init()$/;"	f	class:Wire
init	src/mem/ruby/network/simple/PerfectSwitch.cc	/^PerfectSwitch::init(SimpleNetwork *network_ptr)$/;"	f	class:PerfectSwitch
init	src/mem/ruby/network/simple/SimpleNetwork.cc	/^SimpleNetwork::init()$/;"	f	class:SimpleNetwork
init	src/mem/ruby/network/simple/Switch.cc	/^Switch::init()$/;"	f	class:Switch
init	src/mem/ruby/network/simple/Throttle.cc	/^Throttle::init(NodeID node, Cycles link_latency,$/;"	f	class:Throttle
init	src/mem/ruby/slicc_interface/AbstractController.cc	/^AbstractController::init()$/;"	f	class:AbstractController
init	src/mem/ruby/system/CacheMemory.cc	/^CacheMemory::init()$/;"	f	class:CacheMemory
init	src/mem/ruby/system/DMASequencer.cc	/^DMASequencer::init()$/;"	f	class:DMASequencer
init	src/mem/ruby/system/DirectoryMemory.cc	/^DirectoryMemory::init()$/;"	f	class:DirectoryMemory
init	src/mem/ruby/system/RubyMemoryControl.cc	/^RubyMemoryControl::init()$/;"	f	class:RubyMemoryControl
init	src/mem/ruby/system/RubyPort.cc	/^RubyPort::init()$/;"	f	class:RubyPort
init	src/mem/ruby/system/RubyPortProxy.cc	/^RubyPortProxy::init()$/;"	f	class:RubyPortProxy
init	src/mem/ruby/system/WireBuffer.cc	/^WireBuffer::init()$/;"	f	class:WireBuffer
init	src/mem/simple_mem.cc	/^SimpleMemory::init()$/;"	f	class:SimpleMemory
init	src/sim/sim_object.cc	/^SimObject::init()$/;"	f	class:SimObject
init	src/sim/system.cc	/^System::init()$/;"	f	class:System
init	src/unittest/stattest.cc	/^StatTest::init()$/;"	f	class:StatTest
initAll	src/sim/init.cc	/^EmbeddedPython::initAll()$/;"	f	class:EmbeddedPython
initAll	src/sim/init.cc	/^EmbeddedSwig::initAll()$/;"	f	class:EmbeddedSwig
initCPU	src/arch/alpha/ev5.cc	/^initCPU(ThreadContext *tc, int cpuId)$/;"	f	namespace:AlphaISA
initCPU	src/arch/arm/utility.cc	/^initCPU(ThreadContext *tc, int cpuId)$/;"	f	namespace:ArmISA
initCPU	src/arch/mips/utility.cc	/^initCPU(ThreadContext *tc, int cpuId)$/;"	f	namespace:MipsISA
initCPU	src/arch/power/utility.cc	/^initCPU(ThreadContext *tc, int cpuId)$/;"	f	namespace:PowerISA
initCPU	src/arch/sparc/utility.cc	/^initCPU(ThreadContext *tc, int cpuId)$/;"	f	namespace:SparcISA
initCPU	src/arch/x86/utility.cc	/^void initCPU(ThreadContext *tc, int cpuId)$/;"	f	namespace:X86ISA
initControlWord	src/dev/x86/i8259.hh	/^    int initControlWord;$/;"	m	class:X86ISA::I8259
initFreeList	src/cpu/o3/regfile.cc	/^PhysRegFile::initFreeList(UnifiedFreeList *freeList)$/;"	f	class:PhysRegFile
initFunc	src/sim/init.hh	/^    void (*initFunc)();$/;"	m	struct:EmbeddedSwig
initIPRs	src/arch/alpha/ev5.cc	/^initIPRs(ThreadContext *tc, int cpuId)$/;"	f	namespace:AlphaISA
initInstPtrs	src/cpu/ozone/dyn_inst_impl.hh	/^OzoneDynInst<Impl>::initInstPtrs()$/;"	f	class:OzoneDynInst
initM5Python	src/sim/init.cc	/^initM5Python()$/;"	f
initMemProxies	src/cpu/checker/thread_context.hh	/^    void initMemProxies(ThreadContext *tc)$/;"	f	class:CheckerThreadContext
initMemProxies	src/cpu/inorder/thread_context.hh	/^    void initMemProxies(ThreadContext *tc)$/;"	f	class:InOrderThreadContext
initMemProxies	src/cpu/o3/thread_context.hh	/^    virtual void initMemProxies(ThreadContext *tc)$/;"	f	class:O3ThreadContext
initMemProxies	src/cpu/thread_context.hh	/^    void initMemProxies(ThreadContext *tc) { actualTC->initMemProxies(tc); }$/;"	f	class:ProxyThreadContext
initMemProxies	src/cpu/thread_state.cc	/^ThreadState::initMemProxies(ThreadContext *tc)$/;"	f	class:ThreadState
initNetworkPtr	src/mem/ruby/slicc_interface/AbstractController.hh	/^    void initNetworkPtr(Network* net_ptr) { m_net_ptr = net_ptr; }$/;"	f	class:AbstractController
initParam	src/sim/pseudo_inst.cc	/^initParam(ThreadContext *tc)$/;"	f	namespace:PseudoInst
initSectorTable	src/dev/disk_image.cc	/^CowDiskImage::initSectorTable(int hash_size)$/;"	f	class:CowDiskImage
initSignals	src/sim/init.cc	/^initSignals()$/;"	f
initSimStats	src/python/m5/stats/__init__.py	/^def initSimStats():$/;"	f
initSimStats	src/sim/stat_control.cc	/^initSimStats()$/;"	f	namespace:Stats
initSlots	src/cpu/inorder/resource.cc	/^Resource::initSlots()$/;"	f	class:Resource
initState	src/arch/alpha/linux/system.cc	/^LinuxAlphaSystem::initState()$/;"	f	class:LinuxAlphaSystem
initState	src/arch/alpha/process.cc	/^AlphaLiveProcess::initState()$/;"	f	class:AlphaLiveProcess
initState	src/arch/alpha/system.cc	/^AlphaSystem::initState()$/;"	f	class:AlphaSystem
initState	src/arch/arm/linux/process.cc	/^ArmLinuxProcess32::initState()$/;"	f	class:ArmLinuxProcess32
initState	src/arch/arm/linux/process.cc	/^ArmLinuxProcess64::initState()$/;"	f	class:ArmLinuxProcess64
initState	src/arch/arm/linux/system.cc	/^LinuxArmSystem::initState()$/;"	f	class:LinuxArmSystem
initState	src/arch/arm/process.cc	/^ArmLiveProcess32::initState()$/;"	f	class:ArmLiveProcess32
initState	src/arch/arm/process.cc	/^ArmLiveProcess64::initState()$/;"	f	class:ArmLiveProcess64
initState	src/arch/arm/system.cc	/^ArmSystem::initState()$/;"	f	class:ArmSystem
initState	src/arch/mips/process.cc	/^MipsLiveProcess::initState()$/;"	f	class:MipsLiveProcess
initState	src/arch/power/linux/process.cc	/^PowerLinuxProcess::initState()$/;"	f	class:PowerLinuxProcess
initState	src/arch/power/process.cc	/^PowerLiveProcess::initState()$/;"	f	class:PowerLiveProcess
initState	src/arch/sparc/process.cc	/^Sparc32LiveProcess::initState()$/;"	f	class:Sparc32LiveProcess
initState	src/arch/sparc/process.cc	/^Sparc64LiveProcess::initState()$/;"	f	class:Sparc64LiveProcess
initState	src/arch/sparc/process.cc	/^SparcLiveProcess::initState()$/;"	f	class:SparcLiveProcess
initState	src/arch/sparc/system.cc	/^SparcSystem::initState()$/;"	f	class:SparcSystem
initState	src/arch/x86/linux/system.cc	/^LinuxX86System::initState()$/;"	f	class:LinuxX86System
initState	src/arch/x86/pagetable_walker.cc	/^Walker::WalkerState::initState(ThreadContext * _tc,$/;"	f	class:X86ISA::Walker::WalkerState
initState	src/arch/x86/process.cc	/^I386LiveProcess::initState()$/;"	f	class:I386LiveProcess
initState	src/arch/x86/process.cc	/^X86_64LiveProcess::initState()$/;"	f	class:X86_64LiveProcess
initState	src/arch/x86/system.cc	/^X86System::initState()$/;"	f	class:X86System
initState	src/cpu/testers/traffic_gen/traffic_gen.cc	/^TrafficGen::initState()$/;"	f	class:TrafficGen
initState	src/sim/process.cc	/^Process::initState()$/;"	f	class:Process
initState	src/sim/root.cc	/^Root::initState()$/;"	f	class:Root
initState	src/sim/sim_object.cc	/^SimObject::initState()$/;"	f	class:SimObject
initState	src/sim/system.cc	/^System::initState()$/;"	f	class:System
initSummary	src/mem/ruby/profiler/StoreTrace.cc	/^StoreTrace::initSummary()$/;"	f	class:StoreTrace
initText	src/base/stats/text.cc	/^initText(const string &filename, bool desc)$/;"	f	namespace:Stats
initText	src/python/m5/stats/__init__.py	/^def initText(filename, desc=True):$/;"	f
initVars	src/cpu/base_dyn_inst_impl.hh	/^BaseDynInst<Impl>::initVars()$/;"	f	class:BaseDynInst
initVars	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::initVars()$/;"	f	class:InOrderDynInst
initVars	src/cpu/o3/dyn_inst_impl.hh	/^BaseO3DynInst<Impl>::initVars()$/;"	f	class:BaseO3DynInst
initVector	src/arch/x86/interrupts.hh	/^    uint8_t initVector;$/;"	m	class:X86ISA::Interrupts
initVirtMem	src/sim/process.hh	/^    SETranslatingPortProxy initVirtMem;$/;"	m	class:Process
init_keywords	src/python/m5/SimObject.py	/^    init_keywords = { 'abstract' : bool,$/;"	v	class:MetaSimObject
init_module	src/kern/linux/linux_syscalls.hh	/^    init_module = 94,$/;"	e	enum:SystemCalls::__anon87
init_net_ptr	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.hh	/^    void init_net_ptr(GarnetNetwork_d *net_ptr) { m_net_ptr = net_ptr; }$/;"	f	class:NetworkInterface_d
init_net_ptr	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    void init_net_ptr(GarnetNetwork_d* net_ptr) $/;"	f	class:Router_d
init_net_ptr	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.hh	/^    void init_net_ptr(GarnetNetwork* net_ptr) { m_net_ptr = net_ptr; }$/;"	f	class:NetworkInterface
init_net_ptr	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.hh	/^    void init_net_ptr(GarnetNetwork* net_ptr) { m_net_ptr = net_ptr; }$/;"	f	class:NetworkLink
init_net_ptr	src/mem/ruby/network/garnet/flexible-pipeline/Router.hh	/^    void init_net_ptr(GarnetNetwork* net_ptr) $/;"	f	class:Router
init_net_ptr	src/mem/ruby/network/simple/Switch.hh	/^    void init_net_ptr(SimpleNetwork* net_ptr) { m_network_ptr = net_ptr; }$/;"	f	class:Switch
init_param	src/sim/System.py	/^    init_param = Param.UInt64(0, "numerical value to pass into simulator")$/;"	v
init_param	src/sim/system.hh	/^    uint64_t init_param;$/;"	m	class:System
init_process	src/kern/tru64/tru64_syscalls.hh	/^        init_process = 41,$/;"	e	enum:SystemCalls::__anon103
init_tech_110_800	src/mem/ruby/network/orion/TechParameter.cc	/^void TechParameter::init_tech_110_800()$/;"	f	class:TechParameter
init_tech_32_90	src/mem/ruby/network/orion/TechParameter.cc	/^void TechParameter::init_tech_32_90()$/;"	f	class:TechParameter
init_thread_context	src/kern/tru64/tru64.hh	/^    init_thread_context(LiveProcess *process, ThreadContext *tc,$/;"	f	class:Tru64
initialApicId	src/arch/x86/interrupts.hh	/^    int initialApicId;$/;"	m	class:X86ISA::Interrupts
initialApicId	src/dev/x86/i82094aa.hh	/^    uint8_t initialApicId;$/;"	m	class:X86ISA::I82094AA
initialVal	src/cpu/pred/sat_counter.hh	/^    uint8_t initialVal;$/;"	m	class:SatCounter
initial_count	src/dev/intel_8254_timer.hh	/^        uint16_t initial_count;$/;"	m	class:Intel8254Timer::Counter
initializeIprTable	src/arch/alpha/ipr.cc	/^initializeIprTable()$/;"	f	namespace:AlphaISA
initializeStream	src/mem/ruby/structures/Prefetcher.cc	/^Prefetcher::initializeStream(const Address& address, int stride,$/;"	f	class:Prefetcher
initialized	src/dev/disk_image.hh	/^    bool initialized;$/;"	m	class:DiskImage
initialized	src/sim/eventq.hh	/^    initialized() const$/;"	f	class:Event
initiate	src/cpu/testers/directedtest/InvalidateGenerator.cc	/^InvalidateGenerator::initiate()$/;"	f	class:InvalidateGenerator
initiate	src/cpu/testers/directedtest/SeriesRequestGenerator.cc	/^SeriesRequestGenerator::initiate()$/;"	f	class:SeriesRequestGenerator
initiate	src/cpu/testers/rubytest/Check.cc	/^Check::initiate()$/;"	f	class:Check
initiateAcc	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::initiateAcc()$/;"	f	class:InOrderDynInst
initiateAcc	src/cpu/o3/dyn_inst_impl.hh	/^BaseO3DynInst<Impl>::initiateAcc()$/;"	f	class:BaseO3DynInst
initiateAcc	src/cpu/ozone/dyn_inst_impl.hh	/^OzoneDynInst<Impl>::initiateAcc()$/;"	f	class:OzoneDynInst
initiateAction	src/cpu/testers/rubytest/Check.cc	/^Check::initiateAction()$/;"	f	class:Check
initiateCheck	src/cpu/testers/rubytest/Check.cc	/^Check::initiateCheck()$/;"	f	class:Check
initiateFlush	src/cpu/testers/rubytest/Check.cc	/^Check::initiateFlush()$/;"	f	class:Check
initiatePrefetch	src/cpu/testers/rubytest/Check.cc	/^Check::initiatePrefetch()$/;"	f	class:Check
initiateTranslation	src/cpu/base_dyn_inst.hh	/^BaseDynInst<Impl>::initiateTranslation(RequestPtr req, RequestPtr sreqLow,$/;"	f	class:BaseDynInst
initm5	src/sim/init.cc	/^initm5(void)$/;"	f
injRate	src/cpu/testers/networktest/networktest.hh	/^    double injRate;$/;"	m	class:NetworkTest
inj_rate	src/cpu/testers/networktest/NetworkTest.py	/^    inj_rate = Param.Float(0.1, "Packet injection rate")$/;"	v	class:NetworkTest
inline	src/mem/slicc/ast/ExprAST.py	/^    def inline(self, get_type=False):$/;"	m	class:ExprAST
innerAttrs	src/arch/arm/pagetable.hh	/^    uint8_t innerAttrs;$/;"	m	struct:ArmISA::TlbEntry
ino_t	src/kern/solaris/solaris.hh	/^    typedef uint64_t ino_t;$/;"	t	class:Solaris
ino_t	src/kern/tru64/tru64.hh	/^    typedef uint32_t ino_t;$/;"	t	class:Tru64
input	src/mem/ruby/common/Address.cc	/^Address::input(std::istream& in)$/;"	f	class:Address
input	src/sim/Process.py	/^    input = Param.String('cin', "filename for stdin")$/;"	v	class:Process
inputChar	src/dev/alpha/access.h	/^    uint64_t    inputChar;              \/\/ 68: Placeholder for input$/;"	m	struct:AlphaAccess
inputChar	src/dev/mips/access.h	/^    uint32_t    inputChar;              \/\/ 00: Placeholder for input$/;"	m	struct:MipsAccess
inputFull	src/dev/x86/i8042.hh	/^        Bitfield<1> inputFull;$/;"	m	class:X86ISA::I8042
inputMode	src/base/vnc/convert.hh	/^    Mode inputMode;$/;"	m	class:VideoConvert
insert	src/arch/alpha/tlb.cc	/^TLB::insert(Addr addr, TlbEntry &entry)$/;"	f	class:AlphaISA::TLB
insert	src/arch/arm/tlb.cc	/^TLB::insert(Addr addr, TlbEntry &entry)$/;"	f	class:TLB
insert	src/arch/mips/tlb.cc	/^TLB::insert(Addr addr, PTE &pte)$/;"	f	class:TLB
insert	src/arch/power/tlb.cc	/^TLB::insert(Addr addr, PowerISA::PTE &pte)$/;"	f	class:TLB
insert	src/arch/sparc/tlb.cc	/^TLB::insert(Addr va, int partition_id, int context_id, bool real,$/;"	f	class:SparcISA::TLB
insert	src/arch/sparc/tlb_map.hh	/^    insert(TlbRange &r, TlbEntry *d)$/;"	f	class:SparcISA::TlbMap
insert	src/arch/x86/tlb.cc	/^TLB::insert(Addr vpn, TlbEntry &entry)$/;"	f	class:X86ISA::TLB
insert	src/base/addr_range_map.hh	/^    insert(const AddrRange &r, const V& d)$/;"	f	class:AddrRangeMap
insert	src/base/loader/symtab.cc	/^SymbolTable::insert(Addr address, string symbol)$/;"	f	class:SymbolTable
insert	src/base/trie.hh	/^    insert(Key key, unsigned width, Value *val)$/;"	f	class:Trie
insert	src/cpu/inorder/reg_dep_map.cc	/^RegDepMap::insert(DynInstPtr inst)$/;"	f	class:RegDepMap
insert	src/cpu/inorder/reg_dep_map.cc	/^RegDepMap::insert(uint8_t reg_type, RegIndex idx, DynInstPtr inst)$/;"	f	class:RegDepMap
insert	src/cpu/inorder/resources/inst_buffer.cc	/^InstBuffer::insert(DynInstPtr inst)$/;"	f	class:InstBuffer
insert	src/cpu/o3/dep_graph.hh	/^DependencyGraph<DynInstPtr>::insert(PhysRegIndex idx, DynInstPtr &new_inst)$/;"	f	class:DependencyGraph
insert	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::insert(DynInstPtr &new_inst)$/;"	f	class:InstructionQueue
insert	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::insert(DynInstPtr &inst)$/;"	f	class:LSQUnit
insert	src/cpu/o3/mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::insert(DynInstPtr &inst)$/;"	f	class:MemDepUnit
insert	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::InstQueue::insert(DynInstPtr &inst)$/;"	f	class:BackEnd::InstQueue
insert	src/cpu/ozone/inst_queue_impl.hh	/^InstQueue<Impl>::insert(DynInstPtr &new_inst)$/;"	f	class:InstQueue
insert	src/cpu/ozone/lsq_unit_impl.hh	/^OzoneLSQ<Impl>::insert(DynInstPtr &inst)$/;"	f	class:OzoneLSQ
insert	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::insert(DynInstPtr &inst)$/;"	f	class:OzoneLWLSQ
insert	src/mem/ruby/network/garnet/fixed-pipeline/flitBuffer_d.hh	/^    insert(flit_d *flt)$/;"	f	class:flitBuffer_d
insert	src/mem/ruby/network/garnet/flexible-pipeline/flitBuffer.cc	/^flitBuffer::insert(flit *flt)$/;"	f	class:flitBuffer
insert	src/sim/eventq.cc	/^EventQueue::insert(Event *event)$/;"	f	class:EventQueue
insertAt	src/arch/mips/tlb.cc	/^TLB::insertAt(PTE &pte, unsigned Index, int _smallPages)$/;"	f	class:TLB
insertAt	src/arch/power/tlb.cc	/^TLB::insertAt(PowerISA::PTE &pte, unsigned Index, int _smallPages)$/;"	f	class:TLB
insertBarrier	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::insertBarrier(DynInstPtr &barr_inst)$/;"	f	class:InstructionQueue
insertBarrier	src/cpu/o3/mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::insertBarrier(DynInstPtr &barr_inst)$/;"	f	class:MemDepUnit
insertBefore	src/sim/eventq.cc	/^Event::insertBefore(Event *event, Event *curr)$/;"	f	class:Event
insertBits	src/base/bitfield.hh	/^insertBits(T val, int bit, B bit_val)$/;"	f
insertBits	src/base/bitfield.hh	/^insertBits(T val, int first, int last, B bit_val)$/;"	f
insertBlock	src/mem/cache/tags/fa_lru.cc	/^FALRU::insertBlock(PacketPtr pkt, FALRU::BlkType *blk)$/;"	f	class:FALRU
insertBlock	src/mem/cache/tags/lru.cc	/^LRU::insertBlock(PacketPtr pkt, BlkType *blk)$/;"	f	class:LRU
insertCRField	src/arch/power/insts/static_inst.hh	/^    insertCRField(uint32_t cr, uint32_t bf, uint32_t value) const$/;"	f	class:PowerISA::PowerStaticInst
insertFlit	src/mem/ruby/network/garnet/fixed-pipeline/VirtualChannel_d.hh	/^    insertFlit(flit_d *t_flit)$/;"	f	class:VirtualChannel_d
insertHardBreak	src/arch/alpha/remote_gdb.cc	/^RemoteGDB::insertHardBreak(Addr addr, size_t len)$/;"	f	class:RemoteGDB
insertHardBreak	src/base/remote_gdb.cc	/^BaseRemoteGDB::insertHardBreak(Addr addr, size_t len)$/;"	f	class:BaseRemoteGDB
insertInst	src/cpu/o3/rob_impl.hh	/^ROB<Impl>::insertInst(DynInstPtr &inst)$/;"	f	class:ROB
insertLoad	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::insertLoad(DynInstPtr &load_inst)$/;"	f	class:LSQ
insertLoad	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::insertLoad(DynInstPtr &load_inst)$/;"	f	class:LSQUnit
insertLoad	src/cpu/o3/store_set.cc	/^StoreSet::insertLoad(Addr load_PC, InstSeqNum load_seq_num)$/;"	f	class:StoreSet
insertLoad	src/cpu/ozone/lsq_unit_impl.hh	/^OzoneLSQ<Impl>::insertLoad(DynInstPtr &load_inst)$/;"	f	class:OzoneLSQ
insertLoad	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::insertLoad(DynInstPtr &load_inst)$/;"	f	class:OzoneLWLSQ
insertNonSpec	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::insertNonSpec(DynInstPtr &new_inst)$/;"	f	class:InstructionQueue
insertNonSpec	src/cpu/o3/mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::insertNonSpec(DynInstPtr &inst)$/;"	f	class:MemDepUnit
insertNonSpec	src/cpu/ozone/inst_queue_impl.hh	/^InstQueue<Impl>::insertNonSpec(DynInstPtr &new_inst)$/;"	f	class:InstQueue
insertRequest	src/mem/ruby/system/Sequencer.cc	/^Sequencer::insertRequest(PacketPtr pkt, RubyRequestType request_type)$/;"	f	class:Sequencer
insertScheduledWakeupTime	src/mem/ruby/common/Consumer.hh	/^    insertScheduledWakeupTime(Tick time)$/;"	f	class:Consumer
insertSoftBreak	src/base/remote_gdb.cc	/^BaseRemoteGDB::insertSoftBreak(Addr addr, size_t len)$/;"	f	class:BaseRemoteGDB
insertStore	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::insertStore(DynInstPtr &store_inst)$/;"	f	class:LSQ
insertStore	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::insertStore(DynInstPtr &store_inst)$/;"	f	class:LSQUnit
insertStore	src/cpu/o3/store_set.cc	/^StoreSet::insertStore(Addr store_PC, InstSeqNum store_seq_num, ThreadID tid)$/;"	f	class:StoreSet
insertStore	src/cpu/ozone/lsq_unit_impl.hh	/^OzoneLSQ<Impl>::insertStore(DynInstPtr &store_inst)$/;"	f	class:OzoneLSQ
insertStore	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::insertStore(DynInstPtr &store_inst)$/;"	f	class:OzoneLWLSQ
insertTableEntry	src/arch/arm/table_walker.cc	/^TableWalker::insertTableEntry(DescriptorBase &descriptor, bool longDescriptor)$/;"	f	class:TableWalker
insertThread	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::insertThread(ThreadID tid)$/;"	f	class:FullO3CPU
insert_flit	src/mem/ruby/network/garnet/fixed-pipeline/OutputUnit_d.hh	/^    insert_flit(flit_d *t_flit)$/;"	f	class:OutputUnit_d
insertedLoads	src/cpu/o3/mem_dep_unit.hh	/^    Stats::Scalar insertedLoads;$/;"	m	class:MemDepUnit
insertedStores	src/cpu/o3/mem_dep_unit.hh	/^    Stats::Scalar insertedStores;$/;"	m	class:MemDepUnit
inserts	src/arch/arm/tlb.hh	/^    mutable Stats::Scalar inserts;$/;"	m	class:ArmISA::TLB
inspect	src/arch/isa_parser.py	/^import inspect, traceback$/;"	i
inspect	src/python/m5/util/code_formatter.py	/^import inspect$/;"	i
inst	src/cpu/inorder/cpu.hh	/^        DynInstPtr inst;$/;"	m	class:InOrderCPU::CPUEvent
inst	src/cpu/inorder/resource.hh	/^    DynInstPtr inst;$/;"	m	class:ResourceRequest
inst	src/cpu/inorder/resource_pool.hh	/^        DynInstPtr inst;$/;"	m	class:ResourcePool::ResPoolEvent
inst	src/cpu/o3/dep_graph.hh	/^    DynInstPtr inst;$/;"	m	class:DependencyEntry
inst	src/cpu/o3/inst_queue.hh	/^        DynInstPtr inst;$/;"	m	class:InstructionQueue::FUCompletion
inst	src/cpu/o3/lsq_unit.hh	/^        DynInstPtr inst;$/;"	m	class:LSQUnit::LSQSenderState
inst	src/cpu/o3/lsq_unit.hh	/^        DynInstPtr inst;$/;"	m	class:LSQUnit::WritebackEvent
inst	src/cpu/o3/lsq_unit.hh	/^        DynInstPtr inst;$/;"	m	struct:LSQUnit::SQEntry
inst	src/cpu/o3/mem_dep_unit.hh	/^        DynInstPtr inst;$/;"	m	class:MemDepUnit::MemDepEntry
inst	src/cpu/ozone/back_end.hh	/^        DynInstPtr inst;$/;"	m	class:BackEnd::LdWritebackEvent
inst	src/cpu/ozone/inorder_back_end.hh	/^        DynInstPtr inst;$/;"	m	class:InorderBackEnd::DCacheCompletionEvent
inst	src/cpu/ozone/inst_queue.hh	/^        DynInstPtr inst;$/;"	m	struct:InstQueue::IQEntry
inst	src/cpu/ozone/lsq_unit.hh	/^        DynInstPtr inst;$/;"	m	struct:OzoneLSQ::SQEntry
inst	src/cpu/ozone/lw_lsq.hh	/^        DynInstPtr inst;$/;"	m	class:OzoneLWLSQ::LSQSenderState
inst	src/cpu/ozone/lw_lsq.hh	/^        DynInstPtr inst;$/;"	m	class:OzoneLWLSQ::WritebackEvent
inst	src/cpu/ozone/lw_lsq.hh	/^        DynInstPtr inst;$/;"	m	struct:OzoneLWLSQ::SQEntry
inst	src/cpu/simple/base.hh	/^    TheISA::MachInst inst;$/;"	m	class:BaseSimpleCPU
instAIWNPC	src/arch/arm/types.hh	/^        instAIWNPC(Addr val)$/;"	f	class:ArmISA::PCState
instAccesses	src/arch/arm/tlb.hh	/^    Stats::Formula instAccesses;$/;"	m	class:ArmISA::TLB
instAddr	src/arch/generic/types.hh	/^    instAddr() const$/;"	f	class:GenericISA::PCStateBase
instAddr	src/cpu/base_dyn_inst.hh	/^    const Addr instAddr() const { return pc.instAddr(); }$/;"	f	class:BaseDynInst
instAddr	src/cpu/checker/cpu.hh	/^    Addr instAddr() { return thread->instAddr(); }$/;"	f	class:CheckerCPU
instAddr	src/cpu/checker/thread_context.hh	/^    Addr instAddr()$/;"	f	class:CheckerThreadContext
instAddr	src/cpu/inorder/cpu.hh	/^    Addr instAddr(ThreadID tid) { return pc[tid].instAddr(); }$/;"	f	class:InOrderCPU
instAddr	src/cpu/inorder/inorder_dyn_inst.hh	/^    const Addr instAddr() { return pc.instAddr(); }$/;"	f	class:InOrderDynInst
instAddr	src/cpu/inorder/thread_context.hh	/^    Addr instAddr()$/;"	f	class:InOrderThreadContext
instAddr	src/cpu/o3/commit.hh	/^    Addr instAddr(ThreadID tid) { return pc[tid].instAddr(); }$/;"	f	class:DefaultCommit
instAddr	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::instAddr(ThreadID tid)$/;"	f	class:FullO3CPU
instAddr	src/cpu/o3/thread_context.hh	/^    virtual Addr instAddr()$/;"	f	class:O3ThreadContext
instAddr	src/cpu/simple/base.hh	/^    Addr instAddr() { return thread->instAddr(); }$/;"	f	class:BaseSimpleCPU
instAddr	src/cpu/simple_thread.hh	/^    instAddr()$/;"	f	class:SimpleThread
instAddr	src/cpu/thread_context.hh	/^    Addr instAddr() { return actualTC->instAddr(); }$/;"	f	class:ProxyThreadContext
instAddr	src/mem/cache/prefetch/stride.hh	/^        Addr instAddr;$/;"	m	class:StridePrefetcher::StrideEntry
instBits	src/arch/arm/types.hh	/^        uint32_t         instBits;$/;"	m	namespace:ArmISA
instBuffer	src/cpu/ozone/front_end.hh	/^    InstBuff instBuffer;$/;"	m	class:FrontEnd
instBufferSize	src/cpu/ozone/front_end.hh	/^    int instBufferSize;$/;"	m	class:FrontEnd
instBytes	src/arch/x86/decoder.hh	/^    InstBytes *instBytes;$/;"	m	class:X86ISA::Decoder
instCacheMap	src/arch/x86/decoder.cc	/^Decoder::InstCacheMap Decoder::instCacheMap;$/;"	m	class:X86ISA::Decoder	file:
instCacheMap	src/arch/x86/decoder.hh	/^    static InstCacheMap instCacheMap;$/;"	m	class:X86ISA::Decoder
instCnt	src/cpu/base.hh	/^    Tick instCnt;$/;"	m	class:BaseCPU
instCount	src/cpu/base.hh	/^    Tick instCount() { return instCnt; }$/;"	f	class:BaseCPU
instDone	src/arch/alpha/decoder.hh	/^    bool instDone;$/;"	m	class:AlphaISA::Decoder
instDone	src/arch/arm/decoder.hh	/^    bool instDone;$/;"	m	class:ArmISA::Decoder
instDone	src/arch/mips/decoder.hh	/^    bool instDone;$/;"	m	class:MipsISA::Decoder
instDone	src/arch/power/decoder.hh	/^    bool instDone;$/;"	m	class:PowerISA::Decoder
instDone	src/arch/sparc/decoder.hh	/^    bool instDone;$/;"	m	class:SparcISA::Decoder
instDone	src/arch/x86/decoder.hh	/^    bool instDone;$/;"	m	class:X86ISA::Decoder
instDone	src/cpu/inorder/cpu.cc	/^InOrderCPU::instDone(DynInstPtr inst, ThreadID tid)$/;"	f	class:InOrderCPU
instDone	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::instDone(ThreadID tid, DynInstPtr &inst)$/;"	f	class:FullO3CPU
instEA	src/cpu/ozone/ea_list.hh	/^    typedef std::pair<InstSeqNum, Addr> instEA;$/;"	t	class:EAList
instEffAddr	src/cpu/base_dyn_inst.hh	/^    Addr instEffAddr;$/;"	m	class:BaseDynInst
instEffAddr	src/cpu/inorder/inorder_dyn_inst.hh	/^    Addr instEffAddr;$/;"	m	class:InOrderDynInst
instEventQueue	src/sim/system.hh	/^    EventQueue instEventQueue;$/;"	m	class:System
instFlagRE	src/arch/isa_parser.py	/^instFlagRE = re.compile(r'Is.*')$/;"	v
instFlags	src/cpu/base_dyn_inst.hh	/^    std::bitset<MaxFlags> instFlags;$/;"	m	class:BaseDynInst
instGraduated	src/cpu/inorder/resource.hh	/^    virtual void instGraduated(InstSeqNum seq_num, ThreadID tid) { }$/;"	f	class:Resource
instGraduated	src/cpu/inorder/resource_pool.9stage.cc	/^ResourcePool::instGraduated(InstSeqNum seq_num, ThreadID tid)$/;"	f	class:ResourcePool
instGraduated	src/cpu/inorder/resource_pool.cc	/^ResourcePool::instGraduated(InstSeqNum seq_num, ThreadID tid)$/;"	f	class:ResourcePool
instGraduated	src/cpu/inorder/resources/branch_predictor.cc	/^BranchPredictor::instGraduated(InstSeqNum seq_num, ThreadID tid)$/;"	f	class:BranchPredictor
instHits	src/arch/arm/tlb.hh	/^    mutable Stats::Scalar instHits;$/;"	m	class:ArmISA::TLB
instIWNPC	src/arch/arm/types.hh	/^        instIWNPC(Addr val)$/;"	f	class:ArmISA::PCState
instIdx	src/cpu/inorder/resources/cache_unit.hh	/^    int instIdx;    $/;"	m	class:CacheRequest
instIdx	src/cpu/inorder/resources/cache_unit.hh	/^    int instIdx;$/;"	m	class:CacheReqPacket
instList	src/cpu/checker/cpu.hh	/^    std::list<DynInstPtr> instList;$/;"	m	class:Checker
instList	src/cpu/inorder/cpu.hh	/^    std::list<DynInstPtr> instList[ThePipeline::MaxThreads];$/;"	m	class:InOrderCPU
instList	src/cpu/inorder/resources/inst_buffer.hh	/^    std::list<DynInstPtr> instList;$/;"	m	class:InstBuffer
instList	src/cpu/inorder/resources/tlb_unit.hh	/^    std::list<DynInstPtr> instList;$/;"	m	class:TLBUnit
instList	src/cpu/o3/cpu.hh	/^    std::list<DynInstPtr> instList;$/;"	m	class:FullO3CPU
instList	src/cpu/o3/inst_queue.hh	/^    std::list<DynInstPtr> instList[Impl::MaxThreads];$/;"	m	class:InstructionQueue
instList	src/cpu/o3/mem_dep_unit.hh	/^    std::list<DynInstPtr> instList[Impl::MaxThreads];$/;"	m	class:MemDepUnit
instList	src/cpu/o3/rob.hh	/^    std::list<DynInstPtr> instList[Impl::MaxThreads];$/;"	m	class:ROB
instList	src/cpu/ozone/back_end.hh	/^    std::list<DynInstPtr> instList;$/;"	m	class:BackEnd
instList	src/cpu/ozone/inorder_back_end.hh	/^    std::list<DynInstPtr> instList;$/;"	m	class:InorderBackEnd
instList	src/cpu/ozone/inst_queue.hh	/^    std::list<DynInstPtr> instList[Impl::MaxThreads];$/;"	m	class:InstQueue
instList	src/cpu/ozone/lw_back_end.hh	/^    std::list<DynInstPtr> instList;$/;"	m	class:LWBackEnd
instListIt	src/cpu/base_dyn_inst.hh	/^    ListIt instListIt;$/;"	m	class:BaseDynInst
instListIt	src/cpu/inorder/inorder_dyn_inst.hh	/^    ListIt instListIt;$/;"	m	class:InOrderDynInst
instMap	src/arch/generic/decode_cache.hh	/^    DecodeCache::InstMap instMap;$/;"	m	class:GenericISA::BasicDecodeCache
instMap	src/arch/x86/decoder.hh	/^    DecodeCache::InstMap *instMap;$/;"	m	class:X86ISA::Decoder
instMasterId	src/cpu/base.hh	/^    MasterID instMasterId() { return _instMasterId; }$/;"	f	class:BaseCPU
instMisses	src/arch/arm/tlb.hh	/^    mutable Stats::Scalar instMisses;$/;"	m	class:ArmISA::TLB
instMnem	src/arch/x86/insts/microop.hh	/^        const char * instMnem;$/;"	m	class:X86ISA::X86MicroopBase
instNPC	src/arch/arm/types.hh	/^        instNPC() const$/;"	f	class:ArmISA::PCState
instNPC	src/arch/arm/types.hh	/^        instNPC(Addr val)$/;"	f	class:ArmISA::PCState
instName	src/cpu/inorder/inorder_dyn_inst.hh	/^    std::string instName()$/;"	f	class:InOrderDynInst
instPC	src/arch/arm/types.hh	/^        instPC() const$/;"	f	class:ArmISA::PCState
instPort	src/cpu/inorder/cpu.hh	/^    CachePort instPort;$/;"	m	class:InOrderCPU
instPort	src/cpu/kvm/base.hh	/^    KVMCpuPort instPort;$/;"	m	class:BaseKvmCPU
instQueue	src/cpu/o3/iew.hh	/^    IQ instQueue;$/;"	m	class:DefaultIEW
instReady	src/arch/alpha/decoder.hh	/^    instReady()$/;"	f	class:AlphaISA::Decoder
instReady	src/arch/arm/decoder.hh	/^    bool instReady() const$/;"	f	class:ArmISA::Decoder
instReady	src/arch/mips/decoder.hh	/^    instReady()$/;"	f	class:MipsISA::Decoder
instReady	src/arch/power/decoder.hh	/^    instReady()$/;"	f	class:PowerISA::Decoder
instReady	src/arch/sparc/decoder.hh	/^    instReady()$/;"	f	class:SparcISA::Decoder
instReady	src/arch/x86/decoder.hh	/^    bool instReady()$/;"	f	class:X86ISA::Decoder
instResult	src/cpu/base_dyn_inst.hh	/^    std::queue<Result> instResult;$/;"	m	class:BaseDynInst
instResult	src/cpu/inorder/inorder_dyn_inst.hh	/^    InstResult instResult[MaxInstDestRegs];$/;"	m	class:InOrderDynInst
instSeqNum	src/cpu/o3/rename.hh	/^        InstSeqNum instSeqNum;$/;"	m	struct:DefaultRename::RenameHistory
instShiftAmt	src/cpu/ozone/OzoneCPU.py	/^    instShiftAmt = Param.Unsigned("Number of bits to shift instructions by")$/;"	v	class:DerivOzoneCPU
instShiftAmt	src/cpu/ozone/SimpleOzoneCPU.py	/^    instShiftAmt = Param.Unsigned("Number of bits to shift instructions by")$/;"	v	class:SimpleOzoneCPU
instShiftAmt	src/cpu/ozone/simple_params.hh	/^    unsigned instShiftAmt;$/;"	m	class:SimpleParams
instShiftAmt	src/cpu/pred/2bit_local.hh	/^    unsigned instShiftAmt;$/;"	m	class:LocalBP
instShiftAmt	src/cpu/pred/BranchPredictor.py	/^    instShiftAmt = Param.Unsigned(2, "Number of bits to shift instructions by")$/;"	v	class:BranchPredictor
instShiftAmt	src/cpu/pred/btb.hh	/^    unsigned instShiftAmt;$/;"	m	class:DefaultBTB
instShiftAmt	src/cpu/pred/tournament.hh	/^    unsigned instShiftAmt;$/;"	m	class:TournamentBP
instSize	src/cpu/inorder/resources/branch_predictor.hh	/^    int instSize;$/;"	m	class:BranchPredictor
instSize	src/cpu/inorder/resources/fetch_seq_unit.hh	/^    unsigned instSize;$/;"	m	class:FetchSeqUnit
instSize	src/cpu/inorder/resources/fetch_unit.hh	/^    int instSize;$/;"	m	class:FetchUnit
instSize	src/cpu/o3/fetch.hh	/^    int instSize;$/;"	m	class:DefaultFetch
instSrc	src/cpu/inorder/inorder_dyn_inst.hh	/^    InstValue instSrc[MaxInstSrcRegs];$/;"	m	class:InOrderDynInst
instTagged	src/mem/cache/prefetch/stride.hh	/^    bool instTagged;$/;"	m	class:StridePrefetcher
instToCommit	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::instToCommit(DynInstPtr &inst)$/;"	f	class:DefaultIEW
instToCommit	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::instToCommit(DynInstPtr &inst)$/;"	f	class:BackEnd
instToCommit	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::instToCommit(DynInstPtr &inst)$/;"	f	class:LWBackEnd
instUnit	src/cpu/inorder/resource_pool.hh	/^    FetchUnit *instUnit;$/;"	m	class:ResourcePool
inst_count	src/cpu/ozone/back_end.hh	/^        Stats::Vector inst_count;$/;"	m	class:BackEnd::InstQueue
inst_tagged	src/mem/cache/prefetch/Prefetcher.py	/^    inst_tagged = Param.Bool(True,$/;"	v	class:BasePrefetcher
installGlobals	src/arch/sparc/isa.cc	/^ISA::installGlobals(int gl, int offset)$/;"	f	class:SparcISA::ISA
installSegDesc	src/arch/x86/system.cc	/^installSegDesc(ThreadContext *tc, SegmentRegIndex seg,$/;"	f	file:
installSignalHandler	src/sim/init.cc	/^installSignalHandler(int signal, void (*handler)(int sigtype))$/;"	f	file:
installWindow	src/arch/sparc/isa.cc	/^ISA::installWindow(int cwp, int offset)$/;"	f	class:SparcISA::ISA
instance	src/cpu/kvm/vm.cc	/^Kvm *Kvm::instance = NULL;$/;"	m	class:Kvm	file:
instance	src/cpu/kvm/vm.hh	/^    static Kvm *instance;$/;"	m	class:Kvm
instance	src/sim/eventq.hh	/^    Counter instance;$/;"	m	class:Event
instanceCounter	src/sim/eventq.cc	/^Counter Event::instanceCounter = 0;$/;"	m	class:Event	file:
instanceCounter	src/sim/eventq.hh	/^    static Counter instanceCounter;$/;"	m	class:Event
instanceDict	src/python/m5/SimObject.py	/^instanceDict = {}$/;"	v
instantiate	src/python/m5/simulate.py	/^def instantiate(ckpt_dir=None):$/;"	f
instcount	src/cpu/inorder/inorder_dyn_inst.cc	/^int InOrderDynInst::instcount = 0;$/;"	m	class:InOrderDynInst	file:
instcount	src/cpu/inorder/inorder_dyn_inst.hh	/^    static int instcount;$/;"	m	class:InOrderDynInst
instcount	src/cpu/o3/cpu.hh	/^    int instcount;$/;"	m	class:FullO3CPU
instcount	src/cpu/ozone/cpu.hh	/^    int instcount;$/;"	m	class:OzoneCPU
instcount	src/cpu/ozone/ozone_base_dyn_inst.cc	/^BaseDynInst<OzoneImpl>::instcount = 0;$/;"	m	class:BaseDynInst	file:
instcount	src/cpu/ozone/simple_base_dyn_inst.cc	/^BaseDynInst<SimpleImpl>::instcount = 0;$/;"	m	class:BaseDynInst	file:
instruction	src/cpu/m5legion_interface.h	/^    uint32_t instruction;$/;"	m	struct:__anon55
insts	src/cpu/inorder/comm.hh	/^    std::vector<ThePipeline::DynInstPtr> insts;$/;"	m	struct:InterStageStruct
insts	src/cpu/o3/comm.hh	/^    DynInstPtr insts[Impl::MaxWidth];$/;"	m	struct:DefaultDecodeDefaultRename
insts	src/cpu/o3/comm.hh	/^    DynInstPtr insts[Impl::MaxWidth];$/;"	m	struct:DefaultFetchDefaultDecode
insts	src/cpu/o3/comm.hh	/^    DynInstPtr insts[Impl::MaxWidth];$/;"	m	struct:DefaultIEWDefaultCommit
insts	src/cpu/o3/comm.hh	/^    DynInstPtr insts[Impl::MaxWidth];$/;"	m	struct:DefaultRenameDefaultIEW
insts	src/cpu/o3/comm.hh	/^    DynInstPtr insts[Impl::MaxWidth];$/;"	m	struct:IssueStruct
insts	src/cpu/o3/decode.hh	/^    std::queue<DynInstPtr> insts[Impl::MaxThreads];$/;"	m	class:DefaultDecode
insts	src/cpu/o3/iew.hh	/^    std::queue<DynInstPtr> insts[Impl::MaxThreads];$/;"	m	class:DefaultIEW
insts	src/cpu/o3/rename.hh	/^    InstQueue insts[Impl::MaxThreads];$/;"	m	class:DefaultRename
insts	src/cpu/simple/atomic.hh	/^        uint64_t insts;$/;"	m	struct:AtomicSimpleCPU::BBInfo
instsAdded	src/cpu/ozone/inorder_back_end.hh	/^    TimeBuffer<int>::wire instsAdded;$/;"	m	class:InorderBackEnd
instsBypassed	src/cpu/inorder/resources/inst_buffer.hh	/^    Stats::Scalar instsBypassed;$/;"	m	class:InstBuffer
instsCommitted	src/cpu/o3/commit.hh	/^    Stats::Vector instsCommitted;$/;"	m	class:DefaultCommit
instsInProgress	src/cpu/o3/rename.hh	/^    int instsInProgress[Impl::MaxThreads];$/;"	m	class:DefaultRename
instsPerCtxtSwitch	src/cpu/inorder/cpu.hh	/^    Stats::Average instsPerCtxtSwitch;    $/;"	m	class:InOrderCPU
instsPerSwitch	src/cpu/inorder/cpu.hh	/^    unsigned instsPerSwitch;    $/;"	m	class:InOrderCPU
instsProcessed	src/cpu/inorder/pipeline_stage.hh	/^    unsigned instsProcessed;    $/;"	m	class:PipelineStage
instsToDispatch	src/cpu/ozone/back_end.hh	/^    typename TimeBuffer<DispatchToIssue>::wire instsToDispatch;$/;"	m	class:BackEnd
instsToDispatch	src/cpu/ozone/lw_back_end.hh	/^    typename TimeBuffer<DispatchToIssue>::wire instsToDispatch;$/;"	m	class:LWBackEnd
instsToExecute	src/cpu/o3/inst_queue.hh	/^    std::list<DynInstPtr> instsToExecute;$/;"	m	class:InstructionQueue
instsToExecute	src/cpu/ozone/back_end.hh	/^    typename TimeBuffer<IssueToExec>::wire instsToExecute;$/;"	m	class:BackEnd
instsToExecute	src/cpu/ozone/inorder_back_end.hh	/^    TimeBuffer<int>::wire instsToExecute;$/;"	m	class:InorderBackEnd
instsToExecute	src/cpu/ozone/lw_back_end.hh	/^    typename TimeBuffer<IssueToExec>::wire instsToExecute;$/;"	m	class:LWBackEnd
instsToReplay	src/cpu/o3/mem_dep_unit.hh	/^    std::list<DynInstPtr> instsToReplay;$/;"	m	class:MemDepUnit
int0	src/dev/Ethernet.py	/^    int0 = SlavePort("interface 0")$/;"	v	class:EtherLink
int1	src/dev/Ethernet.py	/^    int1 = SlavePort("interface 1")$/;"	v	class:EtherLink
int64	src/mem/ruby/common/TypeDefines.hh	/^typedef long long int64;$/;"	t
int64_ta	src/arch/mips/linux/aligned.hh	/^#define int64_ta /;"	d
int64_ta	src/arch/mips/linux/aligned.hh	/^typedef int64_t int64_ta __attribute__ ((aligned (8))) ;$/;"	t
intAluAccesses	src/cpu/o3/inst_queue.hh	/^    Stats::Scalar intAluAccesses;$/;"	m	class:InstructionQueue
intClock	src/dev/i8254xGBe.hh	/^    Tick intClock() { return SimClock::Int::ns * 1024; }$/;"	f	class:IGbE
intConfig	src/dev/arm/gic_pl390.hh	/^    uint32_t intConfig[INT_BITS_MAX*2];$/;"	m	class:Pl390
intCtl	src/dev/sparc/iob.hh	/^    IntCtl intCtl[NumDeviceIds];$/;"	m	class:Iob
intDelay	src/dev/arm/amba_device.hh	/^    Tick intDelay;$/;"	m	class:AmbaIntDevice
intDelay	src/dev/arm/pl011.hh	/^    Tick intDelay;$/;"	m	class:Pl011
intEn	src/arch/x86/regs/misc.hh	/^        Bitfield<20> intEn; \/\/ Interrupt enable$/;"	m	namespace:X86ISA
intEnable	src/dev/arm/timer_cpulocal.hh	/^            Bitfield<2>   intEnable;$/;"	m	class:CpuLocalTimer::Timer
intEnable	src/dev/arm/timer_sp804.hh	/^            Bitfield<5>   intEnable;$/;"	m	class:Sp804::Timer
intEnabled	src/dev/arm/gic_pl390.hh	/^    uint32_t intEnabled[INT_BITS_MAX];$/;"	m	class:Pl390
intEvent	src/dev/arm/hdlcd.hh	/^    EventWrapper<HDLcd, &HDLcd::generateInterrupt> intEvent;$/;"	m	class:HDLcd
intEvent	src/dev/arm/kmi.hh	/^    EventWrapper<Pl050, &Pl050::generateInterrupt> intEvent;$/;"	m	class:Pl050
intEvent	src/dev/arm/pl011.hh	/^    EventWrapper<Pl011, &Pl011::generateInterrupt> intEvent;$/;"	m	class:Pl011
intEvent	src/dev/arm/pl111.hh	/^    EventWrapper<Pl111, &Pl111::generateInterrupt> intEvent;$/;"	m	class:Pl111
intInstQueueReads	src/cpu/o3/inst_queue.hh	/^    Stats::Scalar intInstQueueReads;$/;"	m	class:InstructionQueue
intInstQueueWakeupAccesses	src/cpu/o3/inst_queue.hh	/^    Stats::Scalar intInstQueueWakeupAccesses;$/;"	m	class:InstructionQueue
intInstQueueWrites	src/cpu/o3/inst_queue.hh	/^    Stats::Scalar intInstQueueWrites;$/;"	m	class:InstructionQueue
intLatency	src/dev/arm/gic_pl390.hh	/^    Tick intLatency;$/;"	m	class:Pl390
intLines	src/dev/platform.hh	/^    std::bitset<256> intLines;$/;"	m	class:Platform
intList	src/cpu/o3/free_list.hh	/^    SimpleFreeList intList;$/;"	m	class:UnifiedFreeList
intMan	src/dev/sparc/iob.hh	/^    IntMan intMan[NumDeviceIds];$/;"	m	class:Iob
intMap	src/cpu/o3/rename_map.hh	/^    SimpleRenameMap intMap;$/;"	m	class:UnifiedRenameMap
intMasterId	src/mem/request.hh	/^    static const MasterID intMasterId = 2;$/;"	m	class:Request
intMasterPort	src/dev/x86/intdev.hh	/^    IntMasterPort intMasterPort;$/;"	m	class:X86ISA::IntDevice
intNum	src/dev/arm/amba_device.hh	/^    int      intNum;$/;"	m	class:AmbaDmaDevice
intNum	src/dev/arm/amba_device.hh	/^    int intNum;$/;"	m	class:AmbaIntDevice
intNum	src/dev/arm/pl011.hh	/^    int intNum;$/;"	m	class:Pl011
intNum	src/dev/arm/timer_sp804.hh	/^        const uint32_t intNum;$/;"	m	class:Sp804::Timer
intNumTimer	src/dev/arm/timer_cpulocal.hh	/^        uint32_t intNumTimer;$/;"	m	class:CpuLocalTimer::Timer
intNumToBit	src/dev/arm/gic_pl390.hh	/^    int intNumToBit(int num) const { return num % 32; }$/;"	f	class:Pl390
intNumToWord	src/dev/arm/gic_pl390.hh	/^    int intNumToWord(int num) const { return num >> 5; }$/;"	f	class:Pl390
intNumWatchdog	src/dev/arm/timer_cpulocal.hh	/^        uint32_t intNumWatchdog;$/;"	m	class:CpuLocalTimer::Timer
intPin	src/dev/x86/cmos.hh	/^        IntSourcePin * intPin;$/;"	m	class:X86ISA::Cmos::X86RTC
intPin	src/dev/x86/i8254.hh	/^    IntSourcePin *intPin;$/;"	m	class:X86ISA::I8254
intPriority	src/dev/arm/gic_pl390.hh	/^    uint8_t intPriority[INT_LINES_MAX];$/;"	m	class:Pl390
intReg	src/arch/sparc/registers.hh	/^    IntReg intReg;$/;"	m	union:SparcISA::__anon29
intReg	src/arch/x86/registers.hh	/^    IntReg intReg;$/;"	m	union:X86ISA::__anon35
intRegFile	src/cpu/o3/regfile.hh	/^    std::vector<IntReg> intRegFile;$/;"	m	class:PhysRegFile
intRegFileAccs	src/cpu/inorder/resources/use_def.hh	/^    Stats::Formula intRegFileAccs;$/;"	m	class:UseDefUnit
intRegFileReads	src/cpu/inorder/resources/use_def.hh	/^    Stats::Scalar intRegFileReads;$/;"	m	class:UseDefUnit
intRegFileWrites	src/cpu/inorder/resources/use_def.hh	/^    Stats::Scalar intRegFileWrites;$/;"	m	class:UseDefUnit
intRegInMode	src/arch/arm/intregs.hh	/^intRegInMode(OperatingMode mode, int reg)$/;"	f	namespace:ArmISA
intRegMap	src/arch/arm/isa.hh	/^        const IntRegIndex *intRegMap;$/;"	m	class:ArmISA::ISA
intRegMap	src/arch/sparc/isa.hh	/^    RegIndex intRegMap[TotalInstIntRegs];$/;"	m	class:SparcISA::ISA
intRegNames	src/arch/sparc/nativetrace.cc	/^static const char *intRegNames[SparcISA::NumIntArchRegs] = {$/;"	m	namespace:Trace	file:
intRegfileReads	src/cpu/o3/cpu.hh	/^    Stats::Scalar intRegfileReads;$/;"	m	class:FullO3CPU
intRegfileWrites	src/cpu/o3/cpu.hh	/^    Stats::Scalar intRegfileWrites;$/;"	m	class:FullO3CPU
intRegs	src/cpu/inorder/cpu.hh	/^    TheISA::IntReg intRegs[ThePipeline::MaxThreads][TheISA::NumIntRegs];$/;"	m	class:InOrderCPU
intRegs	src/cpu/simple_thread.hh	/^    TheISA::IntReg intRegs[TheISA::NumIntRegs];$/;"	m	class:SimpleThread
intRegsPerMode	src/arch/arm/intregs.hh	/^static const unsigned intRegsPerMode = NUM_INTREGS;$/;"	m	namespace:ArmISA
intRenameLookups	src/cpu/o3/rename.hh	/^    Stats::Scalar intRenameLookups;$/;"	m	class:DefaultRename
intSlavePort	src/arch/x86/interrupts.hh	/^    IntSlavePort intSlavePort;$/;"	m	class:X86ISA::Interrupts
intStatus	src/arch/arm/interrupts.hh	/^    uint64_t intStatus;$/;"	m	class:ArmISA::Interrupts
intStatus	src/arch/sparc/interrupts.hh	/^    uint64_t intStatus;$/;"	m	class:SparcISA::Interrupts
intStatus	src/dev/arm/pl011.hh	/^    virtual bool intStatus() { return false; }$/;"	f	class:Pl011
intStatus	src/dev/ide_ctrl.hh	/^        Bitfield<2> intStatus;$/;"	m	class:IdeController
intStatus	src/dev/uart.hh	/^    bool intStatus() { return status ? true : false; }$/;"	f	class:Uart
intStatus	src/dev/uart8250.hh	/^    virtual bool intStatus() { return status ? true : false; }$/;"	f	class:Uart8250
intToID	src/mem/ruby/slicc_interface/RubySlicc_Util.hh	/^intToID(int nodenum)$/;"	f
intVal	src/cpu/inorder/inorder_dyn_inst.hh	/^        IntReg intVal;$/;"	m	struct:InOrderDynInst::InstValue
intWidth	src/arch/arm/insts/static_inst.hh	/^    uint8_t intWidth;$/;"	m	class:ArmISA::ArmStaticInst
int_clear	src/dev/arm/hdlcd.hh	/^    InterruptReg int_clear;         \/**< Interrupt clear register *\/$/;"	m	class:HDLcd
int_delay	src/dev/arm/RealView.py	/^    int_delay = '1us'$/;"	v	class:Pl050
int_delay	src/dev/arm/RealView.py	/^    int_delay = Param.Latency("100ns", "Time between action and interrupt generation by UART")$/;"	v	class:Pl011
int_delay	src/dev/arm/RealView.py	/^    int_delay = Param.Latency("100ns",$/;"	v	class:AmbaIntDevice
int_latency	src/arch/x86/X86LocalApic.py	/^            "Latency for an interrupt to propagate through this device.")$/;"	v	class:X86LocalApic
int_latency	src/dev/arm/Gic.py	/^    int_latency = Param.Latency('10ns', "Delay for interrupt to get to CPU")$/;"	v	class:Pl390
int_latency	src/dev/x86/I82094AA.py	/^            "Latency for an interrupt to propagate through this device.")$/;"	v	class:I82094AA
int_links	src/mem/ruby/network/Network.py	/^    int_links = VectorParam.BasicIntLink("Links between internal nodes")$/;"	v	class:RubyNetwork
int_mask	src/dev/arm/hdlcd.hh	/^    InterruptReg int_mask;          \/**< Interrupt mask register *\/$/;"	m	class:HDLcd
int_master	src/arch/x86/X86LocalApic.py	/^    int_master = MasterPort("Port for sending interrupt messages")$/;"	v	class:X86LocalApic
int_master	src/dev/x86/I82094AA.py	/^    int_master = MasterPort("Port for sending interrupt messages")$/;"	v	class:I82094AA
int_node	src/mem/ruby/network/BasicLink.py	/^    int_node = Param.BasicRouter("ID of internal node")$/;"	v	class:BasicExtLink
int_num	src/dev/arm/RealView.py	/^    int_num = Param.UInt32("Interrupt number that connects to GIC")$/;"	v	class:AmbaDmaDevice
int_num	src/dev/arm/RealView.py	/^    int_num = Param.UInt32("Interrupt number that connects to GIC")$/;"	v	class:AmbaIntDevice
int_num	src/dev/arm/RealView.py	/^    int_num = Param.UInt32("Interrupt number that connects to GIC")$/;"	v	class:Pl011
int_num	src/dev/arm/RealView.py	/^    int_num = Param.UInt32("Interrupt number used per-cpu to GIC")$/;"	v	class:GenericTimer
int_num0	src/dev/arm/RealView.py	/^    int_num0 = Param.UInt32("Interrupt number that connects to GIC")$/;"	v	class:Sp804
int_num1	src/dev/arm/RealView.py	/^    int_num1 = Param.UInt32("Interrupt number that connects to GIC")$/;"	v	class:Sp804
int_num_timer	src/dev/arm/RealView.py	/^    int_num_timer = Param.UInt32("Interrrupt number used per-cpu to GIC")$/;"	v	class:CpuLocalTimer
int_num_watchdog	src/dev/arm/RealView.py	/^    int_num_watchdog = Param.UInt32("Interrupt number for per-cpu watchdog to GIC")$/;"	v	class:CpuLocalTimer
int_pin	src/dev/x86/Cmos.py	/^    int_pin = Param.X86IntSourcePin(X86IntSourcePin(),$/;"	v	class:Cmos
int_pin	src/dev/x86/I8254.py	/^    int_pin = Param.X86IntSourcePin(X86IntSourcePin(),$/;"	v	class:I8254
int_rawstat	src/dev/arm/hdlcd.hh	/^    InterruptReg int_rawstat;       \/**< Interrupt raw status register *\/$/;"	m	class:HDLcd
int_slave	src/arch/x86/X86LocalApic.py	/^    int_slave = SlavePort("Port for receiving interrupt messages")$/;"	v	class:X86LocalApic
int_status	src/dev/arm/hdlcd.hh	/^    InterruptReg int_status;        \/**< Interrupt status register *\/$/;"	m	class:HDLcd
integer	src/base/cprintf_formats.hh	/^    enum { none, string, integer, character, floating } format;$/;"	e	enum:cp::Format::__anon38
integer	src/cpu/base_dyn_inst.hh	/^        uint64_t integer;$/;"	m	union:BaseDynInst::Result
integer	src/cpu/checker/cpu.hh	/^        uint64_t integer;$/;"	m	union:CheckerCPU::Result
intel_mp_pointer	src/arch/x86/X86System.py	/^    intel_mp_pointer = Param.X86IntelMPFloatingPointer($/;"	v	class:X86System
intel_mp_table	src/arch/x86/X86System.py	/^    intel_mp_table = Param.X86IntelMPConfigTable($/;"	v	class:X86System
interEvent	src/dev/i8254xGBe.hh	/^    EventWrapper<IGbE, &IGbE::delayIntEvent> interEvent;$/;"	m	class:IGbE
interStageBuffSize	src/cpu/inorder/pipeline_traits.5stage.hh	/^    static const unsigned interStageBuffSize[] = {$/;"	m	namespace:ThePipeline
interStageBuffSize	src/cpu/inorder/pipeline_traits.9stage.hh	/^    static const unsigned interStageBuffSize[NumStages] = {$/;"	m	namespace:ThePipeline
interStageBuffSize	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^    static const unsigned interStageBuffSize[NumStages] = {$/;"	m	namespace:ThePipeline
interact	src/python/m5/main.py	/^def interact(scope):$/;"	f
interface	src/dev/Ethernet.py	/^    interface = MasterPort("Ethernet Interface")$/;"	v	class:EtherDevice
interface	src/dev/etherlink.hh	/^    Interface *interface[2];$/;"	m	class:EtherLink
interface	src/dev/ethertap.hh	/^    EtherTapInt *interface;$/;"	m	class:EtherTap
interface	src/dev/ns_gige.hh	/^    NSGigEInt *interface;$/;"	m	class:NSGigE
interface	src/dev/sinic.hh	/^    Interface *interface;$/;"	m	class:Sinic::Base
interleaved	src/base/addr_range.hh	/^    bool interleaved() const { return intlvBits != 0; }$/;"	f	class:AddrRange
intermediateHeader	src/arch/x86/bios/smbios.hh	/^        } intermediateHeader;$/;"	m	struct:X86ISA::SMBios::SMBiosTable::SMBiosHeader	typeref:struct:X86ISA::SMBios::SMBiosTable::SMBiosHeader::IntermediateHeader
internal	src/python/m5/__init__.py	/^    import internal.core$/;"	i
internal	src/python/m5/__init__.py	/^    internal = None$/;"	v
internal	src/python/m5/core.py	/^import internal$/;"	i
internal	src/python/m5/debug.py	/^import internal$/;"	i
internal	src/python/m5/event.py	/^import internal.event$/;"	i
internal	src/python/m5/simulate.py	/^import internal$/;"	i
internal	src/python/m5/stats/__init__.py	/^from m5 import internal$/;"	i
internal	src/python/m5/ticks.py	/^    import internal$/;"	i
internal	src/python/m5/trace.py	/^import internal$/;"	i
internalMergeFrom	src/mem/ruby/common/SubBlock.cc	/^SubBlock::internalMergeFrom(const DataBlock& data)$/;"	f	class:SubBlock
internalMergeTo	src/mem/ruby/common/SubBlock.cc	/^SubBlock::internalMergeTo(DataBlock& data) const$/;"	f	class:SubBlock
interptCtrlPresent	src/arch/arm/miscregs.hh	/^      Bitfield<23>    interptCtrlPresent;$/;"	m	namespace:ArmISA
interrupt	src/cpu/o3/commit.hh	/^    Fault interrupt;$/;"	m	class:DefaultCommit
interruptBlocked	src/cpu/ozone/inorder_back_end.hh	/^    bool interruptBlocked;$/;"	m	class:InorderBackEnd
interruptLine	src/dev/pcidev.hh	/^    interruptLine()$/;"	f	class:PciDevice
interruptLine	src/dev/pcireg.h	/^        uint8_t interruptLine;$/;"	m	struct:PCIConfig::__anon80
interruptPending	src/cpu/o3/comm.hh	/^        bool interruptPending; \/\/ *F$/;"	m	struct:TimeBufStruct::commitComm
interruptPending	src/cpu/o3/fetch.hh	/^    bool interruptPending;$/;"	m	class:DefaultFetch
interruptPending	src/cpu/ozone/front_end.hh	/^    bool interruptPending;$/;"	m	class:FrontEnd
interruptPin	src/dev/pcireg.h	/^        uint8_t interruptPin;$/;"	m	struct:PCIConfig::__anon80
interruptType	src/arch/x86/bios/intelmp.hh	/^    uint8_t interruptType;$/;"	m	class:X86ISA::IntelMP::IntAssignment
interrupt_type	src/arch/x86/bios/IntelMP.py	/^    interrupt_type = Param.X86IntelMPInterruptType('INT', 'type of interrupt')$/;"	v	class:X86IntelMPIOIntAssignment
interrupt_type	src/arch/x86/bios/IntelMP.py	/^    interrupt_type = Param.X86IntelMPInterruptType('INT', 'type of interrupt')$/;"	v	class:X86IntelMPLocalIntAssignment
interrupts	src/arch/alpha/interrupts.hh	/^    uint64_t interrupts[NumInterruptLevels];$/;"	m	class:AlphaISA::Interrupts
interrupts	src/arch/arm/interrupts.hh	/^    bool interrupts[NumInterruptTypes];$/;"	m	class:ArmISA::Interrupts
interrupts	src/arch/sparc/interrupts.hh	/^    uint64_t interrupts[NumInterruptTypes];$/;"	m	class:SparcISA::Interrupts
interrupts	src/cpu/base.hh	/^    TheISA::Interrupts *interrupts;$/;"	m	class:BaseCPU
interrupts	src/dev/arm/kmi.hh	/^    InterruptReg interrupts;$/;"	m	class:Pl050
interruptsPending	src/arch/mips/interrupts.cc	/^Interrupts::interruptsPending(ThreadContext *tc) const$/;"	f	class:MipsISA::Interrupts
intersect	src/arch/sparc/tlb_map.hh	/^    intersect(const TlbRange &r)$/;"	f	class:SparcISA::TlbMap
intersect	src/base/addr_range_map.hh	/^    intersect(const AddrRange &r) const$/;"	f	class:AddrRangeMap
intersectionIsEmpty	src/mem/ruby/common/Set.hh	/^    intersectionIsEmpty(const Set& other_set) const$/;"	f	class:Set
intersectionIsNotEmpty	src/mem/ruby/common/NetDest.cc	/^NetDest::intersectionIsNotEmpty(const NetDest& other_netDest) const$/;"	f	class:NetDest
intersects	src/base/addr_range.hh	/^    bool intersects(const AddrRange& r) const$/;"	f	class:AddrRange
interval	src/cpu/base.hh	/^        Tick interval;$/;"	m	class:BaseCPU::ProfileEvent
interval	src/cpu/base.hh	/^    Tick interval() { return _interval; }$/;"	f	class:CPUProgressEvent
interval	src/cpu/base.hh	/^    void interval(Tick ival) { _interval = ival; }$/;"	f	class:CPUProgressEvent
interval	src/dev/intel_8254_timer.hh	/^            Tick interval;$/;"	m	class:Intel8254Timer::Counter::CounterEvent
interval	src/dev/mc146818.hh	/^        Tick interval;$/;"	m	struct:MC146818::RTCEvent
intervalCount	src/cpu/simple/atomic.hh	/^    uint64_t intervalCount;$/;"	m	class:AtomicSimpleCPU
intervalDrift	src/cpu/simple/atomic.hh	/^    uint64_t intervalDrift;$/;"	m	class:AtomicSimpleCPU
intervalSize	src/cpu/simple/atomic.hh	/^    const uint64_t intervalSize;$/;"	m	class:AtomicSimpleCPU
interval_stats	src/cpu/ozone/cpu.hh	/^    bool interval_stats;$/;"	m	class:OzoneCPU
interval_stats	src/cpu/simple/base.hh	/^    bool interval_stats;$/;"	m	class:BaseSimpleCPU
intf	src/arch/x86/regs/misc.hh	/^        Bitfield<9> intf; \/\/ Interrupt Flag$/;"	m	namespace:X86ISA
intlvBits	src/base/addr_range.hh	/^    uint8_t intlvBits;$/;"	m	class:AddrRange
intlvHighBit	src/base/addr_range.hh	/^    uint8_t intlvHighBit;$/;"	m	class:AddrRange
intlvMatch	src/base/addr_range.hh	/^    uint8_t intlvMatch;$/;"	m	class:AddrRange
intrBit	src/dev/uart8250.hh	/^            int intrBit;$/;"	m	class:Uart8250::IntrEvent
intrClear	src/dev/ide_disk.cc	/^IdeDisk::intrClear()$/;"	f	class:IdeDisk
intrClear	src/dev/pcidev.hh	/^    intrClear()$/;"	f	class:PciDevice
intrClockFrequency	src/dev/alpha/access.h	/^    uint32_t    intrClockFrequency;     \/\/ 0C: Hz$/;"	m	struct:AlphaAccess
intrClockFrequency	src/dev/mips/access.h	/^    uint32_t    intrClockFrequency;     \/\/ 10: Hz$/;"	m	struct:MipsAccess
intrDelay	src/dev/ns_gige.hh	/^    Tick intrDelay;$/;"	m	class:NSGigE
intrDelay	src/dev/sinic.hh	/^    Tick intrDelay;$/;"	m	class:Sinic::Base
intrEvent	src/dev/ns_gige.hh	/^    IntrEvent *intrEvent;$/;"	m	class:NSGigE
intrEvent	src/dev/sinic.hh	/^    IntrEvent *intrEvent;$/;"	m	class:Sinic::Base
intrFreq	src/arch/alpha/system.hh	/^    Tick intrFreq;$/;"	m	class:AlphaSystem
intrPending	src/dev/ide_disk.hh	/^    bool intrPending;$/;"	m	class:IdeDisk
intrPost	src/dev/ide_ctrl.cc	/^IdeController::intrPost()$/;"	f	class:IdeController
intrPost	src/dev/ide_disk.cc	/^IdeDisk::intrPost()$/;"	f	class:IdeDisk
intrPost	src/dev/pcidev.hh	/^    intrPost()$/;"	f	class:PciDevice
intrTick	src/dev/ns_gige.hh	/^    Tick intrTick;$/;"	m	class:NSGigE
intrTick	src/dev/sinic.hh	/^    Tick intrTick;$/;"	m	class:Sinic::Base
intr_control	src/dev/Terminal.py	/^    intr_control = Param.IntrControl(Parent.any, "interrupt controller")$/;"	v	class:Terminal
intr_delay	src/dev/Ethernet.py	/^    intr_delay = Param.Latency('10us', "Interrupt propagation delay")$/;"	v	class:EtherDevBase
intr_flag	src/arch/alpha/isa.hh	/^        int intr_flag;$/;"	m	class:AlphaISA::ISA
intr_sum_type	src/dev/alpha/tsunami.hh	/^    int intr_sum_type[Tsunami::Max_CPUs];$/;"	m	class:Tsunami
intr_sum_type	src/dev/mips/malta.hh	/^    int intr_sum_type[Malta::Max_CPUs];$/;"	m	class:Malta
intrctrl	src/dev/Platform.py	/^    intrctrl = Param.IntrControl(Parent.any, "interrupt controller")$/;"	v	class:Platform
intrctrl	src/dev/copy_engine_defs.hh	/^    INTRCTRL intrctrl;$/;"	m	struct:CopyEngineReg::Regs
intrctrl	src/dev/platform.hh	/^    IntrControl *intrctrl;$/;"	m	class:Platform
intreg	src/arch/alpha/registers.hh	/^    IntReg  intreg;$/;"	m	union:AlphaISA::AnyReg
intreg	src/arch/arm/registers.hh	/^    IntReg   intreg;$/;"	m	union:ArmISA::__anon12
intreg	src/arch/mips/registers.hh	/^    IntReg   intreg;$/;"	m	union:MipsISA::__anon21
intreg	src/arch/power/registers.hh	/^    IntReg   intreg;$/;"	m	union:PowerISA::__anon24
intregs	src/cpu/m5legion_interface.h	/^    uint64_t intregs[32];$/;"	m	struct:__anon55
intrflag	src/cpu/ozone/thread_state.hh	/^    int intrflag;$/;"	m	struct:OzoneThreadState
intstatus	src/arch/alpha/interrupts.hh	/^    uint64_t intstatus;$/;"	m	class:AlphaISA::Interrupts
inv	src/arch/x86/regs/misc.hh	/^        Bitfield<23> inv; \/\/ Invert mask$/;"	m	namespace:X86ISA
invAddrLoads	src/cpu/o3/lsq_unit.hh	/^    Stats::Scalar invAddrLoads;$/;"	m	class:LSQUnit
invAddrLoads	src/cpu/ozone/lw_back_end.hh	/^    Stats::Vector invAddrLoads;$/;"	m	class:LWBackEnd
invAddrSwpfs	src/cpu/o3/lsq_unit.hh	/^    Stats::Scalar invAddrSwpfs;$/;"	m	class:LSQUnit
invAddrSwpfs	src/cpu/ozone/lw_back_end.hh	/^    Stats::Vector invAddrSwpfs;$/;"	m	class:LWBackEnd
inv_addr_loads	src/cpu/ozone/back_end.hh	/^    Stats::Vector inv_addr_loads;$/;"	m	class:BackEnd
inv_addr_swpfs	src/cpu/ozone/back_end.hh	/^    Stats::Vector inv_addr_swpfs;$/;"	m	class:BackEnd
invalid	src/arch/arm/table_walker.hh	/^        bool invalid() const$/;"	f	class:ArmISA::TableWalker::L2Descriptor
invalid	src/arch/sparc/pagetable.hh	/^      invalid$/;"	e	enum:SparcISA::PageTableEntry::EntryType
invalidPredictorIndex	src/cpu/pred/tournament.hh	/^    static const int invalidPredictorIndex = -1;$/;"	m	class:TournamentBP
invalidate	src/mem/cache/blk.hh	/^    void invalidate()$/;"	f	class:CacheBlk
invalidate	src/mem/cache/tags/fa_lru.cc	/^FALRU::invalidate(FALRU::BlkType *blk)$/;"	f	class:FALRU
invalidate	src/mem/cache/tags/lru.cc	/^LRU::invalidate(BlkType *blk)$/;"	f	class:LRU
invalidateBlock	src/mem/ruby/system/DirectoryMemory.cc	/^DirectoryMemory::invalidateBlock(PhysAddress address)$/;"	f	class:DirectoryMemory
invalidateMiscReg	src/arch/arm/tlb.hh	/^    inline void invalidateMiscReg() { miscRegValid = false; }$/;"	f	class:ArmISA::TLB
invalidateSC	src/mem/ruby/system/Sequencer.cc	/^Sequencer::invalidateSC(const Address& address)$/;"	f	class:Sequencer
invalidateVisitor	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::invalidateVisitor(BlkType &blk)$/;"	f	class:Cache
invariant_reg_vector	src/cpu/kvm/arm_cpu.cc	/^static uint64_t invariant_reg_vector[] = {$/;"	v	file:
invariant_regs	src/cpu/kvm/arm_cpu.hh	/^    static const std::set<uint64_t> invariant_regs;$/;"	m	class:ArmKvmCPU
invldMasterId	src/mem/request.hh	/^    static const MasterID invldMasterId = USHRT_MAX;$/;"	m	class:Request
invldPid	src/mem/request.hh	/^    static const uint32_t invldPid = UINT_MAX;$/;"	m	class:Request
invoke	src/arch/alpha/faults.cc	/^AlphaFault::invoke(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:AlphaISA::AlphaFault
invoke	src/arch/alpha/faults.cc	/^ArithmeticFault::invoke(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:AlphaISA::ArithmeticFault
invoke	src/arch/alpha/faults.cc	/^DtbFault::invoke(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:AlphaISA::DtbFault
invoke	src/arch/alpha/faults.cc	/^ItbFault::invoke(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:AlphaISA::ItbFault
invoke	src/arch/alpha/faults.cc	/^ItbPageFault::invoke(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:AlphaISA::ItbPageFault
invoke	src/arch/alpha/faults.cc	/^NDtbMissFault::invoke(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:AlphaISA::NDtbMissFault
invoke	src/arch/arm/faults.cc	/^AbortFault<T>::invoke(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:ArmISA::AbortFault
invoke	src/arch/arm/faults.cc	/^ArmFault::invoke(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:ArmISA::ArmFault
invoke	src/arch/arm/faults.cc	/^ArmSev::invoke(ThreadContext *tc, StaticInstPtr inst) {$/;"	f	class:ArmISA::ArmSev
invoke	src/arch/arm/faults.cc	/^FlushPipe::invoke(ThreadContext *tc, StaticInstPtr inst) {$/;"	f	class:ArmISA::FlushPipe
invoke	src/arch/arm/faults.cc	/^PCAlignmentFault::invoke(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:ArmISA::PCAlignmentFault
invoke	src/arch/arm/faults.cc	/^Reset::invoke(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:ArmISA::Reset
invoke	src/arch/arm/faults.cc	/^SecureMonitorCall::invoke(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:ArmISA::SecureMonitorCall
invoke	src/arch/arm/faults.cc	/^SupervisorCall::invoke(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:ArmISA::SupervisorCall
invoke	src/arch/arm/faults.cc	/^SystemError::invoke(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:ArmISA::SystemError
invoke	src/arch/arm/faults.cc	/^UndefinedInstruction::invoke(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:ArmISA::UndefinedInstruction
invoke	src/arch/arm/faults.cc	/^VirtualDataAbort::invoke(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:ArmISA::VirtualDataAbort
invoke	src/arch/generic/debugfaults.hh	/^    invoke(ThreadContext *tc,$/;"	f	class:GenericISA::M5DebugFault
invoke	src/arch/mips/faults.cc	/^MipsFaultBase::invoke(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:MipsISA::MipsFaultBase
invoke	src/arch/mips/faults.cc	/^NonMaskableInterrupt::invoke(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:MipsISA::NonMaskableInterrupt
invoke	src/arch/mips/faults.cc	/^ResetFault::invoke(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:MipsISA::ResetFault
invoke	src/arch/mips/faults.cc	/^SoftResetFault::invoke(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:MipsISA::SoftResetFault
invoke	src/arch/mips/faults.hh	/^    invoke(ThreadContext * tc,$/;"	f	class:MipsISA::AddressFault
invoke	src/arch/mips/faults.hh	/^    invoke(ThreadContext * tc,$/;"	f	class:MipsISA::CoprocessorUnusableFault
invoke	src/arch/mips/faults.hh	/^    invoke(ThreadContext * tc,$/;"	f	class:MipsISA::TlbFault
invoke	src/arch/sparc/faults.cc	/^FastDataAccessMMUMiss::invoke(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:SparcISA::FastDataAccessMMUMiss
invoke	src/arch/sparc/faults.cc	/^FastInstructionAccessMMUMiss::invoke(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:SparcISA::FastInstructionAccessMMUMiss
invoke	src/arch/sparc/faults.cc	/^FillNNormal::invoke(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:SparcISA::FillNNormal
invoke	src/arch/sparc/faults.cc	/^PowerOnReset::invoke(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:SparcISA::PowerOnReset
invoke	src/arch/sparc/faults.cc	/^SparcFaultBase::invoke(ThreadContext * tc, StaticInstPtr inst)$/;"	f	class:SparcISA::SparcFaultBase
invoke	src/arch/sparc/faults.cc	/^SpillNNormal::invoke(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:SparcISA::SpillNNormal
invoke	src/arch/sparc/faults.cc	/^TrapInstruction::invoke(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:SparcISA::TrapInstruction
invoke	src/arch/x86/faults.cc	/^    InitInterrupt::invoke(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:X86ISA::InitInterrupt
invoke	src/arch/x86/faults.cc	/^    InvalidOpcode::invoke(ThreadContext * tc, StaticInstPtr inst)$/;"	f	class:X86ISA::InvalidOpcode
invoke	src/arch/x86/faults.cc	/^    StartupInterrupt::invoke(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:X86ISA::StartupInterrupt
invoke	src/arch/x86/faults.cc	/^    void PageFault::invoke(ThreadContext * tc, StaticInstPtr inst)$/;"	f	class:X86ISA::PageFault
invoke	src/arch/x86/faults.cc	/^    void X86Abort::invoke(ThreadContext * tc, StaticInstPtr inst)$/;"	f	class:X86ISA::X86Abort
invoke	src/arch/x86/faults.cc	/^    void X86FaultBase::invoke(ThreadContext * tc, StaticInstPtr inst)$/;"	f	class:X86ISA::X86FaultBase
invoke	src/arch/x86/faults.cc	/^    void X86Trap::invoke(ThreadContext * tc, StaticInstPtr inst)$/;"	f	class:X86ISA::X86Trap
invoke	src/arch/x86/faults.hh	/^        void invoke(ThreadContext * tc,$/;"	f	class:X86ISA::UnimpInstFault
invoke	src/sim/faults.cc	/^void FaultBase::invoke(ThreadContext * tc, StaticInstPtr inst)$/;"	f	class:FaultBase
invoke	src/sim/faults.cc	/^void GenericAlignmentFault::invoke(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:GenericAlignmentFault
invoke	src/sim/faults.cc	/^void GenericPageTableFault::invoke(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:GenericPageTableFault
invoke	src/sim/faults.cc	/^void ReExec::invoke(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:ReExec
invoke	src/sim/faults.cc	/^void UnimpFault::invoke(ThreadContext * tc, StaticInstPtr inst)$/;"	f	class:UnimpFault
invoke64	src/arch/arm/faults.cc	/^ArmFault::invoke64(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:ArmISA::ArmFault
io	src/arch/mips/dt_constants.hh	/^    Bitfield<26>     io;$/;"	m	namespace:MipsISA
io	src/dev/alpha/Tsunami.py	/^    io = TsunamiIO(pio_addr=0x801fc000000)$/;"	v	class:Tsunami
io	src/dev/alpha/tsunami.hh	/^    TsunamiIO *io;$/;"	m	class:Tsunami
io	src/dev/mips/Malta.py	/^    io = MaltaIO(pio_addr=0x801fc000000)$/;"	v	class:Malta
io	src/dev/mips/malta.hh	/^    MaltaIO *io;$/;"	m	class:Malta
ioApic	src/dev/x86/south_bridge.hh	/^    X86ISA::I82094AA * ioApic;$/;"	m	class:SouthBridge
ioEnable	src/dev/ns_gige.hh	/^    bool ioEnable;$/;"	m	class:NSGigE
ioEnabled	src/dev/ide_ctrl.hh	/^    bool ioEnabled;$/;"	m	class:IdeController
ioHandler	src/sim/init.cc	/^ioHandler(int sigtype)$/;"	f	file:
ioShift	src/dev/ide_ctrl.hh	/^    uint32_t ioShift, ctrlOffset;$/;"	m	class:IdeController
io_apic	src/dev/x86/SouthBridge.py	/^    io_apic = Param.I82094AA(_io_apic, "I\/O APIC")$/;"	v	class:SouthBridge
io_cancel	src/kern/linux/linux_syscalls.hh	/^    io_cancel = 95,$/;"	e	enum:SystemCalls::__anon87
io_destroy	src/kern/linux/linux_syscalls.hh	/^    io_destroy = 96,$/;"	e	enum:SystemCalls::__anon87
io_getevents	src/kern/linux/linux_syscalls.hh	/^    io_getevents = 97,$/;"	e	enum:SystemCalls::__anon87
io_req	src/cpu/kvm/x86_cpu.hh	/^    Request io_req;$/;"	m	class:X86KvmCPU
io_setup	src/kern/linux/linux_syscalls.hh	/^    io_setup = 98,$/;"	e	enum:SystemCalls::__anon87
io_shift	src/dev/Ide.py	/^    io_shift = Param.UInt32(0x0, "IO port shift");$/;"	v	class:IdeController
io_submit	src/kern/linux/linux_syscalls.hh	/^    io_submit = 99,$/;"	e	enum:SystemCalls::__anon87
iob	src/dev/sparc/T1000.py	/^    iob = Iob()$/;"	v	class:T1000
iobJBusAddr	src/dev/sparc/iob.hh	/^    Addr iobJBusAddr;$/;"	m	class:Iob
iobJBusSize	src/dev/sparc/iob.hh	/^    Addr iobJBusSize;$/;"	m	class:Iob
iobManAddr	src/dev/sparc/iob.hh	/^    Addr iobManAddr;$/;"	m	class:Iob
iobManSize	src/dev/sparc/iob.hh	/^    Addr iobManSize;$/;"	m	class:Iob
ioc	src/arch/arm/miscregs.hh	/^        Bitfield<0> ioc;$/;"	m	namespace:ArmISA
ioctl	src/cpu/kvm/base.cc	/^BaseKvmCPU::ioctl(int request, long p1) const$/;"	f	class:BaseKvmCPU
ioctl	src/cpu/kvm/base.hh	/^    int ioctl(int request) const {$/;"	f	class:BaseKvmCPU
ioctl	src/cpu/kvm/base.hh	/^    int ioctl(int request, void *p1) const {$/;"	f	class:BaseKvmCPU
ioctl	src/cpu/kvm/perfevent.cc	/^PerfKvmCounter::ioctl(int request, long p1)$/;"	f	class:PerfKvmCounter
ioctl	src/cpu/kvm/perfevent.hh	/^    int ioctl(int request) { return ioctl(request, 0L); }$/;"	f	class:PerfKvmCounter
ioctl	src/cpu/kvm/perfevent.hh	/^    int ioctl(int request, void *p1) { return ioctl(request, (long)p1); }$/;"	f	class:PerfKvmCounter
ioctl	src/cpu/kvm/vm.cc	/^Kvm::ioctl(int request, long p1) const$/;"	f	class:Kvm
ioctl	src/cpu/kvm/vm.cc	/^KvmVM::ioctl(int request, long p1) const$/;"	f	class:KvmVM
ioctl	src/cpu/kvm/vm.hh	/^    int ioctl(int request) const {$/;"	f	class:Kvm
ioctl	src/cpu/kvm/vm.hh	/^    int ioctl(int request) const {$/;"	f	class:KvmVM
ioctl	src/cpu/kvm/vm.hh	/^    int ioctl(int request, void *p1) const {$/;"	f	class:Kvm
ioctl	src/cpu/kvm/vm.hh	/^    int ioctl(int request, void *p1) const {$/;"	f	class:KvmVM
ioctl	src/kern/linux/linux_syscalls.hh	/^    ioctl = 100,$/;"	e	enum:SystemCalls::__anon87
ioctl	src/kern/tru64/tru64_syscalls.hh	/^        ioctl = 54,$/;"	e	enum:SystemCalls::__anon102
ioctlFunc	src/sim/syscall_emul.hh	/^ioctlFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
ioctlRun	src/cpu/kvm/base.cc	/^BaseKvmCPU::ioctlRun()$/;"	f	class:BaseKvmCPU
ioe	src/arch/arm/miscregs.hh	/^        Bitfield<8> ioe;$/;"	m	namespace:ArmISA
ioe	src/dev/arm/pl111.hh	/^        Bitfield<14> ioe;$/;"	m	class:Pl111
ioperm	src/kern/linux/linux_syscalls.hh	/^    ioperm = 101,$/;"	e	enum:SystemCalls::__anon87
iopl	src/arch/x86/regs/misc.hh	/^        Bitfield<13, 12> iopl; \/\/ I\/O Privilege Level$/;"	m	namespace:X86ISA
iopl	src/kern/linux/linux_syscalls.hh	/^    iopl = 102,$/;"	e	enum:SystemCalls::__anon87
iopt	src/base/loader/coff_sym.h	/^    coff_int    iopt;           \/* start of optimization symbol entries*\/$/;"	m	struct:pdr
ioptBase	src/base/loader/coff_sym.h	/^    coff_int    ioptBase;       \/* file's optimization entries *\/$/;"	m	struct:ecoff_fdr
ioptMax	src/base/loader/coff_sym.h	/^    coff_int    ioptMax;        \/* max index into optimization symbol entries *\/$/;"	m	struct:ecoff_symhdr
ioptNil	src/base/loader/coff_sym.h	/^#define ioptNil /;"	d
iov_base	src/arch/arm/linux/linux.hh	/^        uint32_t iov_base; \/\/ void *$/;"	m	struct:ArmLinux32::tgt_iovec
iov_base	src/arch/arm/linux/linux.hh	/^        uint64_t iov_base; \/\/ void *$/;"	m	struct:ArmLinux64::tgt_iovec
iov_base	src/arch/x86/linux/linux.hh	/^        uint64_t iov_base; \/\/ void *$/;"	m	struct:X86Linux64::__anon31
iov_base	src/kern/linux/linux.hh	/^        uint64_t iov_base; \/\/ void *$/;"	m	struct:Linux::tgt_iovec
iov_base	src/kern/operatingsystem.hh	/^        uint64_t iov_base; \/\/ void *$/;"	m	struct:OperatingSystem::__anon91
iov_len	src/arch/arm/linux/linux.hh	/^        uint32_t iov_len;$/;"	m	struct:ArmLinux32::tgt_iovec
iov_len	src/arch/arm/linux/linux.hh	/^        uint64_t iov_len;$/;"	m	struct:ArmLinux64::tgt_iovec
iov_len	src/arch/x86/linux/linux.hh	/^        uint64_t iov_len;  \/\/ size_t$/;"	m	struct:X86Linux64::__anon31
iov_len	src/kern/linux/linux.hh	/^        uint64_t iov_len;$/;"	m	struct:Linux::tgt_iovec
iov_len	src/kern/operatingsystem.hh	/^        uint64_t iov_len;$/;"	m	struct:OperatingSystem::__anon91
ip	src/base/inet.hh	/^    uint32_t ip() const { return _ip; }$/;"	f	struct:Net::IpAddress
ip	src/dev/i8254xGBe_defs.hh	/^inline bool ip(TxDesc *d)   { assert(isContext(d)); return bits(d->d2, 25,25); }$/;"	f	namespace:iGbReg::TxdOp
ip0	src/arch/mips/pra_constants.hh	/^        Bitfield<8>  ip0;$/;"	m	namespace:MipsISA
ip1	src/arch/mips/pra_constants.hh	/^        Bitfield<9>  ip1;$/;"	m	namespace:MipsISA
ip2	src/arch/mips/pra_constants.hh	/^        Bitfield<10> ip2;$/;"	m	namespace:MipsISA
ip3	src/arch/mips/pra_constants.hh	/^        Bitfield<11> ip3;$/;"	m	namespace:MipsISA
ip4	src/arch/mips/pra_constants.hh	/^        Bitfield<12> ip4;$/;"	m	namespace:MipsISA
ip5	src/arch/mips/pra_constants.hh	/^        Bitfield<13> ip5;$/;"	m	namespace:MipsISA
ip6	src/arch/mips/pra_constants.hh	/^        Bitfield<14> ip6;$/;"	m	namespace:MipsISA
ip6_opt_dstopts	src/base/inet.hh	/^struct ip6_opt_dstopts {$/;"	s	namespace:Net
ip6_opt_fragment	src/base/inet.hh	/^struct ip6_opt_fragment {$/;"	s	namespace:Net
ip6_opt_hdr	src/base/inet.hh	/^struct ip6_opt_hdr$/;"	s	namespace:Net
ip6_opt_routing_type2	src/base/inet.hh	/^struct ip6_opt_routing_type2 {$/;"	s	namespace:Net
ip7	src/arch/mips/pra_constants.hh	/^        Bitfield<15> ip7;$/;"	m	namespace:MipsISA
ipc	src/cpu/inorder/cpu.hh	/^    Stats::Formula ipc;$/;"	m	class:InOrderCPU
ipc	src/cpu/o3/cpu.hh	/^    Stats::Formula ipc;$/;"	m	class:FullO3CPU
ipc	src/dev/arm/pl111.hh	/^        Bitfield<13> ipc;$/;"	m	class:Pl111
ipc	src/kern/linux/linux_syscalls.hh	/^    ipc = 103,$/;"	e	enum:SystemCalls::__anon87
ipcse	src/dev/i8254xGBe_defs.hh	/^inline int ipcse(TxDesc *d) { assert(isContext(d)); return bits(d->d1,31,16); }$/;"	f	namespace:iGbReg::TxdOp
ipcso	src/dev/i8254xGBe_defs.hh	/^inline int ipcso(TxDesc *d) { assert(isContext(d)); return bits(d->d1,15,8); }$/;"	f	namespace:iGbReg::TxdOp
ipcss	src/dev/i8254xGBe_defs.hh	/^inline int ipcss(TxDesc *d) { assert(isContext(d)); return bits(d->d1,7,0); }$/;"	f	namespace:iGbReg::TxdOp
ipdFirst	src/base/loader/coff_sym.h	/^    coff_int    ipdFirst;       \/* start of procedures for this file *\/$/;"	m	struct:ecoff_fdr
ipdMax	src/base/loader/coff_sym.h	/^    coff_int    ipdMax;         \/* number of procedures *\/$/;"	m	struct:ecoff_symhdr
ipdNil	src/base/loader/coff_sym.h	/^#define ipdNil /;"	d
ipi_pending	src/dev/alpha/tsunami.hh	/^    int ipi_pending[Tsunami::Max_CPUs];$/;"	m	class:Tsunami
ipi_pending	src/dev/mips/malta.hh	/^    int ipi_pending[Malta::Max_CPUs];$/;"	m	class:Malta
ipint	src/dev/alpha/tsunami_cchip.hh	/^    uint64_t ipint;$/;"	m	class:TsunamiCChip
ipl	src/arch/mips/pra_constants.hh	/^    Bitfield<15, 10> ipl;$/;"	m	namespace:MipsISA
iplLast	src/kern/kernel_stats.hh	/^    int iplLast;$/;"	m	class:Kernel::Statistics
iplLastTick	src/kern/kernel_stats.hh	/^    Tick iplLastTick;$/;"	m	class:Kernel::Statistics
ippci	src/arch/mips/pra_constants.hh	/^    Bitfield<28, 26> ippci;$/;"	m	namespace:MipsISA
ipr	src/arch/alpha/isa.hh	/^        InternalProcReg ipr[NumInternalProcRegs]; \/\/ Internal processor regs$/;"	m	class:AlphaISA::ISA
iprAddressPseudoInst	src/arch/generic/mmapped_ipr.hh	/^    iprAddressPseudoInst(uint8_t func, uint8_t subfunc)$/;"	f	namespace:GenericISA
ips	src/arch/arm/miscregs.hh	/^        Bitfield<34, 32> ips;$/;"	m	namespace:ArmISA
ipti	src/arch/mips/pra_constants.hh	/^    Bitfield<31, 29> ipti;$/;"	m	namespace:MipsISA
iq	src/cpu/ozone/back_end.hh	/^        InstList iq;$/;"	m	class:BackEnd::InstQueue
iqBranchInstsIssued	src/cpu/o3/inst_queue.hh	/^    Stats::Scalar iqBranchInstsIssued;$/;"	m	class:InstructionQueue
iqBranchInstsIssued	src/cpu/ozone/inst_queue.hh	/^    Stats::Scalar iqBranchInstsIssued;$/;"	m	class:InstQueue
iqCapEvents	src/cpu/ozone/lw_back_end.hh	/^    Stats::Vector iqCapEvents;$/;"	m	class:LWBackEnd
iqCapInstCount	src/cpu/ozone/lw_back_end.hh	/^    Stats::Vector iqCapInstCount;$/;"	m	class:LWBackEnd
iqCount	src/cpu/o3/comm.hh	/^        unsigned iqCount;$/;"	m	struct:TimeBufStruct::iewComm
iqCount	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::iqCount()$/;"	f	class:DefaultFetch
iqEntries	src/cpu/o3/rename.hh	/^        unsigned iqEntries;$/;"	m	struct:DefaultRename::FreeEntries
iqFloatInstsIssued	src/cpu/o3/inst_queue.hh	/^    Stats::Scalar iqFloatInstsIssued;$/;"	m	class:InstructionQueue
iqFloatInstsIssued	src/cpu/ozone/inst_queue.hh	/^    Stats::Scalar iqFloatInstsIssued;$/;"	m	class:InstQueue
iqInstsAdded	src/cpu/o3/inst_queue.hh	/^    Stats::Scalar iqInstsAdded;$/;"	m	class:InstructionQueue
iqInstsAdded	src/cpu/ozone/inst_queue.hh	/^    Stats::Scalar iqInstsAdded;$/;"	m	class:InstQueue
iqInstsIssued	src/cpu/o3/inst_queue.hh	/^    Stats::Scalar iqInstsIssued;$/;"	m	class:InstructionQueue
iqIntInstsIssued	src/cpu/o3/inst_queue.hh	/^    Stats::Scalar iqIntInstsIssued;$/;"	m	class:InstructionQueue
iqIntInstsIssued	src/cpu/ozone/inst_queue.hh	/^    Stats::Scalar iqIntInstsIssued;$/;"	m	class:InstQueue
iqIt	src/cpu/ozone/dyn_inst.hh	/^    ListIt iqIt;$/;"	m	class:OzoneDynInst
iqIt	src/cpu/ozone/inst_queue.hh	/^        ListIt iqIt;$/;"	m	struct:InstQueue::IQEntry
iqItValid	src/cpu/ozone/dyn_inst.hh	/^    bool iqItValid;$/;"	m	class:OzoneDynInst
iqMemInstsIssued	src/cpu/o3/inst_queue.hh	/^    Stats::Scalar iqMemInstsIssued;$/;"	m	class:InstructionQueue
iqMemInstsIssued	src/cpu/ozone/inst_queue.hh	/^    Stats::Scalar iqMemInstsIssued;$/;"	m	class:InstQueue
iqMiscInstsIssued	src/cpu/o3/inst_queue.hh	/^    Stats::Scalar iqMiscInstsIssued;$/;"	m	class:InstructionQueue
iqMiscInstsIssued	src/cpu/ozone/inst_queue.hh	/^    Stats::Scalar iqMiscInstsIssued;$/;"	m	class:InstQueue
iqNonSpecInstsAdded	src/cpu/o3/inst_queue.hh	/^    Stats::Scalar iqNonSpecInstsAdded;$/;"	m	class:InstructionQueue
iqNonSpecInstsAdded	src/cpu/ozone/inst_queue.hh	/^    Stats::Scalar iqNonSpecInstsAdded;$/;"	m	class:InstQueue
iqPolicy	src/cpu/o3/inst_queue.hh	/^    IQPolicy iqPolicy;$/;"	m	class:InstructionQueue
iqPtr	src/cpu/o3/inst_queue.hh	/^        InstructionQueue<Impl> *iqPtr;$/;"	m	class:InstructionQueue::FUCompletion
iqPtr	src/cpu/o3/mem_dep_unit.hh	/^    InstructionQueue<Impl> *iqPtr;$/;"	m	class:MemDepUnit
iqSquashedInstsExamined	src/cpu/o3/inst_queue.hh	/^    Stats::Scalar iqSquashedInstsExamined;$/;"	m	class:InstructionQueue
iqSquashedInstsExamined	src/cpu/ozone/inst_queue.hh	/^    Stats::Scalar iqSquashedInstsExamined;$/;"	m	class:InstQueue
iqSquashedInstsIssued	src/cpu/o3/inst_queue.hh	/^    Stats::Scalar iqSquashedInstsIssued;$/;"	m	class:InstructionQueue
iqSquashedInstsIssued	src/cpu/ozone/inst_queue.hh	/^    Stats::Scalar iqSquashedInstsIssued;$/;"	m	class:InstQueue
iqSquashedNonSpecRemoved	src/cpu/o3/inst_queue.hh	/^    Stats::Scalar iqSquashedNonSpecRemoved;$/;"	m	class:InstructionQueue
iqSquashedNonSpecRemoved	src/cpu/ozone/inst_queue.hh	/^    Stats::Scalar iqSquashedNonSpecRemoved;$/;"	m	class:InstQueue
iqSquashedOperandsExamined	src/cpu/o3/inst_queue.hh	/^    Stats::Scalar iqSquashedOperandsExamined;$/;"	m	class:InstructionQueue
iqSquashedOperandsExamined	src/cpu/ozone/inst_queue.hh	/^    Stats::Scalar iqSquashedOperandsExamined;$/;"	m	class:InstQueue
iq_cap_events	src/cpu/ozone/back_end.hh	/^    Stats::Vector iq_cap_events;$/;"	m	class:BackEnd
iq_cap_inst_count	src/cpu/ozone/back_end.hh	/^    Stats::Vector iq_cap_inst_count;$/;"	m	class:BackEnd
ir0	src/arch/arm/miscregs.hh	/^       Bitfield<1,0> ir0;$/;"	m	namespace:ArmISA
ir1	src/arch/arm/miscregs.hh	/^       Bitfield<3,2> ir1;$/;"	m	namespace:ArmISA
ir2	src/arch/arm/miscregs.hh	/^       Bitfield<5,4> ir2;$/;"	m	namespace:ArmISA
ir3	src/arch/arm/miscregs.hh	/^       Bitfield<7,6> ir3;$/;"	m	namespace:ArmISA
ir4	src/arch/arm/miscregs.hh	/^       Bitfield<9,8> ir4;$/;"	m	namespace:ArmISA
ir5	src/arch/arm/miscregs.hh	/^       Bitfield<11,10> ir5;$/;"	m	namespace:ArmISA
ir6	src/arch/arm/miscregs.hh	/^       Bitfield<13,12> ir6;$/;"	m	namespace:ArmISA
ir7	src/arch/arm/miscregs.hh	/^       Bitfield<15,14> ir7;$/;"	m	namespace:ArmISA
irgn0	src/arch/arm/miscregs.hh	/^        Bitfield<9, 8> irgn0;$/;"	m	namespace:ArmISA
irgn1	src/arch/arm/miscregs.hh	/^        Bitfield<25, 24> irgn1;$/;"	m	namespace:ArmISA
irq	src/arch/arm/miscregs.hh	/^        Bitfield<1> irq;$/;"	m	namespace:ArmISA
irqAsserted	src/cpu/kvm/arm_cpu.hh	/^    bool irqAsserted;$/;"	m	class:ArmKvmCPU
irqEnable	src/dev/arm/gic_pl390.hh	/^    bool irqEnable;$/;"	m	class:Pl390
is	src/arch/mips/pra_constants.hh	/^    Bitfield<24, 22> is;$/;"	m	namespace:MipsISA
is2ndSplit	src/cpu/inorder/resources/cache_unit.hh	/^    bool is2ndSplit() $/;"	f	class:CacheRequest
isAdvDesc	src/dev/i8254xGBe_defs.hh	/^inline bool isAdvDesc(TxDesc *d) { return !isLegacy(d) && isTypes(d, TXD_ADVDATA,TXD_ADVCNXT);  }$/;"	f	namespace:iGbReg::TxdOp
isAlignmentFault	src/arch/alpha/faults.hh	/^    bool isAlignmentFault() const {return true;}$/;"	f	class:AlphaISA::AlignmentFault
isAllZeros	src/cpu/o3/lsq_unit.hh	/^        bool isAllZeros;$/;"	m	struct:LSQUnit::SQEntry
isAtCommit	src/cpu/base_dyn_inst.hh	/^    bool isAtCommit() { return status[AtCommit]; }$/;"	f	class:BaseDynInst
isAtCommit	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isAtCommit() { return status[AtCommit]; }$/;"	f	class:InOrderDynInst
isAtomicMode	src/sim/system.hh	/^    bool isAtomicMode() const {$/;"	f	class:System
isBAR	src/dev/pcidev.hh	/^    isBAR(Addr addr, int bar) const$/;"	f	class:PciDevice
isBSYSet	src/dev/ide_disk.hh	/^    bool isBSYSet() { return (status & STATUS_BSY_BIT); }$/;"	f	class:IdeDisk
isBenign	src/arch/x86/faults.hh	/^        virtual bool isBenign()$/;"	f	class:X86ISA::X86FaultBase
isBigEndian64	src/arch/arm/utility.cc	/^isBigEndian64(ThreadContext *tc)$/;"	f	namespace:ArmISA
isBlocked	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::isBlocked(ThreadID tid)$/;"	f	class:PipelineStage
isBlocked	src/cpu/ozone/back_end.hh	/^    bool isBlocked() { return status == Blocked || dispatchStatus == Blocked; }$/;"	f	class:BackEnd
isBlocked	src/cpu/ozone/inorder_back_end.hh	/^    bool isBlocked() { return status == DcacheMissStoreStall ||$/;"	f	class:InorderBackEnd
isBlocked	src/cpu/ozone/lw_back_end.hh	/^    bool isBlocked() { return status == Blocked || dispatchStatus == Blocked; }$/;"	f	class:LWBackEnd
isBlocked	src/mem/cache/base.hh	/^    bool isBlocked() const$/;"	f	class:BaseCache
isBroadcast	src/mem/ruby/common/NetDest.cc	/^NetDest::isBroadcast() const$/;"	f	class:NetDest
isBroadcast	src/mem/ruby/common/Set.cc	/^Set::isBroadcast() const$/;"	f	class:Set
isBuffer	src/mem/slicc/symbols/Type.py	/^    def isBuffer(self):$/;"	m	class:Type
isBufferNotFull	src/mem/ruby/network/garnet/flexible-pipeline/FlexibleConsumer.hh	/^    virtual bool isBufferNotFull(int vc, int inport) { return true; }$/;"	f	class:FlexibleConsumer
isBufferNotFull	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.hh	/^    bool isBufferNotFull(int vc, int inport) { return true; }$/;"	f	class:NetworkInterface
isBufferNotFull	src/mem/ruby/network/garnet/flexible-pipeline/Router.cc	/^Router::isBufferNotFull(int vc, int inport)$/;"	f	class:Router
isBufferNotFull_link	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.cc	/^NetworkLink::isBufferNotFull_link(int vc)$/;"	f	class:NetworkLink
isBusy	src/dev/etherint.hh	/^    virtual bool isBusy() { return false; }$/;"	f	class:EtherInt
isBusy	src/dev/etherlink.hh	/^        bool isBusy() { return txlink->busy(); }$/;"	f	class:EtherLink::Interface
isBusy	src/mem/simple_mem.hh	/^    bool isBusy;$/;"	m	class:SimpleMemory
isCC	src/cpu/static_inst.hh	/^    bool isCC()           const { return flags[IsCC]; }$/;"	f	class:StaticInst
isCCPhysReg	src/cpu/o3/regfile.hh	/^    bool isCCPhysReg(PhysRegIndex reg_idx)$/;"	f	class:PhysRegFile
isCCReg	src/arch/isa_parser.py	/^    def isCCReg(self):$/;"	m	class:CCRegOperand
isCCReg	src/arch/isa_parser.py	/^    def isCCReg(self):$/;"	m	class:Operand
isCall	src/cpu/base_dyn_inst.hh	/^    bool isCall()         const { return staticInst->isCall(); }$/;"	f	class:BaseDynInst
isCall	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isCall()         const { return staticInst->isCall(); }$/;"	f	class:InOrderDynInst
isCall	src/cpu/static_inst.hh	/^    bool isCall()         const { return flags[IsCall]; }$/;"	f	class:StaticInst
isCanonicalAddress	src/cpu/kvm/x86_cpu.cc	/^isCanonicalAddress(uint64_t addr)$/;"	f	file:
isClass	src/base/inet.hh	/^    bool isClass(int cls) const { return typeClass() == IP_OPT_CLASS(cls); }$/;"	f	struct:Net::IpOpt
isClearLL	src/mem/request.hh	/^    bool isClearLL() const { return _flags.isSet(CLEAR_LL); }$/;"	f	class:Request
isCommitted	src/cpu/base_dyn_inst.hh	/^    bool isCommitted() const { return status[Committed]; }$/;"	f	class:BaseDynInst
isCommitted	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isCommitted() const { return status[Committed]; }$/;"	f	class:InOrderDynInst
isComplete	src/arch/arm/stage2_lookup.hh	/^    bool isComplete() const { return complete; }$/;"	f	class:ArmISA::Stage2LookUp
isCompleted	src/cpu/base_dyn_inst.hh	/^    bool isCompleted() const { return status[Completed]; }$/;"	f	class:BaseDynInst
isCompleted	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isCompleted() const { return status[Completed]; }$/;"	f	class:InOrderDynInst
isCompleted	src/cpu/inorder/resource.hh	/^    bool isCompleted() { return completed; }$/;"	f	class:ResourceRequest
isCondCtrl	src/cpu/base_dyn_inst.hh	/^    bool isCondCtrl()     const { return staticInst->isCondCtrl(); }$/;"	f	class:BaseDynInst
isCondCtrl	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isCondCtrl()     const { return staticInst->isCondCtrl(); }$/;"	f	class:InOrderDynInst
isCondCtrl	src/cpu/static_inst.hh	/^    bool isCondCtrl()     const { return flags[IsCondControl]; }$/;"	f	class:StaticInst
isCondDelaySlot	src/cpu/base_dyn_inst.hh	/^    bool isCondDelaySlot() const { return staticInst->isCondDelaySlot(); }$/;"	f	class:BaseDynInst
isCondDelaySlot	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isCondDelaySlot() const { return staticInst->isCondDelaySlot(); }$/;"	f	class:InOrderDynInst
isCondDelaySlot	src/cpu/static_inst.hh	/^    bool isCondDelaySlot() const { return flags[IsCondDelaySlot]; }$/;"	f	class:StaticInst
isCondSwap	src/mem/request.hh	/^    bool isCondSwap() const { return _flags.isSet(MEM_SWAP_COND); }$/;"	f	class:Request
isConfReported	src/mem/abstract_mem.hh	/^    bool isConfReported() const { return confTableReported; }$/;"	f	class:AbstractMemory
isConnected	src/mem/port.cc	/^BaseMasterPort::isConnected() const$/;"	f	class:BaseMasterPort
isConnected	src/mem/port.cc	/^BaseSlavePort::isConnected() const$/;"	f	class:BaseSlavePort
isContext	src/dev/i8254xGBe_defs.hh	/^inline bool isContext(TxDesc *d) { return !isLegacy(d) && isTypes(d,TXD_CNXT, TXD_ADVCNXT); }$/;"	f	namespace:iGbReg::TxdOp
isControl	src/cpu/base_dyn_inst.hh	/^    bool isControl()      const { return staticInst->isControl(); }$/;"	f	class:BaseDynInst
isControl	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isControl()      const { return staticInst->isControl(); }$/;"	f	class:InOrderDynInst
isControl	src/cpu/static_inst.hh	/^    bool isControl()      const { return flags[IsControl]; }$/;"	f	class:StaticInst
isControlReg	src/arch/isa_parser.py	/^    def isControlReg(self):$/;"	m	class:ControlRegOperand
isControlReg	src/arch/isa_parser.py	/^    def isControlReg(self):$/;"	m	class:Operand
isCopied	src/base/inet.hh	/^    bool isCopied(int cpy) const { return typeCopied() == IP_OPT_COPIED(cpy); }$/;"	f	struct:Net::IpOpt
isDEVSelect	src/dev/ide_disk.cc	/^IdeDisk::isDEVSelect()$/;"	f	class:IdeDisk
isData	src/dev/i8254xGBe_defs.hh	/^inline bool isData(TxDesc *d) { return !isLegacy(d) && isTypes(d, TXD_DATA, TXD_ADVDATA); }$/;"	f	namespace:iGbReg::TxdOp
isDataPrefetch	src/cpu/base_dyn_inst.hh	/^    bool isDataPrefetch() const { return staticInst->isDataPrefetch(); }$/;"	f	class:BaseDynInst
isDataPrefetch	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isDataPrefetch() const { return staticInst->isDataPrefetch(); }$/;"	f	class:InOrderDynInst
isDataPrefetch	src/cpu/static_inst.hh	/^    bool isDataPrefetch() const { return flags[IsDataPrefetch]; }$/;"	f	class:StaticInst
isDeadlockEventScheduled	src/mem/ruby/system/DMASequencer.hh	/^    bool isDeadlockEventScheduled() const { return false; }$/;"	f	class:DMASequencer
isDeadlockEventScheduled	src/mem/ruby/system/RubyPortProxy.hh	/^    bool isDeadlockEventScheduled() const { return false; }$/;"	f	class:RubyPortProxy
isDeadlockEventScheduled	src/mem/ruby/system/Sequencer.hh	/^    bool isDeadlockEventScheduled() const$/;"	f	class:Sequencer
isDec	src/base/intmath.hh	/^isDec(char c)$/;"	f
isDelayedCommit	src/cpu/base_dyn_inst.hh	/^    bool isDelayedCommit() const { return staticInst->isDelayedCommit(); }$/;"	f	class:BaseDynInst
isDelayedCommit	src/cpu/static_inst.hh	/^    bool isDelayedCommit() const { return flags[IsDelayedCommit]; }$/;"	f	class:StaticInst
isDenormalized	src/arch/power/insts/floating.hh	/^    isDenormalized(uint32_t val_bits) const$/;"	f	class:PowerISA::FloatOp
isDestValid	src/mem/packet.hh	/^    bool isDestValid() const { return dest != InvalidPortID; }$/;"	f	class:Packet
isDirectCtrl	src/cpu/base_dyn_inst.hh	/^    bool isDirectCtrl()   const { return staticInst->isDirectCtrl(); }$/;"	f	class:BaseDynInst
isDirectCtrl	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isDirectCtrl()   const { return staticInst->isDirectCtrl(); }$/;"	f	class:InOrderDynInst
isDirectCtrl	src/cpu/static_inst.hh	/^    bool isDirectCtrl()   const { return flags[IsDirectControl]; }$/;"	f	class:StaticInst
isDirty	src/mem/cache/blk.hh	/^    bool isDirty() const { return _isDirty; };$/;"	f	class:CacheBlkIsDirtyVisitor
isDirty	src/mem/cache/blk.hh	/^    bool isDirty() const$/;"	f	class:CacheBlk
isDirty	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::isDirty() const$/;"	f	class:Cache
isDiskSelected	src/dev/ide_ctrl.cc	/^IdeController::isDiskSelected(IdeDisk *diskPtr)$/;"	f	class:IdeController
isDoneSquashing	src/cpu/o3/rob.hh	/^    bool isDoneSquashing(ThreadID tid) const$/;"	f	class:ROB
isDrained	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::isDrained() const$/;"	f	class:DefaultCommit
isDrained	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::isDrained() const$/;"	f	class:FullO3CPU
isDrained	src/cpu/o3/decode.hh	/^    bool isDrained() const { return true; }$/;"	f	class:DefaultDecode
isDrained	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::isDrained() const$/;"	f	class:DefaultFetch
isDrained	src/cpu/o3/fu_pool.cc	/^FUPool::isDrained() const$/;"	f	class:FUPool
isDrained	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::isDrained() const$/;"	f	class:DefaultIEW
isDrained	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::isDrained() const$/;"	f	class:LSQ
isDrained	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::isDrained() const$/;"	f	class:DefaultRename
isDrained	src/cpu/simple/atomic.hh	/^    bool isDrained() {$/;"	f	class:AtomicSimpleCPU
isDrained	src/cpu/simple/timing.hh	/^    bool isDrained() {$/;"	f	class:TimingSimpleCPU
isDraining	src/cpu/o3/cpu.hh	/^    bool isDraining() const { return getDrainState() == Drainable::Draining; }$/;"	f	class:FullO3CPU
isDynamic	src/base/loader/elf_object.hh	/^    virtual bool isDynamic() { return sectionExists(".interp"); }$/;"	f	class:ElfObject
isDynamic	src/base/loader/object_file.hh	/^    virtual bool isDynamic() { return false; }$/;"	f	class:ObjectFile
isElement	src/mem/ruby/common/NetDest.cc	/^NetDest::isElement(MachineID element) const$/;"	f	class:NetDest
isElement	src/mem/ruby/common/Set.hh	/^    isElement(NodeID element) const$/;"	f	class:Set
isEmpty	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::isEmpty() const$/;"	f	class:LSQ
isEmpty	src/cpu/o3/lsq_unit.hh	/^    bool isEmpty() const { return lqEmpty() && sqEmpty(); }$/;"	f	class:LSQUnit
isEmpty	src/cpu/o3/rob.hh	/^    bool isEmpty() const$/;"	f	class:ROB
isEmpty	src/cpu/o3/rob.hh	/^    bool isEmpty(ThreadID tid) const$/;"	f	class:ROB
isEmpty	src/cpu/ozone/front_end.hh	/^    bool isEmpty() { return instBuffer.empty(); }$/;"	f	class:FrontEnd
isEmpty	src/mem/ruby/buffers/MessageBuffer.hh	/^    bool isEmpty() const { return m_prio_heap.size() == 0; }$/;"	f	class:MessageBuffer
isEmpty	src/mem/ruby/common/NetDest.cc	/^NetDest::isEmpty() const$/;"	f	class:NetDest
isEmpty	src/mem/ruby/common/Set.cc	/^Set::isEmpty() const$/;"	f	class:Set
isEmpty	src/mem/ruby/network/garnet/fixed-pipeline/flitBuffer_d.cc	/^flitBuffer_d::isEmpty()$/;"	f	class:flitBuffer_d
isEmpty	src/mem/ruby/network/garnet/flexible-pipeline/flitBuffer.cc	/^flitBuffer::isEmpty()$/;"	f	class:flitBuffer
isEntry	src/arch/alpha/stacktrace.cc	/^StackTrace::isEntry(Addr addr)$/;"	f	class:AlphaISA::StackTrace
isEntry	src/arch/arm/stacktrace.cc	/^    StackTrace::isEntry(Addr addr)$/;"	f	class:ArmISA::StackTrace
isEntry	src/arch/mips/stacktrace.cc	/^StackTrace::isEntry(Addr addr)$/;"	f	class:StackTrace
isEntry	src/arch/power/stacktrace.cc	/^StackTrace::isEntry(Addr addr)$/;"	f	class:PowerISA::StackTrace
isEntry	src/arch/x86/stacktrace.cc	/^    StackTrace::isEntry(Addr addr)$/;"	f	class:X86ISA::StackTrace
isEnumeration	src/mem/slicc/symbols/Type.py	/^    def isEnumeration(self):$/;"	m	class:Type
isEqual	src/mem/ruby/common/NetDest.cc	/^NetDest::isEqual(const NetDest& n) const$/;"	f	class:NetDest
isEqual	src/mem/ruby/common/Set.cc	/^Set::isEqual(const Set& set) const$/;"	f	class:Set
isError	src/mem/packet.hh	/^    bool isError() const        { return cmd.isError(); }$/;"	f	class:Packet
isError	src/mem/packet.hh	/^    bool isError() const        { return testCmdAttrib(IsError); }$/;"	f	class:MemCmd
isExecuted	src/cpu/base_dyn_inst.hh	/^    bool isExecuted() const { return status[Executed]; }$/;"	f	class:BaseDynInst
isExecuted	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isExecuted() const { return status[Executed]; }$/;"	f	class:InOrderDynInst
isExitEvent	src/sim/eventq.hh	/^    bool isExitEvent() const { return flags.isSet(IsExitEvent); }$/;"	f	class:Event
isExpressSnoop	src/mem/packet.hh	/^    bool isExpressSnoop() const     { return flags.isSet(EXPRESS_SNOOP); }$/;"	f	class:Packet
isExternal	src/mem/slicc/symbols/Type.py	/^    def isExternal(self):$/;"	m	class:Type
isFaultModelEnabled	src/mem/ruby/network/garnet/BaseGarnetNetwork.hh	/^    bool isFaultModelEnabled() {return m_enable_fault_model;}$/;"	f	class:BaseGarnetNetwork
isFetch	src/arch/arm/table_walker.hh	/^        bool isFetch;$/;"	m	class:ArmISA::TableWalker::WalkerState
isFile	src/base/output.cc	/^OutputDirectory::isFile(const std::ostream *os)$/;"	f	class:OutputDirectory
isFile	src/base/output.cc	/^OutputDirectory::isFile(const string &name) const$/;"	f	class:OutputDirectory
isFile	src/base/output.hh	/^    static inline bool isFile(const std::ostream &os) {$/;"	f	class:OutputDirectory
isFirstMicroop	src/cpu/base_dyn_inst.hh	/^    bool isFirstMicroop() const { return staticInst->isFirstMicroop(); }$/;"	f	class:BaseDynInst
isFirstMicroop	src/cpu/static_inst.hh	/^    bool isFirstMicroop() const { return flags[IsFirstMicroop]; }$/;"	f	class:StaticInst
isFlagSet	src/sim/eventq.hh	/^    isFlagSet(Flags _flags) const$/;"	f	class:Event
isFloatPhysReg	src/cpu/o3/regfile.hh	/^    bool isFloatPhysReg(PhysRegIndex reg_idx) const$/;"	f	class:PhysRegFile
isFloatReg	src/arch/isa_parser.py	/^    def isFloatReg(self):$/;"	m	class:FloatRegOperand
isFloatReg	src/arch/isa_parser.py	/^    def isFloatReg(self):$/;"	m	class:Operand
isFloating	src/cpu/base_dyn_inst.hh	/^    bool isFloating()     const { return staticInst->isFloating(); }$/;"	f	class:BaseDynInst
isFloating	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isFloating()     const { return staticInst->isFloating(); }$/;"	f	class:InOrderDynInst
isFloating	src/cpu/static_inst.hh	/^    bool isFloating()     const { return flags[IsFloating]; }$/;"	f	class:StaticInst
isFlush	src/mem/packet.hh	/^    bool isFlush() const        { return cmd.isFlush(); }$/;"	f	class:Packet
isFlush	src/mem/packet.hh	/^    bool isFlush() const        { return testCmdAttrib(IsFlush); }$/;"	f	class:MemCmd
isForward	src/mem/cache/mshr.hh	/^    bool isForward;$/;"	m	class:MSHR
isForwardNoResponse	src/mem/cache/mshr.hh	/^    bool isForwardNoResponse() const$/;"	f	class:MSHR
isFull	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::isFull()$/;"	f	class:InstructionQueue
isFull	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::isFull(ThreadID tid)$/;"	f	class:InstructionQueue
isFull	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::isFull()$/;"	f	class:LSQ
isFull	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::isFull(ThreadID tid)$/;"	f	class:LSQ
isFull	src/cpu/o3/lsq_unit.hh	/^    bool isFull() { return lqFull() || sqFull(); }$/;"	f	class:LSQUnit
isFull	src/cpu/o3/rob.hh	/^    bool isFull()$/;"	f	class:ROB
isFull	src/cpu/o3/rob.hh	/^    bool isFull(ThreadID tid)$/;"	f	class:ROB
isFull	src/cpu/ozone/back_end.hh	/^        bool isFull() { return numInsts >= size; }$/;"	f	class:BackEnd::InstQueue
isFull	src/cpu/ozone/back_end.hh	/^    bool isFull() { return numInsts >= numROBEntries; }$/;"	f	class:BackEnd
isFull	src/cpu/ozone/inorder_back_end.hh	/^    bool isFull() { return false; }$/;"	f	class:InorderBackEnd
isFull	src/cpu/ozone/inst_queue_impl.hh	/^InstQueue<Impl>::isFull()$/;"	f	class:InstQueue
isFull	src/cpu/ozone/inst_queue_impl.hh	/^InstQueue<Impl>::isFull(ThreadID tid)$/;"	f	class:InstQueue
isFull	src/cpu/ozone/lsq_unit.hh	/^    bool isFull() { return lqFull() || sqFull(); }$/;"	f	class:OzoneLSQ
isFull	src/cpu/ozone/lw_back_end.hh	/^    bool isFull() { return numInsts >= numROBEntries; }$/;"	f	class:LWBackEnd
isFull	src/cpu/ozone/lw_lsq.hh	/^    bool isFull() { return lqFull() || sqFull(); }$/;"	f	class:OzoneLWLSQ
isFull	src/mem/cache/mshr_queue.hh	/^    bool isFull() const$/;"	f	class:MSHRQueue
isFull	src/mem/ruby/network/garnet/fixed-pipeline/flitBuffer_d.cc	/^flitBuffer_d::isFull()$/;"	f	class:flitBuffer_d
isFull	src/mem/ruby/network/garnet/flexible-pipeline/flitBuffer.cc	/^flitBuffer::isFull()$/;"	f	class:flitBuffer
isGenericIprAccess	src/arch/generic/mmapped_ipr.hh	/^    isGenericIprAccess(const Packet *pkt)$/;"	f	namespace:GenericISA
isGlobal	src/mem/slicc/symbols/Type.py	/^    def isGlobal(self):$/;"	m	class:Type
isHeadReady	src/cpu/o3/rob_impl.hh	/^ROB<Impl>::isHeadReady(ThreadID tid)$/;"	f	class:ROB
isHex	src/base/intmath.hh	/^isHex(char c)$/;"	f
isHyp	src/arch/arm/pagetable.hh	/^    bool isHyp;$/;"	m	struct:ArmISA::TlbEntry
isHyp	src/arch/arm/table_walker.hh	/^        bool    isHyp;$/;"	m	class:ArmISA::TableWalker::WalkerState
isHyp	src/arch/arm/tlb.hh	/^    bool isHyp;$/;"	m	class:ArmISA::TLB
isHyperPriv	src/arch/sparc/isa.hh	/^    bool isHyperPriv() { return hpstate.hpriv; }$/;"	f	class:SparcISA::ISA
isIENSet	src/dev/ide_disk.hh	/^    bool isIENSet() { return nIENBit; }$/;"	f	class:IdeDisk
isInAddrMap	src/mem/abstract_mem.hh	/^    bool isInAddrMap() const { return inAddrMap; }$/;"	f	class:AbstractMemory
isInIQ	src/cpu/base_dyn_inst.hh	/^    bool isInIQ() const { return status[IqEntry]; }$/;"	f	class:BaseDynInst
isInLSQ	src/cpu/base_dyn_inst.hh	/^    bool isInLSQ() const { return status[LsqEntry]; }$/;"	f	class:BaseDynInst
isInPort	src/mem/slicc/symbols/Type.py	/^    def isInPort(self):$/;"	m	class:Type
isInROB	src/cpu/base_dyn_inst.hh	/^    bool isInROB() const { return status[RobEntry]; }$/;"	f	class:BaseDynInst
isInState	src/mem/ruby/network/garnet/fixed-pipeline/OutVcState_d.hh	/^    isInState(VC_state_type state, Cycles request_time)$/;"	f	class:OutVcState_d
isInState	src/mem/ruby/network/garnet/flexible-pipeline/InVcState.cc	/^InVcState::isInState(VC_state_type state, Cycles request_time)$/;"	f	class:InVcState
isInState	src/mem/ruby/network/garnet/flexible-pipeline/OutVcState.cc	/^OutVcState::isInState(VC_state_type state, Cycles request_time)$/;"	f	class:OutVcState
isIndirectCtrl	src/cpu/base_dyn_inst.hh	/^    bool isIndirectCtrl() const { return staticInst->isIndirectCtrl(); }$/;"	f	class:BaseDynInst
isIndirectCtrl	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isIndirectCtrl() const { return staticInst->isIndirectCtrl(); }$/;"	f	class:InOrderDynInst
isIndirectCtrl	src/cpu/static_inst.hh	/^    bool isIndirectCtrl() const { return flags[IsIndirectControl]; }$/;"	f	class:StaticInst
isInfinity	src/arch/power/insts/floating.hh	/^    isInfinity(uint32_t val_bits) const$/;"	f	class:PowerISA::FloatOp
isInstFetch	src/mem/request.hh	/^    bool isInstFetch() const { return _flags.isSet(INST_FETCH); }$/;"	f	class:Request
isInstPrefetch	src/cpu/base_dyn_inst.hh	/^    bool isInstPrefetch() const { return staticInst->isInstPrefetch(); }$/;"	f	class:BaseDynInst
isInstPrefetch	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isInstPrefetch() const { return staticInst->isInstPrefetch(); }$/;"	f	class:InOrderDynInst
isInstPrefetch	src/cpu/static_inst.hh	/^    bool isInstPrefetch() const { return flags[IsInstPrefetch]; }$/;"	f	class:StaticInst
isInstReadableCpuPort	src/cpu/testers/rubytest/RubyTester.cc	/^RubyTester::isInstReadableCpuPort(int idx)$/;"	f	class:RubyTester
isIntPhysReg	src/cpu/o3/regfile.hh	/^    bool isIntPhysReg(PhysRegIndex reg_idx) const$/;"	f	class:PhysRegFile
isIntReg	src/arch/isa_parser.py	/^    def isIntReg(self):$/;"	m	class:IntRegOperand
isIntReg	src/arch/isa_parser.py	/^    def isIntReg(self):$/;"	m	class:Operand
isInteger	src/cpu/base_dyn_inst.hh	/^    bool isInteger()      const { return staticInst->isInteger(); }$/;"	f	class:BaseDynInst
isInteger	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isInteger()      const { return staticInst->isInteger(); }$/;"	f	class:InOrderDynInst
isInteger	src/cpu/static_inst.hh	/^    bool isInteger()      const { return flags[IsInteger]; }$/;"	f	class:StaticInst
isInterface	src/mem/slicc/symbols/Type.py	/^    def isInterface(self):$/;"	m	class:Type
isInvalidate	src/mem/packet.hh	/^    bool isInvalidate() const   { return cmd.isInvalidate(); }$/;"	f	class:Packet
isInvalidate	src/mem/packet.hh	/^    bool isInvalidate() const   { return testCmdAttrib(IsInvalidate); }$/;"	f	class:MemCmd
isInvariantReg	src/cpu/kvm/arm_cpu.cc	/^ArmKvmCPU::isInvariantReg(uint64_t id)$/;"	f	class:ArmKvmCPU
isIprAccess	src/cpu/base_dyn_inst.hh	/^    bool isIprAccess() const { return staticInst->isIprAccess(); }$/;"	f	class:BaseDynInst
isIprAccess	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isIprAccess() const { return staticInst->isIprAccess(); }$/;"	f	class:InOrderDynInst
isIprAccess	src/cpu/static_inst.hh	/^    bool isIprAccess() const { return flags[IsIprAccess]; }$/;"	f	class:StaticInst
isIssued	src/cpu/base_dyn_inst.hh	/^    bool isIssued() const { return status[Issued]; }$/;"	f	class:BaseDynInst
isIssued	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isIssued() const { return status[Issued]; }$/;"	f	class:InOrderDynInst
isLLSC	src/mem/packet.hh	/^    bool isLLSC() const         { return cmd.isLLSC(); }$/;"	f	class:Packet
isLLSC	src/mem/packet.hh	/^    bool isLLSC() const         { return testCmdAttrib(IsLlsc); }$/;"	f	class:MemCmd
isLLSC	src/mem/request.hh	/^    bool isLLSC() const { return _flags.isSet(LLSC); }$/;"	f	class:Request
isLastMicroop	src/cpu/base_dyn_inst.hh	/^    bool isLastMicroop() const { return staticInst->isLastMicroop(); }$/;"	f	class:BaseDynInst
isLastMicroop	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isLastMicroop() const { return staticInst->isLastMicroop(); }$/;"	f	class:InOrderDynInst
isLastMicroop	src/cpu/static_inst.hh	/^    bool isLastMicroop() const { return flags[IsLastMicroop]; }$/;"	f	class:StaticInst
isLegacy	src/dev/i8254xGBe_defs.hh	/^inline bool isLegacy(TxDesc *d) { return !bits(d->d2,29,29); }$/;"	f	namespace:iGbReg::TxdOp
isLoad	src/cpu/base_dyn_inst.hh	/^    bool isLoad()         const { return staticInst->isLoad(); }$/;"	f	class:BaseDynInst
isLoad	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isLoad()         const { return staticInst->isLoad(); }$/;"	f	class:InOrderDynInst
isLoad	src/cpu/o3/lsq_unit.hh	/^        bool isLoad;$/;"	m	class:LSQUnit::LSQSenderState
isLoad	src/cpu/ozone/lw_lsq.hh	/^        bool isLoad;$/;"	m	class:OzoneLWLSQ::LSQSenderState
isLoad	src/cpu/static_inst.hh	/^    bool isLoad()         const { return flags[IsLoad]; }$/;"	f	class:StaticInst
isLoadBlocked	src/cpu/o3/lsq_unit.hh	/^    bool isLoadBlocked;$/;"	m	class:LSQUnit
isLoadBlocked	src/cpu/ozone/lsq_unit.hh	/^    bool isLoadBlocked;$/;"	m	class:OzoneLSQ
isLoadBlocked	src/cpu/ozone/lw_lsq.hh	/^    bool isLoadBlocked;$/;"	m	class:OzoneLWLSQ
isLoadBlockedHandled	src/cpu/o3/lsq.hh	/^    bool isLoadBlockedHandled(ThreadID tid)$/;"	f	class:LSQ
isLoadBlockedHandled	src/cpu/o3/lsq_unit.hh	/^    bool isLoadBlockedHandled()$/;"	f	class:LSQUnit
isLoadBlockedHandled	src/cpu/ozone/lw_lsq.hh	/^    bool isLoadBlockedHandled()$/;"	f	class:OzoneLWLSQ
isLocked	src/mem/request.hh	/^    bool isLocked() const { return _flags.isSet(LOCKED); }$/;"	f	class:Request
isLocked	src/mem/ruby/system/CacheMemory.cc	/^CacheMemory::isLocked(const Address& address, int context)$/;"	f	class:CacheMemory
isLocked	src/mem/ruby/system/PersistentTable.cc	/^PersistentTable::isLocked(const Address& address) const$/;"	f	class:PersistentTable
isMMUFault	src/arch/arm/faults.cc	/^AbortFault<T>::isMMUFault() const$/;"	f	class:ArmISA::AbortFault
isMachineCheckFault	src/arch/mips/faults.hh	/^    bool isMachineCheckFault() { return true; }$/;"	f	class:MipsISA::MachineCheckFault
isMacroop	src/cpu/base_dyn_inst.hh	/^    bool isMacroop() const { return staticInst->isMacroop(); }$/;"	f	class:BaseDynInst
isMacroop	src/cpu/static_inst.hh	/^    bool isMacroop() const { return flags[IsMacroop]; }$/;"	f	class:StaticInst
isMem	src/arch/isa_parser.py	/^    def isMem(self):$/;"	m	class:MemOperand
isMem	src/arch/isa_parser.py	/^    def isMem(self):$/;"	m	class:Operand
isMemAccComplete	src/cpu/inorder/resources/cache_unit.hh	/^    bool isMemAccComplete() { return memAccComplete; }$/;"	f	class:CacheRequest
isMemAccPending	src/cpu/inorder/resources/cache_unit.hh	/^    bool isMemAccPending() { return memAccPending; }$/;"	f	class:CacheRequest
isMemAddr	src/mem/physical.cc	/^PhysicalMemory::isMemAddr(Addr addr) const$/;"	f	class:PhysicalMemory
isMemAddr	src/sim/system.cc	/^System::isMemAddr(Addr addr) const$/;"	f	class:System
isMemBarrier	src/cpu/base_dyn_inst.hh	/^    bool isMemBarrier()   const { return staticInst->isMemBarrier(); }$/;"	f	class:BaseDynInst
isMemBarrier	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isMemBarrier()   const { return staticInst->isMemBarrier(); }$/;"	f	class:InOrderDynInst
isMemBarrier	src/cpu/static_inst.hh	/^    bool isMemBarrier()   const { return flags[IsMemBarrier]; }$/;"	f	class:StaticInst
isMemRef	src/cpu/base_dyn_inst.hh	/^    bool isMemRef()       const { return staticInst->isMemRef(); }$/;"	f	class:BaseDynInst
isMemRef	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isMemRef()       const { return staticInst->isMemRef(); }$/;"	f	class:InOrderDynInst
isMemRef	src/cpu/static_inst.hh	/^    bool isMemRef()       const { return flags[IsMemRef]; }$/;"	f	class:StaticInst
isMemStall	src/cpu/inorder/resource.hh	/^    bool isMemStall() { return memStall; }$/;"	f	class:ResourceRequest
isMessage	src/mem/slicc/symbols/Type.py	/^    def isMessage(self):$/;"	m	class:Type
isMicroBranch	src/cpu/base_dyn_inst.hh	/^    bool isMicroBranch() const { return staticInst->isMicroBranch(); }$/;"	f	class:BaseDynInst
isMicroBranch	src/cpu/static_inst.hh	/^    bool isMicroBranch() const { return flags[IsMicroBranch]; }$/;"	f	class:StaticInst
isMicroop	src/cpu/base_dyn_inst.hh	/^    bool isMicroop() const { return staticInst->isMicroop(); }$/;"	f	class:BaseDynInst
isMicroop	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isMicroop() const { return staticInst->isMicroop(); }$/;"	f	class:InOrderDynInst
isMicroop	src/cpu/static_inst.hh	/^    bool isMicroop() const { return flags[IsMicroop]; }$/;"	f	class:StaticInst
isMisc	src/arch/arm/types.hh	/^        Bitfield<32>     isMisc;$/;"	m	namespace:ArmISA
isMmappedIpr	src/mem/request.hh	/^    bool isMmappedIpr() const { return _flags.isSet(MMAPPED_IPR); }$/;"	f	class:Request
isNan	src/arch/mips/utility.cc	/^isNan(void *val_ptr, int size)$/;"	f	namespace:MipsISA
isNan	src/arch/power/insts/floating.hh	/^    isNan(double val) const$/;"	f	class:PowerISA::FloatOp
isNan	src/arch/power/insts/floating.hh	/^    isNan(float val) const$/;"	f	class:PowerISA::FloatOp
isNan	src/arch/power/insts/floating.hh	/^    isNan(uint32_t val_bits) const$/;"	f	class:PowerISA::FloatOp
isNan	src/arch/power/insts/floating.hh	/^    isNan(uint64_t val_bits) const$/;"	f	class:PowerISA::FloatOp
isNegative	src/arch/power/insts/floating.hh	/^    isNegative(uint32_t val_bits) const$/;"	f	class:PowerISA::FloatOp
isNetworkMessage	src/mem/slicc/symbols/Type.py	/^    def isNetworkMessage(self):$/;"	m	class:Type
isNonPriv	src/arch/sparc/isa.hh	/^    bool isNonPriv() { return !isPriv(); }$/;"	f	class:SparcISA::ISA
isNonSpeculative	src/cpu/base_dyn_inst.hh	/^    bool isNonSpeculative() const { return staticInst->isNonSpeculative(); }$/;"	f	class:BaseDynInst
isNonSpeculative	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isNonSpeculative() const { return staticInst->isNonSpeculative(); }$/;"	f	class:InOrderDynInst
isNonSpeculative	src/cpu/static_inst.hh	/^    bool isNonSpeculative() const { return flags[IsNonSpeculative]; }$/;"	f	class:StaticInst
isNop	src/cpu/base_dyn_inst.hh	/^    bool isNop()          const { return staticInst->isNop(); }$/;"	f	class:BaseDynInst
isNop	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isNop()          const { return staticInst->isNop(); }$/;"	f	class:InOrderDynInst
isNop	src/cpu/static_inst.hh	/^    bool isNop()          const { return flags[IsNop]; }$/;"	f	class:StaticInst
isNormalized	src/arch/power/insts/floating.hh	/^    isNormalized(uint32_t val_bits) const$/;"	f	class:PowerISA::FloatOp
isNull	src/mem/abstract_mem.hh	/^    bool isNull() const { return params()->null; }$/;"	f	class:AbstractMemory
isNullPointer	src/python/m5/SimObject.py	/^     isNullPointer, SimObjectVector, Port$/;"	i
isNullPointer	src/python/m5/params.py	/^def isNullPointer(value):$/;"	f
isNumber	src/base/inet.hh	/^    bool isNumber(int num) const { return typeNumber() == IP_OPT_NUMBER(num); }$/;"	f	struct:Net::IpOpt
isOct	src/base/intmath.hh	/^isOct(char c)$/;"	f
isOutPort	src/mem/slicc/symbols/Type.py	/^    def isOutPort(self):$/;"	m	class:Type
isPCPart	src/arch/isa_parser.py	/^    def isPCPart(self):$/;"	m	class:Operand
isPCState	src/arch/isa_parser.py	/^    def isPCState(self):$/;"	m	class:Operand
isPCState	src/arch/isa_parser.py	/^    def isPCState(self):$/;"	m	class:PCStateOperand
isPTWalk	src/mem/request.hh	/^    bool isPTWalk() const { return _flags.isSet(PT_WALK); }$/;"	f	class:Request
isParallel	src/mem/ruby/filters/H3BloomFilter.hh	/^    bool isParallel;$/;"	m	class:H3BloomFilter
isParallel	src/mem/ruby/filters/MultiBitSelBloomFilter.hh	/^    bool isParallel;$/;"	m	class:MultiBitSelBloomFilter
isPendingDirty	src/mem/cache/mshr.hh	/^    bool isPendingDirty() const {$/;"	f	class:MSHR
isPhysMemAddress	src/mem/ruby/system/RubyPort.cc	/^RubyPort::MemSlavePort::isPhysMemAddress(Addr addr) const$/;"	f	class:RubyPort::MemSlavePort
isPipe	src/sim/process.hh	/^        bool isPipe;$/;"	m	class:Process::FdMap
isPowerOf2	src/base/intmath.hh	/^isPowerOf2(T n)$/;"	f
isPrefetch	src/cpu/static_inst.hh	/^    bool isPrefetch()     const { return isInstPrefetch() ||$/;"	f	class:StaticInst
isPrefetch	src/cpu/translation.hh	/^    isPrefetch() const$/;"	f	class:WholeTranslationState
isPrefetch	src/mem/request.hh	/^    bool isPrefetch() const { return _flags.isSet(PREFETCH); }$/;"	f	class:Request
isPresent	src/mem/ruby/system/DirectoryMemory.cc	/^DirectoryMemory::isPresent(PhysAddress address)$/;"	f	class:DirectoryMemory
isPresent	src/mem/ruby/system/TBETable.hh	/^TBETable<ENTRY>::isPresent(const Address& address) const$/;"	f	class:TBETable
isPrime	src/base/intmath.hh	/^isPrime(T n)$/;"	f
isPrimitive	src/mem/slicc/symbols/Type.py	/^    def isPrimitive(self):$/;"	m	class:Type
isPrint	src/mem/packet.hh	/^    bool isPrint() const        { return cmd.isPrint(); }$/;"	f	class:Packet
isPrint	src/mem/packet.hh	/^    bool isPrint() const        { return testCmdAttrib(IsPrint); }$/;"	f	class:MemCmd
isPriv	src/arch/arm/tlb.hh	/^    bool isPriv;$/;"	m	class:ArmISA::TLB
isPriv	src/arch/sparc/isa.hh	/^    bool isPriv() { return hpstate.hpriv || pstate.priv; }$/;"	f	class:SparcISA::ISA
isPriv	src/mem/request.hh	/^    bool isPriv() const { return _flags.isSet(PRIVILEGED); }$/;"	f	class:Request
isProcessing	src/cpu/inorder/resource.hh	/^    bool isProcessing() { return processing; }$/;"	f	class:ResourceRequest
isQnan	src/arch/mips/utility.cc	/^isQnan(void *val_ptr, int size)$/;"	f	namespace:MipsISA
isQnan	src/arch/power/insts/floating.hh	/^    isQnan(uint32_t val_bits) const$/;"	f	class:PowerISA::FloatOp
isQuiesce	src/cpu/base_dyn_inst.hh	/^    bool isQuiesce() const { return staticInst->isQuiesce(); }$/;"	f	class:BaseDynInst
isQuiesce	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isQuiesce() const { return staticInst->isQuiesce(); }$/;"	f	class:InOrderDynInst
isQuiesce	src/cpu/static_inst.hh	/^    bool isQuiesce() const { return flags[IsQuiesce]; }$/;"	f	class:StaticInst
isRead	src/cpu/testers/traffic_gen/generators.hh	/^    bool isRead;$/;"	m	class:DramGen
isRead	src/mem/dram_ctrl.hh	/^        const bool isRead;$/;"	m	class:DRAMCtrl::DRAMPacket
isRead	src/mem/packet.hh	/^    bool isRead() const         { return cmd.isRead(); }$/;"	f	class:Packet
isRead	src/mem/packet.hh	/^    bool isRead() const         { return testCmdAttrib(IsRead); }$/;"	f	class:MemCmd
isReadWrite	src/mem/packet.hh	/^    bool isReadWrite() const    { return cmd.isReadWrite(); }$/;"	f	class:Packet
isReadWrite	src/mem/packet.hh	/^    bool isReadWrite() const    { return isRead() && isWrite(); }$/;"	f	class:MemCmd
isReadable	src/mem/cache/blk.hh	/^    bool isReadable() const$/;"	f	class:CacheBlk
isReady	src/mem/ruby/buffers/MessageBuffer.cc	/^MessageBuffer::isReady() const$/;"	f	class:MessageBuffer
isReady	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.hh	/^    isReady(int invc, Cycles curTime)$/;"	f	class:InputUnit_d
isReady	src/mem/ruby/network/garnet/fixed-pipeline/NetworkLink_d.hh	/^    inline bool isReady(Cycles curTime)$/;"	f	class:NetworkLink_d
isReady	src/mem/ruby/network/garnet/fixed-pipeline/VirtualChannel_d.hh	/^    inline bool isReady(Cycles curTime)$/;"	f	class:VirtualChannel_d
isReady	src/mem/ruby/network/garnet/fixed-pipeline/flitBuffer_d.cc	/^flitBuffer_d::isReady(Cycles curTime)$/;"	f	class:flitBuffer_d
isReady	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.cc	/^NetworkLink::isReady()$/;"	f	class:NetworkLink
isReady	src/mem/ruby/network/garnet/flexible-pipeline/flitBuffer.cc	/^flitBuffer::isReady(Cycles curTime)$/;"	f	class:flitBuffer
isReady	src/mem/ruby/system/RubyMemoryControl.cc	/^RubyMemoryControl::isReady()$/;"	f	class:RubyMemoryControl
isReady	src/mem/ruby/system/TimerTable.cc	/^TimerTable::isReady() const$/;"	f	class:TimerTable
isReady	src/mem/ruby/system/WireBuffer.cc	/^WireBuffer::isReady()$/;"	f	class:WireBuffer
isReadyForNext	src/mem/ruby/network/garnet/flexible-pipeline/flitBuffer.cc	/^flitBuffer::isReadyForNext(Cycles curTime)$/;"	f	class:flitBuffer
isReadySrcRegIdx	src/cpu/base_dyn_inst.hh	/^    bool isReadySrcRegIdx(int idx) const$/;"	f	class:BaseDynInst
isReadySrcRegIdx	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isReadySrcRegIdx(int idx) const$/;"	f	class:InOrderDynInst
isReferenced	src/base/inifile.hh	/^        bool isReferenced() { return referenced; }$/;"	f	class:IniFile::Entry
isReferenced	src/base/inifile.hh	/^        bool isReferenced() { return referenced; }$/;"	f	class:IniFile::Section
isReferenced	src/mem/cache/blk.hh	/^    bool isReferenced() const$/;"	f	class:CacheBlk
isReg	src/arch/isa_parser.py	/^    def isReg(self):$/;"	m	class:CCRegOperand
isReg	src/arch/isa_parser.py	/^    def isReg(self):$/;"	m	class:ControlRegOperand
isReg	src/arch/isa_parser.py	/^    def isReg(self):$/;"	m	class:FloatRegOperand
isReg	src/arch/isa_parser.py	/^    def isReg(self):$/;"	m	class:IntRegOperand
isReg	src/arch/isa_parser.py	/^    def isReg(self):$/;"	m	class:Operand
isRegDepEntry	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isRegDepEntry() const { return status[RegDepMapEntry]; }$/;"	f	class:InOrderDynInst
isRemoveList	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isRemoveList() const { return status[RemoveList]; }$/;"	f	class:InOrderDynInst
isRequest	src/mem/packet.hh	/^    bool isRequest() const      { return cmd.isRequest(); }$/;"	f	class:Packet
isRequest	src/mem/packet.hh	/^    bool isRequest() const      { return testCmdAttrib(IsRequest); }$/;"	f	class:MemCmd
isReserved	src/arch/x86/intmessage.hh	/^        isReserved(int mode)$/;"	f	namespace:X86ISA::DeliveryMode
isReset	src/mem/cache/mshr.hh	/^        bool isReset()    { return !needsExclusive && !hasUpgrade; }$/;"	f	class:MSHR::TargetList
isResponse	src/mem/packet.hh	/^    bool isResponse() const     { return cmd.isResponse(); }$/;"	f	class:Packet
isResponse	src/mem/packet.hh	/^    bool isResponse() const     { return testCmdAttrib(IsResponse); }$/;"	f	class:MemCmd
isResultReady	src/cpu/base_dyn_inst.hh	/^    bool isResultReady() const { return status[ResultReady]; }$/;"	f	class:BaseDynInst
isResultReady	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isResultReady() const { return status[ResultReady]; }$/;"	f	class:InOrderDynInst
isRetrying	src/arch/x86/pagetable_walker.cc	/^Walker::WalkerState::isRetrying()$/;"	f	class:X86ISA::Walker::WalkerState
isReturn	src/cpu/base_dyn_inst.hh	/^    bool isReturn()       const { return staticInst->isReturn(); }$/;"	f	class:BaseDynInst
isReturn	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isReturn()       const { return staticInst->isReturn(); }$/;"	f	class:InOrderDynInst
isReturn	src/cpu/static_inst.hh	/^    bool isReturn()       const { return flags[IsReturn]; }$/;"	f	class:StaticInst
isRomMicroPC	src/base/types.hh	/^isRomMicroPC(MicroPC upc)$/;"	f
isRoot	src/python/m5/SimObject.py	/^def isRoot(obj):$/;"	f
isRoot	src/python/m5/util/dot_writer.py	/^from m5.SimObject import isRoot, isSimObjectVector$/;"	i
isSP	src/arch/arm/intregs.hh	/^isSP(IntRegIndex reg)$/;"	f	namespace:ArmISA
isSecure	src/arch/arm/table_walker.hh	/^        bool isSecure;$/;"	m	class:ArmISA::TableWalker::WalkerState
isSecure	src/arch/arm/tlb.hh	/^    bool isSecure;$/;"	m	class:ArmISA::TLB
isSecure	src/mem/cache/blk.hh	/^    bool isSecure() const$/;"	f	class:CacheBlk
isSecure	src/mem/cache/mshr.hh	/^    bool isSecure;$/;"	m	class:MSHR
isSecure	src/mem/cache/prefetch/stride.hh	/^        bool isSecure;$/;"	m	class:StridePrefetcher::StrideEntry
isSecure	src/mem/packet.hh	/^    bool isSecure() const$/;"	f	class:Packet
isSecure	src/mem/request.hh	/^    bool isSecure() const { return _flags.isSet(SECURE); }$/;"	f	class:Request
isSerializeAfter	src/cpu/base_dyn_inst.hh	/^    bool isSerializeAfter() const$/;"	f	class:BaseDynInst
isSerializeAfter	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isSerializeAfter() const$/;"	f	class:InOrderDynInst
isSerializeAfter	src/cpu/static_inst.hh	/^    bool isSerializeAfter() const { return flags[IsSerializeAfter]; }$/;"	f	class:StaticInst
isSerializeBefore	src/cpu/base_dyn_inst.hh	/^    bool isSerializeBefore() const$/;"	f	class:BaseDynInst
isSerializeBefore	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isSerializeBefore() const$/;"	f	class:InOrderDynInst
isSerializeBefore	src/cpu/static_inst.hh	/^    bool isSerializeBefore() const { return flags[IsSerializeBefore]; }$/;"	f	class:StaticInst
isSerializeHandled	src/cpu/base_dyn_inst.hh	/^    bool isSerializeHandled() { return status[SerializeHandled]; }$/;"	f	class:BaseDynInst
isSerializeHandled	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isSerializeHandled() { return status[SerializeHandled]; }$/;"	f	class:InOrderDynInst
isSerializing	src/cpu/base_dyn_inst.hh	/^    bool isSerializing()  const { return staticInst->isSerializing(); }$/;"	f	class:BaseDynInst
isSerializing	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isSerializing()  const { return staticInst->isSerializing(); }$/;"	f	class:InOrderDynInst
isSerializing	src/cpu/static_inst.hh	/^    bool isSerializing()  const { return flags[IsSerializing] ||$/;"	f	class:StaticInst
isSet	src/base/flags.hh	/^    bool isSet() const { return _flags; }$/;"	f	class:Flags
isSet	src/base/flags.hh	/^    bool isSet(Type flags) const { return (_flags & flags); }$/;"	f	class:Flags
isSet	src/mem/ruby/filters/BlockBloomFilter.cc	/^BlockBloomFilter::isSet(const Address& addr)$/;"	f	class:BlockBloomFilter
isSet	src/mem/ruby/filters/BulkBloomFilter.cc	/^BulkBloomFilter::isSet(const Address& addr)$/;"	f	class:BulkBloomFilter
isSet	src/mem/ruby/filters/GenericBloomFilter.cc	/^GenericBloomFilter::isSet(const Address& addr)$/;"	f	class:GenericBloomFilter
isSet	src/mem/ruby/filters/H3BloomFilter.cc	/^H3BloomFilter::isSet(const Address& addr)$/;"	f	class:H3BloomFilter
isSet	src/mem/ruby/filters/LSB_CountingBloomFilter.cc	/^LSB_CountingBloomFilter::isSet(const Address& addr)$/;"	f	class:LSB_CountingBloomFilter
isSet	src/mem/ruby/filters/MultiBitSelBloomFilter.cc	/^MultiBitSelBloomFilter::isSet(const Address& addr)$/;"	f	class:MultiBitSelBloomFilter
isSet	src/mem/ruby/filters/MultiGrainBloomFilter.cc	/^MultiGrainBloomFilter::isSet(const Address& addr)$/;"	f	class:MultiGrainBloomFilter
isSet	src/mem/ruby/filters/NonCountingBloomFilter.cc	/^NonCountingBloomFilter::isSet(const Address& addr)$/;"	f	class:NonCountingBloomFilter
isSet	src/mem/ruby/system/TimerTable.hh	/^    bool isSet(const Address& address) const { return !!m_map.count(address); }$/;"	f	class:TimerTable
isSimObject	src/python/m5/SimObject.py	/^def isSimObject(value):$/;"	f
isSimObject	src/python/m5/params.py	/^def isSimObject(*args, **kwargs):$/;"	f
isSimObjectClass	src/python/m5/SimObject.py	/^def isSimObjectClass(value):$/;"	f
isSimObjectClass	src/python/m5/params.py	/^def isSimObjectClass(*args, **kwargs):$/;"	f
isSimObjectOrSequence	src/python/m5/SimObject.py	/^def isSimObjectOrSequence(value):$/;"	f
isSimObjectOrVector	src/python/m5/SimObject.py	/^def isSimObjectOrVector(value):$/;"	f
isSimObjectSequence	src/python/m5/SimObject.py	/^def isSimObjectSequence(value):$/;"	f
isSimObjectSequence	src/python/m5/params.py	/^def isSimObjectSequence(*args, **kwargs):$/;"	f
isSimObjectVector	src/python/m5/SimObject.py	/^def isSimObjectVector(value):$/;"	f
isSimObjectVector	src/python/m5/util/dot_writer.py	/^from m5.SimObject import isRoot, isSimObjectVector$/;"	i
isSnan	src/arch/arm/insts/vfp.hh	/^isSnan(fpType val)$/;"	f	namespace:ArmISA
isSnan	src/arch/mips/utility.cc	/^isSnan(void *val_ptr, int size)$/;"	f	namespace:MipsISA
isSnan	src/arch/power/insts/floating.hh	/^    isSnan(uint32_t val_bits) const$/;"	f	class:PowerISA::FloatOp
isSnooping	src/arch/arm/table_walker.hh	/^        virtual bool isSnooping() const { return true; }$/;"	f	class:ArmISA::TableWalker::SnoopingDmaPort
isSnooping	src/arch/x86/pagetable_walker.hh	/^            bool isSnooping() const { return true; }$/;"	f	class:X86ISA::Walker::WalkerPort
isSnooping	src/cpu/o3/cpu.hh	/^        virtual bool isSnooping() const { return true; }$/;"	f	class:FullO3CPU::DcachePort
isSnooping	src/cpu/ozone/lw_lsq.hh	/^        virtual bool isSnooping() const { return true; }$/;"	f	class:OzoneLWLSQ::DcachePort
isSnooping	src/cpu/simple/atomic.hh	/^        bool isSnooping() const { return true; }$/;"	f	class:AtomicSimpleCPU::AtomicCPUDPort
isSnooping	src/mem/addr_mapper.cc	/^AddrMapper::isSnooping() const$/;"	f	class:AddrMapper
isSnooping	src/mem/addr_mapper.hh	/^        bool isSnooping() const$/;"	f	class:AddrMapper::MapperMasterPort
isSnooping	src/mem/cache/base.hh	/^        virtual bool isSnooping() const { return true; }$/;"	f	class:BaseCache::CacheMasterPort
isSnooping	src/mem/coherent_bus.hh	/^        virtual bool isSnooping() const$/;"	f	class:CoherentBus::CoherentBusMasterPort
isSnooping	src/mem/comm_monitor.cc	/^CommMonitor::isSnooping() const$/;"	f	class:CommMonitor
isSnooping	src/mem/comm_monitor.hh	/^        bool isSnooping() const$/;"	f	class:CommMonitor::MonitorMasterPort
isSnooping	src/mem/port.hh	/^    bool isSnooping() const { return _masterPort->isSnooping(); }$/;"	f	class:SlavePort
isSnooping	src/mem/port.hh	/^    virtual bool isSnooping() const { return false; }$/;"	f	class:MasterPort
isSoft	src/arch/x86/faults.hh	/^        bool isSoft()$/;"	f	class:X86ISA::SoftwareInterrupt
isSoft	src/arch/x86/faults.hh	/^        virtual bool isSoft()$/;"	f	class:X86ISA::X86FaultBase
isSparseImplementation	src/mem/ruby/system/DirectoryMemory.hh	/^    bool isSparseImplementation() { return m_use_map; }$/;"	f	class:DirectoryMemory
isSplit	src/cpu/o3/lsq_unit.hh	/^        bool isSplit;$/;"	m	class:LSQUnit::LSQSenderState
isSplit	src/cpu/o3/lsq_unit.hh	/^        bool isSplit;$/;"	m	struct:LSQUnit::SQEntry
isSplit	src/cpu/translation.hh	/^    bool isSplit;$/;"	m	class:WholeTranslationState
isSquashAfter	src/cpu/base_dyn_inst.hh	/^    bool isSquashAfter() const { return staticInst->isSquashAfter(); }$/;"	f	class:BaseDynInst
isSquashAfter	src/cpu/static_inst.hh	/^    bool isSquashAfter() const { return flags[IsSquashAfter]; }$/;"	f	class:StaticInst
isSquashed	src/cpu/base_dyn_inst.hh	/^    bool isSquashed() const { return status[Squashed]; }$/;"	f	class:BaseDynInst
isSquashed	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isSquashed() const { return status[Squashed]; }$/;"	f	class:InOrderDynInst
isSquashed	src/cpu/inorder/resource.hh	/^    bool isSquashed() { return squashed; }$/;"	f	class:ResourceRequest
isSquashed	src/cpu/simple/timing.hh	/^    bool isSquashed() const { return false; }$/;"	f	class:TimingSimpleCPU
isSquashedInIQ	src/cpu/base_dyn_inst.hh	/^    bool isSquashedInIQ() const { return status[SquashedInIQ]; }$/;"	f	class:BaseDynInst
isSquashedInLSQ	src/cpu/base_dyn_inst.hh	/^    bool isSquashedInLSQ() const { return status[SquashedInLSQ]; }$/;"	f	class:BaseDynInst
isSquashedInROB	src/cpu/base_dyn_inst.hh	/^    bool isSquashedInROB() const { return status[SquashedInROB]; }$/;"	f	class:BaseDynInst
isSrcValid	src/mem/packet.hh	/^    bool isSrcValid() const { return src != InvalidPortID; }$/;"	f	class:Packet
isStage2	src/arch/arm/faults.hh	/^    bool isStage2() const { return stage2; }$/;"	f	class:ArmISA::AbortFault
isStage2	src/arch/arm/faults.hh	/^    virtual bool isStage2() const { return false; }$/;"	f	class:ArmISA::ArmFault
isStage2	src/arch/arm/table_walker.hh	/^    const bool isStage2;$/;"	m	class:ArmISA::TableWalker
isStage2	src/arch/arm/tlb.hh	/^    bool isStage2;       \/\/ Indicates this TLB is part of the second stage MMU$/;"	m	class:ArmISA::TLB
isStalled	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::isStalled()$/;"	f	class:LSQ
isStalled	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::isStalled(ThreadID tid)$/;"	f	class:LSQ
isStalled	src/cpu/o3/lsq_unit.hh	/^    bool isStalled()  { return stalled; }$/;"	f	class:LSQUnit
isStalled	src/cpu/ozone/lsq_unit.hh	/^    bool isStalled()  { return stalled; }$/;"	f	class:OzoneLSQ
isStalled	src/cpu/ozone/lw_lsq.hh	/^    bool isStalled()  { return stalled; }$/;"	f	class:OzoneLWLSQ
isStore	src/cpu/base_dyn_inst.hh	/^    bool isStore()        const { return staticInst->isStore(); }$/;"	f	class:BaseDynInst
isStore	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isStore()        const { return staticInst->isStore(); }$/;"	f	class:InOrderDynInst
isStore	src/cpu/static_inst.hh	/^    bool isStore()        const { return flags[IsStore]; }$/;"	f	class:StaticInst
isStoreBlocked	src/cpu/o3/lsq_unit.hh	/^    bool isStoreBlocked;$/;"	m	class:LSQUnit
isStoreBlocked	src/cpu/ozone/lw_lsq.hh	/^    bool isStoreBlocked;$/;"	m	class:OzoneLWLSQ
isStoreConditional	src/cpu/base_dyn_inst.hh	/^    bool isStoreConditional() const$/;"	f	class:BaseDynInst
isStoreConditional	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isStoreConditional() const$/;"	f	class:InOrderDynInst
isStoreConditional	src/cpu/static_inst.hh	/^    bool isStoreConditional()     const { return flags[IsStoreConditional]; }$/;"	f	class:StaticInst
isSubset	src/base/addr_range.hh	/^    bool isSubset(const AddrRange& r) const$/;"	f	class:AddrRange
isSubset	src/mem/ruby/common/NetDest.hh	/^    bool isSubset(const NetDest& test) const { return test.isSuperset(*this); }$/;"	f	class:NetDest
isSubset	src/mem/ruby/common/Set.hh	/^    bool isSubset(const Set& test) const { return test.isSuperset(*this); }$/;"	f	class:Set
isSuperset	src/mem/ruby/common/NetDest.cc	/^NetDest::isSuperset(const NetDest& test) const$/;"	f	class:NetDest
isSuperset	src/mem/ruby/common/Set.cc	/^Set::isSuperset(const Set& test) const$/;"	f	class:Set
isSupplyExclusive	src/mem/packet.hh	/^    bool isSupplyExclusive() const  { return flags.isSet(SUPPLY_EXCLUSIVE); }$/;"	f	class:Packet
isSwap	src/mem/request.hh	/^    bool isSwap() const { return _flags.isSet(MEM_SWAP|MEM_SWAP_COND); }$/;"	f	class:Request
isSwitchedOut	src/cpu/ozone/front_end.hh	/^    bool isSwitchedOut() { return switchedOut; }$/;"	f	class:FrontEnd
isSwitchedOut	src/cpu/ozone/lw_back_end.hh	/^    bool isSwitchedOut() { return switchedOut; }$/;"	f	class:LWBackEnd
isSwitchedOut	src/cpu/ozone/lw_lsq.hh	/^    bool isSwitchedOut() { return switchedOut; }$/;"	f	class:OzoneLWLSQ
isSyscall	src/cpu/base_dyn_inst.hh	/^    bool isSyscall() const { return staticInst->isSyscall(); }$/;"	f	class:BaseDynInst
isSyscall	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isSyscall() const$/;"	f	class:InOrderDynInst
isSyscall	src/cpu/static_inst.hh	/^    bool isSyscall() const { return flags[IsSyscall]; }$/;"	f	class:StaticInst
isTagPresent	src/mem/ruby/system/CacheMemory.cc	/^CacheMemory::isTagPresent(const Address& address) const$/;"	f	class:CacheMemory
isTagPresent	src/mem/ruby/system/PerfectCacheMemory.hh	/^PerfectCacheMemory<ENTRY>::isTagPresent(const Address& address) const$/;"	f	class:PerfectCacheMemory
isTcp	src/dev/i8254xGBe.hh	/^        bool isTcp;$/;"	m	class:IGbE::TxDescCache
isTempSerializeAfter	src/cpu/base_dyn_inst.hh	/^    bool isTempSerializeAfter() { return status[SerializeAfter]; }$/;"	f	class:BaseDynInst
isTempSerializeAfter	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isTempSerializeAfter() { return status[SerializeAfter]; }$/;"	f	class:InOrderDynInst
isTempSerializeBefore	src/cpu/base_dyn_inst.hh	/^    bool isTempSerializeBefore() { return status[SerializeBefore]; }$/;"	f	class:BaseDynInst
isTempSerializeBefore	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isTempSerializeBefore() { return status[SerializeBefore]; }$/;"	f	class:InOrderDynInst
isThreadActive	src/cpu/inorder/cpu.cc	/^InOrderCPU::isThreadActive(ThreadID tid)$/;"	f	class:InOrderCPU
isThreadReady	src/cpu/inorder/cpu.cc	/^InOrderCPU::isThreadReady(ThreadID tid)$/;"	f	class:InOrderCPU
isThreadSuspended	src/cpu/inorder/cpu.cc	/^InOrderCPU::isThreadSuspended(ThreadID tid)$/;"	f	class:InOrderCPU
isThreadSync	src/cpu/base_dyn_inst.hh	/^    bool isThreadSync()   const { return staticInst->isThreadSync(); }$/;"	f	class:BaseDynInst
isThreadSync	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isThreadSync()   const { return staticInst->isThreadSync(); }$/;"	f	class:InOrderDynInst
isThreadSync	src/cpu/static_inst.hh	/^    bool isThreadSync()   const { return flags[IsThreadSync]; }$/;"	f	class:StaticInst
isTiming	src/arch/x86/pagetable_walker.cc	/^Walker::WalkerState::isTiming()$/;"	f	class:X86ISA::Walker::WalkerState
isTimingMode	src/sim/system.hh	/^    bool isTimingMode() const {$/;"	f	class:System
isTopLevel	src/mem/cache/base.hh	/^    const bool isTopLevel;$/;"	m	class:BaseCache
isTouched	src/mem/cache/blk.hh	/^    bool isTouched;$/;"	m	class:CacheBlk
isTouched	src/mem/cache/tags/fa_lru.hh	/^    bool isTouched;$/;"	m	class:FALRUBlk
isTranslationDelayed	src/cpu/base_dyn_inst.hh	/^    bool isTranslationDelayed() const$/;"	f	class:BaseDynInst
isTtyReq	src/arch/alpha/linux/linux.hh	/^    isTtyReq(unsigned req)$/;"	f	class:AlphaLinux
isTtyReq	src/arch/alpha/tru64/tru64.hh	/^    isTtyReq(unsigned req)$/;"	f	class:AlphaTru64
isTtyReq	src/arch/mips/linux/linux.hh	/^    isTtyReq(unsigned req)$/;"	f	class:MipsLinux
isTtyReq	src/arch/power/linux/linux.hh	/^    isTtyReq(unsigned req)$/;"	f	class:PowerLinux
isTtyReq	src/arch/sparc/linux/linux.hh	/^    isTtyReq(unsigned req)$/;"	f	class:SparcLinux
isTtyReq	src/kern/linux/linux.hh	/^    isTtyReq(unsigned req)$/;"	f	class:Linux
isType	src/dev/i8254xGBe_defs.hh	/^inline bool isType(TxDesc *d, uint8_t type) { return getType(d) == type; }$/;"	f	namespace:iGbReg::TxdOp
isTypes	src/dev/i8254xGBe_defs.hh	/^inline bool isTypes(TxDesc *d, uint8_t t1, uint8_t t2) { return isType(d, t1) || isType(d, t2); }$/;"	f	namespace:iGbReg::TxdOp
isUncacheable	src/cpu/translation.hh	/^    isUncacheable() const$/;"	f	class:WholeTranslationState
isUncacheable	src/mem/cache/mshr.hh	/^    bool isUncacheable() const { return _isUncacheable; }$/;"	f	class:MSHR
isUncacheable	src/mem/request.hh	/^    bool isUncacheable() const { return _flags.isSet(UNCACHEABLE); }$/;"	f	class:Request
isUncondCtrl	src/cpu/base_dyn_inst.hh	/^    bool isUncondCtrl()   const { return staticInst->isUncondCtrl(); }$/;"	f	class:BaseDynInst
isUncondCtrl	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isUncondCtrl()   const { return staticInst->isUncondCtrl(); }$/;"	f	class:InOrderDynInst
isUncondCtrl	src/cpu/static_inst.hh	/^    bool isUncondCtrl()   const { return flags[IsUncondControl]; }$/;"	f	class:StaticInst
isUnmapped	src/mem/page_table.cc	/^PageTable::isUnmapped(Addr vaddr, int64_t size)$/;"	f	class:PageTable
isUnverifiable	src/cpu/base_dyn_inst.hh	/^    bool isUnverifiable() const { return staticInst->isUnverifiable(); }$/;"	f	class:BaseDynInst
isUnverifiable	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isUnverifiable() const { return staticInst->isUnverifiable(); }$/;"	f	class:InOrderDynInst
isUnverifiable	src/cpu/static_inst.hh	/^    bool isUnverifiable() const { return flags[IsUnverifiable]; }$/;"	f	class:StaticInst
isUpgrade	src/mem/packet.hh	/^    bool isUpgrade()  const     { return cmd.isUpgrade(); }$/;"	f	class:Packet
isUpgrade	src/mem/packet.hh	/^    bool isUpgrade() const      { return testCmdAttrib(IsUpgrade); }$/;"	f	class:MemCmd
isVNetOrdered	src/mem/ruby/network/garnet/BaseGarnetNetwork.hh	/^    bool isVNetOrdered(int vnet) { return m_ordered[vnet]; }$/;"	f	class:BaseGarnetNetwork
isVNetOrdered	src/mem/ruby/network/simple/SimpleNetwork.hh	/^    bool isVNetOrdered(int vnet) { return m_ordered[vnet]; }$/;"	f	class:SimpleNetwork
isValid	src/cpu/testers/traffic_gen/generators.hh	/^        bool isValid() const {$/;"	f	struct:TraceGen::TraceElement
isValid	src/mem/cache/blk.hh	/^    bool isValid() const$/;"	f	class:CacheBlk
isVlan	src/base/inet.hh	/^    bool isVlan() const { return (ntohs(eth_type) == ETH_TYPE_8021Q); }$/;"	f	struct:Net::EthHdr
isWritable	src/mem/cache/blk.hh	/^    bool isWritable() const$/;"	f	class:CacheBlk
isWrite	src/arch/arm/table_walker.hh	/^        bool isWrite;$/;"	m	class:ArmISA::TableWalker::WalkerState
isWrite	src/mem/packet.hh	/^    bool isWrite() const        { return cmd.isWrite(); }$/;"	f	class:Packet
isWrite	src/mem/packet.hh	/^    bool isWrite() const        { return testCmdAttrib(IsWrite); }$/;"	f	class:MemCmd
isWriteBarrier	src/cpu/base_dyn_inst.hh	/^    bool isWriteBarrier() const { return staticInst->isWriteBarrier(); }$/;"	f	class:BaseDynInst
isWriteBarrier	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool isWriteBarrier() const { return staticInst->isWriteBarrier(); }$/;"	f	class:InOrderDynInst
isWriteBarrier	src/cpu/static_inst.hh	/^    bool isWriteBarrier() const { return flags[IsWriteBarrier]; }$/;"	f	class:StaticInst
isZero	src/arch/power/insts/floating.hh	/^    isZero(uint32_t val_bits) const$/;"	f	class:PowerISA::FloatOp
isZeroReg	src/cpu/o3/scoreboard.hh	/^    bool isZeroReg(PhysRegIndex idx) const$/;"	f	class:Scoreboard
is_candidate_inport	src/mem/ruby/network/garnet/fixed-pipeline/SWallocator_d.cc	/^SWallocator_d::is_candidate_inport(int inport, int invc)$/;"	f	class:SWallocator_d
is_free_signal	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.hh	/^    bool is_free_signal() { return m_is_free_signal; }$/;"	f	class:flit_d
is_icache	src/mem/ruby/system/Cache.py	/^    is_icache = Param.Bool(False, "is instruction only cache");$/;"	v	class:RubyCache
is_invc_candidate	src/mem/ruby/network/garnet/fixed-pipeline/VCallocator_d.cc	/^VCallocator_d::is_invc_candidate(int inport_iter, int invc_iter)$/;"	f	class:VCallocator_d
is_mouse	src/dev/arm/RealView.py	/^    is_mouse = Param.Bool(False, "Is this interface a mouse, if not a keyboard")$/;"	v	class:Pl050
is_stage	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.hh	/^    is_stage(flit_stage t_stage, Cycles curTime)$/;"	f	class:flit_d
is_stage2	src/arch/arm/ArmTLB.py	/^    is_stage2 =  Param.Bool(False, "Is this object for stage 2 translation?")$/;"	v	class:ArmTableWalker
is_stage2	src/arch/arm/ArmTLB.py	/^    is_stage2 = Param.Bool(False, "Is this a stage 2 TLB?")$/;"	v	class:ArmTLB
is_stage2	src/arch/arm/ArmTLB.py	/^    is_stage2 = True$/;"	v	class:ArmStage2TLB
is_stage2	src/arch/arm/ArmTLB.py	/^    is_stage2 = True$/;"	v	class:ArmStage2TableWalker
is_top_level	src/mem/cache/BaseCache.py	/^    is_top_level = Param.Bool(False, "Is this cache at the top level (e.g. L1)")$/;"	v	class:BaseCache
is_trans_type_hvt	src/mem/ruby/network/orion/TechParameter.hh	/^    bool is_trans_type_hvt() const { return (m_transistor_type == HVT); }$/;"	f	class:TechParameter
is_trans_type_lvt	src/mem/ruby/network/orion/TechParameter.hh	/^    bool is_trans_type_lvt() const { return (m_transistor_type == LVT); }$/;"	f	class:TechParameter
is_trans_type_nvt	src/mem/ruby/network/orion/TechParameter.hh	/^    bool is_trans_type_nvt() const { return (m_transistor_type == NVT); }$/;"	f	class:TechParameter
is_vc_idle	src/mem/ruby/network/garnet/fixed-pipeline/OutputUnit_d.hh	/^    is_vc_idle(int vc, Cycles curTime)$/;"	f	class:OutputUnit_d
isa	src/cpu/inorder/cpu.hh	/^    std::vector<TheISA::ISA *> isa;$/;"	m	class:InOrderCPU
isa	src/cpu/o3/cpu.hh	/^    std::vector<TheISA::ISA *> isa;$/;"	m	class:FullO3CPU
isa	src/cpu/simple_thread.hh	/^    TheISA::ISA *const isa;    \/\/ one "instance" of the current ISA.$/;"	m	class:SimpleThread::TheISA
isa_class	src/cpu/BaseCPU.py	/^    isa_class = AlphaISA$/;"	v
isa_class	src/cpu/BaseCPU.py	/^    isa_class = ArmISA$/;"	v
isa_class	src/cpu/BaseCPU.py	/^    isa_class = MipsISA$/;"	v
isa_class	src/cpu/BaseCPU.py	/^    isa_class = PowerISA$/;"	v
isa_class	src/cpu/BaseCPU.py	/^    isa_class = SparcISA$/;"	v
isa_class	src/cpu/BaseCPU.py	/^    isa_class = X86ISA$/;"	v
isattached	src/base/remote_gdb.cc	/^BaseRemoteGDB::isattached()$/;"	f	class:BaseRemoteGDB
isdir	src/python/m5/config.py	/^from os.path import isdir, isfile, join as joinpath$/;"	i
isfile	src/python/m5/config.py	/^from os.path import isdir, isfile, join as joinpath$/;"	i
isfile	src/python/m5/util/jobfile.py	/^    from os.path import expanduser, isfile, join as joinpath$/;"	i
islistening	src/base/socket.hh	/^    bool islistening() const { return listening; }$/;"	f	class:ListenSocket
isopt	src/base/inet.hh	/^    bool isopt(int opt) const { return type() == opt; }$/;"	f	struct:Net::TcpOpt
isproxy	src/python/m5/SimObject.py	/^from m5.proxy import isproxy$/;"	i
isproxy	src/python/m5/proxy.py	/^def isproxy(obj):$/;"	f
isr	src/dev/ns_gige.hh	/^    uint32_t    isr;$/;"	m	struct:dp_regs
iss	src/arch/arm/faults.cc	/^AbortFault<T>::iss() const$/;"	f	class:ArmISA::AbortFault
iss	src/arch/arm/faults.cc	/^DataAbort::iss() const$/;"	f	class:ArmISA::DataAbort
iss	src/arch/arm/faults.cc	/^SecureMonitorCall::iss() const$/;"	f	class:ArmISA::SecureMonitorCall
iss	src/arch/arm/faults.cc	/^SupervisorCall::iss() const$/;"	f	class:ArmISA::SupervisorCall
iss	src/arch/arm/faults.cc	/^UndefinedInstruction::iss() const$/;"	f	class:ArmISA::UndefinedInstruction
iss	src/arch/arm/faults.hh	/^    virtual uint32_t iss() const { return issRaw; }$/;"	f	class:ArmISA::ArmFaultVals
iss	src/base/loader/coff_sym.h	/^    coff_int    iss;            \/* index into String Space of name *\/$/;"	m	struct:ecoff_sym
iss	src/base/loader/coff_sym.h	/^    coff_int    iss;            \/* index into string space (not used) *\/$/;"	m	union:__anon44
issBase	src/base/loader/coff_sym.h	/^    coff_int    issBase;        \/* file's string space *\/$/;"	m	struct:ecoff_fdr
issExtMax	src/base/loader/coff_sym.h	/^    coff_int    issExtMax;      \/* max index into external strings *\/$/;"	m	struct:ecoff_symhdr
issMax	src/base/loader/coff_sym.h	/^    coff_int    issMax;         \/* max index into local strings *\/$/;"	m	struct:ecoff_symhdr
issNil	src/base/loader/coff_sym.h	/^#define issNil /;"	d
issNull	src/base/loader/coff_sym.h	/^#define issNull /;"	d
issRaw	src/arch/arm/faults.hh	/^    uint32_t issRaw;$/;"	m	class:ArmISA::ArmFault
issue	src/cpu/o3/mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::issue(DynInstPtr &inst)$/;"	f	class:MemDepUnit
issueDmas	src/cpu/testers/memtest/memtest.hh	/^    bool issueDmas;$/;"	m	class:MemTest
issueLat	src/cpu/FuncUnit.py	/^    issueLat = Param.Cycles(1, "cycles until another can be issued")$/;"	v	class:OpDesc
issueLat	src/cpu/func_unit.hh	/^    Cycles issueLat;$/;"	m	class:OpDesc
issueLatencies	src/cpu/func_unit.hh	/^    unsigned issueLatencies[Num_OpClasses];$/;"	m	class:FuncUnit
issueLatency	src/cpu/func_unit.cc	/^FuncUnit::issueLatency(OpClass capability)$/;"	f	class:FuncUnit
issueNext	src/mem/ruby/system/DMASequencer.cc	/^DMASequencer::issueNext()$/;"	f	class:DMASequencer
issueNextPrefetch	src/mem/ruby/structures/Prefetcher.cc	/^Prefetcher::issueNextPrefetch(const Address &address, PrefetchEntry *stream)$/;"	f	class:Prefetcher
issuePipelinedIfetch	src/cpu/o3/fetch.hh	/^    bool issuePipelinedIfetch[Impl::MaxThreads];$/;"	m	class:DefaultFetch
issueRate	src/cpu/o3/inst_queue.hh	/^    Stats::Formula issueRate;$/;"	m	class:InstructionQueue
issueRefresh	src/mem/ruby/system/RubyMemoryControl.cc	/^RubyMemoryControl::issueRefresh(int bank)$/;"	f	class:RubyMemoryControl
issueRequest	src/mem/ruby/system/RubyMemoryControl.cc	/^RubyMemoryControl::issueRequest(int bank)$/;"	f	class:RubyMemoryControl
issueRequest	src/mem/ruby/system/Sequencer.cc	/^Sequencer::issueRequest(PacketPtr pkt, RubyRequestType secondary_type)$/;"	f	class:Sequencer
issueTick	src/cpu/o3/dyn_inst.hh	/^    int32_t issueTick;$/;"	m	class:BaseO3DynInst
issueToExecQueue	src/cpu/o3/iew.hh	/^    TimeBuffer<IssueStruct> issueToExecQueue;$/;"	m	class:DefaultIEW
issueToExecuteDelay	src/cpu/o3/O3CPU.py	/^    issueToExecuteDelay = Param.Cycles(1, "Issue to execute delay (internal "$/;"	v	class:DerivO3CPU
issueToExecuteDelay	src/cpu/o3/iew.hh	/^    Cycles issueToExecuteDelay;$/;"	m	class:DefaultIEW
issueToExecuteDelay	src/cpu/ozone/OzoneCPU.py	/^    issueToExecuteDelay = Param.Unsigned("Issue to execute delay (internal "$/;"	v	class:DerivOzoneCPU
issueToExecuteDelay	src/cpu/ozone/SimpleOzoneCPU.py	/^    issueToExecuteDelay = Param.Unsigned("Issue to execute delay (internal "$/;"	v	class:SimpleOzoneCPU
issueToExecuteDelay	src/cpu/ozone/simple_params.hh	/^    unsigned issueToExecuteDelay;$/;"	m	class:SimpleParams
issueToExecuteQueue	src/cpu/o3/inst_queue.hh	/^    TimeBuffer<IssueStruct> *issueToExecuteQueue;$/;"	m	class:InstructionQueue
issueToExecuteQueue	src/cpu/ozone/inst_queue.hh	/^    TimeBuffer<IssueStruct> *issueToExecuteQueue;$/;"	m	class:InstQueue
issueWidth	src/cpu/o3/O3CPU.py	/^    issueWidth = Param.Unsigned(8, "Issue width")$/;"	v	class:DerivO3CPU
issueWidth	src/cpu/o3/iew.hh	/^    unsigned issueWidth;$/;"	m	class:DefaultIEW
issueWidth	src/cpu/ozone/OzoneCPU.py	/^    issueWidth = Param.Unsigned("Issue width")$/;"	v	class:DerivOzoneCPU
issueWidth	src/cpu/ozone/SimpleOzoneCPU.py	/^    issueWidth = Param.Unsigned("Issue width")$/;"	v	class:SimpleOzoneCPU
issueWidth	src/cpu/ozone/back_end.hh	/^    int issueWidth;$/;"	m	class:BackEnd
issueWidth	src/cpu/ozone/lw_back_end.hh	/^    int issueWidth;$/;"	m	class:LWBackEnd
issueWidth	src/cpu/ozone/simple_params.hh	/^    unsigned issueWidth;$/;"	m	class:SimpleParams
issue_delay_dist	src/cpu/ozone/back_end.hh	/^    Stats::VectorDistribution issue_delay_dist;$/;"	m	class:BackEnd
issue_dmas	src/cpu/testers/memtest/MemTest.py	/^    issue_dmas = Param.Bool(False, "this memtester should issue dma requests")$/;"	v	class:MemTest
issue_time	src/mem/ruby/system/Sequencer.hh	/^    Cycles issue_time;$/;"	m	struct:SequencerRequest
issued	src/cpu/o3/store_set.cc	/^StoreSet::issued(Addr issued_PC, InstSeqNum issued_seq_num, bool is_store)$/;"	f	class:StoreSet
issuedOps	src/cpu/ozone/lw_back_end.hh	/^    Stats::Vector issuedOps;$/;"	m	class:LWBackEnd
issued_ops	src/cpu/ozone/back_end.hh	/^    Stats::Vector issued_ops;$/;"	m	class:BackEnd
istatus	src/dev/arm/generic_timer.hh	/^            Bitfield<2> istatus;$/;"	m	class:GenericTimer::ArchTimer
isv	src/arch/arm/faults.hh	/^    bool    isv;$/;"	m	class:ArmISA::DataAbort
isym	src/base/loader/coff_sym.h	/^    coff_int    isym;           \/* start of local symbol entries *\/$/;"	m	struct:pdr
isym	src/base/loader/coff_sym.h	/^    coff_int    isym;           \/* symbol table index (end of proc) *\/$/;"	m	union:__anon44
isymBase	src/base/loader/coff_sym.h	/^    coff_int    isymBase;       \/* beginning of symbols *\/$/;"	m	struct:ecoff_fdr
isymMax	src/base/loader/coff_sym.h	/^    coff_int    isymMax;        \/* number of local symbols *\/$/;"	m	struct:ecoff_symhdr
isymNil	src/base/loader/coff_sym.h	/^#define isymNil /;"	d
it1	src/arch/arm/miscregs.hh	/^        Bitfield<26, 25> it1;$/;"	m	namespace:ArmISA
it2	src/arch/arm/miscregs.hh	/^        Bitfield<15, 10> it2;$/;"	m	namespace:ArmISA
itBits	src/arch/arm/decoder.hh	/^    ITSTATE itBits;$/;"	m	class:ArmISA::Decoder
itLines	src/dev/arm/gic_pl390.hh	/^    uint32_t itLines;$/;"	m	class:Pl390
itLinesLog2	src/dev/arm/gic_pl390.hh	/^    uint32_t itLinesLog2;$/;"	m	class:Pl390
it_lines	src/dev/arm/Gic.py	/^    it_lines = Param.UInt32(128, "Number of interrupt lines supported (max = 1020)")$/;"	v	class:Pl390
itb	src/cpu/checker/cpu.hh	/^    TheISA::TLB *itb;$/;"	m	class:CheckerCPU
itb	src/cpu/m5legion_interface.h	/^    uint64_t itb[64];$/;"	m	struct:__anon55
itb	src/cpu/o3/cpu.hh	/^    TheISA::TLB * itb;$/;"	m	class:FullO3CPU
itb	src/cpu/ozone/cpu.hh	/^    TheISA::TLB *itb;$/;"	m	class:OzoneCPU
itb	src/cpu/ozone/simple_params.hh	/^    TheISA::TLB *itb; TheISA::TLB *dtb;$/;"	m	class:SimpleParams
itb	src/cpu/simple_thread.hh	/^    TheISA::TLB *itb;$/;"	m	class:SimpleThread
itd	src/arch/arm/miscregs.hh	/^        Bitfield<7>    itd;     \/\/ IT disable$/;"	m	namespace:ArmISA
item	src/doxygen/stl.hh	/^    T item;$/;"	m	class:std::deque
item	src/doxygen/stl.hh	/^    T item;$/;"	m	class:std::list
item	src/doxygen/stl.hh	/^    T item;$/;"	m	class:std::vector
item1	src/doxygen/stl.hh	/^    X item1;$/;"	m	class:std::pair
item2	src/doxygen/stl.hh	/^    Y item2;$/;"	m	class:std::pair
itemrange	src/python/m5/util/sorteddict.py	/^    def itemrange(self, *args, **kwargs):$/;"	m	class:SortedDict
items	src/cpu/decode_cache.hh	/^        Value items[TheISA::PageBytes];$/;"	m	struct:DecodeCache::AddrMap::CachePage
items	src/python/m5/debug.py	/^    def items(self):$/;"	m	class:AllFlags
items	src/python/m5/util/multidict.py	/^    def items(self):$/;"	m	class:multidict
items	src/python/m5/util/orderdict.py	/^    def items(self):$/;"	m	class:orderdict
items	src/python/m5/util/smartdict.py	/^    def items(self):$/;"	m	class:SmartDict
items	src/python/m5/util/sorteddict.py	/^    def items(self):$/;"	m	class:SortedDict
iterator	src/arch/sparc/tlb_map.hh	/^    typedef RangeMap::iterator iterator;$/;"	t	class:SparcISA::TlbMap
iterator	src/base/addr_range_map.hh	/^    typedef typename RangeMap::iterator iterator;$/;"	t	class:AddrRangeMap
iterator	src/base/varargs.hh	/^    typedef typename list::iterator iterator;$/;"	t	class:VarArgs::List
iterator	src/cpu/pc_event.hh	/^    typedef map_t::iterator iterator;$/;"	t	class:PCEventQueue
iterator	src/dev/pktfifo.hh	/^    typedef fifo_list::iterator iterator;$/;"	t	class:PacketFifo
iteritems	src/python/m5/debug.py	/^    def iteritems(self):$/;"	m	class:AllFlags
iteritems	src/python/m5/util/multidict.py	/^    def iteritems(self):$/;"	m	class:multidict
iteritems	src/python/m5/util/orderdict.py	/^    def iteritems(self):$/;"	m	class:orderdict
iteritems	src/python/m5/util/smartdict.py	/^    def iteritems(self):$/;"	m	class:SmartDict
iteritems	src/python/m5/util/sorteddict.py	/^    def iteritems(self):$/;"	m	class:SortedDict
iterkeys	src/python/m5/debug.py	/^    def iterkeys(self):$/;"	m	class:AllFlags
iterkeys	src/python/m5/util/multidict.py	/^    def iterkeys(self):$/;"	m	class:multidict
iterkeys	src/python/m5/util/orderdict.py	/^    def iterkeys(self):$/;"	m	class:orderdict
iterkeys	src/python/m5/util/sorteddict.py	/^    def iterkeys(self):$/;"	m	class:SortedDict
itervalues	src/python/m5/debug.py	/^    def itervalues(self):$/;"	m	class:AllFlags
itervalues	src/python/m5/util/multidict.py	/^    def itervalues(self):$/;"	m	class:multidict
itervalues	src/python/m5/util/orderdict.py	/^    def itervalues(self):$/;"	m	class:orderdict
itervalues	src/python/m5/util/smartdict.py	/^    def itervalues(self):$/;"	m	class:SmartDict
itervalues	src/python/m5/util/sorteddict.py	/^    def itervalues(self):$/;"	m	class:SortedDict
itint	src/dev/alpha/tsunami_cchip.hh	/^    uint64_t itint;$/;"	m	class:TsunamiCChip
itqMax	src/base/loader/coff_sym.h	/^#define itqMax /;"	d
itr	src/dev/i8254xGBe_defs.hh	/^    ITR itr;$/;"	m	struct:iGbReg::Regs
itstate	src/arch/arm/types.hh	/^        Bitfield<55, 48> itstate;$/;"	m	namespace:ArmISA
itstate	src/arch/arm/types.hh	/^        itstate() const$/;"	f	class:ArmISA::PCState
itstate	src/arch/arm/types.hh	/^        itstate(uint8_t value)$/;"	f	class:ArmISA::PCState
itstateCond	src/arch/arm/types.hh	/^        Bitfield<55, 52> itstateCond;$/;"	m	namespace:ArmISA
itstateMask	src/arch/arm/types.hh	/^        Bitfield<51, 48> itstateMask;$/;"	m	namespace:ArmISA
ittReadRead	src/mem/comm_monitor.hh	/^        Stats::Distribution ittReadRead;$/;"	m	struct:CommMonitor::MonitorStats
ittReqReq	src/mem/comm_monitor.hh	/^        Stats::Distribution ittReqReq;$/;"	m	struct:CommMonitor::MonitorStats
ittWriteWrite	src/mem/comm_monitor.hh	/^        Stats::Distribution ittWriteWrite;$/;"	m	struct:CommMonitor::MonitorStats
itt_bins	src/mem/CommMonitor.py	/^    itt_bins = Param.Unsigned('20', "# bins in ITT distributions")$/;"	v	class:CommMonitor
itt_max_bin	src/mem/CommMonitor.py	/^    itt_max_bin = Param.Latency('100ns', "Max bin of ITT distributions")$/;"	v	class:CommMonitor
iv	src/arch/mips/pra_constants.hh	/^    Bitfield<23>     iv;$/;"	m	namespace:MipsISA
ixc	src/arch/arm/miscregs.hh	/^        Bitfield<4> ixc;$/;"	m	namespace:ArmISA
ixe	src/arch/arm/miscregs.hh	/^        Bitfield<12> ixe;$/;"	m	namespace:ArmISA
ixmt	src/arch/mips/mt_constants.hh	/^    Bitfield<10>     ixmt;$/;"	m	namespace:MipsISA
ixsm	src/dev/i8254xGBe_defs.hh	/^inline bool ixsm(TxDesc *d)  { return isData(d) && bits(d->d2, 40,40); }$/;"	f	namespace:iGbReg::TxdOp
j	src/arch/arm/miscregs.hh	/^        Bitfield<24> j;$/;"	m	namespace:ArmISA
jBusData0	src/dev/sparc/iob.hh	/^    uint64_t jBusData0[MaxNiagaraProcs];$/;"	m	class:Iob
jBusData1	src/dev/sparc/iob.hh	/^    uint64_t jBusData1[MaxNiagaraProcs];$/;"	m	class:Iob
jIntBusy	src/dev/sparc/iob.hh	/^    IntBusy jIntBusy[MaxNiagaraProcs];$/;"	m	class:Iob
jIntVec	src/dev/sparc/iob.hh	/^    uint64_t jIntVec;$/;"	m	class:Iob
jazelle	src/arch/arm/types.hh	/^        jazelle() const$/;"	f	class:ArmISA::PCState
jazelle	src/arch/arm/types.hh	/^        jazelle(bool val)$/;"	f	class:ArmISA::PCState
jmptbl	src/base/loader/coff_sym.h	/^    unsigned jmptbl:1;  \/* symbol is a jump table entry for shlibs *\/$/;"	m	struct:ecoff_extsym
job	src/python/m5/util/jobfile.py	/^    def job(self, options):$/;"	m	class:Configuration
jobfile	src/python/m5/util/__init__.py	/^import jobfile$/;"	i
jobfilter	src/python/m5/util/jobfile.py	/^    def jobfilter(self, job):$/;"	m	class:Configuration
jobs	src/python/m5/util/jobfile.py	/^    def jobs(self, groups=None):$/;"	m	class:Configuration
joinpath	src/python/m5/config.py	/^from os.path import isdir, isfile, join as joinpath$/;"	i
joinpath	src/python/m5/util/jobfile.py	/^    from os.path import expanduser, isfile, join as joinpath$/;"	i
joinpath	src/unittest/genini.py	/^from os.path import join as joinpath, realpath$/;"	i
json	src/python/m5/simulate.py	/^            import json$/;"	i
k	src/arch/mips/dt_constants.hh	/^    Bitfield<23>     k;$/;"	m	namespace:MipsISA
k	src/arch/mips/pra_constants.hh	/^    Bitfield<1>     k;$/;"	m	namespace:MipsISA
k0	src/arch/mips/pra_constants.hh	/^    Bitfield<2,  0>  k0;$/;"	m	namespace:MipsISA
k23	src/arch/mips/pra_constants.hh	/^    Bitfield<30, 28> k23;$/;"	m	namespace:MipsISA
kHz	src/sim/core.cc	/^double kHz;$/;"	m	namespace:SimClock::Float	file:
kernEnd	src/dev/alpha/access.h	/^    uint64_t    kernEnd;                \/\/ 28:$/;"	m	struct:AlphaAccess
kernEnd	src/dev/mips/access.h	/^    uint32_t    kernEnd;                \/\/ 18:$/;"	m	struct:MipsAccess
kernStart	src/dev/alpha/access.h	/^    uint64_t    kernStart;              \/\/ 20:$/;"	m	struct:AlphaAccess
kernStart	src/dev/mips/access.h	/^    uint32_t    kernStart;              \/\/ 14:$/;"	m	struct:MipsAccess
kernel	src/arch/alpha/kernel_stats.hh	/^enum cpu_mode { kernel, user, idle, cpu_mode_num };$/;"	e	enum:AlphaISA::Kernel::cpu_mode
kernel	src/arch/arm/kernel_stats.hh	/^enum cpu_mode { hypervisor, kernel, user, idle, cpu_mode_num };$/;"	e	enum:ArmISA::Kernel::cpu_mode
kernel	src/arch/mips/kernel_stats.hh	/^enum cpu_mode { kernel, user, idle, cpu_mode_num };$/;"	e	enum:MipsISA::Kernel::cpu_mode
kernel	src/arch/power/kernel_stats.hh	/^enum cpu_mode { hypervisor, kernel, user, idle, cpu_mode_num };$/;"	e	enum:PowerISA::Kernel::cpu_mode
kernel	src/arch/sparc/kernel_stats.hh	/^enum cpu_mode { hypervisor, kernel, user, idle, cpu_mode_num };$/;"	e	enum:SparcISA::Kernel::cpu_mode
kernel	src/arch/x86/kernel_stats.hh	/^    kernel = ring0,$/;"	e	enum:X86ISA::Kernel::cpu_mode
kernel	src/sim/System.py	/^    kernel = Param.String("", "file that contains the kernel code")$/;"	v
kernel	src/sim/system.hh	/^    ObjectFile *kernel;$/;"	m	class:System
kernelDieEvent	src/arch/mips/linux/system.hh	/^    BreakPCEvent *kernelDieEvent;$/;"	m	class:LinuxMipsSystem
kernelEnd	src/sim/system.hh	/^    Addr kernelEnd;$/;"	m	class:System
kernelEntry	src/sim/system.hh	/^    Addr kernelEntry;$/;"	m	class:System
kernelOopsEvent	src/arch/arm/linux/system.hh	/^    PCEvent *kernelOopsEvent;$/;"	m	class:LinuxArmSystem
kernelPanicEvent	src/arch/alpha/linux/system.hh	/^    BreakPCEvent *kernelPanicEvent;$/;"	m	class:LinuxAlphaSystem
kernelPanicEvent	src/arch/alpha/tru64/system.hh	/^    BreakPCEvent *kernelPanicEvent;$/;"	m	class:Tru64AlphaSystem
kernelPanicEvent	src/arch/arm/linux/system.hh	/^    PCEvent *kernelPanicEvent;$/;"	m	class:LinuxArmSystem
kernelPanicEvent	src/arch/mips/linux/system.hh	/^    BreakPCEvent *kernelPanicEvent;$/;"	m	class:LinuxMipsSystem
kernelStart	src/sim/system.hh	/^    Addr kernelStart;$/;"	m	class:System
kernelStats	src/cpu/thread_state.hh	/^    TheISA::Kernel::Statistics *kernelStats;$/;"	m	struct:ThreadState
kernelSymtab	src/sim/system.hh	/^    SymbolTable *kernelSymtab;$/;"	m	class:System
kernel_pte_lookup	src/arch/alpha/vtophys.cc	/^kernel_pte_lookup(PortProxy &mem, Addr ptbr, VAddr vaddr)$/;"	f	namespace:AlphaISA
key	src/base/trie.hh	/^        Key key;$/;"	m	struct:Trie::Node
key	src/base/vnc/vncinput.hh	/^        uint32_t key;$/;"	m	struct:VncInput::KeyEventMessage
key	src/mem/ruby/network/orion/ConfigFile.hh	/^		string key;$/;"	m	struct:ConfigFile::key_not_found
keyExists	src/mem/ruby/network/orion/ConfigFile.cc	/^bool ConfigFile::keyExists( const string& key ) const$/;"	f	class:ConfigFile
keyPress	src/dev/arm/kmi.cc	/^Pl050::keyPress(uint32_t key, bool down)$/;"	f	class:Pl050
keySymToPs2	src/dev/ps2.cc	/^keySymToPs2(uint32_t key, bool down, bool &cur_shift,$/;"	f	namespace:Ps2
keySymToPs2Byte	src/dev/ps2.cc	/^static const uint16_t keySymToPs2Byte[128] = {$/;"	m	namespace:Ps2	file:
key_len	src/base/cp_annotate.hh	/^        uint32_t key_len;$/;"	m	struct:CPA::AnnotateHeader
key_not_found	src/mem/ruby/network/orion/ConfigFile.hh	/^		key_not_found( const string& key_ = string() )$/;"	f	struct:ConfigFile::key_not_found
key_not_found	src/mem/ruby/network/orion/ConfigFile.hh	/^	struct key_not_found {  \/\/ thrown only by T read(key) variant of read()$/;"	s	class:ConfigFile
key_not_found	src/mem/ruby/network/orion/OrionConfig.hh	/^      key_not_found(const std::string& key_ = string()) : m_key(key_)$/;"	f	struct:OrionConfig::key_not_found
key_not_found	src/mem/ruby/network/orion/OrionConfig.hh	/^    struct key_not_found$/;"	s	class:OrionConfig
key_off	src/base/cp_annotate.hh	/^        uint64_t key_off;$/;"	m	struct:CPA::AnnotateHeader
keyboard	src/base/vnc/vncinput.hh	/^    VncKeyboard *keyboard;$/;"	m	class:VncInput
keyboard	src/dev/x86/SouthBridge.py	/^    keyboard = Param.I8042(_keyboard, "The keyboard controller")$/;"	v	class:SouthBridge
keyboard	src/dev/x86/i8042.hh	/^    PS2Keyboard keyboard;$/;"	m	class:X86ISA::I8042
keyboardFullInt	src/dev/x86/i8042.hh	/^        Bitfield<0> keyboardFullInt;$/;"	m	class:X86ISA::I8042
keyboardIntPin	src/dev/x86/i8042.hh	/^    IntSourcePin *keyboardIntPin;$/;"	m	class:X86ISA::I8042
keyboardUnlocked	src/dev/x86/i8042.hh	/^        Bitfield<4> keyboardUnlocked;$/;"	m	class:X86ISA::I8042
keyboard_int_pin	src/dev/x86/I8042.py	/^    keyboard_int_pin = Param.X86IntSourcePin(X86IntSourcePin(),$/;"	v	class:I8042
keyrange	src/python/m5/util/sorteddict.py	/^    def keyrange(self, start=None, end=None, inclusive=False):$/;"	m	class:SortedDict
keys	src/python/m5/debug.py	/^    def keys(self):$/;"	m	class:AllFlags
keys	src/python/m5/util/multidict.py	/^    def keys(self):$/;"	m	class:multidict
keys	src/python/m5/util/orderdict.py	/^    def keys(self):$/;"	m	class:orderdict
keys	src/python/m5/util/sorteddict.py	/^    def keys(self):$/;"	m	class:SortedDict
keywords	src/python/m5/SimObject.py	/^    keywords = { 'check' : FunctionType }$/;"	v	class:MetaSimObject
kibi	src/python/m5/util/convert.py	/^kibi = 1024$/;"	v
kick	src/cpu/kvm/base.hh	/^    void kick() const { pthread_kill(vcpuThread, KVM_KICK_SIGNAL); }$/;"	f	class:BaseKvmCPU
kids	src/base/debug.hh	/^    std::vector<Flag *> kids() { return _kids; }$/;"	f	class:Debug::Flag
kids	src/base/trie.hh	/^        Node *kids[2];$/;"	m	struct:Trie::Node
kill	src/kern/linux/linux_syscalls.hh	/^    kill = 104,$/;"	e	enum:SystemCalls::__anon87
kill	src/kern/tru64/tru64_syscalls.hh	/^        kill = 37,$/;"	e	enum:SystemCalls::__anon102
kilo	src/python/m5/util/convert.py	/^kilo = 1.0e3$/;"	v
kloadcall	src/kern/tru64/tru64_syscalls.hh	/^        kloadcall = 223,$/;"	e	enum:SystemCalls::__anon102
kmi0	src/dev/arm/RealView.py	/^    kmi0   = Pl050(pio_addr=0x10006000, int_num=20)$/;"	v	class:RealViewEB
kmi0	src/dev/arm/RealView.py	/^    kmi0   = Pl050(pio_addr=0x10006000, int_num=52)$/;"	v	class:RealViewPBX
kmi0	src/dev/arm/RealView.py	/^    kmi0   = Pl050(pio_addr=0x1c060000, int_num=44)$/;"	v	class:VExpress_EMM
kmi1	src/dev/arm/RealView.py	/^    kmi1   = Pl050(pio_addr=0x10007000, int_num=21, is_mouse=True)$/;"	v	class:RealViewEB
kmi1	src/dev/arm/RealView.py	/^    kmi1   = Pl050(pio_addr=0x10007000, int_num=53, is_mouse=True)$/;"	v	class:RealViewPBX
kmi1	src/dev/arm/RealView.py	/^    kmi1   = Pl050(pio_addr=0x1c070000, int_num=45, is_mouse=True)$/;"	v	class:VExpress_EMM
kmiClkDiv	src/dev/arm/kmi.hh	/^    static const int kmiClkDiv   = 0x00C;$/;"	m	class:Pl050
kmiCr	src/dev/arm/kmi.hh	/^    static const int kmiCr       = 0x000;$/;"	m	class:Pl050
kmiData	src/dev/arm/kmi.hh	/^    static const int kmiData     = 0x008;$/;"	m	class:Pl050
kmiISR	src/dev/arm/kmi.hh	/^    static const int kmiISR      = 0x010;$/;"	m	class:Pl050
kmiStat	src/dev/arm/kmi.hh	/^    static const int kmiStat     = 0x004;$/;"	m	class:Pl050
kmodcall	src/kern/tru64/tru64_syscalls.hh	/^        kmodcall = 77,$/;"	e	enum:SystemCalls::__anon102
ksu	src/arch/mips/pra_constants.hh	/^    Bitfield<4,  3>  ksu;$/;"	m	namespace:MipsISA
ku	src/arch/mips/pra_constants.hh	/^    Bitfield<27, 25> ku;$/;"	m	namespace:MipsISA
kvm	src/cpu/kvm/vm.hh	/^    Kvm kvm;$/;"	m	class:KvmVM
kvmArmVCpuInit	src/cpu/kvm/arm_cpu.cc	/^ArmKvmCPU::kvmArmVCpuInit(const struct kvm_vcpu_init &init)$/;"	f	class:ArmKvmCPU
kvmArmVCpuInit	src/cpu/kvm/arm_cpu.cc	/^ArmKvmCPU::kvmArmVCpuInit(uint32_t target)$/;"	f	class:ArmKvmCPU
kvmCoreMiscRegs	src/cpu/kvm/arm_cpu.cc	/^ArmKvmCPU::KvmCoreMiscRegInfo ArmKvmCPU::kvmCoreMiscRegs[] = {$/;"	m	class:ArmKvmCPU	file:
kvmCoreMiscRegs	src/cpu/kvm/arm_cpu.hh	/^    static KvmCoreMiscRegInfo kvmCoreMiscRegs[];$/;"	m	class:ArmKvmCPU
kvmFD	src/cpu/kvm/vm.hh	/^    int kvmFD;$/;"	m	class:Kvm
kvmIntRegs	src/cpu/kvm/arm_cpu.cc	/^ArmKvmCPU::KvmIntRegInfo ArmKvmCPU::kvmIntRegs[] = {$/;"	m	class:ArmKvmCPU	file:
kvmIntRegs	src/cpu/kvm/arm_cpu.hh	/^    static KvmIntRegInfo kvmIntRegs[];$/;"	m	class:ArmKvmCPU
kvmInterrupt	src/cpu/kvm/base.cc	/^BaseKvmCPU::kvmInterrupt(const struct kvm_interrupt &interrupt)$/;"	f	class:BaseKvmCPU
kvmNonMaskableInterrupt	src/cpu/kvm/base.cc	/^BaseKvmCPU::kvmNonMaskableInterrupt()$/;"	f	class:BaseKvmCPU
kvmRun	src/cpu/kvm/arm_cpu.cc	/^ArmKvmCPU::kvmRun(Tick ticks)$/;"	f	class:ArmKvmCPU
kvmRun	src/cpu/kvm/base.cc	/^BaseKvmCPU::kvmRun(Tick ticks)$/;"	f	class:BaseKvmCPU
kvmRun	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::kvmRun(Tick ticks)$/;"	f	class:X86KvmCPU
kvmRunDrain	src/cpu/kvm/base.cc	/^BaseKvmCPU::kvmRunDrain()$/;"	f	class:BaseKvmCPU
kvmRunDrain	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::kvmRunDrain()$/;"	f	class:X86KvmCPU
kvmRunWrapper	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::kvmRunWrapper(Tick ticks)$/;"	f	class:X86KvmCPU
kvmStateDirty	src/cpu/kvm/base.hh	/^    bool kvmStateDirty;$/;"	m	class:BaseKvmCPU
kvmVM	src/cpu/kvm/BaseKvmCPU.py	/^    kvmVM = Param.KvmVM(Parent.any, 'KVM VM (i.e., shared memory domain)')$/;"	v
kx	src/arch/mips/pra_constants.hh	/^    Bitfield<7>      kx;$/;"	m	namespace:MipsISA
l	src/arch/mips/pra_constants.hh	/^    Bitfield<5>     l;$/;"	m	namespace:MipsISA
l	src/arch/x86/regs/misc.hh	/^        Bitfield<53> l; \/\/ Long Attribute Bit$/;"	m	namespace:X86ISA
l	src/base/statistics.hh	/^    NodePtr l;$/;"	m	class:Stats::BinaryNode
l	src/base/statistics.hh	/^    NodePtr l;$/;"	m	class:Stats::SumNode
l	src/base/statistics.hh	/^    NodePtr l;$/;"	m	class:Stats::UnaryNode
l	src/base/varargs.hh	/^    list l;$/;"	m	class:VarArgs::List
l	src/python/m5/util/code_formatter.py	/^    l = [ [Foo(x=[Foo(y=9)])] ]$/;"	v	class:code_formatter
l0	src/arch/x86/regs/misc.hh	/^        Bitfield<0> l0;$/;"	m	namespace:X86ISA
l0sel	src/dev/pcireg.h	/^        Bitfield<14,12> l0sel;$/;"	m	struct:PXCAP
l0sl	src/dev/pcireg.h	/^        Bitfield<8,6>   l0sl;$/;"	m	struct:PXCAP
l1	src/arch/x86/regs/misc.hh	/^        Bitfield<2> l1;$/;"	m	namespace:X86ISA
l1Desc	src/arch/arm/table_walker.hh	/^        L1Descriptor l1Desc;$/;"	m	class:ArmISA::TableWalker::WalkerState
l1IndexPolicy	src/arch/arm/miscregs.hh	/^      Bitfield<15,14> l1IndexPolicy;$/;"	m	namespace:ArmISA
l1Parent	src/arch/arm/table_walker.hh	/^        L1Descriptor *l1Parent;$/;"	m	class:ArmISA::TableWalker::L2Descriptor
l1el	src/dev/pcireg.h	/^        Bitfield<17,15> l1el;$/;"	m	struct:PXCAP
l1l	src/dev/pcireg.h	/^        Bitfield<11,9>  l1l;$/;"	m	struct:PXCAP
l2	src/arch/x86/regs/misc.hh	/^        Bitfield<4> l2;$/;"	m	namespace:X86ISA
l2Addr	src/arch/arm/table_walker.hh	/^        Addr l2Addr() const$/;"	f	class:ArmISA::TableWalker::L1Descriptor
l2Desc	src/arch/arm/table_walker.hh	/^        L2Descriptor l2Desc;$/;"	m	class:ArmISA::TableWalker::WalkerState
l2rstDISABLE_monitor	src/arch/arm/miscregs.hh	/^      Bitfield<31>    l2rstDISABLE_monitor;$/;"	m	namespace:ArmISA
l2x0_fake	src/dev/arm/RealView.py	/^    l2x0_fake      = IsaFake(pio_addr=0x2C100000, pio_size=0xfff)$/;"	v	class:VExpress_EMM
l2x0_fake	src/dev/arm/RealView.py	/^    l2x0_fake     = IsaFake(pio_addr=0x1f002000, pio_size=0xfff)$/;"	v	class:RealViewPBX
l2x0_fake	src/dev/arm/RealView.py	/^    l2x0_fake     = IsaFake(pio_addr=0x1f002000, pio_size=0xfff, warn_access="1")$/;"	v	class:RealViewEB
l3	src/arch/x86/regs/misc.hh	/^        Bitfield<6> l3;$/;"	m	namespace:X86ISA
label	src/mem/cache/mshr_queue.hh	/^    const std::string label;$/;"	m	class:MSHRQueue
label	src/mem/packet.hh	/^            const std::string label;$/;"	m	struct:Packet::PrintReqState::LabelStackEntry
label	src/mem/packet_queue.hh	/^    const std::string label;$/;"	m	class:PacketQueue
labelPrinted	src/mem/packet.hh	/^            bool labelPrinted;$/;"	m	struct:Packet::PrintReqState::LabelStackEntry
labelRE	src/arch/isa_parser.py	/^labelRE = re.compile(r'(?<!%)%\\(([^\\)]+)\\)[sd]')$/;"	v
labelStack	src/mem/packet.hh	/^        LabelStack labelStack;$/;"	m	class:Packet::PrintReqState
lan_fake	src/dev/arm/RealView.py	/^    lan_fake       = IsaFake(pio_addr=0x1A000000, pio_size=0xffff)$/;"	v	class:VExpress_EMM
lane	src/arch/arm/insts/macromem.hh	/^    uint8_t eSize, dataSize, numStructElems, lane, step;$/;"	m	class:ArmISA::MicroNeonMixLaneOp64
lane	src/arch/arm/insts/macromem.hh	/^    unsigned lane;$/;"	m	class:ArmISA::MicroNeonMixLaneOp
lang	src/base/loader/coff_sym.h	/^    unsigned lang: 5;   \/* language for this file *\/$/;"	m	struct:ecoff_fdr
langAda	src/base/loader/coff_symconst.h	/^#define langAda /;"	d
langAssembler	src/base/loader/coff_symconst.h	/^#define langAssembler /;"	d
langC	src/base/loader/coff_symconst.h	/^#define langC /;"	d
langCobol	src/base/loader/coff_symconst.h	/^#define langCobol /;"	d
langCplusplus	src/base/loader/coff_symconst.h	/^#define langCplusplus /;"	d
langCplusplusV2	src/base/loader/coff_symconst.h	/^#define langCplusplusV2 /;"	d
langFortran	src/base/loader/coff_symconst.h	/^#define langFortran /;"	d
langMachine	src/base/loader/coff_symconst.h	/^#define langMachine /;"	d
langMax	src/base/loader/coff_symconst.h	/^#define langMax /;"	d
langNil	src/base/loader/coff_symconst.h	/^#define langNil /;"	d
langPascal	src/base/loader/coff_symconst.h	/^#define langPascal /;"	d
langPl1	src/base/loader/coff_symconst.h	/^#define langPl1 /;"	d
langStdc	src/base/loader/coff_symconst.h	/^#define langStdc /;"	d
large	src/arch/arm/table_walker.hh	/^        bool large() const$/;"	f	class:ArmISA::TableWalker::L2Descriptor
largeGrain	src/arch/arm/table_walker.hh	/^        bool largeGrain;$/;"	m	class:ArmISA::TableWalker::LongDescriptor
last	src/base/statistics.hh	/^    mutable Tick last;$/;"	m	class:Stats::AvgStor
lastActivate	src/cpu/thread_state.hh	/^    Tick lastActivate;$/;"	m	struct:ThreadState
lastActivatedCycle	src/cpu/o3/cpu.hh	/^    Tick lastActivatedCycle;$/;"	m	class:FullO3CPU
lastBranchPC	src/cpu/inorder/thread_state.hh	/^    TheISA::PCState lastBranchPC;$/;"	m	class:InOrderThreadState
lastCommand	src/dev/x86/i8042.hh	/^    uint16_t lastCommand;$/;"	m	class:X86ISA::I8042
lastCommand	src/dev/x86/i8042.hh	/^    uint16_t lastCommand;$/;"	m	class:X86ISA::PS2Device
lastCommitCycle	src/cpu/ozone/lw_back_end.hh	/^    Tick lastCommitCycle;$/;"	m	class:LWBackEnd
lastCommitedSeqNum	src/cpu/o3/commit.hh	/^    InstSeqNum lastCommitedSeqNum[Impl::MaxThreads];$/;"	m	class:DefaultCommit
lastCommittedPC	src/cpu/inorder/cpu.hh	/^    TheISA::PCState lastCommittedPC[ThePipeline::MaxThreads];$/;"	m	class:InOrderCPU
lastControlTick	src/cpu/inorder/resources/execution_unit.hh	/^    Tick lastControlTick;$/;"	m	class:ExecutionUnit
lastCycleGrad	src/cpu/inorder/resources/mem_dep_unit.hh	/^    Tick lastCycleGrad;$/;"	m	class:MemDepUnit
lastDcacheRetry	src/cpu/simple/base.hh	/^    Counter lastDcacheRetry;$/;"	m	class:BaseSimpleCPU
lastDcacheStall	src/cpu/ozone/inorder_back_end.hh	/^    Counter lastDcacheStall;$/;"	m	class:InorderBackEnd
lastDcacheStall	src/cpu/ozone/lsq_unit.hh	/^    Counter lastDcacheStall;$/;"	m	class:OzoneLSQ
lastDcacheStall	src/cpu/ozone/lw_lsq.hh	/^    Counter lastDcacheStall;$/;"	m	class:OzoneLWLSQ
lastDcacheStall	src/cpu/simple/base.hh	/^    Counter lastDcacheStall;$/;"	m	class:BaseSimpleCPU
lastDescriptorAddr	src/dev/copy_engine.hh	/^        Addr lastDescriptorAddr;$/;"	m	class:CopyEngine::CopyEngineChannel
lastDivSize	src/cpu/inorder/resources/mult_div_unit.hh	/^    uint32_t lastDivSize;$/;"	m	class:MultDivUnit
lastDump	src/python/m5/stats/__init__.py	/^lastDump = 0$/;"	v
lastExecuteTick	src/cpu/inorder/resources/execution_unit.hh	/^    Tick lastExecuteTick;$/;"	m	class:ExecutionUnit
lastFaultTick	src/cpu/inorder/resources/graduation_unit.hh	/^    Tick lastFaultTick[ThePipeline::MaxThreads];$/;"	m	class:GraduationUnit
lastGradIsBranch	src/cpu/inorder/thread_state.hh	/^    bool lastGradIsBranch;$/;"	m	class:InOrderThreadState
lastIcacheRetry	src/cpu/simple/base.hh	/^    Counter lastIcacheRetry;$/;"	m	class:BaseSimpleCPU
lastIcacheStall	src/cpu/o3/fetch.hh	/^    Counter lastIcacheStall[Impl::MaxThreads];$/;"	m	class:DefaultFetch
lastIcacheStall	src/cpu/simple/base.hh	/^    Counter lastIcacheStall;$/;"	m	class:BaseSimpleCPU
lastInstName	src/cpu/inorder/resources/mult_div_unit.hh	/^    std::string lastInstName;$/;"	m	class:MultDivUnit
lastInterrupt	src/dev/i8254xGBe.hh	/^    Tick lastInterrupt;$/;"	m	class:IGbE
lastMDUCycle	src/cpu/inorder/resources/mult_div_unit.hh	/^    Tick lastMDUCycle;$/;"	m	class:MultDivUnit
lastMissAddr	src/mem/cache/prefetch/ghb.hh	/^    Addr lastMissAddr[Max_Masters];$/;"	m	class:GHBPrefetcher
lastMissIsSecure	src/mem/cache/prefetch/ghb.hh	/^    bool lastMissIsSecure[Max_Masters];$/;"	m	class:GHBPrefetcher
lastModeTick	src/arch/alpha/kernel_stats.hh	/^    Tick lastModeTick;$/;"	m	class:AlphaISA::Kernel::Statistics
lastNonSpecTick	src/cpu/inorder/resources/graduation_unit.hh	/^    Tick lastNonSpecTick[ThePipeline::MaxThreads];$/;"	m	class:GraduationUnit
lastNumInst	src/cpu/base.hh	/^    Counter lastNumInst;$/;"	m	class:CPUProgressEvent
lastOffset	src/arch/x86/decoder.hh	/^        int lastOffset;$/;"	m	struct:X86ISA::Decoder::InstBytes
lastOpType	src/cpu/inorder/resources/mult_div_unit.hh	/^    OpClass lastOpType;$/;"	m	class:MultDivUnit
lastReplaced	src/arch/sparc/tlb.hh	/^    int lastReplaced;$/;"	m	class:SparcISA::TLB
lastReset	src/base/statistics.hh	/^    Tick lastReset;$/;"	m	class:Stats::AvgStor
lastRunningCycle	src/cpu/inorder/cpu.hh	/^    Tick lastRunningCycle;$/;"	m	class:InOrderCPU
lastRunningCycle	src/cpu/o3/cpu.hh	/^    Cycles lastRunningCycle;$/;"	m	class:FullO3CPU
lastSquashCycle	src/cpu/inorder/cpu.hh	/^    Tick lastSquashCycle[ThePipeline::MaxThreads];$/;"	m	class:InOrderCPU
lastSquashCycle	src/cpu/inorder/resources/fetch_seq_unit.hh	/^    Tick lastSquashCycle[ThePipeline::MaxThreads];$/;"	m	class:FetchSeqUnit
lastStallingStage	src/cpu/inorder/pipeline_stage.hh	/^    int lastStallingStage[ThePipeline::MaxThreads];$/;"	m	class:PipelineStage
lastState	src/base/cp_annotate.hh	/^    IMap lastState;$/;"	m	class:CPA
lastSuspend	src/cpu/thread_state.hh	/^    Tick lastSuspend;$/;"	m	struct:ThreadState
lastTime	src/sim/root.hh	/^    Time lastTime;$/;"	m	class:Root
lastTxInt	src/dev/uart8250.hh	/^    Tick lastTxInt;$/;"	m	class:Uart8250
lastWorkItemStarted	src/sim/system.hh	/^    std::map<std::pair<uint32_t,uint32_t>, Tick>  lastWorkItemStarted;$/;"	m	class:System
lastWrittenTick	src/dev/arm/rtc_pl031.hh	/^    Tick lastWrittenTick;$/;"	m	class:PL031
last_offset	src/dev/alpha/access.h	/^    uint32_t    last_offset;            \/\/ 00: must be first field$/;"	m	struct:AlphaAccess
last_offset	src/dev/mips/access.h	/^    uint32_t    last_offset;            \/\/ 04: must be first field$/;"	m	struct:MipsAccess
last_opcode	src/cpu/kvm/x86_cpu.cc	/^    uint16_t last_opcode;$/;"	m	struct:FXSave	file:
latAfterCompletion	src/dev/CopyEngine.py	/^    latAfterCompletion = Param.Latency('20ns', "Latency after a DMA command is complete before it's reported as such")$/;"	v	class:CopyEngine
latAfterCompletion	src/dev/copy_engine.hh	/^        Tick latAfterCompletion;$/;"	m	class:CopyEngine::CopyEngineChannel
latBeforeBegin	src/dev/CopyEngine.py	/^    latBeforeBegin = Param.Latency('20ns', "Latency after a DMA command is seen before it's proccessed")$/;"	v	class:CopyEngine
latBeforeBegin	src/dev/copy_engine.hh	/^        Tick latBeforeBegin;$/;"	m	class:CopyEngine::CopyEngineChannel
latchCount	src/dev/intel_8254_timer.cc	/^Intel8254Timer::Counter::latchCount()$/;"	f	class:Intel8254Timer::Counter
latch_on	src/dev/intel_8254_timer.hh	/^        bool latch_on;$/;"	m	class:Intel8254Timer::Counter
latched_count	src/dev/intel_8254_timer.hh	/^        uint16_t latched_count;$/;"	m	class:Intel8254Timer::Counter
latency	src/cpu/inorder/resource.hh	/^    const Cycles latency;$/;"	m	class:Resource
latency	src/cpu/ozone/back_end.hh	/^    int latency;$/;"	m	class:BackEnd
latency	src/cpu/ozone/front_end.hh	/^    int latency;$/;"	m	class:FrontEnd
latency	src/cpu/ozone/inorder_back_end.hh	/^    int latency;$/;"	m	class:InorderBackEnd
latency	src/cpu/ozone/lw_back_end.hh	/^    int latency;$/;"	m	class:LWBackEnd
latency	src/dev/x86/cmos.hh	/^    Tick latency;$/;"	m	class:X86ISA::Cmos
latency	src/dev/x86/i8042.hh	/^    Tick latency;$/;"	m	class:X86ISA::I8042
latency	src/dev/x86/i8237.hh	/^    Tick latency;$/;"	m	class:X86ISA::I8237
latency	src/dev/x86/i8254.hh	/^    Tick latency;$/;"	m	class:X86ISA::I8254
latency	src/dev/x86/i8259.hh	/^    Tick latency;$/;"	m	class:X86ISA::I8259
latency	src/dev/x86/intdev.hh	/^        Tick latency;$/;"	m	class:X86ISA::IntDevice::IntMasterPort
latency	src/dev/x86/speaker.hh	/^    Tick latency;$/;"	m	class:X86ISA::Speaker
latency	src/mem/SimpleMemory.py	/^    latency = Param.Latency('30ns', "Request to response latency")$/;"	v	class:SimpleMemory
latency	src/mem/cache/prefetch/Prefetcher.py	/^    latency = Param.Cycles('1', "Latency of the prefetcher")$/;"	v	class:BasePrefetcher
latency	src/mem/cache/prefetch/base.hh	/^    const Cycles latency;$/;"	m	class:BasePrefetcher
latency	src/mem/ruby/network/BasicLink.py	/^    latency = Param.Cycles(1, "latency")$/;"	v	class:BasicLink
latency	src/mem/ruby/system/Cache.py	/^    latency = Param.Cycles("");$/;"	v	class:RubyCache
latency	src/mem/simple_mem.hh	/^    const Tick latency;$/;"	m	class:SimpleMemory
latencyTimer	src/dev/pcireg.h	/^        uint8_t latencyTimer;$/;"	m	struct:PCIConfig::__anon80
latency_bins	src/mem/CommMonitor.py	/^    latency_bins = Param.Unsigned('20', "# bins in latency histograms")$/;"	v	class:CommMonitor
latency_var	src/mem/SimpleMemory.py	/^    latency_var = Param.Latency('0ns', "Request to response latency variance")$/;"	v	class:SimpleMemory
latency_var	src/mem/simple_mem.hh	/^    const Tick latency_var;$/;"	m	class:SimpleMemory
lbnc	src/dev/pcireg.h	/^        Bitfield<21>    lbnc;$/;"	m	struct:PXCAP
lbr	src/arch/x86/regs/misc.hh	/^        Bitfield<0> lbr; \/\/ Last-branch record$/;"	m	namespace:X86ISA
lcdControl	src/dev/arm/pl111.hh	/^    ControlReg lcdControl;$/;"	m	class:Pl111
lcdImsc	src/dev/arm/pl111.hh	/^    InterruptReg lcdImsc;$/;"	m	class:Pl111
lcdLpbase	src/dev/arm/pl111.hh	/^    int lcdLpbase;$/;"	m	class:Pl111
lcdMis	src/dev/arm/pl111.hh	/^    InterruptReg lcdMis;$/;"	m	class:Pl111
lcdPalette	src/dev/arm/pl111.hh	/^    int lcdPalette[LcdPaletteSize];$/;"	m	class:Pl111
lcdRis	src/dev/arm/pl111.hh	/^    InterruptReg lcdRis;$/;"	m	class:Pl111
lcdTiming0	src/dev/arm/pl111.hh	/^    TimingReg0 lcdTiming0;$/;"	m	class:Pl111
lcdTiming1	src/dev/arm/pl111.hh	/^    TimingReg1 lcdTiming1;$/;"	m	class:Pl111
lcdTiming2	src/dev/arm/pl111.hh	/^    TimingReg2 lcdTiming2;$/;"	m	class:Pl111
lcdTiming3	src/dev/arm/pl111.hh	/^    TimingReg3 lcdTiming3;$/;"	m	class:Pl111
lcdUpbase	src/dev/arm/pl111.hh	/^    int lcdUpbase;$/;"	m	class:Pl111
lcdbpp	src/dev/arm/pl111.hh	/^        Bitfield<3,1> lcdbpp;$/;"	m	class:Pl111
lcdbw	src/dev/arm/pl111.hh	/^        Bitfield<4> lcdbw;$/;"	m	class:Pl111
lcddual	src/dev/arm/pl111.hh	/^        Bitfield<7> lcddual;$/;"	m	class:Pl111
lcden	src/dev/arm/pl111.hh	/^        Bitfield<0> lcden;$/;"	m	class:Pl111
lcdmono8	src/dev/arm/pl111.hh	/^        Bitfield<6> lcdmono8;$/;"	m	class:Pl111
lcdpwr	src/dev/arm/pl111.hh	/^        Bitfield<11> lcdpwr;$/;"	m	class:Pl111
lcdtft	src/dev/arm/pl111.hh	/^        Bitfield<5> lcdtft;$/;"	m	class:Pl111
lcdvcomp	src/dev/arm/pl111.hh	/^        Bitfield<13,12> lcdvcomp;$/;"	m	class:Pl111
lchown	src/kern/linux/linux_syscalls.hh	/^    lchown = 105,$/;"	e	enum:SystemCalls::__anon87
lchown	src/kern/tru64/tru64_syscalls.hh	/^        lchown = 208,$/;"	e	enum:SystemCalls::__anon102
lchown32	src/kern/linux/linux_syscalls.hh	/^    lchown32 = 106,$/;"	e	enum:SystemCalls::__anon87
lcrh	src/dev/arm/pl011.hh	/^    uint16_t lcrh;$/;"	m	class:Pl011
ldstQueue	src/cpu/o3/iew.hh	/^    LSQ ldstQueue;$/;"	m	class:DefaultIEW
ldstqCount	src/cpu/o3/comm.hh	/^        unsigned ldstqCount;$/;"	m	struct:TimeBufStruct::iewComm
le	src/arch/x86/regs/misc.hh	/^        Bitfield<8> le;$/;"	m	namespace:X86ISA
leastSigBit	src/base/intmath.hh	/^leastSigBit(T n)$/;"	f
led	src/dev/arm/pl111.hh	/^        Bitfield<6,0> led;$/;"	m	class:Pl111
lee	src/dev/arm/pl111.hh	/^        Bitfield<16> lee;$/;"	m	class:Pl111
leftButton	src/dev/ps2.hh	/^    Bitfield<0> leftButton;$/;"	m	namespace:Ps2
leftButton	src/dev/x86/i8042.hh	/^        Bitfield<2> leftButton;$/;"	m	class:X86ISA::PS2Mouse
legacy	src/arch/x86/regs/misc.hh	/^        Bitfield<31, 0> legacy;$/;"	m	namespace:X86ISA
legacy	src/arch/x86/types.hh	/^        LegacyPrefixVector legacy;$/;"	m	struct:X86ISA::ExtMachInst
legacy	src/dev/i8254xGBe_defs.hh	/^        } legacy;$/;"	m	union:iGbReg::RxDesc::__anon70	typeref:struct:iGbReg::RxDesc::__anon70::__anon71
legacyIO	src/dev/pcidev.hh	/^    bool legacyIO[6];$/;"	m	class:PciDevice
len	src/arch/arm/miscregs.hh	/^        Bitfield<18, 16> len;$/;"	m	namespace:ArmISA
len	src/base/cp_annotate.cc	/^    size_t len;$/;"	m	struct:CPAIgnoreSymbol	file:
len	src/base/inet.hh	/^    uint16_t len() const { return ntohs(ip_len); }$/;"	f	struct:Net::IpHdr
len	src/base/inet.hh	/^    uint16_t len() const { return ntohs(uh_ulen); }$/;"	f	struct:Net::UdpHdr
len	src/base/inet.hh	/^    uint8_t len() const { return IP_OPT_TYPEONLY(type()) ? 1 : opt_len; }$/;"	f	struct:Net::IpOpt
len	src/base/inet.hh	/^    uint8_t len() const { return TCP_OPT_TYPEONLY(type()) ? 1 : opt_len; }$/;"	f	struct:Net::TcpOpt
len	src/base/inet.hh	/^    uint8_t len() const { return extlen() + 8; }$/;"	f	struct:Net::Ip6Opt
len	src/base/inet.hh	/^    void len(uint16_t _len) { ip_len = htons(_len); }$/;"	f	struct:Net::IpHdr
len	src/base/inet.hh	/^    void len(uint16_t _len) { uh_ulen = htons(_len); }$/;"	f	struct:Net::UdpHdr
len	src/base/loader/object_file.hh	/^    size_t len;$/;"	m	class:ObjectFile
len	src/base/statistics.hh	/^    size_type len;$/;"	m	class:Stats::VectorProxy
len	src/dev/copy_engine_defs.hh	/^    uint32_t len;$/;"	m	struct:CopyEngineReg::DmaDesc
len	src/dev/etherdump.cc	/^    uint32_t len;               \/\/ length this packet (off wire)$/;"	m	struct:pcap_pkthdr	file:
len	src/dev/i8254xGBe_defs.hh	/^            uint16_t len;$/;"	m	struct:iGbReg::RxDesc::__anon70::__anon71
len	src/kern/tru64/mbuf.hh	/^    int32_t     len;$/;"	m	struct:tru64::pkthdr
len	src/mem/ruby/system/DMASequencer.hh	/^    int len;$/;"	m	struct:DMARequest
len	src/sim/init.hh	/^    int len;$/;"	m	struct:EmbeddedPython
len0	src/arch/x86/regs/misc.hh	/^        Bitfield<19, 18> len0;$/;"	m	namespace:X86ISA
len1	src/arch/x86/regs/misc.hh	/^        Bitfield<23, 22> len1;$/;"	m	namespace:X86ISA
len2	src/arch/x86/regs/misc.hh	/^        Bitfield<27, 26> len2;$/;"	m	namespace:X86ISA
len3	src/arch/x86/regs/misc.hh	/^        Bitfield<31, 30> len3;$/;"	m	namespace:X86ISA
length	src/arch/x86/bios/IntelMP.py	/^    length = Param.UInt64(0, 'length of mapping in bytes')$/;"	v	class:X86IntelMPAddrSpaceMapping
length	src/arch/x86/bios/intelmp.hh	/^    uint8_t length;$/;"	m	class:X86ISA::IntelMP::ExtConfigEntry
length	src/base/inet.hh	/^    uint8_t length;$/;"	m	struct:Net::ip6_opt_dstopts
length	src/base/vnc/vncinput.hh	/^        uint32_t length;$/;"	m	struct:VncInput::ClientCutTextMessage
length	src/base/vnc/vncserver.hh	/^        uint32_t length;$/;"	m	struct:VncServer::ServerCutText
length	src/dev/etherpkt.hh	/^    unsigned length;$/;"	m	class:EthPacketData
less	src/base/statistics.cc	/^Info::less(Info *stat1, Info *stat2)$/;"	f	class:Stats::Info
less	src/python/m5/stats/__init__.py	/^    def less(stat1, stat2):$/;"	f	function:enable
less_equal	src/mem/ruby/profiler/AccessTraceForAddress.hh	/^    less_equal(const AccessTraceForAddress* n1,$/;"	f	class:AccessTraceForAddress
letobe	src/sim/byteswap.hh	/^template <typename T> inline T letobe(T value) {return swap_byte(value);}$/;"	f
letog	src/sim/byteswap.hh	/^    inline T letog(T value) {return letobe(value);}$/;"	f	namespace:BigEndianGuest
letog	src/sim/byteswap.hh	/^    inline T letog(T value) {return value;}$/;"	f	namespace:LittleEndianGuest
letoh	src/sim/byteswap.hh	/^template <typename T> inline T letoh(T value) {return swap_byte(value);}$/;"	f
letoh	src/sim/byteswap.hh	/^template <typename T> inline T letoh(T value) {return value;}$/;"	f
level	src/arch/x86/intmessage.hh	/^        Bitfield<20> level;$/;"	m	namespace:X86ISA
level	src/arch/x86/regs/apic.hh	/^        Bitfield<14> level;$/;"	m	namespace:X86ISA
level	src/mem/ruby/system/SparseMemory.hh	/^    int level;$/;"	m	struct:CurNextInfo
level1	src/arch/alpha/pagetable.hh	/^    Addr level1() const$/;"	f	struct:AlphaISA::VAddr
level1	src/arch/power/pagetable.hh	/^    level1() const$/;"	f	struct:PowerISA::VAddr
level2	src/arch/alpha/pagetable.hh	/^    Addr level2() const$/;"	f	struct:AlphaISA::VAddr
level2	src/arch/power/pagetable.hh	/^    level2() const$/;"	f	struct:PowerISA::VAddr
level3	src/arch/alpha/pagetable.hh	/^    Addr level3() const$/;"	f	struct:AlphaISA::VAddr
level3	src/arch/power/pagetable.hh	/^    level3() const$/;"	f	struct:PowerISA::VAddr
lex	src/arch/micro_asm.py	/^from ply import lex$/;"	i
lex	src/python/m5/util/grammar.py	/^import ply.lex$/;"	i
lgetxattr	src/kern/linux/linux_syscalls.hh	/^    lgetxattr = 107,$/;"	e	enum:SystemCalls::__anon87
li	src/arch/power/types.hh	/^    Bitfield<25,  2> li;$/;"	m	namespace:PowerISA
limit	src/arch/x86/linux/syscalls.cc	/^    uint32_t limit;$/;"	m	struct:UserDesc32	file:
limit	src/arch/x86/linux/syscalls.cc	/^    uint32_t limit;$/;"	m	struct:UserDesc64	file:
limitHigh	src/arch/x86/regs/misc.hh	/^        Bitfield<51, 48> limitHigh;$/;"	m	namespace:X86ISA
limitLow	src/arch/x86/regs/misc.hh	/^        Bitfield<15, 0> limitLow;$/;"	m	namespace:X86ISA
limit_in_pages	src/arch/x86/linux/syscalls.cc	/^    Bitfield<4> limit_in_pages;$/;"	v
lineNil	src/base/loader/coff_sym.h	/^#define lineNil /;"	d
line_address	src/mem/ruby/common/Address.hh	/^line_address(const Address& addr)$/;"	f
linebuf	src/dev/terminal.hh	/^    CircleBuf linebuf;$/;"	m	class:Terminal
link	src/dev/etherlink.cc	/^    EtherLink::Link *link;$/;"	m	class:LinkDelayEvent	file:
link	src/dev/etherlink.hh	/^    Link *link[2];$/;"	m	class:EtherLink
link	src/dev/ns_gige_reg.h	/^    uint32_t link;    \/* link field to next descriptor in linked list *\/$/;"	m	struct:ns_desc32
link	src/dev/ns_gige_reg.h	/^    uint64_t link;    \/* link field to next descriptor in linked list *\/$/;"	m	struct:ns_desc64
link	src/kern/linux/linux_syscalls.hh	/^    link = 108,$/;"	e	enum:SystemCalls::__anon87
link	src/kern/tru64/tru64_syscalls.hh	/^        link = 9,$/;"	e	enum:SystemCalls::__anon102
link	src/mem/ruby/network/Topology.hh	/^    BasicLink *link;$/;"	m	struct:LinkEntry
linkBuffer	src/mem/ruby/network/garnet/fixed-pipeline/NetworkLink_d.hh	/^    flitBuffer_d *linkBuffer;$/;"	m	class:NetworkLink_d
linkBuffer	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.hh	/^    flitBuffer *linkBuffer;$/;"	m	class:NetworkLink
linkDelay	src/dev/etherlink.hh	/^        Tick linkDelay;$/;"	m	class:EtherLink::Link
link_consumer	src/mem/ruby/network/garnet/fixed-pipeline/NetworkLink_d.hh	/^    Consumer *link_consumer;$/;"	m	class:NetworkLink_d
link_consumer	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.hh	/^    FlexibleConsumer *link_consumer;$/;"	m	class:NetworkLink
link_id	src/mem/ruby/network/BasicLink.py	/^    link_id = Param.Int("ID in relation to other links")$/;"	v	class:BasicLink
link_id	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.py	/^    link_id = Param.Int(Parent.link_id, "link id")$/;"	v	class:NetworkLink_d
link_id	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.py	/^    link_id = Param.Int(Parent.link_id, "link id")$/;"	v	class:NetworkLink
link_is_shortest_path_to_node	src/mem/ruby/network/Topology.cc	/^link_is_shortest_path_to_node(SwitchID src, SwitchID next, SwitchID final,$/;"	f
link_latency	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.py	/^    link_latency = Param.Cycles(Parent.latency, "link latency")$/;"	v	class:NetworkLink_d
link_latency	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.py	/^    link_latency = Param.Cycles(Parent.latency, "link latency")$/;"	v	class:NetworkLink
link_source	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.hh	/^    FlexibleConsumer *link_source;$/;"	m	class:NetworkLink
link_srcQueue	src/mem/ruby/network/garnet/fixed-pipeline/NetworkLink_d.hh	/^    flitBuffer_d *link_srcQueue;$/;"	m	class:NetworkLink_d
link_srcQueue	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.hh	/^    flitBuffer *link_srcQueue;$/;"	m	class:NetworkLink
linktype	src/dev/etherdump.cc	/^    uint32_t linktype;          \/\/ data link type (DLT_*)$/;"	m	struct:pcap_file_header	file:
list	src/base/varargs.hh	/^    typedef std::list<Argument> list;$/;"	t	class:VarArgs::List
list	src/doxygen/stl.hh	/^template <class T> class list {$/;"	c	namespace:std
listIt	src/cpu/o3/mem_dep_unit.hh	/^        ListIt listIt;$/;"	m	class:MemDepUnit::MemDepEntry
listOrder	src/cpu/o3/inst_queue.hh	/^    std::list<ListOrderEntry> listOrder;$/;"	m	class:InstructionQueue
list_type	src/dev/arm/gic_pl390.hh	/^        Bitfield<25,24> list_type;$/;"	m	class:Pl390
listen	src/base/remote_gdb.cc	/^GDBListener::listen()$/;"	f	class:GDBListener
listen	src/base/socket.cc	/^ListenSocket::listen(int port, bool reuse)$/;"	f	class:ListenSocket
listen	src/base/vnc/vncserver.cc	/^VncServer::listen(int port)$/;"	f	class:VncServer
listen	src/dev/ethertap.cc	/^TapListener::listen()$/;"	f	class:TapListener
listen	src/dev/terminal.cc	/^Terminal::listen(int port)$/;"	f	class:Terminal
listen	src/kern/tru64/tru64_syscalls.hh	/^        listen = 106,$/;"	e	enum:SystemCalls::__anon102
listenEvent	src/base/vnc/vncserver.hh	/^    ListenEvent *listenEvent;$/;"	m	class:VncServer
listenEvent	src/dev/terminal.hh	/^    ListenEvent *listenEvent;$/;"	m	class:Terminal
listener	src/base/remote_gdb.hh	/^        GDBListener *listener;$/;"	m	class:GDBListener::Event
listener	src/base/remote_gdb.hh	/^    GDBListener *listener;$/;"	m	class:BaseRemoteGDB
listener	src/base/remote_gdb.hh	/^    ListenSocket listener;$/;"	m	class:GDBListener
listener	src/base/vnc/vncserver.hh	/^    ListenSocket listener;$/;"	m	class:VncServer
listener	src/dev/ethertap.cc	/^        TapListener *listener;$/;"	m	class:TapListener::Event	file:
listener	src/dev/ethertap.cc	/^    ListenSocket listener;$/;"	m	class:TapListener	file:
listener	src/dev/ethertap.hh	/^    TapListener *listener;$/;"	m	class:EtherTap
listener	src/dev/terminal.hh	/^    ListenSocket listener;$/;"	m	class:Terminal
listeners	src/sim/probe/probe.hh	/^    std::vector<ProbeListener *> listeners;$/;"	m	class:ProbeListenerObject
listeners	src/sim/probe/probe.hh	/^    std::vector<ProbeListenerArgBase<Arg> *> listeners;$/;"	m	class:ProbePointArg
listening	src/base/socket.hh	/^    bool listening;$/;"	m	class:ListenSocket
listeningDisabled	src/base/socket.hh	/^    static bool listeningDisabled;$/;"	m	class:ListenSocket
listxattr	src/kern/linux/linux_syscalls.hh	/^    listxattr = 109,$/;"	e	enum:SystemCalls::__anon87
literals	src/mem/slicc/parser.py	/^    literals = ':[]{}(),='$/;"	v	class:SLICC
live	src/unittest/refcnttest.cc	/^live()$/;"	f	namespace:__anon106
liveChange	src/unittest/refcnttest.cc	/^liveChange()$/;"	f	namespace:__anon106
liveIt	src/unittest/refcnttest.cc	/^    LiveList::iterator liveIt;$/;"	m	class:__anon106::TestRC	file:
liveList	src/unittest/refcnttest.cc	/^LiveList liveList;$/;"	m	namespace:__anon106	file:
llistxattr	src/kern/linux/linux_syscalls.hh	/^    llistxattr = 110,$/;"	e	enum:SystemCalls::__anon87
llseek	src/kern/linux/linux_syscalls.hh	/^    llseek = 1,$/;"	e	enum:SystemCalls::__anon87
lma	src/arch/x86/regs/misc.hh	/^        Bitfield<10> lma; \/\/ Long mode active$/;"	m	namespace:X86ISA
lme	src/arch/x86/regs/misc.hh	/^        Bitfield<8> lme; \/\/ Long mode enable$/;"	m	namespace:X86ISA
lnHigh	src/base/loader/coff_sym.h	/^    coff_int    lnHigh;         \/* highest line in the procedure *\/$/;"	m	struct:pdr
lnLow	src/base/loader/coff_sym.h	/^    coff_int    lnLow;          \/* lowest line in the procedure *\/$/;"	m	struct:pdr
lnMap	src/base/cp_annotate.hh	/^    LinkMap lnMap;$/;"	m	class:CPA
lo	src/arch/arm/insts/neon64_mem.hh	/^    XReg lo;$/;"	m	struct:ArmISA::VReg
load	src/base/inifile.cc	/^IniFile::load(const string &file)$/;"	f	class:IniFile
load	src/base/inifile.cc	/^IniFile::load(istream &f)$/;"	f	class:IniFile
load	src/base/loader/symtab.cc	/^SymbolTable::load(const string &filename)$/;"	f	class:SymbolTable
loadAddrMask	src/sim/system.hh	/^    Addr loadAddrMask;$/;"	m	class:System
loadAddrOffset	src/sim/system.hh	/^    Addr loadAddrOffset;$/;"	m	class:System
loadAllDataRegs	src/arch/x86/isa/insts/simd128/integer/save_and_restore_state/save_and_restore_state.py	/^    "".join([loadX87RegTemplate % { "idx" : i, "mode" : "%(mode)s" }$/;"	v
loadBarrier	src/cpu/o3/mem_dep_unit.hh	/^    bool loadBarrier;$/;"	m	class:MemDepUnit
loadBarrierSN	src/cpu/o3/mem_dep_unit.hh	/^    InstSeqNum loadBarrierSN;$/;"	m	class:MemDepUnit
loadBlocked	src/cpu/o3/lsq.hh	/^    bool loadBlocked(ThreadID tid)$/;"	f	class:LSQ
loadBlocked	src/cpu/o3/lsq_unit.hh	/^    bool loadBlocked()$/;"	f	class:LSQUnit
loadBlocked	src/cpu/ozone/lsq_unit.hh	/^OzoneLSQ<Impl>::loadBlocked()$/;"	f	class:OzoneLSQ
loadBlocked	src/cpu/ozone/lw_lsq.hh	/^    bool loadBlocked()$/;"	f	class:OzoneLWLSQ
loadBlockedHandled	src/cpu/o3/lsq_unit.hh	/^    bool loadBlockedHandled;$/;"	m	class:LSQUnit
loadBlockedHandled	src/cpu/ozone/lw_lsq.hh	/^    bool loadBlockedHandled;$/;"	m	class:OzoneLWLSQ
loadData	src/cpu/inorder/inorder_dyn_inst.hh	/^    uint64_t loadData;$/;"	m	class:InOrderDynInst
loadFaultInst	src/cpu/ozone/lsq_unit.hh	/^    DynInstPtr loadFaultInst;$/;"	m	class:OzoneLSQ
loadFaultInst	src/cpu/ozone/lw_lsq.hh	/^    DynInstPtr loadFaultInst;$/;"	m	class:OzoneLWLSQ
loadFloat80	src/arch/x86/utility.cc	/^loadFloat80(const void *_mem)$/;"	f	namespace:X86ISA
loadGlobalSymbols	src/base/loader/aout_object.cc	/^AoutObject::loadGlobalSymbols(SymbolTable *symtab, Addr addrMask)$/;"	f	class:AoutObject
loadGlobalSymbols	src/base/loader/dtb_object.cc	/^DtbObject::loadGlobalSymbols(SymbolTable *symtab, Addr addrMask)$/;"	f	class:DtbObject
loadGlobalSymbols	src/base/loader/ecoff_object.cc	/^EcoffObject::loadGlobalSymbols(SymbolTable *symtab, Addr addrMask)$/;"	f	class:EcoffObject
loadGlobalSymbols	src/base/loader/elf_object.cc	/^ElfObject::loadGlobalSymbols(SymbolTable *symtab, Addr addrMask)$/;"	f	class:ElfObject
loadGlobalSymbols	src/base/loader/raw_object.cc	/^RawObject::loadGlobalSymbols(SymbolTable *symtab, Addr addrMask)$/;"	f	class:RawObject
loadHead	src/cpu/o3/lsq_unit.hh	/^    int loadHead;$/;"	m	class:LSQUnit
loadHead	src/cpu/ozone/lsq_unit.hh	/^    int loadHead;$/;"	m	class:OzoneLSQ
loadLocalSymbols	src/base/loader/aout_object.cc	/^AoutObject::loadLocalSymbols(SymbolTable *symtab, Addr addrMask)$/;"	f	class:AoutObject
loadLocalSymbols	src/base/loader/dtb_object.cc	/^DtbObject::loadLocalSymbols(SymbolTable *symtab, Addr addrMask)$/;"	f	class:DtbObject
loadLocalSymbols	src/base/loader/ecoff_object.cc	/^EcoffObject::loadLocalSymbols(SymbolTable *symtab, Addr addrMask)$/;"	f	class:EcoffObject
loadLocalSymbols	src/base/loader/elf_object.cc	/^ElfObject::loadLocalSymbols(SymbolTable *symtab, Addr addrMask)$/;"	f	class:ElfObject
loadLocalSymbols	src/base/loader/raw_object.cc	/^RawObject::loadLocalSymbols(SymbolTable *symtab, Addr addrMask)$/;"	f	class:RawObject
loadOp	src/arch/arm/types.hh	/^            Bitfield<20> loadOp;$/;"	m	namespace:ArmISA
loadQueue	src/cpu/o3/lsq_unit.hh	/^    std::vector<DynInstPtr> loadQueue;$/;"	m	class:LSQUnit
loadQueue	src/cpu/ozone/lsq_unit.hh	/^    std::vector<DynInstPtr> loadQueue;$/;"	m	class:OzoneLSQ
loadQueue	src/cpu/ozone/lw_lsq.hh	/^    std::list<DynInstPtr> loadQueue;$/;"	m	class:OzoneLWLSQ
loadSection	src/base/loader/object_file.cc	/^ObjectFile::loadSection(Section *sec, PortProxy& memProxy, Addr addrMask, Addr offset)$/;"	f	class:ObjectFile
loadSections	src/base/loader/elf_object.cc	/^ElfObject::loadSections(PortProxy& memProxy, Addr addrMask, Addr offset)$/;"	f	class:ElfObject
loadSections	src/base/loader/hex_file.cc	/^HexFile::loadSections(PortProxy& memProxy)$/;"	f	class:HexFile
loadSections	src/base/loader/object_file.cc	/^ObjectFile::loadSections(PortProxy& memProxy, Addr addrMask, Addr offset)$/;"	f	class:ObjectFile
loadSomeSymbols	src/base/loader/elf_object.cc	/^ElfObject::loadSomeSymbols(SymbolTable *symtab, int binding, Addr mask)$/;"	f	class:ElfObject
loadState	src/arch/alpha/process.cc	/^AlphaLiveProcess::loadState(Checkpoint *cp)$/;"	f	class:AlphaLiveProcess
loadState	src/sim/root.cc	/^Root::loadState(Checkpoint *cp)$/;"	f	class:Root
loadState	src/sim/sim_object.cc	/^SimObject::loadState(Checkpoint *cp)$/;"	f	class:SimObject
loadTail	src/cpu/o3/lsq_unit.hh	/^    int loadTail;$/;"	m	class:LSQUnit
loadTail	src/cpu/ozone/lsq_unit.hh	/^    int loadTail;$/;"	m	class:OzoneLSQ
loadVal	src/dev/arm/rtc_pl031.hh	/^    uint32_t loadVal;$/;"	m	class:PL031
loadValue	src/dev/arm/timer_sp804.hh	/^        uint32_t loadValue;$/;"	m	class:Sp804::Timer
loadWeakSymbols	src/base/loader/elf_object.cc	/^ElfObject::loadWeakSymbols(SymbolTable *symtab, Addr addrMask)$/;"	f	class:ElfObject
loadWeakSymbols	src/base/loader/object_file.hh	/^    virtual bool loadWeakSymbols(SymbolTable *symtab, Addr addrMask =$/;"	f	class:ObjectFile
load_addr_mask	src/arch/alpha/AlphaSystem.py	/^    load_addr_mask = 0xffffffffff$/;"	v	class:AlphaSystem
load_addr_mask	src/arch/arm/ArmSystem.py	/^    load_addr_mask = 0x0fffffff$/;"	v	class:LinuxArmSystem
load_addr_mask	src/arch/arm/ArmSystem.py	/^    load_addr_mask = 0xffffffff$/;"	v	class:ArmSystem
load_addr_mask	src/arch/mips/MipsSystem.py	/^    load_addr_mask = 0xffffffffff$/;"	v	class:MipsSystem
load_addr_mask	src/arch/sparc/SparcSystem.py	/^    load_addr_mask = 0xffffffffff$/;"	v	class:SparcSystem
load_addr_mask	src/arch/x86/X86System.py	/^    load_addr_mask = 0xffffffffffffffff$/;"	v	class:X86System
load_addr_mask	src/sim/System.py	/^    load_addr_mask = Param.UInt64(0xffffffffff,$/;"	v
load_module	src/python/importer.py	/^    def load_module(self, fullname):$/;"	m	class:CodeImporter
load_offset	src/sim/System.py	/^    load_offset = Param.UInt64(0, "Address to offset loading binaries with")$/;"	v
loads	src/arch/alpha/linux/linux.hh	/^       uint64_t loads[3];  \/* 1, 5, and 15 minute load averages *\/$/;"	m	struct:AlphaLinux::__anon2
loads	src/arch/arm/linux/linux.hh	/^        uint32_t loads[3];  \/* 1, 5, and 15 minute load averages *\/$/;"	m	struct:ArmLinux32::__anon8
loads	src/arch/arm/linux/linux.hh	/^        uint64_t loads[3];  \/* 1, 5, and 15 minute load averages *\/$/;"	m	struct:ArmLinux64::__anon11
loads	src/arch/mips/linux/linux.hh	/^       uint32_t loads[3];  \/* 1, 5, and 15 minute load averages *\/$/;"	m	struct:MipsLinux::__anon20
loads	src/arch/sparc/linux/linux.hh	/^        uint32_t loads[3];  \/* 1, 5, and 15 minute load averages *\/$/;"	m	struct:Sparc32Linux::__anon28
loads	src/arch/sparc/linux/linux.hh	/^        uint64_t loads[3];  \/* 1, 5, and 15 minute load averages *\/$/;"	m	struct:SparcLinux::__anon26
loads	src/arch/x86/linux/linux.hh	/^        uint64_t loads[3];  \/* 1, 5, and 15 minute load averages *\/$/;"	m	struct:X86Linux64::__anon32
loads	src/arch/x86/linux/linux.hh	/^       uint32_t loads[3];  \/* 1, 5, and 15 minute load averages *\/$/;"	m	struct:X86Linux32::__anon34
loads	src/cpu/o3/lsq_unit.hh	/^    int loads;$/;"	m	class:LSQUnit
loads	src/cpu/ozone/lsq_unit.hh	/^    int loads;$/;"	m	class:OzoneLSQ
loads	src/cpu/ozone/lw_lsq.hh	/^    int loads;$/;"	m	class:OzoneLWLSQ
loadsymbol	src/sim/pseudo_inst.cc	/^loadsymbol(ThreadContext *tc)$/;"	f	namespace:PseudoInst
localApic	src/arch/x86/bios/intelmp.hh	/^    uint32_t localApic;$/;"	m	class:X86ISA::IntelMP::ConfigTable
localApic	src/arch/x86/interrupts.hh	/^        Interrupts *localApic;$/;"	m	class:X86ISA::Interrupts::ApicTimerEvent
localApicID	src/arch/x86/bios/intelmp.hh	/^    uint8_t localApicID;$/;"	m	class:X86ISA::IntelMP::Processor
localApicVersion	src/arch/x86/bios/intelmp.hh	/^    uint8_t localApicVersion;$/;"	m	class:X86ISA::IntelMP::Processor
localCtrBits	src/cpu/ozone/OzoneCPU.py	/^    localCtrBits = Param.Unsigned("Bits per counter")$/;"	v	class:DerivOzoneCPU
localCtrBits	src/cpu/ozone/SimpleOzoneCPU.py	/^    localCtrBits = Param.Unsigned("Bits per counter")$/;"	v	class:SimpleOzoneCPU
localCtrBits	src/cpu/ozone/simple_params.hh	/^    unsigned localCtrBits;$/;"	m	class:SimpleParams
localCtrBits	src/cpu/pred/2bit_local.hh	/^    unsigned localCtrBits;$/;"	m	class:LocalBP
localCtrBits	src/cpu/pred/BranchPredictor.py	/^    localCtrBits = Param.Unsigned(2, "Bits per counter")$/;"	v	class:BranchPredictor
localCtrBits	src/cpu/pred/tournament.hh	/^    unsigned localCtrBits;$/;"	m	class:TournamentBP
localCtrs	src/cpu/pred/2bit_local.hh	/^    std::vector<SatCounter> localCtrs;$/;"	m	class:LocalBP
localCtrs	src/cpu/pred/tournament.hh	/^    std::vector<SatCounter> localCtrs;$/;"	m	class:TournamentBP
localHistory	src/cpu/pred/tournament.hh	/^        unsigned localHistory;$/;"	m	struct:TournamentBP::BPHistory
localHistoryBits	src/cpu/ozone/OzoneCPU.py	/^    localHistoryBits = Param.Unsigned("Bits for the local history")$/;"	v	class:DerivOzoneCPU
localHistoryBits	src/cpu/ozone/SimpleOzoneCPU.py	/^    localHistoryBits = Param.Unsigned("Bits for the local history")$/;"	v	class:SimpleOzoneCPU
localHistoryBits	src/cpu/ozone/simple_params.hh	/^    unsigned localHistoryBits;$/;"	m	class:SimpleParams
localHistoryBits	src/cpu/pred/tournament.hh	/^    unsigned localHistoryBits;$/;"	m	class:TournamentBP
localHistoryTable	src/cpu/pred/tournament.hh	/^    std::vector<unsigned> localHistoryTable;$/;"	m	class:TournamentBP
localHistoryTableSize	src/cpu/ozone/OzoneCPU.py	/^    localHistoryTableSize = Param.Unsigned("Size of local history table")$/;"	v	class:DerivOzoneCPU
localHistoryTableSize	src/cpu/ozone/SimpleOzoneCPU.py	/^    localHistoryTableSize = Param.Unsigned("Size of local history table")$/;"	v	class:SimpleOzoneCPU
localHistoryTableSize	src/cpu/ozone/simple_params.hh	/^    unsigned localHistoryTableSize;$/;"	m	class:SimpleParams
localHistoryTableSize	src/cpu/pred/BranchPredictor.py	/^    localHistoryTableSize = Param.Unsigned(2048, "Size of local history table")$/;"	v	class:BranchPredictor
localHistoryTableSize	src/cpu/pred/tournament.hh	/^    unsigned localHistoryTableSize;$/;"	m	class:TournamentBP
localPredTaken	src/cpu/pred/tournament.hh	/^        bool localPredTaken;$/;"	m	struct:TournamentBP::BPHistory
localPredictorMask	src/cpu/pred/tournament.hh	/^    unsigned localPredictorMask;$/;"	m	class:TournamentBP
localPredictorSets	src/cpu/pred/2bit_local.hh	/^    unsigned localPredictorSets;$/;"	m	class:LocalBP
localPredictorSize	src/cpu/ozone/OzoneCPU.py	/^    localPredictorSize = Param.Unsigned("Size of local predictor")$/;"	v	class:DerivOzoneCPU
localPredictorSize	src/cpu/ozone/SimpleOzoneCPU.py	/^    localPredictorSize = Param.Unsigned("Size of local predictor")$/;"	v	class:SimpleOzoneCPU
localPredictorSize	src/cpu/ozone/simple_params.hh	/^    unsigned localPredictorSize;$/;"	m	class:SimpleParams
localPredictorSize	src/cpu/pred/2bit_local.hh	/^    unsigned localPredictorSize;$/;"	m	class:LocalBP
localPredictorSize	src/cpu/pred/BranchPredictor.py	/^    localPredictorSize = Param.Unsigned(2048, "Size of local predictor")$/;"	v	class:BranchPredictor
localPredictorSize	src/cpu/pred/tournament.hh	/^    unsigned localPredictorSize;$/;"	m	class:TournamentBP
localThreshold	src/cpu/pred/tournament.hh	/^    unsigned localThreshold;$/;"	m	class:TournamentBP
localTimer	src/dev/arm/timer_cpulocal.hh	/^    Timer localTimer[CPU_MAX];$/;"	m	class:CpuLocalTimer
local_apic	src/arch/x86/bios/IntelMP.py	/^    local_apic = Param.UInt32(0xFEE00000, 'address of the local APIC')$/;"	v	class:X86IntelMPConfigTable
local_apic_id	src/arch/x86/bios/IntelMP.py	/^    local_apic_id = Param.UInt8(0, 'local APIC id')$/;"	v	class:X86IntelMPProcessor
local_apic_version	src/arch/x86/bios/IntelMP.py	/^    local_apic_version = Param.UInt8(0,$/;"	v	class:X86IntelMPProcessor
local_cpu_timer	src/dev/arm/RealView.py	/^    local_cpu_timer = CpuLocalTimer(int_num_timer=29, int_num_watchdog=30, pio_addr=0x1f000600)$/;"	v	class:RealViewPBX
local_cpu_timer	src/dev/arm/RealView.py	/^    local_cpu_timer = CpuLocalTimer(int_num_timer=29, int_num_watchdog=30, pio_addr=0x2C080000)$/;"	v	class:VExpress_EMM
localoff	src/base/loader/coff_sym.h	/^    unsigned localoff : 8;      \/* offset of local variables from vfp *\/$/;"	m	struct:pdr
locals	src/python/m5/util/code_formatter.py	/^    locals = True$/;"	v	class:code_formatter
lock	src/arch/x86/types.hh	/^        Bitfield<5> lock;$/;"	m	namespace:X86ISA
lock	src/kern/linux/linux_syscalls.hh	/^    lock = 111,$/;"	e	enum:SystemCalls::__anon87
lockAddr	src/cpu/inorder/cpu.hh	/^    Addr lockAddr;$/;"	m	class:InOrderCPU
lockAddrList	src/cpu/ozone/cpu.hh	/^    std::set<Addr> lockAddrList;$/;"	m	class:OzoneCPU
lockFlag	src/cpu/inorder/cpu.hh	/^    bool lockFlag;$/;"	m	class:InOrderCPU
lockFlag	src/cpu/ozone/cpu.hh	/^    bool lockFlag;$/;"	m	class:OzoneCPU
lockList	src/mem/cache/blk.hh	/^    std::list<Lock> lockList;$/;"	m	class:CacheBlk
lockVal	src/dev/arm/rv_ctrl.hh	/^        Bitfield<15,0> lockVal;$/;"	m	class:RealViewCtrl
lock_addr	src/arch/alpha/isa.hh	/^        Addr lock_addr;      \/\/ lock address for LL\/SC$/;"	m	class:AlphaISA::ISA
lock_flag	src/arch/alpha/isa.hh	/^        bool lock_flag;      \/\/ lock flag for LL\/SC$/;"	m	class:AlphaISA::ISA
locked	src/arch/sparc/pagetable.hh	/^    bool locked()   const { assert(populated); return bits(entry4u,6,6); }$/;"	f	class:SparcISA::PageTableEntry
locked	src/cpu/simple/atomic.hh	/^    bool locked;$/;"	m	class:AtomicSimpleCPU
locked	src/dev/arm/rv_ctrl.hh	/^        Bitfield<16> locked;$/;"	m	class:RealViewCtrl
lockedAddrList	src/mem/abstract_mem.hh	/^    std::list<LockedAddr> lockedAddrList;$/;"	m	class:AbstractMemory
logBytes	src/arch/x86/pagetable.hh	/^        unsigned logBytes;$/;"	m	struct:X86ISA::TlbEntry
logs	src/base/statistics.hh	/^    Counter logs;$/;"	m	class:Stats::HistStor
logs	src/base/stats/info.hh	/^    Counter logs;$/;"	m	struct:Stats::DistData
longDesc	src/arch/arm/table_walker.hh	/^        LongDescriptor longDesc;$/;"	m	class:ArmISA::TableWalker::WalkerState
longDescFaultSources	src/arch/arm/faults.cc	/^uint8_t ArmFault::longDescFaultSources[] = {$/;"	m	class:ArmISA::ArmFault	file:
longDescFaultSources	src/arch/arm/faults.hh	/^    static uint8_t longDescFaultSources[NumFaultSources];$/;"	m	class:ArmISA::ArmFault
longDescFormat	src/arch/arm/pagetable.hh	/^    bool longDescFormat; \/\/ @todo use this in the update attribute bethod$/;"	m	struct:ArmISA::TlbEntry
longDescFormatInUse	src/arch/arm/utility.cc	/^longDescFormatInUse(ThreadContext *tc)$/;"	f	namespace:ArmISA
longMode	src/arch/x86/regs/misc.hh	/^        Bitfield<4> longMode;$/;"	m	namespace:X86ISA
longPdtb	src/arch/x86/regs/misc.hh	/^        Bitfield<51, 12> longPdtb; \/\/ Long Mode Page-Directory-Table$/;"	m	namespace:X86ISA
longestLatency	src/cpu/activity.hh	/^    int longestLatency;$/;"	m	class:ActivityRecorder
longl1	src/arch/x86/pagetable.hh	/^        Bitfield<20, 12> longl1;$/;"	m	namespace:X86ISA
longl2	src/arch/x86/pagetable.hh	/^        Bitfield<29, 21> longl2;$/;"	m	namespace:X86ISA
longl3	src/arch/x86/pagetable.hh	/^        Bitfield<38, 30> longl3;$/;"	m	namespace:X86ISA
longl4	src/arch/x86/pagetable.hh	/^        Bitfield<47, 39> longl4;$/;"	m	namespace:X86ISA
lookUpMiscReg	src/arch/arm/isa.hh	/^        std::vector<struct MiscRegLUTEntry> lookUpMiscReg;$/;"	m	class:ArmISA::ISA
lookup	src/arch/alpha/tlb.cc	/^TLB::lookup(Addr vpn, uint8_t asn)$/;"	f	class:AlphaISA::TLB
lookup	src/arch/arm/tlb.cc	/^TLB::lookup(Addr va, uint16_t asn, uint8_t vmid, bool hyp, bool secure,$/;"	f	class:TLB
lookup	src/arch/mips/tlb.cc	/^TLB::lookup(Addr vpn, uint8_t asn) const$/;"	f	class:TLB
lookup	src/arch/power/tlb.cc	/^TLB::lookup(Addr vpn, uint8_t asn) const$/;"	f	class:TLB
lookup	src/arch/sparc/tlb.cc	/^TLB::lookup(Addr va, int partition_id, bool real, int context_id,$/;"	f	class:SparcISA::TLB
lookup	src/arch/x86/tlb.cc	/^TLB::lookup(Addr va, bool update_lru)$/;"	f	class:X86ISA::TLB
lookup	src/base/trie.hh	/^    lookup(Key key)$/;"	f	class:Trie
lookup	src/cpu/decode_cache.hh	/^    lookup(Addr addr)$/;"	f	class:DecodeCache::AddrMap
lookup	src/cpu/o3/rename_map.cc	/^UnifiedRenameMap::lookup(RegIndex arch_reg) const$/;"	f	class:UnifiedRenameMap
lookup	src/cpu/o3/rename_map.hh	/^    PhysRegIndex lookup(RegIndex arch_reg) const$/;"	f	class:SimpleRenameMap
lookup	src/cpu/ozone/null_predictor.hh	/^    BPredInfo lookup(Addr &PC) { return BPredInfo(PC, PC+4); }$/;"	f	class:NullPredictor
lookup	src/cpu/pred/2bit_local.cc	/^LocalBP::lookup(Addr branch_addr, void * &bp_history)$/;"	f	class:LocalBP
lookup	src/cpu/pred/btb.cc	/^DefaultBTB::lookup(Addr instPC, ThreadID tid)$/;"	f	class:DefaultBTB
lookup	src/cpu/pred/tournament.cc	/^TournamentBP::lookup(Addr branch_addr, void * &bp_history)$/;"	f	class:TournamentBP
lookup	src/mem/page_table.cc	/^PageTable::lookup(Addr vaddr, TheISA::TlbEntry &entry)$/;"	f	class:PageTable
lookup	src/mem/ruby/system/CacheMemory.cc	/^CacheMemory::lookup(const Address& address) const$/;"	f	class:CacheMemory
lookup	src/mem/ruby/system/CacheMemory.cc	/^CacheMemory::lookup(const Address& address)$/;"	f	class:CacheMemory
lookup	src/mem/ruby/system/DirectoryMemory.cc	/^DirectoryMemory::lookup(PhysAddress address)$/;"	f	class:DirectoryMemory
lookup	src/mem/ruby/system/PerfectCacheMemory.hh	/^PerfectCacheMemory<ENTRY>::lookup(const Address& address) const$/;"	f	class:PerfectCacheMemory
lookup	src/mem/ruby/system/PerfectCacheMemory.hh	/^PerfectCacheMemory<ENTRY>::lookup(const Address& address)$/;"	f	class:PerfectCacheMemory
lookup	src/mem/ruby/system/SparseMemory.cc	/^SparseMemory::lookup(const Address& address)$/;"	f	class:SparseMemory
lookup	src/mem/ruby/system/TBETable.hh	/^TBETable<ENTRY>::lookup(const Address& address)$/;"	f	class:TBETable
lookup	src/python/m5/util/code_formatter.py	/^class lookup(object):$/;"	c
lookupAndUpdateNextPC	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::lookupAndUpdateNextPC($/;"	f	class:DefaultFetch
lookupCC	src/cpu/o3/rename_map.hh	/^    PhysRegIndex lookupCC(RegIndex rel_arch_reg) const$/;"	f	class:UnifiedRenameMap
lookupEthPort	src/python/swig/pyobject.cc	/^lookupEthPort(SimObject *so, const std::string &name, int i)$/;"	f
lookupFloat	src/cpu/o3/rename_map.hh	/^    PhysRegIndex lookupFloat(RegIndex rel_arch_reg) const$/;"	f	class:UnifiedRenameMap
lookupHandle	src/base/trie.hh	/^    lookupHandle(Key key)$/;"	f	class:Trie
lookupInt	src/cpu/o3/rename_map.hh	/^    PhysRegIndex lookupInt(RegIndex rel_arch_reg) const$/;"	f	class:UnifiedRenameMap
lookupLevel	src/arch/arm/pagetable.hh	/^    LookupLevel lookupLevel;    \/\/ Lookup level where the descriptor was fetched$/;"	m	struct:ArmISA::TlbEntry
lookupLevel	src/arch/arm/table_walker.hh	/^        LookupLevel lookupLevel;$/;"	m	class:ArmISA::TableWalker::DescriptorBase
lookupMisc	src/cpu/o3/rename_map.hh	/^    PhysRegIndex lookupMisc(RegIndex rel_arch_reg) const$/;"	f	class:UnifiedRenameMap
lookupSked	src/cpu/inorder/cpu.hh	/^    ThePipeline::RSkedPtr lookupSked(DynInstPtr inst)$/;"	f	class:InOrderCPU
lookupTable	src/arch/alpha/tlb.hh	/^    PageTable lookupTable;  \/\/ Quick lookup into page table$/;"	m	class:AlphaISA::TLB
lookupTable	src/arch/mips/tlb.hh	/^    PageTable lookupTable;      \/\/ Quick lookup into page table$/;"	m	class:MipsISA::TLB
lookupTable	src/arch/power/tlb.hh	/^    PageTable lookupTable;      \/\/ Quick lookup into page table$/;"	m	class:PowerISA::TLB
lookupTable	src/arch/sparc/tlb.hh	/^    TlbMap lookupTable;;$/;"	m	class:SparcISA::TLB
lookupTraceForAddress	src/mem/ruby/profiler/AddressProfiler.cc	/^lookupTraceForAddress(const Address& addr, AddressMap& record_map)$/;"	f
lookup_dcookie	src/kern/linux/linux_syscalls.hh	/^    lookup_dcookie = 112,$/;"	e	enum:SystemCalls::__anon87
lookups	src/cpu/pred/bpred_unit.hh	/^    Stats::Scalar lookups;$/;"	m	class:BPredUnit
loopback	src/dev/Ethernet.py	/^    loopback = Param.Bool(True, "send packet back to the sending interface")$/;"	v	class:EtherBus
loopback	src/dev/etherbus.hh	/^    bool loopback;$/;"	m	class:EtherBus
lowAddr	src/mem/cache/blk.hh	/^        Addr lowAddr;      \/\/ low address of lock range$/;"	m	class:CacheBlk::Lock
lowBit	src/mem/ruby/system/SparseMemory.hh	/^    int lowBit;$/;"	m	struct:CurNextInfo
lowFromDouble	src/arch/arm/insts/vfp.hh	/^lowFromDouble(double val)$/;"	f	namespace:ArmISA
lower	src/arch/arm/isa.hh	/^            uint32_t lower;$/;"	m	struct:ArmISA::ISA::MiscRegLUTEntry
lower	src/dev/x86/intdev.hh	/^    lower()$/;"	f	class:X86ISA::IntSourcePin
lowerEL32Offset	src/arch/arm/faults.hh	/^        const uint16_t lowerEL32Offset;$/;"	m	struct:ArmISA::ArmFault::FaultVals
lowerEL64Offset	src/arch/arm/faults.hh	/^        const uint16_t lowerEL64Offset;$/;"	m	struct:ArmISA::ArmFault::FaultVals
lowerInterruptPin	src/dev/x86/i82094aa.cc	/^X86ISA::I82094AA::lowerInterruptPin(int number)$/;"	f	class:X86ISA::I82094AA
lowerInterruptPin	src/dev/x86/i8259.cc	/^X86ISA::I8259::lowerInterruptPin(int number)$/;"	f	class:X86ISA::I8259
lowerInterruptPin	src/dev/x86/intdev.hh	/^    lowerInterruptPin(int number)$/;"	f	class:X86ISA::IntDevice
lowestPriorityOffset	src/dev/x86/i82094aa.hh	/^    uint64_t lowestPriorityOffset;$/;"	m	class:X86ISA::I82094AA
lpa	src/arch/mips/pra_constants.hh	/^    Bitfield<7>  lpa;$/;"	m	namespace:MipsISA
lpae	src/arch/arm/miscregs.hh	/^        Bitfield<11>     lpae;$/;"	m	namespace:ArmISA
lpae	src/arch/arm/miscregs.hh	/^        Bitfield<9> lpae;$/;"	m	namespace:ArmISA
lpp	src/dev/arm/pl111.hh	/^        Bitfield<9,0> lpp;$/;"	m	class:Pl111
lqEmpty	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::lqEmpty() const$/;"	f	class:LSQ
lqEmpty	src/cpu/o3/lsq_unit.hh	/^    bool lqEmpty() const { return loads == 0; }$/;"	f	class:LSQUnit
lqFull	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::lqFull()$/;"	f	class:LSQ
lqFull	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::lqFull(ThreadID tid)$/;"	f	class:LSQ
lqFull	src/cpu/o3/lsq_unit.hh	/^    bool lqFull() { return loads >= (LQEntries - 1); }$/;"	f	class:LSQUnit
lqFull	src/cpu/ozone/lsq_unit.hh	/^    bool lqFull() { return loads >= (LQEntries - 1); }$/;"	f	class:OzoneLSQ
lqFull	src/cpu/ozone/lw_lsq.hh	/^    bool lqFull() { return loads >= (LQEntries - 1); }$/;"	f	class:OzoneLWLSQ
lqIdx	src/cpu/base_dyn_inst.hh	/^    int16_t lqIdx;$/;"	m	class:BaseDynInst
lqIdx	src/cpu/inorder/inorder_dyn_inst.hh	/^    int16_t lqIdx;$/;"	m	class:InOrderDynInst
lqIdx	src/cpu/ozone/cpu.hh	/^        unsigned lqIdx;$/;"	m	struct:OzoneCPU::CommStruct
lqIt	src/cpu/ozone/lw_lsq.hh	/^        typename std::list<DynInstPtr>::iterator lqIt;$/;"	m	struct:OzoneLWLSQ::SQEntry
lrPending	src/dev/arm/vgic.hh	/^    unsigned int lrPending(struct vcpuIntData *vid)$/;"	f	class:VGic
lrValid	src/dev/arm/vgic.hh	/^    unsigned int lrValid(struct vcpuIntData *vid)$/;"	f	class:VGic
lremovexattr	src/kern/linux/linux_syscalls.hh	/^    lremovexattr = 113,$/;"	e	enum:SystemCalls::__anon87
lruSeq	src/arch/x86/pagetable.hh	/^        uint64_t lruSeq;$/;"	m	struct:X86ISA::TlbEntry
lruSeq	src/arch/x86/tlb.hh	/^        uint64_t lruSeq;$/;"	m	class:X86ISA::TLB
lseek	src/kern/linux/linux_syscalls.hh	/^    lseek = 114,$/;"	e	enum:SystemCalls::__anon87
lseek	src/kern/tru64/tru64_syscalls.hh	/^        lseek = 19,$/;"	e	enum:SystemCalls::__anon102
lseekFunc	src/sim/syscall_emul.cc	/^lseekFunc(SyscallDesc *desc, int num, LiveProcess *p, ThreadContext *tc)$/;"	f
lsetxattr	src/kern/linux/linux_syscalls.hh	/^    lsetxattr = 115,$/;"	e	enum:SystemCalls::__anon87
lsl128	src/arch/arm/insts/fplib.cc	/^lsl128(uint64_t *r0, uint64_t *r1, uint64_t x0, uint64_t x1, uint32_t shift)$/;"	f	namespace:ArmISA
lsl16	src/arch/arm/insts/fplib.cc	/^lsl16(uint16_t x, uint32_t shift)$/;"	f	namespace:ArmISA
lsl32	src/arch/arm/insts/fplib.cc	/^lsl32(uint32_t x, uint32_t shift)$/;"	f	namespace:ArmISA
lsl64	src/arch/arm/insts/fplib.cc	/^lsl64(uint64_t x, uint32_t shift)$/;"	f	namespace:ArmISA
lsnm	src/arch/mips/dt_constants.hh	/^    Bitfield<28>     lsnm;$/;"	m	namespace:MipsISA
lsq	src/cpu/o3/cpu.hh	/^        LSQ<Impl> *lsq;$/;"	m	class:FullO3CPU::DcachePort
lsq	src/cpu/o3/lsq_unit.hh	/^    LSQ *lsq;$/;"	m	class:LSQUnit
lsq	src/cpu/ozone/lw_lsq.hh	/^        OzoneLWLSQ *lsq;$/;"	m	class:OzoneLWLSQ::DcachePort
lsqBlockedLoads	src/cpu/o3/lsq_unit.hh	/^    Stats::Scalar lsqBlockedLoads;$/;"	m	class:LSQUnit
lsqBlockedLoads	src/cpu/ozone/lw_back_end.hh	/^    Stats::Vector lsqBlockedLoads;$/;"	m	class:LWBackEnd
lsqCacheBlocked	src/cpu/o3/lsq_unit.hh	/^    Stats::Scalar lsqCacheBlocked;$/;"	m	class:LSQUnit
lsqCount	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::lsqCount()$/;"	f	class:DefaultFetch
lsqEntries	src/cpu/o3/rename.hh	/^        unsigned lsqEntries;$/;"	m	struct:DefaultRename::FreeEntries
lsqForwLoads	src/cpu/o3/lsq_unit.hh	/^    Stats::Scalar lsqForwLoads;$/;"	m	class:LSQUnit
lsqForwLoads	src/cpu/ozone/lw_back_end.hh	/^    Stats::Vector lsqForwLoads;$/;"	m	class:LWBackEnd
lsqID	src/cpu/o3/lsq_unit.hh	/^    ThreadID lsqID;$/;"	m	class:LSQUnit
lsqID	src/cpu/ozone/lsq_unit.hh	/^    unsigned lsqID;$/;"	m	class:OzoneLSQ
lsqID	src/cpu/ozone/lw_lsq.hh	/^    unsigned lsqID;$/;"	m	class:OzoneLWLSQ
lsqIgnoredResponses	src/cpu/o3/lsq_unit.hh	/^    Stats::Scalar lsqIgnoredResponses;$/;"	m	class:LSQUnit
lsqInversion	src/cpu/ozone/back_end.hh	/^    Stats::Scalar lsqInversion;$/;"	m	class:BackEnd
lsqInversion	src/cpu/ozone/lw_back_end.hh	/^    Stats::Scalar lsqInversion;$/;"	m	class:LWBackEnd
lsqLimits	src/cpu/ozone/OzoneCPU.py	/^    lsqLimits = Param.Bool(True, "LSQ size limits dispatch")$/;"	v	class:DerivOzoneCPU
lsqLimits	src/cpu/ozone/lw_back_end.hh	/^    bool lsqLimits;$/;"	m	class:LWBackEnd
lsqLimits	src/cpu/ozone/simple_params.hh	/^    bool lsqLimits;$/;"	m	class:SimpleParams
lsqMemOrderViolation	src/cpu/o3/lsq_unit.hh	/^    Stats::Scalar lsqMemOrderViolation;$/;"	m	class:LSQUnit
lsqMemOrderViolation	src/cpu/ozone/lw_lsq.hh	/^    Stats::Scalar lsqMemOrderViolation;$/;"	m	class:OzoneLWLSQ
lsqPolicy	src/cpu/o3/lsq.hh	/^    LSQPolicy lsqPolicy;$/;"	m	class:LSQ
lsqPtr	src/cpu/o3/lsq_unit.hh	/^        LSQUnit<Impl> *lsqPtr;$/;"	m	class:LSQUnit::WritebackEvent
lsqPtr	src/cpu/ozone/lsq_unit.hh	/^        OzoneLSQ<Impl> *lsqPtr;$/;"	m	class:OzoneLSQ::StoreCompletionEvent
lsqPtr	src/cpu/ozone/lw_lsq.hh	/^        OzoneLWLSQ<Impl> *lsqPtr;$/;"	m	class:OzoneLWLSQ::WritebackEvent
lsqRescheduledLoads	src/cpu/o3/lsq_unit.hh	/^    Stats::Scalar lsqRescheduledLoads;$/;"	m	class:LSQUnit
lsqSquashedLoads	src/cpu/o3/lsq_unit.hh	/^    Stats::Scalar lsqSquashedLoads;$/;"	m	class:LSQUnit
lsqSquashedStores	src/cpu/o3/lsq_unit.hh	/^    Stats::Scalar lsqSquashedStores;$/;"	m	class:LSQUnit
lsq_blocked_loads	src/cpu/ozone/back_end.hh	/^    Stats::Vector lsq_blocked_loads;$/;"	m	class:BackEnd
lsq_forw_loads	src/cpu/ozone/back_end.hh	/^    Stats::Vector lsq_forw_loads;$/;"	m	class:BackEnd
lsr128	src/arch/arm/insts/fplib.cc	/^lsr128(uint64_t *r0, uint64_t *r1, uint64_t x0, uint64_t x1, uint32_t shift)$/;"	f	namespace:ArmISA
lsr16	src/arch/arm/insts/fplib.cc	/^lsr16(uint16_t x, uint32_t shift)$/;"	f	namespace:ArmISA
lsr32	src/arch/arm/insts/fplib.cc	/^lsr32(uint32_t x, uint32_t shift)$/;"	f	namespace:ArmISA
lsr64	src/arch/arm/insts/fplib.cc	/^lsr64(uint64_t x, uint32_t shift)$/;"	f	namespace:ArmISA
lstat	src/kern/linux/linux_syscalls.hh	/^    lstat = 116,$/;"	e	enum:SystemCalls::__anon87
lstat	src/kern/tru64/tru64_syscalls.hh	/^        lstat = 225,$/;"	e	enum:SystemCalls::__anon102
lstat64	src/kern/linux/linux_syscalls.hh	/^    lstat64 = 117,$/;"	e	enum:SystemCalls::__anon87
lstat64Func	src/sim/syscall_emul.hh	/^lstat64Func(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
lstatFunc	src/sim/syscall_emul.hh	/^lstatFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
lsuCtrlReg	src/arch/sparc/isa.hh	/^    uint64_t lsuCtrlReg;$/;"	m	class:SparcISA::ISA
lt	src/arch/power/miscregs.hh	/^        Bitfield<31> lt;$/;"	m	namespace:PowerISA
ltcoproc	src/arch/arm/types.hh	/^        Bitfield<11, 8>  ltcoproc;$/;"	m	namespace:ArmISA
ltopcode11_8	src/arch/arm/types.hh	/^        Bitfield<11, 8>  ltopcode11_8;$/;"	m	namespace:ArmISA
ltopcode15	src/arch/arm/types.hh	/^        Bitfield<15>     ltopcode15;$/;"	m	namespace:ArmISA
ltopcode4	src/arch/arm/types.hh	/^        Bitfield<4>      ltopcode4;$/;"	m	namespace:ArmISA
ltopcode7_4	src/arch/arm/types.hh	/^        Bitfield<7,  4>  ltopcode7_4;$/;"	m	namespace:ArmISA
ltopcode7_6	src/arch/arm/types.hh	/^        Bitfield<7,  6>  ltopcode7_6;$/;"	m	namespace:ArmISA
ltrd	src/arch/arm/types.hh	/^        Bitfield<11, 8>  ltrd;$/;"	m	namespace:ArmISA
ltrme	src/dev/pcireg.h	/^        Bitfield<10>    ltrme;$/;"	m	struct:PXCAP
ltrs	src/dev/pcireg.h	/^        Bitfield<11>    ltrs;$/;"	m	struct:PXCAP
ltseqnum	src/cpu/o3/store_set.hh	/^struct ltseqnum {$/;"	s
lw_syscall	src/kern/tru64/tru64_syscalls.hh	/^        lw_syscall = 68,$/;"	e	enum:SystemCalls::__anon103
lw_unwire	src/kern/tru64/tru64_syscalls.hh	/^        lw_unwire = 31,$/;"	e	enum:SystemCalls::__anon103
lw_wire	src/kern/tru64/tru64_syscalls.hh	/^        lw_wire = 30,$/;"	e	enum:SystemCalls::__anon103
m	src/arch/arm/miscregs.hh	/^        Bitfield<0>    m;       \/\/ MMU enable$/;"	m	namespace:ArmISA
m	src/arch/mips/mt_constants.hh	/^    Bitfield<31>     m;$/;"	m	namespace:MipsISA
m	src/arch/mips/pra_constants.hh	/^    Bitfield<31>     m;$/;"	m	namespace:MipsISA
m	src/arch/mips/pra_constants.hh	/^    Bitfield<31>    m;$/;"	m	namespace:MipsISA
m	src/arch/mips/pra_constants.hh	/^    Bitfield<31> m;$/;"	m	namespace:MipsISA
m5	src/base/hashmap.hh	/^namespace m5 {$/;"	n
m5	src/base/stl_helpers.hh	/^namespace m5 {$/;"	n
m5	src/python/m5/SimObject.py	/^import m5$/;"	i
m5	src/python/m5/event.py	/^import m5$/;"	i
m5	src/python/m5/main.py	/^    import m5$/;"	i
m5	src/python/m5/stats/__init__.py	/^import m5$/;"	i
m5	src/python/m5/util/dot_writer.py	/^import m5, os, re$/;"	i
m5	src/python/m5/util/jobfile.py	/^        import m5.util$/;"	i
m5	src/unittest/stattestmain.py	/^    import m5.stats$/;"	i
m565rgb8888	src/base/vnc/convert.cc	/^VideoConvert::m565rgb8888(const uint8_t *fb, bool bgr) const$/;"	f	class:VideoConvert
m5Func	src/arch/arm/types.hh	/^        Bitfield<15,  8>  m5Func;$/;"	m	namespace:ArmISA
m5Main	src/sim/init.cc	/^m5Main(int argc, char **argv)$/;"	f
m5MainCommands	src/sim/init.cc	/^const char * __attribute__((weak)) m5MainCommands[] = {$/;"	v
m5MainCommands	src/unittest/stattest.cc	/^const char *m5MainCommands[] = {$/;"	v
m5_build_env	src/unittest/genini.py	/^m5_build_env = {}$/;"	v
m5_cond_broadcastFunc	src/kern/tru64/tru64.hh	/^    m5_cond_broadcastFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	class:Tru64
m5_cond_signalFunc	src/kern/tru64/tru64.hh	/^    m5_cond_signalFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	class:Tru64
m5_cond_waitFunc	src/kern/tru64/tru64.hh	/^    m5_cond_waitFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	class:Tru64
m5_fegetround	src/base/fenv.c	/^int m5_fegetround()$/;"	f
m5_fegetround	src/base/fenv.hh	/^inline int m5_fegetround() {return 0; }$/;"	f
m5_fesetround	src/base/fenv.c	/^void m5_fesetround(int rm)$/;"	f
m5_fesetround	src/base/fenv.hh	/^inline void m5_fesetround(int rm) { ; }$/;"	f
m5_lock_mutex	src/kern/tru64/tru64.hh	/^    m5_lock_mutex(Addr uaddr, LiveProcess *process, ThreadContext *tc)$/;"	f	class:Tru64
m5_mutex_lockFunc	src/kern/tru64/tru64.hh	/^    m5_mutex_lockFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	class:Tru64
m5_mutex_trylockFunc	src/kern/tru64/tru64.hh	/^    m5_mutex_trylockFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	class:Tru64
m5_mutex_unlockFunc	src/kern/tru64/tru64.hh	/^    m5_mutex_unlockFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	class:Tru64
m5_round_ops	src/base/fenv.c	/^static const int m5_round_ops[] =  {FE_DOWNWARD, FE_TONEAREST, FE_TOWARDZERO, FE_UPWARD};$/;"	v	file:
m5_thread_exitFunc	src/kern/tru64/tru64.hh	/^    m5_thread_exitFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	class:Tru64
m5_twin32_t	src/base/bigint.hh	/^    m5_twin32_t()$/;"	f	struct:m5_twin32_t
m5_twin32_t	src/base/bigint.hh	/^    m5_twin32_t(const uint32_t x)$/;"	f	struct:m5_twin32_t
m5_twin32_t	src/base/bigint.hh	/^struct m5_twin32_t {$/;"	s
m5_twin64_t	src/base/bigint.hh	/^    m5_twin64_t()$/;"	f	struct:m5_twin64_t
m5_twin64_t	src/base/bigint.hh	/^    m5_twin64_t(const uint64_t x)$/;"	f	struct:m5_twin64_t
m5_twin64_t	src/base/bigint.hh	/^struct m5_twin64_t {$/;"	s
m5_unlock_mutex	src/kern/tru64/tru64.hh	/^    m5_unlock_mutex(Addr uaddr, LiveProcess *process, ThreadContext *tc)$/;"	f	class:Tru64
m5checkpoint	src/sim/pseudo_inst.cc	/^m5checkpoint(ThreadContext *tc, Tick delay, Tick period)$/;"	f	namespace:PseudoInst
m5exit	src/sim/pseudo_inst.cc	/^m5exit(ThreadContext *tc, Tick delay)$/;"	f	namespace:PseudoInst
m5fail	src/sim/pseudo_inst.cc	/^m5fail(ThreadContext *tc, Tick delay, uint64_t code)$/;"	f	namespace:PseudoInst
mState	src/arch/arm/nativetrace.hh	/^    ThreadState nState, mState;$/;"	m	class:Trace::ArmNativeTrace
mState	src/arch/x86/nativetrace.hh	/^    ThreadState mState;$/;"	m	class:Trace::X86NativeTrace
m_AccessMode	src/mem/ruby/slicc_interface/RubyRequest.hh	/^    RubyAccessMode m_AccessMode;$/;"	m	class:RubyRequest
m_Address	src/mem/ruby/slicc_interface/AbstractCacheEntry.hh	/^    Address m_Address; \/\/ Address of this block, required by CacheMemory$/;"	m	class:AbstractCacheEntry
m_AreaAND	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_AreaAND;$/;"	m	class:TechParameter
m_AreaDFF	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_AreaDFF;$/;"	m	class:TechParameter
m_AreaINV	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_AreaINV;$/;"	m	class:TechParameter
m_AreaMUX2	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_AreaMUX2;$/;"	m	class:TechParameter
m_AreaMUX3	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_AreaMUX3;$/;"	m	class:TechParameter
m_AreaMUX4	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_AreaMUX4;$/;"	m	class:TechParameter
m_AreaNOR	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_AreaNOR;$/;"	m	class:TechParameter
m_BitHeight	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_BitHeight;$/;"	m	class:TechParameter
m_BitWidth	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_BitWidth;$/;"	m	class:TechParameter
m_BitlineSpacing	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_BitlineSpacing;$/;"	m	class:TechParameter
m_BufferDriveResistance	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_BufferDriveResistance;$/;"	m	class:TechParameter
m_BufferInputCapacitance	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_BufferInputCapacitance;$/;"	m	class:TechParameter
m_BufferIntrinsicDelay	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_BufferIntrinsicDelay;$/;"	m	class:TechParameter
m_BufferNMOSOffCurrent	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_BufferNMOSOffCurrent;$/;"	m	class:TechParameter
m_BufferPMOSOffCurrent	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_BufferPMOSOffCurrent;$/;"	m	class:TechParameter
m_CC2M2metal	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_CC2M2metal;$/;"	m	class:TechParameter
m_CC2M3metal	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_CC2M3metal;$/;"	m	class:TechParameter
m_CC2metal	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_CC2metal;$/;"	m	class:TechParameter
m_CC3M2metal	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_CC3M2metal;$/;"	m	class:TechParameter
m_CC3M3metal	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_CC3M3metal;$/;"	m	class:TechParameter
m_CC3metal	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_CC3metal;$/;"	m	class:TechParameter
m_CCM2metal	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_CCM2metal;$/;"	m	class:TechParameter
m_CCM3metal	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_CCM3metal;$/;"	m	class:TechParameter
m_CCmetal	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_CCmetal;$/;"	m	class:TechParameter
m_CM2metal	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_CM2metal;$/;"	m	class:TechParameter
m_CM3metal	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_CM3metal;$/;"	m	class:TechParameter
m_CamCellHeight	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_CamCellHeight;\/*derived from Cacti 5.3 *\/ $/;"	m	class:TechParameter
m_CamCellWidth	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_CamCellWidth;\/*derived from Cacti 5.3 *\/ $/;"	m	class:TechParameter
m_Cbitmetal	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Cbitmetal;$/;"	m	class:TechParameter
m_Cgate	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Cgate;$/;"	m	class:TechParameter
m_Cgatepass	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Cgatepass;$/;"	m	class:TechParameter
m_ClockCap	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_ClockCap;$/;"	m	class:TechParameter
m_Clockwire	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Clockwire;$/;"	m	class:TechParameter
m_Cmetal	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Cmetal;$/;"	m	class:TechParameter
m_Cndiffarea	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Cndiffarea;$/;"	m	class:TechParameter
m_Cndiffovlp	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Cndiffovlp;$/;"	m	class:TechParameter
m_Cndiffside	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Cndiffside;$/;"	m	class:TechParameter
m_Cnoverlap	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Cnoverlap;$/;"	m	class:TechParameter
m_Cnoxideovlp	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Cnoxideovlp;$/;"	m	class:TechParameter
m_Cout	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Cout;$/;"	m	class:TechParameter
m_Cpdiffarea	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Cpdiffarea;$/;"	m	class:TechParameter
m_Cpdiffovlp	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Cpdiffovlp;$/;"	m	class:TechParameter
m_Cpdiffside	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Cpdiffside;$/;"	m	class:TechParameter
m_Cpolywire	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Cpolywire;$/;"	m	class:TechParameter
m_Cpoverlap	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Cpoverlap;$/;"	m	class:TechParameter
m_Cpoxideovlp	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Cpoxideovlp;$/;"	m	class:TechParameter
m_CrsbarCellHeight	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_CrsbarCellHeight;$/;"	m	class:TechParameter
m_CrsbarCellWidth	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_CrsbarCellWidth;$/;"	m	class:TechParameter
m_Cwordmetal	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Cwordmetal;$/;"	m	class:TechParameter
m_DFF_TAB	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_DFF_TAB[1];$/;"	m	class:TechParameter
m_DelayedTicks	src/mem/ruby/slicc_interface/Message.hh	/^    Tick m_DelayedTicks; \/\/ my delayed cycles$/;"	m	class:Message
m_EnergyFactor	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_EnergyFactor;$/;"	m	class:TechParameter
m_FirstResponseToCompletionDelayHist	src/mem/ruby/profiler/Profiler.hh	/^    std::vector<Stats::Histogram *> m_FirstResponseToCompletionDelayHist;$/;"	m	class:Profiler
m_FirstResponseToCompletionDelayHist	src/mem/ruby/system/Sequencer.hh	/^    std::vector<Stats::Histogram *> m_FirstResponseToCompletionDelayHist;$/;"	m	class:Sequencer
m_ForwardToFirstResponseDelayHist	src/mem/ruby/profiler/Profiler.hh	/^    std::vector<Stats::Histogram *> m_ForwardToFirstResponseDelayHist;$/;"	m	class:Profiler
m_ForwardToFirstResponseDelayHist	src/mem/ruby/system/Sequencer.hh	/^    std::vector<Stats::Histogram *> m_ForwardToFirstResponseDelayHist;$/;"	m	class:Sequencer
m_IncompleteTimes	src/mem/ruby/profiler/Profiler.hh	/^    Stats::Scalar m_IncompleteTimes[MachineType_NUM];$/;"	m	class:Profiler
m_IncompleteTimes	src/mem/ruby/system/Sequencer.hh	/^    std::vector<Stats::Counter> m_IncompleteTimes;$/;"	m	class:Sequencer
m_InitialToForwardDelayHist	src/mem/ruby/profiler/Profiler.hh	/^    std::vector<Stats::Histogram *> m_InitialToForwardDelayHist;$/;"	m	class:Profiler
m_InitialToForwardDelayHist	src/mem/ruby/system/Sequencer.hh	/^    std::vector<Stats::Histogram *> m_InitialToForwardDelayHist;$/;"	m	class:Sequencer
m_IssueToInitialDelayHist	src/mem/ruby/profiler/Profiler.hh	/^    std::vector<Stats::Histogram *> m_IssueToInitialDelayHist;$/;"	m	class:Profiler
m_IssueToInitialDelayHist	src/mem/ruby/system/Sequencer.hh	/^    std::vector<Stats::Histogram *> m_IssueToInitialDelayHist;$/;"	m	class:Sequencer
m_LSCALE	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_LSCALE;$/;"	m	class:TechParameter
m_Lamda	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Lamda;$/;"	m	class:TechParameter
m_LastEnqueueTime	src/mem/ruby/slicc_interface/Message.hh	/^    Tick m_LastEnqueueTime; \/\/ my last enqueue time$/;"	m	class:Message
m_Leff	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Leff;$/;"	m	class:TechParameter
m_LineAddress	src/mem/ruby/slicc_interface/RubyRequest.hh	/^    Address m_LineAddress;$/;"	m	class:RubyRequest
m_MSCALE	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_MSCALE;$/;"	m	class:TechParameter
m_MatchlineSpacing	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_MatchlineSpacing;$/;"	m	class:TechParameter
m_NAND2_TAB	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_NAND2_TAB[4];$/;"	m	class:TechParameter
m_NMOS_TAB	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_NMOS_TAB[1];$/;"	m	class:TechParameter
m_NOR2_TAB	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_NOR2_TAB[4];$/;"	m	class:TechParameter
m_PMOS_TAB	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_PMOS_TAB[1];$/;"	m	class:TechParameter
m_Permission	src/mem/ruby/slicc_interface/AbstractEntry.hh	/^    AccessPermission m_Permission; \/\/ Access permission for this$/;"	m	class:AbstractEntry
m_PhysicalAddress	src/mem/ruby/slicc_interface/RubyRequest.hh	/^    Address m_PhysicalAddress;$/;"	m	class:RubyRequest
m_Prefetch	src/mem/ruby/slicc_interface/RubyRequest.hh	/^    PrefetchBit m_Prefetch;$/;"	m	class:RubyRequest
m_ProgramCounter	src/mem/ruby/slicc_interface/RubyRequest.hh	/^    Address m_ProgramCounter;$/;"	m	class:RubyRequest
m_Rbitmetal	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Rbitmetal;$/;"	m	class:TechParameter
m_RegCellHeight	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_RegCellHeight;$/;"	m	class:TechParameter
m_RegCellWidth	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_RegCellWidth;$/;"	m	class:TechParameter
m_Resout	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Resout;$/;"	m	class:TechParameter
m_Reswire	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Reswire;$/;"	m	class:TechParameter
m_Rnchannelon	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Rnchannelon;$/;"	m	class:TechParameter
m_Rnchannelstatic	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Rnchannelstatic;$/;"	m	class:TechParameter
m_Rpchannelon	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Rpchannelon;$/;"	m	class:TechParameter
m_Rpchannelstatic	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Rpchannelstatic;$/;"	m	class:TechParameter
m_Rwordmetal	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Rwordmetal;$/;"	m	class:TechParameter
m_SCALE_BW	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_SCALE_BW;$/;"	m	class:TechParameter
m_SCALE_Crs	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_SCALE_Crs;$/;"	m	class:TechParameter
m_SCALE_H	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_SCALE_H;$/;"	m	class:TechParameter
m_SCALE_M	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_SCALE_M;$/;"	m	class:TechParameter
m_SCALE_S	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_SCALE_S;$/;"	m	class:TechParameter
m_SCALE_T	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_SCALE_T;$/;"	m	class:TechParameter
m_SCALE_W	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_SCALE_W;$/;"	m	class:TechParameter
m_SenseEnergyFactor	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_SenseEnergyFactor;$/;"	m	class:TechParameter
m_SenseEnergyFactor2	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_SenseEnergyFactor2;$/;"	m	class:TechParameter
m_SenseEnergyFactor3	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_SenseEnergyFactor3;$/;"	m	class:TechParameter
m_Size	src/mem/ruby/slicc_interface/RubyRequest.hh	/^    int m_Size;$/;"	m	class:RubyRequest
m_TaglineSpacing	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_TaglineSpacing;$/;"	m	class:TechParameter
m_Type	src/mem/ruby/slicc_interface/RubyRequest.hh	/^    RubyRequestType m_Type;$/;"	m	class:RubyRequest
m_Vbitpre	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Vbitpre;$/;"	m	class:TechParameter
m_Vbitsense	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Vbitsense;$/;"	m	class:TechParameter
m_Vt	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Vt;$/;"	m	class:TechParameter
m_WSelEnn	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_WSelEnn;$/;"	m	class:TechParameter
m_WSelEnp	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_WSelEnp;$/;"	m	class:TechParameter
m_WSelORn	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_WSelORn;$/;"	m	class:TechParameter
m_WSelORprequ	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_WSelORprequ;$/;"	m	class:TechParameter
m_WSelPn	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_WSelPn;$/;"	m	class:TechParameter
m_WSelPp	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_WSelPp;$/;"	m	class:TechParameter
m_Wbitmuxn	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wbitmuxn;$/;"	m	class:TechParameter
m_Wbitpreequ	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wbitpreequ;$/;"	m	class:TechParameter
m_Wbusdrvn	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wbusdrvn;$/;"	m	class:TechParameter
m_Wbusdrvp	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wbusdrvp;$/;"	m	class:TechParameter
m_Wcomparen1	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wcomparen1;$/;"	m	class:TechParameter
m_Wcomparen2	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wcomparen2;$/;"	m	class:TechParameter
m_Wcompcellpd2	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wcompcellpd2;$/;"	m	class:TechParameter
m_Wcompdrivern	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wcompdrivern;$/;"	m	class:TechParameter
m_Wcompdriverp	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wcompdriverp;$/;"	m	class:TechParameter
m_Wcompinvn1	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wcompinvn1;$/;"	m	class:TechParameter
m_Wcompinvn2	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wcompinvn2;$/;"	m	class:TechParameter
m_Wcompinvn3	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wcompinvn3;$/;"	m	class:TechParameter
m_Wcompinvp1	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wcompinvp1;$/;"	m	class:TechParameter
m_Wcompinvp2	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wcompinvp2;$/;"	m	class:TechParameter
m_Wcompinvp3	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wcompinvp3;$/;"	m	class:TechParameter
m_Wcompn	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wcompn;$/;"	m	class:TechParameter
m_Wcompp	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wcompp;$/;"	m	class:TechParameter
m_Wcomppreequ	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wcomppreequ;$/;"	m	class:TechParameter
m_Wdec3to8n	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wdec3to8n;$/;"	m	class:TechParameter
m_Wdec3to8p	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wdec3to8p;$/;"	m	class:TechParameter
m_WdecNORn	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_WdecNORn;$/;"	m	class:TechParameter
m_WdecNORp	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_WdecNORp;$/;"	m	class:TechParameter
m_Wdecdriven	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wdecdriven;$/;"	m	class:TechParameter
m_Wdecdrivep	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wdecdrivep;$/;"	m	class:TechParameter
m_Wdecinvn	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wdecinvn;$/;"	m	class:TechParameter
m_Wdecinvp	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wdecinvp;$/;"	m	class:TechParameter
m_Wdff	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wdff;$/;"	m	class:TechParameter
m_Wevalinvn	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wevalinvn;$/;"	m	class:TechParameter
m_Wevalinvp	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wevalinvp;$/;"	m	class:TechParameter
m_WireBarrierThickness	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_WireBarrierThickness;$/;"	m	class:TechParameter
m_WireDielectricConstant	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_WireDielectricConstant;$/;"	m	class:TechParameter
m_WireDielectricThickness	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_WireDielectricThickness;$/;"	m	class:TechParameter
m_WireMetalThickness	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_WireMetalThickness;$/;"	m	class:TechParameter
m_WireMinSpacing	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_WireMinSpacing;$/;"	m	class:TechParameter
m_WireMinWidth	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_WireMinWidth;$/;"	m	class:TechParameter
m_Wmatchinvn	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wmatchinvn;$/;"	m	class:TechParameter
m_Wmatchinvp	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wmatchinvp;$/;"	m	class:TechParameter
m_Wmatchnandn	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wmatchnandn;$/;"	m	class:TechParameter
m_Wmatchnandp	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wmatchnandp;$/;"	m	class:TechParameter
m_Wmatchnorn	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wmatchnorn;$/;"	m	class:TechParameter
m_Wmatchnorp	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wmatchnorp;$/;"	m	class:TechParameter
m_Wmatchpchg	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wmatchpchg;$/;"	m	class:TechParameter
m_Wmemcella	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wmemcella;$/;"	m	class:TechParameter
m_Wmemcellbscale	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wmemcellbscale;$/;"	m	class:TechParameter
m_Wmemcellr	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wmemcellr;$/;"	m	class:TechParameter
m_Wmemcellw	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wmemcellw;$/;"	m	class:TechParameter
m_Wmuxdrv12n	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wmuxdrv12n;$/;"	m	class:TechParameter
m_Wmuxdrv12p	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wmuxdrv12p;$/;"	m	class:TechParameter
m_Wmuxdrv3n	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wmuxdrv3n;$/;"	m	class:TechParameter
m_Wmuxdrv3p	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wmuxdrv3p;$/;"	m	class:TechParameter
m_WmuxdrvNANDn	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_WmuxdrvNANDn;$/;"	m	class:TechParameter
m_WmuxdrvNANDp	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_WmuxdrvNANDp;$/;"	m	class:TechParameter
m_WmuxdrvNORn	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_WmuxdrvNORn;$/;"	m	class:TechParameter
m_WmuxdrvNORp	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_WmuxdrvNORp;$/;"	m	class:TechParameter
m_WordlineSpacing	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_WordlineSpacing;$/;"	m	class:TechParameter
m_Woutdrivern	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Woutdrivern;$/;"	m	class:TechParameter
m_Woutdriverp	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Woutdriverp;$/;"	m	class:TechParameter
m_Woutdrvnandn	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Woutdrvnandn;$/;"	m	class:TechParameter
m_Woutdrvnandp	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Woutdrvnandp;$/;"	m	class:TechParameter
m_Woutdrvnorn	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Woutdrvnorn;$/;"	m	class:TechParameter
m_Woutdrvnorp	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Woutdrvnorp;$/;"	m	class:TechParameter
m_Woutdrvseln	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Woutdrvseln;$/;"	m	class:TechParameter
m_Woutdrvselp	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Woutdrvselp;$/;"	m	class:TechParameter
m_WsenseQ1to4	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_WsenseQ1to4;$/;"	m	class:TechParameter
m_Wsenseextdrv1n	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wsenseextdrv1n;$/;"	m	class:TechParameter
m_Wsenseextdrv1p	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wsenseextdrv1p;$/;"	m	class:TechParameter
m_Wsenseextdrv2n	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wsenseextdrv2n;$/;"	m	class:TechParameter
m_Wsenseextdrv2p	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wsenseextdrv2p;$/;"	m	class:TechParameter
m_Wworddrivemax	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_Wworddrivemax;$/;"	m	class:TechParameter
m_abs_cntrl_vec	src/mem/ruby/system/System.hh	/^    std::vector<AbstractController *> m_abs_cntrl_vec;$/;"	m	class:RubySystem
m_accessModeType	src/mem/ruby/system/CacheMemory.hh	/^    Stats::Vector m_accessModeType;$/;"	m	class:CacheMemory
m_access_mode	src/cpu/testers/rubytest/Check.hh	/^    RubyAccessMode m_access_mode;$/;"	m	class:Check
m_act	src/kern/tru64/mbuf.hh	/^#define m_act /;"	d
m_active_inv_node	src/cpu/testers/directedtest/InvalidateGenerator.hh	/^    uint32_t m_active_inv_node;$/;"	m	class:InvalidateGenerator
m_active_node	src/cpu/testers/directedtest/SeriesRequestGenerator.hh	/^    uint32_t m_active_node;$/;"	m	class:SeriesRequestGenerator
m_active_read_node	src/cpu/testers/directedtest/InvalidateGenerator.hh	/^    uint32_t m_active_read_node;$/;"	m	class:InvalidateGenerator
m_adaptive_routing	src/mem/ruby/network/simple/SimpleNetwork.hh	/^    bool m_adaptive_routing;    $/;"	m	class:SimpleNetwork
m_addr	src/mem/ruby/profiler/AccessTraceForAddress.hh	/^    Address m_addr;$/;"	m	class:AccessTraceForAddress
m_addr	src/mem/ruby/profiler/StoreTrace.hh	/^    Address m_addr;$/;"	m	class:StoreTrace
m_addr	src/mem/ruby/system/MemoryNode.hh	/^    physical_address_t m_addr;$/;"	m	class:MemoryNode
m_addr_increment_size	src/cpu/testers/directedtest/InvalidateGenerator.hh	/^    uint32_t m_addr_increment_size;$/;"	m	class:InvalidateGenerator
m_addr_increment_size	src/cpu/testers/directedtest/SeriesRequestGenerator.hh	/^    uint32_t m_addr_increment_size;$/;"	m	class:SeriesRequestGenerator
m_address	src/cpu/testers/directedtest/InvalidateGenerator.hh	/^    Addr m_address;$/;"	m	class:InvalidateGenerator
m_address	src/cpu/testers/directedtest/SeriesRequestGenerator.hh	/^    Addr m_address;$/;"	m	class:SeriesRequestGenerator
m_address	src/cpu/testers/rubytest/Check.hh	/^    Address m_address;$/;"	m	class:Check
m_address	src/mem/ruby/common/Address.hh	/^    physical_address_t m_address;$/;"	m	class:Address
m_address	src/mem/ruby/common/SubBlock.hh	/^    Address m_address;$/;"	m	class:SubBlock
m_address	src/mem/ruby/structures/Prefetcher.hh	/^        Address m_address;$/;"	m	class:PrefetchEntry
m_address_bits	src/mem/ruby/network/orion/TechParameter.hh	/^    uint32_t m_address_bits;$/;"	m	class:TechParameter
m_address_profiler_ptr	src/mem/ruby/profiler/Profiler.hh	/^    AddressProfiler* m_address_profiler_ptr;$/;"	m	class:Profiler
m_adds_per_level	src/mem/ruby/system/SparseMemory.hh	/^    Stats::Vector m_adds_per_level;$/;"	m	class:SparseMemory
m_af	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_af;$/;"	m	class:TechParameter
m_ageCounter	src/mem/ruby/system/RubyMemoryControl.hh	/^    int m_ageCounter;         \/\/ age of old requests; to detect starvation$/;"	m	class:RubyMemoryControl
m_all_instructions	src/mem/ruby/profiler/AddressProfiler.hh	/^    bool m_all_instructions;$/;"	m	class:AddressProfiler
m_all_instructions	src/mem/ruby/profiler/Profiler.hh	/^    bool m_all_instructions;$/;"	m	class:Profiler
m_alloc	src/mem/ruby/common/DataBlock.hh	/^    bool m_alloc;$/;"	m	class:DataBlock
m_amp_idsat	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_amp_idsat;$/;"	m	class:TechParameter
m_amp_model	src/mem/ruby/network/orion/Buffer/AmpUnit.hh	/^    AmpModel m_amp_model;$/;"	m	class:AmpUnit
m_amp_model_str	src/mem/ruby/network/orion/Buffer/SRAM.hh	/^    string m_amp_model_str;$/;"	m	class:SRAM
m_amp_unit_ptr	src/mem/ruby/network/orion/Buffer/SRAM.hh	/^    AmpUnit* m_amp_unit_ptr;$/;"	m	class:SRAM
m_arb_model	src/mem/ruby/network/orion/Allocator/Arbiter.hh	/^    ArbiterModel m_arb_model;$/;"	m	class:Arbiter
m_array	src/mem/ruby/structures/Prefetcher.hh	/^        std::vector<PrefetchEntry> m_array;$/;"	m	class:Prefetcher
m_assoc	src/mem/ruby/system/AbstractReplacementPolicy.hh	/^    unsigned m_assoc;          \/** set associativity *\/$/;"	m	class:AbstractReplacementPolicy
m_atomics	src/mem/ruby/profiler/AccessTraceForAddress.hh	/^    uint64 m_atomics;$/;"	m	class:AccessTraceForAddress
m_attr	src/kern/tru64/mbuf.hh	/^#define m_attr /;"	d
m_average_link_utilization	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.hh	/^    Stats::Scalar m_average_link_utilization;$/;"	m	class:GarnetNetwork_d
m_average_link_utilization	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.hh	/^    Stats::Scalar m_average_link_utilization;$/;"	m	class:GarnetNetwork
m_average_vc_load	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.hh	/^    Stats::Vector m_average_vc_load;$/;"	m	class:GarnetNetwork_d
m_average_vc_load	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.hh	/^    Stats::Vector m_average_vc_load;$/;"	m	class:GarnetNetwork
m_avg_latency	src/mem/ruby/network/garnet/BaseGarnetNetwork.hh	/^    Stats::Formula m_avg_latency;$/;"	m	class:BaseGarnetNetwork
m_avg_network_latency	src/mem/ruby/network/garnet/BaseGarnetNetwork.hh	/^    Stats::Formula m_avg_network_latency;$/;"	m	class:BaseGarnetNetwork
m_avg_queueing_latency	src/mem/ruby/network/garnet/BaseGarnetNetwork.hh	/^    Stats::Formula m_avg_queueing_latency;$/;"	m	class:BaseGarnetNetwork
m_avg_read	src/mem/ruby/network/orion/Buffer/Register.hh	/^    double m_avg_read;$/;"	m	class:Register
m_avg_utilization	src/mem/ruby/network/simple/Switch.hh	/^    Stats::Formula m_avg_utilization;$/;"	m	class:Switch
m_avg_vnet_latency	src/mem/ruby/network/garnet/BaseGarnetNetwork.hh	/^    Stats::Formula m_avg_vnet_latency;$/;"	m	class:BaseGarnetNetwork
m_avg_vqueue_latency	src/mem/ruby/network/garnet/BaseGarnetNetwork.hh	/^    Stats::Formula m_avg_vqueue_latency;$/;"	m	class:BaseGarnetNetwork
m_avg_write	src/mem/ruby/network/orion/Buffer/Register.hh	/^    double m_avg_write;$/;"	m	class:Register
m_bandwidth_factor	src/mem/ruby/network/BasicLink.hh	/^    int m_bandwidth_factor;$/;"	m	class:BasicLink
m_bankBusyCounter	src/mem/ruby/system/RubyMemoryControl.hh	/^    int* m_bankBusyCounter;$/;"	m	class:RubyMemoryControl
m_bankQueues	src/mem/ruby/system/RubyMemoryControl.hh	/^    std::list<MemoryNode *>* m_bankQueues;$/;"	m	class:RubyMemoryControl
m_bank_bit_0	src/mem/ruby/system/RubyMemoryControl.hh	/^    int m_bank_bit_0;$/;"	m	class:RubyMemoryControl
m_bank_busy_time	src/mem/ruby/system/RubyMemoryControl.hh	/^    int m_bank_busy_time;$/;"	m	class:RubyMemoryControl
m_bank_queue_size	src/mem/ruby/system/RubyMemoryControl.hh	/^    unsigned int m_bank_queue_size;$/;"	m	class:RubyMemoryControl
m_banks_per_rank	src/mem/ruby/profiler/MemCntrlProfiler.hh	/^    int m_banks_per_rank;$/;"	m	class:MemCntrlProfiler
m_banks_per_rank	src/mem/ruby/system/RubyMemoryControl.hh	/^    int m_banks_per_rank;$/;"	m	class:RubyMemoryControl
m_basic_bus_busy_time	src/mem/ruby/system/RubyMemoryControl.hh	/^    int m_basic_bus_busy_time;$/;"	m	class:RubyMemoryControl
m_binsize	src/mem/ruby/common/Histogram.hh	/^    int m_binsize;                \/\/ the size of each bucket$/;"	m	class:Histogram
m_bit_out	src/mem/ruby/network/orion/TechParameter.hh	/^    uint32_t m_bit_out;$/;"	m	class:TechParameter
m_bits	src/mem/ruby/common/NetDest.hh	/^    std::vector<Set> m_bits;  \/\/ a vector of bit vectors - i.e. Sets$/;"	m	class:NetDest
m_bl_len	src/mem/ruby/network/orion/Buffer/BitlineUnit.hh	/^    double m_bl_len;$/;"	m	class:BitlineUnit
m_bl_model	src/mem/ruby/network/orion/Buffer/BitlineUnit.hh	/^    BitlineModel m_bl_model;$/;"	m	class:BitlineUnit
m_bl_model_str	src/mem/ruby/network/orion/Buffer/SRAM.hh	/^    string m_bl_model_str;$/;"	m	class:SRAM
m_bl_pre_model_str	src/mem/ruby/network/orion/Buffer/SRAM.hh	/^    string m_bl_pre_model_str;$/;"	m	class:SRAM
m_bl_pre_unit_ptr	src/mem/ruby/network/orion/Buffer/SRAM.hh	/^    PrechargeUnit* m_bl_pre_unit_ptr;$/;"	m	class:SRAM
m_bl_unit_ptr	src/mem/ruby/network/orion/Buffer/SRAM.hh	/^    BitlineUnit* m_bl_unit_ptr;$/;"	m	class:SRAM
m_bl_wire_cap	src/mem/ruby/network/orion/Buffer/BitlineUnit.hh	/^    double m_bl_wire_cap;$/;"	m	class:BitlineUnit
m_block_map	src/mem/ruby/slicc_interface/AbstractController.hh	/^    std::map<Address, MessageBuffer*> m_block_map;$/;"	m	class:AbstractController
m_block_size_bits	src/mem/ruby/system/System.cc	/^uint32_t RubySystem::m_block_size_bits;$/;"	m	class:RubySystem	file:
m_block_size_bits	src/mem/ruby/system/System.hh	/^    static uint32_t m_block_size_bits;$/;"	m	class:RubySystem
m_block_size_bytes	src/mem/ruby/system/System.cc	/^uint32_t RubySystem::m_block_size_bytes;$/;"	m	class:RubySystem	file:
m_block_size_bytes	src/mem/ruby/system/System.hh	/^    static uint32_t m_block_size_bytes;$/;"	m	class:RubySystem
m_buf_scheme	src/mem/ruby/network/orion/Wire.hh	/^    BufferScheme m_buf_scheme;$/;"	m	class:Wire
m_buffer	src/mem/ruby/network/garnet/fixed-pipeline/flitBuffer_d.hh	/^    std::vector<flit_d *> m_buffer;$/;"	m	class:flitBuffer_d
m_buffer	src/mem/ruby/network/garnet/flexible-pipeline/flitBuffer.hh	/^    std::vector<flit *> m_buffer;$/;"	m	class:flitBuffer
m_buffer_model	src/mem/ruby/network/orion/Buffer/Buffer.hh	/^    BufferModel m_buffer_model;$/;"	m	class:Buffer
m_buffer_size	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.hh	/^    int m_buffer_size;$/;"	m	class:GarnetNetwork
m_buffer_size	src/mem/ruby/network/simple/SimpleNetwork.hh	/^    int m_buffer_size;$/;"	m	class:SimpleNetwork
m_buffer_size	src/mem/ruby/slicc_interface/AbstractController.hh	/^    unsigned int m_buffer_size;$/;"	m	class:AbstractController
m_buffers_per_ctrl_vc	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.hh	/^    int m_buffers_per_ctrl_vc;$/;"	m	class:GarnetNetwork_d
m_buffers_per_data_vc	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.hh	/^    int m_buffers_per_data_vc;$/;"	m	class:GarnetNetwork_d
m_buffers_to_free	src/mem/ruby/network/simple/SimpleNetwork.hh	/^    std::vector<MessageBuffer*> m_buffers_to_free;$/;"	m	class:SimpleNetwork
m_buffers_to_free	src/mem/ruby/network/simple/Switch.hh	/^    std::vector<MessageBuffer*> m_buffers_to_free;$/;"	m	class:Switch
m_busBusyCounter_Basic	src/mem/ruby/system/RubyMemoryControl.hh	/^    int m_busBusyCounter_Basic;$/;"	m	class:RubyMemoryControl
m_busBusyCounter_ReadNewRank	src/mem/ruby/system/RubyMemoryControl.hh	/^    int m_busBusyCounter_ReadNewRank;$/;"	m	class:RubyMemoryControl
m_busBusyCounter_Write	src/mem/ruby/system/RubyMemoryControl.hh	/^    int m_busBusyCounter_Write;$/;"	m	class:RubyMemoryControl
m_busBusy_WhichRank	src/mem/ruby/system/RubyMemoryControl.hh	/^    int m_busBusy_WhichRank;  \/\/ which rank last granted$/;"	m	class:RubyMemoryControl
m_bw_multiplier	src/mem/ruby/network/simple/SimpleLink.hh	/^    int m_bw_multiplier;$/;"	m	class:SimpleExtLink
m_bw_multiplier	src/mem/ruby/network/simple/SimpleLink.hh	/^    int m_bw_multiplier;$/;"	m	class:SimpleIntLink
m_bytes_read	src/mem/ruby/recorder/CacheRecorder.hh	/^    uint64_t m_bytes_read;$/;"	m	class:CacheRecorder
m_cache	src/mem/ruby/system/CacheMemory.hh	/^    std::vector<std::vector<AbstractCacheEntry*> > m_cache;$/;"	m	class:CacheMemory
m_cache_assoc	src/mem/ruby/system/CacheMemory.hh	/^    int m_cache_assoc;$/;"	m	class:CacheMemory
m_cache_num_set_bits	src/mem/ruby/system/CacheMemory.hh	/^    int m_cache_num_set_bits;$/;"	m	class:CacheMemory
m_cache_num_sets	src/mem/ruby/system/CacheMemory.hh	/^    int m_cache_num_sets;$/;"	m	class:CacheMemory
m_cache_recorder	src/mem/ruby/system/System.hh	/^    CacheRecorder* m_cache_recorder;$/;"	m	class:RubySystem
m_cache_size	src/mem/ruby/system/CacheMemory.hh	/^    int m_cache_size;$/;"	m	class:CacheMemory
m_cap_ctr_wire	src/mem/ruby/network/orion/Crossbar/Crossbar.hh	/^    double m_cap_ctr_wire;$/;"	m	class:Crossbar
m_cap_in_wire	src/mem/ruby/network/orion/Crossbar/Crossbar.hh	/^    double m_cap_in_wire;$/;"	m	class:Crossbar
m_cap_out_wire	src/mem/ruby/network/orion/Crossbar/Crossbar.hh	/^    double m_cap_out_wire;$/;"	m	class:Crossbar
m_checkTable_ptr	src/cpu/testers/rubytest/RubyTester.hh	/^    CheckTable* m_checkTable_ptr;$/;"	m	class:RubyTester
m_check_flush	src/cpu/testers/rubytest/RubyTester.hh	/^    bool m_check_flush;$/;"	m	class:RubyTester
m_check_vector	src/cpu/testers/rubytest/CheckTable.hh	/^    std::vector<Check*> m_check_vector;$/;"	m	class:CheckTable
m_checks_completed	src/cpu/testers/rubytest/RubyTester.hh	/^    uint64 m_checks_completed;$/;"	m	class:RubyTester
m_checks_to_complete	src/cpu/testers/rubytest/RubyTester.hh	/^    uint64 m_checks_to_complete;$/;"	m	class:RubyTester
m_clk_power	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.hh	/^    Stats::Scalar m_clk_power;$/;"	m	class:GarnetNetwork_d
m_clk_power	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    double m_clk_power;$/;"	m	class:Router_d
m_clk_ptr	src/mem/ruby/network/orion/OrionRouter.hh	/^    Clock* m_clk_ptr;$/;"	m	class:OrionRouter
m_clockobj_ptr	src/mem/ruby/system/TimerTable.hh	/^    ClockedObject* m_clockobj_ptr;$/;"	m	class:TimerTable
m_clusterID	src/mem/ruby/slicc_interface/AbstractController.hh	/^    NodeID m_clusterID;$/;"	m	class:AbstractController
m_cntrl_id	src/mem/ruby/recorder/CacheRecorder.hh	/^    int m_cntrl_id;$/;"	m	class:TraceRecord
m_component_inter_switches	src/mem/ruby/network/Topology.hh	/^    Matrix m_component_inter_switches;$/;"	m	class:Topology
m_component_latencies	src/mem/ruby/network/Topology.hh	/^    Matrix m_component_latencies;$/;"	m	class:Topology
m_conn_type	src/mem/ruby/network/orion/Crossbar/Crossbar.hh	/^    ConnectType m_conn_type;$/;"	m	class:Crossbar
m_consumer	src/mem/ruby/buffers/MessageBuffer.hh	/^    Consumer* m_consumer;$/;"	m	class:MessageBuffer
m_consumer_ptr	src/mem/ruby/common/Consumer.hh	/^          Consumer* m_consumer_ptr;$/;"	m	class:Consumer::ConsumerEvent
m_consumer_ptr	src/mem/ruby/system/RubyMemoryControl.hh	/^    Consumer* m_consumer_ptr;  \/\/ Consumer to signal a wakeup()$/;"	m	class:RubyMemoryControl
m_consumer_ptr	src/mem/ruby/system/TimerTable.hh	/^    Consumer* m_consumer_ptr;$/;"	m	class:TimerTable
m_consumer_ptr	src/mem/ruby/system/WireBuffer.hh	/^    Consumer* m_consumer_ptr;  \/\/ Consumer to signal a wakeup()$/;"	m	class:WireBuffer
m_contextId	src/mem/ruby/slicc_interface/RubyRequest.hh	/^    unsigned m_contextId;$/;"	m	class:RubyRequest
m_control_msg_size	src/mem/ruby/network/Network.cc	/^uint32_t Network::m_control_msg_size;$/;"	m	class:Network	file:
m_control_msg_size	src/mem/ruby/network/Network.hh	/^    static uint32_t m_control_msg_size;$/;"	m	class:Network
m_controller	src/mem/ruby/structures/Prefetcher.hh	/^        AbstractController *m_controller;$/;"	m	class:Prefetcher
m_controller	src/mem/ruby/system/RubyPort.hh	/^    AbstractController* m_controller;$/;"	m	class:RubyPort
m_cooldown_enabled	src/mem/ruby/system/System.hh	/^    bool m_cooldown_enabled;$/;"	m	class:RubySystem
m_count	src/mem/ruby/common/Histogram.hh	/^    uint64_t m_count;                \/\/ the number of elements added$/;"	m	class:Histogram
m_count	src/mem/ruby/filters/LSB_CountingBloomFilter.hh	/^    int m_count;$/;"	m	class:LSB_CountingBloomFilter
m_count_bits	src/mem/ruby/filters/LSB_CountingBloomFilter.hh	/^    int m_count_bits;$/;"	m	class:LSB_CountingBloomFilter
m_couple_cap_unit_len	src/mem/ruby/network/orion/Wire.hh	/^    double m_couple_cap_unit_len;$/;"	m	class:Wire
m_credit_count	src/mem/ruby/network/garnet/fixed-pipeline/OutVcState_d.hh	/^    int m_credit_count;$/;"	m	class:OutVcState_d
m_credit_count	src/mem/ruby/network/garnet/fixed-pipeline/VirtualChannel_d.hh	/^    int m_credit_count;$/;"	m	class:VirtualChannel_d
m_credit_link	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.hh	/^    CreditLink_d *m_credit_link;$/;"	m	class:InputUnit_d
m_credit_link	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.hh	/^    CreditLink_d *m_credit_link;$/;"	m	class:NetworkInterface_d
m_credit_link	src/mem/ruby/network/garnet/fixed-pipeline/OutputUnit_d.hh	/^    CreditLink_d *m_credit_link;$/;"	m	class:OutputUnit_d
m_credit_links	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.hh	/^    CreditLink_d* m_credit_links[2];$/;"	m	class:GarnetExtLink_d
m_credit_links	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.hh	/^    CreditLink_d* m_credit_links[2];$/;"	m	class:GarnetIntLink_d
m_creditlinks	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.hh	/^    std::vector<CreditLink_d *> m_creditlinks; \/\/ All links in net$/;"	m	class:GarnetNetwork_d
m_crossbar_activity	src/mem/ruby/network/garnet/fixed-pipeline/Switch_d.hh	/^    double m_crossbar_activity;$/;"	m	class:Switch_d
m_cur_in_port	src/mem/ruby/slicc_interface/AbstractController.hh	/^    unsigned int m_cur_in_port;$/;"	m	class:AbstractController
m_dat	src/kern/tru64/mbuf.hh	/^#define m_dat /;"	d
m_data	src/kern/tru64/mbuf.hh	/^#define m_data /;"	d
m_data	src/mem/ruby/common/DataBlock.hh	/^    uint8_t *m_data;$/;"	m	class:DataBlock
m_data	src/mem/ruby/common/Histogram.hh	/^    std::vector<uint64_t> m_data;$/;"	m	class:Histogram
m_data	src/mem/ruby/common/SubBlock.hh	/^    std::vector<uint8_t> m_data;$/;"	m	class:SubBlock
m_data	src/mem/ruby/recorder/CacheRecorder.hh	/^    uint8_t m_data[0];$/;"	m	class:TraceRecord
m_dataAccessTrace	src/mem/ruby/profiler/AddressProfiler.hh	/^    AddressMap m_dataAccessTrace;$/;"	m	class:AddressProfiler
m_dataCache_ptr	src/mem/ruby/system/Sequencer.hh	/^    CacheMemory* m_dataCache_ptr;$/;"	m	class:Sequencer
m_data_address	src/mem/ruby/recorder/CacheRecorder.hh	/^    physical_address_t m_data_address;$/;"	m	class:TraceRecord
m_data_block_mask	src/mem/ruby/system/DMASequencer.hh	/^    uint64_t m_data_block_mask;$/;"	m	class:DMASequencer
m_data_msg_size	src/mem/ruby/network/Network.cc	/^uint32_t Network::m_data_msg_size;$/;"	m	class:Network	file:
m_data_msg_size	src/mem/ruby/network/Network.hh	/^    static uint32_t m_data_msg_size;$/;"	m	class:Network
m_data_width	src/mem/ruby/network/orion/Crossbar/Crossbar.hh	/^    uint32_t m_data_width;$/;"	m	class:Crossbar
m_deadlock_check_scheduled	src/mem/ruby/system/Sequencer.hh	/^    bool m_deadlock_check_scheduled;$/;"	m	class:Sequencer
m_deadlock_threshold	src/cpu/testers/rubytest/RubyTester.hh	/^    int m_deadlock_threshold;$/;"	m	class:RubyTester
m_deadlock_threshold	src/mem/ruby/system/Sequencer.hh	/^    Cycles m_deadlock_threshold;$/;"	m	class:Sequencer
m_dec_model	src/mem/ruby/network/orion/Buffer/DecoderUnit.hh	/^    DecModel m_dec_model;$/;"	m	class:DecoderUnit
m_dec_width	src/mem/ruby/network/orion/Buffer/DecoderUnit.hh	/^    uint32_t m_dec_width;$/;"	m	class:DecoderUnit
m_degree	src/mem/ruby/network/orion/Crossbar/Crossbar.hh	/^    uint32_t m_degree;$/;"	m	class:Crossbar
m_delayHistogram	src/mem/ruby/slicc_interface/AbstractController.hh	/^    Stats::Histogram m_delayHistogram;$/;"	m	class:AbstractController
m_delayVCHistogram	src/mem/ruby/slicc_interface/AbstractController.hh	/^    std::vector<Stats::Histogram *> m_delayVCHistogram;$/;"	m	class:AbstractController
m_demand_accesses	src/mem/ruby/system/CacheMemory.hh	/^    Stats::Formula m_demand_accesses;$/;"	m	class:CacheMemory
m_demand_hits	src/mem/ruby/system/CacheMemory.hh	/^    Stats::Scalar m_demand_hits;$/;"	m	class:CacheMemory
m_demand_misses	src/mem/ruby/system/CacheMemory.hh	/^    Stats::Scalar m_demand_misses;$/;"	m	class:CacheMemory
m_depth	src/mem/ruby/network/orion/Crossbar/MultreeCrossbar.hh	/^    uint32_t m_depth;$/;"	m	class:MultreeCrossbar
m_description	src/mem/ruby/profiler/MemCntrlProfiler.hh	/^    std::string m_description;$/;"	m	class:MemCntrlProfiler
m_description	src/mem/ruby/system/RubyMemoryControl.hh	/^    std::string m_description;$/;"	m	class:RubyMemoryControl
m_description	src/mem/ruby/system/WireBuffer.hh	/^    std::string m_description;$/;"	m	class:WireBuffer
m_dimm_bit_0	src/mem/ruby/system/RubyMemoryControl.hh	/^    int m_dimm_bit_0;$/;"	m	class:RubyMemoryControl
m_dimms_per_channel	src/mem/ruby/profiler/MemCntrlProfiler.hh	/^    int m_dimms_per_channel;$/;"	m	class:MemCntrlProfiler
m_dimms_per_channel	src/mem/ruby/system/RubyMemoryControl.hh	/^    int m_dimms_per_channel;$/;"	m	class:RubyMemoryControl
m_directed_tester	src/cpu/testers/directedtest/DirectedGenerator.hh	/^    RubyDirectedTester* m_directed_tester;$/;"	m	class:DirectedGenerator
m_dynamic_energy_per_bit	src/mem/ruby/network/orion/OrionLink.hh	/^    double m_dynamic_energy_per_bit;$/;"	m	class:OrionLink
m_dynamic_link_power	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.hh	/^    Stats::Scalar m_dynamic_link_power;$/;"	m	class:GarnetNetwork_d
m_dynamic_router_power	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.hh	/^    Stats::Scalar m_dynamic_router_power;$/;"	m	class:GarnetNetwork_d
m_e_access	src/mem/ruby/network/orion/Buffer/AmpUnit.hh	/^    double m_e_access;$/;"	m	class:AmpUnit
m_e_charge_drain	src/mem/ruby/network/orion/Buffer/PrechargeUnit.hh	/^    double m_e_charge_drain;$/;"	m	class:PrechargeUnit
m_e_charge_gate	src/mem/ruby/network/orion/Buffer/PrechargeUnit.hh	/^    double m_e_charge_gate;$/;"	m	class:PrechargeUnit
m_e_chg_addr	src/mem/ruby/network/orion/Buffer/DecoderUnit.hh	/^    double m_e_chg_addr;$/;"	m	class:DecoderUnit
m_e_chg_carry	src/mem/ruby/network/orion/Allocator/RRArbiter.hh	/^    double m_e_chg_carry;$/;"	m	class:RRArbiter
m_e_chg_carry_in	src/mem/ruby/network/orion/Allocator/RRArbiter.hh	/^    double m_e_chg_carry_in;$/;"	m	class:RRArbiter
m_e_chg_ctr	src/mem/ruby/network/orion/Crossbar/Crossbar.hh	/^    double m_e_chg_ctr;$/;"	m	class:Crossbar
m_e_chg_data	src/mem/ruby/network/orion/Buffer/OutdrvUnit.hh	/^    double m_e_chg_data;$/;"	m	class:OutdrvUnit
m_e_chg_grant	src/mem/ruby/network/orion/Allocator/Arbiter.hh	/^    double m_e_chg_grant;$/;"	m	class:Arbiter
m_e_chg_in	src/mem/ruby/network/orion/Crossbar/Crossbar.hh	/^    double m_e_chg_in;$/;"	m	class:Crossbar
m_e_chg_int	src/mem/ruby/network/orion/Allocator/MatrixArbiter.hh	/^    double m_e_chg_int;$/;"	m	class:MatrixArbiter
m_e_chg_int	src/mem/ruby/network/orion/Crossbar/Crossbar.hh	/^    double m_e_chg_int;$/;"	m	class:Crossbar
m_e_chg_l1	src/mem/ruby/network/orion/Buffer/DecoderUnit.hh	/^    double m_e_chg_l1;$/;"	m	class:DecoderUnit
m_e_chg_out	src/mem/ruby/network/orion/Crossbar/Crossbar.hh	/^    double m_e_chg_out;$/;"	m	class:Crossbar
m_e_chg_output	src/mem/ruby/network/orion/Buffer/DecoderUnit.hh	/^    double m_e_chg_output;$/;"	m	class:DecoderUnit
m_e_chg_req	src/mem/ruby/network/orion/Allocator/Arbiter.hh	/^    double m_e_chg_req;$/;"	m	class:Arbiter
m_e_clock	src/mem/ruby/network/orion/FlipFlop.hh	/^    double m_e_clock;$/;"	m	class:FlipFlop
m_e_col_read	src/mem/ruby/network/orion/Buffer/BitlineUnit.hh	/^    double m_e_col_read;$/;"	m	class:BitlineUnit
m_e_col_sel	src/mem/ruby/network/orion/Buffer/BitlineUnit.hh	/^    double m_e_col_sel;$/;"	m	class:BitlineUnit
m_e_col_write	src/mem/ruby/network/orion/Buffer/BitlineUnit.hh	/^    double m_e_col_write;$/;"	m	class:BitlineUnit
m_e_htree	src/mem/ruby/network/orion/Clock.hh	/^    double m_e_htree;$/;"	m	class:Clock
m_e_keep_0	src/mem/ruby/network/orion/FlipFlop.hh	/^    double m_e_keep_0;$/;"	m	class:FlipFlop
m_e_keep_1	src/mem/ruby/network/orion/FlipFlop.hh	/^    double m_e_keep_1;$/;"	m	class:FlipFlop
m_e_out_0	src/mem/ruby/network/orion/Buffer/OutdrvUnit.hh	/^    double m_e_out_0;$/;"	m	class:OutdrvUnit
m_e_out_1	src/mem/ruby/network/orion/Buffer/OutdrvUnit.hh	/^    double m_e_out_1;$/;"	m	class:OutdrvUnit
m_e_pipe_reg	src/mem/ruby/network/orion/Clock.hh	/^    double m_e_pipe_reg;$/;"	m	class:Clock
m_e_read	src/mem/ruby/network/orion/Buffer/WordlineUnit.hh	/^    double m_e_read;$/;"	m	class:WordlineUnit
m_e_select	src/mem/ruby/network/orion/Buffer/OutdrvUnit.hh	/^    double m_e_select;$/;"	m	class:OutdrvUnit
m_e_switch	src/mem/ruby/network/orion/Buffer/MemUnit.hh	/^    double m_e_switch;$/;"	m	class:MemUnit
m_e_switch	src/mem/ruby/network/orion/FlipFlop.hh	/^    double m_e_switch;$/;"	m	class:FlipFlop
m_e_write	src/mem/ruby/network/orion/Buffer/WordlineUnit.hh	/^    double m_e_write;$/;"	m	class:WordlineUnit
m_effective_assoc	src/mem/ruby/system/PseudoLRUPolicy.hh	/^    unsigned int m_effective_assoc;    \/** nearest (to ceiling) power of 2 *\/$/;"	m	class:PseudoLRUPolicy
m_enable_fault_model	src/mem/ruby/network/garnet/BaseGarnetNetwork.hh	/^    bool m_enable_fault_model;$/;"	m	class:BaseGarnetNetwork
m_endpoint_bandwidth	src/mem/ruby/network/simple/SimpleNetwork.hh	/^    int m_endpoint_bandwidth;$/;"	m	class:SimpleNetwork
m_endpoint_bandwidth	src/mem/ruby/network/simple/Throttle.hh	/^    int m_endpoint_bandwidth;$/;"	m	class:Throttle
m_endpoint_switches	src/mem/ruby/network/simple/SimpleNetwork.hh	/^    std::vector<Switch*> m_endpoint_switches;$/;"	m	class:SimpleNetwork
m_enqueue_time	src/mem/ruby/network/garnet/fixed-pipeline/VirtualChannel_d.hh	/^    Cycles m_enqueue_time;$/;"	m	class:VirtualChannel_d
m_enqueue_time	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.hh	/^    Cycles m_enqueue_time, m_time;$/;"	m	class:flit_d
m_enqueue_time	src/mem/ruby/network/garnet/flexible-pipeline/flit.hh	/^    Cycles m_enqueue_time, m_time;$/;"	m	class:flit
m_entries	src/mem/ruby/system/DirectoryMemory.hh	/^    AbstractEntry **m_entries;$/;"	m	class:DirectoryMemory
m_entry	src/mem/ruby/system/PerfectCacheMemory.hh	/^    ENTRY m_entry;$/;"	m	struct:PerfectCacheLineState
m_event	src/mem/ruby/system/MemoryControl.hh	/^    MemCntrlEvent m_event;$/;"	m	class:MemoryControl
m_ext	src/kern/tru64/mbuf.hh	/^#define m_ext /;"	d
m_ext	src/kern/tru64/mbuf.hh	/^struct m_ext {$/;"	s	namespace:tru64
m_ext_link_vector	src/mem/ruby/network/Topology.hh	/^    std::vector<BasicExtLink*> m_ext_link_vector;$/;"	m	class:Topology
m_ext_node	src/mem/ruby/network/BasicLink.hh	/^    AbstractController* m_ext_node;$/;"	m	class:BasicExtLink
m_ff_model	src/mem/ruby/network/orion/FlipFlop.hh	/^    FFModel m_ff_model;$/;"	m	class:FlipFlop
m_ff_ptr	src/mem/ruby/network/orion/Allocator/Arbiter.hh	/^    FlipFlop* m_ff_ptr;$/;"	m	class:Arbiter
m_ff_ptr	src/mem/ruby/network/orion/Buffer/Register.hh	/^    FlipFlop* m_ff_ptr;$/;"	m	class:Register
m_filter	src/mem/ruby/filters/BlockBloomFilter.hh	/^    std::vector<int> m_filter;$/;"	m	class:BlockBloomFilter
m_filter	src/mem/ruby/filters/BulkBloomFilter.hh	/^    std::vector<int> m_filter;$/;"	m	class:BulkBloomFilter
m_filter	src/mem/ruby/filters/GenericBloomFilter.hh	/^    AbstractBloomFilter* m_filter;$/;"	m	class:GenericBloomFilter
m_filter	src/mem/ruby/filters/H3BloomFilter.hh	/^    std::vector<int> m_filter;$/;"	m	class:H3BloomFilter
m_filter	src/mem/ruby/filters/LSB_CountingBloomFilter.hh	/^    std::vector<int> m_filter;$/;"	m	class:LSB_CountingBloomFilter
m_filter	src/mem/ruby/filters/MultiBitSelBloomFilter.hh	/^    std::vector<int> m_filter;$/;"	m	class:MultiBitSelBloomFilter
m_filter	src/mem/ruby/filters/MultiGrainBloomFilter.hh	/^    std::vector<int> m_filter;$/;"	m	class:MultiGrainBloomFilter
m_filter	src/mem/ruby/filters/NonCountingBloomFilter.hh	/^    std::vector<int> m_filter;$/;"	m	class:NonCountingBloomFilter
m_filter_size	src/mem/ruby/filters/BlockBloomFilter.hh	/^    int m_filter_size;$/;"	m	class:BlockBloomFilter
m_filter_size	src/mem/ruby/filters/BulkBloomFilter.hh	/^    int m_filter_size;$/;"	m	class:BulkBloomFilter
m_filter_size	src/mem/ruby/filters/H3BloomFilter.hh	/^    int m_filter_size;$/;"	m	class:H3BloomFilter
m_filter_size	src/mem/ruby/filters/LSB_CountingBloomFilter.hh	/^    int m_filter_size;$/;"	m	class:LSB_CountingBloomFilter
m_filter_size	src/mem/ruby/filters/MultiBitSelBloomFilter.hh	/^    int m_filter_size;$/;"	m	class:MultiBitSelBloomFilter
m_filter_size	src/mem/ruby/filters/MultiGrainBloomFilter.hh	/^    int m_filter_size;$/;"	m	class:MultiGrainBloomFilter
m_filter_size	src/mem/ruby/filters/NonCountingBloomFilter.hh	/^    int m_filter_size;$/;"	m	class:NonCountingBloomFilter
m_filter_size_bits	src/mem/ruby/filters/BlockBloomFilter.hh	/^    int m_filter_size_bits;$/;"	m	class:BlockBloomFilter
m_filter_size_bits	src/mem/ruby/filters/BulkBloomFilter.hh	/^    int m_filter_size_bits;$/;"	m	class:BulkBloomFilter
m_filter_size_bits	src/mem/ruby/filters/H3BloomFilter.hh	/^    int m_filter_size_bits;$/;"	m	class:H3BloomFilter
m_filter_size_bits	src/mem/ruby/filters/LSB_CountingBloomFilter.hh	/^    int m_filter_size_bits;$/;"	m	class:LSB_CountingBloomFilter
m_filter_size_bits	src/mem/ruby/filters/MultiBitSelBloomFilter.hh	/^    int m_filter_size_bits;$/;"	m	class:MultiBitSelBloomFilter
m_filter_size_bits	src/mem/ruby/filters/MultiGrainBloomFilter.hh	/^    int m_filter_size_bits;$/;"	m	class:MultiGrainBloomFilter
m_filter_size_bits	src/mem/ruby/filters/NonCountingBloomFilter.hh	/^    int m_filter_size_bits;$/;"	m	class:NonCountingBloomFilter
m_first_store	src/mem/ruby/profiler/StoreTrace.hh	/^    Time m_first_store;$/;"	m	class:StoreTrace
m_flags	src/kern/tru64/mbuf.hh	/^#define m_flags /;"	d
m_flit_width	src/mem/ruby/network/garnet/fixed-pipeline/NetworkLink_d.hh	/^    int m_flit_width;$/;"	m	class:NetworkLink_d
m_flit_width	src/mem/ruby/network/orion/OrionConfig.hh	/^    uint32_t m_flit_width;$/;"	m	class:OrionConfig
m_flit_width	src/mem/ruby/network/orion/OrionRouter.hh	/^    uint32_t m_flit_width;$/;"	m	class:OrionRouter
m_flits_injected	src/mem/ruby/network/garnet/BaseGarnetNetwork.hh	/^    Stats::Vector m_flits_injected;$/;"	m	class:BaseGarnetNetwork
m_flits_received	src/mem/ruby/network/garnet/BaseGarnetNetwork.hh	/^    Stats::Vector m_flits_received;$/;"	m	class:BaseGarnetNetwork
m_freq	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_freq;$/;"	m	class:TechParameter
m_fromNetQueues	src/mem/ruby/network/Network.hh	/^    std::vector<std::vector<MessageBuffer*> > m_fromNetQueues;$/;"	m	class:Network
m_fudge_factor	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_fudge_factor;$/;"	m	class:TechParameter
m_fully_busy_cycles	src/mem/ruby/slicc_interface/AbstractController.hh	/^    Stats::Scalar m_fully_busy_cycles;$/;"	m	class:AbstractController
m_gen_power_factor	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_gen_power_factor;$/;"	m	class:TechParameter
m_gets_sharing_histogram	src/mem/ruby/profiler/AddressProfiler.hh	/^    Histogram m_gets_sharing_histogram;$/;"	m	class:AddressProfiler
m_getx_sharing_histogram	src/mem/ruby/profiler/AddressProfiler.hh	/^    Histogram m_getx_sharing_histogram;$/;"	m	class:AddressProfiler
m_global_arb_ptr	src/mem/ruby/network/orion/Allocator/SWAllocator.hh	/^    Arbiter* m_global_arb_ptr;$/;"	m	class:SWAllocator
m_global_arb_ptr	src/mem/ruby/network/orion/Allocator/VCAllocator.hh	/^    Arbiter* m_global_arb_ptr;$/;"	m	class:VCAllocator
m_global_arbiter_activity	src/mem/ruby/network/garnet/fixed-pipeline/SWallocator_d.hh	/^    double m_local_arbiter_activity, m_global_arbiter_activity;$/;"	m	class:SWallocator_d
m_global_arbiter_activity	src/mem/ruby/network/garnet/fixed-pipeline/VCallocator_d.hh	/^    std::vector<double> m_global_arbiter_activity;$/;"	m	class:VCallocator_d
m_gnd_cap_unit_len	src/mem/ruby/network/orion/Wire.hh	/^    double m_gnd_cap_unit_len;$/;"	m	class:Wire
m_hdr	src/kern/tru64/mbuf.hh	/^    struct      m_hdr m_hdr;$/;"	m	struct:tru64::mbuf	typeref:struct:tru64::mbuf::m_hdr
m_hdr	src/kern/tru64/mbuf.hh	/^struct m_hdr {$/;"	s	namespace:tru64
m_histogram_ptr	src/mem/ruby/profiler/AccessTraceForAddress.hh	/^    Histogram* m_histogram_ptr;$/;"	m	class:AccessTraceForAddress
m_hitLatencyHist	src/mem/ruby/profiler/Profiler.hh	/^    Stats::Histogram m_hitLatencyHist;$/;"	m	class:Profiler
m_hitLatencyHist	src/mem/ruby/system/Sequencer.hh	/^    Stats::Histogram m_hitLatencyHist;$/;"	m	class:Sequencer
m_hitMachLatencyHist	src/mem/ruby/profiler/Profiler.hh	/^    std::vector<Stats::Histogram *> m_hitMachLatencyHist;$/;"	m	class:Profiler
m_hitMachLatencyHist	src/mem/ruby/system/Sequencer.hh	/^    std::vector<Stats::Histogram *> m_hitMachLatencyHist;$/;"	m	class:Sequencer
m_hitTypeLatencyHist	src/mem/ruby/profiler/Profiler.hh	/^    std::vector<Stats::Histogram *> m_hitTypeLatencyHist;$/;"	m	class:Profiler
m_hitTypeLatencyHist	src/mem/ruby/system/Sequencer.hh	/^    std::vector<Stats::Histogram *> m_hitTypeLatencyHist;$/;"	m	class:Sequencer
m_hitTypeMachLatencyHist	src/mem/ruby/profiler/Profiler.hh	/^    std::vector< std::vector<Stats::Histogram *> > m_hitTypeMachLatencyHist;$/;"	m	class:Profiler
m_hitTypeMachLatencyHist	src/mem/ruby/system/Sequencer.hh	/^    std::vector< std::vector<Stats::Histogram *> > m_hitTypeMachLatencyHist;$/;"	m	class:Sequencer
m_hot_lines	src/mem/ruby/profiler/AddressProfiler.hh	/^    bool m_hot_lines;$/;"	m	class:AddressProfiler
m_hot_lines	src/mem/ruby/profiler/Profiler.hh	/^    bool m_hot_lines;$/;"	m	class:Profiler
m_hw_prefetches	src/mem/ruby/system/CacheMemory.hh	/^    Stats::Scalar m_hw_prefetches;$/;"	m	class:CacheMemory
m_i_static	src/mem/ruby/network/orion/Allocator/Arbiter.hh	/^    double m_i_static;$/;"	m	class:Arbiter
m_i_static	src/mem/ruby/network/orion/Buffer/BitlineUnit.hh	/^    double m_i_static;$/;"	m	class:BitlineUnit
m_i_static	src/mem/ruby/network/orion/Buffer/MemUnit.hh	/^    double m_i_static;$/;"	m	class:MemUnit
m_i_static	src/mem/ruby/network/orion/Buffer/OutdrvUnit.hh	/^    double m_i_static;$/;"	m	class:OutdrvUnit
m_i_static	src/mem/ruby/network/orion/Buffer/PrechargeUnit.hh	/^    double m_i_static;$/;"	m	class:PrechargeUnit
m_i_static	src/mem/ruby/network/orion/Buffer/WordlineUnit.hh	/^    double m_i_static;$/;"	m	class:WordlineUnit
m_i_static	src/mem/ruby/network/orion/Clock.hh	/^    double m_i_static;$/;"	m	class:Clock
m_i_static	src/mem/ruby/network/orion/Crossbar/Crossbar.hh	/^    double m_i_static;$/;"	m	class:Crossbar
m_i_static	src/mem/ruby/network/orion/FlipFlop.hh	/^    double m_i_static;$/;"	m	class:FlipFlop
m_id	src/mem/ruby/network/BasicRouter.hh	/^    uint32_t m_id;$/;"	m	class:BasicRouter
m_id	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.hh	/^    int m_id;$/;"	m	class:InputUnit_d
m_id	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.hh	/^    NodeID m_id;$/;"	m	class:NetworkInterface_d
m_id	src/mem/ruby/network/garnet/fixed-pipeline/NetworkLink_d.hh	/^    int m_id;$/;"	m	class:NetworkLink_d
m_id	src/mem/ruby/network/garnet/fixed-pipeline/OutVcState_d.hh	/^    int m_id ;$/;"	m	class:OutVcState_d
m_id	src/mem/ruby/network/garnet/fixed-pipeline/OutputUnit_d.hh	/^    int m_id;$/;"	m	class:OutputUnit_d
m_id	src/mem/ruby/network/garnet/fixed-pipeline/VirtualChannel_d.hh	/^    int m_id;$/;"	m	class:VirtualChannel_d
m_id	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.hh	/^    int m_id;$/;"	m	class:flit_d
m_id	src/mem/ruby/network/garnet/flexible-pipeline/InVcState.hh	/^    int m_id;$/;"	m	class:InVcState
m_id	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.hh	/^    NodeID m_id;$/;"	m	class:NetworkInterface
m_id	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.hh	/^    int m_id;$/;"	m	class:NetworkLink
m_id	src/mem/ruby/network/garnet/flexible-pipeline/OutVcState.hh	/^    int m_id ;$/;"	m	class:OutVcState
m_id	src/mem/ruby/network/garnet/flexible-pipeline/flit.hh	/^    int m_id;$/;"	m	class:flit
m_idleCount	src/mem/ruby/system/RubyMemoryControl.hh	/^    int m_idleCount;          \/\/ watchdog timer for shutting down$/;"	m	class:RubyMemoryControl
m_in	src/mem/ruby/network/simple/PerfectSwitch.hh	/^    std::vector<std::vector<MessageBuffer*> > m_in;$/;"	m	class:PerfectSwitch
m_in	src/mem/ruby/network/simple/Throttle.hh	/^    std::vector<MessageBuffer*> m_in;$/;"	m	class:Throttle
m_in_buf_ary_ptr	src/mem/ruby/network/orion/OrionRouter.hh	/^    Buffer** m_in_buf_ary_ptr;$/;"	m	class:OrionRouter
m_in_buf_num_set	src/mem/ruby/network/orion/OrionConfig.hh	/^    uint32_t m_in_buf_num_set;$/;"	m	class:OrionConfig
m_in_buf_num_set_ary	src/mem/ruby/network/orion/OrionRouter.hh	/^    uint32_t* m_in_buf_num_set_ary;$/;"	m	class:OrionRouter
m_in_link	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.hh	/^    NetworkLink_d *m_in_link;$/;"	m	class:InputUnit_d
m_in_link	src/mem/ruby/network/garnet/flexible-pipeline/Router.hh	/^    std::vector<NetworkLink *> m_in_link;$/;"	m	class:Router
m_in_port	src/mem/ruby/network/garnet/fixed-pipeline/OutVcState_d.hh	/^    int m_in_port;$/;"	m	class:OutVcState_d
m_in_port	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.hh	/^    int m_in_port, m_out_port;$/;"	m	class:NetworkLink
m_in_ports	src/mem/ruby/slicc_interface/AbstractController.hh	/^    unsigned int m_in_ports;$/;"	m	class:AbstractController
m_in_use	src/mem/ruby/network/Network.hh	/^    std::vector<bool> m_in_use;$/;"	m	class:Network
m_in_vc	src/mem/ruby/network/garnet/fixed-pipeline/OutVcState_d.hh	/^    int m_in_vc;$/;"	m	class:OutVcState_d
m_in_vc_state	src/mem/ruby/network/garnet/flexible-pipeline/Router.hh	/^    std::vector<std::vector<InVcState *> > m_in_vc_state;$/;"	m	class:Router
m_initiatingNode	src/cpu/testers/rubytest/Check.hh	/^    NodeID m_initiatingNode;$/;"	m	class:Check
m_input_buffer	src/mem/ruby/network/garnet/fixed-pipeline/VirtualChannel_d.hh	/^    flitBuffer_d *m_input_buffer;$/;"	m	class:VirtualChannel_d
m_input_link_id	src/mem/ruby/buffers/MessageBuffer.hh	/^    int m_input_link_id;$/;"	m	class:MessageBuffer
m_input_queue	src/mem/ruby/system/RubyMemoryControl.hh	/^    std::list<MemoryNode *> m_input_queue;$/;"	m	class:RubyMemoryControl
m_input_unit	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    std::vector<InputUnit_d *> m_input_unit;$/;"	m	class:Router_d
m_input_unit	src/mem/ruby/network/garnet/fixed-pipeline/SWallocator_d.hh	/^    std::vector<InputUnit_d *> m_input_unit;$/;"	m	class:SWallocator_d
m_input_unit	src/mem/ruby/network/garnet/fixed-pipeline/VCallocator_d.hh	/^    std::vector<InputUnit_d *> m_input_unit;$/;"	m	class:VCallocator_d
m_instCache_ptr	src/mem/ruby/system/Sequencer.hh	/^    CacheMemory* m_instCache_ptr;$/;"	m	class:Sequencer
m_inst_profiler_ptr	src/mem/ruby/profiler/Profiler.hh	/^    AddressProfiler* m_inst_profiler_ptr;$/;"	m	class:Profiler
m_int_link_vector	src/mem/ruby/network/Topology.hh	/^    std::vector<BasicIntLink*> m_int_link_vector;$/;"	m	class:Topology
m_int_node	src/mem/ruby/network/BasicLink.hh	/^    BasicRouter* m_int_node;$/;"	m	class:BasicExtLink
m_internal_dest	src/mem/ruby/slicc_interface/NetworkMessage.hh	/^    NetDest m_internal_dest;$/;"	m	class:NetworkMessage
m_internal_dest_valid	src/mem/ruby/slicc_interface/NetworkMessage.hh	/^    bool m_internal_dest_valid;$/;"	m	class:NetworkMessage
m_invCap	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_invCap;$/;"	m	class:TechParameter
m_is_blocking	src/mem/ruby/slicc_interface/AbstractController.hh	/^    bool m_is_blocking;$/;"	m	class:AbstractController
m_is_busy	src/mem/ruby/system/DMASequencer.hh	/^    bool m_is_busy;$/;"	m	class:DMASequencer
m_is_dirty_wb	src/mem/ruby/system/MemoryNode.hh	/^    bool m_is_dirty_wb;$/;"	m	class:MemoryNode
m_is_fifo	src/mem/ruby/network/orion/Buffer/Buffer.hh	/^    bool m_is_fifo;$/;"	m	class:Buffer
m_is_fifo	src/mem/ruby/network/orion/Buffer/SRAM.hh	/^    bool m_is_fifo;$/;"	m	class:SRAM
m_is_free_signal	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.hh	/^    bool m_is_free_signal;$/;"	m	class:flit_d
m_is_in_buf	src/mem/ruby/network/orion/Clock.hh	/^    bool m_is_in_buf;$/;"	m	class:Clock
m_is_in_shared_buf	src/mem/ruby/network/orion/OrionRouter.hh	/^    bool m_is_in_shared_buf;$/;"	m	class:OrionRouter
m_is_in_shared_switch	src/mem/ruby/network/orion/Clock.hh	/^    bool m_is_in_shared_switch;$/;"	m	class:Clock
m_is_in_shared_switch	src/mem/ruby/network/orion/OrionRouter.hh	/^    bool m_is_in_shared_switch;$/;"	m	class:OrionRouter
m_is_instruction_only_cache	src/mem/ruby/system/CacheMemory.hh	/^    bool m_is_instruction_only_cache;$/;"	m	class:CacheMemory
m_is_mem_read	src/mem/ruby/system/MemoryNode.hh	/^    bool m_is_mem_read;$/;"	m	class:MemoryNode
m_is_out_buf	src/mem/ruby/network/orion/Clock.hh	/^    bool m_is_out_buf;$/;"	m	class:Clock
m_is_out_shared_buf	src/mem/ruby/network/orion/OrionRouter.hh	/^    bool m_is_out_shared_buf;$/;"	m	class:OrionRouter
m_is_out_shared_switch	src/mem/ruby/network/orion/Clock.hh	/^    bool m_is_out_shared_switch;$/;"	m	class:Clock
m_is_out_shared_switch	src/mem/ruby/network/orion/OrionRouter.hh	/^    bool m_is_out_shared_switch;$/;"	m	class:OrionRouter
m_is_outdrv	src/mem/ruby/network/orion/Buffer/Buffer.hh	/^    bool m_is_outdrv;$/;"	m	class:Buffer
m_is_outdrv	src/mem/ruby/network/orion/Buffer/SRAM.hh	/^    bool m_is_outdrv;$/;"	m	class:SRAM
m_is_shielding	src/mem/ruby/network/orion/Wire.hh	/^    bool m_is_shielding;$/;"	m	class:Wire
m_is_valid	src/mem/ruby/structures/Prefetcher.hh	/^        bool m_is_valid;$/;"	m	class:PrefetchEntry
m_key	src/mem/ruby/network/orion/OrionConfig.hh	/^      std::string m_key;$/;"	m	struct:OrionConfig::key_not_found
m_krise	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_krise;$/;"	m	class:TechParameter
m_largest_bin	src/mem/ruby/common/Histogram.hh	/^    uint32_t m_largest_bin;      \/\/ the largest bin used$/;"	m	class:Histogram
m_last_arrival_time	src/mem/ruby/buffers/MessageBuffer.hh	/^    Tick m_last_arrival_time;$/;"	m	class:MessageBuffer
m_last_progress_vector	src/cpu/testers/rubytest/RubyTester.hh	/^    std::vector<Time> m_last_progress_vector;$/;"	m	class:RubyTester
m_last_ref_ptr	src/mem/ruby/system/AbstractReplacementPolicy.hh	/^    Tick **m_last_ref_ptr;         \/** timestamp of last reference *\/$/;"	m	class:AbstractReplacementPolicy
m_last_store	src/mem/ruby/profiler/StoreTrace.hh	/^    Time m_last_store;$/;"	m	class:StoreTrace
m_last_writer	src/mem/ruby/profiler/StoreTrace.hh	/^    NodeID m_last_writer;$/;"	m	class:StoreTrace
m_latency	src/mem/ruby/network/BasicLink.hh	/^    Cycles m_latency;$/;"	m	class:BasicLink
m_latency	src/mem/ruby/network/garnet/fixed-pipeline/NetworkLink_d.hh	/^    Cycles m_latency;$/;"	m	class:NetworkLink_d
m_latency	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.hh	/^    Cycles m_latency;$/;"	m	class:NetworkLink
m_latency	src/mem/ruby/system/CacheMemory.hh	/^    Cycles m_latency;$/;"	m	class:CacheMemory
m_latencyHist	src/mem/ruby/profiler/Profiler.hh	/^    Stats::Histogram m_latencyHist;$/;"	m	class:Profiler
m_latencyHist	src/mem/ruby/system/Sequencer.hh	/^    Stats::Histogram m_latencyHist;$/;"	m	class:Sequencer
m_len	src/kern/tru64/mbuf.hh	/^#define m_len /;"	d
m_len	src/mem/ruby/network/orion/OrionLink.hh	/^    double m_len;$/;"	m	class:OrionLink
m_len_in_wire	src/mem/ruby/network/orion/Allocator/Arbiter.hh	/^    double m_len_in_wire;$/;"	m	class:Arbiter
m_len_in_wire	src/mem/ruby/network/orion/Crossbar/MatrixCrossbar.hh	/^    double m_len_in_wire;$/;"	m	class:MatrixCrossbar
m_len_out_wire	src/mem/ruby/network/orion/Crossbar/MatrixCrossbar.hh	/^    double m_len_out_wire;$/;"	m	class:MatrixCrossbar
m_len_req_wire	src/mem/ruby/network/orion/Crossbar/Crossbar.hh	/^    double m_len_req_wire;$/;"	m	class:Crossbar
m_line_width	src/mem/ruby/network/orion/Buffer/Buffer.hh	/^    uint32_t m_line_width;$/;"	m	class:Buffer
m_line_width	src/mem/ruby/network/orion/Buffer/Register.hh	/^    uint32_t m_line_width;$/;"	m	class:Register
m_line_width	src/mem/ruby/network/orion/Buffer/SRAM.hh	/^    uint32_t m_line_width;$/;"	m	class:SRAM
m_line_width	src/mem/ruby/network/orion/OrionLink.hh	/^    uint32_t m_line_width;$/;"	m	class:OrionLink
m_link	src/mem/ruby/network/simple/PerfectSwitch.hh	/^    int m_link;$/;"	m	struct:LinkOrder
m_link_bandwidth_multiplier	src/mem/ruby/network/simple/Throttle.hh	/^    int m_link_bandwidth_multiplier;$/;"	m	class:Throttle
m_link_latency	src/mem/ruby/network/simple/Throttle.hh	/^    Cycles m_link_latency;$/;"	m	class:Throttle
m_link_map	src/mem/ruby/network/Topology.hh	/^    LinkMap m_link_map;$/;"	m	class:Topology
m_link_order	src/mem/ruby/network/simple/PerfectSwitch.hh	/^    std::vector<LinkOrder> m_link_order;$/;"	m	class:PerfectSwitch
m_link_utilization	src/mem/ruby/network/simple/Throttle.hh	/^    Stats::Scalar m_link_utilization;$/;"	m	class:Throttle
m_link_utilization_proxy	src/mem/ruby/network/simple/Throttle.hh	/^    double m_link_utilization_proxy;$/;"	m	class:Throttle
m_link_utilized	src/mem/ruby/network/garnet/fixed-pipeline/NetworkLink_d.hh	/^    unsigned int m_link_utilized;$/;"	m	class:NetworkLink_d
m_link_utilized	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.hh	/^    unsigned int m_link_utilized;$/;"	m	class:NetworkLink
m_link_weights	src/mem/ruby/network/garnet/flexible-pipeline/Router.hh	/^    std::vector<int> m_link_weights;$/;"	m	class:Router
m_links	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.hh	/^    std::vector<NetworkLink_d *> m_links; \/\/ All links in the network$/;"	m	class:GarnetNetwork_d
m_links	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.hh	/^    std::vector<NetworkLink *> m_links; \/\/ All links in network$/;"	m	class:GarnetNetwork
m_load	src/mem/ruby/network/orion/FlipFlop.hh	/^    double m_load;$/;"	m	class:FlipFlop
m_load_waiting_on_load	src/mem/ruby/system/Sequencer.hh	/^    Stats::Scalar m_load_waiting_on_load;$/;"	m	class:Sequencer
m_load_waiting_on_store	src/mem/ruby/system/Sequencer.hh	/^    Stats::Scalar m_load_waiting_on_store;$/;"	m	class:Sequencer
m_loads	src/mem/ruby/profiler/AccessTraceForAddress.hh	/^    uint64 m_loads;$/;"	m	class:AccessTraceForAddress
m_local_arb_ptr	src/mem/ruby/network/orion/Allocator/SWAllocator.hh	/^    Arbiter* m_local_arb_ptr;$/;"	m	class:SWAllocator
m_local_arb_ptr	src/mem/ruby/network/orion/Allocator/VCAllocator.hh	/^    Arbiter* m_local_arb_ptr;$/;"	m	class:VCAllocator
m_local_arbiter_activity	src/mem/ruby/network/garnet/fixed-pipeline/SWallocator_d.hh	/^    double m_local_arbiter_activity, m_global_arbiter_activity;$/;"	m	class:SWallocator_d
m_local_arbiter_activity	src/mem/ruby/network/garnet/fixed-pipeline/VCallocator_d.hh	/^    std::vector<double> m_local_arbiter_activity;$/;"	m	class:VCallocator_d
m_locked	src/mem/ruby/slicc_interface/AbstractCacheEntry.hh	/^    int m_locked; \/\/ Holds info whether the address is locked,$/;"	m	class:AbstractCacheEntry
m_lookup_map	src/cpu/testers/rubytest/CheckTable.hh	/^    m5::hash_map<Address, Check*> m_lookup_map;$/;"	m	class:CheckTable
m_machineID	src/mem/ruby/slicc_interface/AbstractController.hh	/^    MachineID m_machineID;$/;"	m	class:AbstractController
m_macroBlockAccessTrace	src/mem/ruby/profiler/AddressProfiler.hh	/^    AddressMap m_macroBlockAccessTrace;$/;"	m	class:AddressProfiler
m_mandatory_q_ptr	src/mem/ruby/system/RubyPort.hh	/^    MessageBuffer* m_mandatory_q_ptr;$/;"	m	class:RubyPort
m_map	src/mem/ruby/system/PerfectCacheMemory.hh	/^    m5::hash_map<Address, PerfectCacheLineState<ENTRY> > m_map;$/;"	m	class:PerfectCacheMemory
m_map	src/mem/ruby/system/PersistentTable.hh	/^    AddressMap m_map;$/;"	m	class:PersistentTable
m_map	src/mem/ruby/system/TBETable.hh	/^    m5::hash_map<Address, ENTRY> m_map;$/;"	m	class:TBETable
m_map	src/mem/ruby/system/TimerTable.hh	/^    AddressMap m_map;$/;"	m	class:TimerTable
m_map_head	src/mem/ruby/system/SparseMemory.hh	/^    SparseMapType* m_map_head;$/;"	m	class:SparseMemory
m_map_levels	src/mem/ruby/system/DirectoryMemory.hh	/^    int m_map_levels;$/;"	m	class:DirectoryMemory
m_marked	src/mem/ruby/system/PersistentTable.hh	/^    NetDest m_marked;$/;"	m	class:PersistentTableEntry
m_max	src/mem/ruby/common/Histogram.hh	/^    int64 m_max;          \/\/ the maximum value seen so far$/;"	m	class:Histogram
m_max_n	src/mem/ruby/network/orion/TechParameter.hh	/^    uint32_t m_max_n;$/;"	m	class:TechParameter
m_max_outstanding_requests	src/mem/ruby/system/Sequencer.hh	/^    int m_max_outstanding_requests;$/;"	m	class:Sequencer
m_max_size	src/mem/ruby/buffers/MessageBuffer.hh	/^    unsigned int m_max_size;$/;"	m	class:MessageBuffer
m_max_spd	src/mem/ruby/network/orion/TechParameter.hh	/^    uint32_t m_max_spd;$/;"	m	class:TechParameter
m_max_subarrays	src/mem/ruby/network/orion/TechParameter.hh	/^    uint32_t m_max_subarrays;$/;"	m	class:TechParameter
m_memArbWait	src/mem/ruby/profiler/MemCntrlProfiler.hh	/^    Stats::Scalar m_memArbWait;$/;"	m	class:MemCntrlProfiler
m_memBankBusy	src/mem/ruby/profiler/MemCntrlProfiler.hh	/^    Stats::Scalar m_memBankBusy;$/;"	m	class:MemCntrlProfiler
m_memBankCount	src/mem/ruby/profiler/MemCntrlProfiler.hh	/^    Stats::Vector m_memBankCount;$/;"	m	class:MemCntrlProfiler
m_memBankQ	src/mem/ruby/profiler/MemCntrlProfiler.hh	/^    Stats::Scalar m_memBankQ;$/;"	m	class:MemCntrlProfiler
m_memBusBusy	src/mem/ruby/profiler/MemCntrlProfiler.hh	/^    Stats::Scalar m_memBusBusy;$/;"	m	class:MemCntrlProfiler
m_memDataBusBusy	src/mem/ruby/profiler/MemCntrlProfiler.hh	/^    Stats::Scalar m_memDataBusBusy;$/;"	m	class:MemCntrlProfiler
m_memInputQ	src/mem/ruby/profiler/MemCntrlProfiler.hh	/^    Stats::Scalar m_memInputQ;$/;"	m	class:MemCntrlProfiler
m_memNotOld	src/mem/ruby/profiler/MemCntrlProfiler.hh	/^    Stats::Scalar m_memNotOld;$/;"	m	class:MemCntrlProfiler
m_memRandBusy	src/mem/ruby/profiler/MemCntrlProfiler.hh	/^    Stats::Scalar m_memRandBusy;$/;"	m	class:MemCntrlProfiler
m_memRead	src/mem/ruby/profiler/MemCntrlProfiler.hh	/^    Stats::Scalar m_memRead;$/;"	m	class:MemCntrlProfiler
m_memReadWriteBusy	src/mem/ruby/profiler/MemCntrlProfiler.hh	/^    Stats::Scalar m_memReadWriteBusy;$/;"	m	class:MemCntrlProfiler
m_memRefresh	src/mem/ruby/profiler/MemCntrlProfiler.hh	/^    Stats::Scalar m_memRefresh;$/;"	m	class:MemCntrlProfiler
m_memReq	src/mem/ruby/profiler/MemCntrlProfiler.hh	/^    Stats::Scalar m_memReq;$/;"	m	class:MemCntrlProfiler
m_memTfawBusy	src/mem/ruby/profiler/MemCntrlProfiler.hh	/^    Stats::Scalar m_memTfawBusy;$/;"	m	class:MemCntrlProfiler
m_memWaitCycles	src/mem/ruby/profiler/MemCntrlProfiler.hh	/^    Stats::Scalar m_memWaitCycles;$/;"	m	class:MemCntrlProfiler
m_memWrite	src/mem/ruby/profiler/MemCntrlProfiler.hh	/^    Stats::Scalar m_memWrite;$/;"	m	class:MemCntrlProfiler
m_mem_ctl_latency	src/mem/ruby/system/RubyMemoryControl.hh	/^    Cycles m_mem_ctl_latency;$/;"	m	class:RubyMemoryControl
m_mem_fixed_delay	src/mem/ruby/system/RubyMemoryControl.hh	/^    Cycles m_mem_fixed_delay;$/;"	m	class:RubyMemoryControl
m_mem_model	src/mem/ruby/network/orion/Buffer/MemUnit.hh	/^    MemModel m_mem_model;$/;"	m	class:MemUnit
m_mem_model_str	src/mem/ruby/network/orion/Buffer/SRAM.hh	/^    string m_mem_model_str;$/;"	m	class:SRAM
m_mem_random_arbitrate	src/mem/ruby/system/RubyMemoryControl.hh	/^    int m_mem_random_arbitrate;$/;"	m	class:RubyMemoryControl
m_mem_unit_ptr	src/mem/ruby/network/orion/Buffer/SRAM.hh	/^    MemUnit* m_mem_unit_ptr;$/;"	m	class:SRAM
m_mem_vec	src/mem/ruby/system/System.hh	/^    MemoryVector* m_mem_vec;$/;"	m	class:RubySystem
m_memory_controller_vec	src/mem/ruby/system/System.hh	/^    std::vector<MemoryControl *> m_memory_controller_vec;$/;"	m	class:RubySystem
m_memory_size_bits	src/mem/ruby/system/System.cc	/^uint32_t RubySystem::m_memory_size_bits;$/;"	m	class:RubySystem	file:
m_memory_size_bits	src/mem/ruby/system/System.hh	/^    static uint32_t m_memory_size_bits;$/;"	m	class:RubySystem
m_memory_size_bytes	src/mem/ruby/system/System.cc	/^uint64_t RubySystem::m_memory_size_bytes;$/;"	m	class:RubySystem	file:
m_memory_size_bytes	src/mem/ruby/system/System.hh	/^    static uint64_t m_memory_size_bytes;$/;"	m	class:RubySystem
m_message_queue	src/mem/ruby/system/WireBuffer.hh	/^    std::vector<MessageBufferNode> m_message_queue;$/;"	m	class:WireBuffer
m_missLatencyHist	src/mem/ruby/profiler/Profiler.hh	/^    Stats::Histogram m_missLatencyHist;$/;"	m	class:Profiler
m_missLatencyHist	src/mem/ruby/system/Sequencer.hh	/^    Stats::Histogram m_missLatencyHist;$/;"	m	class:Sequencer
m_missMachLatencyHist	src/mem/ruby/profiler/Profiler.hh	/^    std::vector<Stats::Histogram *> m_missMachLatencyHist;$/;"	m	class:Profiler
m_missMachLatencyHist	src/mem/ruby/system/Sequencer.hh	/^    std::vector<Stats::Histogram *> m_missMachLatencyHist;$/;"	m	class:Sequencer
m_missTypeLatencyHist	src/mem/ruby/profiler/Profiler.hh	/^    std::vector<Stats::Histogram *> m_missTypeLatencyHist;$/;"	m	class:Profiler
m_missTypeLatencyHist	src/mem/ruby/system/Sequencer.hh	/^    std::vector<Stats::Histogram *> m_missTypeLatencyHist;$/;"	m	class:Sequencer
m_missTypeMachLatencyHist	src/mem/ruby/profiler/Profiler.hh	/^    std::vector< std::vector<Stats::Histogram *> > m_missTypeMachLatencyHist;$/;"	m	class:Profiler
m_missTypeMachLatencyHist	src/mem/ruby/system/Sequencer.hh	/^    std::vector< std::vector<Stats::Histogram *> > m_missTypeMachLatencyHist;$/;"	m	class:Sequencer
m_msg_bytes	src/mem/ruby/network/simple/SimpleNetwork.hh	/^    Stats::Formula m_msg_bytes[MessageSizeType_NUM];$/;"	m	class:SimpleNetwork
m_msg_bytes	src/mem/ruby/network/simple/Switch.hh	/^    Stats::Formula m_msg_bytes[MessageSizeType_NUM];$/;"	m	class:Switch
m_msg_bytes	src/mem/ruby/network/simple/Throttle.hh	/^    Stats::Formula m_msg_bytes[MessageSizeType_NUM];$/;"	m	class:Throttle
m_msg_counter	src/mem/ruby/buffers/MessageBuffer.hh	/^    uint64 m_msg_counter;$/;"	m	class:MessageBuffer
m_msg_counter	src/mem/ruby/buffers/MessageBufferNode.hh	/^    uint64_t m_msg_counter; \/\/ FIXME, should this be a 64-bit value?$/;"	m	class:MessageBufferNode
m_msg_counter	src/mem/ruby/system/MemoryNode.hh	/^    int m_msg_counter;$/;"	m	class:MemoryNode
m_msg_counter	src/mem/ruby/system/RubyMemoryControl.hh	/^    int m_msg_counter;$/;"	m	class:RubyMemoryControl
m_msg_counter	src/mem/ruby/system/WireBuffer.hh	/^    uint64_t m_msg_counter;$/;"	m	class:WireBuffer
m_msg_counts	src/mem/ruby/network/simple/SimpleNetwork.hh	/^    Stats::Formula m_msg_counts[MessageSizeType_NUM];$/;"	m	class:SimpleNetwork
m_msg_counts	src/mem/ruby/network/simple/Switch.hh	/^    Stats::Formula m_msg_counts[MessageSizeType_NUM];$/;"	m	class:Switch
m_msg_counts	src/mem/ruby/network/simple/Throttle.hh	/^    Stats::Vector m_msg_counts[MessageSizeType_NUM];$/;"	m	class:Throttle
m_msg_ptr	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.hh	/^    MsgPtr m_msg_ptr;$/;"	m	class:flit_d
m_msg_ptr	src/mem/ruby/network/garnet/flexible-pipeline/flit.hh	/^    MsgPtr m_msg_ptr;$/;"	m	class:flit
m_msgptr	src/mem/ruby/buffers/MessageBufferNode.hh	/^    MsgPtr m_msgptr;$/;"	m	class:MessageBufferNode
m_msgptr	src/mem/ruby/system/MemoryNode.hh	/^    MsgPtr m_msgptr;$/;"	m	class:MemoryNode
m_msgs_this_cycle	src/mem/ruby/buffers/MessageBuffer.hh	/^    unsigned int m_msgs_this_cycle;$/;"	m	class:MessageBuffer
m_nArrayLen	src/mem/ruby/common/Set.hh	/^    int m_nArrayLen;          \/\/ the number of 32-bit words that are$/;"	m	class:Set
m_nSize	src/mem/ruby/common/Set.hh	/^    int m_nSize;              \/\/ the number of bits in this set$/;"	m	class:Set
m_name	src/mem/ruby/buffers/MessageBuffer.hh	/^    std::string m_name;$/;"	m	class:MessageBuffer
m_name	src/mem/ruby/system/DirectoryMemory.hh	/^    const std::string m_name;$/;"	m	class:DirectoryMemory
m_name	src/mem/ruby/system/TimerTable.hh	/^    std::string m_name;$/;"	m	class:TimerTable
m_need_refresh	src/mem/ruby/system/RubyMemoryControl.hh	/^    int m_need_refresh;       \/\/ set whenever m_refresh_count goes to zero$/;"	m	class:RubyMemoryControl
m_negative_filter	src/mem/ruby/structures/Prefetcher.hh	/^        std::vector<Address> m_negative_filter;$/;"	m	class:Prefetcher
m_negative_filter_hit	src/mem/ruby/structures/Prefetcher.hh	/^        uint32_t *m_negative_filter_hit;$/;"	m	class:Prefetcher
m_negative_filter_index	src/mem/ruby/structures/Prefetcher.hh	/^        uint32_t m_negative_filter_index;$/;"	m	class:Prefetcher
m_net_ptr	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.hh	/^    GarnetNetwork_d *m_net_ptr;$/;"	m	class:NetworkInterface_d
m_net_ptr	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.hh	/^    GarnetNetwork *m_net_ptr;$/;"	m	class:NetworkInterface
m_net_ptr	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.hh	/^    GarnetNetwork *m_net_ptr;$/;"	m	class:NetworkLink
m_net_ptr	src/mem/ruby/network/garnet/flexible-pipeline/Router.hh	/^    GarnetNetwork *m_net_ptr;$/;"	m	class:Router
m_net_ptr	src/mem/ruby/slicc_interface/AbstractController.hh	/^    Network* m_net_ptr;$/;"	m	class:AbstractController
m_network	src/mem/ruby/system/System.hh	/^    Network* m_network;$/;"	m	class:RubySystem
m_network_latency	src/mem/ruby/network/garnet/BaseGarnetNetwork.hh	/^    Stats::Vector m_network_latency;$/;"	m	class:BaseGarnetNetwork
m_network_links	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.hh	/^    NetworkLink_d* m_network_links[2];$/;"	m	class:GarnetExtLink_d
m_network_links	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.hh	/^    NetworkLink_d* m_network_links[2];$/;"	m	class:GarnetIntLink_d
m_network_links	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.hh	/^    NetworkLink* m_network_links[2];$/;"	m	class:GarnetExtLink
m_network_links	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.hh	/^    NetworkLink* m_network_links[2];$/;"	m	class:GarnetIntLink
m_network_ptr	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    GarnetNetwork_d *m_network_ptr;$/;"	m	class:Router_d
m_network_ptr	src/mem/ruby/network/simple/PerfectSwitch.hh	/^    SimpleNetwork* m_network_ptr;$/;"	m	class:PerfectSwitch
m_network_ptr	src/mem/ruby/network/simple/Switch.hh	/^    SimpleNetwork* m_network_ptr;$/;"	m	class:Switch
m_next	src/kern/tru64/mbuf.hh	/^#define m_next /;"	d
m_next_address	src/mem/ruby/system/TimerTable.hh	/^    mutable Address m_next_address;  \/\/ Only valid if m_next_valid is true$/;"	m	class:TimerTable
m_next_time	src/mem/ruby/system/TimerTable.hh	/^    mutable Cycles m_next_time; \/\/ Only valid if m_next_valid is true$/;"	m	class:TimerTable
m_next_valid	src/mem/ruby/system/TimerTable.hh	/^    mutable bool m_next_valid;$/;"	m	class:TimerTable
m_nextpkt	src/kern/tru64/mbuf.hh	/^#define m_nextpkt /;"	d
m_ni_buffers	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.hh	/^    std::vector<flitBuffer_d *>   m_ni_buffers;$/;"	m	class:NetworkInterface_d
m_ni_buffers	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.hh	/^    std::vector<flitBuffer *>   m_ni_buffers;$/;"	m	class:NetworkInterface
m_ni_credit_link	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.hh	/^    CreditLink_d *m_ni_credit_link;$/;"	m	class:NetworkInterface_d
m_ni_enqueue_time	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.hh	/^    std::vector<Time> m_ni_enqueue_time;$/;"	m	class:NetworkInterface_d
m_ni_flit_size	src/mem/ruby/network/garnet/BaseGarnetNetwork.hh	/^    int m_ni_flit_size;$/;"	m	class:BaseGarnetNetwork
m_nis	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.hh	/^    std::vector<NetworkInterface_d *> m_nis;   \/\/ All NI's in Network$/;"	m	class:GarnetNetwork_d
m_nis	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.hh	/^    std::vector<NetworkInterface *> m_nis; \/\/ All NI's in Network$/;"	m	class:GarnetNetwork
m_node	src/mem/ruby/network/simple/Throttle.hh	/^    NodeID m_node;$/;"	m	class:Throttle
m_node_a	src/mem/ruby/network/BasicLink.hh	/^    BasicRouter* m_node_a;$/;"	m	class:BasicIntLink
m_node_b	src/mem/ruby/network/BasicLink.hh	/^    BasicRouter* m_node_b;$/;"	m	class:BasicIntLink
m_nodes	src/mem/ruby/network/Network.hh	/^    uint32_t m_nodes;$/;"	m	class:Network
m_nodes	src/mem/ruby/network/Topology.hh	/^    NodeID m_nodes;$/;"	m	class:Topology
m_nonunit_filter	src/mem/ruby/structures/Prefetcher.hh	/^        std::vector<Address> m_nonunit_filter;$/;"	m	class:Prefetcher
m_nonunit_hit	src/mem/ruby/structures/Prefetcher.hh	/^        uint32_t *m_nonunit_hit;$/;"	m	class:Prefetcher
m_nonunit_index	src/mem/ruby/structures/Prefetcher.hh	/^        uint32_t m_nonunit_index;$/;"	m	class:Prefetcher
m_nonunit_stride	src/mem/ruby/structures/Prefetcher.hh	/^        int *m_nonunit_stride;$/;"	m	class:Prefetcher
m_normalize_scale	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_normalize_scale;$/;"	m	class:TechParameter
m_not_avail_count	src/mem/ruby/buffers/MessageBuffer.hh	/^    int m_not_avail_count;  \/\/ count the # of times I didn't have N$/;"	m	class:MessageBuffer
m_num_buffer_reads	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.hh	/^    std::vector<double> m_num_buffer_reads;$/;"	m	class:InputUnit_d
m_num_buffer_writes	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.hh	/^    std::vector<double> m_num_buffer_writes;$/;"	m	class:InputUnit_d
m_num_cpus	src/cpu/testers/directedtest/DirectedGenerator.hh	/^    int m_num_cpus;$/;"	m	class:DirectedGenerator
m_num_cpus	src/cpu/testers/rubytest/RubyTester.hh	/^    int m_num_cpus;$/;"	m	class:RubyTester
m_num_data_end	src/mem/ruby/network/orion/Buffer/SRAM.hh	/^    uint32_t m_num_data_end;$/;"	m	class:SRAM
m_num_directories	src/mem/ruby/system/DirectoryMemory.cc	/^int DirectoryMemory::m_num_directories = 0;$/;"	m	class:DirectoryMemory	file:
m_num_directories	src/mem/ruby/system/DirectoryMemory.hh	/^    static int m_num_directories;$/;"	m	class:DirectoryMemory
m_num_directories_bits	src/mem/ruby/system/DirectoryMemory.cc	/^int DirectoryMemory::m_num_directories_bits = 0;$/;"	m	class:DirectoryMemory	file:
m_num_directories_bits	src/mem/ruby/system/DirectoryMemory.hh	/^    static int m_num_directories_bits;$/;"	m	class:DirectoryMemory
m_num_entries	src/mem/ruby/system/DirectoryMemory.hh	/^    uint64 m_num_entries;$/;"	m	class:DirectoryMemory
m_num_entry	src/mem/ruby/network/orion/Buffer/Buffer.hh	/^    uint32_t m_num_entry;$/;"	m	class:Buffer
m_num_entry	src/mem/ruby/network/orion/Buffer/Register.hh	/^    uint32_t m_num_entry;$/;"	m	class:Register
m_num_entry	src/mem/ruby/network/orion/Buffer/SRAM.hh	/^    uint32_t m_num_entry;$/;"	m	class:SRAM
m_num_hashes	src/mem/ruby/filters/H3BloomFilter.hh	/^    int m_num_hashes;$/;"	m	class:H3BloomFilter
m_num_hashes	src/mem/ruby/filters/MultiBitSelBloomFilter.hh	/^    int m_num_hashes;$/;"	m	class:MultiBitSelBloomFilter
m_num_in	src/mem/ruby/network/orion/Crossbar/Crossbar.hh	/^    uint32_t m_num_in;$/;"	m	class:Crossbar
m_num_in_1st	src/mem/ruby/network/orion/Buffer/DecoderUnit.hh	/^    uint32_t m_num_in_1st;$/;"	m	class:DecoderUnit
m_num_in_2nd	src/mem/ruby/network/orion/Buffer/DecoderUnit.hh	/^    uint32_t m_num_in_2nd;$/;"	m	class:DecoderUnit
m_num_in_port	src/mem/ruby/network/orion/Allocator/SWAllocator.hh	/^    uint32_t m_num_in_port;$/;"	m	class:SWAllocator
m_num_in_port	src/mem/ruby/network/orion/Allocator/VCAllocator.hh	/^    uint32_t m_num_in_port;$/;"	m	class:VCAllocator
m_num_in_port	src/mem/ruby/network/orion/OrionConfig.hh	/^    uint32_t m_num_in_port;$/;"	m	class:OrionConfig
m_num_in_port	src/mem/ruby/network/orion/OrionRouter.hh	/^    uint32_t m_num_in_port;$/;"	m	class:OrionRouter
m_num_in_seg	src/mem/ruby/network/orion/Crossbar/Crossbar.hh	/^    uint32_t m_num_in_seg;$/;"	m	class:Crossbar
m_num_inports	src/mem/ruby/network/garnet/fixed-pipeline/SWallocator_d.hh	/^    int m_num_inports, m_num_outports;$/;"	m	class:SWallocator_d
m_num_inports	src/mem/ruby/network/garnet/fixed-pipeline/Switch_d.hh	/^    int m_num_inports;$/;"	m	class:Switch_d
m_num_inports	src/mem/ruby/network/garnet/fixed-pipeline/VCallocator_d.hh	/^    int m_num_inports;$/;"	m	class:VCallocator_d
m_num_inst_ports	src/cpu/testers/rubytest/RubyTester.hh	/^    int m_num_inst_ports;$/;"	m	class:RubyTester
m_num_levels	src/mem/ruby/system/PseudoLRUPolicy.hh	/^    unsigned int m_num_levels;         \/** number of levels in the tree *\/$/;"	m	class:PseudoLRUPolicy
m_num_nonunit_filters	src/mem/ruby/structures/Prefetcher.hh	/^        uint32_t m_num_nonunit_filters;$/;"	m	class:Prefetcher
m_num_of_sequencers	src/mem/ruby/profiler/AddressProfiler.hh	/^    int m_num_of_sequencers;$/;"	m	class:AddressProfiler
m_num_out	src/mem/ruby/network/orion/Crossbar/Crossbar.hh	/^    uint32_t m_num_out;$/;"	m	class:Crossbar
m_num_out_0th	src/mem/ruby/network/orion/Buffer/DecoderUnit.hh	/^    uint32_t m_num_out_0th;$/;"	m	class:DecoderUnit
m_num_out_1st	src/mem/ruby/network/orion/Buffer/DecoderUnit.hh	/^    uint32_t m_num_out_1st;$/;"	m	class:DecoderUnit
m_num_out_port	src/mem/ruby/network/orion/Allocator/SWAllocator.hh	/^    uint32_t m_num_out_port;$/;"	m	class:SWAllocator
m_num_out_port	src/mem/ruby/network/orion/Allocator/VCAllocator.hh	/^    uint32_t m_num_out_port;$/;"	m	class:VCAllocator
m_num_out_port	src/mem/ruby/network/orion/OrionConfig.hh	/^    uint32_t m_num_out_port;$/;"	m	class:OrionConfig
m_num_out_port	src/mem/ruby/network/orion/OrionRouter.hh	/^    uint32_t m_num_out_port;$/;"	m	class:OrionRouter
m_num_out_seg	src/mem/ruby/network/orion/Crossbar/Crossbar.hh	/^    uint32_t m_num_out_seg;$/;"	m	class:Crossbar
m_num_outports	src/mem/ruby/network/garnet/fixed-pipeline/SWallocator_d.hh	/^    int m_num_inports, m_num_outports;$/;"	m	class:SWallocator_d
m_num_outports	src/mem/ruby/network/garnet/fixed-pipeline/VCallocator_d.hh	/^    int m_num_outports;$/;"	m	class:VCallocator_d
m_num_pages	src/mem/ruby/system/MemoryVector.hh	/^    uint32_t m_num_pages;$/;"	m	class:MemoryVector
m_num_read_port	src/mem/ruby/network/orion/Buffer/Buffer.hh	/^    uint32_t m_num_read_port;$/;"	m	class:Buffer
m_num_read_port	src/mem/ruby/network/orion/Buffer/SRAM.hh	/^    uint32_t m_num_read_port;$/;"	m	class:SRAM
m_num_readers	src/cpu/testers/rubytest/Check.hh	/^    int m_num_readers;$/;"	m	class:Check
m_num_readers	src/cpu/testers/rubytest/CheckTable.hh	/^    int m_num_readers;$/;"	m	class:CheckTable
m_num_readers	src/cpu/testers/rubytest/RubyTester.hh	/^    int m_num_readers;$/;"	m	class:RubyTester
m_num_sets	src/mem/ruby/system/AbstractReplacementPolicy.hh	/^    unsigned m_num_sets;       \/** total number of sets *\/$/;"	m	class:AbstractReplacementPolicy
m_num_startup_pfs	src/mem/ruby/structures/Prefetcher.hh	/^        uint32_t m_num_startup_pfs;$/;"	m	class:Prefetcher
m_num_streams	src/mem/ruby/structures/Prefetcher.hh	/^        uint32_t m_num_streams;$/;"	m	class:Prefetcher
m_num_unit_filters	src/mem/ruby/structures/Prefetcher.hh	/^        uint32_t m_num_unit_filters;$/;"	m	class:Prefetcher
m_num_vc_per_vclass_ary	src/mem/ruby/network/orion/OrionRouter.hh	/^    uint32_t* m_num_vc_per_vclass_ary;$/;"	m	class:OrionRouter
m_num_vchannel	src/mem/ruby/network/orion/Allocator/SWAllocator.hh	/^    uint32_t m_num_vchannel;$/;"	m	class:SWAllocator
m_num_vchannel	src/mem/ruby/network/orion/Allocator/VCAllocator.hh	/^    uint32_t m_num_vchannel;$/;"	m	class:VCAllocator
m_num_vchannel	src/mem/ruby/network/orion/OrionConfig.hh	/^    uint32_t m_num_vchannel;$/;"	m	class:OrionConfig
m_num_vclass	src/mem/ruby/network/orion/Allocator/SWAllocator.hh	/^    uint32_t m_num_vclass;$/;"	m	class:SWAllocator
m_num_vclass	src/mem/ruby/network/orion/Allocator/VCAllocator.hh	/^    uint32_t m_num_vclass;$/;"	m	class:VCAllocator
m_num_vclass	src/mem/ruby/network/orion/OrionConfig.hh	/^    uint32_t m_num_vclass;$/;"	m	class:OrionConfig
m_num_vclass	src/mem/ruby/network/orion/OrionRouter.hh	/^    uint32_t m_num_vclass;$/;"	m	class:OrionRouter
m_num_vcs	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.hh	/^    int m_num_vcs;$/;"	m	class:InputUnit_d
m_num_vcs	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.hh	/^    int m_virtual_networks, m_num_vcs, m_vc_per_vnet;$/;"	m	class:NetworkInterface_d
m_num_vcs	src/mem/ruby/network/garnet/fixed-pipeline/OutputUnit_d.hh	/^    int m_num_vcs;$/;"	m	class:OutputUnit_d
m_num_vcs	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    int m_virtual_networks, m_num_vcs, m_vc_per_vnet;$/;"	m	class:Router_d
m_num_vcs	src/mem/ruby/network/garnet/fixed-pipeline/SWallocator_d.hh	/^    int m_num_vcs, m_vc_per_vnet;$/;"	m	class:SWallocator_d
m_num_vcs	src/mem/ruby/network/garnet/fixed-pipeline/Switch_d.hh	/^    int m_num_vcs;$/;"	m	class:Switch_d
m_num_vcs	src/mem/ruby/network/garnet/fixed-pipeline/VCallocator_d.hh	/^    int m_num_vcs, m_vc_per_vnet;$/;"	m	class:VCallocator_d
m_num_vcs	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.hh	/^    uint32_t m_virtual_networks, m_num_vcs, m_vc_per_vnet;$/;"	m	class:NetworkInterface
m_num_vcs	src/mem/ruby/network/garnet/flexible-pipeline/Router.hh	/^    int m_virtual_networks, m_num_vcs, m_vc_per_vnet;$/;"	m	class:Router
m_num_write_port	src/mem/ruby/network/orion/Buffer/Buffer.hh	/^    uint32_t m_num_write_port;$/;"	m	class:Buffer
m_num_write_port	src/mem/ruby/network/orion/Buffer/SRAM.hh	/^    uint32_t m_num_write_port;$/;"	m	class:SRAM
m_num_writers	src/cpu/testers/rubytest/Check.hh	/^    int m_num_writers;$/;"	m	class:Check
m_num_writers	src/cpu/testers/rubytest/CheckTable.hh	/^    int m_num_writers;$/;"	m	class:CheckTable
m_num_writers	src/cpu/testers/rubytest/RubyTester.hh	/^    int m_num_writers;$/;"	m	class:RubyTester
m_numa_high_bit	src/mem/ruby/system/DirectoryMemory.cc	/^int DirectoryMemory::m_numa_high_bit = 0;$/;"	m	class:DirectoryMemory	file:
m_numa_high_bit	src/mem/ruby/system/DirectoryMemory.hh	/^    static int m_numa_high_bit;$/;"	m	class:DirectoryMemory
m_number_of_TBEs	src/mem/ruby/slicc_interface/AbstractController.hh	/^    int m_number_of_TBEs;$/;"	m	class:AbstractController
m_number_of_TBEs	src/mem/ruby/system/TBETable.hh	/^    int m_number_of_TBEs;$/;"	m	class:TBETable
m_number_of_bits_per_level	src/mem/ruby/system/SparseMemory.hh	/^    int* m_number_of_bits_per_level;$/;"	m	class:SparseMemory
m_number_of_levels	src/mem/ruby/system/SparseMemory.hh	/^    int m_number_of_levels;$/;"	m	class:SparseMemory
m_number_of_pipe_stages	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.hh	/^    int m_number_of_pipe_stages;$/;"	m	class:GarnetNetwork
m_number_of_switches	src/mem/ruby/network/Topology.hh	/^    uint32_t m_number_of_switches;$/;"	m	class:Topology
m_offset	src/mem/ruby/filters/NonCountingBloomFilter.hh	/^    int m_offset;$/;"	m	class:NonCountingBloomFilter
m_oldRequest	src/mem/ruby/system/RubyMemoryControl.hh	/^    int* m_oldRequest;$/;"	m	class:RubyMemoryControl
m_ordered	src/mem/ruby/network/Network.hh	/^    std::vector<bool> m_ordered;$/;"	m	class:Network
m_ordering_set	src/mem/ruby/buffers/MessageBuffer.hh	/^    bool m_ordering_set;$/;"	m	class:MessageBuffer
m_orion_cfg_ptr	src/mem/ruby/network/orion/Buffer/Buffer.hh	/^    const OrionConfig* m_orion_cfg_ptr;$/;"	m	class:Buffer
m_orion_cfg_ptr	src/mem/ruby/network/orion/Clock.hh	/^    const OrionConfig* m_orion_cfg_ptr;$/;"	m	class:Clock
m_orion_cfg_ptr	src/mem/ruby/network/orion/OrionLink.hh	/^    const OrionConfig* m_orion_cfg_ptr;$/;"	m	class:OrionLink
m_orion_cfg_ptr	src/mem/ruby/network/orion/OrionRouter.hh	/^    const OrionConfig* m_orion_cfg_ptr;$/;"	m	class:OrionRouter
m_orion_cfg_ptr	src/mem/ruby/network/orion/TechParameter.hh	/^    const OrionConfig* m_orion_cfg_ptr;$/;"	m	class:TechParameter
m_out	src/mem/ruby/network/simple/PerfectSwitch.hh	/^    std::vector<std::vector<MessageBuffer*> > m_out;$/;"	m	class:PerfectSwitch
m_out	src/mem/ruby/network/simple/Throttle.hh	/^    std::vector<MessageBuffer*> m_out;$/;"	m	class:Throttle
m_out_buffer	src/mem/ruby/network/garnet/fixed-pipeline/OutputUnit_d.hh	/^    flitBuffer_d *m_out_buffer; \/\/ This is for the network link to consume$/;"	m	class:OutputUnit_d
m_out_link	src/mem/ruby/network/garnet/fixed-pipeline/OutputUnit_d.hh	/^    NetworkLink_d *m_out_link;$/;"	m	class:OutputUnit_d
m_out_link	src/mem/ruby/network/garnet/flexible-pipeline/Router.hh	/^    std::vector<NetworkLink *> m_out_link;$/;"	m	class:Router
m_out_port	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.hh	/^    int m_in_port, m_out_port;$/;"	m	class:NetworkLink
m_out_src_queue	src/mem/ruby/network/garnet/flexible-pipeline/Router.hh	/^    std::vector<flitBuffer *> m_out_src_queue;$/;"	m	class:Router
m_out_vc_state	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.hh	/^    std::vector<OutVcState_d *> m_out_vc_state;$/;"	m	class:NetworkInterface_d
m_out_vc_state	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.hh	/^    std::vector<OutVcState *> m_out_vc_state;$/;"	m	class:NetworkInterface
m_out_vc_state	src/mem/ruby/network/garnet/flexible-pipeline/Router.hh	/^    std::vector<std::vector<OutVcState *> > m_out_vc_state;$/;"	m	class:Router
m_outdrv_model	src/mem/ruby/network/orion/Buffer/OutdrvUnit.hh	/^    OutdrvModel m_outdrv_model;$/;"	m	class:OutdrvUnit
m_outdrv_model_str	src/mem/ruby/network/orion/Buffer/SRAM.hh	/^    string m_outdrv_model_str;$/;"	m	class:SRAM
m_outdrv_unit_ptr	src/mem/ruby/network/orion/Buffer/SRAM.hh	/^    OutdrvUnit* m_outdrv_unit_ptr;$/;"	m	class:SRAM
m_outport	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.hh	/^    int m_outport;$/;"	m	class:flit_d
m_output_unit	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    std::vector<OutputUnit_d *> m_output_unit;$/;"	m	class:Router_d
m_output_unit	src/mem/ruby/network/garnet/fixed-pipeline/SWallocator_d.hh	/^    std::vector<OutputUnit_d *> m_output_unit;$/;"	m	class:SWallocator_d
m_output_unit	src/mem/ruby/network/garnet/fixed-pipeline/Switch_d.hh	/^    std::vector<OutputUnit_d *> m_output_unit;$/;"	m	class:Switch_d
m_output_unit	src/mem/ruby/network/garnet/fixed-pipeline/VCallocator_d.hh	/^    std::vector<OutputUnit_d *> m_output_unit;$/;"	m	class:VCallocator_d
m_output_vc	src/mem/ruby/network/garnet/fixed-pipeline/VirtualChannel_d.hh	/^    int m_output_vc;$/;"	m	class:VirtualChannel_d
m_output_vc	src/mem/ruby/network/garnet/flexible-pipeline/InVcState.hh	/^    int m_output_vc;$/;"	m	class:InVcState
m_outstandReqHist	src/mem/ruby/profiler/Profiler.hh	/^    Stats::Histogram m_outstandReqHist;$/;"	m	class:Profiler
m_outstandReqHist	src/mem/ruby/system/Sequencer.hh	/^    Stats::Histogram m_outstandReqHist;$/;"	m	class:Sequencer
m_outstanding_count	src/mem/ruby/system/Sequencer.hh	/^    int m_outstanding_count;$/;"	m	class:Sequencer
m_outvc_is_req	src/mem/ruby/network/garnet/fixed-pipeline/VCallocator_d.hh	/^    std::vector<std::vector<bool> > m_outvc_is_req;$/;"	m	class:VCallocator_d
m_outvc_req	src/mem/ruby/network/garnet/fixed-pipeline/VCallocator_d.hh	/^    std::vector<std::vector<std::vector<std::vector<bool> > > > m_outvc_req;$/;"	m	class:VCallocator_d
m_outvc_state	src/mem/ruby/network/garnet/fixed-pipeline/OutputUnit_d.hh	/^    std::vector<OutVcState_d *> m_outvc_state; \/\/ vc state of downstream router$/;"	m	class:OutputUnit_d
m_p_nArray	src/mem/ruby/common/Set.hh	/^    long *m_p_nArray;      \/\/ an word array to hold the bits in the set$/;"	m	class:Set
m_p_nArray_Static	src/mem/ruby/common/Set.hh	/^    long m_p_nArray_Static[NUMBER_WORDS_PER_SET];$/;"	m	class:Set
m_page_filter	src/mem/ruby/filters/MultiGrainBloomFilter.hh	/^    std::vector<int> m_page_filter;$/;"	m	class:MultiGrainBloomFilter
m_page_filter_size	src/mem/ruby/filters/MultiGrainBloomFilter.hh	/^    int m_page_filter_size;$/;"	m	class:MultiGrainBloomFilter
m_page_filter_size_bits	src/mem/ruby/filters/MultiGrainBloomFilter.hh	/^    int m_page_filter_size_bits;$/;"	m	class:MultiGrainBloomFilter
m_page_offset_mask	src/mem/ruby/system/MemoryVector.hh	/^    const uint32_t m_page_offset_mask;$/;"	m	class:MemoryVector
m_pages	src/mem/ruby/system/MemoryVector.hh	/^    uint8_t **m_pages;$/;"	m	class:MemoryVector
m_par_filter_size	src/mem/ruby/filters/H3BloomFilter.hh	/^    int m_par_filter_size;$/;"	m	class:H3BloomFilter
m_par_filter_size	src/mem/ruby/filters/MultiBitSelBloomFilter.hh	/^    int m_par_filter_size;$/;"	m	class:MultiBitSelBloomFilter
m_par_filter_size_bits	src/mem/ruby/filters/H3BloomFilter.hh	/^    int m_par_filter_size_bits;$/;"	m	class:H3BloomFilter
m_par_filter_size_bits	src/mem/ruby/filters/MultiBitSelBloomFilter.hh	/^    int m_par_filter_size_bits;$/;"	m	class:MultiBitSelBloomFilter
m_params_map	src/mem/ruby/network/orion/OrionConfig.hh	/^    std::map<std::string, std::string> m_params_map;$/;"	m	class:OrionConfig
m_pc	src/cpu/testers/rubytest/Check.hh	/^    Address m_pc;$/;"	m	class:Check
m_pc_address	src/mem/ruby/recorder/CacheRecorder.hh	/^    physical_address_t m_pc_address;$/;"	m	class:TraceRecord
m_pending_message_count	src/mem/ruby/network/simple/PerfectSwitch.hh	/^    std::vector<int> m_pending_message_count;$/;"	m	class:PerfectSwitch
m_percent_writes	src/cpu/testers/directedtest/SeriesRequestGenerator.hh	/^    uint32_t m_percent_writes;$/;"	m	class:SeriesRequestGenerator
m_perfect_switch	src/mem/ruby/network/simple/Switch.hh	/^    PerfectSwitch* m_perfect_switch;$/;"	m	class:Switch
m_period	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_period;$/;"	m	class:TechParameter
m_permission	src/mem/ruby/system/PerfectCacheMemory.hh	/^    AccessPermission m_permission;$/;"	m	struct:PerfectCacheLineState
m_pktdat	src/kern/tru64/mbuf.hh	/^#define m_pktdat /;"	d
m_pkthdr	src/kern/tru64/mbuf.hh	/^#define m_pkthdr /;"	d
m_policy	src/mem/ruby/system/CacheMemory.hh	/^    std::string m_policy;$/;"	m	class:CacheMemory
m_port_req	src/mem/ruby/network/garnet/fixed-pipeline/SWallocator_d.hh	/^    std::vector<std::vector<bool> > m_port_req;$/;"	m	class:SWallocator_d
m_power_dyn	src/mem/ruby/network/garnet/fixed-pipeline/NetworkLink_d.hh	/^    double m_power_dyn;$/;"	m	class:NetworkLink_d
m_power_dyn	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    double m_power_dyn;$/;"	m	class:Router_d
m_power_sta	src/mem/ruby/network/garnet/fixed-pipeline/NetworkLink_d.hh	/^    double m_power_sta;$/;"	m	class:NetworkLink_d
m_power_sta	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    double m_power_sta;$/;"	m	class:Router_d
m_pre_load	src/mem/ruby/network/orion/Buffer/PrechargeUnit.hh	/^    double m_pre_load;$/;"	m	class:PrechargeUnit
m_pre_model	src/mem/ruby/network/orion/Buffer/PrechargeUnit.hh	/^    PrechargeModel m_pre_model;$/;"	m	class:PrechargeUnit
m_pre_size	src/mem/ruby/network/orion/Buffer/PrechargeUnit.hh	/^    double m_pre_size;$/;"	m	class:PrechargeUnit
m_pre_unit_load	src/mem/ruby/network/orion/Buffer/BitlineUnit.hh	/^    double m_pre_unit_load;$/;"	m	class:BitlineUnit
m_prefetch_cross_pages	src/mem/ruby/structures/Prefetcher.hh	/^        bool m_prefetch_cross_pages;$/;"	m	class:Prefetcher
m_prefetches	src/mem/ruby/system/CacheMemory.hh	/^    Stats::Formula m_prefetches;$/;"	m	class:CacheMemory
m_prio_heap	src/mem/ruby/buffers/MessageBuffer.hh	/^    std::vector<MessageBufferNode> m_prio_heap;$/;"	m	class:MessageBuffer
m_priority_rank	src/mem/ruby/buffers/MessageBuffer.hh	/^    int m_priority_rank;$/;"	m	class:MessageBuffer
m_profiler	src/mem/ruby/system/System.hh	/^    Profiler* m_profiler;$/;"	m	class:RubySystem
m_profiler_ptr	src/mem/ruby/system/RubyMemoryControl.hh	/^    MemCntrlProfiler* m_profiler_ptr;$/;"	m	class:RubyMemoryControl
m_programCounterAccessTrace	src/mem/ruby/profiler/AddressProfiler.hh	/^    AddressMap m_programCounterAccessTrace;$/;"	m	class:AddressProfiler
m_queueing_latency	src/mem/ruby/network/garnet/BaseGarnetNetwork.hh	/^    Stats::Vector m_queueing_latency;$/;"	m	class:BaseGarnetNetwork
m_ram	src/mem/ruby/system/DirectoryMemory.hh	/^    MemoryVector* m_ram;$/;"	m	class:DirectoryMemory
m_random_seed	src/mem/ruby/system/System.cc	/^int RubySystem::m_random_seed;$/;"	m	class:RubySystem	file:
m_random_seed	src/mem/ruby/system/System.hh	/^    static int m_random_seed;$/;"	m	class:RubySystem
m_randomization	src/mem/ruby/buffers/MessageBuffer.hh	/^    bool m_randomization;$/;"	m	class:MessageBuffer
m_randomization	src/mem/ruby/system/System.cc	/^bool RubySystem::m_randomization;$/;"	m	class:RubySystem	file:
m_randomization	src/mem/ruby/system/System.hh	/^    static bool m_randomization;$/;"	m	class:RubySystem
m_rank_bit_0	src/mem/ruby/system/RubyMemoryControl.hh	/^    int m_rank_bit_0;$/;"	m	class:RubyMemoryControl
m_rank_rank_delay	src/mem/ruby/system/RubyMemoryControl.hh	/^    int m_rank_rank_delay;$/;"	m	class:RubyMemoryControl
m_ranks_per_dimm	src/mem/ruby/profiler/MemCntrlProfiler.hh	/^    int m_ranks_per_dimm;$/;"	m	class:MemCntrlProfiler
m_ranks_per_dimm	src/mem/ruby/system/RubyMemoryControl.hh	/^    int m_ranks_per_dimm;$/;"	m	class:RubyMemoryControl
m_readRequestTable	src/mem/ruby/system/Sequencer.hh	/^    RequestTable m_readRequestTable;$/;"	m	class:Sequencer
m_read_write_delay	src/mem/ruby/system/RubyMemoryControl.hh	/^    int m_read_write_delay;$/;"	m	class:RubyMemoryControl
m_receiver	src/mem/ruby/buffers/MessageBuffer.hh	/^    ClockedObject* m_receiver;$/;"	m	class:MessageBuffer
m_records	src/mem/ruby/recorder/CacheRecorder.hh	/^    std::vector<TraceRecord*> m_records;$/;"	m	class:CacheRecorder
m_records_flushed	src/mem/ruby/recorder/CacheRecorder.hh	/^    uint64_t m_records_flushed;$/;"	m	class:CacheRecorder
m_records_read	src/mem/ruby/recorder/CacheRecorder.hh	/^    uint64_t m_records_read;$/;"	m	class:CacheRecorder
m_recycle_latency	src/mem/ruby/buffers/MessageBuffer.hh	/^    Cycles m_recycle_latency;$/;"	m	class:MessageBuffer
m_recycle_latency	src/mem/ruby/slicc_interface/AbstractController.hh	/^    Cycles m_recycle_latency;$/;"	m	class:AbstractController
m_refresh_bank	src/mem/ruby/system/RubyMemoryControl.hh	/^    int m_refresh_bank;       \/\/ which bank to refresh next$/;"	m	class:RubyMemoryControl
m_refresh_count	src/mem/ruby/system/RubyMemoryControl.hh	/^    int m_refresh_count;      \/\/ cycles until next refresh$/;"	m	class:RubyMemoryControl
m_refresh_period	src/mem/ruby/system/RubyMemoryControl.hh	/^    int m_refresh_period;$/;"	m	class:RubyMemoryControl
m_refresh_period_system	src/mem/ruby/system/RubyMemoryControl.hh	/^    int m_refresh_period_system;$/;"	m	class:RubyMemoryControl
m_reg_ptr	src/mem/ruby/network/orion/Buffer/Buffer.hh	/^    Register* m_reg_ptr;$/;"	m	class:Buffer
m_removes_per_level	src/mem/ruby/system/SparseMemory.hh	/^    Stats::Vector m_removes_per_level;$/;"	m	class:SparseMemory
m_replacementPolicy_ptr	src/mem/ruby/system/CacheMemory.hh	/^    AbstractReplacementPolicy *m_replacementPolicy_ptr;$/;"	m	class:CacheMemory
m_req_width	src/mem/ruby/network/orion/Allocator/Arbiter.hh	/^    uint32_t m_req_width;$/;"	m	class:Arbiter
m_request_to_write	src/mem/ruby/system/PersistentTable.hh	/^    NetDest m_request_to_write;$/;"	m	class:PersistentTableEntry
m_requests_completed	src/cpu/testers/directedtest/RubyDirectedTester.hh	/^    uint64 m_requests_completed;$/;"	m	class:RubyDirectedTester
m_requests_to_complete	src/cpu/testers/directedtest/RubyDirectedTester.hh	/^    uint64 m_requests_to_complete;$/;"	m	class:RubyDirectedTester
m_res_ialu	src/mem/ruby/network/orion/TechParameter.hh	/^    uint32_t m_res_ialu;$/;"	m	class:TechParameter
m_res_unit_len	src/mem/ruby/network/orion/Wire.hh	/^    double m_res_unit_len;$/;"	m	class:Wire
m_resource_stalls	src/mem/ruby/system/CacheMemory.hh	/^    bool m_resource_stalls;$/;"	m	class:CacheMemory
m_response_queue	src/mem/ruby/system/RubyMemoryControl.hh	/^    std::list<MemoryNode *> m_response_queue;$/;"	m	class:RubyMemoryControl
m_retryProfileHisto	src/mem/ruby/profiler/AddressProfiler.hh	/^    Histogram m_retryProfileHisto;$/;"	m	class:AddressProfiler
m_retryProfileHistoRead	src/mem/ruby/profiler/AddressProfiler.hh	/^    Histogram m_retryProfileHistoRead;$/;"	m	class:AddressProfiler
m_retryProfileHistoWrite	src/mem/ruby/profiler/AddressProfiler.hh	/^    Histogram m_retryProfileHistoWrite;$/;"	m	class:AddressProfiler
m_retryProfileMap	src/mem/ruby/profiler/AddressProfiler.hh	/^    AddressMap m_retryProfileMap;$/;"	m	class:AddressProfiler
m_roundRobin	src/mem/ruby/system/RubyMemoryControl.hh	/^    int m_roundRobin;         \/\/ which bank queue was last granted$/;"	m	class:RubyMemoryControl
m_round_robin_inport	src/mem/ruby/network/garnet/fixed-pipeline/SWallocator_d.hh	/^    std::vector<int> m_round_robin_inport;$/;"	m	class:SWallocator_d
m_round_robin_inport	src/mem/ruby/network/garnet/flexible-pipeline/Router.hh	/^    int m_round_robin_inport, m_round_robin_start; \/\/ for vc arbitration$/;"	m	class:Router
m_round_robin_invc	src/mem/ruby/network/garnet/fixed-pipeline/VCallocator_d.hh	/^    std::vector<std::vector<int> > m_round_robin_invc;$/;"	m	class:VCallocator_d
m_round_robin_invc	src/mem/ruby/network/garnet/flexible-pipeline/Router.hh	/^    std::vector<int> m_round_robin_invc; \/\/ For vc arbitration of each outport$/;"	m	class:Router
m_round_robin_outport	src/mem/ruby/network/garnet/fixed-pipeline/SWallocator_d.hh	/^    std::vector<int> m_round_robin_outport;$/;"	m	class:SWallocator_d
m_round_robin_outvc	src/mem/ruby/network/garnet/fixed-pipeline/VCallocator_d.hh	/^    std::vector<std::vector<std::pair<int, int> > > m_round_robin_outvc;$/;"	m	class:VCallocator_d
m_round_robin_start	src/mem/ruby/network/garnet/flexible-pipeline/Router.hh	/^    int m_round_robin_inport, m_round_robin_start; \/\/ for vc arbitration$/;"	m	class:Router
m_round_robin_start	src/mem/ruby/network/simple/PerfectSwitch.hh	/^    int m_round_robin_start;$/;"	m	class:PerfectSwitch
m_route	src/mem/ruby/network/garnet/flexible-pipeline/InVcState.hh	/^    int m_route;$/;"	m	class:InVcState
m_router	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.hh	/^    Router_d *m_router;$/;"	m	class:InputUnit_d
m_router	src/mem/ruby/network/garnet/fixed-pipeline/OutputUnit_d.hh	/^    Router_d *m_router;$/;"	m	class:OutputUnit_d
m_router	src/mem/ruby/network/garnet/fixed-pipeline/RoutingUnit_d.hh	/^    Router_d *m_router;$/;"	m	class:RoutingUnit_d
m_router	src/mem/ruby/network/garnet/fixed-pipeline/SWallocator_d.hh	/^    Router_d *m_router;$/;"	m	class:SWallocator_d
m_router	src/mem/ruby/network/garnet/fixed-pipeline/Switch_d.hh	/^    Router_d *m_router;$/;"	m	class:Switch_d
m_router	src/mem/ruby/network/garnet/fixed-pipeline/VCallocator_d.hh	/^    Router_d *m_router;$/;"	m	class:VCallocator_d
m_router	src/mem/ruby/network/garnet/flexible-pipeline/VCarbiter.hh	/^    Router *m_router;$/;"	m	class:VCarbiter
m_router_buffers	src/mem/ruby/network/garnet/flexible-pipeline/Router.hh	/^    std::vector<std::vector<flitBuffer *> > m_router_buffers;$/;"	m	class:Router
m_routers	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.hh	/^    std::vector<Router_d *> m_routers;   \/\/ All Routers in Network$/;"	m	class:GarnetNetwork_d
m_routers	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.hh	/^    std::vector<Router *> m_routers;   \/\/ All Routers in Network$/;"	m	class:GarnetNetwork
m_routing_table	src/mem/ruby/network/garnet/fixed-pipeline/RoutingUnit_d.hh	/^    std::vector<NetDest> m_routing_table;$/;"	m	class:RoutingUnit_d
m_routing_table	src/mem/ruby/network/garnet/flexible-pipeline/Router.hh	/^    std::vector<NetDest> m_routing_table;$/;"	m	class:Router
m_routing_table	src/mem/ruby/network/simple/PerfectSwitch.hh	/^    std::vector<NetDest> m_routing_table;$/;"	m	class:PerfectSwitch
m_routing_unit	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    RoutingUnit_d *m_routing_unit;$/;"	m	class:Router_d
m_rowdec_model_str	src/mem/ruby/network/orion/Buffer/SRAM.hh	/^    string m_rowdec_model_str;$/;"	m	class:SRAM
m_rowdec_unit_ptr	src/mem/ruby/network/orion/Buffer/SRAM.hh	/^    DecoderUnit* m_rowdec_unit_ptr;$/;"	m	class:SRAM
m_rowdec_width	src/mem/ruby/network/orion/Buffer/SRAM.hh	/^    uint32_t m_rowdec_width;$/;"	m	class:SRAM
m_ruu_issue_width	src/mem/ruby/network/orion/TechParameter.hh	/^    uint32_t m_ruu_issue_width;$/;"	m	class:TechParameter
m_ruu_size	src/mem/ruby/network/orion/TechParameter.hh	/^    uint32_t m_ruu_size;$/;"	m	class:TechParameter
m_sID	src/mem/ruby/network/simple/Throttle.hh	/^    int m_sID;$/;"	m	class:Throttle
m_sa_ptr	src/mem/ruby/network/orion/OrionRouter.hh	/^    SWAllocator* m_sa_ptr;$/;"	m	class:OrionRouter
m_scheduled_wakeups	src/mem/ruby/common/Consumer.hh	/^    std::set<Tick> m_scheduled_wakeups;$/;"	m	class:Consumer
m_sector_bits	src/mem/ruby/filters/BulkBloomFilter.hh	/^    int m_sector_bits;$/;"	m	class:BulkBloomFilter
m_sender	src/mem/ruby/buffers/MessageBuffer.hh	/^    ClockedObject* m_sender;$/;"	m	class:MessageBuffer
m_seq_map	src/mem/ruby/recorder/CacheRecorder.hh	/^    std::vector<Sequencer*> m_seq_map;$/;"	m	class:CacheRecorder
m_sequencer_ptr	src/mem/ruby/system/Sequencer.hh	/^        Sequencer *m_sequencer_ptr;$/;"	m	class:Sequencer::SequencerWakeupEvent
m_sharing	src/mem/ruby/profiler/AccessTraceForAddress.hh	/^    uint64 m_sharing;$/;"	m	class:AccessTraceForAddress
m_sharing_miss_counter	src/mem/ruby/profiler/AddressProfiler.hh	/^    int64 m_sharing_miss_counter;$/;"	m	class:AddressProfiler
m_size	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.hh	/^    int m_size;$/;"	m	class:flit_d
m_size	src/mem/ruby/network/garnet/flexible-pipeline/flit.hh	/^    int m_size;$/;"	m	class:flit
m_size	src/mem/ruby/system/MemoryVector.hh	/^    uint64 m_size;$/;"	m	class:MemoryVector
m_size_at_cycle_start	src/mem/ruby/buffers/MessageBuffer.hh	/^    unsigned int m_size_at_cycle_start;$/;"	m	class:MessageBuffer
m_size_bits	src/mem/ruby/system/DirectoryMemory.hh	/^    uint64 m_size_bits;$/;"	m	class:DirectoryMemory
m_size_bytes	src/mem/ruby/system/DirectoryMemory.hh	/^    uint64 m_size_bytes;$/;"	m	class:DirectoryMemory
m_size_last_time_size_checked	src/mem/ruby/buffers/MessageBuffer.hh	/^    unsigned int m_size_last_time_size_checked;$/;"	m	class:MessageBuffer
m_skip_bits	src/mem/ruby/filters/MultiBitSelBloomFilter.hh	/^    int m_skip_bits;$/;"	m	class:MultiBitSelBloomFilter
m_sparseMemory	src/mem/ruby/system/DirectoryMemory.hh	/^    SparseMemory* m_sparseMemory;$/;"	m	class:DirectoryMemory
m_sparse_memory_vector	src/mem/ruby/system/System.hh	/^    std::vector<SparseMemory*> m_sparse_memory_vector;$/;"	m	class:RubySystem
m_sram_ptr	src/mem/ruby/network/orion/Buffer/BitlineUnit.hh	/^    const SRAM* m_sram_ptr;$/;"	m	class:BitlineUnit
m_sram_ptr	src/mem/ruby/network/orion/Buffer/Buffer.hh	/^    SRAM* m_sram_ptr;$/;"	m	class:Buffer
m_sram_ptr	src/mem/ruby/network/orion/Buffer/MemUnit.hh	/^    const SRAM* m_sram_ptr;$/;"	m	class:MemUnit
m_sram_ptr	src/mem/ruby/network/orion/Buffer/OutdrvUnit.hh	/^    const SRAM* m_sram_ptr;$/;"	m	class:OutdrvUnit
m_sram_ptr	src/mem/ruby/network/orion/Buffer/PrechargeUnit.hh	/^    const SRAM* m_sram_ptr;$/;"	m	class:PrechargeUnit
m_sram_ptr	src/mem/ruby/network/orion/Buffer/WordlineUnit.hh	/^    const SRAM* m_sram_ptr;$/;"	m	class:WordlineUnit
m_stage	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.hh	/^    std::pair<flit_stage, Cycles> m_stage;$/;"	m	class:flit_d
m_stall_msg_map	src/mem/ruby/buffers/MessageBuffer.hh	/^    StallMsgMapType m_stall_msg_map;$/;"	m	class:MessageBuffer
m_stallsPerReq	src/mem/ruby/profiler/MemCntrlProfiler.hh	/^    Stats::Formula m_stallsPerReq;$/;"	m	class:MemCntrlProfiler
m_start_index_bit	src/mem/ruby/system/CacheMemory.hh	/^    int m_start_index_bit;$/;"	m	class:CacheMemory
m_starving	src/mem/ruby/system/PersistentTable.hh	/^    NetDest m_starving;$/;"	m	class:PersistentTableEntry
m_static_link_power	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.hh	/^    Stats::Scalar m_static_link_power;$/;"	m	class:GarnetNetwork_d
m_static_power_per_bit	src/mem/ruby/network/orion/OrionLink.hh	/^    double m_static_power_per_bit;$/;"	m	class:OrionLink
m_static_router_power	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.hh	/^    Stats::Scalar m_static_router_power;$/;"	m	class:GarnetNetwork_d
m_status	src/cpu/testers/directedtest/InvalidateGenerator.hh	/^    InvalidateGeneratorStatus m_status;$/;"	m	class:InvalidateGenerator
m_status	src/cpu/testers/directedtest/SeriesRequestGenerator.hh	/^    SeriesRequestGeneratorStatus m_status;$/;"	m	class:SeriesRequestGenerator
m_status	src/cpu/testers/rubytest/Check.hh	/^    TesterStatus m_status;$/;"	m	class:Check
m_store_count	src/cpu/testers/rubytest/Check.hh	/^    int m_store_count;$/;"	m	class:Check
m_store_count	src/mem/ruby/profiler/StoreTrace.hh	/^    Histogram m_store_count;$/;"	m	class:StoreTrace
m_store_first_to_last	src/mem/ruby/profiler/StoreTrace.hh	/^    Histogram m_store_first_to_last;$/;"	m	class:StoreTrace
m_store_first_to_stolen	src/mem/ruby/profiler/StoreTrace.hh	/^    Histogram m_store_first_to_stolen;$/;"	m	class:StoreTrace
m_store_last_to_stolen	src/mem/ruby/profiler/StoreTrace.hh	/^    Histogram m_store_last_to_stolen;$/;"	m	class:StoreTrace
m_store_waiting_on_load	src/mem/ruby/system/Sequencer.hh	/^    Stats::Scalar m_store_waiting_on_load;$/;"	m	class:Sequencer
m_store_waiting_on_store	src/mem/ruby/system/Sequencer.hh	/^    Stats::Scalar m_store_waiting_on_store;$/;"	m	class:Sequencer
m_stores	src/mem/ruby/profiler/AccessTraceForAddress.hh	/^    uint64 m_stores;$/;"	m	class:AccessTraceForAddress
m_stores_this_interval	src/mem/ruby/profiler/StoreTrace.hh	/^    int m_stores_this_interval;$/;"	m	class:StoreTrace
m_strict_fifo	src/mem/ruby/buffers/MessageBuffer.hh	/^    bool m_strict_fifo;$/;"	m	class:MessageBuffer
m_stride	src/mem/ruby/structures/Prefetcher.hh	/^        int m_stride;$/;"	m	class:PrefetchEntry
m_sumSamples	src/mem/ruby/common/Histogram.hh	/^    int64 m_sumSamples;   \/\/ the sum of all samples$/;"	m	class:Histogram
m_sumSquaredSamples	src/mem/ruby/common/Histogram.hh	/^    uint64_t m_sumSquaredSamples; \/\/ the sum of the square of all samples$/;"	m	class:Histogram
m_sw_alloc	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    SWallocator_d *m_sw_alloc;$/;"	m	class:Router_d
m_sw_prefetches	src/mem/ruby/system/CacheMemory.hh	/^    Stats::Scalar m_sw_prefetches;$/;"	m	class:CacheMemory
m_switch	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    Switch_d *m_switch;$/;"	m	class:Router_d
m_switch_buffer	src/mem/ruby/network/garnet/fixed-pipeline/Switch_d.hh	/^    std::vector<flitBuffer_d *> m_switch_buffer;$/;"	m	class:Switch_d
m_switch_id	src/mem/ruby/network/simple/PerfectSwitch.hh	/^    SwitchID m_switch_id;$/;"	m	class:PerfectSwitch
m_switches	src/mem/ruby/network/simple/SimpleNetwork.hh	/^    std::vector<Switch*> m_switches;$/;"	m	class:SimpleNetwork
m_tFaw	src/mem/ruby/system/RubyMemoryControl.hh	/^    int m_tFaw;$/;"	m	class:RubyMemoryControl
m_tag_index	src/mem/ruby/system/CacheMemory.hh	/^    m5::hash_map<Address, int> m_tag_index;$/;"	m	class:CacheMemory
m_tech_node	src/mem/ruby/network/orion/TechParameter.hh	/^    unsigned int m_tech_node;$/;"	m	class:TechParameter
m_tech_param_ptr	src/mem/ruby/network/orion/Allocator/Arbiter.hh	/^    const TechParameter* m_tech_param_ptr;$/;"	m	class:Arbiter
m_tech_param_ptr	src/mem/ruby/network/orion/Buffer/AmpUnit.hh	/^    const TechParameter* m_tech_param_ptr;$/;"	m	class:AmpUnit
m_tech_param_ptr	src/mem/ruby/network/orion/Buffer/BitlineUnit.hh	/^    const TechParameter* m_tech_param_ptr;$/;"	m	class:BitlineUnit
m_tech_param_ptr	src/mem/ruby/network/orion/Buffer/Buffer.hh	/^    const TechParameter* m_tech_param_ptr;$/;"	m	class:Buffer
m_tech_param_ptr	src/mem/ruby/network/orion/Buffer/DecoderUnit.hh	/^    const TechParameter* m_tech_param_ptr;$/;"	m	class:DecoderUnit
m_tech_param_ptr	src/mem/ruby/network/orion/Buffer/MemUnit.hh	/^    const TechParameter* m_tech_param_ptr;$/;"	m	class:MemUnit
m_tech_param_ptr	src/mem/ruby/network/orion/Buffer/OutdrvUnit.hh	/^    const TechParameter* m_tech_param_ptr;$/;"	m	class:OutdrvUnit
m_tech_param_ptr	src/mem/ruby/network/orion/Buffer/PrechargeUnit.hh	/^    const TechParameter* m_tech_param_ptr;$/;"	m	class:PrechargeUnit
m_tech_param_ptr	src/mem/ruby/network/orion/Buffer/Register.hh	/^    const TechParameter* m_tech_param_ptr;$/;"	m	class:Register
m_tech_param_ptr	src/mem/ruby/network/orion/Buffer/SRAM.hh	/^    const TechParameter* m_tech_param_ptr;$/;"	m	class:SRAM
m_tech_param_ptr	src/mem/ruby/network/orion/Buffer/WordlineUnit.hh	/^    const TechParameter* m_tech_param_ptr;$/;"	m	class:WordlineUnit
m_tech_param_ptr	src/mem/ruby/network/orion/Clock.hh	/^    const TechParameter* m_tech_param_ptr;$/;"	m	class:Clock
m_tech_param_ptr	src/mem/ruby/network/orion/Crossbar/Crossbar.hh	/^    const TechParameter* m_tech_param_ptr;$/;"	m	class:Crossbar
m_tech_param_ptr	src/mem/ruby/network/orion/FlipFlop.hh	/^    const TechParameter* m_tech_param_ptr;$/;"	m	class:FlipFlop
m_tech_param_ptr	src/mem/ruby/network/orion/OrionConfig.hh	/^    TechParameter* m_tech_param_ptr;$/;"	m	class:OrionConfig
m_tech_param_ptr	src/mem/ruby/network/orion/Wire.hh	/^    const TechParameter* m_tech_param_ptr;$/;"	m	class:Wire
m_temp_filter	src/mem/ruby/filters/BulkBloomFilter.hh	/^    std::vector<int> m_temp_filter;$/;"	m	class:BulkBloomFilter
m_tester_ptr	src/cpu/testers/rubytest/Check.hh	/^    RubyTester* m_tester_ptr;$/;"	m	class:Check
m_tester_ptr	src/cpu/testers/rubytest/CheckTable.hh	/^    RubyTester* m_tester_ptr;$/;"	m	class:CheckTable
m_tfalldata	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_tfalldata;$/;"	m	class:TechParameter
m_tfalltag	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_tfalltag;$/;"	m	class:TechParameter
m_tfaw_count	src/mem/ruby/system/RubyMemoryControl.hh	/^    int* m_tfaw_count;$/;"	m	class:RubyMemoryControl
m_tfaw_shift	src/mem/ruby/system/RubyMemoryControl.hh	/^    uint64* m_tfaw_shift;$/;"	m	class:RubyMemoryControl
m_throttles	src/mem/ruby/network/simple/Switch.hh	/^    std::vector<Throttle*> m_throttles;$/;"	m	class:Switch
m_time	src/mem/ruby/buffers/MessageBufferNode.hh	/^    Tick m_time;$/;"	m	class:MessageBufferNode
m_time	src/mem/ruby/network/garnet/fixed-pipeline/OutVcState_d.hh	/^    Cycles m_time;$/;"	m	class:OutVcState_d
m_time	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.hh	/^    Cycles m_enqueue_time, m_time;$/;"	m	class:flit_d
m_time	src/mem/ruby/network/garnet/flexible-pipeline/InVcState.hh	/^    Cycles m_time;$/;"	m	class:InVcState
m_time	src/mem/ruby/network/garnet/flexible-pipeline/OutVcState.hh	/^    Cycles m_time;$/;"	m	class:OutVcState
m_time	src/mem/ruby/network/garnet/flexible-pipeline/flit.hh	/^    Cycles m_enqueue_time, m_time;$/;"	m	class:flit
m_time	src/mem/ruby/recorder/CacheRecorder.hh	/^    Time m_time;$/;"	m	class:TraceRecord
m_time	src/mem/ruby/slicc_interface/Message.hh	/^    Tick m_time;$/;"	m	class:Message
m_time	src/mem/ruby/system/MemoryNode.hh	/^    Cycles m_time;$/;"	m	class:MemoryNode
m_time_last_time_enqueue	src/mem/ruby/buffers/MessageBuffer.hh	/^    Cycles m_time_last_time_enqueue;$/;"	m	class:MessageBuffer
m_time_last_time_pop	src/mem/ruby/buffers/MessageBuffer.hh	/^    Tick m_time_last_time_pop;$/;"	m	class:MessageBuffer
m_time_last_time_size_checked	src/mem/ruby/buffers/MessageBuffer.hh	/^    Cycles m_time_last_time_size_checked;$/;"	m	class:MessageBuffer
m_toNetQueues	src/mem/ruby/network/Network.hh	/^    std::vector<std::vector<MessageBuffer*> > m_toNetQueues;$/;"	m	class:Network
m_topology_ptr	src/mem/ruby/network/Network.hh	/^    Topology* m_topology_ptr;$/;"	m	class:Network
m_total	src/mem/ruby/profiler/AccessTraceForAddress.hh	/^    uint64 m_total;$/;"	m	class:AccessTraceForAddress
m_totalStalls	src/mem/ruby/profiler/MemCntrlProfiler.hh	/^    Stats::Formula m_totalStalls;$/;"	m	class:MemCntrlProfiler
m_total_adds	src/mem/ruby/system/SparseMemory.hh	/^    Stats::Scalar m_total_adds;$/;"	m	class:SparseMemory
m_total_banks	src/mem/ruby/system/RubyMemoryControl.hh	/^    int m_total_banks;$/;"	m	class:RubyMemoryControl
m_total_link_power	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.hh	/^    Stats::Formula m_total_link_power;$/;"	m	class:GarnetNetwork_d
m_total_num_vc	src/mem/ruby/network/orion/OrionRouter.hh	/^    uint32_t m_total_num_vc;$/;"	m	class:OrionRouter
m_total_number_of_bits	src/mem/ruby/system/SparseMemory.hh	/^    int m_total_number_of_bits;$/;"	m	class:SparseMemory
m_total_ranks	src/mem/ruby/system/RubyMemoryControl.hh	/^    int m_total_ranks;$/;"	m	class:RubyMemoryControl
m_total_removes	src/mem/ruby/system/SparseMemory.hh	/^    Stats::Scalar m_total_removes;$/;"	m	class:SparseMemory
m_total_router_power	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.hh	/^    Stats::Formula m_total_router_power;$/;"	m	class:GarnetNetwork_d
m_total_samples	src/mem/ruby/profiler/StoreTrace.hh	/^    int64 m_total_samples; \/\/ Total number of store lifetimes of this line$/;"	m	class:StoreTrace
m_total_size_bytes	src/mem/ruby/system/DirectoryMemory.cc	/^uint64_t DirectoryMemory::m_total_size_bytes = 0;$/;"	m	class:DirectoryMemory	file:
m_total_size_bytes	src/mem/ruby/system/DirectoryMemory.hh	/^    static uint64_t m_total_size_bytes;$/;"	m	class:DirectoryMemory
m_touched_by	src/mem/ruby/profiler/AccessTraceForAddress.hh	/^    Set m_touched_by;$/;"	m	class:AccessTraceForAddress
m_train_misses	src/mem/ruby/structures/Prefetcher.hh	/^        uint32_t m_train_misses;$/;"	m	class:Prefetcher
m_trans_type	src/mem/ruby/network/orion/Crossbar/Crossbar.hh	/^    TransType m_trans_type;$/;"	m	class:Crossbar
m_transistor_type	src/mem/ruby/network/orion/TechParameter.hh	/^    TransistorType m_transistor_type;$/;"	m	class:TechParameter
m_transitions_per_cycle	src/mem/ruby/slicc_interface/AbstractController.hh	/^    int m_transitions_per_cycle;$/;"	m	class:AbstractController
m_trees	src/mem/ruby/system/PseudoLRUPolicy.hh	/^    uint64* m_trees;                   \/** bit representation of the$/;"	m	class:PseudoLRUPolicy
m_tsensedata	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_tsensedata;$/;"	m	class:TechParameter
m_tsensetag	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_tsensetag;$/;"	m	class:TechParameter
m_type	src/kern/tru64/mbuf.hh	/^#define m_type /;"	d
m_type	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.hh	/^    flit_type m_type;$/;"	m	class:flit_d
m_type	src/mem/ruby/network/garnet/flexible-pipeline/flit.hh	/^    flit_type m_type;$/;"	m	class:flit
m_type	src/mem/ruby/recorder/CacheRecorder.hh	/^    RubyRequestType m_type;$/;"	m	class:TraceRecord
m_type	src/mem/ruby/structures/Prefetcher.hh	/^        RubyRequestType m_type;$/;"	m	class:PrefetchEntry
m_type	src/mem/ruby/system/Sequencer.hh	/^    RubyRequestType m_type;$/;"	m	struct:SequencerRequest
m_typeLatencyHist	src/mem/ruby/profiler/Profiler.hh	/^    std::vector<Stats::Histogram *> m_typeLatencyHist;$/;"	m	class:Profiler
m_typeLatencyHist	src/mem/ruby/system/Sequencer.hh	/^    std::vector<Stats::Histogram *> m_typeLatencyHist;$/;"	m	class:Sequencer
m_uncompressed_trace	src/mem/ruby/recorder/CacheRecorder.hh	/^    uint8_t* m_uncompressed_trace;$/;"	m	class:CacheRecorder
m_uncompressed_trace_size	src/mem/ruby/recorder/CacheRecorder.hh	/^    uint64_t m_uncompressed_trace_size;$/;"	m	class:CacheRecorder
m_unit_filter	src/mem/ruby/structures/Prefetcher.hh	/^        std::vector<Address> m_unit_filter;$/;"	m	class:Prefetcher
m_unit_filter_hit	src/mem/ruby/structures/Prefetcher.hh	/^        uint32_t *m_unit_filter_hit;$/;"	m	class:Prefetcher
m_unit_filter_index	src/mem/ruby/structures/Prefetcher.hh	/^        uint32_t m_unit_filter_index;$/;"	m	class:Prefetcher
m_units_remaining	src/mem/ruby/network/simple/Throttle.hh	/^    std::vector<int> m_units_remaining;$/;"	m	class:Throttle
m_use_map	src/mem/ruby/system/DirectoryMemory.hh	/^    bool m_use_map;$/;"	m	class:DirectoryMemory
m_use_time	src/mem/ruby/structures/Prefetcher.hh	/^        Cycles m_use_time;$/;"	m	class:PrefetchEntry
m_user	src/mem/ruby/profiler/AccessTraceForAddress.hh	/^    uint64 m_user;$/;"	m	class:AccessTraceForAddress
m_usingNetworkTester	src/mem/ruby/system/Sequencer.hh	/^    bool m_usingNetworkTester;$/;"	m	class:Sequencer
m_usingRubyTester	src/mem/ruby/system/RubyPort.hh	/^    bool m_usingRubyTester;$/;"	m	class:RubyPort
m_va_ary_ptr	src/mem/ruby/network/orion/OrionRouter.hh	/^    VCAllocator** m_va_ary_ptr;$/;"	m	class:OrionRouter
m_va_model	src/mem/ruby/network/orion/Allocator/VCAllocator.hh	/^    VAModel m_va_model;$/;"	m	class:VCAllocator
m_value	src/cpu/testers/rubytest/Check.hh	/^    uint8_t m_value;$/;"	m	class:Check
m_value	src/mem/ruby/network/simple/PerfectSwitch.hh	/^    int m_value;$/;"	m	struct:LinkOrder
m_vc	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.hh	/^    int m_vc;$/;"	m	class:flit_d
m_vc	src/mem/ruby/network/garnet/flexible-pipeline/flit.hh	/^    int m_vc;$/;"	m	class:flit
m_vc_alloc	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    VCallocator_d *m_vc_alloc;$/;"	m	class:Router_d
m_vc_allocator	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.hh	/^    std::vector<int> m_vc_allocator;$/;"	m	class:NetworkInterface_d
m_vc_allocator	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.hh	/^    std::vector<int> m_vc_allocator;$/;"	m	class:NetworkInterface
m_vc_arbiter	src/mem/ruby/network/garnet/flexible-pipeline/Router.hh	/^    VCarbiter *m_vc_arbiter;$/;"	m	class:Router
m_vc_load	src/mem/ruby/network/garnet/fixed-pipeline/NetworkLink_d.hh	/^    std::vector<unsigned int> m_vc_load;$/;"	m	class:NetworkLink_d
m_vc_load	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.hh	/^    std::vector<unsigned int> m_vc_load;$/;"	m	class:NetworkLink
m_vc_per_vnet	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.hh	/^    int m_vc_per_vnet;$/;"	m	class:InputUnit_d
m_vc_per_vnet	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.hh	/^    int m_virtual_networks, m_num_vcs, m_vc_per_vnet;$/;"	m	class:NetworkInterface_d
m_vc_per_vnet	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    int m_virtual_networks, m_num_vcs, m_vc_per_vnet;$/;"	m	class:Router_d
m_vc_per_vnet	src/mem/ruby/network/garnet/fixed-pipeline/SWallocator_d.hh	/^    int m_num_vcs, m_vc_per_vnet;$/;"	m	class:SWallocator_d
m_vc_per_vnet	src/mem/ruby/network/garnet/fixed-pipeline/VCallocator_d.hh	/^    int m_num_vcs, m_vc_per_vnet;$/;"	m	class:VCallocator_d
m_vc_per_vnet	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.hh	/^    uint32_t m_virtual_networks, m_num_vcs, m_vc_per_vnet;$/;"	m	class:NetworkInterface
m_vc_per_vnet	src/mem/ruby/network/garnet/flexible-pipeline/Router.hh	/^    int m_virtual_networks, m_num_vcs, m_vc_per_vnet;$/;"	m	class:Router
m_vc_round_robin	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.hh	/^    int m_vc_round_robin; \/\/ For round robin scheduling$/;"	m	class:NetworkInterface_d
m_vc_round_robin	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.hh	/^    int m_vc_round_robin; \/\/ For round robin scheduling$/;"	m	class:NetworkInterface
m_vc_round_robin	src/mem/ruby/network/garnet/flexible-pipeline/Router.hh	/^    std::vector<int> m_vc_round_robin; \/\/ For scheduling of out source queues$/;"	m	class:Router
m_vc_select_ptr	src/mem/ruby/network/orion/Allocator/VCAllocator.hh	/^    Buffer* m_vc_select_ptr;$/;"	m	class:VCAllocator
m_vc_state	src/mem/ruby/network/garnet/fixed-pipeline/OutVcState_d.hh	/^    VC_state_type m_vc_state;$/;"	m	class:OutVcState_d
m_vc_state	src/mem/ruby/network/garnet/fixed-pipeline/VirtualChannel_d.hh	/^    std::pair<VC_state_type, Cycles> m_vc_state; \/\/ I\/R\/V\/A\/C$/;"	m	class:VirtualChannel_d
m_vc_state	src/mem/ruby/network/garnet/flexible-pipeline/InVcState.hh	/^    VC_state_type m_vc_state;$/;"	m	class:InVcState
m_vc_state	src/mem/ruby/network/garnet/flexible-pipeline/OutVcState.hh	/^    VC_state_type m_vc_state;$/;"	m	class:OutVcState
m_vc_winners	src/mem/ruby/network/garnet/fixed-pipeline/SWallocator_d.hh	/^    std::vector<std::vector<int> > m_vc_winners; \/\/ a list for each outport$/;"	m	class:SWallocator_d
m_vcs	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.hh	/^    std::vector<VirtualChannel_d *> m_vcs;$/;"	m	class:InputUnit_d
m_vcs_per_vnet	src/mem/ruby/network/garnet/BaseGarnetNetwork.hh	/^    int m_vcs_per_vnet;$/;"	m	class:BaseGarnetNetwork
m_vdd	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_vdd;$/;"	m	class:TechParameter
m_version	src/mem/ruby/slicc_interface/AbstractController.hh	/^    NodeID m_version;$/;"	m	class:AbstractController
m_version	src/mem/ruby/system/DirectoryMemory.hh	/^    int m_version;$/;"	m	class:DirectoryMemory
m_version	src/mem/ruby/system/RubyPort.hh	/^    uint32_t m_version;$/;"	m	class:RubyPort
m_virtual_networks	src/mem/ruby/network/Network.cc	/^uint32_t Network::m_virtual_networks;$/;"	m	class:Network	file:
m_virtual_networks	src/mem/ruby/network/Network.hh	/^    static uint32_t m_virtual_networks;$/;"	m	class:Network
m_virtual_networks	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.hh	/^    int m_virtual_networks, m_num_vcs, m_vc_per_vnet;$/;"	m	class:NetworkInterface_d
m_virtual_networks	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    int m_virtual_networks, m_num_vcs, m_vc_per_vnet;$/;"	m	class:Router_d
m_virtual_networks	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.hh	/^    uint32_t m_virtual_networks, m_num_vcs, m_vc_per_vnet;$/;"	m	class:NetworkInterface
m_virtual_networks	src/mem/ruby/network/garnet/flexible-pipeline/Router.hh	/^    int m_virtual_networks, m_num_vcs, m_vc_per_vnet;$/;"	m	class:Router
m_virtual_networks	src/mem/ruby/network/simple/PerfectSwitch.hh	/^    uint32_t m_virtual_networks;$/;"	m	class:PerfectSwitch
m_vnet	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.hh	/^    int m_vnet;$/;"	m	class:flit_d
m_vnet	src/mem/ruby/network/garnet/flexible-pipeline/flit.hh	/^    int m_vnet;$/;"	m	class:flit
m_vnet_id	src/mem/ruby/buffers/MessageBuffer.hh	/^    int m_vnet_id;$/;"	m	class:MessageBuffer
m_vnet_type	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.hh	/^    std::vector<VNET_type > m_vnet_type;$/;"	m	class:GarnetNetwork_d
m_vnets	src/mem/ruby/network/simple/Throttle.hh	/^    unsigned int m_vnets;$/;"	m	class:Throttle
m_vs_inv	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_vs_inv;$/;"	m	class:TechParameter
m_vth_comp_inv	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_vth_comp_inv;$/;"	m	class:TechParameter
m_vth_eval_inv	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_vth_eval_inv;$/;"	m	class:TechParameter
m_vth_inv_100x60	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_vth_inv_100x60;$/;"	m	class:TechParameter
m_vth_muxdrv1	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_vth_muxdrv1;$/;"	m	class:TechParameter
m_vth_muxdrv2	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_vth_muxdrv2;$/;"	m	class:TechParameter
m_vth_muxdrv3	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_vth_muxdrv3;$/;"	m	class:TechParameter
m_vth_nand_60x90	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_vth_nand_60x90;$/;"	m	class:TechParameter
m_vth_nor_12x4x1	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_vth_nor_12x4x1;$/;"	m	class:TechParameter
m_vth_nor_12x4x2	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_vth_nor_12x4x2;$/;"	m	class:TechParameter
m_vth_nor_12x4x3	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_vth_nor_12x4x3;$/;"	m	class:TechParameter
m_vth_nor_12x4x4	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_vth_nor_12x4x4;$/;"	m	class:TechParameter
m_vth_outdr_inv	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_vth_outdr_inv;$/;"	m	class:TechParameter
m_vth_outdr_nand	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_vth_outdr_nand;$/;"	m	class:TechParameter
m_vth_outdr_nor	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_vth_outdr_nor;$/;"	m	class:TechParameter
m_vth_outdrive	src/mem/ruby/network/orion/TechParameter.hh	/^    double m_vth_outdrive;$/;"	m	class:TechParameter
m_waiting_buffers	src/mem/ruby/slicc_interface/AbstractController.hh	/^    WaitingBufType m_waiting_buffers;$/;"	m	class:AbstractController
m_wakeup_frequency	src/cpu/testers/rubytest/RubyTester.hh	/^    int m_wakeup_frequency;$/;"	m	class:RubyTester
m_wakeups_wo_switch	src/mem/ruby/network/simple/PerfectSwitch.hh	/^    int m_wakeups_wo_switch;$/;"	m	class:PerfectSwitch
m_wakeups_wo_switch	src/mem/ruby/network/simple/Throttle.hh	/^    int m_wakeups_wo_switch;$/;"	m	class:Throttle
m_warmup_enabled	src/mem/ruby/system/System.hh	/^    bool m_warmup_enabled;$/;"	m	class:RubySystem
m_weight	src/mem/ruby/network/BasicLink.hh	/^    int m_weight;$/;"	m	class:BasicLink
m_weight_table	src/mem/ruby/network/garnet/fixed-pipeline/RoutingUnit_d.hh	/^    std::vector<int> m_weight_table;$/;"	m	class:RoutingUnit_d
m_width_spacing_model	src/mem/ruby/network/orion/Wire.hh	/^    WidthSpacingModel m_width_spacing_model;$/;"	m	class:Wire
m_wire_layer_type	src/mem/ruby/network/orion/TechParameter.hh	/^    WireLayerType m_wire_layer_type;$/;"	m	class:TechParameter
m_wl_len	src/mem/ruby/network/orion/Buffer/WordlineUnit.hh	/^    double m_wl_len;$/;"	m	class:WordlineUnit
m_wl_model	src/mem/ruby/network/orion/Buffer/WordlineUnit.hh	/^    WordlineModel m_wl_model;$/;"	m	class:WordlineUnit
m_wl_model_str	src/mem/ruby/network/orion/Buffer/SRAM.hh	/^    string m_wl_model_str;$/;"	m	class:SRAM
m_wl_unit_ptr	src/mem/ruby/network/orion/Buffer/SRAM.hh	/^    WordlineUnit* m_wl_unit_ptr;$/;"	m	class:SRAM
m_wl_wire_cap	src/mem/ruby/network/orion/Buffer/WordlineUnit.hh	/^    double m_wl_wire_cap;$/;"	m	class:WordlineUnit
m_writeRequestTable	src/mem/ruby/system/Sequencer.hh	/^    RequestTable m_writeRequestTable;$/;"	m	class:Sequencer
m_xbar_model	src/mem/ruby/network/orion/Crossbar/Crossbar.hh	/^    CrossbarModel m_xbar_model;$/;"	m	class:Crossbar
m_xbar_ptr	src/mem/ruby/network/orion/OrionRouter.hh	/^    Crossbar* m_xbar_ptr;$/;"	m	class:OrionRouter
ma	src/dev/pcireg.h	/^    MA ma;$/;"	m	struct:MSICAP
macAddr	src/dev/i8254xGBe.hh	/^    uint64_t macAddr;$/;"	m	class:IGbE
machInst	src/arch/arm/faults.hh	/^    ExtMachInst machInst;$/;"	m	class:ArmISA::ArmFault
machInst	src/arch/arm/faults.hh	/^    ExtMachInst machInst;$/;"	m	class:ArmISA::HypervisorTrap
machInst	src/arch/arm/faults.hh	/^    ExtMachInst machInst;$/;"	m	class:ArmISA::SecureMonitorTrap
machInst	src/arch/arm/faults.hh	/^    ExtMachInst machInst;$/;"	m	class:ArmISA::SupervisorTrap
machInst	src/cpu/static_inst.hh	/^    const ExtMachInst machInst;$/;"	m	class:StaticInst
machSyscallDescs	src/arch/alpha/tru64/process.cc	/^SyscallDesc AlphaTru64Process::machSyscallDescs[] = {$/;"	m	class:AlphaTru64Process	file:
machSyscallDescs	src/arch/alpha/tru64/process.hh	/^    static SyscallDesc machSyscallDescs[];$/;"	m	class:AlphaISA::AlphaTru64Process
mach_sctimes_0	src/kern/tru64/tru64_syscalls.hh	/^        mach_sctimes_0 = 70,$/;"	e	enum:SystemCalls::__anon103
mach_sctimes_1	src/kern/tru64/tru64_syscalls.hh	/^        mach_sctimes_1 = 71,$/;"	e	enum:SystemCalls::__anon103
mach_sctimes_10	src/kern/tru64/tru64_syscalls.hh	/^        mach_sctimes_10 = 80,$/;"	e	enum:SystemCalls::__anon103
mach_sctimes_11	src/kern/tru64/tru64_syscalls.hh	/^        mach_sctimes_11 = 81,$/;"	e	enum:SystemCalls::__anon103
mach_sctimes_2	src/kern/tru64/tru64_syscalls.hh	/^        mach_sctimes_2 = 72,$/;"	e	enum:SystemCalls::__anon103
mach_sctimes_3	src/kern/tru64/tru64_syscalls.hh	/^        mach_sctimes_3 = 73,$/;"	e	enum:SystemCalls::__anon103
mach_sctimes_4	src/kern/tru64/tru64_syscalls.hh	/^        mach_sctimes_4 = 74,$/;"	e	enum:SystemCalls::__anon103
mach_sctimes_5	src/kern/tru64/tru64_syscalls.hh	/^        mach_sctimes_5 = 75,$/;"	e	enum:SystemCalls::__anon103
mach_sctimes_6	src/kern/tru64/tru64_syscalls.hh	/^        mach_sctimes_6 = 76,$/;"	e	enum:SystemCalls::__anon103
mach_sctimes_7	src/kern/tru64/tru64_syscalls.hh	/^        mach_sctimes_7 = 77,$/;"	e	enum:SystemCalls::__anon103
mach_sctimes_8	src/kern/tru64/tru64_syscalls.hh	/^        mach_sctimes_8 = 78,$/;"	e	enum:SystemCalls::__anon103
mach_sctimes_9	src/kern/tru64/tru64_syscalls.hh	/^        mach_sctimes_9 = 79,$/;"	e	enum:SystemCalls::__anon103
mach_sctimes_port_alloc_dealloc	src/kern/tru64/tru64_syscalls.hh	/^        mach_sctimes_port_alloc_dealloc = 82,$/;"	e	enum:SystemCalls::__anon103
mach_strings	src/kern/tru64/tru64_syscalls.cc	/^    mach_strings[SystemCalls<Tru64>::MachNumber] = {$/;"	m	namespace:__anon101	file:
machine	src/kern/linux/linux.hh	/^        char machine[_SYS_NMLN];        \/\/!< Machine type.$/;"	m	struct:Linux::utsname
machine	src/kern/operatingsystem.hh	/^        char machine[_SYS_NMLN];        \/\/!< Machine type.$/;"	m	struct:OperatingSystem::__anon88
machine	src/kern/solaris/solaris.hh	/^        char machine[_SYS_NMLN];        \/\/!< Machine type.$/;"	m	struct:Solaris::utsname
machine	src/kern/tru64/tru64.hh	/^        char machine[_SYS_NMLN];        \/\/!< Machine type.$/;"	m	struct:Tru64::utsname
machineCount	src/mem/ruby/slicc_interface/RubySlicc_ComponentMapping.hh	/^machineCount(MachineType machType)$/;"	f
machineIDToMachineType	src/mem/ruby/slicc_interface/RubySlicc_ComponentMapping.hh	/^machineIDToMachineType(MachineID machID)$/;"	f
machineIDToNodeID	src/mem/ruby/slicc_interface/RubySlicc_ComponentMapping.hh	/^machineIDToNodeID(MachineID machID)$/;"	f
machine_type	src/arch/arm/ArmSystem.py	/^    machine_type = Param.ArmMachineType('RealView_PBX',$/;"	v	class:LinuxArmSystem
macroStaticInst	src/sim/insttracer.hh	/^    StaticInstPtr macroStaticInst;$/;"	m	class:Trace::InstRecord
macrocodeBlock	src/arch/x86/insts/macroop.hh	/^    const char *macrocodeBlock;$/;"	m	class:X86ISA::MacroopBase
macroop	src/cpu/base_dyn_inst.hh	/^    StaticInstPtr macroop;$/;"	m	class:BaseDynInst
macroop	src/cpu/o3/fetch.hh	/^    StaticInstPtr macroop[Impl::MaxThreads];$/;"	m	class:DefaultFetch
madvise	src/kern/linux/linux_syscalls.hh	/^    madvise = 118,$/;"	e	enum:SystemCalls::__anon87
madvise	src/kern/tru64/tru64_syscalls.hh	/^        madvise = 75,$/;"	e	enum:SystemCalls::__anon102
madvise1	src/kern/linux/linux_syscalls.hh	/^    madvise1 = 119,$/;"	e	enum:SystemCalls::__anon87
magic	src/arch/alpha/aout_machdep.h	/^    uint16_t    magic;          \/\/\/< magic number$/;"	m	struct:aout_exechdr
magic	src/base/loader/coff_sym.h	/^    coff_short  magic;          \/* to verify validity of the table *\/$/;"	m	struct:ecoff_symhdr
magic	src/base/loader/exec_ecoff.h	/^        coff_ushort magic;$/;"	m	struct:ecoff_aouthdr
magic	src/dev/etherdump.cc	/^    uint32_t magic;$/;"	m	struct:pcap_file_header	file:
magicNumber	src/proto/protoio.hh	/^    static const uint32_t magicNumber = 0x356d6567;$/;"	m	class:ProtoStream
magicSym	src/base/loader/coff_symconst.h	/^#define magicSym /;"	d
magicSym2	src/base/loader/coff_symconst.h	/^#define magicSym2 /;"	d
magic_number	src/base/bitmap.hh	/^        unsigned char magic_number[2];$/;"	m	struct:Bitmap::Magic
main	src/mem/slicc/main.py	/^def main(args=None):$/;"	f
main	src/python/m5/__init__.py	/^    from main import main$/;"	i
main	src/python/m5/main.py	/^def main(*args):$/;"	f
main	src/python/m5/util/jobfile.py	/^def main(conf=None):$/;"	f
main	src/sim/main.cc	/^main(int argc, char **argv)$/;"	f
main	src/unittest/bitvectest.cc	/^main()$/;"	f
main	src/unittest/circletest.cc	/^main()$/;"	f
main	src/unittest/cprintftest.cc	/^main()$/;"	f
main	src/unittest/cprintftime.cc	/^main()$/;"	f
main	src/unittest/initest.cc	/^main(int argc, char *argv[])$/;"	f
main	src/unittest/nmtest.cc	/^main(int argc, char *argv[])$/;"	f
main	src/unittest/rangemaptest.cc	/^main()$/;"	f
main	src/unittest/refcnttest.cc	/^main()$/;"	f
main	src/unittest/stattestmain.py	/^def main():$/;"	f
main	src/unittest/strnumtest.cc	/^main(int argc, char *argv[])$/;"	f
main	src/unittest/symtest.cc	/^main(int argc, char *argv[])$/;"	f
main	src/unittest/tokentest.cc	/^main(int argc, char *argv[])$/;"	f
main	src/unittest/trietest.cc	/^main()$/;"	f
mainEventQueue	src/sim/eventq.cc	/^vector<EventQueue *> mainEventQueue;$/;"	v
mainPkt	src/cpu/o3/lsq_unit.hh	/^        PacketPtr mainPkt;$/;"	m	class:LSQUnit::LSQSenderState
mainReq	src/cpu/translation.hh	/^    RequestPtr mainReq;$/;"	m	class:WholeTranslationState
mainq	src/python/m5/event.py	/^mainq = None$/;"	v
maintInt	src/dev/arm/vgic.hh	/^    int maintInt;$/;"	m	class:VGic
maintIntPosted	src/dev/arm/vgic.hh	/^    bool        maintIntPosted[VGIC_CPU_MAX];$/;"	m	class:VGic
major	src/arch/x86/bios/SMBios.py	/^    major = Param.UInt8(0, "major version number")$/;"	v	class:X86SMBiosBiosInformation
majorVer	src/arch/x86/bios/smbios.hh	/^    uint8_t majorVer;$/;"	m	class:X86ISA::SMBios::BiosInformation
majorVersion	src/arch/x86/bios/smbios.hh	/^        uint8_t majorVersion;$/;"	m	struct:X86ISA::SMBios::SMBiosTable::SMBiosHeader
major_version	src/arch/x86/bios/SMBios.py	/^    major_version = Param.UInt8(2, "major version number")$/;"	v	class:X86SMBiosSMBiosTable
makeAtomicResponse	src/mem/packet.hh	/^    makeAtomicResponse()$/;"	f	class:Packet
makeCRField	src/arch/power/insts/floating.hh	/^    makeCRField(double a, double b) const$/;"	f	class:PowerISA::FloatOp
makeCRField	src/arch/power/insts/integer.hh	/^    makeCRField(int32_t a, int32_t b, uint32_t xerSO) const$/;"	f	class:PowerISA::IntOp
makeCRField	src/arch/power/insts/integer.hh	/^    makeCRField(uint32_t a, uint32_t b, uint32_t xerSO) const$/;"	f	class:PowerISA::IntOp
makeConstructor	src/arch/isa_parser.py	/^    def makeConstructor(self, predRead, predWrite):$/;"	m	class:CCRegOperand
makeConstructor	src/arch/isa_parser.py	/^    def makeConstructor(self, predRead, predWrite):$/;"	m	class:ControlRegOperand
makeConstructor	src/arch/isa_parser.py	/^    def makeConstructor(self, predRead, predWrite):$/;"	m	class:FloatRegOperand
makeConstructor	src/arch/isa_parser.py	/^    def makeConstructor(self, predRead, predWrite):$/;"	m	class:IntRegOperand
makeConstructor	src/arch/isa_parser.py	/^    def makeConstructor(self, predRead, predWrite):$/;"	m	class:MemOperand
makeConstructor	src/arch/isa_parser.py	/^    def makeConstructor(self, predRead, predWrite):$/;"	m	class:PCStateOperand
makeDecl	src/arch/isa_parser.py	/^    def makeDecl(self):$/;"	m	class:MemOperand
makeDecl	src/arch/isa_parser.py	/^    def makeDecl(self):$/;"	m	class:Operand
makeDecl	src/arch/isa_parser.py	/^    def makeDecl(self):$/;"	m	class:PCStateOperand
makeDir	src/mem/slicc/symbols/SymbolTable.py	/^from m5.util import makeDir$/;"	i
makeDir	src/python/m5/util/__init__.py	/^def makeDir(path):$/;"	f
makeDouble	src/arch/arm/insts/vfp.hh	/^makeDouble(uint32_t low, uint32_t high)$/;"	f	namespace:ArmISA
makeFlagConstructor	src/arch/isa_parser.py	/^def makeFlagConstructor(flag_list):$/;"	f
makeInLink	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.cc	/^GarnetNetwork_d::makeInLink(NodeID src, SwitchID dest, BasicLink* link,$/;"	f	class:GarnetNetwork_d
makeInLink	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.cc	/^GarnetNetwork::makeInLink(NodeID src, SwitchID dest, BasicLink* link, $/;"	f	class:GarnetNetwork
makeInLink	src/mem/ruby/network/simple/SimpleNetwork.cc	/^SimpleNetwork::makeInLink(NodeID src, SwitchID dest, BasicLink* link, $/;"	f	class:SimpleNetwork
makeInternalLink	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.cc	/^GarnetNetwork_d::makeInternalLink(SwitchID src, SwitchID dest, BasicLink* link,$/;"	f	class:GarnetNetwork_d
makeInternalLink	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.cc	/^GarnetNetwork::makeInternalLink(SwitchID src, SwitchID dest, BasicLink* link,$/;"	f	class:GarnetNetwork
makeInternalLink	src/mem/ruby/network/simple/SimpleNetwork.cc	/^SimpleNetwork::makeInternalLink(SwitchID src, SwitchID dest, BasicLink* link, $/;"	f	class:SimpleNetwork
makeKvmCpuid	src/cpu/kvm/x86_cpu.cc	/^makeKvmCpuid(uint32_t function, uint32_t index,$/;"	f	file:
makeLineAddress	src/mem/ruby/common/Address.cc	/^Address::makeLineAddress()$/;"	f	class:Address
makeLineAddress	src/mem/ruby/slicc_interface/RubySlicc_Util.hh	/^makeLineAddress(Address addr)$/;"	f
makeLink	src/mem/ruby/network/Topology.cc	/^Topology::makeLink(Network *net, SwitchID src, SwitchID dest,$/;"	f	class:Topology
makeList	src/arch/isa_parser.py	/^def makeList(arg):$/;"	f
makeList	src/python/m5/util/__init__.py	/^def makeList(objOrList):$/;"	f
makeNextStrideAddress	src/mem/ruby/common/Address.cc	/^Address::makeNextStrideAddress(int stride)$/;"	f	class:Address
makeOutLink	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.cc	/^GarnetNetwork_d::makeOutLink(SwitchID src, NodeID dest, BasicLink* link,$/;"	f	class:GarnetNetwork_d
makeOutLink	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.cc	/^GarnetNetwork::makeOutLink(SwitchID src, NodeID dest, BasicLink* link, $/;"	f	class:GarnetNetwork
makeOutLink	src/mem/ruby/network/simple/SimpleNetwork.cc	/^SimpleNetwork::makeOutLink(SwitchID src, NodeID dest, BasicLink* link, $/;"	f	class:SimpleNetwork
makePageAddress	src/mem/ruby/common/Address.cc	/^Address::makePageAddress()$/;"	f	class:Address
makeRead	src/arch/isa_parser.py	/^    def makeRead(self, predRead):$/;"	m	class:CCRegOperand
makeRead	src/arch/isa_parser.py	/^    def makeRead(self, predRead):$/;"	m	class:ControlRegOperand
makeRead	src/arch/isa_parser.py	/^    def makeRead(self, predRead):$/;"	m	class:FloatRegOperand
makeRead	src/arch/isa_parser.py	/^    def makeRead(self, predRead):$/;"	m	class:IntRegOperand
makeRead	src/arch/isa_parser.py	/^    def makeRead(self, predRead):$/;"	m	class:MemOperand
makeRead	src/arch/isa_parser.py	/^    def makeRead(self, predRead):$/;"	m	class:PCStateOperand
makeRef	src/python/m5/params.py	/^    def makeRef(self, simobj):$/;"	m	class:Port
makeRef	src/python/m5/params.py	/^    def makeRef(self, simobj):$/;"	m	class:VectorPort
makeRequest	src/mem/ruby/system/DMASequencer.cc	/^DMASequencer::makeRequest(PacketPtr pkt)$/;"	f	class:DMASequencer
makeRequest	src/mem/ruby/system/RubyPortProxy.cc	/^RubyPortProxy::makeRequest(PacketPtr pkt)$/;"	f	class:RubyPortProxy
makeRequest	src/mem/ruby/system/Sequencer.cc	/^Sequencer::makeRequest(PacketPtr pkt)$/;"	f	class:Sequencer
makeResponse	src/mem/packet.hh	/^    makeResponse()$/;"	f	class:Packet
makeSP	src/arch/arm/intregs.hh	/^makeSP(IntRegIndex reg)$/;"	f	namespace:ArmISA
makeTimingResponse	src/mem/packet.hh	/^    makeTimingResponse()$/;"	f	class:Packet
makeWrite	src/arch/isa_parser.py	/^    def makeWrite(self, predWrite):$/;"	m	class:CCRegOperand
makeWrite	src/arch/isa_parser.py	/^    def makeWrite(self, predWrite):$/;"	m	class:ControlRegOperand
makeWrite	src/arch/isa_parser.py	/^    def makeWrite(self, predWrite):$/;"	m	class:FloatRegOperand
makeWrite	src/arch/isa_parser.py	/^    def makeWrite(self, predWrite):$/;"	m	class:IntRegOperand
makeWrite	src/arch/isa_parser.py	/^    def makeWrite(self, predWrite):$/;"	m	class:MemOperand
makeWrite	src/arch/isa_parser.py	/^    def makeWrite(self, predWrite):$/;"	m	class:PCStateOperand
make_case	src/arch/isa_parser.py	/^        def make_case(intlit):$/;"	f	function:ISAParser.p_case_label_0
make_version_list	src/python/m5/util/__init__.py	/^    def make_version_list(v):$/;"	f	function:compareVersions
malta	src/dev/mips/Malta.py	/^    malta = Param.Malta(Parent.any, "Malta")$/;"	v	class:MaltaCChip
malta	src/dev/mips/Malta.py	/^    malta = Param.Malta(Parent.any, "Malta")$/;"	v	class:MaltaIO
malta	src/dev/mips/Malta.py	/^    malta = Param.Malta(Parent.any, "Malta")$/;"	v	class:MaltaPChip
malta	src/dev/mips/malta_cchip.hh	/^    Malta *malta;$/;"	m	class:MaltaCChip
malta	src/dev/mips/malta_io.hh	/^        Malta *malta;$/;"	m	class:MaltaIO::RTC
malta	src/dev/mips/malta_io.hh	/^    Malta *malta;$/;"	m	class:MaltaIO
manager	src/sim/probe/Probe.py	/^    manager = Param.SimObject(Parent.any, "ProbeManager")$/;"	v	class:ProbeListenerObject
manager	src/sim/probe/probe.hh	/^    ProbeManager *manager;$/;"	m	class:ProbeListenerObject
manc	src/dev/i8254xGBe_defs.hh	/^    MANC manc;$/;"	m	struct:iGbReg::Regs
map	src/arch/arm/ArmSystem.py	/^    map = {'RealView_EB' : 827,$/;"	v	class:ArmMachineType
map	src/arch/x86/bios/IntelMP.py	/^    map = {"IOAddress" : 0,$/;"	v	class:X86IntelMPAddressType
map	src/arch/x86/bios/IntelMP.py	/^    map = {"ISACompatible" : 0,$/;"	v	class:X86IntelMPRangeList
map	src/arch/x86/bios/IntelMP.py	/^    map = {'ConformPolarity' : 0,$/;"	v	class:X86IntelMPPolarity
map	src/arch/x86/bios/IntelMP.py	/^    map = {'ConformTrigger' : 0,$/;"	v	class:X86IntelMPTriggerMode
map	src/arch/x86/bios/IntelMP.py	/^    map = {'INT' : 0,$/;"	v	class:X86IntelMPInterruptType
map	src/arch/x86/bios/SMBios.py	/^    map = {'ACPI' : 0,$/;"	v	class:ExtCharacteristic
map	src/arch/x86/bios/SMBios.py	/^    map = {'Unknown' : 2,$/;"	v	class:Characteristic
map	src/cpu/o3/rename_map.hh	/^    std::vector<PhysRegIndex> map;$/;"	m	class:SimpleRenameMap
map	src/dev/x86/I8259.py	/^    map = {'I8259Master' : 0,$/;"	v	class:X86I8259CascadeMode
map	src/mem/page_table.cc	/^PageTable::map(Addr vaddr, Addr paddr, int64_t size, bool clobber)$/;"	f	class:PageTable
map	src/sim/process.cc	/^Process::map(Addr vaddr, Addr paddr, int size)$/;"	f	class:Process
mapAddressToDirectoryVersion	src/mem/ruby/system/DirectoryMemory.cc	/^DirectoryMemory::mapAddressToDirectoryVersion(PhysAddress address)$/;"	f	class:DirectoryMemory
mapAddressToLocalIdx	src/mem/ruby/system/DirectoryMemory.cc	/^DirectoryMemory::mapAddressToLocalIdx(PhysAddress address)$/;"	f	class:DirectoryMemory
mapAddressToRange	src/mem/ruby/slicc_interface/RubySlicc_ComponentMapping.hh	/^mapAddressToRange(const Address & addr, MachineType type, int low_bit,$/;"	f
mapIndexToBank	src/mem/ruby/system/BankedArray.cc	/^BankedArray::mapIndexToBank(Index idx)$/;"	f	class:BankedArray
mapPid	src/arch/arm/linux/system.cc	/^LinuxArmSystem::mapPid(ThreadContext *tc, uint32_t pid)$/;"	f	class:LinuxArmSystem
map_Address_to_Directory	src/mem/ruby/slicc_interface/RubySlicc_ComponentMapping.hh	/^map_Address_to_Directory(const Address &addr)$/;"	f
map_Address_to_DirectoryNode	src/mem/ruby/slicc_interface/RubySlicc_ComponentMapping.hh	/^map_Address_to_DirectoryNode(const Address& addr)$/;"	f
map_fd	src/kern/tru64/tru64_syscalls.hh	/^        map_fd = 43,$/;"	e	enum:SystemCalls::__anon103
map_levels	src/mem/ruby/system/DirectoryMemory.py	/^    map_levels = Param.Int(4, "sparse memory map levels")$/;"	v	class:RubyDirectoryMemory
map_t	src/base/output.hh	/^    typedef std::map<std::string, std::ostream *> map_t;$/;"	t	class:OutputDirectory
map_t	src/cpu/pc_event.hh	/^    typedef std::vector<record_t> map_t;$/;"	t	class:PCEventQueue
mapci	src/mem/ruby/network/orion/ConfigFile.hh	/^	typedef std::map<string,string>::const_iterator mapci;$/;"	t	class:ConfigFile
mapi	src/mem/ruby/network/orion/ConfigFile.hh	/^	typedef std::map<string,string>::iterator mapi;$/;"	t	class:ConfigFile
mapper	src/mem/addr_mapper.hh	/^        AddrMapper& mapper;$/;"	m	class:AddrMapper::MapperMasterPort
mapper	src/mem/addr_mapper.hh	/^        AddrMapper& mapper;$/;"	m	class:AddrMapper::MapperSlavePort
markBlockUsed	src/cpu/inorder/resources/fetch_unit.cc	/^FetchUnit::markBlockUsed(std::list<FetchBlock*>::iterator block_it)$/;"	f	class:FetchUnit
markCompletedInsts	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::markCompletedInsts()$/;"	f	class:DefaultCommit
markDelayed	src/arch/arm/stage2_lookup.hh	/^    void markDelayed() {}$/;"	f	class:ArmISA::Stage2LookUp
markDelayed	src/arch/arm/stage2_mmu.hh	/^        markDelayed() {}$/;"	f	class:ArmISA::Stage2MMU::Stage2Translation
markDelayed	src/cpu/o3/fetch.hh	/^        markDelayed()$/;"	f	class:DefaultFetch::FetchTranslation
markDelayed	src/cpu/simple/timing.hh	/^        markDelayed()$/;"	f	class:TimingSimpleCPU::FetchTranslation
markDelayed	src/cpu/translation.hh	/^    markDelayed()$/;"	f	class:DataTranslation
markEntries	src/mem/ruby/system/PersistentTable.cc	/^PersistentTable::markEntries(const Address& address)$/;"	f	class:PersistentTable
markInService	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::markInService(MSHR *mshr, PacketPtr pkt)$/;"	f	class:Cache
markInService	src/mem/cache/mshr.cc	/^MSHR::markInService(PacketPtr pkt)$/;"	f	class:MSHR
markInService	src/mem/cache/mshr_queue.cc	/^MSHRQueue::markInService(MSHR *mshr, PacketPtr pkt)$/;"	f	class:MSHRQueue
markInServiceInternal	src/mem/cache/base.hh	/^    void markInServiceInternal(MSHR *mshr, PacketPtr pkt)$/;"	f	class:BaseCache
markMemInstReady	src/cpu/ozone/dyn_inst_impl.hh	/^OzoneDynInst<Impl>::markMemInstReady(OzoneDynInst<Impl> *inst)$/;"	f	class:OzoneDynInst
markPending	src/mem/cache/mshr_queue.cc	/^MSHRQueue::markPending(MSHR *mshr)$/;"	f	class:MSHRQueue
markRemoved	src/mem/ruby/system/Sequencer.cc	/^Sequencer::markRemoved()$/;"	f	class:Sequencer
markSrcRegReady	src/cpu/base_dyn_inst_impl.hh	/^BaseDynInst<Impl>::markSrcRegReady()$/;"	f	class:BaseDynInst
markSrcRegReady	src/cpu/base_dyn_inst_impl.hh	/^BaseDynInst<Impl>::markSrcRegReady(RegIndex src_idx)$/;"	f	class:BaseDynInst
markSrcRegReady	src/cpu/inorder/inorder_dyn_inst.hh	/^    void markSrcRegReady()$/;"	f	class:InOrderDynInst
markSrcRegReady	src/cpu/inorder/inorder_dyn_inst.hh	/^    void markSrcRegReady(RegIndex src_idx)$/;"	f	class:InOrderDynInst
markTfaw	src/mem/ruby/system/RubyMemoryControl.cc	/^RubyMemoryControl::markTfaw(int rank)$/;"	f	class:RubyMemoryControl
markWorkItem	src/sim/system.hh	/^    markWorkItem(int index)$/;"	f	class:System
markedPending	src/mem/cache/mshr.hh	/^        bool markedPending; \/\/!< Did we mark upstream MSHR$/;"	m	class:MSHR::Target
mask	src/arch/arm/types.hh	/^        Bitfield<3, 0> mask;$/;"	m	namespace:ArmISA
mask	src/arch/mips/pra_constants.hh	/^    Bitfield<11, 3>  mask;$/;"	m	namespace:MipsISA
mask	src/arch/mips/pra_constants.hh	/^    Bitfield<28, 13> mask;$/;"	m	namespace:MipsISA
mask	src/arch/mips/pra_constants.hh	/^    Bitfield<3,  0>  mask;$/;"	m	namespace:MipsISA
mask	src/arch/x86/regs/misc.hh	/^        Bitfield<31,0> mask;$/;"	m	namespace:X86ISA
mask	src/base/bitfield.hh	/^mask(int first, int last)$/;"	f
mask	src/base/bitfield.hh	/^mask(int nbits)$/;"	f
mask	src/base/trie.hh	/^        Key mask;$/;"	m	struct:Trie::Node
mask	src/dev/sparc/iob.hh	/^        bool mask;$/;"	m	struct:Iob::IntCtl
mask	src/dev/x86/i82094aa.hh	/^        Bitfield<16> mask;$/;"	m	class:X86ISA::I82094AA
mask	src/mem/abstract_mem.hh	/^    static Addr mask(Addr paddr) { return (paddr & ~Addr_Mask); }$/;"	f	class:LockedAddr
mask1	src/dev/alpha/tsunami_io.hh	/^    uint8_t mask1;$/;"	m	class:TsunamiIO
mask1	src/dev/mips/malta_io.hh	/^    uint8_t mask1;$/;"	m	class:MaltaIO
mask2	src/dev/alpha/tsunami_io.hh	/^    uint8_t mask2;$/;"	m	class:TsunamiIO
mask2	src/dev/mips/malta_io.hh	/^    uint8_t mask2;$/;"	m	class:MaltaIO
maskAll	src/dev/x86/i8259.hh	/^    maskAll()$/;"	f	class:X86ISA::I8259
maskHighOrderBits	src/mem/ruby/common/Address.hh	/^Address::maskHighOrderBits(unsigned int number) const$/;"	f	class:Address
maskInt	src/dev/arm/pl011.hh	/^    INTREG maskInt;$/;"	m	class:Pl011
maskInt	src/dev/arm/rtc_pl031.hh	/^    bool maskInt;$/;"	m	class:PL031
maskLowOrderBits	src/mem/ruby/common/Address.hh	/^Address::maskLowOrderBits(unsigned int number) const$/;"	f	class:Address
maskReg	src/dev/x86/i8237.hh	/^    uint8_t maskReg;$/;"	m	class:X86ISA::I8237
masked	src/arch/x86/interrupts.hh	/^        Bitfield<16> masked;$/;"	m	class:X86ISA::Interrupts
masks	src/arch/x86/decoder.hh	/^        std::vector<MachInst> masks;$/;"	m	struct:X86ISA::Decoder::InstBytes
maskx	src/arch/mips/pra_constants.hh	/^    Bitfield<12, 11> maskx;$/;"	m	namespace:MipsISA
master	src/dev/ide_ctrl.hh	/^        IdeDisk *master, *slave;$/;"	m	struct:IdeController::Channel
master	src/mem/AddrMapper.py	/^    master = MasterPort("Master port")$/;"	v	class:AddrMapper
master	src/mem/Bridge.py	/^    master = MasterPort('Master port')$/;"	v	class:Bridge
master	src/mem/Bus.py	/^    master = VectorMasterPort("vector port for connecting slaves")$/;"	v	class:BaseBus
master	src/mem/CommMonitor.py	/^    master = MasterPort("Master port")$/;"	v	class:CommMonitor
master	src/mem/ruby/system/Sequencer.py	/^    master = VectorMasterPort("CPU master port")$/;"	v	class:RubyPort
masterID	src/cpu/testers/traffic_gen/generators.hh	/^    const MasterID masterID;$/;"	m	class:BaseGen
masterID	src/cpu/testers/traffic_gen/traffic_gen.hh	/^    MasterID masterID;$/;"	m	class:TrafficGen
masterId	src/arch/arm/table_walker.hh	/^    MasterID masterId;$/;"	m	class:ArmISA::TableWalker
masterId	src/arch/x86/pagetable_walker.hh	/^        MasterID masterId;$/;"	m	class:X86ISA::Walker
masterId	src/cpu/base_dyn_inst.hh	/^    MasterID masterId() const { return cpu->dataMasterId(); }$/;"	f	class:BaseDynInst
masterId	src/cpu/checker/cpu.hh	/^    MasterID masterId;$/;"	m	class:CheckerCPU
masterId	src/cpu/testers/directedtest/DirectedGenerator.hh	/^    MasterID masterId;$/;"	m	class:DirectedGenerator
masterId	src/cpu/testers/memtest/memtest.hh	/^    MasterID masterId;$/;"	m	class:MemTest
masterId	src/cpu/testers/networktest/networktest.hh	/^    MasterID masterId;$/;"	m	class:NetworkTest
masterId	src/cpu/testers/rubytest/RubyTester.hh	/^    MasterID masterId() { return _masterId; }$/;"	f	class:RubyTester
masterId	src/dev/dma_device.hh	/^    const MasterID masterId;$/;"	m	class:DmaPort
masterId	src/mem/cache/prefetch/base.hh	/^    MasterID masterId;$/;"	m	class:BasePrefetcher
masterId	src/mem/request.hh	/^    masterId()$/;"	f	class:Request
masterIds	src/sim/system.hh	/^    std::vector<std::string> masterIds;$/;"	m	class:System
masterPort	src/mem/addr_mapper.hh	/^    MapperMasterPort masterPort;$/;"	m	class:AddrMapper
masterPort	src/mem/bridge.hh	/^        BridgeMasterPort& masterPort;$/;"	m	class:Bridge::BridgeSlavePort
masterPort	src/mem/bridge.hh	/^    BridgeMasterPort masterPort;$/;"	m	class:Bridge
masterPort	src/mem/comm_monitor.hh	/^    MonitorMasterPort masterPort;$/;"	m	class:CommMonitor
masterPort	src/mem/packet_queue.hh	/^    MasterPort& masterPort;$/;"	m	class:MasterPacketQueue
masterPorts	src/mem/bus.hh	/^    std::vector<MasterPort*> masterPorts;$/;"	m	class:BaseBus
master_ports	src/mem/ruby/system/RubyPort.hh	/^    std::vector<PioMasterPort *> master_ports;$/;"	m	class:RubyPort
match	src/arch/arm/pagetable.hh	/^    match(Addr va, uint16_t asn, uint8_t _vmid, bool hypLookUp,$/;"	f	struct:ArmISA::TlbEntry
match	src/arch/arm/pagetable.hh	/^    match(Addr va, uint8_t _vmid, bool hypLookUp, bool secure_lookup,$/;"	f	struct:ArmISA::TlbEntry
match	src/base/match.hh	/^    bool match(const std::string &name) const$/;"	f	class:ObjectMatch
matchEvent	src/dev/arm/rtc_pl031.hh	/^    EventWrapper<PL031, &PL031::counterMatch> matchEvent;$/;"	m	class:PL031
matchVal	src/dev/arm/rtc_pl031.hh	/^    uint32_t matchVal;$/;"	m	class:PL031
matches	src/base/trie.hh	/^        matches(Key test)$/;"	f	struct:Trie::Node
matchesContext	src/mem/abstract_mem.hh	/^    bool matchesContext(Request *req) const$/;"	f	class:LockedAddr
matchesContext	src/mem/cache/blk.hh	/^        bool matchesContext(Request *req)$/;"	f	class:CacheBlk::Lock
math	src/python/m5/params.py	/^import math$/;"	i
max	src/base/statistics.hh	/^        Counter max;$/;"	m	struct:Stats::DistStor::Params
max	src/base/stats/info.hh	/^    Counter max;$/;"	m	struct:Stats::DistData
maxAccessesPerRow	src/mem/dram_ctrl.hh	/^    const uint32_t maxAccessesPerRow;$/;"	m	class:DRAMCtrl
maxAddr	src/dev/arm/pl111.hh	/^    Addr maxAddr;$/;"	m	class:Pl111
maxBankFreeAt	src/mem/dram_ctrl.cc	/^DRAMCtrl::maxBankFreeAt() const$/;"	f	class:DRAMCtrl
maxEntries	src/cpu/o3/inst_queue.hh	/^    unsigned maxEntries[Impl::MaxThreads];$/;"	m	class:InstructionQueue
maxEntries	src/cpu/o3/rob.hh	/^    unsigned maxEntries[Impl::MaxThreads];$/;"	m	class:ROB
maxEntries	src/cpu/ozone/inst_queue.hh	/^    unsigned maxEntries[Impl::MaxThreads];$/;"	m	class:InstQueue
maxInstBufferSize	src/cpu/ozone/OzoneCPU.py	/^    maxInstBufferSize = Param.Unsigned("Maximum instruction buffer size")$/;"	v	class:DerivOzoneCPU
maxInstBufferSize	src/cpu/ozone/SimpleOzoneCPU.py	/^    maxInstBufferSize = Param.Unsigned("Maximum instruction buffer size")$/;"	v	class:SimpleOzoneCPU
maxInstBufferSize	src/cpu/ozone/front_end.hh	/^    int maxInstBufferSize;$/;"	m	class:FrontEnd
maxInstBufferSize	src/cpu/ozone/simple_params.hh	/^    unsigned maxInstBufferSize;$/;"	m	class:SimpleParams
maxIssueLatencies	src/cpu/o3/fu_pool.hh	/^    Cycles maxIssueLatencies[Num_OpClasses];$/;"	m	class:FUPool
maxLQEntries	src/cpu/o3/lsq.hh	/^    unsigned maxLQEntries;$/;"	m	class:LSQ
maxLoads	src/cpu/testers/memtest/memtest.hh	/^    uint64_t maxLoads;$/;"	m	class:MemTest
maxMasters	src/sim/system.hh	/^    MasterID maxMasters()$/;"	f	class:System
maxOpLatencies	src/cpu/o3/fu_pool.hh	/^    Cycles maxOpLatencies[Num_OpClasses];$/;"	m	class:FUPool
maxOutstandingDma	src/dev/arm/hdlcd.hh	/^    inline uint16_t maxOutstandingDma() const {$/;"	f	class:HDLcd
maxOutstandingDma	src/dev/arm/pl111.hh	/^    static const int maxOutstandingDma  = 16;   \/\/ 16 deep FIFO of 64 bits$/;"	m	class:Pl111
maxOutstandingMemOps	src/cpu/ozone/OzoneCPU.py	/^    maxOutstandingMemOps = Param.Unsigned("Maximum number of outstanding memory operations")$/;"	v	class:DerivOzoneCPU
maxOutstandingMemOps	src/cpu/ozone/lw_back_end.hh	/^    unsigned maxOutstandingMemOps;$/;"	m	class:LWBackEnd
maxOutstandingMemOps	src/cpu/ozone/simple_params.hh	/^    unsigned maxOutstandingMemOps;$/;"	m	class:SimpleParams
maxPackets	src/cpu/testers/networktest/networktest.hh	/^    int maxPackets;$/;"	m	class:NetworkTest
maxPeriod	src/cpu/testers/traffic_gen/generators.hh	/^    const Tick maxPeriod;$/;"	m	class:LinearGen
maxPeriod	src/cpu/testers/traffic_gen/generators.hh	/^    const Tick maxPeriod;$/;"	m	class:RandomGen
maxPhysicalRegs	src/cpu/o3/rename.hh	/^    PhysRegIndex maxPhysicalRegs;$/;"	m	class:DefaultRename
maxReqCount	src/cpu/inorder/resource.cc	/^int ResourceRequest::maxReqCount = 0;$/;"	m	class:ResourceRequest	file:
maxReqCount	src/cpu/inorder/resource.hh	/^    static int maxReqCount;$/;"	m	class:ResourceRequest
maxSQEntries	src/cpu/o3/lsq.hh	/^    unsigned maxSQEntries;$/;"	m	class:LSQ
maxThreadsPerCPU	src/arch/null/cpu_dummy.cc	/^int maxThreadsPerCPU = 1;$/;"	v
maxThreadsPerCPU	src/cpu/base.cc	/^int maxThreadsPerCPU = 1;$/;"	v
maxVal	src/cpu/pred/sat_counter.hh	/^    uint8_t maxVal;$/;"	m	class:SatCounter
maxVnicDistance	src/dev/sinic.hh	/^    Stats::Scalar maxVnicDistance;$/;"	m	class:Sinic::Device
max_accesses_per_row	src/mem/DRAMCtrl.py	/^    max_accesses_per_row = Param.Unsigned(16, "Max accesses per row before "$/;"	v	class:DRAMCtrl
max_bucket	src/base/statistics.hh	/^    Counter max_bucket;$/;"	m	class:Stats::HistStor
max_insts_all_threads	src/cpu/BaseCPU.py	/^    max_insts_all_threads = Param.Counter(0,$/;"	v
max_insts_any_thread	src/cpu/BaseCPU.py	/^    max_insts_any_thread = Param.Counter(0,$/;"	v
max_loads	src/cpu/testers/memtest/MemTest.py	/^    max_loads = Param.Counter(0, "number of loads to execute")$/;"	v	class:MemTest
max_loads_all_threads	src/cpu/BaseCPU.py	/^    max_loads_all_threads = Param.Counter(0,$/;"	v
max_loads_any_thread	src/cpu/BaseCPU.py	/^    max_loads_any_thread = Param.Counter(0,$/;"	v
max_mem_size	src/dev/arm/RealView.py	/^    max_mem_size = '2GB'$/;"	v	class:VExpress_EMM
max_mem_size	src/dev/arm/RealView.py	/^    max_mem_size = Param.Addr('256MB', "Maximum amount of RAM supported by platform")$/;"	v	class:RealView
max_miss_count	src/mem/cache/BaseCache.py	/^    max_miss_count = Param.Counter(0,$/;"	v	class:BaseCache
max_outstanding	src/dev/arm/hdlcd.hh	/^        Bitfield<11,8>  max_outstanding;$/;"	m	class:HDLcd
max_outstanding_requests	src/mem/ruby/system/Sequencer.py	/^    max_outstanding_requests = Param.Int(16,$/;"	v	class:RubySequencer
max_packets	src/cpu/testers/networktest/NetworkTest.py	/^    max_packets = Param.Counter(0, "Number of packets to send when in fixed_pkts mode")$/;"	v	class:NetworkTest
max_size	src/base/pollevent.hh	/^    int max_size;$/;"	m	class:PollQueue
max_size	src/mem/ruby/network/garnet/fixed-pipeline/flitBuffer_d.hh	/^    int max_size;$/;"	m	class:flitBuffer_d
max_size	src/mem/ruby/network/garnet/flexible-pipeline/flitBuffer.hh	/^    int max_size;$/;"	m	class:flitBuffer
max_stack_size	src/sim/Process.py	/^    max_stack_size = Param.MemorySize('64MB', 'maximum size of the stack')$/;"	v	class:Process
max_stack_size	src/sim/process.hh	/^    Addr max_stack_size;$/;"	m	class:Process
max_tokens	src/mem/ruby/slicc_interface/RubySlicc_Util.hh	/^inline int max_tokens()$/;"	f
max_track	src/base/statistics.hh	/^    Counter max_track;$/;"	m	class:Stats::DistStor
max_val	src/base/statistics.hh	/^    Counter max_val;$/;"	m	class:Stats::DistStor
max_val	src/base/stats/info.hh	/^    Counter max_val;$/;"	m	struct:Stats::DistData
maximumLatency	src/dev/pcireg.h	/^        uint8_t maximumLatency;$/;"	m	struct:PCIConfig::__anon80
maxlen	src/dev/Ethernet.py	/^    maxlen = Param.Int(96, "max portion of packet data to dump")$/;"	v	class:EtherDump
maxlen	src/dev/etherdump.hh	/^    const unsigned maxlen;$/;"	m	class:EtherDump
maxsize	src/dev/pktfifo.hh	/^    unsigned maxsize() const { return _maxsize; }$/;"	f	class:PacketFifo
mb	src/arch/mips/dt_constants.hh	/^    Bitfield<31>     mb;$/;"	m	namespace:MipsISA
mb	src/arch/power/insts/integer.hh	/^    uint32_t mb;$/;"	m	class:PowerISA::IntRotateOp
mb	src/arch/power/types.hh	/^    Bitfield<10,  6> mb;$/;"	m	namespace:PowerISA
mbits	src/base/bitfield.hh	/^mbits(T val, int first, int last)$/;"	f
mbuf	src/kern/tru64/mbuf.hh	/^struct mbuf {$/;"	s	namespace:tru64
mc	src/dev/pcireg.h	/^    MC mc;$/;"	m	struct:MSICAP
mcaErrorCode	src/arch/x86/regs/misc.hh	/^        Bitfield<15,0> mcaErrorCode;$/;"	m	namespace:X86ISA
mce	src/arch/x86/regs/misc.hh	/^        Bitfield<6> mce; \/\/ Machine Check Enable$/;"	m	namespace:X86ISA
mcheckep	src/arch/mips/dt_constants.hh	/^    Bitfield<23>     mcheckep;$/;"	m	namespace:MipsISA
mcip	src/arch/x86/regs/misc.hh	/^        Bitfield<2> mcip; \/\/ Machine check in-progress$/;"	m	namespace:X86ISA
mcrMrc14TrapToHyp	src/arch/arm/utility.cc	/^mcrMrc14TrapToHyp(const MiscRegIndex miscReg, HCR hcr, CPSR cpsr, SCR scr,$/;"	f	namespace:ArmISA
mcrMrc15TrapToHyp	src/arch/arm/utility.cc	/^mcrMrc15TrapToHyp(const MiscRegIndex miscReg, HCR hcr, CPSR cpsr, SCR scr,$/;"	f	namespace:ArmISA
mcrMrcIssBuild	src/arch/arm/utility.hh	/^mcrMrcIssBuild(bool isRead, uint32_t crm, IntRegIndex rt, uint32_t crn,$/;"	f	namespace:ArmISA
mcrMrcIssExtract	src/arch/arm/utility.hh	/^mcrMrcIssExtract(uint32_t iss, bool &isRead, uint32_t &crm, IntRegIndex &rt,$/;"	f	namespace:ArmISA
mcrrMrrc15TrapToHyp	src/arch/arm/utility.cc	/^mcrrMrrc15TrapToHyp(const MiscRegIndex miscReg, CPSR cpsr, SCR scr, HSTR hstr,$/;"	f	namespace:ArmISA
mcrrMrrcIssBuild	src/arch/arm/utility.hh	/^mcrrMrrcIssBuild(bool isRead, uint32_t crm, IntRegIndex rt, IntRegIndex rt2,$/;"	f	namespace:ArmISA
md	src/arch/mips/pra_constants.hh	/^    Bitfield<5>      md;$/;"	m	namespace:MipsISA
md	src/dev/pcireg.h	/^    MD md;$/;"	m	struct:MSICAP
md5	src/base/inet.hh	/^    const uint8_t *md5() const { return opt_data.md5; }$/;"	f	struct:Net::TcpOpt
md_ipr_names	src/arch/alpha/ipr.hh	/^enum md_ipr_names {$/;"	g	namespace:AlphaISA
mday	src/dev/mc146818.hh	/^            uint8_t mday;$/;"	m	struct:MC146818::__anon78::__anon79
mdic	src/dev/i8254xGBe_defs.hh	/^    MDIC mdic;$/;"	m	struct:iGbReg::Regs
mduEvent	src/cpu/inorder/resources/mult_div_unit.hh	/^    MDUEvent *mduEvent;    $/;"	m	class:MultDivUnit
me	src/arch/power/insts/integer.hh	/^    uint32_t me;$/;"	m	class:PowerISA::IntRotateOp
me	src/arch/power/types.hh	/^    Bitfield< 5,  1> me;$/;"	m	namespace:PowerISA
mear	src/dev/ns_gige.hh	/^    uint32_t    mear;$/;"	m	struct:dp_regs
mebi	src/python/m5/util/convert.py	/^mebi = kibi * 1024$/;"	v
mediaOpcode	src/arch/arm/types.hh	/^        Bitfield<24, 20> mediaOpcode;$/;"	m	namespace:ArmISA
meetp	src/dev/pcireg.h	/^        Bitfield<23,22> meetp;$/;"	m	struct:PXCAP
mega	src/python/m5/util/convert.py	/^mega = 1.0e6$/;"	v
mem	src/cpu/ozone/SimpleOzoneCPU.py	/^    mem = Param.FunctionalMemory(NULL, "memory")$/;"	v	class:SimpleOzoneCPU
mem2hex	src/base/remote_gdb.cc	/^BaseRemoteGDB::mem2hex(void *vdst, const void *vsrc, int len)$/;"	f	class:BaseRemoteGDB
memAccComplete	src/cpu/inorder/resources/cache_unit.hh	/^    bool memAccComplete;$/;"	m	class:CacheRequest
memAccInst	src/cpu/static_inst.hh	/^    StaticInstPtr &memAccInst() const { return nullStaticInstPtr; }$/;"	f	class:StaticInst
memAccPending	src/cpu/inorder/resources/cache_unit.hh	/^    bool memAccPending;$/;"	m	class:CacheRequest
memAccPtr	src/arch/power/insts/mem.hh	/^    const StaticInstPtr memAccPtr;$/;"	m	class:PowerISA::MemOp
memAccess	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::memAccess()$/;"	f	class:InOrderDynInst
memAccess	src/cpu/o3/dyn_inst.hh	/^    Fault memAccess()$/;"	f	class:BaseO3DynInst
memAccessFlags	src/arch/arm/insts/macromem.hh	/^    unsigned memAccessFlags;$/;"	m	class:ArmISA::MicroMemOp
memAccessFlags	src/arch/arm/insts/macromem.hh	/^    unsigned memAccessFlags;$/;"	m	class:ArmISA::MicroNeonMemOp
memAccessFlags	src/arch/arm/insts/mem64.hh	/^    unsigned memAccessFlags;$/;"	m	class:ArmISA::Memory64
memAccessFlags	src/arch/power/insts/mem.hh	/^    unsigned memAccessFlags;$/;"	m	class:PowerISA::MemOp
memAddr	src/cpu/inorder/inorder_dyn_inst.hh	/^    Addr memAddr;$/;"	m	class:InOrderDynInst
memAddrReady	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool memAddrReady;$/;"	m	class:InOrderDynInst
memAllocCounter	src/cpu/o3/dep_graph.hh	/^    unsigned memAllocCounter;$/;"	m	class:DependencyGraph
memAttr	src/arch/arm/table_walker.hh	/^        uint8_t memAttr() const$/;"	f	class:ArmISA::TableWalker::LongDescriptor
memAttrs	src/arch/arm/table_walker.cc	/^TableWalker::memAttrs(ThreadContext *tc, TlbEntry &te, SCTLR sctlr,$/;"	f	class:TableWalker
memAttrsAArch64	src/arch/arm/table_walker.cc	/^TableWalker::memAttrsAArch64(ThreadContext *tc, TlbEntry &te, uint8_t attrIndx,$/;"	f	class:TableWalker
memAttrsLPAE	src/arch/arm/table_walker.cc	/^TableWalker::memAttrsLPAE(ThreadContext *tc, TlbEntry &te,$/;"	f	class:TableWalker
memBarrier	src/cpu/ozone/lw_back_end.hh	/^    DynInstPtr memBarrier;$/;"	m	class:LWBackEnd
memBlockSize	src/cpu/inorder/InOrderCPU.py	/^    memBlockSize = Param.Unsigned(64, "Memory Block Size")$/;"	v	class:InOrderCPU
memData	src/cpu/base_dyn_inst.hh	/^    uint8_t *memData;$/;"	m	class:BaseDynInst
memData	src/cpu/inorder/inorder_dyn_inst.hh	/^    uint8_t *memData;$/;"	m	class:InOrderDynInst
memDepHash	src/cpu/o3/mem_dep_unit.hh	/^    MemDepHash memDepHash;$/;"	m	class:MemDepUnit
memDepReady	src/cpu/o3/mem_dep_unit.hh	/^        bool memDepReady;$/;"	m	class:MemDepUnit::MemDepEntry
memDepReady	src/cpu/ozone/dyn_inst.hh	/^    bool memDepReady() { return srcMemInsts.empty(); }$/;"	f	class:OzoneDynInst
memDepUnit	src/cpu/o3/inst_queue.hh	/^    MemDepUnit memDepUnit[Impl::MaxThreads];$/;"	m	class:InstructionQueue
memDepViolator	src/cpu/o3/lsq_unit.hh	/^    DynInstPtr memDepViolator;$/;"	m	class:LSQUnit
memDepViolator	src/cpu/ozone/lsq_unit.hh	/^    DynInstPtr memDepViolator;$/;"	m	class:OzoneLSQ
memDepViolator	src/cpu/ozone/lw_lsq.hh	/^    DynInstPtr memDepViolator;$/;"	m	class:OzoneLWLSQ
memDependents	src/cpu/ozone/dyn_inst.hh	/^    std::vector<DynInstPtr> memDependents;$/;"	m	class:OzoneDynInst
memFlags	src/arch/x86/insts/microldstop.hh	/^        const Request::FlagsType memFlags;$/;"	m	class:X86ISA::LdStOp
memInhibitAsserted	src/mem/packet.hh	/^    bool memInhibitAsserted() const { return flags.isSet(MEM_INHIBIT); }$/;"	f	class:Packet
memInvalidate	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::memInvalidate()$/;"	f	class:Cache
memInvalidate	src/python/m5/simulate.py	/^def memInvalidate(root):$/;"	f
memInvalidate	src/sim/drain.hh	/^    virtual void memInvalidate() {};$/;"	f	class:Drainable
memInvalidate	src/sim/tlb.hh	/^    void memInvalidate() { flushAll(); }$/;"	f	class:BaseTLB
memMasterPort	src/mem/ruby/system/RubyPort.hh	/^    MemMasterPort memMasterPort;$/;"	m	class:RubyPort
memOpDone	src/cpu/base_dyn_inst.hh	/^    bool memOpDone() const { return instFlags[MemOpDone]; }$/;"	f	class:BaseDynInst
memOpDone	src/cpu/base_dyn_inst.hh	/^    void memOpDone(bool f) { instFlags[MemOpDone] = f; }$/;"	f	class:BaseDynInst
memOpsPred	src/cpu/o3/store_set.hh	/^    int memOpsPred;$/;"	m	class:StoreSet
memOrderViolationEvents	src/cpu/o3/iew.hh	/^    Stats::Scalar memOrderViolationEvents;$/;"	m	class:DefaultIEW
memReq	src/cpu/checker/cpu.hh	/^    RequestPtr memReq;$/;"	m	class:CheckerCPU
memReq	src/cpu/inorder/resources/cache_unit.hh	/^    RequestPtr memReq;$/;"	m	class:CacheReqPacket
memReq	src/cpu/inorder/resources/cache_unit.hh	/^    RequestPtr memReq;$/;"	m	class:CacheRequest
memReq	src/cpu/inorder/resources/tlb_unit.hh	/^    RequestPtr memReq;$/;"	m	class:TLBUnitRequest
memReq	src/cpu/o3/fetch.hh	/^    RequestPtr memReq[Impl::MaxThreads];$/;"	m	class:DefaultFetch
memReq	src/cpu/ozone/back_end.hh	/^    Request *memReq;$/;"	m	class:BackEnd
memReq	src/cpu/ozone/front_end.hh	/^    RequestPtr memReq;$/;"	m	class:FrontEnd
memReq	src/cpu/ozone/inorder_back_end.hh	/^    RequestPtr memReq;$/;"	m	class:InorderBackEnd
memReqFlags	src/cpu/base_dyn_inst.hh	/^    unsigned memReqFlags;$/;"	m	class:BaseDynInst
memReqFlags	src/cpu/inorder/inorder_dyn_inst.hh	/^    unsigned memReqFlags;$/;"	m	class:InOrderDynInst
memSchedPolicy	src/mem/dram_ctrl.hh	/^    Enums::MemSched memSchedPolicy;$/;"	m	class:DRAMCtrl
memSidePort	src/mem/cache/base.hh	/^    CacheMasterPort *memSidePort;$/;"	m	class:BaseCache
memSize	src/arch/arm/linux/atag.hh	/^    void memSize(uint32_t i) { storage[2] = i; }$/;"	f	class:AtagMem
memSize	src/sim/system.cc	/^System::memSize() const$/;"	f	class:System
memSlavePort	src/mem/ruby/system/RubyPort.hh	/^    MemSlavePort memSlavePort;$/;"	m	class:RubyPort
memStall	src/cpu/inorder/resource.hh	/^    bool memStall;$/;"	m	class:ResourceRequest
memStart	src/arch/arm/linux/atag.hh	/^    void memStart(uint32_t i) { storage[3] = i; }$/;"	f	class:AtagMem
memTime	src/cpu/inorder/inorder_dyn_inst.hh	/^    Tick memTime;$/;"	m	class:InOrderDynInst
memUsage	src/base/hostinfo.cc	/^memUsage()$/;"	f
memWriteback	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::memWriteback()$/;"	f	class:Cache
memWriteback	src/python/m5/simulate.py	/^def memWriteback(root):$/;"	f
memWriteback	src/sim/drain.hh	/^    virtual void memWriteback() {};$/;"	f	class:Drainable
mem_cntrl	src/mem/ruby/system/MemoryControl.hh	/^        MemoryControl* mem_cntrl;$/;"	m	class:MemoryControl::MemCntrlEvent
mem_ctl_latency	src/mem/ruby/system/RubyMemoryControl.py	/^    mem_ctl_latency = Param.Cycles(12, "");$/;"	v	class:RubyMemoryControl
mem_fixed_delay	src/mem/ruby/system/RubyMemoryControl.py	/^    mem_fixed_delay = Param.Cycles(0, "");$/;"	v	class:RubyMemoryControl
mem_master_port	src/mem/ruby/system/Sequencer.py	/^    mem_master_port = MasterPort("Ruby mem master port")$/;"	v	class:RubyPort
mem_mode	src/sim/System.py	/^    mem_mode = Param.MemoryMode('atomic', "The mode the memory system is in")$/;"	v
mem_random_arbitrate	src/mem/ruby/system/RubyMemoryControl.py	/^    mem_random_arbitrate = Param.Int(0, "");$/;"	v	class:RubyMemoryControl
mem_ranges	src/sim/System.py	/^    mem_ranges = VectorParam.AddrRange([], "Ranges that constitute main memory")$/;"	v
mem_sched_policy	src/mem/DRAMCtrl.py	/^    mem_sched_policy = Param.MemSched('frfcfs', "Memory scheduling policy")$/;"	v	class:DRAMCtrl
mem_side	src/mem/cache/BaseCache.py	/^    mem_side = MasterPort("Port on side closer to MEM")$/;"	v	class:BaseCache
mem_size	src/dev/alpha/access.h	/^    uint64_t    mem_size;               \/\/ 18:$/;"	m	struct:AlphaAccess
mem_size	src/dev/mips/access.h	/^    uint64_t    mem_size;               \/\/ 40:$/;"	m	struct:MipsAccess
mem_size	src/mem/ruby/system/RubySystem.py	/^    mem_size = Param.MemorySize("total memory size of the system");$/;"	v	class:RubySystem
mem_slave_port	src/mem/ruby/system/Sequencer.py	/^    mem_slave_port = SlavePort("Ruby memory port")$/;"	v	class:RubyPort
mem_start_addr	src/dev/arm/RealView.py	/^    mem_start_addr = '2GB'$/;"	v	class:VExpress_EMM
mem_start_addr	src/dev/arm/RealView.py	/^    mem_start_addr = Param.Addr(0, "Start address of main memory")$/;"	v	class:RealView
mem_unit	src/arch/alpha/linux/linux.hh	/^       uint64_t mem_unit;  \/* Memory unit size in bytes *\/$/;"	m	struct:AlphaLinux::__anon2
mem_unit	src/arch/arm/linux/linux.hh	/^        uint32_t mem_unit;  \/* Memory unit size in bytes *\/$/;"	m	struct:ArmLinux32::__anon8
mem_unit	src/arch/arm/linux/linux.hh	/^        uint32_t mem_unit;  \/* Memory unit size in bytes *\/$/;"	m	struct:ArmLinux64::__anon11
mem_unit	src/arch/mips/linux/linux.hh	/^       uint32_t mem_unit;  \/* Memory unit size in bytes *\/$/;"	m	struct:MipsLinux::__anon20
mem_unit	src/arch/sparc/linux/linux.hh	/^        uint32_t mem_unit;  \/* Memory unit size in bytes *\/$/;"	m	struct:Sparc32Linux::__anon28
mem_unit	src/arch/sparc/linux/linux.hh	/^        uint64_t mem_unit;  \/* Memory unit size in bytes *\/$/;"	m	struct:SparcLinux::__anon26
mem_unit	src/arch/x86/linux/linux.hh	/^        uint64_t mem_unit;  \/* Memory unit size in bytes *\/$/;"	m	struct:X86Linux64::__anon32
mem_unit	src/arch/x86/linux/linux.hh	/^       uint32_t mem_unit;  \/* Memory unit size in bytes *\/$/;"	m	struct:X86Linux32::__anon34
members	src/sim/clock_domain.hh	/^    std::vector<ClockedObject*> members;$/;"	m	class:ClockDomain
memcntl	src/kern/tru64/tru64_syscalls.hh	/^        memcntl = 260,$/;"	e	enum:SystemCalls::__anon102
memdep_count	src/cpu/o3/mem_dep_unit.cc	/^MemDepUnit<StoreSet, O3CPUImpl>::MemDepEntry::memdep_count = 0;$/;"	m	class:MemDepUnit::MemDepEntry	file:
memdep_count	src/cpu/o3/mem_dep_unit.hh	/^        static int memdep_count;$/;"	m	class:MemDepUnit::MemDepEntry
memdep_erase	src/cpu/o3/mem_dep_unit.cc	/^MemDepUnit<StoreSet, O3CPUImpl>::MemDepEntry::memdep_erase = 0;$/;"	m	class:MemDepUnit::MemDepEntry	file:
memdep_erase	src/cpu/o3/mem_dep_unit.hh	/^        static int memdep_erase;$/;"	m	class:MemDepUnit::MemDepEntry
memdep_insert	src/cpu/o3/mem_dep_unit.cc	/^MemDepUnit<StoreSet, O3CPUImpl>::MemDepEntry::memdep_insert = 0;$/;"	m	class:MemDepUnit::MemDepEntry	file:
memdep_insert	src/cpu/o3/mem_dep_unit.hh	/^        static int memdep_insert;$/;"	m	class:MemDepUnit::MemDepEntry
memories	src/mem/physical.hh	/^    std::vector<AbstractMemory*> memories;$/;"	m	class:PhysicalMemory
memories	src/sim/System.py	/^    memories = VectorParam.AbstractMemory(Self.all,$/;"	v
memory	src/mem/dram_ctrl.hh	/^        DRAMCtrl& memory;$/;"	m	class:DRAMCtrl::MemoryPort
memory	src/mem/dramsim2.hh	/^        DRAMSim2& memory;$/;"	m	class:DRAMSim2::MemoryPort
memory	src/mem/simple_mem.hh	/^        SimpleMemory& memory;$/;"	m	class:SimpleMemory::MemoryPort
memoryMode	src/sim/system.hh	/^    Enums::MemoryMode memoryMode;$/;"	m	class:System
memoryModuleIndex	src/mem/ruby/common/Address.cc	/^Address::memoryModuleIndex() const$/;"	f	class:Address
memory_mode	src/cpu/BaseCPU.py	/^    def memory_mode(cls):$/;"	f
memory_mode	src/cpu/inorder/InOrderCPU.py	/^    def memory_mode(cls):$/;"	m	class:InOrderCPU
memory_mode	src/cpu/kvm/BaseKvmCPU.py	/^    def memory_mode(cls):$/;"	f
memory_mode	src/cpu/o3/O3CPU.py	/^    def memory_mode(cls):$/;"	m	class:DerivO3CPU
memory_mode	src/cpu/simple/AtomicSimpleCPU.py	/^    def memory_mode(cls):$/;"	m	class:AtomicSimpleCPU
memory_mode	src/cpu/simple/TimingSimpleCPU.py	/^    def memory_mode(cls):$/;"	m	class:TimingSimpleCPU
memory_size	src/cpu/testers/memtest/MemTest.py	/^    memory_size = Param.Int(65536, "memory size")$/;"	v	class:MemTest
memory_size	src/cpu/testers/networktest/NetworkTest.py	/^    memory_size = Param.Int(65536, "memory size")$/;"	v	class:NetworkTest
memsetBlob	src/mem/fs_translating_port_proxy.cc	/^FSTranslatingPortProxy::memsetBlob(Addr address, uint8_t v, int size) const$/;"	f	class:FSTranslatingPortProxy
memsetBlob	src/mem/port_proxy.cc	/^PortProxy::memsetBlob(Addr addr, uint8_t v, int size) const$/;"	f	class:PortProxy
memsetBlob	src/mem/se_translating_port_proxy.cc	/^SETranslatingPortProxy::memsetBlob(Addr addr, uint8_t val, int size) const$/;"	f	class:SETranslatingPortProxy
memtest	src/cpu/testers/memtest/memtest.hh	/^        MemTest *memtest;$/;"	m	class:MemTest::CpuPort
merge	src/arch/x86/insts/static_inst.hh	/^        inline uint64_t merge(uint64_t into, uint64_t val, int size) const$/;"	f	class:X86ISA::X86StaticInst
merge	src/mem/ruby/filters/BlockBloomFilter.cc	/^BlockBloomFilter::merge(AbstractBloomFilter * other_filter)$/;"	f	class:BlockBloomFilter
merge	src/mem/ruby/filters/BulkBloomFilter.cc	/^BulkBloomFilter::merge(AbstractBloomFilter * other_filter)$/;"	f	class:BulkBloomFilter
merge	src/mem/ruby/filters/GenericBloomFilter.cc	/^GenericBloomFilter::merge(GenericBloomFilter * other_filter)$/;"	f	class:GenericBloomFilter
merge	src/mem/ruby/filters/H3BloomFilter.cc	/^H3BloomFilter::merge(AbstractBloomFilter *other_filter)$/;"	f	class:H3BloomFilter
merge	src/mem/ruby/filters/LSB_CountingBloomFilter.cc	/^LSB_CountingBloomFilter::merge(AbstractBloomFilter * other_filter)$/;"	f	class:LSB_CountingBloomFilter
merge	src/mem/ruby/filters/MultiBitSelBloomFilter.cc	/^MultiBitSelBloomFilter::merge(AbstractBloomFilter *other_filter)$/;"	f	class:MultiBitSelBloomFilter
merge	src/mem/ruby/filters/MultiGrainBloomFilter.cc	/^MultiGrainBloomFilter::merge(AbstractBloomFilter *other_filter)$/;"	f	class:MultiGrainBloomFilter
merge	src/mem/ruby/filters/NonCountingBloomFilter.cc	/^NonCountingBloomFilter::merge(AbstractBloomFilter *other_filter)$/;"	f	class:NonCountingBloomFilter
mergeFrom	src/mem/ruby/common/SubBlock.hh	/^    void mergeFrom(const DataBlock& data) { internalMergeFrom(data); }$/;"	f	class:SubBlock
mergeTe	src/arch/arm/stage2_lookup.cc	/^Stage2LookUp::mergeTe(RequestPtr req, BaseTLB::Mode mode)$/;"	f	class:Stage2LookUp
mergeTo	src/mem/ruby/common/SubBlock.hh	/^    void mergeTo(DataBlock& data) const { internalMergeTo(data); }$/;"	f	class:SubBlock
mergedWrBursts	src/mem/dram_ctrl.hh	/^    Stats::Scalar mergedWrBursts;$/;"	m	class:DRAMCtrl
mergesWith	src/base/addr_range.hh	/^    bool mergesWith(const AddrRange& r) const$/;"	f	class:AddrRange
message	src/arch/generic/debugfaults.hh	/^    std::string message;$/;"	m	class:GenericISA::M5DebugFault
methodId	src/mem/slicc/symbols/Type.py	/^    def methodId(self, name, param_type_vec):$/;"	m	class:Type
methodIdAbstract	src/mem/slicc/symbols/Type.py	/^    def methodIdAbstract(self, name, param_type_vec):$/;"	m	class:Type
mfde	src/arch/x86/regs/misc.hh	/^        Bitfield<18> mfde; \/\/ MtrrFixDramEn$/;"	m	namespace:X86ISA
mfdm	src/arch/x86/regs/misc.hh	/^        Bitfield<19> mfdm; \/\/ MtrrFixDramModEn$/;"	m	namespace:X86ISA
mh_data	src/kern/tru64/mbuf.hh	/^    Addr        mh_data;        \/\/ 0x10$/;"	m	struct:tru64::m_hdr
mh_flags	src/kern/tru64/mbuf.hh	/^    int32_t     mh_flags;       \/\/ 0x20$/;"	m	struct:tru64::m_hdr
mh_foo	src/kern/tru64/mbuf.hh	/^    Addr        mh_foo[4];      \/\/ 0x28, 0x30, 0x38, 0x40$/;"	m	struct:tru64::m_hdr
mh_len	src/kern/tru64/mbuf.hh	/^    int32_t     mh_len;         \/\/ 0x18$/;"	m	struct:tru64::m_hdr
mh_next	src/kern/tru64/mbuf.hh	/^    Addr        mh_next;        \/\/ 0x00$/;"	m	struct:tru64::m_hdr
mh_nextpkt	src/kern/tru64/mbuf.hh	/^    Addr        mh_nextpkt;     \/\/ 0x08$/;"	m	struct:tru64::m_hdr
mh_pad0	src/kern/tru64/mbuf.hh	/^    int32_t     mh_pad0;        \/\/ 0x24$/;"	m	struct:tru64::m_hdr
mh_type	src/kern/tru64/mbuf.hh	/^    int32_t     mh_type;        \/\/ 0x1C$/;"	m	struct:tru64::m_hdr
mhz	src/kern/tru64/tru64.hh	/^        uint32_t     mhz;               \/\/!< mhz$/;"	m	struct:Tru64::cpu_info
mibc	src/dev/ns_gige.hh	/^    uint32_t    mibc;$/;"	m	struct:dp_regs
micro	src/python/m5/util/convert.py	/^micro = 1.0e-6$/;"	v
microOps	src/arch/arm/insts/pred_inst.hh	/^    StaticInstPtr * microOps;$/;"	m	class:ArmISA::PredMacroOp
microPC	src/arch/generic/types.hh	/^    microPC() const$/;"	f	class:GenericISA::DelaySlotUPCState
microPC	src/arch/generic/types.hh	/^    microPC() const$/;"	f	class:GenericISA::PCStateBase
microPC	src/arch/generic/types.hh	/^    microPC() const$/;"	f	class:GenericISA::UPCState
microPC	src/cpu/base_dyn_inst.hh	/^    const Addr microPC() const { return pc.microPC(); }$/;"	f	class:BaseDynInst
microPC	src/cpu/checker/cpu.hh	/^    MicroPC microPC() { return thread->microPC(); }$/;"	f	class:CheckerCPU
microPC	src/cpu/checker/thread_context.hh	/^    MicroPC microPC()$/;"	f	class:CheckerThreadContext
microPC	src/cpu/inorder/cpu.hh	/^    MicroPC microPC(ThreadID tid) { return pc[tid].microPC(); }$/;"	f	class:InOrderCPU
microPC	src/cpu/inorder/inorder_dyn_inst.hh	/^    const MicroPC microPC() { return pc.microPC(); }$/;"	f	class:InOrderDynInst
microPC	src/cpu/inorder/thread_context.hh	/^    MicroPC microPC()$/;"	f	class:InOrderThreadContext
microPC	src/cpu/o3/commit.hh	/^    Addr microPC(ThreadID tid) { return pc[tid].microPC(); }$/;"	f	class:DefaultCommit
microPC	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::microPC(ThreadID tid)$/;"	f	class:FullO3CPU
microPC	src/cpu/o3/thread_context.hh	/^    virtual MicroPC microPC()$/;"	f	class:O3ThreadContext
microPC	src/cpu/simple/base.hh	/^    MicroPC microPC() { return thread->microPC(); }$/;"	f	class:BaseSimpleCPU
microPC	src/cpu/simple_thread.hh	/^    microPC()$/;"	f	class:SimpleThread
microPC	src/cpu/thread_context.hh	/^    MicroPC microPC() { return actualTC->microPC(); }$/;"	f	class:ProxyThreadContext
microcode	src/arch/x86/isa/insts/general_purpose/arithmetic/__init__.py	/^microcode = ""$/;"	v
microcode	src/arch/x86/isa/insts/general_purpose/compare_and_test/__init__.py	/^microcode = ""$/;"	v
microcode	src/arch/x86/isa/insts/general_purpose/control_transfer/__init__.py	/^microcode = ""$/;"	v
microcode	src/arch/x86/isa/insts/general_purpose/data_conversion/__init__.py	/^microcode = ""$/;"	v
microcode	src/arch/x86/isa/insts/general_purpose/data_conversion/ascii_adjust.py	/^microcode = ""$/;"	v
microcode	src/arch/x86/isa/insts/general_purpose/data_conversion/bcd_adjust.py	/^microcode = ""$/;"	v
microcode	src/arch/x86/isa/insts/general_purpose/data_conversion/extract_sign_mask.py	/^microcode = ""$/;"	v
microcode	src/arch/x86/isa/insts/general_purpose/data_transfer/__init__.py	/^microcode = ""$/;"	v
microcode	src/arch/x86/isa/insts/general_purpose/flags/__init__.py	/^microcode = ""$/;"	v
microcode	src/arch/x86/isa/insts/general_purpose/input_output/__init__.py	/^microcode = ""$/;"	v
microcode	src/arch/x86/isa/insts/general_purpose/load_segment_registers.py	/^microcode = ""$/;"	v
microcode	src/arch/x86/isa/insts/general_purpose/rotate_and_shift/__init__.py	/^microcode = ""$/;"	v
microcode	src/arch/x86/isa/insts/general_purpose/string/__init__.py	/^microcode = ""$/;"	v
microcode	src/arch/x86/isa/insts/romutil.py	/^    "startLabel" : "longModeInterrupt",$/;"	v
microcode	src/arch/x86/isa/insts/system/__init__.py	/^microcode = ""$/;"	v
microcodeRom	src/cpu/base.hh	/^    TheISA::MicrocodeRom microcodeRom;$/;"	m	class:BaseCPU
microops	src/arch/micro_asm_test.py	/^microops = {$/;"	v
microops	src/arch/x86/insts/macroop.hh	/^    StaticInstPtr * microops;$/;"	m	class:X86ISA::MacroopBase
microseconds	src/dev/etherdump.cc	/^    uint32_t microseconds;$/;"	m	struct:pcap_pkthdr	file:
mid	src/dev/pcireg.h	/^    MID mid;$/;"	m	struct:MSICAP
middleButton	src/dev/ps2.hh	/^    Bitfield<2> middleButton;$/;"	m	namespace:Ps2
midr	src/arch/arm/ArmISA.py	/^    midr = Param.UInt32(0x410fc0f0, "MIDR value")$/;"	v	class:ArmISA
milli	src/python/m5/util/convert.py	/^milli = 1.0e-3$/;"	v
min	src/base/statistics.hh	/^        Counter min;$/;"	m	struct:Stats::DistStor::Params
min	src/base/stats/info.hh	/^    Counter min;$/;"	m	struct:Stats::DistData
min	src/dev/mc146818.hh	/^            uint8_t min;$/;"	m	struct:MC146818::__anon78::__anon79
minBankFreeAt	src/mem/dram_ctrl.cc	/^DRAMCtrl::minBankFreeAt(const deque<DRAMPacket*>& queue) const$/;"	f	class:DRAMCtrl
minPeriod	src/cpu/testers/traffic_gen/generators.hh	/^    const Tick minPeriod;$/;"	m	class:LinearGen
minPeriod	src/cpu/testers/traffic_gen/generators.hh	/^    const Tick minPeriod;$/;"	m	class:RandomGen
minWritesPerSwitch	src/mem/dram_ctrl.hh	/^    const uint32_t minWritesPerSwitch;$/;"	m	class:DRAMCtrl
min_alrm	src/dev/mc146818.hh	/^            uint8_t min_alrm;$/;"	m	struct:MC146818::__anon78::__anon79
min_bucket	src/base/statistics.hh	/^    Counter min_bucket;$/;"	m	class:Stats::HistStor
min_track	src/base/statistics.hh	/^    Counter min_track;$/;"	m	class:Stats::DistStor
min_val	src/base/statistics.hh	/^    Counter min_val;$/;"	m	class:Stats::DistStor
min_val	src/base/stats/info.hh	/^    Counter min_val;$/;"	m	struct:Stats::DistData
min_writes_per_switch	src/mem/DRAMCtrl.py	/^    min_writes_per_switch = Param.Unsigned(16, "Minimum write bursts before "$/;"	v	class:DRAMCtrl
mincore	src/kern/linux/linux_syscalls.hh	/^    mincore = 120,$/;"	e	enum:SystemCalls::__anon87
mincore	src/kern/tru64/tru64_syscalls.hh	/^        mincore = 78,$/;"	e	enum:SystemCalls::__anon102
minimumGrant	src/dev/pcireg.h	/^        uint8_t minimumGrant;$/;"	m	struct:PCIConfig::__anon80
minor	src/arch/x86/bios/SMBios.py	/^    minor = Param.UInt8(0, "minor version number")$/;"	v	class:X86SMBiosBiosInformation
minorVer	src/arch/x86/bios/smbios.hh	/^    uint8_t minorVer;$/;"	m	class:X86ISA::SMBios::BiosInformation
minorVersion	src/arch/x86/bios/smbios.hh	/^        uint8_t minorVersion;$/;"	m	struct:X86ISA::SMBios::SMBiosTable::SMBiosHeader
minor_version	src/arch/x86/bios/SMBios.py	/^    minor_version = Param.UInt8(5, "minor version number")$/;"	v	class:X86SMBiosSMBiosTable
miscOpcode	src/arch/arm/types.hh	/^        Bitfield<7,  4>  miscOpcode;$/;"	m	namespace:ArmISA
miscRegFile	src/arch/mips/isa.hh	/^        std::vector<std::vector<MiscReg> > miscRegFile;$/;"	m	class:MipsISA::ISA
miscRegFile	src/cpu/ozone/thread_state.hh	/^    TheISA::MiscRegFile miscRegFile;$/;"	m	struct:OzoneThreadState
miscRegFile_WriteMask	src/arch/mips/isa.hh	/^        std::vector<std::vector<MiscReg> > miscRegFile_WriteMask;$/;"	m	class:MipsISA::ISA
miscRegIdxs	src/cpu/checker/cpu.hh	/^    std::queue<int> miscRegIdxs;$/;"	m	class:CheckerCPU
miscRegName	src/arch/arm/miscregs.hh	/^    const char * const miscRegName[] = {$/;"	m	namespace:ArmISA
miscRegName	src/arch/power/miscregs.hh	/^const char * const miscRegName[NUM_MISCREGS] = {$/;"	m	namespace:PowerISA
miscRegNames	src/arch/mips/isa.cc	/^ISA::miscRegNames[NumMiscRegs] =$/;"	m	class:MipsISA::ISA	file:
miscRegNames	src/arch/mips/isa.hh	/^        static std::string miscRegNames[NumMiscRegs];$/;"	m	class:MipsISA::ISA
miscRegTranslateACTLR_EL1	src/arch/arm/isa.hh	/^        miscRegTranslateACTLR_EL1,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateACTLR_EL2	src/arch/arm/isa.hh	/^        miscRegTranslateACTLR_EL2,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateAFSR0_EL1	src/arch/arm/isa.hh	/^        miscRegTranslateAFSR0_EL1,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateAFSR0_EL2	src/arch/arm/isa.hh	/^        miscRegTranslateAFSR0_EL2,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateAFSR1_EL1	src/arch/arm/isa.hh	/^        miscRegTranslateAFSR1_EL1,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateAFSR1_EL2	src/arch/arm/isa.hh	/^        miscRegTranslateAFSR1_EL2,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateAMAIR_EL1	src/arch/arm/isa.hh	/^        miscRegTranslateAMAIR_EL1,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateCNTFRQ_EL0	src/arch/arm/isa.hh	/^        miscRegTranslateCNTFRQ_EL0,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateCNTHCTL_EL2	src/arch/arm/isa.hh	/^        miscRegTranslateCNTHCTL_EL2,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateCNTHP_CTL_EL2	src/arch/arm/isa.hh	/^        miscRegTranslateCNTHP_CTL_EL2,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateCNTHP_CVAL_EL2	src/arch/arm/isa.hh	/^        miscRegTranslateCNTHP_CVAL_EL2,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateCNTHP_TVAL_EL2	src/arch/arm/isa.hh	/^        miscRegTranslateCNTHP_TVAL_EL2,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateCNTKCTL_EL1	src/arch/arm/isa.hh	/^        miscRegTranslateCNTKCTL_EL1,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateCNTPCT_EL0	src/arch/arm/isa.hh	/^        miscRegTranslateCNTPCT_EL0,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateCNTP_CTL_EL0	src/arch/arm/isa.hh	/^        miscRegTranslateCNTP_CTL_EL0,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateCNTP_CVAL_EL0	src/arch/arm/isa.hh	/^        miscRegTranslateCNTP_CVAL_EL0,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateCNTP_TVAL_EL0	src/arch/arm/isa.hh	/^        miscRegTranslateCNTP_TVAL_EL0,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateCNTVCT_EL0	src/arch/arm/isa.hh	/^        miscRegTranslateCNTVCT_EL0,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateCNTVOFF_EL2	src/arch/arm/isa.hh	/^        miscRegTranslateCNTVOFF_EL2,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateCNTV_CTL_EL0	src/arch/arm/isa.hh	/^        miscRegTranslateCNTV_CTL_EL0,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateCNTV_CVAL_EL0	src/arch/arm/isa.hh	/^        miscRegTranslateCNTV_CVAL_EL0,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateCNTV_TVAL_EL0	src/arch/arm/isa.hh	/^        miscRegTranslateCNTV_TVAL_EL0,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateCONTEXTIDR_EL1	src/arch/arm/isa.hh	/^        miscRegTranslateCONTEXTIDR_EL1,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateCPACR_EL1	src/arch/arm/isa.hh	/^        miscRegTranslateCPACR_EL1,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateCPTR_EL2	src/arch/arm/isa.hh	/^        miscRegTranslateCPTR_EL2,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateCSSELR_EL1	src/arch/arm/isa.hh	/^        miscRegTranslateCSSELR_EL1,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateDACR32_EL2	src/arch/arm/isa.hh	/^        miscRegTranslateDACR32_EL2,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateESR_EL2	src/arch/arm/isa.hh	/^        miscRegTranslateESR_EL2,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateFAR_EL1	src/arch/arm/isa.hh	/^        miscRegTranslateFAR_EL1,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateFAR_EL2	src/arch/arm/isa.hh	/^        miscRegTranslateFAR_EL2,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateHACR_EL2	src/arch/arm/isa.hh	/^        miscRegTranslateHACR_EL2,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateHCR_EL2	src/arch/arm/isa.hh	/^        miscRegTranslateHCR_EL2,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateHPFAR_EL2	src/arch/arm/isa.hh	/^        miscRegTranslateHPFAR_EL2,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateHSTR_EL2	src/arch/arm/isa.hh	/^        miscRegTranslateHSTR_EL2,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateIFSR32_EL2	src/arch/arm/isa.hh	/^        miscRegTranslateIFSR32_EL2,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateMAIR_EL1	src/arch/arm/isa.hh	/^        miscRegTranslateMAIR_EL1,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateMAIR_EL2	src/arch/arm/isa.hh	/^        miscRegTranslateMAIR_EL2,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateMDCR_EL2	src/arch/arm/isa.hh	/^        miscRegTranslateMDCR_EL2,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateMax	src/arch/arm/isa.hh	/^        miscRegTranslateMax$/;"	e	enum:ArmISA::translateTable
miscRegTranslatePAR_EL1	src/arch/arm/isa.hh	/^        miscRegTranslatePAR_EL1,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateSCTLR_EL1	src/arch/arm/isa.hh	/^        miscRegTranslateSCTLR_EL1,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateSCTLR_EL2	src/arch/arm/isa.hh	/^        miscRegTranslateSCTLR_EL2,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateSDER32_EL3	src/arch/arm/isa.hh	/^        miscRegTranslateSDER32_EL3,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateTCR_EL1	src/arch/arm/isa.hh	/^        miscRegTranslateTCR_EL1,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateTCR_EL2	src/arch/arm/isa.hh	/^        miscRegTranslateTCR_EL2,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateTEECR32_EL1	src/arch/arm/isa.hh	/^        miscRegTranslateTEECR32_EL1,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateTEEHBR32_EL1	src/arch/arm/isa.hh	/^        miscRegTranslateTEEHBR32_EL1,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateTPIDRRO_EL0	src/arch/arm/isa.hh	/^        miscRegTranslateTPIDRRO_EL0,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateTPIDR_EL0	src/arch/arm/isa.hh	/^        miscRegTranslateTPIDR_EL0,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateTPIDR_EL1	src/arch/arm/isa.hh	/^        miscRegTranslateTPIDR_EL1,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateTPIDR_EL2	src/arch/arm/isa.hh	/^        miscRegTranslateTPIDR_EL2,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateTTBR0_EL1	src/arch/arm/isa.hh	/^        miscRegTranslateTTBR0_EL1,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateTTBR0_EL2	src/arch/arm/isa.hh	/^        miscRegTranslateTTBR0_EL2,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateTTBR1_EL1	src/arch/arm/isa.hh	/^        miscRegTranslateTTBR1_EL1,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateVBAR_EL1	src/arch/arm/isa.hh	/^        miscRegTranslateVBAR_EL1,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateVBAR_EL2	src/arch/arm/isa.hh	/^        miscRegTranslateVBAR_EL2,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateVTCR_EL2	src/arch/arm/isa.hh	/^        miscRegTranslateVTCR_EL2,$/;"	e	enum:ArmISA::translateTable
miscRegTranslateVTTBR_EL2	src/arch/arm/isa.hh	/^        miscRegTranslateVTTBR_EL2,$/;"	e	enum:ArmISA::translateTable
miscRegValid	src/arch/arm/tlb.hh	/^    bool miscRegValid;$/;"	m	class:ArmISA::TLB
miscRegfileReads	src/cpu/o3/cpu.hh	/^    Stats::Scalar miscRegfileReads;$/;"	m	class:FullO3CPU
miscRegfileWrites	src/cpu/o3/cpu.hh	/^    Stats::Scalar miscRegfileWrites;$/;"	m	class:FullO3CPU
miscRegs	src/arch/arm/isa.hh	/^        MiscReg miscRegs[NumMiscRegs];$/;"	m	class:ArmISA::ISA
miscRegs	src/arch/power/isa.hh	/^    MiscReg miscRegs[NumMiscRegs];$/;"	m	class:PowerISA::ISA
miscv	src/arch/x86/regs/misc.hh	/^        Bitfield<59> miscv; \/\/ Miscellaneous-error register valid$/;"	m	namespace:X86ISA
mispredPC	src/cpu/o3/comm.hh	/^        Addr mispredPC;$/;"	m	struct:TimeBufStruct::decodeComm
mispredPC	src/cpu/o3/comm.hh	/^    Addr mispredPC[Impl::MaxThreads];$/;"	m	struct:DefaultIEWDefaultCommit
mispredictInst	src/cpu/o3/comm.hh	/^        DynInstPtr mispredictInst;  \/\/ *F$/;"	m	struct:TimeBufStruct::commitComm
mispredictInst	src/cpu/o3/comm.hh	/^        DynInstPtr mispredictInst;$/;"	m	struct:TimeBufStruct::decodeComm
mispredictInst	src/cpu/o3/comm.hh	/^    DynInstPtr mispredictInst[Impl::MaxThreads];$/;"	m	struct:DefaultIEWDefaultCommit
mispredictPct	src/cpu/inorder/resources/execution_unit.hh	/^    Stats::Formula mispredictPct;$/;"	m	class:ExecutionUnit
mispredicted	src/cpu/base_dyn_inst.hh	/^    bool mispredicted()$/;"	f	class:BaseDynInst
mispredicted	src/cpu/inorder/inorder_dyn_inst.hh	/^    mispredicted()$/;"	f	class:InOrderDynInst
misrouting	src/mem/ruby/network/fault_model/FaultModel.hh	/^        misrouting,$/;"	e	enum:FaultModel::fault_type
missAddr	src/mem/cache/prefetch/stride.hh	/^        Addr missAddr;$/;"	m	class:StridePrefetcher::StrideEntry
missCount	src/mem/cache/base.hh	/^    Counter missCount;$/;"	m	class:BaseCache
missLatency	src/mem/cache/base.hh	/^    Stats::Vector missLatency[MemCmd::NUM_MEM_CMDS];$/;"	m	class:BaseCache
missRate	src/mem/cache/base.hh	/^    Stats::Formula missRate[MemCmd::NUM_MEM_CMDS];$/;"	m	class:BaseCache
misses	src/arch/arm/tlb.hh	/^    Stats::Formula misses;$/;"	m	class:ArmISA::TLB
misses	src/arch/mips/tlb.hh	/^    Stats::Formula misses;$/;"	m	class:MipsISA::TLB
misses	src/arch/power/tlb.hh	/^    Stats::Formula misses;$/;"	m	class:PowerISA::TLB
misses	src/mem/cache/base.hh	/^    Stats::Vector misses[MemCmd::NUM_MEM_CMDS];$/;"	m	class:BaseCache
misses	src/mem/cache/tags/fa_lru.hh	/^    Stats::Vector misses;$/;"	m	class:FALRU
misspeculating	src/cpu/checker/thread_context.hh	/^    bool misspeculating() { return actualTC->misspeculating(); }$/;"	f	class:CheckerThreadContext
misspeculating	src/cpu/inorder/thread_context.hh	/^    bool misspeculating() { return false; }$/;"	f	class:InOrderThreadContext
misspeculating	src/cpu/o3/thread_context.hh	/^    virtual bool misspeculating() { return false; }$/;"	f	class:O3ThreadContext
misspeculating	src/cpu/ozone/cpu.hh	/^        bool misspeculating() { return false; }$/;"	f	class:OzoneCPU::OzoneTC
misspeculating	src/cpu/simple/base.hh	/^    bool misspeculating() { return thread->misspeculating(); }$/;"	f	class:BaseSimpleCPU
misspeculating	src/cpu/simple_thread.hh	/^SimpleThread::misspeculating()$/;"	f	class:SimpleThread
misspeculating	src/cpu/thread_context.hh	/^    bool misspeculating() { return actualTC->misspeculating(); }$/;"	f	class:ProxyThreadContext
misspeculating	src/sim/insttracer.hh	/^    bool misspeculating;$/;"	m	class:Trace::InstRecord
mkdir	src/kern/linux/linux_syscalls.hh	/^    mkdir = 121,$/;"	e	enum:SystemCalls::__anon87
mkdir	src/kern/tru64/tru64_syscalls.hh	/^        mkdir = 136,$/;"	e	enum:SystemCalls::__anon102
mkdirFunc	src/sim/syscall_emul.cc	/^mkdirFunc(SyscallDesc *desc, int num, LiveProcess *p, ThreadContext *tc)$/;"	f
mknod	src/kern/linux/linux_syscalls.hh	/^    mknod = 122,$/;"	e	enum:SystemCalls::__anon87
mknod	src/kern/tru64/tru64_syscalls.hh	/^        mknod = 14,$/;"	e	enum:SystemCalls::__anon102
mkutctime	src/base/time.cc	/^mkutctime(struct tm *time)$/;"	f
mlock	src/kern/linux/linux_syscalls.hh	/^    mlock = 123,$/;"	e	enum:SystemCalls::__anon87
mlockall	src/kern/linux/linux_syscalls.hh	/^    mlockall = 124,$/;"	e	enum:SystemCalls::__anon87
mlw	src/dev/pcireg.h	/^        Bitfield<9,4>   mlw;$/;"	m	struct:PXCAP
mm	src/arch/sparc/miscregs.hh	/^    Bitfield<6, 7> mm;$/;"	m	namespace:SparcISA
mmap	src/kern/linux/linux_syscalls.hh	/^    mmap = 125,$/;"	e	enum:SystemCalls::__anon87
mmap	src/kern/tru64/tru64_syscalls.hh	/^        mmap = 71,$/;"	e	enum:SystemCalls::__anon102
mmap2	src/kern/linux/linux_syscalls.hh	/^    mmap2 = 126,$/;"	e	enum:SystemCalls::__anon87
mmapFunc	src/sim/syscall_emul.hh	/^mmapFunc(SyscallDesc *desc, int num, LiveProcess *p, ThreadContext *tc)$/;"	f
mmapGrowsDown	src/arch/x86/linux/linux.hh	/^    static bool mmapGrowsDown() { return true; }$/;"	f	class:X86Linux32
mmapGrowsDown	src/kern/operatingsystem.hh	/^    static bool mmapGrowsDown() { return false; }$/;"	f	class:OperatingSystem
mmapGrowsUp	src/kern/operatingsystem.hh	/^    static const bool mmapGrowsUp = true;$/;"	m	class:OperatingSystem
mmapPerf	src/cpu/kvm/perfevent.cc	/^PerfKvmCounter::mmapPerf(int pages)$/;"	f	class:PerfKvmCounter
mmap_end	src/sim/process.hh	/^    Addr mmap_end;$/;"	m	class:Process
mmap_start	src/sim/process.hh	/^    Addr mmap_start;$/;"	m	class:Process
mmask	src/dev/pcireg.h	/^    uint32_t mmask;$/;"	m	struct:MSICAP
mmc	src/dev/pcireg.h	/^        Bitfield<3,1>   mmc;$/;"	m	struct:MSICAP
mmc_fake	src/dev/arm/RealView.py	/^    mmc_fake       = AmbaFake(pio_addr=0x1c050000)$/;"	v	class:VExpress_EMM
mmc_fake	src/dev/arm/RealView.py	/^    mmc_fake      = AmbaFake(pio_addr=0x10005000)$/;"	v	class:RealViewEB
mmc_fake	src/dev/arm/RealView.py	/^    mmc_fake      = AmbaFake(pio_addr=0x10005000)$/;"	v	class:RealViewPBX
mme	src/dev/pcireg.h	/^        Bitfield<6,4>   mme;$/;"	m	struct:MSICAP
mmioRing	src/cpu/kvm/base.hh	/^    struct kvm_coalesced_mmio_ring *mmioRing;$/;"	m	class:BaseKvmCPU	typeref:struct:BaseKvmCPU::kvm_coalesced_mmio_ring
mmio_req	src/cpu/kvm/base.hh	/^    Request mmio_req;$/;"	m	class:BaseKvmCPU
mmuSize	src/arch/mips/pra_constants.hh	/^    Bitfield<30, 25> mmuSize;$/;"	m	namespace:MipsISA
mmx	src/arch/x86/nativetrace.hh	/^        uint64_t mmx[8];$/;"	m	struct:Trace::X86NativeTrace::ThreadState
mnem	src/arch/x86/faults.hh	/^        const char * mnem;$/;"	m	class:X86ISA::X86FaultBase
mnemonic	src/arch/arm/faults.hh	/^    const char *mnemonic;$/;"	m	class:ArmISA::UndefinedInstruction
mnemonic	src/arch/x86/faults.hh	/^        virtual const char * mnemonic() const$/;"	f	class:X86ISA::X86FaultBase
mnemonic	src/cpu/static_inst.hh	/^    const char *mnemonic;$/;"	m	class:StaticInst
mod	src/arch/x86/bios/intelmp.hh	/^    uint8_t mod;$/;"	m	class:X86ISA::IntelMP::CompatAddrSpaceMod
mod	src/arch/x86/types.hh	/^        Bitfield<7,6> mod;$/;"	m	namespace:X86ISA
mod	src/mem/ruby/slicc_interface/RubySlicc_Util.hh	/^mod(int val, int mod)$/;"	f
modRM	src/arch/x86/types.hh	/^        ModRM modRM;$/;"	m	struct:X86ISA::ExtMachInst
mode	src/arch/alpha/kernel_stats.cc	/^Statistics::mode(cpu_mode newmode, ThreadContext *tc)$/;"	f	class:AlphaISA::Kernel::Statistics
mode	src/arch/arm/insts/mem.hh	/^    AddrMode mode;$/;"	m	class:ArmISA::RfeOp
mode	src/arch/arm/insts/mem.hh	/^    AddrMode mode;$/;"	m	class:ArmISA::SrsOp
mode	src/arch/arm/miscregs.hh	/^        Bitfield<4, 0> mode;$/;"	m	namespace:ArmISA
mode	src/arch/arm/stage2_lookup.hh	/^    BaseTLB::Mode           mode;$/;"	m	class:ArmISA::Stage2LookUp
mode	src/arch/arm/table_walker.hh	/^        BaseTLB::Mode mode;$/;"	m	class:ArmISA::TableWalker::WalkerState
mode	src/arch/mips/dt_constants.hh	/^    Bitfield<11, 7>  mode;$/;"	m	namespace:MipsISA
mode	src/arch/x86/decoder.hh	/^    X86Mode mode;$/;"	m	class:X86ISA::Decoder
mode	src/arch/x86/pagetable_walker.hh	/^            BaseTLB::Mode mode;$/;"	m	class:X86ISA::Walker::WalkerState
mode	src/arch/x86/regs/misc.hh	/^        Bitfield<0> mode;$/;"	m	namespace:X86ISA
mode	src/arch/x86/types.hh	/^        Bitfield<3> mode;$/;"	m	namespace:X86ISA
mode	src/arch/x86/types.hh	/^        OperatingMode mode;$/;"	m	struct:X86ISA::ExtMachInst
mode	src/base/bitmap.hh	/^    VideoConvert::Mode mode;$/;"	m	class:Bitmap
mode	src/cpu/translation.hh	/^    BaseTLB::Mode mode;$/;"	m	class:WholeTranslationState
mode	src/dev/intel_8254_timer.hh	/^        Bitfield<3, 1> mode;$/;"	m	class:Intel8254Timer
mode	src/dev/intel_8254_timer.hh	/^        uint8_t mode;$/;"	m	class:Intel8254Timer::Counter
mode	src/dev/x86/I8259.py	/^    mode = Param.X86I8259CascadeMode('How this I8259 is cascaded')$/;"	v	class:I8259
mode	src/dev/x86/i8259.hh	/^    Enums::X86I8259CascadeMode mode;$/;"	m	class:X86ISA::I8259
mode	src/sim/process.hh	/^        int mode;$/;"	m	class:Process::FdMap
mode1	src/dev/alpha/tsunami_io.hh	/^    uint8_t mode1;$/;"	m	class:TsunamiIO
mode1	src/dev/mips/malta_io.hh	/^    uint8_t mode1;$/;"	m	class:MaltaIO
mode2	src/dev/alpha/tsunami_io.hh	/^    uint8_t mode2;$/;"	m	class:TsunamiIO
mode2	src/dev/mips/malta_io.hh	/^    uint8_t mode2;$/;"	m	class:MaltaIO
modeConv	src/arch/arm/insts/fplib.cc	/^modeConv(FPSCR fpscr)$/;"	f	namespace:ArmISA
mode_debug	src/arch/mips/isa_traits.hh	/^    mode_debug = 3,         \/\/ debug mode$/;"	e	enum:MipsISA::mode_type
mode_executive	src/arch/alpha/isa_traits.hh	/^    mode_executive = 1,     \/\/ executive (unused by unix)$/;"	e	enum:AlphaISA::mode_type
mode_kernel	src/arch/alpha/isa_traits.hh	/^    mode_kernel = 0,        \/\/ kernel$/;"	e	enum:AlphaISA::mode_type
mode_kernel	src/arch/mips/isa_traits.hh	/^    mode_kernel = 0,        \/\/ kernel$/;"	e	enum:MipsISA::mode_type
mode_number	src/arch/alpha/isa_traits.hh	/^    mode_number             \/\/ number of modes$/;"	e	enum:AlphaISA::mode_type
mode_number	src/arch/mips/isa_traits.hh	/^    mode_number             \/\/ number of modes$/;"	e	enum:MipsISA::mode_type
mode_supervisor	src/arch/alpha/isa_traits.hh	/^    mode_supervisor = 2,    \/\/ supervisor (unused by unix)$/;"	e	enum:AlphaISA::mode_type
mode_supervisor	src/arch/mips/isa_traits.hh	/^    mode_supervisor = 1,    \/\/ supervisor$/;"	e	enum:MipsISA::mode_type
mode_t	src/kern/solaris/solaris.hh	/^    typedef uint32_t mode_t;$/;"	t	class:Solaris
mode_t	src/kern/tru64/tru64.hh	/^    typedef uint32_t mode_t;$/;"	t	class:Tru64
mode_type	src/arch/alpha/isa_traits.hh	/^enum mode_type$/;"	g	namespace:AlphaISA
mode_type	src/arch/mips/isa_traits.hh	/^enum mode_type$/;"	g	namespace:MipsISA
mode_user	src/arch/alpha/isa_traits.hh	/^    mode_user = 3,          \/\/ user mode$/;"	e	enum:AlphaISA::mode_type
mode_user	src/arch/mips/isa_traits.hh	/^    mode_user = 2,          \/\/ user mode$/;"	e	enum:MipsISA::mode_type
model	src/arch/x86/bios/IntelMP.py	/^    model = Param.UInt8(0, 'Processor model')$/;"	v	class:X86IntelMPProcessor
modelSpecificCode	src/arch/x86/regs/misc.hh	/^        Bitfield<31,16> modelSpecificCode;$/;"	m	namespace:X86ISA
modestr	src/arch/alpha/kernel_stats.cc	/^const char *modestr[] = { "kernel", "user", "idle" };$/;"	m	namespace:AlphaISA::Kernel	file:
modified_imm	src/arch/arm/insts/pred_inst.hh	/^modified_imm(uint8_t ctrlImm, uint8_t dataImm)$/;"	f	namespace:ArmISA
modify_ldt	src/kern/linux/linux_syscalls.hh	/^    modify_ldt = 127,$/;"	e	enum:SystemCalls::__anon87
modpath	src/sim/init.hh	/^    const char *modpath;$/;"	m	struct:EmbeddedPython
modules	src/python/m5/internal/params.py	/^    modules = __loader__.modules$/;"	v
modules	src/python/m5/internal/params.py	/^    modules = { }$/;"	v
modules	src/python/m5/objects/__init__.py	/^    modules = __loader__.modules$/;"	v
modules	src/python/m5/objects/__init__.py	/^    modules = { }$/;"	v
mon	src/dev/mc146818.hh	/^            uint8_t mon;$/;"	m	struct:MC146818::__anon78::__anon79
mon	src/mem/comm_monitor.hh	/^        CommMonitor& mon;$/;"	m	class:CommMonitor::MonitorMasterPort
mon	src/mem/comm_monitor.hh	/^        CommMonitor& mon;$/;"	m	class:CommMonitor::MonitorSlavePort
moreBytes	src/arch/alpha/decoder.hh	/^    moreBytes(const PCState &pc, Addr fetchPC, MachInst inst)$/;"	f	class:AlphaISA::Decoder
moreBytes	src/arch/arm/decoder.cc	/^Decoder::moreBytes(const PCState &pc, Addr fetchPC, MachInst inst)$/;"	f	class:ArmISA::Decoder
moreBytes	src/arch/arm/decoder.hh	/^    void moreBytes(MachInst machInst)$/;"	f	class:ArmISA::Decoder
moreBytes	src/arch/mips/decoder.hh	/^    moreBytes(const PCState &pc, Addr fetchPC, MachInst inst)$/;"	f	class:MipsISA::Decoder
moreBytes	src/arch/power/decoder.hh	/^    moreBytes(MachInst machInst)$/;"	f	class:PowerISA::Decoder
moreBytes	src/arch/power/decoder.hh	/^    moreBytes(const PCState &pc, Addr fetchPC, MachInst inst)$/;"	f	class:PowerISA::Decoder
moreBytes	src/arch/sparc/decoder.hh	/^    moreBytes(const PCState &pc, Addr fetchPC, MachInst inst)$/;"	f	class:SparcISA::Decoder
moreBytes	src/arch/x86/decoder.hh	/^    void moreBytes(const PCState &pc, Addr fetchPC, MachInst data)$/;"	f	class:X86ISA::Decoder
moreToWb	src/dev/i8254xGBe.hh	/^        bool moreToWb;$/;"	m	class:IGbE::DescCache
mount	src/kern/linux/linux_syscalls.hh	/^    mount = 128,$/;"	e	enum:SystemCalls::__anon87
mount	src/kern/tru64/tru64_syscalls.hh	/^        mount = 21,$/;"	e	enum:SystemCalls::__anon102
mouse	src/base/vnc/vncinput.hh	/^    VncMouse *mouse;$/;"	m	class:VncInput
mouse	src/dev/x86/i8042.hh	/^    PS2Mouse mouse;$/;"	m	class:X86ISA::I8042
mouseAt	src/dev/arm/kmi.cc	/^Pl050::mouseAt(uint16_t x, uint16_t y, uint8_t buttons)$/;"	f	class:Pl050
mouseFullInt	src/dev/x86/i8042.hh	/^        Bitfield<1> mouseFullInt;$/;"	m	class:X86ISA::I8042
mouseIntPin	src/dev/x86/i8042.hh	/^    IntSourcePin *mouseIntPin;$/;"	m	class:X86ISA::I8042
mouseOutputFull	src/dev/x86/i8042.hh	/^        Bitfield<5> mouseOutputFull;$/;"	m	class:X86ISA::I8042
mouse_int_pin	src/dev/x86/I8042.py	/^    mouse_int_pin = Param.X86IntSourcePin(X86IntSourcePin(),$/;"	v	class:I8042
moveToFront	src/mem/cache/mshr_queue.cc	/^MSHRQueue::moveToFront(MSHR *mshr)$/;"	f	class:MSHRQueue
moveToHead	src/mem/cache/tags/cacheset.hh	/^CacheSet<Blktype>::moveToHead(Blktype *blk)$/;"	f	class:CacheSet
moveToHead	src/mem/cache/tags/fa_lru.cc	/^FALRU::moveToHead(FALRUBlk *blk)$/;"	f	class:FALRU
moveToReady	src/cpu/o3/mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::moveToReady(MemDepEntryPtr &woken_inst_entry)$/;"	f	class:MemDepUnit
moveToRespQ	src/mem/dram_ctrl.cc	/^DRAMCtrl::moveToRespQ()$/;"	f	class:DRAMCtrl
moveToTail	src/mem/cache/tags/cacheset.hh	/^CacheSet<Blktype>::moveToTail(Blktype *blk)$/;"	f	class:CacheSet
moveToYoungerInst	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::moveToYoungerInst(ListOrderIt list_order_it)$/;"	f	class:InstructionQueue
mp	src/arch/x86/regs/misc.hh	/^        Bitfield<1> mp; \/\/ Monitor Coprocessor$/;"	m	namespace:X86ISA
mpConfigTable	src/arch/x86/system.hh	/^    X86ISA::IntelMP::ConfigTable * mpConfigTable;$/;"	m	class:X86System
mpFloatingPointer	src/arch/x86/system.hh	/^    X86ISA::IntelMP::FloatingPointer * mpFloatingPointer;$/;"	m	class:X86System
mpba	src/dev/pcireg.h	/^    MPBA mpba;$/;"	m	struct:MSIXCAP
mpend	src/dev/pcireg.h	/^    uint32_t mpend;$/;"	m	struct:MSICAP
mprotect	src/kern/linux/linux_syscalls.hh	/^    mprotect = 129,$/;"	e	enum:SystemCalls::__anon87
mprotect	src/kern/tru64/tru64_syscalls.hh	/^        mprotect = 74,$/;"	e	enum:SystemCalls::__anon102
mps	src/dev/pcireg.h	/^        Bitfield<2,0>   mps;$/;"	m	struct:PXCAP
mps	src/dev/pcireg.h	/^        Bitfield<7,5>   mps;$/;"	m	struct:PXCAP
mpx	src/kern/linux/linux_syscalls.hh	/^    mpx = 130,$/;"	e	enum:SystemCalls::__anon87
mremap	src/kern/linux/linux_syscalls.hh	/^    mremap = 131,$/;"	e	enum:SystemCalls::__anon87
mremap	src/kern/tru64/tru64_syscalls.hh	/^        mremap = 65,$/;"	e	enum:SystemCalls::__anon102
mremapFunc	src/sim/syscall_emul.hh	/^mremapFunc(SyscallDesc *desc, int callnum, LiveProcess *process, ThreadContext *tc)$/;"	f
mrrs	src/dev/pcireg.h	/^        Bitfield<14,12> mrrs;$/;"	m	struct:PXCAP
ms	src/sim/core.cc	/^Tick ms;$/;"	m	namespace:SimClock::Int	file:
ms	src/sim/core.cc	/^double ms;$/;"	m	namespace:SimClock::Float	file:
ms_param_name	src/mem/ruby/network/orion/OrionConfig.hh	/^    static std::string ms_param_name[];$/;"	m	class:OrionConfig
msec	src/base/time.hh	/^    long msec() const { return _time.tv_nsec \/ NSEC_PER_MSEC; }$/;"	f	class:Time
msec	src/base/time.hh	/^    void msec(long msec) { _time.tv_nsec = msec * NSEC_PER_MSEC; }$/;"	f	class:Time
msfs_syscall	src/kern/tru64/tru64_syscalls.hh	/^        msfs_syscall = 240,$/;"	e	enum:SystemCalls::__anon102
msg_data	src/dev/pcireg.h	/^        uint32_t msg_data;$/;"	m	struct:MSIXTable::__anon81
msg_receive_trap	src/kern/tru64/tru64_syscalls.hh	/^        msg_receive_trap = 21,$/;"	e	enum:SystemCalls::__anon103
msg_rpc_trap	src/kern/tru64/tru64_syscalls.hh	/^        msg_rpc_trap = 22,$/;"	e	enum:SystemCalls::__anon103
msg_send_trap	src/kern/tru64/tru64_syscalls.hh	/^        msg_send_trap = 20,$/;"	e	enum:SystemCalls::__anon103
msgctl	src/kern/tru64/tru64_syscalls.hh	/^        msgctl = 200,$/;"	e	enum:SystemCalls::__anon102
msgget	src/kern/tru64/tru64_syscalls.hh	/^        msgget = 201,$/;"	e	enum:SystemCalls::__anon102
msgrcv	src/kern/tru64/tru64_syscalls.hh	/^        msgrcv = 202,$/;"	e	enum:SystemCalls::__anon102
msgsnd	src/kern/tru64/tru64_syscalls.hh	/^        msgsnd = 203,$/;"	e	enum:SystemCalls::__anon102
mshrMissRate	src/mem/cache/base.hh	/^    Stats::Formula mshrMissRate[MemCmd::NUM_MEM_CMDS];$/;"	m	class:BaseCache
mshrQueue	src/mem/cache/base.hh	/^    MSHRQueue mshrQueue;$/;"	m	class:BaseCache
mshr_cap_events	src/mem/cache/base.hh	/^    Stats::Vector mshr_cap_events;$/;"	m	class:BaseCache
mshr_hits	src/mem/cache/base.hh	/^    Stats::Vector mshr_hits[MemCmd::NUM_MEM_CMDS];$/;"	m	class:BaseCache
mshr_miss_latency	src/mem/cache/base.hh	/^    Stats::Vector mshr_miss_latency[MemCmd::NUM_MEM_CMDS];$/;"	m	class:BaseCache
mshr_misses	src/mem/cache/base.hh	/^    Stats::Vector mshr_misses[MemCmd::NUM_MEM_CMDS];$/;"	m	class:BaseCache
mshr_no_allocate_misses	src/mem/cache/base.hh	/^    Stats::Scalar mshr_no_allocate_misses;$/;"	m	class:BaseCache
mshr_uncacheable	src/mem/cache/base.hh	/^    Stats::Vector mshr_uncacheable[MemCmd::NUM_MEM_CMDS];$/;"	m	class:BaseCache
mshr_uncacheable_lat	src/mem/cache/base.hh	/^    Stats::Vector mshr_uncacheable_lat[MemCmd::NUM_MEM_CMDS];$/;"	m	class:BaseCache
mshrs	src/mem/cache/BaseCache.py	/^    mshrs = Param.Int("number of MSHRs (max outstanding requests)")$/;"	v	class:BaseCache
msicap	src/dev/pcidev.hh	/^    MSICAP msicap;$/;"	m	class:PciDevice
msie	src/dev/pcireg.h	/^        Bitfield<0>     msie;$/;"	m	struct:MSICAP
msixReg	src/dev/arm/gic_pl390.hh	/^    uint32_t msixReg;$/;"	m	class:Pl390
msixRegAddr	src/dev/arm/gic_pl390.hh	/^    Addr msixRegAddr;$/;"	m	class:Pl390
msix_addr	src/dev/arm/Gic.py	/^    msix_addr = Param.Addr(0x0, "Address for MSI-X register")$/;"	v	class:Pl390
msix_pba	src/dev/pcidev.hh	/^    std::vector<MSIXPbaEntry> msix_pba;$/;"	m	class:PciDevice
msix_table	src/dev/pcidev.hh	/^    std::vector<MSIXTable> msix_table;$/;"	m	class:PciDevice
msixcap	src/dev/pcidev.hh	/^    MSIXCAP msixcap;$/;"	m	class:PciDevice
msleep	src/kern/tru64/tru64_syscalls.hh	/^        msleep = 215,$/;"	e	enum:SystemCalls::__anon102
msrAddrToIndex	src/arch/x86/regs/msr.cc	/^msrAddrToIndex(MiscRegIndex &regNum, Addr addr)$/;"	f	namespace:X86ISA
msrMapData	src/arch/x86/regs/msr.cc	/^const MsrMap::value_type msrMapData[] = {$/;"	m	namespace:X86ISA	file:
msrMapSize	src/arch/x86/regs/msr.cc	/^static const unsigned msrMapSize = sizeof(msrMapData) \/ sizeof(msrMapData[0]);$/;"	m	namespace:X86ISA	file:
msrMrs64IssBuild	src/arch/arm/utility.hh	/^msrMrs64IssBuild(bool isRead, uint32_t op0, uint32_t op1, uint32_t crn,$/;"	f	namespace:ArmISA
msrMrs64TrapToHyp	src/arch/arm/utility.cc	/^msrMrs64TrapToHyp(const MiscRegIndex miscReg, bool isRead,$/;"	f	namespace:ArmISA
msrMrs64TrapToMon	src/arch/arm/utility.cc	/^msrMrs64TrapToMon(const MiscRegIndex miscReg, CPTR cptr \/* CPTR_EL3 *\/,$/;"	f	namespace:ArmISA
msrMrs64TrapToSup	src/arch/arm/utility.cc	/^msrMrs64TrapToSup(const MiscRegIndex miscReg, ExceptionLevel el,$/;"	f	namespace:ArmISA
mss	src/base/inet.hh	/^    uint16_t mss() const { return ntohs(opt_data.mss); }$/;"	f	struct:Net::TcpOpt
mss	src/dev/i8254xGBe_defs.hh	/^inline int mss(TxDesc *d) { assert(isContext(d)); return bits(d->d2,63,48); }$/;"	f	namespace:iGbReg::TxdOp
msync	src/kern/linux/linux_syscalls.hh	/^    msync = 132,$/;"	e	enum:SystemCalls::__anon87
msync	src/kern/tru64/tru64_syscalls.hh	/^        msync = 217,$/;"	e	enum:SystemCalls::__anon102
mt	src/arch/mips/pra_constants.hh	/^    Bitfield<2>  mt;$/;"	m	namespace:MipsISA
mt	src/arch/mips/pra_constants.hh	/^    Bitfield<9,  7>  mt;$/;"	m	namespace:MipsISA
mt	src/base/random.hh	/^    uint32_t mt[N];$/;"	m	class:Random
mtab	src/dev/pcireg.h	/^    MTAB mtab;$/;"	m	struct:MSIXCAP
mti	src/base/random.hh	/^    int mti;$/;"	m	class:Random
mtup	src/base/inet.hh	/^    uint16_t mtup() const { return ntohs(opt_data.mtu); }$/;"	f	struct:Net::IpOpt
mtur	src/base/inet.hh	/^    uint16_t mtur() const { return ntohs(opt_data.mtu); }$/;"	f	struct:Net::IpOpt
mtype	src/arch/arm/pagetable.hh	/^    MemoryType mtype;$/;"	m	struct:ArmISA::TlbEntry
mua	src/dev/pcireg.h	/^    uint32_t mua;$/;"	m	struct:MSICAP
mul62x62	src/arch/arm/insts/fplib.cc	/^mul62x62(uint64_t *x0, uint64_t *x1, uint64_t a, uint64_t b)$/;"	f	namespace:ArmISA
mul64x32	src/arch/arm/insts/fplib.cc	/^void mul64x32(uint64_t *x0, uint64_t *x1, uint64_t a, uint32_t b)$/;"	f	namespace:ArmISA
mul64x64	src/arch/arm/insts/fplib.cc	/^mul64x64(uint64_t *x0, uint64_t *x1, uint64_t a, uint64_t b)$/;"	f	namespace:ArmISA
multHi	src/arch/x86/insts/micromediaop.hh	/^        multHi() const$/;"	f	class:X86ISA::MediaOpBase
multLatency	src/cpu/inorder/InOrderCPU.py	/^    multLatency = Param.Cycles(1, "Latency for Multiply Operations")$/;"	v	class:InOrderCPU
multLatency	src/cpu/inorder/resources/mult_div_unit.hh	/^    Cycles multLatency;$/;"	m	class:MultDivUnit
multRepeatRate	src/cpu/inorder/InOrderCPU.py	/^    multRepeatRate = Param.Cycles(1, "Repeat Rate for Multiply Operations")$/;"	v	class:InOrderCPU
multRepeatRate	src/cpu/inorder/resources/mult_div_unit.hh	/^    unsigned multRepeatRate;$/;"	m	class:MultDivUnit
multiProc	src/arch/arm/system.hh	/^    bool multiProc;$/;"	m	class:ArmSystem
multi_proc	src/arch/arm/ArmSystem.py	/^    multi_proc = Param.Bool(True, "Multiprocessor system?")$/;"	v	class:ArmSystem
multiattrdict	src/python/m5/util/__init__.py	/^from attrdict import attrdict, multiattrdict, optiondict$/;"	i
multiattrdict	src/python/m5/util/attrdict.py	/^class multiattrdict(attrdict):$/;"	c
multicast	src/base/inet.hh	/^    bool multicast() const { return data[0] == 0x01; }$/;"	f	struct:Net::EthAddr
multicastHashEnable	src/dev/ns_gige.hh	/^    bool multicastHashEnable;$/;"	m	class:NSGigE
multidict	src/python/m5/util/__init__.py	/^from multidict import multidict$/;"	i
multidict	src/python/m5/util/multidict.py	/^class multidict(object):$/;"	c
multiplies	src/cpu/inorder/resources/mult_div_unit.hh	/^    Stats::Scalar multiplies;$/;"	m	class:MultDivUnit
mults_list	src/mem/ruby/filters/H3BloomFilter.hh	/^    int mults_list[6]; \/\/= {255,29,51,3,77,43};$/;"	m	class:H3BloomFilter
mungeSnippet	src/arch/isa_parser.py	/^    def mungeSnippet(self, s):$/;"	m	class:ISAParser
munlock	src/kern/linux/linux_syscalls.hh	/^    munlock = 133,$/;"	e	enum:SystemCalls::__anon87
munlockall	src/kern/linux/linux_syscalls.hh	/^    munlockall = 134,$/;"	e	enum:SystemCalls::__anon87
munmap	src/kern/linux/linux_syscalls.hh	/^    munmap = 135,$/;"	e	enum:SystemCalls::__anon87
munmap	src/kern/tru64/tru64_syscalls.hh	/^        munmap = 73,$/;"	e	enum:SystemCalls::__anon102
munmapFunc	src/sim/syscall_emul.cc	/^munmapFunc(SyscallDesc *desc, int num, LiveProcess *p, ThreadContext *tc)$/;"	f
mustSendRetry	src/mem/cache/base.hh	/^        bool mustSendRetry;$/;"	m	class:BaseCache::CacheSlavePort
mvalid	src/kern/tru64/tru64_syscalls.hh	/^        mvalid = 213,$/;"	e	enum:SystemCalls::__anon102
mvdm	src/arch/x86/regs/misc.hh	/^        Bitfield<20> mvdm; \/\/ MtrrVarDramEn$/;"	m	namespace:X86ISA
mvp	src/arch/mips/mt_constants.hh	/^    Bitfield<1>      mvp;$/;"	m	namespace:MipsISA
mwakeup	src/kern/tru64/tru64_syscalls.hh	/^        mwakeup = 216,$/;"	e	enum:SystemCalls::__anon102
mx	src/arch/mips/pra_constants.hh	/^    Bitfield<24>     mx;$/;"	m	namespace:MipsISA
mxc	src/dev/pcireg.h	/^    MXC mxc;$/;"	m	struct:MSIXCAP
mxcsr	src/cpu/kvm/x86_cpu.cc	/^    uint32_t mxcsr;$/;"	m	struct:FXSave	file:
mxcsr_mask	src/cpu/kvm/x86_cpu.cc	/^    uint32_t mxcsr_mask;$/;"	m	struct:FXSave	file:
mxe	src/dev/pcireg.h	/^        Bitfield<15>    mxe;$/;"	m	struct:MSIXCAP
mxid	src/dev/pcireg.h	/^    MXID mxid;$/;"	m	struct:MSIXCAP
myComment	src/mem/ruby/network/orion/ConfigFile.hh	/^	string myComment;    \/\/ separator between value and comments$/;"	m	class:ConfigFile
myContents	src/mem/ruby/network/orion/ConfigFile.hh	/^	std::map<string,string> myContents;  \/\/ extracted keys and values$/;"	m	class:ConfigFile
myDelimiter	src/mem/ruby/network/orion/ConfigFile.hh	/^	string myDelimiter;  \/\/ separator between key and value$/;"	m	class:ConfigFile
myIt	src/cpu/inorder/resource_sked.hh	/^    ResourceSked::SkedIt myIt;$/;"	m	class:RSkedIt
mySentry	src/mem/ruby/network/orion/ConfigFile.hh	/^	string mySentry;     \/\/ optional string to signal end of file$/;"	m	class:ConfigFile
myname	src/kern/kernel_stats.hh	/^    std::string myname;$/;"	m	class:Kernel::Statistics
mypath	src/unittest/genini.py	/^mypath = sys.path[0]$/;"	v
mystream	src/base/stats/text.hh	/^    bool mystream;$/;"	m	class:Stats::Text
n	src/arch/arm/miscregs.hh	/^        Bitfield<2, 0> n;$/;"	m	namespace:ArmISA
n	src/arch/arm/miscregs.hh	/^        Bitfield<31> n;$/;"	m	namespace:ArmISA
n	src/python/m5/util/region.py	/^    n = Region(9,10)$/;"	v
nCommittedDist	src/cpu/ozone/lw_back_end.hh	/^    Stats::Distribution nCommittedDist;$/;"	m	class:LWBackEnd
nEt	src/arch/arm/miscregs.hh	/^        Bitfield<6> nEt;$/;"	m	namespace:ArmISA
nIENBit	src/dev/ide_disk.hh	/^    bool nIENBit;$/;"	m	class:IdeDisk
nIssuedDist	src/cpu/ozone/lw_back_end.hh	/^    Stats::Vector nIssuedDist;$/;"	m	class:LWBackEnd
nState	src/arch/arm/nativetrace.hh	/^    ThreadState nState, mState;$/;"	m	class:Trace::ArmNativeTrace
nState	src/arch/x86/nativetrace.hh	/^    ThreadState nState;$/;"	m	class:Trace::X86NativeTrace
n_committed_dist	src/cpu/ozone/back_end.hh	/^    Stats::Distribution n_committed_dist;$/;"	m	class:BackEnd
n_issued_dist	src/cpu/ozone/back_end.hh	/^    Stats::Vector n_issued_dist;$/;"	m	class:BackEnd
nack	src/dev/x86/i8042.cc	/^X86ISA::PS2Device::nack()$/;"	f	class:X86ISA::PS2Device
name	src/arch/alpha/faults.hh	/^    FaultName name() const {return _name;}$/;"	f	class:AlphaISA::AlignmentFault
name	src/arch/alpha/faults.hh	/^    FaultName name() const {return _name;}$/;"	f	class:AlphaISA::ArithmeticFault
name	src/arch/alpha/faults.hh	/^    FaultName name() const {return _name;}$/;"	f	class:AlphaISA::DtbAcvFault
name	src/arch/alpha/faults.hh	/^    FaultName name() const {return _name;}$/;"	f	class:AlphaISA::DtbAlignmentFault
name	src/arch/alpha/faults.hh	/^    FaultName name() const {return _name;}$/;"	f	class:AlphaISA::DtbPageFault
name	src/arch/alpha/faults.hh	/^    FaultName name() const {return _name;}$/;"	f	class:AlphaISA::FloatEnableFault
name	src/arch/alpha/faults.hh	/^    FaultName name() const {return _name;}$/;"	f	class:AlphaISA::IntegerOverflowFault
name	src/arch/alpha/faults.hh	/^    FaultName name() const {return _name;}$/;"	f	class:AlphaISA::InterruptFault
name	src/arch/alpha/faults.hh	/^    FaultName name() const {return _name;}$/;"	f	class:AlphaISA::ItbAcvFault
name	src/arch/alpha/faults.hh	/^    FaultName name() const {return _name;}$/;"	f	class:AlphaISA::ItbPageFault
name	src/arch/alpha/faults.hh	/^    FaultName name() const {return _name;}$/;"	f	class:AlphaISA::MachineCheckFault
name	src/arch/alpha/faults.hh	/^    FaultName name() const {return _name;}$/;"	f	class:AlphaISA::NDtbMissFault
name	src/arch/alpha/faults.hh	/^    FaultName name() const {return _name;}$/;"	f	class:AlphaISA::PDtbMissFault
name	src/arch/alpha/faults.hh	/^    FaultName name() const {return _name;}$/;"	f	class:AlphaISA::PalFault
name	src/arch/alpha/faults.hh	/^    FaultName name() const {return _name;}$/;"	f	class:AlphaISA::ResetFault
name	src/arch/alpha/faults.hh	/^    FaultName name() const {return _name;}$/;"	f	class:AlphaISA::UnimplementedOpcodeFault
name	src/arch/alpha/osfpal.cc	/^PAL::name(int index)$/;"	f	class:PAL
name	src/arch/alpha/stacktrace.cc	/^ProcessInfo::name(Addr ksp) const$/;"	f	class:AlphaISA::ProcessInfo
name	src/arch/arm/faults.hh	/^        const FaultName name;$/;"	m	struct:ArmISA::ArmFault::FaultVals
name	src/arch/arm/faults.hh	/^    FaultName name() const { return vals.name; }$/;"	f	class:ArmISA::ArmFaultVals
name	src/arch/arm/stacktrace.cc	/^    ProcessInfo::name(Addr ksp) const$/;"	f	class:ArmISA::ProcessInfo
name	src/arch/arm/table_walker.hh	/^        std::string name() const { return tableWalker->name(); }$/;"	f	class:ArmISA::TableWalker::WalkerState
name	src/arch/generic/debugfaults.hh	/^    name() const$/;"	f	class:GenericISA::M5DebugFault
name	src/arch/mips/faults.hh	/^        const FaultName name;$/;"	m	struct:MipsISA::MipsFaultBase::FaultVals
name	src/arch/mips/faults.hh	/^    FaultName name() const { return vals.name; }$/;"	f	class:MipsISA::MipsFault
name	src/arch/mips/stacktrace.cc	/^ProcessInfo::name(Addr ksp) const$/;"	f	class:ProcessInfo
name	src/arch/power/faults.hh	/^    name() const$/;"	f	class:PowerISA::PowerFault
name	src/arch/power/stacktrace.cc	/^ProcessInfo::name(Addr ksp) const$/;"	f	class:PowerISA::ProcessInfo
name	src/arch/sparc/faults.hh	/^        const FaultName name;$/;"	m	struct:SparcISA::SparcFaultBase::FaultVals
name	src/arch/sparc/faults.hh	/^    FaultName name() const { return vals.name; }$/;"	f	class:SparcISA::SparcFault
name	src/arch/x86/faults.hh	/^        const char * name() const$/;"	f	class:X86ISA::UnimpInstFault
name	src/arch/x86/faults.hh	/^        const char * name() const$/;"	f	class:X86ISA::X86FaultBase
name	src/arch/x86/pagetable_walker.hh	/^            std::string name() const {return walker->name();}$/;"	f	class:X86ISA::Walker::WalkerState
name	src/arch/x86/stacktrace.cc	/^    ProcessInfo::name(Addr ksp) const$/;"	f	class:X86ISA::ProcessInfo
name	src/base/callback.hh	/^    std::string name() const { return "CallbackQueue"; }$/;"	f	class:CallbackQueue
name	src/base/debug.hh	/^    std::string name() const { return _name; }$/;"	f	class:Debug::Flag
name	src/base/remote_gdb.cc	/^BaseRemoteGDB::name()$/;"	f	class:BaseRemoteGDB
name	src/base/remote_gdb.cc	/^GDBListener::name()$/;"	f	class:GDBListener
name	src/base/remote_gdb.hh	/^        const std::string name() const { return gdb->name() + ".hwbkpt"; }$/;"	f	class:BaseRemoteGDB::HardBreakpoint
name	src/base/statistics.hh	/^    const std::string &name() const { return this->info()->name; }$/;"	f	class:Stats::DataWrap
name	src/base/statistics.hh	/^    name(const std::string &name)$/;"	f	class:Stats::DataWrap
name	src/base/stats/info.hh	/^    std::string name;$/;"	m	class:Stats::Info
name	src/base/stats/text.cc	/^    string name;$/;"	m	struct:Stats::DistPrint	file:
name	src/base/stats/text.cc	/^    string name;$/;"	m	struct:Stats::ScalarPrint	file:
name	src/base/stats/text.cc	/^    string name;$/;"	m	struct:Stats::SparseHistPrint	file:
name	src/base/stats/text.cc	/^    string name;$/;"	m	struct:Stats::VectorPrint	file:
name	src/base/trace.hh	/^inline const std::string &name() { return Trace::DefaultName; }$/;"	f
name	src/base/vnc/vncserver.hh	/^        char name[2]; \/\/ just to put M5 in here$/;"	m	struct:VncServer::ServerInitMsg
name	src/cpu/activity.hh	/^    const std::string &name() { return _name; }$/;"	f	class:ActivityRecorder
name	src/cpu/func_unit.hh	/^    std::string name;$/;"	m	class:FuncUnit
name	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::name() const$/;"	f	class:PipelineStage
name	src/cpu/inorder/reg_dep_map.cc	/^RegDepMap::name()$/;"	f	class:RegDepMap
name	src/cpu/inorder/resource.cc	/^Resource::name()$/;"	f	class:Resource
name	src/cpu/inorder/resource.cc	/^ResourceRequest::name()$/;"	f	class:ResourceRequest
name	src/cpu/inorder/resource_pool.9stage.cc	/^ResourcePool::name()$/;"	f	class:ResourcePool
name	src/cpu/inorder/resource_pool.cc	/^ResourcePool::name()$/;"	f	class:ResourcePool
name	src/cpu/inorder/resource_pool.hh	/^    std::string name(int res_idx) { return resources[res_idx]->name(); }$/;"	f	class:ResourcePool
name	src/cpu/inorder/resources/cache_unit.hh	/^    const std::string name() const$/;"	f	class:CacheUnitEvent
name	src/cpu/kvm/arm_cpu.hh	/^        const char *name;$/;"	m	struct:ArmKvmCPU::KvmCoreMiscRegInfo
name	src/cpu/kvm/arm_cpu.hh	/^        const char *name;$/;"	m	struct:ArmKvmCPU::KvmIntRegInfo
name	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::name() const$/;"	f	class:DefaultCommit
name	src/cpu/o3/decode_impl.hh	/^DefaultDecode<Impl>::name() const$/;"	f	class:DefaultDecode
name	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::name() const$/;"	f	class:DefaultFetch
name	src/cpu/o3/free_list.hh	/^    std::string name() const { return _name; };$/;"	f	class:UnifiedFreeList
name	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::name() const$/;"	f	class:DefaultIEW
name	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::name() const$/;"	f	class:InstructionQueue
name	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::name() const$/;"	f	class:LSQ
name	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::name() const$/;"	f	class:LSQUnit
name	src/cpu/o3/mem_dep_unit.hh	/^        std::string name() const { return "memdepentry"; }$/;"	f	class:MemDepUnit::MemDepEntry
name	src/cpu/o3/mem_dep_unit.hh	/^    std::string name() const { return _name; }$/;"	f	class:MemDepUnit
name	src/cpu/o3/probe/simple_trace.hh	/^    const std::string name() const { return ProbeListenerObject::name() + ".trace"; }$/;"	f	class:SimpleTrace
name	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::name() const$/;"	f	class:DefaultRename
name	src/cpu/o3/rob_impl.hh	/^ROB<Impl>::name() const$/;"	f	class:ROB
name	src/cpu/o3/scoreboard.hh	/^    std::string name() const { return _name; };$/;"	f	class:Scoreboard
name	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::InstQueue::name() const$/;"	f	class:BackEnd::InstQueue
name	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::name() const$/;"	f	class:BackEnd
name	src/cpu/ozone/front_end_impl.hh	/^FrontEnd<Impl>::name() const$/;"	f	class:FrontEnd
name	src/cpu/ozone/inorder_back_end_impl.hh	/^InorderBackEnd<Impl>::name() const$/;"	f	class:InorderBackEnd
name	src/cpu/ozone/inst_queue_impl.hh	/^InstQueue<Impl>::name() const$/;"	f	class:InstQueue
name	src/cpu/ozone/lsq_unit_impl.hh	/^OzoneLSQ<Impl>::name() const$/;"	f	class:OzoneLSQ
name	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::name() const$/;"	f	class:LWBackEnd
name	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::name() const$/;"	f	class:OzoneLWLSQ
name	src/cpu/pc_event.hh	/^    virtual const std::string name() const { return description; }$/;"	f	class:PCEvent
name	src/cpu/simple_thread.hh	/^    std::string name() const$/;"	f	class:SimpleThread
name	src/cpu/testers/traffic_gen/generators.hh	/^    std::string name() const { return _name; }$/;"	f	class:BaseGen
name	src/dev/arm/generic_timer.hh	/^        std::string name() const { return _name; }$/;"	f	class:GenericTimer::ArchTimer
name	src/dev/arm/hdlcd.hh	/^        const std::string name() const {$/;"	f	class:HDLcd::DmaDoneEvent
name	src/dev/arm/pl111.hh	/^        const std::string name() const {$/;"	f	class:Pl111::DmaDoneEvent
name	src/dev/arm/timer_cpulocal.hh	/^        std::string name() const { return _name; }$/;"	f	class:CpuLocalTimer::Timer
name	src/dev/arm/timer_sp804.hh	/^        std::string name() const { return _name; }$/;"	f	class:Sp804::Timer
name	src/dev/copy_engine.hh	/^        std::string name() { assert(ce); return ce->name() + csprintf("-chan%d", channelId); }$/;"	f	class:CopyEngine::CopyEngineChannel
name	src/dev/etherint.hh	/^    const std::string &name() const { return portName; }$/;"	f	class:EtherInt
name	src/dev/etherlink.hh	/^        const std::string name() const { return objName; }$/;"	f	class:EtherLink::Link
name	src/dev/i8254xGBe.hh	/^        std::string name() { return _name; }$/;"	f	class:IGbE::DescCache
name	src/dev/ide_ctrl.hh	/^        name()$/;"	f	struct:IdeController::Channel
name	src/dev/intel_8254_timer.hh	/^        const std::string &name() const { return _name; }$/;"	f	class:Intel8254Timer::Counter
name	src/dev/intel_8254_timer.hh	/^    const std::string &name() const { return _name; }$/;"	f	class:Intel8254Timer
name	src/dev/mc146818.hh	/^    const std::string &name() const { return _name; }$/;"	f	class:MC146818
name	src/dev/sinicreg.hh	/^    const char *name;$/;"	m	struct:Sinic::Regs::Info
name	src/kern/kernel_stats.hh	/^    const std::string name() const { return myname; }$/;"	f	class:Kernel::Statistics
name	src/kern/linux/linux_syscalls.cc	/^SystemCalls<Linux>::name(int num)$/;"	f	class:SystemCalls
name	src/kern/tru64/tru64_syscalls.cc	/^SystemCalls<Tru64>::name(int num)$/;"	f	class:SystemCalls
name	src/mem/bus.hh	/^        const std::string name() const { return bus.name() + _name; }$/;"	f	class:BaseBus::Layer
name	src/mem/packet_queue.hh	/^    const std::string name() const$/;"	f	class:MasterPacketQueue
name	src/mem/packet_queue.hh	/^    const std::string name() const$/;"	f	class:SlavePacketQueue
name	src/mem/page_table.hh	/^    const std::string name() const { return _name; }$/;"	f	class:PageTable
name	src/mem/physical.hh	/^    const std::string name() const { return _name; }$/;"	f	class:PhysicalMemory
name	src/mem/port.hh	/^    const std::string name() const { return portName; }$/;"	f	class:Port
name	src/mem/ruby/buffers/MessageBuffer.hh	/^    std::string name() const { return m_name; }$/;"	f	class:MessageBuffer
name	src/mem/ruby/network/simple/PerfectSwitch.hh	/^    std::string name()$/;"	f	class:PerfectSwitch
name	src/mem/ruby/network/simple/Throttle.hh	/^    std::string name()$/;"	f	class:Throttle
name	src/mem/slicc/ast/FormalParamAST.py	/^    def name(self):$/;"	m	class:FormalParamAST
name	src/mem/slicc/ast/LocalVariableAST.py	/^    def name(self):$/;"	m	class:LocalVariableAST
name	src/mem/slicc/ast/NewExprAST.py	/^    def name(self):$/;"	m	class:NewExprAST
name	src/mem/slicc/ast/VarExprAST.py	/^    def name(self):$/;"	m	class:VarExprAST
name	src/python/m5/util/jobfile.py	/^        raise ImportError, 'cannot import name conf from %s' % jobfile$/;"	i
name	src/sim/eventq.cc	/^Event::name() const$/;"	f	class:Event
name	src/sim/eventq.hh	/^    name() const$/;"	f	class:EventWrapper
name	src/sim/eventq.hh	/^    virtual const std::string name() const { return objName; }$/;"	f	class:EventQueue
name	src/sim/eventq.hh	/^    void name(const std::string &st) { objName = st; }$/;"	f	class:EventQueue
name	src/sim/faults.hh	/^    FaultName name() const {return "Generic alignment fault";}$/;"	f	class:GenericAlignmentFault
name	src/sim/faults.hh	/^    FaultName name() const {return "Generic page table fault";}$/;"	f	class:GenericPageTableFault
name	src/sim/faults.hh	/^    FaultName name() const {return "Unimplemented simulator feature";}$/;"	f	class:UnimpFault
name	src/sim/faults.hh	/^    virtual FaultName name() const { return "Re-execution fault";}$/;"	f	class:ReExec
name	src/sim/probe/probe.hh	/^    const std::string name;$/;"	m	class:ProbePoint
name	src/sim/serialize.cc	/^Globals::name() const$/;"	f	class:Globals
name	src/sim/sim_object.hh	/^    virtual const std::string name() const { return params()->name; }$/;"	f	class:SimObject
name	src/sim/syscall_emul.hh	/^    const char *name;   \/\/!< Syscall name (e.g., "open").$/;"	m	class:SyscallDesc
name	src/unittest/genini.py	/^                name = arg$/;"	v
name	src/unittest/genini.py	/^                name = arg[:offset]$/;"	v
nameCache	src/base/cp_annotate.hh	/^    NameCache nameCache;$/;"	m	class:CPA
nameMap	src/base/statistics.cc	/^nameMap()$/;"	f	namespace:Stats
nameOut	src/sim/serialize.cc	/^Serializable::nameOut(ostream &os)$/;"	f	class:Serializable
nameOut	src/sim/serialize.cc	/^Serializable::nameOut(ostream &os, const string &_name)$/;"	f	class:Serializable
nameString	src/arch/x86/cpuid.cc	/^    static const char nameString[nameStringSize] = "Fake M5 x86_64 CPU";$/;"	m	namespace:X86ISA	file:
nameStringSize	src/arch/x86/cpuid.cc	/^    static const int nameStringSize = 48;$/;"	m	namespace:X86ISA	file:
name_off	src/arch/alpha/stacktrace.hh	/^    int name_off;$/;"	m	class:AlphaISA::ProcessInfo
name_off	src/arch/arm/stacktrace.hh	/^    int name_off;$/;"	m	class:ArmISA::ProcessInfo
name_off	src/arch/mips/stacktrace.hh	/^    int name_off;$/;"	m	class:MipsISA::ProcessInfo
name_off	src/arch/power/stacktrace.hh	/^    int name_off;$/;"	m	class:PowerISA::ProcessInfo
name_off	src/arch/x86/stacktrace.hh	/^        int name_off;$/;"	m	class:X86ISA::ProcessInfo
namelen	src/base/vnc/vncserver.hh	/^        uint32_t namelen;$/;"	m	struct:VncServer::ServerInitMsg
names	src/arch/x86/intmessage.hh	/^        static const char * const names[NumModes] = {$/;"	m	namespace:X86ISA::DeliveryMode
names	src/python/m5/stats/__init__.py	/^names = []$/;"	v
nano	src/python/m5/util/convert.py	/^nano  = 1.0e-9$/;"	v
nanosleep	src/kern/linux/linux_syscalls.hh	/^    nanosleep = 136,$/;"	e	enum:SystemCalls::__anon87
native_listener	src/cpu/nativetrace.hh	/^    ListenSocket native_listener;$/;"	m	class:Trace::NativeTrace
nbrOfBanksDRAM	src/cpu/testers/traffic_gen/generators.hh	/^    const unsigned int nbrOfBanksDRAM;$/;"	m	class:DramGen
nbrOfBanksUtil	src/cpu/testers/traffic_gen/generators.hh	/^    const unsigned int nbrOfBanksUtil;$/;"	m	class:DramGen
nbrOutstanding	src/mem/dramsim2.cc	/^DRAMSim2::nbrOutstanding() const$/;"	f	class:DRAMSim2
nbrOutstandingReads	src/mem/dramsim2.hh	/^    unsigned int nbrOutstandingReads;$/;"	m	class:DRAMSim2
nbrOutstandingWrites	src/mem/dramsim2.hh	/^    unsigned int nbrOutstandingWrites;$/;"	m	class:DRAMSim2
ncpus	src/kern/tru64/tru64.hh	/^        uint32_t     ncpus;             \/\/!< ncpus$/;"	m	struct:Tru64::cpu_info
ne	src/arch/x86/regs/misc.hh	/^        Bitfield<5> ne; \/\/ Numeric Error$/;"	m	namespace:X86ISA
needMoreBytes	src/arch/alpha/decoder.hh	/^    needMoreBytes()$/;"	f	class:AlphaISA::Decoder
needMoreBytes	src/arch/arm/decoder.hh	/^    bool needMoreBytes() const$/;"	f	class:ArmISA::Decoder
needMoreBytes	src/arch/mips/decoder.hh	/^    needMoreBytes()$/;"	f	class:MipsISA::Decoder
needMoreBytes	src/arch/power/decoder.hh	/^    needMoreBytes()$/;"	f	class:PowerISA::Decoder
needMoreBytes	src/arch/sparc/decoder.hh	/^    needMoreBytes()$/;"	f	class:SparcISA::Decoder
needMoreBytes	src/arch/x86/decoder.hh	/^    bool needMoreBytes()$/;"	f	class:X86ISA::Decoder
need_resume	src/python/m5/simulate.py	/^need_resume = []$/;"	v
need_stage	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.hh	/^    need_stage(int vc, VC_state_type state, flit_stage stage, Cycles cTime)$/;"	f	class:InputUnit_d
need_stage	src/mem/ruby/network/garnet/fixed-pipeline/VirtualChannel_d.cc	/^VirtualChannel_d::need_stage(VC_state_type state, flit_stage stage,$/;"	f	class:VirtualChannel_d
need_startup	src/python/m5/simulate.py	/^need_startup = True$/;"	v
needs	src/cpu/inorder/cpu.hh	/^        void needs(int unit, int request) {$/;"	f	class:InOrderCPU::StageScheduler
needs	src/cpu/inorder/cpu.hh	/^        void needs(int unit, int request, int param) {$/;"	f	class:InOrderCPU::StageScheduler
needsExclusive	src/mem/cache/mshr.hh	/^        bool needsExclusive;$/;"	m	class:MSHR::TargetList
needsExclusive	src/mem/cache/mshr.hh	/^    bool needsExclusive() const { return targets.needsExclusive; }$/;"	f	class:MSHR
needsExclusive	src/mem/packet.hh	/^    bool needsExclusive() const { return cmd.needsExclusive(); }$/;"	f	class:Packet
needsExclusive	src/mem/packet.hh	/^    bool needsExclusive() const { return testCmdAttrib(NeedsExclusive); }$/;"	f	class:MemCmd
needsResponse	src/mem/packet.hh	/^    bool needsResponse() const  { return cmd.needsResponse(); }$/;"	f	class:Packet
needsResponse	src/mem/packet.hh	/^    bool needsResponse() const  { return testCmdAttrib(NeedsResponse); }$/;"	f	class:MemCmd
needsTSO	src/cpu/o3/O3CPU.py	/^    needsTSO = Param.Bool(buildEnv['TARGET_ISA'] == 'x86',$/;"	v	class:DerivO3CPU
needsTSO	src/cpu/o3/lsq_unit.hh	/^    bool needsTSO;$/;"	m	class:LSQUnit
neg_inf	src/python/m5/util/__init__.py	/^from region import neg_inf, pos_inf, Region, Regions$/;"	i
neg_inf	src/python/m5/util/region.py	/^neg_inf = _neg_inf()$/;"	v
neitherReadNorWrite	src/mem/dram_ctrl.hh	/^    Stats::Scalar neitherReadNorWrite;$/;"	m	class:DRAMCtrl
netifs	src/mem/ruby/network/Network.py	/^    netifs = VectorParam.ClockedObject("Network Interfaces")$/;"	v	class:RubyNetwork
netmask	src/base/inet.hh	/^    uint8_t netmask() const { return _netmask; }$/;"	f	struct:Net::IpNetmask
network_links	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.py	/^    network_links = VectorParam.NetworkLink_d(nls, "forward links")$/;"	v	class:GarnetExtLink_d
network_links	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.py	/^    network_links = VectorParam.NetworkLink_d(nls, "forward links")$/;"	v	class:GarnetIntLink_d
network_links	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.py	/^    network_links = VectorParam.NetworkLink(nls, "forward links")$/;"	v	class:GarnetExtLink
network_links	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.py	/^    network_links = VectorParam.NetworkLink(nls, "forward links")$/;"	v	class:GarnetIntLink
network_message_to_size	src/mem/ruby/network/simple/Throttle.cc	/^network_message_to_size(NetworkMessage* net_msg_ptr)$/;"	f
networktest	src/cpu/testers/networktest/networktest.hh	/^        NetworkTest *networktest;$/;"	m	class:NetworkTest::CpuPort
new	src/python/m5/util/grammar.py	/^        import new$/;"	i
newCount	src/cpu/pred/tournament.cc	/^TournamentBP::BPHistory::newCount = 0;$/;"	m	class:TournamentBP::BPHistory	file:
newCount	src/cpu/pred/tournament.hh	/^        static int newCount;$/;"	m	struct:TournamentBP::BPHistory
newCurrentMachine	src/mem/slicc/symbols/SymbolTable.py	/^    def newCurrentMachine(self, sym):$/;"	m	class:SymbolTable
newInfoSet	src/arch/alpha/interrupts.hh	/^    bool newInfoSet;$/;"	m	class:AlphaISA::Interrupts
newInfoSet	src/arch/mips/interrupts.hh	/^    bool newInfoSet;$/;"	m	class:MipsISA::Interrupts
newIpl	src/arch/alpha/interrupts.hh	/^    int newIpl;$/;"	m	class:AlphaISA::Interrupts
newIpl	src/arch/mips/interrupts.hh	/^    int newIpl;$/;"	m	class:MipsISA::Interrupts
newMachComponentSym	src/mem/slicc/symbols/SymbolTable.py	/^    def newMachComponentSym(self, symbol):$/;"	m	class:SymbolTable
newPCState	src/cpu/checker/cpu.hh	/^    TheISA::PCState newPCState;$/;"	m	class:CheckerCPU
newPhysReg	src/cpu/o3/rename.hh	/^        PhysRegIndex newPhysReg;$/;"	m	struct:DefaultRename::RenameHistory
newState	src/arch/arm/nativetrace.hh	/^        uint64_t *newState;$/;"	m	struct:Trace::ArmNativeTrace::ThreadState
newSummary	src/arch/alpha/interrupts.hh	/^    int newSummary;$/;"	m	class:AlphaISA::Interrupts
newSummary	src/arch/mips/interrupts.hh	/^    int newSummary;$/;"	m	class:MipsISA::Interrupts
newSymbol	src/mem/slicc/symbols/SymbolTable.py	/^    def newSymbol(self, sym):$/;"	m	class:SymbolTable
newTime	src/mem/dram_ctrl.hh	/^    Tick newTime;$/;"	m	class:DRAMCtrl
newVarStruct	src/cpu/kvm/x86_cpu.cc	/^static STRUCT *newVarStruct(size_t entries)$/;"	f	file:
new_cycle_count	src/cpu/m5legion_interface.h	/^    uint64_t new_cycle_count;$/;"	m	struct:__anon55
new_instruction	src/cpu/m5legion_interface.h	/^    uint32_t new_instruction;$/;"	m	struct:__anon55
new_pc	src/cpu/m5legion_interface.h	/^    uint64_t new_pc;$/;"	m	struct:__anon55
newselect	src/kern/linux/linux_syscalls.hh	/^    newselect = 2,$/;"	e	enum:SystemCalls::__anon87
next	src/base/chunk_generator.hh	/^    next()$/;"	f	class:ChunkGenerator
next	src/cpu/o3/dep_graph.hh	/^    DependencyEntry<DynInstPtr> *next;$/;"	m	class:DependencyEntry
next	src/dev/copy_engine_defs.hh	/^    Addr next;$/;"	m	struct:CopyEngineReg::DmaDesc
next	src/dev/pcireg.h	/^        Bitfield<15,8>  next;$/;"	m	struct:MSICAP
next	src/dev/pcireg.h	/^        Bitfield<15,8>  next;$/;"	m	struct:MSIXCAP
next	src/dev/pcireg.h	/^        Bitfield<15,8>  next;$/;"	m	struct:PMCAP
next	src/dev/pcireg.h	/^        Bitfield<15,8>  next;$/;"	m	struct:PXCAP
next	src/mem/cache/tags/fa_lru.hh	/^    FALRUBlk *next;$/;"	m	class:FALRUBlk
next	src/python/m5/util/multidict.py	/^    def next(self):$/;"	m	class:multidict
nextAArch64	src/arch/arm/types.hh	/^        nextAArch64() const$/;"	f	class:ArmISA::PCState
nextAArch64	src/arch/arm/types.hh	/^        nextAArch64(bool val)$/;"	f	class:ArmISA::PCState
nextAddr	src/base/chunk_generator.hh	/^    Addr nextAddr;$/;"	m	class:ChunkGenerator
nextAddr	src/cpu/testers/traffic_gen/generators.hh	/^    Addr nextAddr;$/;"	m	class:LinearGen
nextBin	src/sim/eventq.hh	/^    Event *nextBin;$/;"	m	class:Event
nextBkpt	src/arch/sparc/remote_gdb.hh	/^    Addr nextBkpt;$/;"	m	class:SparcISA::RemoteGDB
nextBkpt	src/arch/x86/remote_gdb.hh	/^        Addr nextBkpt;$/;"	m	class:X86ISA::RemoteGDB
nextCycle	src/sim/clocked_object.hh	/^    Tick nextCycle() const$/;"	f	class:ClockedObject
nextDescAddr	src/arch/arm/table_walker.hh	/^        Addr nextDescAddr(Addr va) const$/;"	f	class:ArmISA::TableWalker::LongDescriptor
nextElement	src/cpu/testers/traffic_gen/generators.hh	/^    TraceElement nextElement;$/;"	m	class:TraceGen
nextFlags	src/arch/arm/types.hh	/^        uint8_t nextFlags;$/;"	m	class:ArmISA::PCState
nextIdxs	src/arch/arm/insts/vfp.cc	/^VfpMacroOp::nextIdxs(IntRegIndex &dest)$/;"	f	class:ArmISA::VfpMacroOp
nextIdxs	src/arch/arm/insts/vfp.cc	/^VfpMacroOp::nextIdxs(IntRegIndex &dest, IntRegIndex &op1)$/;"	f	class:ArmISA::VfpMacroOp
nextIdxs	src/arch/arm/insts/vfp.cc	/^VfpMacroOp::nextIdxs(IntRegIndex &dest, IntRegIndex &op1, IntRegIndex &op2)$/;"	f	class:ArmISA::VfpMacroOp
nextInBin	src/sim/eventq.hh	/^    Event *nextInBin;$/;"	m	class:Event
nextInstAddr	src/arch/generic/types.hh	/^    nextInstAddr() const$/;"	f	class:GenericISA::PCStateBase
nextInstAddr	src/cpu/base_dyn_inst.hh	/^    const Addr nextInstAddr() const { return pc.nextInstAddr(); }$/;"	f	class:BaseDynInst
nextInstAddr	src/cpu/checker/cpu.hh	/^    Addr nextInstAddr() { return thread->nextInstAddr(); }$/;"	f	class:CheckerCPU
nextInstAddr	src/cpu/checker/thread_context.hh	/^    Addr nextInstAddr()$/;"	f	class:CheckerThreadContext
nextInstAddr	src/cpu/inorder/cpu.hh	/^    Addr nextInstAddr(ThreadID tid) { return pc[tid].nextInstAddr(); }$/;"	f	class:InOrderCPU
nextInstAddr	src/cpu/inorder/inorder_dyn_inst.hh	/^    const Addr nextInstAddr() { return pc.nextInstAddr(); }$/;"	f	class:InOrderDynInst
nextInstAddr	src/cpu/inorder/thread_context.hh	/^    Addr nextInstAddr()$/;"	f	class:InOrderThreadContext
nextInstAddr	src/cpu/o3/commit.hh	/^    Addr nextInstAddr(ThreadID tid) { return pc[tid].nextInstAddr(); }$/;"	f	class:DefaultCommit
nextInstAddr	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::nextInstAddr(ThreadID tid)$/;"	f	class:FullO3CPU
nextInstAddr	src/cpu/o3/thread_context.hh	/^    virtual Addr nextInstAddr()$/;"	f	class:O3ThreadContext
nextInstAddr	src/cpu/simple/base.hh	/^    Addr nextInstAddr() { return thread->nextInstAddr(); }$/;"	f	class:BaseSimpleCPU
nextInstAddr	src/cpu/simple_thread.hh	/^    nextInstAddr()$/;"	f	class:SimpleThread
nextInstAddr	src/cpu/thread_context.hh	/^    Addr nextInstAddr() { return actualTC->nextInstAddr(); }$/;"	f	class:ProxyThreadContext
nextInstSeqNum	src/cpu/inorder/cpu.hh	/^    InstSeqNum nextInstSeqNum(ThreadID tid)$/;"	f	class:InOrderCPU
nextItstate	src/arch/arm/types.hh	/^        nextItstate() const$/;"	f	class:ArmISA::PCState
nextItstate	src/arch/arm/types.hh	/^        nextItstate(uint8_t value)$/;"	f	class:ArmISA::PCState
nextJazelle	src/arch/arm/types.hh	/^        nextJazelle() const$/;"	f	class:ArmISA::PCState
nextJazelle	src/arch/arm/types.hh	/^        nextJazelle(bool val)$/;"	f	class:ArmISA::PCState
nextMSHRReadyTime	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::nextMSHRReadyTime() const$/;"	f	class:Cache
nextMSHRReadyTime	src/mem/cache/mshr_queue.hh	/^    Tick nextMSHRReadyTime() const$/;"	f	class:MSHRQueue
nextMode	src/arch/arm/faults.hh	/^        const OperatingMode nextMode;$/;"	m	struct:ArmISA::ArmFault::FaultVals
nextMode	src/arch/arm/faults.hh	/^    OperatingMode nextMode() { return vals.nextMode; }$/;"	f	class:ArmISA::ArmFaultVals
nextPC	src/cpu/o3/comm.hh	/^        TheISA::PCState nextPC;$/;"	m	struct:TimeBufStruct::decodeComm
nextPC	src/cpu/ozone/front_end.hh	/^    Addr nextPC;$/;"	m	class:FrontEnd
nextPC	src/cpu/ozone/null_predictor.hh	/^        Addr nextPC;$/;"	m	struct:NullPredictor::BPredInfo
nextPC	src/cpu/ozone/thread_state.hh	/^    Addr nextPC;$/;"	m	struct:OzoneThreadState
nextPID	src/sim/system.hh	/^    uint64_t nextPID;$/;"	m	class:System
nextPacketTick	src/cpu/testers/traffic_gen/generators.cc	/^LinearGen::nextPacketTick(bool elastic, Tick delay) const$/;"	f	class:LinearGen
nextPacketTick	src/cpu/testers/traffic_gen/generators.cc	/^RandomGen::nextPacketTick(bool elastic, Tick delay) const$/;"	f	class:RandomGen
nextPacketTick	src/cpu/testers/traffic_gen/generators.cc	/^TraceGen::nextPacketTick(bool elastic, Tick delay) const$/;"	f	class:TraceGen
nextPacketTick	src/cpu/testers/traffic_gen/generators.hh	/^    Tick nextPacketTick(bool elastic, Tick delay) const { return MaxTick; }$/;"	f	class:IdleGen
nextPacketTick	src/cpu/testers/traffic_gen/traffic_gen.hh	/^    Tick nextPacketTick;$/;"	m	class:TrafficGen
nextPrefetchReadyTime	src/mem/cache/prefetch/base.hh	/^    Tick nextPrefetchReadyTime()$/;"	f	class:BasePrefetcher
nextPrivilegeLevel	src/arch/sparc/faults.hh	/^        const PrivilegeLevel nextPrivilegeLevel[NumLevels];$/;"	m	struct:SparcISA::SparcFaultBase::FaultVals
nextProgressMessage	src/cpu/testers/memtest/memtest.hh	/^    Tick nextProgressMessage;   \/\/ access # for next progress report$/;"	m	class:MemTest
nextReqEvent	src/mem/dram_ctrl.hh	/^    EventWrapper<DRAMCtrl,&DRAMCtrl::processNextReqEvent> nextReqEvent;$/;"	m	class:DRAMCtrl
nextResStage	src/cpu/inorder/inorder_dyn_inst.hh	/^    int nextResStage()$/;"	f	class:InOrderDynInst
nextResource	src/cpu/inorder/inorder_dyn_inst.hh	/^    int nextResource()$/;"	f	class:InOrderDynInst
nextSeq	src/arch/x86/tlb.hh	/^        nextSeq()$/;"	f	class:X86ISA::TLB
nextStage	src/cpu/inorder/inorder_dyn_inst.hh	/^    int nextStage;$/;"	m	class:InOrderDynInst
nextStage	src/cpu/inorder/pipeline_stage.hh	/^    TimeBuffer<InterStageStruct>::wire nextStage;$/;"	m	class:PipelineStage
nextStageQueue	src/cpu/inorder/pipeline_stage.hh	/^    TimeBuffer<InterStageStruct> *nextStageQueue;$/;"	m	class:PipelineStage
nextStageQueueValid	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::nextStageQueueValid(int stage_num)$/;"	f	class:PipelineStage
nextStageValid	src/cpu/inorder/pipeline_stage.hh	/^    bool nextStageValid;$/;"	m	class:PipelineStage
nextState	src/arch/x86/pagetable_walker.hh	/^            State nextState;$/;"	m	class:X86ISA::Walker::WalkerState
nextState	src/dev/copy_engine.hh	/^        ChannelState nextState;$/;"	m	class:CopyEngine::CopyEngineChannel
nextState	src/mem/slicc/generate/tex.py	/^                    nextState = ""$/;"	v
nextState	src/mem/slicc/generate/tex.py	/^                    nextState = trans.getNextStateShorthand()$/;"	v
nextTableAddr	src/arch/arm/table_walker.hh	/^        Addr nextTableAddr() const$/;"	f	class:ArmISA::TableWalker::LongDescriptor
nextTaskPriority	src/cpu/inorder/cpu.hh	/^        int nextTaskPriority;$/;"	m	class:InOrderCPU::StageScheduler
nextThumb	src/arch/arm/types.hh	/^        nextThumb() const$/;"	f	class:ArmISA::PCState
nextThumb	src/arch/arm/types.hh	/^        nextThumb(bool val)$/;"	f	class:ArmISA::PCState
nextTick	src/sim/eventq.hh	/^    Tick nextTick() const { return head->when(); }$/;"	f	class:EventQueue
nextTransitionTick	src/cpu/testers/traffic_gen/traffic_gen.hh	/^    Tick nextTransitionTick;$/;"	m	class:TrafficGen
nextVCPUID	src/cpu/kvm/vm.hh	/^    long nextVCPUID;$/;"	m	class:KvmVM
nextWalk	src/arch/arm/table_walker.cc	/^TableWalker::nextWalk(ThreadContext *tc)$/;"	f	class:TableWalker
next_stride_address	src/mem/ruby/common/Address.cc	/^next_stride_address(const Address& addr, int stride)$/;"	f
next_thread_stack_base	src/sim/process.hh	/^    Addr next_thread_stack_base;$/;"	m	class:Process
nextnlu	src/arch/alpha/tlb.hh	/^    void nextnlu() { if (++nlu >= size) nlu = 0; }$/;"	f	class:AlphaISA::TLB
nextnlu	src/arch/mips/tlb.hh	/^    void nextnlu() { if (++nlu >= size) nlu = 0; }$/;"	f	class:MipsISA::TLB
nextnlu	src/arch/power/tlb.hh	/^    nextnlu()$/;"	f	class:PowerISA::TLB
nfed	src/dev/pcireg.h	/^        Bitfield<1>     nfed;$/;"	m	struct:PXCAP
nfere	src/dev/pcireg.h	/^        Bitfield<1>     nfere;$/;"	m	struct:PXCAP
nfsservctl	src/kern/linux/linux_syscalls.hh	/^    nfsservctl = 137,$/;"	e	enum:SystemCalls::__anon87
nfssvc	src/kern/tru64/tru64_syscalls.hh	/^        nfssvc = 158,$/;"	e	enum:SystemCalls::__anon102
ni	src/arch/power/miscregs.hh	/^    Bitfield<3> ni;$/;"	m	namespace:PowerISA
ni_flit_size	src/mem/ruby/network/garnet/BaseGarnetNetwork.py	/^    ni_flit_size = Param.Int(16, "network interface flit size in bytes")$/;"	v	class:BaseGarnetNetwork
nice	src/kern/linux/linux_syscalls.hh	/^    nice = 138,$/;"	e	enum:SystemCalls::__anon87
nlink_t	src/kern/solaris/solaris.hh	/^    typedef uint32_t nlink_t;$/;"	t	class:Solaris
nlink_t	src/kern/tru64/tru64.hh	/^    typedef uint16_t nlink_t;$/;"	t	class:Tru64
nls	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.py	/^    nls = []$/;"	v	class:GarnetExtLink_d
nls	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.py	/^    nls = []$/;"	v	class:GarnetIntLink_d
nls	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.py	/^    nls = []$/;"	v	class:GarnetExtLink
nls	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.py	/^    nls = []$/;"	v	class:GarnetIntLink
nlu	src/arch/alpha/tlb.hh	/^    int nlu;                \/\/ not last used entry (for replacement)$/;"	m	class:AlphaISA::TLB
nlu	src/arch/mips/tlb.hh	/^    int nlu;                    \/\/ not last used entry (for replacement)$/;"	m	class:MipsISA::TLB
nlu	src/arch/power/tlb.hh	/^    int nlu;                    \/\/ not last used entry (for replacement)$/;"	m	class:PowerISA::TLB
nlw	src/dev/pcireg.h	/^        Bitfield<9,4>   nlw;$/;"	m	struct:PXCAP
nmfi	src/arch/arm/miscregs.hh	/^        Bitfield<27>   nmfi;    \/\/ Non-maskable FIQ support (ARMv7 only)$/;"	m	namespace:ArmISA
nmi	src/arch/mips/pra_constants.hh	/^    Bitfield<19>     nmi;$/;"	m	namespace:MipsISA
nmiVector	src/arch/x86/interrupts.hh	/^    uint8_t nmiVector;$/;"	m	class:X86ISA::Interrupts
nmrr	src/arch/arm/tlb.hh	/^    NMRR nmrr;$/;"	m	class:ArmISA::TLB
nnpc	src/arch/generic/types.hh	/^    Addr nnpc() const { return _nnpc; }$/;"	f	class:GenericISA::DelaySlotPCState
nnpc	src/arch/generic/types.hh	/^    void nnpc(Addr val) { _nnpc = val; }$/;"	f	class:GenericISA::DelaySlotPCState
noCxxHeader	src/python/m5/SimObject.py	/^noCxxHeader = False$/;"	v
noExec	src/arch/x86/pagetable.hh	/^        bool noExec;$/;"	m	struct:X86ISA::TlbEntry
noOutput	src/base/stats/text.cc	/^Text::noOutput(const Info &info)$/;"	f	class:Stats::Text
noResponseCycles	src/cpu/testers/memtest/memtest.hh	/^    Tick noResponseCycles;$/;"	m	class:MemTest
noResponseCycles	src/cpu/testers/networktest/networktest.hh	/^    Tick noResponseCycles;$/;"	m	class:NetworkTest
noSquashFromTC	src/cpu/inorder/thread_state.hh	/^    bool noSquashFromTC;$/;"	m	class:InOrderThreadState
noSquashFromTC	src/cpu/o3/thread_state.hh	/^    bool noSquashFromTC;$/;"	m	struct:O3ThreadState
noSquashFromTC	src/cpu/ozone/thread_state.hh	/^    bool noSquashFromTC;$/;"	m	struct:OzoneThreadState
noTargetMSHR	src/mem/cache/base.hh	/^    MSHR *noTargetMSHR;$/;"	m	class:BaseCache
noWB	src/cpu/o3/lsq_unit.hh	/^        bool noWB;$/;"	m	class:LSQUnit::LSQSenderState
noWB	src/cpu/ozone/lw_lsq.hh	/^        bool noWB;$/;"	m	class:OzoneLWLSQ::LSQSenderState
no_mem_vec	src/mem/ruby/system/RubySystem.py	/^    no_mem_vec = Param.Bool(False, "do not allocate Ruby's mem vector");$/;"	v	class:RubySystem
no_termcap	src/python/m5/util/terminal.py	/^no_termcap = ColorStrings(null_cap_string)$/;"	v
nodcr	src/arch/mips/dt_constants.hh	/^    Bitfield<29>     nodcr;$/;"	m	namespace:MipsISA
node	src/base/statistics.hh	/^    NodePtr node;$/;"	m	class:Stats::Temp
node_a	src/mem/ruby/network/BasicLink.py	/^    node_a = Param.BasicRouter("Router on one end")$/;"	v	class:BasicIntLink
node_b	src/mem/ruby/network/BasicLink.py	/^    node_b = Param.BasicRouter("Router on other end")$/;"	v	class:BasicIntLink
node_less_then_eq	src/mem/ruby/common/Histogram.cc	/^node_less_then_eq(const Histogram* n1, const Histogram* n2)$/;"	f
node_less_then_eq	src/mem/ruby/profiler/StoreTrace.hh	/^node_less_then_eq(const StoreTrace* n1, const StoreTrace* n2)$/;"	f
nodefault	src/python/m5/options.py	/^class nodefault(object): pass$/;"	c
nodename	src/kern/linux/linux.hh	/^        char nodename[_SYS_NMLN];       \/\/!< Node name.$/;"	m	struct:Linux::utsname
nodename	src/kern/operatingsystem.hh	/^        char nodename[_SYS_NMLN];       \/\/!< Node name.$/;"	m	struct:OperatingSystem::__anon88
nodename	src/kern/solaris/solaris.hh	/^        char nodename[_SYS_NMLN];       \/\/!< Node name.$/;"	m	struct:Solaris::utsname
nodename	src/kern/tru64/tru64.hh	/^        char nodename[_SYS_NMLN];       \/\/!< Node name.$/;"	m	struct:Tru64::utsname
nodesRemoved	src/cpu/o3/dep_graph.hh	/^    uint64_t nodesRemoved;$/;"	m	class:DependencyGraph
nodesTraversed	src/cpu/o3/dep_graph.hh	/^    uint64_t nodesTraversed;$/;"	m	class:DependencyGraph
nofault	src/arch/sparc/pagetable.hh	/^    bool nofault()  const { assert(populated); return bits(entry4u,60,60); }$/;"	f	class:SparcISA::PageTableEntry
nofix	src/python/m5/util/code_formatter.py	/^    def nofix(self):$/;"	m	class:code_formatter
nonCacheable	src/arch/arm/pagetable.hh	/^    bool nonCacheable;     \/\/ Can we wrap this in mtype?$/;"	m	struct:ArmISA::TlbEntry
nonSpec	src/cpu/ozone/back_end.hh	/^        InstList nonSpec;$/;"	m	class:BackEnd::InstQueue
nonSpecInstActive	src/cpu/inorder/cpu.hh	/^    bool nonSpecInstActive[ThePipeline::MaxThreads];$/;"	m	class:InOrderCPU
nonSpecInstActive	src/cpu/inorder/resources/graduation_unit.hh	/^    bool *nonSpecInstActive[ThePipeline::MaxThreads];$/;"	m	class:GraduationUnit
nonSpecInstActive	src/cpu/inorder/resources/mem_dep_unit.hh	/^   bool *nonSpecInstActive[ThePipeline::MaxThreads];$/;"	m	class:MemDepUnit
nonSpecInstActive	src/cpu/inorder/resources/use_def.hh	/^    bool *nonSpecInstActive[ThePipeline::MaxThreads];$/;"	m	class:UseDefUnit
nonSpecInstReady	src/cpu/o3/mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::nonSpecInstReady(DynInstPtr &inst)$/;"	f	class:MemDepUnit
nonSpecInsts	src/cpu/o3/inst_queue.hh	/^    std::map<InstSeqNum, DynInstPtr> nonSpecInsts;$/;"	m	class:InstructionQueue
nonSpecInsts	src/cpu/ozone/inst_queue.hh	/^    std::map<InstSeqNum, DynInstPtr> nonSpecInsts;$/;"	m	class:InstQueue
nonSpecSeqNum	src/cpu/inorder/cpu.hh	/^    InstSeqNum nonSpecSeqNum[ThePipeline::MaxThreads];$/;"	m	class:InOrderCPU
nonSpecSeqNum	src/cpu/inorder/resources/graduation_unit.hh	/^    InstSeqNum *nonSpecSeqNum[ThePipeline::MaxThreads];$/;"	m	class:GraduationUnit
nonSpecSeqNum	src/cpu/inorder/resources/mem_dep_unit.hh	/^    InstSeqNum *nonSpecSeqNum[ThePipeline::MaxThreads];$/;"	m	class:MemDepUnit
nonSpecSeqNum	src/cpu/inorder/resources/use_def.hh	/^    InstSeqNum *nonSpecSeqNum[ThePipeline::MaxThreads];$/;"	m	class:UseDefUnit
nonSpecSeqNum	src/cpu/o3/comm.hh	/^        InstSeqNum nonSpecSeqNum; \/\/ *I$/;"	m	struct:TimeBufStruct::commitComm
nonSpecSeqNum	src/cpu/ozone/cpu.hh	/^        InstSeqNum nonSpecSeqNum;$/;"	m	struct:OzoneCPU::CommStruct
nonan	src/base/stats/info.hh	/^const FlagsType nonan =         0x0200;$/;"	m	namespace:Stats
none	src/base/cprintf_formats.hh	/^    enum { none, string, integer, character, floating } format;$/;"	e	enum:cp::Format::__anon38
none	src/base/stats/info.hh	/^const FlagsType none =          0x0000;$/;"	m	namespace:Stats
noneSet	src/base/flags.hh	/^    bool noneSet() const { return _flags == 0; }$/;"	f	class:Flags
noneSet	src/base/flags.hh	/^    bool noneSet(Type flags) const { return (_flags & flags) == 0; }$/;"	f	class:Flags
nonunit_filter	src/mem/ruby/structures/RubyPrefetcher.py	/^    nonunit_filter = Param.UInt32(8,$/;"	v	class:Prefetcher
normalMicroPC	src/base/types.hh	/^normalMicroPC(MicroPC upc)$/;"	f
norml1	src/arch/x86/pagetable.hh	/^        Bitfield<21, 12> norml1;$/;"	m	namespace:X86ISA
norml2	src/arch/x86/pagetable.hh	/^        Bitfield<31, 22> norml2;$/;"	m	namespace:X86ISA
nos0	src/arch/arm/miscregs.hh	/^       Bitfield<24> nos0;$/;"	m	namespace:ArmISA
nos1	src/arch/arm/miscregs.hh	/^       Bitfield<25> nos1;$/;"	m	namespace:ArmISA
nos2	src/arch/arm/miscregs.hh	/^       Bitfield<26> nos2;$/;"	m	namespace:ArmISA
nos3	src/arch/arm/miscregs.hh	/^       Bitfield<27> nos3;$/;"	m	namespace:ArmISA
nos4	src/arch/arm/miscregs.hh	/^       Bitfield<28> nos4;$/;"	m	namespace:ArmISA
nos5	src/arch/arm/miscregs.hh	/^       Bitfield<29> nos5;$/;"	m	namespace:ArmISA
nos6	src/arch/arm/miscregs.hh	/^       Bitfield<30> nos6;$/;"	m	namespace:ArmISA
nos7	src/arch/arm/miscregs.hh	/^       Bitfield<31> nos7;$/;"	m	namespace:ArmISA
nosst	src/arch/mips/dt_constants.hh	/^    Bitfield<9>      nosst;$/;"	m	namespace:MipsISA
notIdleFraction	src/cpu/ozone/cpu.hh	/^    Stats::Average notIdleFraction;$/;"	m	class:OzoneCPU
notIdleFraction	src/cpu/simple/base.hh	/^    Stats::Average notIdleFraction;$/;"	m	class:BaseSimpleCPU
notTakenBkpt	src/arch/alpha/remote_gdb.hh	/^    Addr notTakenBkpt;$/;"	m	class:AlphaISA::RemoteGDB
notTakenBkpt	src/arch/arm/remote_gdb.hh	/^  Addr notTakenBkpt;$/;"	m	class:ArmISA::RemoteGDB
notTakenBkpt	src/arch/mips/remote_gdb.hh	/^        Addr notTakenBkpt;$/;"	m	class:MipsISA::RemoteGDB
notify	src/mem/cache/prefetch/base.cc	/^BasePrefetcher::notify(PacketPtr &pkt, Tick tick)$/;"	f	class:BasePrefetcher
notify	src/sim/probe/probe.hh	/^    virtual void notify(const Arg &val) { (object->*function)(val); }$/;"	f	class:ProbeListenerArg
notify	src/sim/probe/probe.hh	/^    void notify(const Arg &arg)$/;"	f	class:ProbePointArg
nozero	src/base/stats/info.hh	/^const FlagsType nozero =        0x0100;$/;"	m	namespace:Stats
npc	src/arch/generic/types.hh	/^    Addr npc() const { return _npc; }$/;"	f	class:GenericISA::SimplePCState
npc	src/arch/generic/types.hh	/^    void npc(Addr val) { _npc = val; }$/;"	f	class:GenericISA::SimplePCState
nphalt	src/arch/alpha/osfpal.hh	/^        nphalt = 0xbe,$/;"	e	enum:PAL::__anon3
nprint	src/mem/slicc/main.py	/^def nprint(format, *args):$/;"	f
nprpr	src/dev/pcireg.h	/^        Bitfield<10>    nprpr;$/;"	m	struct:PXCAP
nres_error_head	src/arch/sparc/isa.hh	/^    uint64_t nres_error_head;$/;"	m	class:SparcISA::ISA
nres_error_tail	src/arch/sparc/isa.hh	/^    uint64_t nres_error_tail;$/;"	m	class:SparcISA::ISA
ns	src/arch/arm/miscregs.hh	/^        Bitfield<0> ns;$/;"	m	namespace:ArmISA
ns	src/arch/arm/miscregs.hh	/^        Bitfield<9>      ns;$/;"	m	namespace:ArmISA
ns	src/arch/arm/pagetable.hh	/^    bool ns;$/;"	m	struct:ArmISA::TlbEntry
ns	src/sim/core.cc	/^Tick ns;$/;"	m	namespace:SimClock::Int	file:
ns	src/sim/core.cc	/^double ns;$/;"	m	namespace:SimClock::Float	file:
ns0	src/arch/arm/miscregs.hh	/^       Bitfield<18> ns0;$/;"	m	namespace:ArmISA
ns1	src/arch/arm/miscregs.hh	/^       Bitfield<19> ns1;$/;"	m	namespace:ArmISA
ns_desc32	src/dev/ns_gige_reg.h	/^struct ns_desc32 {$/;"	s
ns_desc64	src/dev/ns_gige_reg.h	/^struct ns_desc64 {$/;"	s
nsasedis	src/arch/arm/miscregs.hh	/^        Bitfield<15> nsasedis;$/;"	m	namespace:ArmISA
nsd32dis	src/arch/arm/miscregs.hh	/^        Bitfield<14> nsd32dis;$/;"	m	namespace:ArmISA
nsec	src/base/time.hh	/^    long nsec() const { return _time.tv_nsec; }$/;"	f	class:Time
nsec	src/base/time.hh	/^    void nsec(long nsec) { _time.tv_nsec = nsec; }$/;"	f	class:Time
nsfrst	src/dev/pcireg.h	/^        Bitfield<3>     nsfrst;$/;"	m	struct:PMCAP
nstid	src/arch/arm/pagetable.hh	/^    bool nstid;$/;"	m	struct:ArmISA::TlbEntry
nstrcdis	src/arch/arm/miscregs.hh	/^        Bitfield<20> nstrcdis;$/;"	m	namespace:ArmISA
nt	src/arch/x86/regs/misc.hh	/^        Bitfield<14> nt; \/\/ Nested Task$/;"	m	namespace:X86ISA
ntp_adjtime	src/kern/tru64/tru64_syscalls.hh	/^        ntp_adjtime = 245,$/;"	e	enum:SystemCalls::__anon102
ntp_gettime	src/kern/tru64/tru64_syscalls.hh	/^        ntp_gettime = 246,$/;"	e	enum:SystemCalls::__anon102
ntwe	src/arch/arm/miscregs.hh	/^        Bitfield<18>   ntwe;    \/\/ Not trap WFE$/;"	m	namespace:ArmISA
ntwi	src/arch/arm/miscregs.hh	/^        Bitfield<16>   ntwi;    \/\/ Not trap WFI$/;"	m	namespace:ArmISA
null	src/arch/arm/linux/atag.hh	/^    virtual bool null() { return false; }$/;"	f	class:AtagHeader
null	src/arch/arm/linux/atag.hh	/^    virtual bool null() { return true; }$/;"	f	class:AtagNone
null	src/mem/AbstractMemory.py	/^    null = Param.Bool(False, "Do not store data, always return zero")$/;"	v	class:AbstractMemory
nullCallback	src/dev/i8254xGBe.hh	/^        void nullCallback() {$/;"	f	class:IGbE::TxDescCache
nullEvent	src/dev/i8254xGBe.hh	/^        EventWrapper<TxDescCache, &TxDescCache::nullCallback> nullEvent;$/;"	m	class:IGbE::TxDescCache
nullStaticInstPtr	src/cpu/static_inst.cc	/^StaticInstPtr StaticInst::nullStaticInstPtr;$/;"	m	class:StaticInst	file:
nullStaticInstPtr	src/cpu/static_inst.hh	/^    static StaticInstPtr nullStaticInstPtr;$/;"	m	class:StaticInst
null_cap_string	src/python/m5/util/terminal.py	/^def null_cap_string(s, *args):$/;"	f
num	src/arch/x86/types.hh	/^            uint8_t num;$/;"	m	struct:X86ISA::ExtMachInst::__anon36
num	src/dev/intel_8254_timer.hh	/^        unsigned int num;$/;"	m	class:Intel8254Timer::Counter
num	src/mem/ruby/system/MachineID.hh	/^    NodeID num;$/;"	m	struct:MachineID
numActiveThreads	src/cpu/inorder/cpu.hh	/^    ThreadID numActiveThreads() { return activeThreads.size(); }$/;"	f	class:InOrderCPU
numActiveThreads	src/cpu/o3/cpu.hh	/^    int numActiveThreads()$/;"	f	class:FullO3CPU
numAllocatedStreams	src/mem/ruby/structures/Prefetcher.hh	/^        Stats::Scalar numAllocatedStreams;$/;"	m	class:Prefetcher
numBanksActive	src/mem/dram_ctrl.hh	/^    unsigned int numBanksActive;$/;"	m	class:DRAMCtrl
numBlocks	src/mem/cache/tags/base.hh	/^    unsigned numBlocks;$/;"	m	class:BaseTags
numBranchMispred	src/cpu/simple/base.hh	/^    Stats::Scalar numBranchMispred;$/;"	m	class:BaseSimpleCPU
numBranches	src/cpu/simple/base.hh	/^    Stats::Scalar numBranches;$/;"	m	class:BaseSimpleCPU
numBusyCycles	src/cpu/simple/base.hh	/^    Stats::Formula numBusyCycles;$/;"	m	class:BaseSimpleCPU
numBytes	src/arch/arm/stage2_mmu.hh	/^        int       numBytes;$/;"	m	class:ArmISA::Stage2MMU::Stage2Translation
numBytes	src/dev/dma_device.hh	/^        Addr numBytes;$/;"	m	struct:DmaPort::DmaReqState
numCCPhysRegs	src/cpu/o3/regfile.hh	/^    unsigned numCCPhysRegs() const$/;"	f	class:PhysRegFile
numCCRegReads	src/cpu/simple/base.hh	/^    Stats::Scalar numCCRegReads;$/;"	m	class:BaseSimpleCPU
numCCRegWrites	src/cpu/simple/base.hh	/^    Stats::Scalar numCCRegWrites;$/;"	m	class:BaseSimpleCPU
numCPUs	src/arch/arm/miscregs.hh	/^      Bitfield<25,24> numCPUs;$/;"	m	namespace:ArmISA
numCPUs	src/dev/alpha/access.h	/^    uint32_t    numCPUs;                \/\/ 08:$/;"	m	struct:AlphaAccess
numCPUs	src/dev/mips/access.h	/^    uint32_t    numCPUs;                \/\/ 0C:$/;"	m	struct:MipsAccess
numCaches	src/mem/cache/tags/fa_lru.hh	/^    unsigned numCaches;$/;"	m	class:FALRU
numCallsReturns	src/cpu/simple/base.hh	/^    Stats::Scalar numCallsReturns;$/;"	m	class:BaseSimpleCPU
numCoalescedMMIO	src/cpu/kvm/base.hh	/^    Stats::Scalar numCoalescedMMIO;$/;"	m	class:BaseKvmCPU
numCommittedDist	src/cpu/o3/commit.hh	/^    Stats::Distribution numCommittedDist;$/;"	m	class:DefaultCommit
numCondCtrlInsts	src/cpu/simple/base.hh	/^    Stats::Scalar numCondCtrlInsts;$/;"	m	class:BaseSimpleCPU
numContexts	src/cpu/base.hh	/^   unsigned numContexts() { return threadContexts.size(); }$/;"	f	class:BaseCPU
numContexts	src/sim/system.hh	/^    int numContexts()$/;"	f	class:System
numCopiesStat	src/cpu/testers/memtest/memtest.hh	/^    Stats::Scalar numCopiesStat;$/;"	m	class:MemTest
numCpus	src/sim/process.hh	/^    unsigned int numCpus() { return contextIds.size(); }$/;"	f	class:Process
numCtxtSwitches	src/cpu/inorder/cpu.hh	/^    Stats::Scalar numCtxtSwitches;$/;"	m	class:InOrderCPU
numCycleGrad	src/cpu/inorder/resources/mem_dep_unit.hh	/^    int numCycleGrad;$/;"	m	class:MemDepUnit
numCycles	src/cpu/base.hh	/^    Stats::Scalar numCycles;$/;"	m	class:BaseCPU
numDataArrayReads	src/mem/ruby/system/CacheMemory.hh	/^    Stats::Scalar numDataArrayReads;$/;"	m	class:CacheMemory
numDataArrayStalls	src/mem/ruby/system/CacheMemory.hh	/^    Stats::Scalar numDataArrayStalls;$/;"	m	class:CacheMemory
numDataArrayWrites	src/mem/ruby/system/CacheMemory.hh	/^    Stats::Scalar numDataArrayWrites;$/;"	m	class:CacheMemory
numDestRegs	src/cpu/base_dyn_inst.hh	/^    int8_t numDestRegs() const { return staticInst->numDestRegs(); }$/;"	f	class:BaseDynInst
numDestRegs	src/cpu/inorder/inorder_dyn_inst.hh	/^    int8_t numDestRegs() const { return staticInst->numDestRegs(); }$/;"	f	class:InOrderDynInst
numDestRegs	src/cpu/static_inst.hh	/^    int8_t numDestRegs() const { return _numDestRegs; }$/;"	f	class:StaticInst
numDispatchEntries	src/cpu/ozone/back_end.hh	/^    int numDispatchEntries;$/;"	m	class:BackEnd
numDroppedPrefetches	src/mem/ruby/structures/Prefetcher.hh	/^        Stats::Scalar numDroppedPrefetches;$/;"	m	class:Prefetcher
numEntries	src/cpu/o3/dep_graph.hh	/^    int numEntries;$/;"	m	class:DependencyGraph
numEntries	src/cpu/o3/inst_queue.hh	/^    unsigned numEntries;$/;"	m	class:InstructionQueue
numEntries	src/cpu/o3/rob.hh	/^    unsigned numEntries;$/;"	m	class:ROB
numEntries	src/cpu/ozone/inst_queue.hh	/^    unsigned numEntries;$/;"	m	class:InstQueue
numEntries	src/cpu/pred/btb.hh	/^    unsigned numEntries;$/;"	m	class:DefaultBTB
numEntries	src/cpu/pred/ras.hh	/^    unsigned numEntries;$/;"	m	class:ReturnAddrStack
numEntries	src/mem/cache/mshr_queue.hh	/^    const int numEntries;$/;"	m	class:MSHRQueue
numExitSignal	src/cpu/kvm/base.hh	/^    Stats::Scalar numExitSignal;$/;"	m	class:BaseKvmCPU
numFPDestRegs	src/cpu/base_dyn_inst.hh	/^    int8_t numFPDestRegs()  const { return staticInst->numFPDestRegs(); }$/;"	f	class:BaseDynInst
numFPDestRegs	src/cpu/inorder/inorder_dyn_inst.hh	/^    int8_t numFPDestRegs()  const { return staticInst->numFPDestRegs(); }$/;"	f	class:InOrderDynInst
numFPDestRegs	src/cpu/static_inst.hh	/^    int8_t numFPDestRegs()  const { return _numFPDestRegs; }$/;"	f	class:StaticInst
numFU	src/cpu/o3/fu_pool.hh	/^    int numFU;$/;"	m	class:FUPool
numFetchingThreads	src/cpu/inorder/first_stage.hh	/^    int numFetchingThreads;$/;"	m	class:FirstStage
numFetchingThreads	src/cpu/o3/fetch.hh	/^    ThreadID numFetchingThreads;$/;"	m	class:DefaultFetch
numFillInsts	src/arch/sparc/handlers.hh	/^const int numFillInsts = 32;$/;"	m	namespace:SparcISA
numFloatPhysRegs	src/cpu/o3/regfile.hh	/^    unsigned numFloatPhysRegs() const$/;"	f	class:PhysRegFile
numFpAluAccesses	src/cpu/simple/base.hh	/^    Stats::Scalar numFpAluAccesses;$/;"	m	class:BaseSimpleCPU
numFpInsts	src/cpu/simple/base.hh	/^    Stats::Scalar numFpInsts;$/;"	m	class:BaseSimpleCPU
numFpRegReads	src/cpu/simple/base.hh	/^    Stats::Scalar numFpRegReads;$/;"	m	class:BaseSimpleCPU
numFpRegWrites	src/cpu/simple/base.hh	/^    Stats::Scalar numFpRegWrites;$/;"	m	class:BaseSimpleCPU
numFreeCCRegs	src/cpu/o3/free_list.hh	/^    unsigned numFreeCCRegs() const { return ccList.numFreeRegs(); }$/;"	f	class:UnifiedFreeList
numFreeEntries	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::numFreeEntries()$/;"	f	class:InstructionQueue
numFreeEntries	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::numFreeEntries(ThreadID tid)$/;"	f	class:InstructionQueue
numFreeEntries	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::numFreeEntries()$/;"	f	class:LSQ
numFreeEntries	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::numFreeEntries(ThreadID tid)$/;"	f	class:LSQ
numFreeEntries	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::numFreeEntries()$/;"	f	class:LSQUnit
numFreeEntries	src/cpu/o3/rename_map.hh	/^    unsigned numFreeEntries() const { return freeList->numFreeRegs(); }$/;"	f	class:SimpleRenameMap
numFreeEntries	src/cpu/o3/rename_map.hh	/^    unsigned numFreeEntries() const$/;"	f	class:UnifiedRenameMap
numFreeEntries	src/cpu/o3/rob_impl.hh	/^ROB<Impl>::numFreeEntries()$/;"	f	class:ROB
numFreeEntries	src/cpu/o3/rob_impl.hh	/^ROB<Impl>::numFreeEntries(ThreadID tid)$/;"	f	class:ROB
numFreeEntries	src/cpu/ozone/inst_queue_impl.hh	/^InstQueue<Impl>::numFreeEntries()$/;"	f	class:InstQueue
numFreeEntries	src/cpu/ozone/inst_queue_impl.hh	/^InstQueue<Impl>::numFreeEntries(ThreadID tid)$/;"	f	class:InstQueue
numFreeEntries	src/cpu/ozone/lsq_unit_impl.hh	/^OzoneLSQ<Impl>::numFreeEntries()$/;"	f	class:OzoneLSQ
numFreeEntries	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::numFreeEntries()$/;"	f	class:OzoneLWLSQ
numFreeFloatRegs	src/cpu/o3/free_list.hh	/^    unsigned numFreeFloatRegs() const { return floatList.numFreeRegs(); }$/;"	f	class:UnifiedFreeList
numFreeIntRegs	src/cpu/o3/free_list.hh	/^    unsigned numFreeIntRegs() const { return intList.numFreeRegs(); }$/;"	f	class:UnifiedFreeList
numFreeRegs	src/cpu/o3/free_list.hh	/^    unsigned numFreeRegs() const { return freeRegs.size(); }$/;"	f	class:SimpleFreeList
numHalt	src/cpu/kvm/base.hh	/^    Stats::Scalar numHalt;$/;"	m	class:BaseKvmCPU
numHits	src/mem/ruby/structures/Prefetcher.hh	/^        Stats::Scalar numHits;$/;"	m	class:Prefetcher
numHypercalls	src/cpu/kvm/base.hh	/^    Stats::Scalar numHypercalls;$/;"	m	class:BaseKvmCPU
numIO	src/cpu/kvm/base.hh	/^    Stats::Scalar numIO;$/;"	m	class:BaseKvmCPU
numIQEntries	src/cpu/o3/O3CPU.py	/^    numIQEntries = Param.Unsigned(64, "Number of instruction queue entries")$/;"	v	class:DerivO3CPU
numIQEntries	src/cpu/ozone/OzoneCPU.py	/^    numIQEntries = Param.Unsigned("Number of instruction queue entries")$/;"	v	class:DerivOzoneCPU
numIQEntries	src/cpu/ozone/SimpleOzoneCPU.py	/^    numIQEntries = Param.Unsigned("Number of instruction queue entries")$/;"	v	class:SimpleOzoneCPU
numIQEntries	src/cpu/ozone/simple_params.hh	/^    unsigned numIQEntries;$/;"	m	class:SimpleParams
numIdleCycles	src/cpu/simple/base.hh	/^    Stats::Formula numIdleCycles;$/;"	m	class:BaseSimpleCPU
numInst	src/cpu/checker/cpu.hh	/^    Counter numInst;$/;"	m	class:CheckerCPU
numInst	src/cpu/o3/fetch.hh	/^    int numInst;$/;"	m	class:DefaultFetch
numInst	src/cpu/ozone/cpu.hh	/^    Counter numInst;$/;"	m	class:OzoneCPU
numInst	src/cpu/simple/base.hh	/^    Counter numInst;$/;"	m	class:BaseSimpleCPU
numInst	src/cpu/thread_state.hh	/^    Counter numInst;$/;"	m	struct:ThreadState
numInsts	src/cpu/kvm/base.hh	/^    Stats::Scalar numInsts;$/;"	m	class:BaseKvmCPU
numInsts	src/cpu/ozone/back_end.hh	/^        int numInsts;$/;"	m	class:BackEnd::InstQueue
numInsts	src/cpu/ozone/back_end.hh	/^    int numInsts;$/;"	m	class:BackEnd
numInsts	src/cpu/ozone/lw_back_end.hh	/^    int numInsts;$/;"	m	class:LWBackEnd
numInsts	src/cpu/simple/base.hh	/^    Stats::Scalar numInsts;$/;"	m	class:BaseSimpleCPU
numInsts	src/cpu/thread_state.hh	/^    Stats::Scalar numInsts;$/;"	m	struct:ThreadState
numInstsInROB	src/cpu/o3/rob.hh	/^    int numInstsInROB;$/;"	m	class:ROB
numInstsReady	src/cpu/ozone/front_end.hh	/^    TimeBuffer<int> numInstsReady;$/;"	m	class:FrontEnd
numInstsToWB	src/cpu/ozone/back_end.hh	/^    TimeBuffer<Writeback> numInstsToWB;$/;"	m	class:BackEnd
numInstsToWB	src/cpu/ozone/inorder_back_end.hh	/^    TimeBuffer<int> numInstsToWB;$/;"	m	class:InorderBackEnd
numInstsToWB	src/cpu/ozone/lw_back_end.hh	/^    TimeBuffer<int> numInstsToWB;$/;"	m	class:LWBackEnd
numIntAluAccesses	src/cpu/simple/base.hh	/^    Stats::Scalar numIntAluAccesses;$/;"	m	class:BaseSimpleCPU
numIntDestRegs	src/cpu/base_dyn_inst.hh	/^    int8_t numIntDestRegs() const { return staticInst->numIntDestRegs(); }$/;"	f	class:BaseDynInst
numIntDestRegs	src/cpu/inorder/inorder_dyn_inst.hh	/^    int8_t numIntDestRegs() const { return staticInst->numIntDestRegs(); }$/;"	f	class:InOrderDynInst
numIntDestRegs	src/cpu/static_inst.hh	/^    int8_t numIntDestRegs() const { return _numIntDestRegs; }$/;"	f	class:StaticInst
numIntInsts	src/cpu/simple/base.hh	/^    Stats::Scalar numIntInsts;$/;"	m	class:BaseSimpleCPU
numIntPhysRegs	src/cpu/o3/regfile.hh	/^    unsigned numIntPhysRegs() const { return baseFloatRegIndex; }$/;"	f	class:PhysRegFile
numIntRegReads	src/cpu/simple/base.hh	/^    Stats::Scalar numIntRegReads;$/;"	m	class:BaseSimpleCPU
numIntRegWrites	src/cpu/simple/base.hh	/^    Stats::Scalar numIntRegWrites;$/;"	m	class:BaseSimpleCPU
numInterrupts	src/cpu/kvm/base.hh	/^    Stats::Scalar numInterrupts;$/;"	m	class:BaseKvmCPU
numIssued	src/cpu/ozone/back_end.hh	/^        typename TimeBuffer<IssueToExec>::wire numIssued;$/;"	m	class:BackEnd::InstQueue
numIssuedDist	src/cpu/o3/inst_queue.hh	/^    Stats::Distribution numIssuedDist;$/;"	m	class:InstructionQueue
numItems	src/arch/x86/insts/micromediaop.hh	/^        numItems(int size) const$/;"	f	class:X86ISA::MediaOpBase
numLeft	src/base/barrier.hh	/^    unsigned numLeft;$/;"	m	class:Barrier
numLoad	src/cpu/checker/cpu.hh	/^    Counter numLoad;$/;"	m	class:CheckerCPU
numLoad	src/cpu/ozone/cpu.hh	/^    Counter numLoad;$/;"	m	class:OzoneCPU
numLoad	src/cpu/simple/base.hh	/^    Counter numLoad;$/;"	m	class:BaseSimpleCPU
numLoad	src/cpu/thread_state.hh	/^    Counter numLoad;$/;"	m	struct:ThreadState
numLoadInsts	src/cpu/simple/base.hh	/^    Stats::Scalar numLoadInsts;$/;"	m	class:BaseSimpleCPU
numLoads	src/cpu/o3/lsq.hh	/^    int numLoads(ThreadID tid)$/;"	f	class:LSQ
numLoads	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::numLoads()$/;"	f	class:LSQ
numLoads	src/cpu/o3/lsq_unit.hh	/^    int numLoads() { return loads; }$/;"	f	class:LSQUnit
numLoads	src/cpu/ozone/lsq_unit.hh	/^    int numLoads() { return loads; }$/;"	f	class:OzoneLSQ
numLoads	src/cpu/ozone/lw_lsq.hh	/^    int numLoads() { return loads; }$/;"	f	class:OzoneLWLSQ
numLoadsReady	src/cpu/ozone/lsq_unit_impl.hh	/^OzoneLSQ<Impl>::numLoadsReady()$/;"	f	class:OzoneLSQ
numLoadsReady	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::numLoadsReady()$/;"	f	class:OzoneLWLSQ
numMMIO	src/cpu/kvm/base.hh	/^    Stats::Scalar numMMIO;$/;"	m	class:BaseKvmCPU
numMainEventQueues	src/sim/eventq.cc	/^uint32_t numMainEventQueues = 0;$/;"	v
numMemRefs	src/cpu/simple/base.hh	/^    Stats::Scalar numMemRefs;$/;"	m	class:BaseSimpleCPU
numMemRefs	src/cpu/thread_state.hh	/^    Stats::Scalar numMemRefs;$/;"	m	struct:ThreadState
numMemories	src/cpu/testers/networktest/networktest.hh	/^    int numMemories;$/;"	m	class:NetworkTest
numMicroops	src/arch/arm/insts/mem.hh	/^    static const unsigned numMicroops = 2;$/;"	m	class:ArmISA::SrsOp
numMicroops	src/arch/arm/insts/mem.hh	/^    static const unsigned numMicroops = 3;$/;"	m	class:ArmISA::Memory
numMicroops	src/arch/arm/insts/mem.hh	/^    static const unsigned numMicroops = 3;$/;"	m	class:ArmISA::RfeOp
numMicroops	src/arch/arm/insts/mem64.hh	/^    static const unsigned numMicroops = 3;$/;"	m	class:ArmISA::Memory64
numMicroops	src/arch/arm/insts/pred_inst.hh	/^    uint32_t numMicroops;$/;"	m	class:ArmISA::PredMacroOp
numMicroops	src/arch/x86/insts/macroop.hh	/^    const uint32_t numMicroops;$/;"	m	class:X86ISA::MacroopBase
numMicroops	src/arch/x86/microcode_rom.hh	/^        static const MicroPC numMicroops;$/;"	m	class:X86ISAInst::MicrocodeRom
numMissObserved	src/mem/ruby/structures/Prefetcher.hh	/^        Stats::Scalar numMissObserved;$/;"	m	class:Prefetcher
numMissedPrefetchedBlocks	src/mem/ruby/structures/Prefetcher.hh	/^        Stats::Scalar numMissedPrefetchedBlocks;$/;"	m	class:Prefetcher
numOp	src/cpu/simple/base.hh	/^    Counter numOp;$/;"	m	class:BaseSimpleCPU
numOp	src/cpu/thread_state.hh	/^    Counter numOp;$/;"	m	struct:ThreadState
numOps	src/cpu/simple/base.hh	/^    Stats::Scalar numOps;$/;"	m	class:BaseSimpleCPU
numOps	src/cpu/thread_state.hh	/^    Stats::Scalar numOps;$/;"	m	struct:ThreadState
numOther	src/mem/abstract_mem.hh	/^    Stats::Vector numOther;$/;"	m	class:AbstractMemory
numPackets	src/cpu/testers/traffic_gen/traffic_gen.hh	/^    Stats::Scalar numPackets;$/;"	m	class:TrafficGen
numPacketsSent	src/cpu/testers/networktest/networktest.hh	/^    int numPacketsSent;$/;"	m	class:NetworkTest
numPagesCrossed	src/mem/ruby/structures/Prefetcher.hh	/^        Stats::Scalar numPagesCrossed;$/;"	m	class:Prefetcher
numPartialHits	src/mem/ruby/structures/Prefetcher.hh	/^        Stats::Scalar numPartialHits;$/;"	m	class:Prefetcher
numPhysCCRegs	src/cpu/o3/O3CPU.py	/^    numPhysCCRegs = Param.Unsigned(_defaultNumPhysCCRegs,$/;"	v	class:DerivO3CPU
numPhysFloatRegs	src/cpu/o3/O3CPU.py	/^    numPhysFloatRegs = Param.Unsigned(256, "Number of physical floating point "$/;"	v	class:DerivO3CPU
numPhysFloatRegs	src/cpu/ozone/OzoneCPU.py	/^    numPhysFloatRegs = Param.Unsigned("Number of physical floating point "$/;"	v	class:DerivOzoneCPU
numPhysFloatRegs	src/cpu/ozone/SimpleOzoneCPU.py	/^    numPhysFloatRegs = Param.Unsigned("Number of physical floating point "$/;"	v	class:SimpleOzoneCPU
numPhysFloatRegs	src/cpu/ozone/simple_params.hh	/^    unsigned numPhysFloatRegs;$/;"	m	class:SimpleParams
numPhysIntRegs	src/cpu/o3/O3CPU.py	/^    numPhysIntRegs = Param.Unsigned(256, "Number of physical integer registers")$/;"	v	class:DerivO3CPU
numPhysIntRegs	src/cpu/ozone/OzoneCPU.py	/^    numPhysIntRegs = Param.Unsigned("Number of physical integer registers")$/;"	v	class:DerivOzoneCPU
numPhysIntRegs	src/cpu/ozone/SimpleOzoneCPU.py	/^    numPhysIntRegs = Param.Unsigned("Number of physical integer registers")$/;"	v	class:SimpleOzoneCPU
numPhysIntRegs	src/cpu/ozone/simple_params.hh	/^    unsigned numPhysIntRegs;$/;"	m	class:SimpleParams
numPhysRegs	src/cpu/o3/inst_queue.hh	/^    unsigned numPhysRegs;$/;"	m	class:InstructionQueue
numPhysRegs	src/cpu/o3/scoreboard.hh	/^    unsigned numPhysRegs;$/;"	m	class:Scoreboard
numPhysRegs	src/cpu/ozone/front_end.hh	/^    int numPhysRegs;$/;"	m	class:FrontEnd
numPhysicalRegs	src/cpu/ozone/simple_params.hh	/^    unsigned numPhysicalRegs;$/;"	m	class:SimpleParams
numPredictedBranches	src/cpu/simple/base.hh	/^    Stats::Scalar numPredictedBranches;$/;"	m	class:BaseSimpleCPU
numPrefetchAccepted	src/mem/ruby/structures/Prefetcher.hh	/^        Stats::Scalar numPrefetchAccepted;$/;"	m	class:Prefetcher
numPrefetchRequested	src/mem/ruby/structures/Prefetcher.hh	/^        Stats::Scalar numPrefetchRequested;$/;"	m	class:Prefetcher
numQ	src/base/cp_annotate.hh	/^    std::vector<int> numSt, numQ;$/;"	m	class:CPA
numQs	src/base/cp_annotate.hh	/^    int numQs;$/;"	m	class:CPA
numROBEntries	src/cpu/o3/O3CPU.py	/^    numROBEntries = Param.Unsigned(192, "Number of reorder buffer entries")$/;"	v	class:DerivO3CPU
numROBEntries	src/cpu/ozone/OzoneCPU.py	/^    numROBEntries = Param.Unsigned("Number of reorder buffer entries")$/;"	v	class:DerivOzoneCPU
numROBEntries	src/cpu/ozone/SimpleOzoneCPU.py	/^    numROBEntries = Param.Unsigned("Number of reorder buffer entries")$/;"	v	class:SimpleOzoneCPU
numROBEntries	src/cpu/ozone/back_end.hh	/^    int numROBEntries;$/;"	m	class:BackEnd
numROBEntries	src/cpu/ozone/lw_back_end.hh	/^    int numROBEntries;$/;"	m	class:LWBackEnd
numROBEntries	src/cpu/ozone/simple_params.hh	/^    unsigned numROBEntries;$/;"	m	class:SimpleParams
numROBFreeEntries	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::numROBFreeEntries(ThreadID tid)$/;"	f	class:DefaultCommit
numRdRetry	src/mem/dram_ctrl.hh	/^    Stats::Scalar numRdRetry;$/;"	m	class:DRAMCtrl
numReads	src/cpu/testers/memtest/memtest.hh	/^    uint64_t numReads;$/;"	m	class:MemTest
numReads	src/mem/abstract_mem.hh	/^    Stats::Vector numReads;$/;"	m	class:AbstractMemory
numReadsStat	src/cpu/testers/memtest/memtest.hh	/^    Stats::Scalar numReadsStat;$/;"	m	class:MemTest
numRegs	src/arch/arm/insts/macromem.hh	/^    uint8_t eSize, dataSize, numStructElems, numRegs, step;$/;"	m	class:ArmISA::MicroNeonMixOp64
numRegs	src/arch/arm/insts/macromem.hh	/^    uint8_t eSize, dataSize, numStructElems, numRegs;$/;"	m	class:ArmISA::VldMultOp64
numRegs	src/arch/arm/insts/macromem.hh	/^    uint8_t eSize, dataSize, numStructElems, numRegs;$/;"	m	class:ArmISA::VstMultOp64
numRegs	src/dev/x86/cmos.hh	/^    static const int numRegs = 128;$/;"	m	class:X86ISA::Cmos
numReserve	src/mem/cache/mshr_queue.hh	/^    const int numReserve;$/;"	m	class:MSHRQueue
numRetries	src/cpu/testers/traffic_gen/traffic_gen.hh	/^    Stats::Scalar numRetries;$/;"	m	class:TrafficGen
numRobs	src/cpu/o3/O3CPU.py	/^    numRobs = Param.Unsigned(1, "Number of Reorder Buffers");$/;"	v	class:DerivO3CPU
numRobs	src/cpu/o3/commit.hh	/^    unsigned numRobs;$/;"	m	class:DefaultCommit
numRunningContexts	src/sim/system.cc	/^System::numRunningContexts()$/;"	f	class:System
numSeqPkts	src/cpu/testers/traffic_gen/generators.hh	/^    const unsigned int numSeqPkts;$/;"	m	class:DramGen
numSets	src/mem/cache/tags/lru.hh	/^    const unsigned numSets;$/;"	m	class:LRU
numSimulatedCPUs	src/cpu/base.hh	/^    static int numSimulatedCPUs() { return cpuList.size(); }$/;"	f	class:BaseCPU
numSimulatedInsts	src/arch/null/cpu_dummy.hh	/^    static int numSimulatedInsts() { return 0; }$/;"	f	class:BaseCPU
numSimulatedInsts	src/cpu/base.hh	/^    static Counter numSimulatedInsts()$/;"	f	class:BaseCPU
numSimulatedOps	src/arch/null/cpu_dummy.hh	/^    static int numSimulatedOps() { return 0; }$/;"	f	class:BaseCPU
numSimulatedOps	src/cpu/base.hh	/^    static Counter numSimulatedOps()$/;"	f	class:BaseCPU
numSm	src/base/cp_annotate.hh	/^    int numSm;$/;"	m	class:CPA
numSmt	src/base/cp_annotate.hh	/^    int numSmt;$/;"	m	class:CPA
numSpillInsts	src/arch/sparc/handlers.hh	/^const int numSpillInsts = 32;$/;"	m	namespace:SparcISA
numSquashable	src/arch/arm/table_walker.hh	/^    unsigned numSquashable;$/;"	m	class:ArmISA::TableWalker
numSquashable	src/arch/x86/pagetable_walker.hh	/^        unsigned numSquashable;$/;"	m	class:X86ISA::Walker
numSrcRegs	src/cpu/base_dyn_inst.hh	/^    int8_t numSrcRegs() const { return staticInst->numSrcRegs(); }$/;"	f	class:BaseDynInst
numSrcRegs	src/cpu/inorder/inorder_dyn_inst.hh	/^    int8_t numSrcRegs() const { return staticInst->numSrcRegs(); }$/;"	f	class:InOrderDynInst
numSrcRegs	src/cpu/static_inst.hh	/^    int8_t numSrcRegs()  const { return _numSrcRegs; }$/;"	f	class:StaticInst
numSt	src/base/cp_annotate.hh	/^    std::vector<int> numSt, numQ;$/;"	m	class:CPA
numStages	src/cpu/activity.hh	/^    int numStages;$/;"	m	class:ActivityRecorder
numStages	src/cpu/inorder/resource_sked.hh	/^    int numStages;$/;"	m	class:RSkedIt
numStoreInsts	src/cpu/simple/base.hh	/^    Stats::Scalar numStoreInsts;$/;"	m	class:BaseSimpleCPU
numStores	src/cpu/o3/lsq.hh	/^    int numStores(ThreadID tid)$/;"	f	class:LSQ
numStores	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::numStores()$/;"	f	class:LSQ
numStores	src/cpu/o3/lsq_unit.hh	/^    int numStores() { return stores; }$/;"	f	class:LSQUnit
numStores	src/cpu/ozone/lsq_unit.hh	/^    int numStores() { return stores; }$/;"	f	class:OzoneLSQ
numStores	src/cpu/ozone/lw_lsq.hh	/^    int numStores() { return stores + storesInFlight; }$/;"	f	class:OzoneLWLSQ
numStoresToWB	src/cpu/o3/lsq.hh	/^    int numStoresToWB(ThreadID tid)$/;"	f	class:LSQ
numStoresToWB	src/cpu/o3/lsq_unit.hh	/^    int numStoresToWB() { return storesToWB; }$/;"	f	class:LSQUnit
numStoresToWB	src/cpu/ozone/lsq_unit.hh	/^    int numStoresToWB() { return storesToWB; }$/;"	f	class:OzoneLSQ
numStoresToWB	src/cpu/ozone/lw_lsq.hh	/^    int numStoresToWB() { return storesToWB; }$/;"	f	class:OzoneLWLSQ
numStructElems	src/arch/arm/insts/macromem.hh	/^    uint8_t eSize, dataSize, numStructElems, index;$/;"	m	class:ArmISA::VldSingleOp64
numStructElems	src/arch/arm/insts/macromem.hh	/^    uint8_t eSize, dataSize, numStructElems, index;$/;"	m	class:ArmISA::VstSingleOp64
numStructElems	src/arch/arm/insts/macromem.hh	/^    uint8_t eSize, dataSize, numStructElems, lane, step;$/;"	m	class:ArmISA::MicroNeonMixLaneOp64
numStructElems	src/arch/arm/insts/macromem.hh	/^    uint8_t eSize, dataSize, numStructElems, numRegs, step;$/;"	m	class:ArmISA::MicroNeonMixOp64
numStructElems	src/arch/arm/insts/macromem.hh	/^    uint8_t eSize, dataSize, numStructElems, numRegs;$/;"	m	class:ArmISA::VldMultOp64
numStructElems	src/arch/arm/insts/macromem.hh	/^    uint8_t eSize, dataSize, numStructElems, numRegs;$/;"	m	class:ArmISA::VstMultOp64
numSwitches	src/mem/ruby/network/Topology.hh	/^    uint32_t numSwitches() const { return m_number_of_switches; }$/;"	f	class:Topology
numSys	src/base/cp_annotate.hh	/^    int numSys;$/;"	m	class:CPA
numSyscallDescs	src/arch/x86/process.hh	/^        const int numSyscallDescs;$/;"	m	class:X86ISA::X86LiveProcess
numSyscalls	src/arch/x86/linux/process.hh	/^    static const int numSyscalls;$/;"	m	class:X86ISA::I386LinuxProcess
numSyscalls	src/arch/x86/linux/process.hh	/^    static const int numSyscalls;$/;"	m	class:X86ISA::X86_64LinuxProcess
numSyscalls	src/arch/x86/linux/syscalls.cc	/^const int I386LinuxProcess::numSyscalls = $/;"	m	class:I386LinuxProcess	file:
numSyscalls	src/arch/x86/linux/syscalls.cc	/^const int X86_64LinuxProcess::numSyscalls = $/;"	m	class:X86_64LinuxProcess	file:
numSystemsRunning	src/sim/system.cc	/^int System::numSystemsRunning = 0;$/;"	m	class:System	file:
numSystemsRunning	src/sim/system.hh	/^    static int numSystemsRunning;$/;"	m	class:System
numTagArrayReads	src/mem/ruby/system/CacheMemory.hh	/^    Stats::Scalar numTagArrayReads;$/;"	m	class:CacheMemory
numTagArrayStalls	src/mem/ruby/system/CacheMemory.hh	/^    Stats::Scalar numTagArrayStalls;$/;"	m	class:CacheMemory
numTagArrayWrites	src/mem/ruby/system/CacheMemory.hh	/^    Stats::Scalar numTagArrayWrites;$/;"	m	class:CacheMemory
numTarget	src/mem/cache/base.hh	/^    const int numTarget;$/;"	m	class:BaseCache
numThreads	src/arch/mips/isa.hh	/^        uint8_t numThreads;$/;"	m	class:MipsISA::ISA
numThreads	src/cpu/BaseCPU.py	/^    numThreads = Param.Unsigned(1, "number of HW thread contexts")$/;"	v
numThreads	src/cpu/base.hh	/^    ThreadID numThreads;$/;"	m	class:BaseCPU
numThreads	src/cpu/inorder/pipeline_stage.hh	/^    ThreadID numThreads;$/;"	m	class:PipelineStage
numThreads	src/cpu/o3/commit.hh	/^    ThreadID numThreads;$/;"	m	class:DefaultCommit
numThreads	src/cpu/o3/decode.hh	/^    ThreadID numThreads;$/;"	m	class:DefaultDecode
numThreads	src/cpu/o3/fetch.hh	/^    ThreadID numThreads;$/;"	m	class:DefaultFetch
numThreads	src/cpu/o3/iew.hh	/^    ThreadID numThreads;$/;"	m	class:DefaultIEW
numThreads	src/cpu/o3/inst_queue.hh	/^    ThreadID numThreads;$/;"	m	class:InstructionQueue
numThreads	src/cpu/o3/lsq.hh	/^    ThreadID numThreads;$/;"	m	class:LSQ
numThreads	src/cpu/o3/rename.hh	/^    ThreadID numThreads;$/;"	m	class:DefaultRename
numThreads	src/cpu/o3/rob.hh	/^    ThreadID numThreads;$/;"	m	class:ROB
numThreads	src/cpu/ozone/OzoneCPU.py	/^    numThreads = Param.Unsigned("number of HW thread contexts")$/;"	v	class:DerivOzoneCPU
numThreads	src/cpu/ozone/SimpleOzoneCPU.py	/^    numThreads = Param.Unsigned("number of HW thread contexts")$/;"	v	class:SimpleOzoneCPU
numThreads	src/cpu/ozone/inst_queue.hh	/^    unsigned numThreads;$/;"	m	class:InstQueue
numThreads	src/cpu/pred/BranchPredictor.py	/^    numThreads = Param.Unsigned(1, "Number of threads")$/;"	v	class:BranchPredictor
numThreads	src/cpu/pred/bpred_unit.hh	/^    uint32_t numThreads;$/;"	m	class:BPredUnit
numTotalRegs	src/cpu/o3/scoreboard.hh	/^    unsigned M5_CLASS_VAR_USED numTotalRegs;$/;"	m	class:Scoreboard
numVMExits	src/cpu/kvm/base.hh	/^    Stats::Scalar numVMExits;$/;"	m	class:BaseKvmCPU
numVMHalfEntries	src/cpu/kvm/base.hh	/^    Stats::Scalar numVMHalfEntries;$/;"	m	class:BaseKvmCPU
numVnicDistance	src/dev/sinic.hh	/^    Stats::Scalar numVnicDistance;$/;"	m	class:Sinic::Device
numVpes	src/arch/mips/isa.hh	/^        uint8_t numVpes;$/;"	m	class:MipsISA::ISA
numWaiting	src/base/barrier.hh	/^    unsigned numWaiting;$/;"	m	class:Barrier
numWaitingMemOps	src/cpu/ozone/lw_back_end.hh	/^    int numWaitingMemOps;$/;"	m	class:LWBackEnd
numWorkIds	src/sim/system.hh	/^    uint32_t numWorkIds;$/;"	m	class:System
numWorkItemsCompleted	src/cpu/base.hh	/^    Stats::Scalar numWorkItemsCompleted;$/;"	m	class:BaseCPU
numWorkItemsStarted	src/cpu/base.hh	/^    Stats::Scalar numWorkItemsStarted;$/;"	m	class:BaseCPU
numWrRetry	src/mem/dram_ctrl.hh	/^    Stats::Scalar numWrRetry;$/;"	m	class:DRAMCtrl
numWrites	src/cpu/testers/memtest/memtest.hh	/^    uint64_t numWrites;$/;"	m	class:MemTest
numWrites	src/mem/abstract_mem.hh	/^    Stats::Vector numWrites;$/;"	m	class:AbstractMemory
numWritesStat	src/cpu/testers/memtest/memtest.hh	/^    Stats::Scalar numWritesStat;$/;"	m	class:MemTest
num_cpus	src/cpu/testers/directedtest/RubyDirectedTester.py	/^    num_cpus = Param.Int("num of cpus")$/;"	v	class:DirectedGenerator
num_cpus	src/cpu/testers/rubytest/RubyTester.py	/^    num_cpus = Param.Int("number of cpus \/ RubyPorts")$/;"	v	class:RubyTester
num_encodings	src/base/vnc/vncinput.hh	/^        uint16_t num_encodings;$/;"	m	struct:VncInput::PixelEncodingsMessage
num_fds	src/base/pollevent.hh	/^    int num_fds;$/;"	m	class:PollQueue
num_memories	src/cpu/testers/networktest/NetworkTest.py	/^    num_memories = Param.Int(1, "Num Memories")$/;"	v	class:NetworkTest
num_of_sequencers	src/mem/ruby/system/RubySystem.py	/^    num_of_sequencers = Param.Int("")$/;"	v	class:RubySystem
num_processes	src/sim/process.cc	/^int num_processes = 0;$/;"	v
num_recs	src/base/cp_annotate.hh	/^        uint64_t num_recs;$/;"	m	struct:CPA::AnnotateHeader
num_rects	src/base/vnc/vncserver.hh	/^        uint16_t num_rects;$/;"	m	struct:VncServer::FrameBufferUpdate
num_series	src/cpu/testers/directedtest/RubyDirectedTester.py	/^    num_series = Param.UInt32(1,$/;"	v	class:SeriesRequestGenerator
num_squash_per_cycle	src/arch/arm/ArmTLB.py	/^    num_squash_per_cycle = Param.Unsigned(2,$/;"	v	class:ArmTableWalker
num_squash_per_cycle	src/arch/x86/X86TLB.py	/^    num_squash_per_cycle = Param.Unsigned(4,$/;"	v	class:X86PagetableWalker
num_startup_pfs	src/mem/ruby/structures/RubyPrefetcher.py	/^    num_startup_pfs = Param.UInt32(1, "")$/;"	v	class:Prefetcher
num_streams	src/mem/ruby/structures/RubyPrefetcher.py	/^    num_streams = Param.UInt32(4,$/;"	v	class:Prefetcher
num_strings	src/unittest/circletest.cc	/^const int num_strings = sizeof(strings) \/ sizeof(char *);$/;"	v
num_syscalls	src/sim/process.hh	/^    Stats::Scalar num_syscalls;       \/\/ number of syscalls executed$/;"	m	class:Process
num_threads	src/arch/mips/MipsISA.py	/^    num_threads = Param.UInt8(1, "Maximum number this ISA can handle")$/;"	v	class:MipsISA
num_vc_per_vclass	src/mem/ruby/network/orion/OrionRouter.hh	/^    uint32_t num_vc_per_vclass;$/;"	m	class:OrionRouter
num_vpes	src/arch/mips/MipsISA.py	/^    num_vpes = Param.UInt8(1, "Maximum number of vpes this ISA can handle")$/;"	v	class:MipsISA
num_work_ids	src/sim/System.py	/^    num_work_ids = Param.Int(16, "Number of distinct work item types")$/;"	v
numa_high_bit	src/mem/ruby/system/DirectoryMemory.py	/^    numa_high_bit = Param.Int("numa high bit")$/;"	v	class:RubyDirectoryMemory
numa_syscalls	src/kern/tru64/tru64_syscalls.hh	/^        numa_syscalls = 119,$/;"	e	enum:SystemCalls::__anon102
number	src/base/remote_gdb.hh	/^    int number;$/;"	m	class:BaseRemoteGDB
number	src/base/vnc/Vnc.py	/^    number = Param.Int(0, "vnc client number")$/;"	v	class:VncServer
number	src/base/vnc/vncserver.hh	/^    int number;$/;"	m	class:VncServer
number	src/cpu/func_unit.hh	/^    unsigned         number;$/;"	m	class:FUDesc
number	src/dev/Terminal.py	/^    number = Param.Int(0, "terminal number")$/;"	v	class:Terminal
number	src/dev/etherlink.hh	/^        int number;$/;"	m	class:EtherLink::Link
number	src/dev/pktfifo.hh	/^    uint64_t number;$/;"	m	struct:PacketFifoEntry
number	src/dev/terminal.hh	/^    int number;$/;"	m	class:Terminal
number	src/dev/x86/X86IntPin.py	/^    number = Param.Int("The pin number on the device")$/;"	v	class:X86IntSinkPin
number	src/dev/x86/intdev.hh	/^    int number;$/;"	m	class:X86ISA::IntSinkPin
number	src/sim/arguments.hh	/^    int number;$/;"	m	class:Arguments
number_of_TBEs	src/mem/ruby/slicc_interface/Controller.py	/^    number_of_TBEs = Param.Int(256, "")$/;"	v	class:RubyController
number_of_fault_types	src/mem/ruby/network/fault_model/FaultModel.hh	/^        number_of_fault_types$/;"	e	enum:FaultModel::fault_type
number_of_ones	src/arch/arm/insts/macromem.hh	/^number_of_ones(int32_t val)$/;"	f	namespace:ArmISA
number_of_pipe_stages	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.py	/^    number_of_pipe_stages = Param.UInt32(4, "router pipeline stages");$/;"	v	class:GarnetNetwork
number_of_virtual_networks	src/mem/ruby/network/Network.py	/^    number_of_virtual_networks = Param.Int(10, "")$/;"	v	class:RubyNetwork
nupc	src/arch/generic/types.hh	/^    MicroPC nupc() const { return _nupc; }$/;"	f	class:GenericISA::DelaySlotUPCState
nupc	src/arch/generic/types.hh	/^    MicroPC nupc() const { return _nupc; }$/;"	f	class:GenericISA::UPCState
nupc	src/arch/generic/types.hh	/^    void nupc(MicroPC val) { _nupc = val; }$/;"	f	class:GenericISA::DelaySlotUPCState
nupc	src/arch/generic/types.hh	/^    void nupc(MicroPC val) { _nupc = val; }$/;"	f	class:GenericISA::UPCState
nvram	src/arch/sparc/SparcSystem.py	/^    nvram = Param.SimpleMemory($/;"	v	class:SparcSystem
nvram	src/arch/sparc/system.hh	/^    ObjectFile *nvram;$/;"	m	class:SparcSystem
nvramSymtab	src/arch/sparc/system.hh	/^    SymbolTable *nvramSymtab;$/;"	m	class:SparcSystem
nvram_addr	src/arch/sparc/SparcSystem.py	/^    nvram_addr = Param.Addr(_nvram_base, "Address to put the nvram")$/;"	v	class:SparcSystem
nvram_bin	src/arch/sparc/SparcSystem.py	/^    nvram_bin = Param.String("file that contains the contents of nvram")$/;"	v	class:SparcSystem
nw	src/arch/x86/regs/misc.hh	/^        Bitfield<29> nw; \/\/ Not Writethrough$/;"	m	namespace:X86ISA
nx	src/arch/x86/pagetable_walker.cc	/^    Bitfield<63> nx;$/;"	m	namespace:X86ISA	file:
nxe	src/arch/x86/regs/misc.hh	/^        Bitfield<11> nxe; \/\/ No-execute enable$/;"	m	namespace:X86ISA
nxm_active	src/kern/tru64/tru64.hh	/^        int64_t            nxm_active;     \/\/!< scheduler active$/;"	m	struct:Tru64::ushared_state
nxm_bits	src/kern/tru64/tru64.hh	/^        unsigned int    nxm_bits;               \/\/!< scheduler state \/ slot$/;"	m	struct:Tru64::nxm_sched_state
nxm_block	src/kern/tru64/tru64_syscalls.hh	/^        nxm_block = 24,$/;"	e	enum:SystemCalls::__anon103
nxm_blockFunc	src/kern/tru64/tru64.hh	/^    nxm_blockFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	class:Tru64
nxm_bound_pcs_count	src/kern/tru64/tru64.hh	/^        uint64_t   nxm_bound_pcs_count;    \/\/!< bound PCS thread count$/;"	m	struct:Tru64::nxm_sched_state
nxm_callback	src/kern/tru64/tru64.hh	/^        int64_t nxm_callback;              \/\/!< address of upcall routine$/;"	m	struct:Tru64::nxm_shared
nxm_callback	src/kern/tru64/tru64.hh	/^        int64_t nxm_callback;   \/\/!< nxm_callback$/;"	m	struct:Tru64::nxm_task_attr
nxm_config_info	src/kern/tru64/tru64.hh	/^    struct nxm_config_info {$/;"	s	class:Tru64
nxm_end	src/sim/process.hh	/^    Addr nxm_end;$/;"	m	class:Process
nxm_get_binding	src/kern/tru64/tru64_syscalls.hh	/^        nxm_get_binding = 42,$/;"	e	enum:SystemCalls::__anon103
nxm_get_state	src/kern/tru64/tru64_syscalls.hh	/^        nxm_get_state = 48,$/;"	e	enum:SystemCalls::__anon103
nxm_idle	src/kern/tru64/tru64_syscalls.hh	/^        nxm_idle = 35,$/;"	e	enum:SystemCalls::__anon103
nxm_idleFunc	src/kern/tru64/tru64.hh	/^    nxm_idleFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	class:Tru64
nxm_nrads	src/kern/tru64/tru64.hh	/^        int nxm_nrads;                  \/\/!< max number of RADs$/;"	m	struct:Tru64::nxm_config_info
nxm_nslots_per_rad	src/kern/tru64/tru64.hh	/^        int nxm_nslots_per_rad;         \/\/!< max number of VP slots per RAD$/;"	m	struct:Tru64::nxm_config_info
nxm_pshared_block	src/kern/tru64/tru64_syscalls.hh	/^        nxm_pshared_block = 64,$/;"	e	enum:SystemCalls::__anon103
nxm_pshared_destroy	src/kern/tru64/tru64_syscalls.hh	/^        nxm_pshared_destroy = 66,$/;"	e	enum:SystemCalls::__anon103
nxm_pshared_init	src/kern/tru64/tru64_syscalls.hh	/^        nxm_pshared_init = 63,$/;"	e	enum:SystemCalls::__anon103
nxm_pshared_unblock	src/kern/tru64/tru64_syscalls.hh	/^        nxm_pshared_unblock = 65,$/;"	e	enum:SystemCalls::__anon103
nxm_pthid	src/kern/tru64/tru64.hh	/^        Addr nxm_pthid; \/\/!< id of null thread$/;"	m	struct:Tru64::nxm_sched_state
nxm_quantum	src/kern/tru64/tru64.hh	/^        int             nxm_quantum;            \/\/!< quantum count-down value$/;"	m	struct:Tru64::nxm_sched_state
nxm_quantum	src/kern/tru64/tru64.hh	/^        int nxm_quantum;        \/\/!< nxm_quantum$/;"	m	struct:Tru64::nxm_task_attr
nxm_rad	src/kern/tru64/tru64.hh	/^        Addr nxm_rad[1];  \/\/!< per-RAD shared areas$/;"	m	struct:Tru64::nxm_config_info
nxm_resched	src/kern/tru64/tru64_syscalls.hh	/^        nxm_resched = 44,$/;"	e	enum:SystemCalls::__anon103
nxm_sched_state	src/kern/tru64/tru64.hh	/^    struct nxm_sched_state {$/;"	s	class:Tru64
nxm_set_binding	src/kern/tru64/tru64_syscalls.hh	/^        nxm_set_binding = 46,$/;"	e	enum:SystemCalls::__anon103
nxm_set_cancel	src/kern/tru64/tru64_syscalls.hh	/^        nxm_set_cancel = 45,$/;"	e	enum:SystemCalls::__anon103
nxm_set_pthid	src/kern/tru64/tru64_syscalls.hh	/^        nxm_set_pthid = 37,$/;"	e	enum:SystemCalls::__anon103
nxm_set_quantum	src/kern/tru64/tru64.hh	/^        int             nxm_set_quantum;        \/\/!< quantum reset value$/;"	m	struct:Tru64::nxm_sched_state
nxm_shared	src/kern/tru64/tru64.hh	/^    struct nxm_shared {$/;"	s	class:Tru64
nxm_signal_check	src/kern/tru64/tru64_syscalls.hh	/^        nxm_signal_check = 51,$/;"	e	enum:SystemCalls::__anon103
nxm_slot_state	src/kern/tru64/tru64.hh	/^        Addr nxm_slot_state; \/\/!< per-VP slot state$/;"	m	struct:Tru64::nxm_config_info
nxm_slot_state_t	src/kern/tru64/tru64.hh	/^    enum nxm_slot_state_t {$/;"	g	class:Tru64
nxm_ss	src/kern/tru64/tru64.hh	/^        struct nxm_sched_state nxm_ss[1]; \/\/!< array of shared areas$/;"	m	struct:Tru64::nxm_shared	typeref:struct:Tru64::nxm_shared::nxm_sched_state
nxm_ssig	src/kern/tru64/tru64.hh	/^        int             nxm_ssig;       \/\/!< scheduler's synchronous signals$/;"	m	struct:Tru64::ushared_state
nxm_start	src/sim/process.hh	/^    Addr nxm_start;$/;"	m	class:Process
nxm_swtch_pri	src/kern/tru64/tru64_syscalls.hh	/^        nxm_swtch_pri = 67,$/;"	e	enum:SystemCalls::__anon103
nxm_sysevent	src/kern/tru64/tru64.hh	/^        int             nxm_sysevent;           \/\/!< syscall state$/;"	m	struct:Tru64::nxm_sched_state
nxm_task_attr	src/kern/tru64/tru64.hh	/^    struct nxm_task_attr {$/;"	s	class:Tru64
nxm_task_init	src/kern/tru64/tru64_syscalls.hh	/^        nxm_task_init = 33,$/;"	e	enum:SystemCalls::__anon103
nxm_task_initFunc	src/kern/tru64/tru64.hh	/^    nxm_task_initFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	class:Tru64
nxm_thread_attr	src/kern/tru64/tru64.hh	/^    struct nxm_thread_attr {$/;"	s	class:Tru64
nxm_thread_block	src/kern/tru64/tru64_syscalls.hh	/^        nxm_thread_block = 39,$/;"	e	enum:SystemCalls::__anon103
nxm_thread_blockFunc	src/kern/tru64/tru64.hh	/^    nxm_thread_blockFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	class:Tru64
nxm_thread_create	src/kern/tru64/tru64_syscalls.hh	/^        nxm_thread_create = 32,$/;"	e	enum:SystemCalls::__anon103
nxm_thread_createFunc	src/kern/tru64/tru64.hh	/^    nxm_thread_createFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	class:Tru64
nxm_thread_destroy	src/kern/tru64/tru64_syscalls.hh	/^        nxm_thread_destroy = 29,$/;"	e	enum:SystemCalls::__anon103
nxm_thread_kill	src/kern/tru64/tru64_syscalls.hh	/^        nxm_thread_kill = 38,$/;"	e	enum:SystemCalls::__anon103
nxm_thread_resume	src/kern/tru64/tru64_syscalls.hh	/^        nxm_thread_resume = 50,$/;"	e	enum:SystemCalls::__anon103
nxm_thread_suspend	src/kern/tru64/tru64_syscalls.hh	/^        nxm_thread_suspend = 49,$/;"	e	enum:SystemCalls::__anon103
nxm_thread_type	src/kern/tru64/tru64.hh	/^    enum nxm_thread_type {$/;"	g	class:Tru64
nxm_thread_wakeup	src/kern/tru64/tru64_syscalls.hh	/^        nxm_thread_wakeup = 40,$/;"	e	enum:SystemCalls::__anon103
nxm_tid	src/kern/tru64/tru64.hh	/^        Addr nxm_tid;               \/\/!< scheduler's thread id$/;"	m	struct:Tru64::nxm_sched_state
nxm_u	src/kern/tru64/tru64.hh	/^        struct          ushared_state nxm_u;    \/\/!< state own by user thread$/;"	m	struct:Tru64::nxm_sched_state	typeref:struct:Tru64::nxm_sched_state::ushared_state
nxm_uc_ret	src/kern/tru64/tru64.hh	/^        Addr        nxm_uc_ret; \/\/!< stack ptr of null thread$/;"	m	struct:Tru64::nxm_sched_state
nxm_unblock	src/kern/tru64/tru64_syscalls.hh	/^        nxm_unblock = 25,$/;"	e	enum:SystemCalls::__anon103
nxm_unblockFunc	src/kern/tru64/tru64.hh	/^    nxm_unblockFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	class:Tru64
nxm_uniq_offset	src/kern/tru64/tru64.hh	/^        unsigned short nxm_uniq_offset; \/\/!< correction factor for TEB$/;"	m	struct:Tru64::nxm_shared
nxm_uniq_offset	src/kern/tru64/tru64.hh	/^        unsigned short nxm_uniq_offset; \/\/!< nxm_uniq_offset$/;"	m	struct:Tru64::nxm_task_attr
nxm_va	src/kern/tru64/tru64.hh	/^        int64_t            nxm_va;                 \/\/!< page fault address$/;"	m	struct:Tru64::nxm_sched_state
nxm_version	src/kern/tru64/tru64.hh	/^        unsigned int nxm_version;       \/\/!< nxm_version$/;"	m	struct:Tru64::nxm_task_attr
nxm_version	src/kern/tru64/tru64.hh	/^        unsigned int nxm_version;       \/\/!< version number$/;"	m	struct:Tru64::nxm_shared
nxm_wakeup_idle	src/kern/tru64/tru64_syscalls.hh	/^        nxm_wakeup_idle = 36,$/;"	e	enum:SystemCalls::__anon103
nxt	src/base/inet.hh	/^    uint8_t nxt() const { return ext_nxt; }$/;"	f	struct:Net::Ip6Opt
nxt	src/base/inet.hh	/^    uint8_t nxt() const { return ip6_nxt; }$/;"	f	struct:Net::Ip6Hdr
nz	src/arch/arm/miscregs.hh	/^        Bitfield<31, 30> nz;$/;"	m	namespace:ArmISA
oVAddr	src/arch/arm/stage2_mmu.hh	/^        Addr      oVAddr;$/;"	m	class:ArmISA::Stage2MMU::Stage2Translation
obffe	src/dev/pcireg.h	/^        Bitfield<14,13> obffe;$/;"	m	struct:PXCAP
obffs	src/dev/pcireg.h	/^        Bitfield<19,18> obffs;$/;"	m	struct:PXCAP
obj	src/dev/arm/hdlcd.hh	/^        HDLcd &obj;$/;"	m	class:HDLcd::DmaDoneEvent
obj	src/dev/arm/pl111.hh	/^        Pl111 &obj;$/;"	m	class:Pl111::DmaDoneEvent
obj	src/mem/cache/blk.hh	/^    T &obj;$/;"	m	class:CacheBlkVisitorWrapper
objFile	src/sim/process.hh	/^    ObjectFile *objFile;$/;"	m	class:LiveProcess
objName	src/dev/etherlink.hh	/^        std::string objName;$/;"	m	class:EtherLink::Link
objName	src/sim/eventq.hh	/^    std::string objName;$/;"	m	class:EventQueue
objParamIn	src/sim/serialize.cc	/^objParamIn(Checkpoint *cp, const string &section,$/;"	f
object	src/base/callback.hh	/^    T *object;$/;"	m	class:MakeCallback
object	src/cpu/cpuevent.hh	/^    T *object;$/;"	m	class:CpuEventWrapper
object	src/python/swig/pyevent.hh	/^    PyObject *object;$/;"	m	class:PythonEvent
object	src/sim/eventq.hh	/^    T *object;$/;"	m	class:EventWrapper
object	src/sim/probe/probe.hh	/^    T *object;$/;"	m	class:ProbeListenerArg
object	src/sim/probe/probe.hh	/^    const M5_CLASS_VAR_USED SimObject *object;$/;"	m	class:ProbeManager
objects	src/python/m5/__init__.py	/^    import objects$/;"	i
objects	src/python/m5/simulate.py	/^import objects$/;"	i
obreak	src/kern/tru64/tru64_syscalls.hh	/^        obreak = 17,$/;"	e	enum:SystemCalls::__anon102
observeMiss	src/mem/ruby/structures/Prefetcher.cc	/^Prefetcher::observeMiss(const Address& address, const RubyRequestType& type)$/;"	f	class:Prefetcher
observePfHit	src/mem/ruby/structures/Prefetcher.cc	/^Prefetcher::observePfHit(const Address& address)$/;"	f	class:Prefetcher
observePfMiss	src/mem/ruby/structures/Prefetcher.cc	/^Prefetcher::observePfMiss(const Address& address)$/;"	f	class:Prefetcher
obsolete_42_sigreturn	src/kern/tru64/tru64_syscalls.hh	/^        obsolete_42_sigreturn = 139,$/;"	e	enum:SystemCalls::__anon102
obsolete_osigaction	src/kern/tru64/tru64_syscalls.hh	/^        obsolete_osigaction = 46,$/;"	e	enum:SystemCalls::__anon102
obsolete_vtrcae	src/kern/tru64/tru64_syscalls.hh	/^        obsolete_vtrcae = 115,$/;"	e	enum:SystemCalls::__anon102
occ_dist	src/cpu/ozone/back_end.hh	/^        Stats::VectorDistribution occ_dist;$/;"	m	class:BackEnd::InstQueue
occ_rate	src/cpu/ozone/back_end.hh	/^        Stats::Formula occ_rate;$/;"	m	class:BackEnd::InstQueue
occupancies	src/mem/cache/tags/base.hh	/^    Stats::AverageVector occupancies;$/;"	m	class:BaseTags
occupanciesTaskId	src/mem/cache/tags/base.hh	/^    Stats::Vector occupanciesTaskId;$/;"	m	class:BaseTags
occupancy	src/mem/bus.hh	/^        Stats::Scalar occupancy;$/;"	m	class:BaseBus::Layer
occupyLayer	src/mem/bus.cc	/^void BaseBus::Layer<SrcType,DstType>::occupyLayer(Tick until)$/;"	f	class:BaseBus::Layer
oct	src/base/cprintf_formats.hh	/^    enum { dec, hex, oct } base;$/;"	e	enum:cp::Format::__anon37
oe	src/arch/power/miscregs.hh	/^    Bitfield<7> oe;$/;"	m	namespace:PowerISA
oe	src/arch/power/types.hh	/^    Bitfield<10>     oe;$/;"	m	namespace:PowerISA
oeSet	src/arch/power/insts/integer.hh	/^    bool oeSet;$/;"	m	class:PowerISA::IntOp
oeim	src/dev/arm/pl011.hh	/^        Bitfield<10> oeim;$/;"	m	class:Pl011
oemID	src/arch/x86/bios/acpi.hh	/^    std::string oemID;$/;"	m	class:X86ISA::ACPI::RSDP
oemID	src/arch/x86/bios/acpi.hh	/^    std::string oemID;$/;"	m	class:X86ISA::ACPI::SysDescTable
oemID	src/arch/x86/bios/intelmp.hh	/^    std::string oemID;$/;"	m	class:X86ISA::IntelMP::ConfigTable
oemRevision	src/arch/x86/bios/acpi.hh	/^    uint32_t oemRevision;$/;"	m	class:X86ISA::ACPI::SysDescTable
oemTableAddr	src/arch/x86/bios/intelmp.hh	/^    uint32_t oemTableAddr;$/;"	m	class:X86ISA::IntelMP::ConfigTable
oemTableID	src/arch/x86/bios/acpi.hh	/^    std::string oemTableID;$/;"	m	class:X86ISA::ACPI::SysDescTable
oemTableSize	src/arch/x86/bios/intelmp.hh	/^    uint16_t oemTableSize;$/;"	m	class:X86ISA::IntelMP::ConfigTable
oem_id	src/arch/x86/bios/ACPI.py	/^    oem_id = Param.String('', 'string identifying the oem')$/;"	v	class:X86ACPIRSDP
oem_id	src/arch/x86/bios/ACPI.py	/^    oem_id = Param.String('', 'string identifying the oem')$/;"	v	class:X86ACPISysDescTable
oem_id	src/arch/x86/bios/IntelMP.py	/^    oem_id = Param.String("", 'system manufacturer')$/;"	v	class:X86IntelMPConfigTable
oem_revision	src/arch/x86/bios/ACPI.py	/^    oem_revision = Param.UInt32(0, 'oem revision number for the table')$/;"	v	class:X86ACPISysDescTable
oem_table_addr	src/arch/x86/bios/IntelMP.py	/^    oem_table_addr = Param.UInt32(0,$/;"	v	class:X86IntelMPConfigTable
oem_table_id	src/arch/x86/bios/ACPI.py	/^    oem_table_id = Param.String('', 'oem table ID')$/;"	v	class:X86ACPISysDescTable
oem_table_size	src/arch/x86/bios/IntelMP.py	/^    oem_table_size = Param.UInt16(0, 'size of the oem configuration table')$/;"	v	class:X86IntelMPConfigTable
of	src/arch/x86/regs/misc.hh	/^        Bitfield<11> of; \/\/ Overflow Flag$/;"	m	namespace:X86ISA
of	src/arch/x86/regs/misc.hh	/^        Bitfield<11> of;$/;"	m	namespace:X86ISA
ofc	src/arch/arm/miscregs.hh	/^        Bitfield<2> ofc;$/;"	m	namespace:ArmISA
ofe	src/arch/arm/miscregs.hh	/^        Bitfield<10> ofe;$/;"	m	namespace:ArmISA
off	src/base/inet.hh	/^    int off() const { return (sizeof(eth_hdr) + ((eth_hdr_vlan) ? 4 : 0)); }$/;"	f	class:Net::IpPtr
off	src/base/inet.hh	/^    int off() const { return 0; }$/;"	f	class:Net::EthPtr
off	src/base/inet.hh	/^    int off() const { return _off; }$/;"	f	class:Net::TcpPtr
off	src/base/inet.hh	/^    int off() const { return _off; }$/;"	f	class:Net::UdpPtr
off	src/base/inet.hh	/^    int off() const { return sizeof(eth_hdr) + ((eth_hdr_vlan) ? 4 : 0); }$/;"	f	class:Net::Ip6Ptr
off	src/base/inet.hh	/^    uint8_t  off() const { return th_off*4; }$/;"	f	struct:Net::TcpHdr
off_t	src/arch/arm/linux/linux.hh	/^    typedef uint32_t off_t;$/;"	t	class:ArmLinux32
off_t	src/arch/arm/linux/linux.hh	/^    typedef uint64_t off_t;$/;"	t	class:ArmLinux64
off_t	src/kern/linux/linux.hh	/^    typedef uint64_t off_t;$/;"	t	class:Linux
off_t	src/kern/solaris/solaris.hh	/^    typedef uint64_t off_t;$/;"	t	class:Solaris
off_t	src/kern/tru64/tru64.hh	/^    typedef uint64_t off_t;$/;"	t	class:Tru64
off_type	src/base/stats/types.hh	/^typedef unsigned int off_type;$/;"	t	namespace:Stats
offlg	src/base/inet.hh	/^    uint16_t offlg;$/;"	m	struct:Net::ip6_opt_fragment
offline	src/arch/mips/dt_constants.hh	/^    Bitfield<7>      offline;$/;"	m	namespace:MipsISA
offset	src/arch/alpha/pagetable.hh	/^    Addr offset() const { return addr & PageOffset; }$/;"	f	struct:AlphaISA::VAddr
offset	src/arch/arm/decoder.hh	/^    int offset;$/;"	m	class:ArmISA::Decoder
offset	src/arch/arm/faults.cc	/^ArmFaultVals<T>::offset(ThreadContext *tc)$/;"	f	class:ArmISA::ArmFaultVals
offset	src/arch/arm/faults.hh	/^        const FaultOffset offset;$/;"	m	struct:ArmISA::ArmFault::FaultVals
offset	src/arch/arm/insts/mem64.hh	/^    IntRegIndex offset;$/;"	m	class:ArmISA::MemoryReg64
offset	src/arch/arm/types.hh	/^        Bitfield<23, 0>  offset;$/;"	m	namespace:ArmISA
offset	src/arch/mips/faults.hh	/^        const FaultVect offset;$/;"	m	struct:MipsISA::MipsFaultBase::FaultVals
offset	src/arch/mips/faults.hh	/^    FaultVect offset(ThreadContext *tc) const { return vals.offset; }$/;"	f	class:MipsISA::MipsFault
offset	src/arch/mips/faults.hh	/^    offset(ThreadContext *tc) const$/;"	f	class:MipsISA::InterruptFault
offset	src/arch/mips/faults.hh	/^    offset(ThreadContext *tc) const$/;"	f	class:MipsISA::TlbRefillFault
offset	src/arch/power/pagetable.hh	/^    offset() const$/;"	f	struct:PowerISA::VAddr
offset	src/arch/x86/decoder.hh	/^    int offset;$/;"	m	class:X86ISA::Decoder
offset	src/base/bitmap.hh	/^        uint32_t offset;$/;"	m	struct:Bitmap::Header
offset	src/base/loader/coff_sym.h	/^    coff_ulong  offset; \/* relative offset this occured *\/$/;"	m	struct:__anon45
offset	src/base/statistics.hh	/^    off_type offset;$/;"	m	class:Stats::VectorProxy
offset	src/dev/arm/hdlcd.hh	/^        Bitfield<4,0>   offset;$/;"	m	class:HDLcd
offset	src/unittest/genini.py	/^            offset = arg.find('=')$/;"	v
offset64	src/arch/arm/faults.hh	/^    offset64()$/;"	f	class:ArmISA::ArmFaultVals
offsetBits	src/arch/arm/table_walker.hh	/^        uint8_t offsetBits() const$/;"	f	class:ArmISA::TableWalker::LongDescriptor
offsetBits	src/arch/arm/table_walker.hh	/^        virtual uint8_t offsetBits() const$/;"	f	class:ArmISA::TableWalker::L1Descriptor
offsetBits	src/arch/arm/table_walker.hh	/^        virtual uint8_t offsetBits() const$/;"	f	class:ArmISA::TableWalker::L2Descriptor
offsetBits	src/cpu/o3/store_set.hh	/^    int offsetBits;$/;"	m	class:StoreSet
offsetHigh	src/arch/x86/regs/misc.hh	/^        Bitfield<63, 48> offsetHigh; \/\/ Target Code-Segment Offset$/;"	m	namespace:X86ISA
offsetLow	src/arch/x86/regs/misc.hh	/^        Bitfield<15, 0> offsetLow; \/\/ Target Code-Segment Offset$/;"	m	namespace:X86ISA
offsetMask	src/mem/page_table.hh	/^    const Addr offsetMask;$/;"	m	class:PageTable
oflock	src/kern/tru64/tru64_syscalls.hh	/^        oflock = 262,$/;"	e	enum:SystemCalls::__anon102
okToIssueStarving	src/mem/ruby/system/PersistentTable.cc	/^PersistentTable::okToIssueStarving(const Address& address,$/;"	f	class:PersistentTable
oldR11Val	src/arch/x86/nativetrace.hh	/^    uint64_t oldRcxVal, oldR11Val;$/;"	m	class:Trace::X86NativeTrace
oldRcxVal	src/arch/x86/nativetrace.hh	/^    uint64_t oldRcxVal, oldR11Val;$/;"	m	class:Trace::X86NativeTrace
oldRealR11Val	src/arch/x86/nativetrace.hh	/^    uint64_t oldRealRcxVal, oldRealR11Val;$/;"	m	class:Trace::X86NativeTrace
oldRealRcxVal	src/arch/x86/nativetrace.hh	/^    uint64_t oldRealRcxVal, oldRealR11Val;$/;"	m	class:Trace::X86NativeTrace
oldState	src/arch/arm/nativetrace.hh	/^        uint64_t *oldState;$/;"	m	struct:Trace::ArmNativeTrace::ThreadState
old_accept	src/kern/tru64/tru64_syscalls.hh	/^        old_accept = 99,$/;"	e	enum:SystemCalls::__anon102
old_creat	src/kern/tru64/tru64_syscalls.hh	/^        old_creat = 8,$/;"	e	enum:SystemCalls::__anon102
old_fstat	src/kern/tru64/tru64_syscalls.hh	/^        old_fstat = 62,$/;"	e	enum:SystemCalls::__anon102
old_getpeername	src/kern/tru64/tru64_syscalls.hh	/^        old_getpeername = 141,$/;"	e	enum:SystemCalls::__anon102
old_getpgrp	src/kern/tru64/tru64_syscalls.hh	/^        old_getpgrp = 81,$/;"	e	enum:SystemCalls::__anon102
old_getsockname	src/kern/tru64/tru64_syscalls.hh	/^        old_getsockname = 150,$/;"	e	enum:SystemCalls::__anon102
old_killpg	src/kern/tru64/tru64_syscalls.hh	/^        old_killpg = 146,$/;"	e	enum:SystemCalls::__anon102
old_lstat	src/kern/tru64/tru64_syscalls.hh	/^        old_lstat = 40,$/;"	e	enum:SystemCalls::__anon102
old_open	src/kern/tru64/tru64_syscalls.hh	/^        old_open = 5,$/;"	e	enum:SystemCalls::__anon102
old_recv	src/kern/tru64/tru64_syscalls.hh	/^        old_recv = 102,$/;"	e	enum:SystemCalls::__anon102
old_recvfrom	src/kern/tru64/tru64_syscalls.hh	/^        old_recvfrom = 125,$/;"	e	enum:SystemCalls::__anon102
old_recvmsg	src/kern/tru64/tru64_syscalls.hh	/^        old_recvmsg = 113,$/;"	e	enum:SystemCalls::__anon102
old_send	src/kern/tru64/tru64_syscalls.hh	/^        old_send = 101,$/;"	e	enum:SystemCalls::__anon102
old_sendmsg	src/kern/tru64/tru64_syscalls.hh	/^        old_sendmsg = 114,$/;"	e	enum:SystemCalls::__anon102
old_sigblock	src/kern/tru64/tru64_syscalls.hh	/^        old_sigblock = 109,$/;"	e	enum:SystemCalls::__anon102
old_sigsetmask	src/kern/tru64/tru64_syscalls.hh	/^        old_sigsetmask = 110,$/;"	e	enum:SystemCalls::__anon102
old_sigvec	src/kern/tru64/tru64_syscalls.hh	/^        old_sigvec = 108,$/;"	e	enum:SystemCalls::__anon102
old_stat	src/kern/tru64/tru64_syscalls.hh	/^        old_stat = 38,$/;"	e	enum:SystemCalls::__anon102
old_vhangup	src/kern/tru64/tru64_syscalls.hh	/^        old_vhangup = 76,$/;"	e	enum:SystemCalls::__anon102
old_wait	src/kern/tru64/tru64_syscalls.hh	/^        old_wait = 84,$/;"	e	enum:SystemCalls::__anon102
oldestInst	src/cpu/o3/inst_queue.hh	/^        InstSeqNum oldestInst;$/;"	m	struct:InstructionQueue::ListOrderEntry
oldestReady	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::oldestReady()$/;"	f	class:DefaultCommit
oldfstat	src/kern/linux/linux_syscalls.hh	/^    oldfstat = 139,$/;"	e	enum:SystemCalls::__anon87
oldlstat	src/kern/linux/linux_syscalls.hh	/^    oldlstat = 140,$/;"	e	enum:SystemCalls::__anon87
oldolduname	src/kern/linux/linux_syscalls.hh	/^    oldolduname = 141,$/;"	e	enum:SystemCalls::__anon87
oldquota	src/kern/tru64/tru64_syscalls.hh	/^        oldquota = 149,$/;"	e	enum:SystemCalls::__anon102
oldstat	src/kern/linux/linux_syscalls.hh	/^    oldstat = 142,$/;"	e	enum:SystemCalls::__anon87
olduname	src/kern/linux/linux_syscalls.hh	/^    olduname = 143,$/;"	e	enum:SystemCalls::__anon87
on	src/arch/mips/dt_constants.hh	/^    Bitfield<0>      on;$/;"	m	namespace:MipsISA
onCpuTimerInterrupt	src/arch/mips/interrupts.cc	/^Interrupts::onCpuTimerInterrupt(ThreadContext * tc) const$/;"	f	class:MipsISA::Interrupts
onInstList	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool onInstList;$/;"	m	class:InOrderDynInst
onKickSignal	src/cpu/kvm/base.cc	/^onKickSignal(int signo, siginfo_t *si, void *data)$/;"	f	file:
onKvmExitHypercall	src/cpu/kvm/arm_cpu.cc	/^ArmKvmCPU::onKvmExitHypercall()$/;"	f	class:ArmKvmCPU
onMissOnly	src/mem/cache/prefetch/base.hh	/^    const bool onMissOnly;$/;"	m	class:BasePrefetcher
onPrefetch	src/mem/cache/prefetch/base.hh	/^    const bool onPrefetch;$/;"	m	class:BasePrefetcher
onReadOnly	src/mem/cache/prefetch/base.hh	/^    const bool onReadOnly;$/;"	m	class:BasePrefetcher
on_miss_only	src/mem/cache/prefetch/Prefetcher.py	/^    on_miss_only = Param.Bool(False,$/;"	v	class:BasePrefetcher
on_prefetch	src/mem/cache/prefetch/Prefetcher.py	/^    on_prefetch = Param.Bool(True,$/;"	v	class:BasePrefetcher
on_read_only	src/mem/cache/prefetch/Prefetcher.py	/^    on_read_only = Param.Bool(False,$/;"	v	class:BasePrefetcher
one	src/dev/ps2.hh	/^    Bitfield<3> one;$/;"	m	namespace:Ps2
oneShot	src/dev/arm/timer_sp804.hh	/^            Bitfield<0>   oneShot;$/;"	m	class:Sp804::Timer
one_million	src/sim/syscall_emul.hh	/^const int one_million = 1000000;$/;"	v
oneline	src/base/stats/info.hh	/^const FlagsType oneline =       0x0400;$/;"	m	namespace:Stats
onlyData	src/mem/cache/prefetch/base.hh	/^    const bool onlyData;$/;"	m	class:BasePrefetcher
op	src/arch/x86/types.hh	/^            Opcode op;$/;"	m	struct:X86ISA::ExtMachInst::__anon36
op	src/arch/x86/types.hh	/^        Bitfield<4> op;$/;"	m	namespace:X86ISA
op	src/base/cp_annotate.hh	/^        uint8_t  op;$/;"	m	struct:CPA::AnnotateData
op1	src/arch/arm/insts/branch.hh	/^    IntRegIndex op1;$/;"	m	class:ArmISA::BranchImmReg
op1	src/arch/arm/insts/branch.hh	/^    IntRegIndex op1;$/;"	m	class:ArmISA::BranchReg
op1	src/arch/arm/insts/branch.hh	/^    IntRegIndex op1;$/;"	m	class:ArmISA::BranchRegReg
op1	src/arch/arm/insts/branch64.hh	/^    IntRegIndex op1;$/;"	m	class:ArmISA::BranchImmImmReg64
op1	src/arch/arm/insts/branch64.hh	/^    IntRegIndex op1;$/;"	m	class:ArmISA::BranchImmReg64
op1	src/arch/arm/insts/branch64.hh	/^    IntRegIndex op1;$/;"	m	class:ArmISA::BranchReg64
op1	src/arch/arm/insts/data64.hh	/^    IntRegIndex dest, op1, op2, op3;$/;"	m	class:ArmISA::DataX3RegOp
op1	src/arch/arm/insts/data64.hh	/^    IntRegIndex dest, op1, op2;$/;"	m	class:ArmISA::DataX2RegImmOp
op1	src/arch/arm/insts/data64.hh	/^    IntRegIndex dest, op1, op2;$/;"	m	class:ArmISA::DataX2RegOp
op1	src/arch/arm/insts/data64.hh	/^    IntRegIndex dest, op1, op2;$/;"	m	class:ArmISA::DataXCondSelOp
op1	src/arch/arm/insts/data64.hh	/^    IntRegIndex dest, op1, op2;$/;"	m	class:ArmISA::DataXERegOp
op1	src/arch/arm/insts/data64.hh	/^    IntRegIndex dest, op1, op2;$/;"	m	class:ArmISA::DataXSRegOp
op1	src/arch/arm/insts/data64.hh	/^    IntRegIndex dest, op1;$/;"	m	class:ArmISA::DataX1Reg2ImmOp
op1	src/arch/arm/insts/data64.hh	/^    IntRegIndex dest, op1;$/;"	m	class:ArmISA::DataX1RegImmOp
op1	src/arch/arm/insts/data64.hh	/^    IntRegIndex dest, op1;$/;"	m	class:ArmISA::DataX1RegOp
op1	src/arch/arm/insts/data64.hh	/^    IntRegIndex dest, op1;$/;"	m	class:ArmISA::DataXImmOp
op1	src/arch/arm/insts/data64.hh	/^    IntRegIndex op1, op2;$/;"	m	class:ArmISA::DataXCondCompRegOp
op1	src/arch/arm/insts/data64.hh	/^    IntRegIndex op1;$/;"	m	class:ArmISA::DataXCondCompImmOp
op1	src/arch/arm/insts/macromem.hh	/^    RegIndex dest, op1;$/;"	m	class:ArmISA::MicroNeonMixLaneOp64
op1	src/arch/arm/insts/macromem.hh	/^    RegIndex dest, op1;$/;"	m	class:ArmISA::MicroNeonMixOp
op1	src/arch/arm/insts/macromem.hh	/^    RegIndex dest, op1;$/;"	m	class:ArmISA::MicroNeonMixOp64
op1	src/arch/arm/insts/mem.hh	/^    IntRegIndex op1;$/;"	m	class:ArmISA::Swap
op1	src/arch/arm/insts/misc.hh	/^    IntRegIndex op1;$/;"	m	class:McrrOp
op1	src/arch/arm/insts/misc.hh	/^    IntRegIndex op1;$/;"	m	class:MrrcOp
op1	src/arch/arm/insts/misc.hh	/^    IntRegIndex op1;$/;"	m	class:MsrRegOp
op1	src/arch/arm/insts/misc.hh	/^    IntRegIndex op1;$/;"	m	class:RegImmImmOp
op1	src/arch/arm/insts/misc.hh	/^    IntRegIndex op1;$/;"	m	class:RegImmRegOp
op1	src/arch/arm/insts/misc.hh	/^    IntRegIndex op1;$/;"	m	class:RegImmRegShiftOp
op1	src/arch/arm/insts/misc.hh	/^    IntRegIndex op1;$/;"	m	class:RegRegImmImmOp
op1	src/arch/arm/insts/misc.hh	/^    IntRegIndex op1;$/;"	m	class:RegRegImmOp
op1	src/arch/arm/insts/misc.hh	/^    IntRegIndex op1;$/;"	m	class:RegRegOp
op1	src/arch/arm/insts/misc.hh	/^    IntRegIndex op1;$/;"	m	class:RegRegRegImmOp
op1	src/arch/arm/insts/misc.hh	/^    IntRegIndex op1;$/;"	m	class:RegRegRegOp
op1	src/arch/arm/insts/misc.hh	/^    IntRegIndex op1;$/;"	m	class:RegRegRegRegOp
op1	src/arch/arm/insts/misc64.hh	/^    IntRegIndex op1;$/;"	m	class:RegRegImmImmOp64
op1	src/arch/arm/insts/misc64.hh	/^    IntRegIndex op1;$/;"	m	class:RegRegRegImmOp64
op1	src/arch/arm/insts/pred_inst.hh	/^    IntRegIndex dest, op1, op2, shift;$/;"	m	class:ArmISA::DataRegRegOp
op1	src/arch/arm/insts/pred_inst.hh	/^    IntRegIndex dest, op1, op2;$/;"	m	class:ArmISA::DataRegOp
op1	src/arch/arm/insts/pred_inst.hh	/^    IntRegIndex dest, op1;$/;"	m	class:ArmISA::DataImmOp
op1	src/arch/arm/insts/vfp.hh	/^    IntRegIndex dest, op1, op2;$/;"	m	class:ArmISA::FpCondSelOp
op1	src/arch/arm/insts/vfp.hh	/^    IntRegIndex op1, op2;$/;"	m	class:ArmISA::FpCondCompRegOp
op1	src/arch/arm/insts/vfp.hh	/^    IntRegIndex op1;$/;"	m	class:ArmISA::FpRegRegImmOp
op1	src/arch/arm/insts/vfp.hh	/^    IntRegIndex op1;$/;"	m	class:ArmISA::FpRegRegOp
op1	src/arch/arm/insts/vfp.hh	/^    IntRegIndex op1;$/;"	m	class:ArmISA::FpRegRegRegImmOp
op1	src/arch/arm/insts/vfp.hh	/^    IntRegIndex op1;$/;"	m	class:ArmISA::FpRegRegRegOp
op1	src/arch/arm/insts/vfp.hh	/^    IntRegIndex op1;$/;"	m	class:ArmISA::FpRegRegRegRegOp
op2	src/arch/arm/insts/branch.hh	/^    IntRegIndex op2;$/;"	m	class:ArmISA::BranchRegReg
op2	src/arch/arm/insts/data64.hh	/^    IntRegIndex dest, op1, op2, op3;$/;"	m	class:ArmISA::DataX3RegOp
op2	src/arch/arm/insts/data64.hh	/^    IntRegIndex dest, op1, op2;$/;"	m	class:ArmISA::DataX2RegImmOp
op2	src/arch/arm/insts/data64.hh	/^    IntRegIndex dest, op1, op2;$/;"	m	class:ArmISA::DataX2RegOp
op2	src/arch/arm/insts/data64.hh	/^    IntRegIndex dest, op1, op2;$/;"	m	class:ArmISA::DataXCondSelOp
op2	src/arch/arm/insts/data64.hh	/^    IntRegIndex dest, op1, op2;$/;"	m	class:ArmISA::DataXERegOp
op2	src/arch/arm/insts/data64.hh	/^    IntRegIndex dest, op1, op2;$/;"	m	class:ArmISA::DataXSRegOp
op2	src/arch/arm/insts/data64.hh	/^    IntRegIndex op1, op2;$/;"	m	class:ArmISA::DataXCondCompRegOp
op2	src/arch/arm/insts/misc.hh	/^    IntRegIndex op2;$/;"	m	class:McrrOp
op2	src/arch/arm/insts/misc.hh	/^    IntRegIndex op2;$/;"	m	class:RegRegRegImmOp
op2	src/arch/arm/insts/misc.hh	/^    IntRegIndex op2;$/;"	m	class:RegRegRegOp
op2	src/arch/arm/insts/misc.hh	/^    IntRegIndex op2;$/;"	m	class:RegRegRegRegOp
op2	src/arch/arm/insts/misc64.hh	/^    IntRegIndex op2;$/;"	m	class:RegRegRegImmOp64
op2	src/arch/arm/insts/pred_inst.hh	/^    IntRegIndex dest, op1, op2, shift;$/;"	m	class:ArmISA::DataRegRegOp
op2	src/arch/arm/insts/pred_inst.hh	/^    IntRegIndex dest, op1, op2;$/;"	m	class:ArmISA::DataRegOp
op2	src/arch/arm/insts/vfp.hh	/^    IntRegIndex dest, op1, op2;$/;"	m	class:ArmISA::FpCondSelOp
op2	src/arch/arm/insts/vfp.hh	/^    IntRegIndex op1, op2;$/;"	m	class:ArmISA::FpCondCompRegOp
op2	src/arch/arm/insts/vfp.hh	/^    IntRegIndex op2;$/;"	m	class:ArmISA::FpRegRegRegImmOp
op2	src/arch/arm/insts/vfp.hh	/^    IntRegIndex op2;$/;"	m	class:ArmISA::FpRegRegRegOp
op2	src/arch/arm/insts/vfp.hh	/^    IntRegIndex op2;$/;"	m	class:ArmISA::FpRegRegRegRegOp
op3	src/arch/arm/insts/data64.hh	/^    IntRegIndex dest, op1, op2, op3;$/;"	m	class:ArmISA::DataX3RegOp
op3	src/arch/arm/insts/misc.hh	/^    IntRegIndex op3;$/;"	m	class:RegRegRegRegOp
op3	src/arch/arm/insts/vfp.hh	/^    IntRegIndex op3;$/;"	m	class:ArmISA::FpRegRegRegRegOp
opClass	src/cpu/FuncUnit.py	/^    opClass = Param.OpClass("type of operation")$/;"	v	class:OpDesc
opClass	src/cpu/base_dyn_inst.hh	/^    OpClass opClass() const { return staticInst->opClass(); }$/;"	f	class:BaseDynInst
opClass	src/cpu/func_unit.hh	/^    OpClass opClass;$/;"	m	class:OpDesc
opClass	src/cpu/inorder/inorder_dyn_inst.hh	/^    OpClass opClass() const { return staticInst->opClass(); }$/;"	f	class:InOrderDynInst
opClass	src/cpu/static_inst.hh	/^    OpClass opClass()     const { return _opClass; }$/;"	f	class:StaticInst
opClassRE	src/arch/isa_parser.py	/^opClassRE = re.compile(r'.*Op|No_OpClass')$/;"	v
opDescList	src/cpu/func_unit.hh	/^    std::vector<OpDesc *> opDescList;$/;"	m	class:FUDesc
opLat	src/cpu/FuncUnit.py	/^    opLat = Param.Cycles(1, "cycles until result is available")$/;"	v	class:OpDesc
opLat	src/cpu/func_unit.hh	/^    Cycles opLat;$/;"	m	class:OpDesc
opLatencies	src/cpu/func_unit.hh	/^    unsigned opLatencies[Num_OpClasses];$/;"	m	class:FuncUnit
opLatency	src/cpu/func_unit.cc	/^FuncUnit::opLatency(OpClass cap)$/;"	f	class:FuncUnit
opList	src/cpu/FuncUnit.py	/^    opList = VectorParam.OpDesc("operation classes for this FU type")$/;"	v	class:FUDesc
opList	src/cpu/o3/FuncUnitConfig.py	/^    opList = [ OpDesc(opClass='FloatAdd', opLat=2),$/;"	v	class:FP_ALU
opList	src/cpu/o3/FuncUnitConfig.py	/^    opList = [ OpDesc(opClass='FloatMult', opLat=4),$/;"	v	class:FP_MultDiv
opList	src/cpu/o3/FuncUnitConfig.py	/^    opList = [ OpDesc(opClass='IntAlu') ]$/;"	v	class:IntALU
opList	src/cpu/o3/FuncUnitConfig.py	/^    opList = [ OpDesc(opClass='IntMult', opLat=3),$/;"	v	class:IntMultDiv
opList	src/cpu/o3/FuncUnitConfig.py	/^    opList = [ OpDesc(opClass='IprAccess', opLat = 3, issueLat = 3) ]$/;"	v	class:IprPort
opList	src/cpu/o3/FuncUnitConfig.py	/^    opList = [ OpDesc(opClass='MemRead') ]$/;"	v	class:ReadPort
opList	src/cpu/o3/FuncUnitConfig.py	/^    opList = [ OpDesc(opClass='MemRead'), OpDesc(opClass='MemWrite') ]$/;"	v	class:RdWrPort
opList	src/cpu/o3/FuncUnitConfig.py	/^    opList = [ OpDesc(opClass='MemWrite') ]$/;"	v	class:WritePort
opList	src/cpu/o3/FuncUnitConfig.py	/^    opList = [ OpDesc(opClass='SimdAdd'),$/;"	v	class:SIMD_Unit
opModeIs64	src/arch/arm/types.hh	/^    opModeIs64(OperatingMode mode)$/;"	f	namespace:ArmISA
opModeIsH	src/arch/arm/types.hh	/^    opModeIsH(OperatingMode mode)$/;"	f	namespace:ArmISA
opModeIsT	src/arch/arm/types.hh	/^    opModeIsT(OperatingMode mode)$/;"	f	namespace:ArmISA
opModeToEL	src/arch/arm/types.hh	/^    opModeToEL(OperatingMode mode)$/;"	f	namespace:ArmISA
opSize	src/arch/x86/insts/microop.hh	/^        uint8_t opSize;$/;"	m	class:X86ISA::X86MicroopBase
opSize	src/arch/x86/types.hh	/^        uint8_t opSize;$/;"	m	struct:X86ISA::ExtMachInst
opSys	src/base/loader/object_file.hh	/^    OpSys opSys;$/;"	m	class:ObjectFile
opc2	src/arch/arm/types.hh	/^        Bitfield<7,5>    opc2;$/;"	m	namespace:ArmISA
opcode	src/arch/arm/types.hh	/^        Bitfield<24, 21> opcode;$/;"	m	namespace:ArmISA
opcode	src/arch/x86/types.hh	/^        } opcode;$/;"	m	struct:X86ISA::ExtMachInst	typeref:struct:X86ISA::ExtMachInst::__anon36
opcode15	src/arch/arm/types.hh	/^        Bitfield<15>     opcode15;$/;"	m	namespace:ArmISA
opcode15_12	src/arch/arm/types.hh	/^        Bitfield<15, 12> opcode15_12;$/;"	m	namespace:ArmISA
opcode18	src/arch/arm/types.hh	/^        Bitfield<18>     opcode18;$/;"	m	namespace:ArmISA
opcode19	src/arch/arm/types.hh	/^        Bitfield<19>     opcode19;$/;"	m	namespace:ArmISA
opcode19_16	src/arch/arm/types.hh	/^        Bitfield<19, 16> opcode19_16;$/;"	m	namespace:ArmISA
opcode20	src/arch/arm/types.hh	/^        Bitfield<20>     opcode20;$/;"	m	namespace:ArmISA
opcode22	src/arch/arm/types.hh	/^        Bitfield<22>     opcode22;$/;"	m	namespace:ArmISA
opcode23_20	src/arch/arm/types.hh	/^        Bitfield<23, 20> opcode23_20;$/;"	m	namespace:ArmISA
opcode23_21	src/arch/arm/types.hh	/^        Bitfield<23, 21> opcode23_21;$/;"	m	namespace:ArmISA
opcode24	src/arch/arm/types.hh	/^        Bitfield<24>     opcode24;$/;"	m	namespace:ArmISA
opcode24_23	src/arch/arm/types.hh	/^        Bitfield<24, 23> opcode24_23;$/;"	m	namespace:ArmISA
opcode4	src/arch/arm/types.hh	/^        Bitfield<4>      opcode4;$/;"	m	namespace:ArmISA
opcode6	src/arch/arm/types.hh	/^        Bitfield<6>      opcode6;$/;"	m	namespace:ArmISA
opcode7	src/arch/arm/types.hh	/^        Bitfield<7>      opcode7;$/;"	m	namespace:ArmISA
open	src/base/stats/text.cc	/^Text::open(const std::string &file)$/;"	f	class:Stats::Text
open	src/base/stats/text.cc	/^Text::open(std::ostream &_stream)$/;"	f	class:Stats::Text
open	src/dev/disk_image.cc	/^CowDiskImage::open(const string &file)$/;"	f	class:CowDiskImage
open	src/dev/disk_image.cc	/^RawDiskImage::open(const string &filename, bool rd_only)$/;"	f	class:RawDiskImage
open	src/kern/linux/linux_syscalls.hh	/^    open = 144,$/;"	e	enum:SystemCalls::__anon87
open	src/kern/tru64/tru64_syscalls.hh	/^        open = 45,$/;"	e	enum:SystemCalls::__anon102
openFile	src/base/output.cc	/^OutputDirectory::openFile(const string &filename,$/;"	f	class:OutputDirectory
openFlagTable	src/arch/alpha/linux/linux.cc	/^OpenFlagTransTable AlphaLinux::openFlagTable[] = {$/;"	m	class:AlphaLinux	file:
openFlagTable	src/arch/alpha/linux/linux.hh	/^    static OpenFlagTransTable openFlagTable[];$/;"	m	class:AlphaLinux
openFlagTable	src/arch/alpha/tru64/tru64.cc	/^OpenFlagTransTable AlphaTru64::openFlagTable[] = {$/;"	m	class:AlphaTru64	file:
openFlagTable	src/arch/alpha/tru64/tru64.hh	/^    static OpenFlagTransTable openFlagTable[];$/;"	m	class:AlphaTru64
openFlagTable	src/arch/arm/linux/linux.cc	/^OpenFlagTransTable ArmLinux32::openFlagTable[] = {$/;"	m	class:ArmLinux32	file:
openFlagTable	src/arch/arm/linux/linux.cc	/^OpenFlagTransTable ArmLinux64::openFlagTable[] = {$/;"	m	class:ArmLinux64	file:
openFlagTable	src/arch/arm/linux/linux.hh	/^    static OpenFlagTransTable openFlagTable[];$/;"	m	class:ArmLinux32
openFlagTable	src/arch/arm/linux/linux.hh	/^    static OpenFlagTransTable openFlagTable[];$/;"	m	class:ArmLinux64
openFlagTable	src/arch/mips/linux/linux.cc	/^OpenFlagTransTable MipsLinux::openFlagTable[] = {$/;"	m	class:MipsLinux	file:
openFlagTable	src/arch/mips/linux/linux.hh	/^    static OpenFlagTransTable openFlagTable[];$/;"	m	class:MipsLinux
openFlagTable	src/arch/power/linux/linux.cc	/^OpenFlagTransTable PowerLinux::openFlagTable[] = {$/;"	m	class:PowerLinux	file:
openFlagTable	src/arch/power/linux/linux.hh	/^    static OpenFlagTransTable openFlagTable[];$/;"	m	class:PowerLinux
openFlagTable	src/arch/sparc/linux/linux.cc	/^OpenFlagTransTable SparcLinux::openFlagTable[] = {$/;"	m	class:SparcLinux	file:
openFlagTable	src/arch/sparc/linux/linux.hh	/^    static OpenFlagTransTable openFlagTable[];$/;"	m	class:SparcLinux
openFlagTable	src/arch/sparc/solaris/solaris.cc	/^OpenFlagTransTable SparcSolaris::openFlagTable[] = {$/;"	m	class:SparcSolaris	file:
openFlagTable	src/arch/sparc/solaris/solaris.hh	/^    static OpenFlagTransTable openFlagTable[];$/;"	m	class:SparcSolaris
openFlagTable	src/arch/x86/linux/linux.cc	/^OpenFlagTransTable X86Linux32::openFlagTable[] = {$/;"	m	class:X86Linux32	file:
openFlagTable	src/arch/x86/linux/linux.cc	/^OpenFlagTransTable X86Linux64::openFlagTable[] = {$/;"	m	class:X86Linux64	file:
openFlagTable	src/arch/x86/linux/linux.hh	/^    static OpenFlagTransTable openFlagTable[];$/;"	m	class:X86Linux32
openFlagTable	src/arch/x86/linux/linux.hh	/^    static OpenFlagTransTable openFlagTable[];$/;"	m	class:X86Linux64
openFunc	src/sim/syscall_emul.hh	/^openFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
openInputFile	src/sim/process.cc	/^Process::openInputFile(const string &filename)$/;"	f	class:Process
openOutputFile	src/sim/process.cc	/^Process::openOutputFile(const string &filename)$/;"	f	class:Process
openRow	src/mem/dram_ctrl.hh	/^        uint32_t openRow;$/;"	m	class:DRAMCtrl::Bank
openSpecialFile	src/kern/linux/linux.cc	/^Linux::openSpecialFile(std::string path, LiveProcess *process,$/;"	f	class:Linux
openSpecialFile	src/kern/operatingsystem.cc	/^OperatingSystem::openSpecialFile(std::string path, LiveProcess *process,$/;"	f	class:OperatingSystem
openatFunc	src/sim/syscall_emul.hh	/^openatFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
openboot	src/arch/sparc/system.hh	/^    ObjectFile *openboot;$/;"	m	class:SparcSystem
openbootSymtab	src/arch/sparc/system.hh	/^    SymbolTable *openbootSymtab;$/;"	m	class:SparcSystem
openboot_addr	src/arch/sparc/SparcSystem.py	/^    openboot_addr = Param.Addr(Addr('512kB') + _rom_base,$/;"	v	class:SparcSystem
openboot_bin	src/arch/sparc/SparcSystem.py	/^    openboot_bin = Param.String("file that contains the openboot code")$/;"	v	class:SparcSystem
operator !	src/base/debug.hh	/^    bool operator!() const { return !_status; }$/;"	f	class:Debug::SimpleFlag
operator !	src/base/inet.hh	/^    bool operator!() const { return !p; }$/;"	f	class:Net::EthPtr
operator !	src/base/inet.hh	/^    bool operator!() const { return !p; }$/;"	f	class:Net::Ip6Ptr
operator !	src/base/inet.hh	/^    bool operator!() const { return !p; }$/;"	f	class:Net::IpPtr
operator !	src/base/inet.hh	/^    bool operator!() const { return !p; }$/;"	f	class:Net::TcpPtr
operator !	src/base/inet.hh	/^    bool operator!() const { return !p; }$/;"	f	class:Net::UdpPtr
operator !	src/base/refcnt.hh	/^    bool operator!() const { return data == 0; }$/;"	f	class:RefCountingPtr
operator !	src/sim/arguments.hh	/^    bool operator!() {$/;"	f	class:Arguments
operator !	src/sim/vptr.hh	/^    operator!() const$/;"	f	class:VPtr
operator !=	src/arch/arm/types.hh	/^        operator != (const PCState &opc) const$/;"	f	class:ArmISA::PCState
operator !=	src/arch/generic/types.hh	/^    operator != (const DelaySlotPCState<MachInst> &opc) const$/;"	f	class:GenericISA::DelaySlotPCState
operator !=	src/arch/generic/types.hh	/^    operator != (const DelaySlotUPCState<MachInst> &opc) const$/;"	f	class:GenericISA::DelaySlotUPCState
operator !=	src/arch/generic/types.hh	/^    operator != (const PCStateBase &opc) const$/;"	f	class:GenericISA::PCStateBase
operator !=	src/arch/generic/types.hh	/^    operator != (const UPCState<MachInst> &opc) const$/;"	f	class:GenericISA::UPCState
operator !=	src/base/refcnt.hh	/^inline bool operator!=(const RefCountingPtr<T> &l, const RefCountingPtr<T> &r)$/;"	f
operator !=	src/base/refcnt.hh	/^inline bool operator!=(const RefCountingPtr<T> &l, const T *r)$/;"	f
operator !=	src/base/refcnt.hh	/^inline bool operator!=(const T *l, const RefCountingPtr<T> &r)$/;"	f
operator !=	src/base/time.hh	/^operator!=(const Time &l, const Time &r)$/;"	f
operator !=	src/cpu/inorder/resource_sked.hh	/^    bool operator!=(RSkedIt const &rhs)$/;"	f	class:RSkedIt
operator !=	src/mem/packet.hh	/^    bool operator!=(MemCmd c2) const { return (cmd != c2.cmd); }$/;"	f	class:MemCmd
operator !=	src/mem/ruby/common/Address.hh	/^operator!=(const Address& obj1, const Address& obj2)$/;"	f
operator !=	src/mem/ruby/system/MachineID.hh	/^operator!=(const MachineID & obj1, const MachineID & obj2)$/;"	f
operator !=	src/sim/eventq.hh	/^operator!=(const Event &l, const Event &r)$/;"	f
operator ()	src/arch/arm/types.hh	/^        size_t operator()(const ArmISA::ExtMachInst &emi) const {$/;"	f	struct:hash
operator ()	src/arch/power/types.hh	/^    size_t operator()(const PowerISA::ExtMachInst &emi) const {$/;"	f	struct:hash
operator ()	src/arch/sparc/pagetable.hh	/^    uint64_t operator()() const { assert(populated); return entry4u; }$/;"	f	class:SparcISA::PageTableEntry
operator ()	src/arch/x86/types.hh	/^        size_t operator()(const X86ISA::ExtMachInst &emi) const {$/;"	f	struct:hash
operator ()	src/base/stats/text.cc	/^DistPrint::operator()(ostream &stream) const$/;"	f	class:Stats::DistPrint
operator ()	src/base/stats/text.cc	/^ScalarPrint::operator()(ostream &stream, bool oneLine) const$/;"	f	class:Stats::ScalarPrint
operator ()	src/base/stats/text.cc	/^SparseHistPrint::operator()(ostream &stream) const$/;"	f	class:Stats::SparseHistPrint
operator ()	src/base/stats/text.cc	/^VectorPrint::operator()(std::ostream &stream) const$/;"	f	class:Stats::VectorPrint
operator ()	src/base/stl_helpers.hh	/^    operator()(const T &elem)$/;"	f	class:m5::stl_helpers::ContainerPrint
operator ()	src/base/str.hh	/^  unsigned operator()(const std::string &s) {$/;"	f	class:Hash
operator ()	src/base/trace.hh	/^    const std::string &operator()() const { return str; }$/;"	f	struct:StringWrap
operator ()	src/cpu/inorder/pipeline_traits.5stage.hh	/^        bool operator()(const ScheduleEntry* lhs, const ScheduleEntry* rhs) const$/;"	f	struct:ThePipeline::entryCompare
operator ()	src/cpu/inorder/pipeline_traits.9stage.hh	/^        bool operator()(const ScheduleEntry* lhs, const ScheduleEntry* rhs) const$/;"	f	struct:ThePipeline::entryCompare
operator ()	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^        bool operator()(const ScheduleEntry* lhs, const ScheduleEntry* rhs) const$/;"	f	struct:ThePipeline::entryCompare
operator ()	src/cpu/o3/inst_queue.hh	/^        bool operator() (const DynInstPtr &lhs, const DynInstPtr &rhs) const$/;"	f	struct:InstructionQueue::pqCompare
operator ()	src/cpu/o3/mem_dep_unit.hh	/^    size_t operator() (const InstSeqNum &seq_num) const {$/;"	f	struct:SNHash
operator ()	src/cpu/o3/store_set.hh	/^    bool operator()(const InstSeqNum &lhs, const InstSeqNum &rhs) const$/;"	f	struct:ltseqnum
operator ()	src/cpu/ozone/back_end.hh	/^            bool operator() (const DynInstPtr &lhs, const DynInstPtr &rhs) const$/;"	f	struct:BackEnd::InstQueue::pqCompare
operator ()	src/cpu/ozone/inst_queue.hh	/^        bool operator() (const DynInstPtr &lhs, const DynInstPtr &rhs) const$/;"	f	struct:InstQueue::pqCompare
operator ()	src/cpu/ozone/lw_back_end.hh	/^        bool operator() (const DynInstPtr &lhs, const DynInstPtr &rhs) const$/;"	f	struct:LWBackEnd::pqCompare
operator ()	src/cpu/ozone/lw_lsq.hh	/^    size_t operator() (const int a) const$/;"	f	struct:OzoneLWLSQ::HashFn
operator ()	src/cpu/pc_event.hh	/^        bool operator()(Addr pc, const record_t &r) const {$/;"	f	class:PCEventQueue::MapCompare
operator ()	src/cpu/pc_event.hh	/^        bool operator()(const record_t &l, Addr pc) const {$/;"	f	class:PCEventQueue::MapCompare
operator ()	src/cpu/pc_event.hh	/^        bool operator()(const record_t &l, const record_t &r) const {$/;"	f	class:PCEventQueue::MapCompare
operator ()	src/cpu/simple/atomic.hh	/^    size_t operator()(const BasicBlockRange &bb) const {$/;"	f	struct:hash
operator ()	src/dev/copy_engine_defs.hh	/^    T operator()() { return _data; }$/;"	f	struct:CopyEngineReg::Reg
operator ()	src/dev/copy_engine_defs.hh	/^    void operator()(T d) { _data = d; }$/;"	f	struct:CopyEngineReg::Reg
operator ()	src/dev/i8254xGBe_defs.hh	/^        T operator()() { return _data; }$/;"	f	struct:iGbReg::Regs::Reg
operator ()	src/dev/i8254xGBe_defs.hh	/^        void operator()(T d) { _data = d; }$/;"	f	struct:iGbReg::Regs::Reg
operator ()	src/mem/cache/blk.hh	/^    bool operator()(BlkType &blk) {$/;"	f	class:CacheBlkIsDirtyVisitor
operator ()	src/mem/cache/blk.hh	/^    bool operator()(BlkType &blk) {$/;"	f	class:CacheBlkVisitorWrapper
operator ()	src/mem/ruby/common/Address.hh	/^    operator()(const Address &s) const$/;"	f	struct:hash
operator ()	src/mem/ruby/common/Address.hh	/^    operator()(const Address& s1, const Address& s2) const$/;"	f	struct:std::equal_to
operator ()	src/unittest/stattest.cc	/^    double operator()() { return 9.7; }$/;"	f	class:TestClass
operator *	src/base/inet.hh	/^    EthHdr &operator*() { return *(EthHdr *)p->data; }$/;"	f	class:Net::EthPtr
operator *	src/base/inet.hh	/^    Ip6Hdr &operator*() { return *get(); }$/;"	f	class:Net::Ip6Ptr
operator *	src/base/inet.hh	/^    IpHdr &operator*() { return *get(); }$/;"	f	class:Net::IpPtr
operator *	src/base/inet.hh	/^    TcpHdr &operator*() { return *get(); }$/;"	f	class:Net::TcpPtr
operator *	src/base/inet.hh	/^    UdpHdr &operator*() { return *get(); }$/;"	f	class:Net::UdpPtr
operator *	src/base/inet.hh	/^    const EthHdr &operator*() const { return *(const EthHdr *)p->data; }$/;"	f	class:Net::EthPtr
operator *	src/base/inet.hh	/^    const Ip6Hdr &operator*() const { return *get(); }$/;"	f	class:Net::Ip6Ptr
operator *	src/base/inet.hh	/^    const IpHdr &operator*() const { return *get(); }$/;"	f	class:Net::IpPtr
operator *	src/base/inet.hh	/^    const TcpHdr &operator*() const { return *get(); }$/;"	f	class:Net::TcpPtr
operator *	src/base/inet.hh	/^    const UdpHdr &operator*() const { return *get(); }$/;"	f	class:Net::UdpPtr
operator *	src/base/refcnt.hh	/^    T &operator*() const { return *data; }$/;"	f	class:RefCountingPtr
operator *	src/base/statistics.hh	/^operator*(Temp l, Temp r)$/;"	f	namespace:Stats
operator *	src/cpu/inorder/resource_sked.hh	/^    ScheduleEntry* operator*()$/;"	f	class:RSkedIt
operator *	src/cpu/timebuf.hh	/^        T &operator*() const { return *buffer->access(index); }$/;"	f	class:TimeBuffer::wire
operator *	src/sim/syscall_emul.hh	/^    T &operator*()       { return *((T *)bufPtr); }$/;"	f	class:TypedBufferArg
operator *	src/sim/vptr.hh	/^    operator*()$/;"	f	class:VPtr
operator +	src/base/mod_num.hh	/^operator+(ModNum<T, MV> l, ModNum<T, MV> r) {$/;"	f
operator +	src/base/mod_num.hh	/^operator+(ModNum<T, MV> l, T r) {$/;"	f
operator +	src/base/mod_num.hh	/^operator+(T l, ModNum<T, MV> r) {$/;"	f
operator +	src/base/statistics.hh	/^operator+(Temp l, Temp r)$/;"	f	namespace:Stats
operator +	src/base/time.hh	/^operator+(const Time &l, const Time &r)$/;"	f
operator +	src/base/types.hh	/^    const Cycles operator +(const Cycles& b) const$/;"	f	class:Cycles
operator +	src/sim/vptr.hh	/^    operator+(int offset)$/;"	f	class:VPtr
operator ++	src/base/mod_num.hh	/^    const ModNum<T, MV> operator++() {$/;"	f	class:ModNum
operator ++	src/base/mod_num.hh	/^    const ModNum<T, MV> operator++(int) {$/;"	f	class:ModNum
operator ++	src/base/statistics.hh	/^    void operator++() { data()->inc(1); }$/;"	f	class:Stats::ScalarBase
operator ++	src/base/statistics.hh	/^    void operator++() { stat.data(index)->inc(1); }$/;"	f	class:Stats::ScalarProxy
operator ++	src/base/statistics.hh	/^    void operator++(int) { ++*this; }$/;"	f	class:Stats::ScalarBase
operator ++	src/base/statistics.hh	/^    void operator++(int) { ++*this; }$/;"	f	class:Stats::ScalarProxy
operator ++	src/base/types.hh	/^    Cycles& operator++()$/;"	f	class:Cycles
operator ++	src/cpu/inorder/resource_sked.hh	/^    RSkedIt &operator++(int unused)$/;"	f	class:RSkedIt
operator ++	src/cpu/timebuf.hh	/^        wire &operator++()$/;"	f	class:TimeBuffer::wire
operator ++	src/cpu/timebuf.hh	/^        wire &operator++(int)$/;"	f	class:TimeBuffer::wire
operator ++	src/sim/arguments.hh	/^    Arguments &operator++() {$/;"	f	class:Arguments
operator ++	src/sim/arguments.hh	/^    Arguments operator++(int) {$/;"	f	class:Arguments
operator +=	src/base/mod_num.hh	/^    const ModNum<T, MV> operator+=(ModNum<T, MV> r) {$/;"	f	class:ModNum
operator +=	src/base/mod_num.hh	/^    const ModNum<T, MV> operator+=(T r) {$/;"	f	class:ModNum
operator +=	src/base/statistics.cc	/^Formula::operator+=(Temp r)$/;"	f	class:Stats::Formula
operator +=	src/base/statistics.hh	/^    operator+=(const U &v)$/;"	f	class:Stats::ScalarProxy
operator +=	src/base/statistics.hh	/^    void operator+=(const U &v) { data()->inc(v); }$/;"	f	class:Stats::ScalarBase
operator +=	src/base/time.hh	/^    operator+=(const Time &other)$/;"	f	class:Time
operator +=	src/base/types.hh	/^    const Cycles& operator+=(const Cycles& cc)$/;"	f	class:Cycles
operator +=	src/cpu/timebuf.hh	/^        const wire &operator+=(int offset)$/;"	f	class:TimeBuffer::wire
operator +=	src/sim/arguments.hh	/^    const Arguments &operator+=(int index) {$/;"	f	class:Arguments
operator +=	src/sim/vptr.hh	/^    operator+=(int offset)$/;"	f	class:VPtr
operator -	src/base/mod_num.hh	/^operator-(ModNum<T, MV> l, ModNum<T, MV> r) {$/;"	f
operator -	src/base/mod_num.hh	/^operator-(ModNum<T, MV> l, T r) {$/;"	f
operator -	src/base/mod_num.hh	/^operator-(T l, ModNum<T, MV> r) {$/;"	f
operator -	src/base/statistics.hh	/^operator-(Temp l)$/;"	f	namespace:Stats
operator -	src/base/statistics.hh	/^operator-(Temp l, Temp r)$/;"	f	namespace:Stats
operator -	src/base/time.hh	/^operator-(const Time &l, const Time &r)$/;"	f
operator -	src/base/types.hh	/^    const Cycles operator -(const Cycles& b) const$/;"	f	class:Cycles
operator --	src/base/mod_num.hh	/^    const ModNum<T, MV> operator--() {$/;"	f	class:ModNum
operator --	src/base/mod_num.hh	/^    const ModNum<T, MV> operator--(int) {$/;"	f	class:ModNum
operator --	src/base/statistics.hh	/^    void operator--() { data()->dec(1); }$/;"	f	class:Stats::ScalarBase
operator --	src/base/statistics.hh	/^    void operator--() { stat.data(index)->dec(1); }$/;"	f	class:Stats::ScalarProxy
operator --	src/base/statistics.hh	/^    void operator--(int) { --*this; }$/;"	f	class:Stats::ScalarBase
operator --	src/base/statistics.hh	/^    void operator--(int) { --*this; }$/;"	f	class:Stats::ScalarProxy
operator --	src/base/types.hh	/^    Cycles& operator--()$/;"	f	class:Cycles
operator --	src/cpu/timebuf.hh	/^        wire &operator--()$/;"	f	class:TimeBuffer::wire
operator --	src/cpu/timebuf.hh	/^        wire &operator--(int)$/;"	f	class:TimeBuffer::wire
operator --	src/sim/arguments.hh	/^    Arguments &operator--() {$/;"	f	class:Arguments
operator --	src/sim/arguments.hh	/^    Arguments operator--(int) {$/;"	f	class:Arguments
operator -=	src/base/mod_num.hh	/^    const ModNum<T, MV> operator-=(ModNum<T, MV> r) {$/;"	f	class:ModNum
operator -=	src/base/mod_num.hh	/^    const ModNum<T, MV> operator-=(T r) {$/;"	f	class:ModNum
operator -=	src/base/statistics.hh	/^    operator-=(const U &v)$/;"	f	class:Stats::ScalarProxy
operator -=	src/base/statistics.hh	/^    void operator-=(const U &v) { data()->dec(v); }$/;"	f	class:Stats::ScalarBase
operator -=	src/base/time.hh	/^    operator-=(const Time &other)$/;"	f	class:Time
operator -=	src/cpu/timebuf.hh	/^        const wire &operator-=(int offset)$/;"	f	class:TimeBuffer::wire
operator -=	src/sim/arguments.hh	/^    const Arguments &operator-=(int index) {$/;"	f	class:Arguments
operator ->	src/base/inet.hh	/^    EthHdr *operator->() { return (EthHdr *)p->data; }$/;"	f	class:Net::EthPtr
operator ->	src/base/inet.hh	/^    Ip6Hdr *operator->() { return get(); }$/;"	f	class:Net::Ip6Ptr
operator ->	src/base/inet.hh	/^    IpHdr *operator->() { return get(); }$/;"	f	class:Net::IpPtr
operator ->	src/base/inet.hh	/^    TcpHdr *operator->() { return get(); }$/;"	f	class:Net::TcpPtr
operator ->	src/base/inet.hh	/^    UdpHdr *operator->() { return get(); }$/;"	f	class:Net::UdpPtr
operator ->	src/base/inet.hh	/^    const EthHdr *operator->() const { return (const EthHdr *)p->data; }$/;"	f	class:Net::EthPtr
operator ->	src/base/inet.hh	/^    const Ip6Hdr *operator->() const { return get(); }$/;"	f	class:Net::Ip6Ptr
operator ->	src/base/inet.hh	/^    const IpHdr *operator->() const { return get(); }$/;"	f	class:Net::IpPtr
operator ->	src/base/inet.hh	/^    const TcpHdr *operator->() const { return get(); }$/;"	f	class:Net::TcpPtr
operator ->	src/base/inet.hh	/^    const UdpHdr *operator->() const { return get(); }$/;"	f	class:Net::UdpPtr
operator ->	src/base/refcnt.hh	/^    T *operator->() const { return data; }$/;"	f	class:RefCountingPtr
operator ->	src/cpu/inorder/resource_sked.hh	/^    ScheduleEntry* operator->()$/;"	f	class:RSkedIt
operator ->	src/cpu/timebuf.hh	/^        T *operator->() const { return buffer->access(index); }$/;"	f	class:TimeBuffer::wire
operator ->	src/sim/syscall_emul.hh	/^    T* operator->()      { return (T *)bufPtr; }$/;"	f	class:TypedBufferArg
operator ->	src/sim/vptr.hh	/^    operator->()$/;"	f	class:VPtr
operator /	src/base/statistics.hh	/^operator\/(Temp l, Temp r)$/;"	f	namespace:Stats
operator /=	src/base/statistics.cc	/^Formula::operator\/=(Temp r)$/;"	f	class:Stats::Formula
operator <	src/arch/sparc/pagetable.hh	/^    operator<(const TlbRange &r2) const$/;"	f	struct:SparcISA::TlbRange
operator <	src/base/addr_range.hh	/^    bool operator<(const AddrRange& r) const$/;"	f	class:AddrRange
operator <	src/base/bitunion.hh	/^        operator<(Base const & base) const$/;"	f	class:BitfieldBackend::BitUnionOperators
operator <	src/base/mod_num.hh	/^operator<(ModNum<T, MV> l, ModNum<T, MV> r) {$/;"	f
operator <	src/base/time.hh	/^operator<(const Time &l, const Time &r)$/;"	f
operator <	src/mem/ruby/common/Address.hh	/^operator<(const Address& obj1, const Address& obj2)$/;"	f
operator <	src/mem/ruby/network/simple/PerfectSwitch.cc	/^operator<(const LinkOrder& l1, const LinkOrder& l2)$/;"	f
operator <	src/sim/eventq.hh	/^operator<(const Event &l, const Event &r)$/;"	f
operator <<	src/arch/generic/types.hh	/^operator<<(std::ostream & os, const DelaySlotPCState<MachInst> &pc)$/;"	f	namespace:GenericISA
operator <<	src/arch/generic/types.hh	/^operator<<(std::ostream & os, const DelaySlotUPCState<MachInst> &pc)$/;"	f	namespace:GenericISA
operator <<	src/arch/generic/types.hh	/^operator<<(std::ostream & os, const SimplePCState<MachInst> &pc)$/;"	f	namespace:GenericISA
operator <<	src/arch/generic/types.hh	/^operator<<(std::ostream & os, const UPCState<MachInst> &pc)$/;"	f	namespace:GenericISA
operator <<	src/arch/x86/types.hh	/^        operator << (std::ostream & os, const ExtMachInst & emi)$/;"	f	namespace:X86ISA
operator <<	src/base/bigint.cc	/^ostream & operator << (ostream & os, const Twin32_t & t)$/;"	f
operator <<	src/base/bigint.cc	/^ostream & operator << (ostream & os, const Twin64_t & t)$/;"	f
operator <<	src/base/inet.cc	/^operator<<(ostream &stream, const EthAddr &ea)$/;"	f	namespace:Net
operator <<	src/base/inet.cc	/^operator<<(ostream &stream, const IpAddress &ia)$/;"	f	namespace:Net
operator <<	src/base/inet.cc	/^operator<<(ostream &stream, const IpNetmask &in)$/;"	f	namespace:Net
operator <<	src/base/inet.cc	/^operator<<(ostream &stream, const IpWithPort &iwp)$/;"	f	namespace:Net
operator <<	src/base/stl_helpers.hh	/^operator<<(std::ostream& out, const C<T,A> &vec)$/;"	f	namespace:m5::stl_helpers
operator <<	src/base/time.hh	/^operator<<(std::ostream &out, const Time &time)$/;"	f
operator <<	src/base/types.cc	/^operator<<(std::ostream &out, const Cycles & cycles)$/;"	f
operator <<	src/base/types.hh	/^    const Cycles operator <<(const int32_t shift)$/;"	f	class:Cycles
operator <<	src/cpu/testers/rubytest/Check.hh	/^operator<<(std::ostream& out, const Check& obj)$/;"	f
operator <<	src/cpu/testers/rubytest/CheckTable.hh	/^operator<<(std::ostream& out, const CheckTable& obj)$/;"	f
operator <<	src/cpu/testers/rubytest/RubyTester.hh	/^operator<<(std::ostream& out, const RubyTester& obj)$/;"	f
operator <<	src/mem/ruby/buffers/MessageBuffer.hh	/^operator<<(std::ostream& out, const MessageBuffer& obj)$/;"	f
operator <<	src/mem/ruby/buffers/MessageBufferNode.hh	/^operator<<(std::ostream& out, const MessageBufferNode& obj)$/;"	f
operator <<	src/mem/ruby/common/Address.hh	/^operator<<(std::ostream& out, const Address& obj)$/;"	f
operator <<	src/mem/ruby/common/Consumer.hh	/^operator<<(std::ostream& out, const Consumer& obj)$/;"	f
operator <<	src/mem/ruby/common/DataBlock.hh	/^operator<<(std::ostream& out, const DataBlock& obj)$/;"	f
operator <<	src/mem/ruby/common/Histogram.hh	/^operator<<(std::ostream& out, const Histogram& obj)$/;"	f
operator <<	src/mem/ruby/common/NetDest.hh	/^operator<<(std::ostream& out, const NetDest& obj)$/;"	f
operator <<	src/mem/ruby/common/Set.hh	/^operator<<(std::ostream& out, const Set& obj)$/;"	f
operator <<	src/mem/ruby/common/SubBlock.hh	/^operator<<(std::ostream& out, const SubBlock& obj)$/;"	f
operator <<	src/mem/ruby/filters/GenericBloomFilter.hh	/^operator<<(std::ostream& out, const GenericBloomFilter& obj)$/;"	f
operator <<	src/mem/ruby/network/BasicLink.hh	/^operator<<(std::ostream& out, const BasicLink& obj)$/;"	f
operator <<	src/mem/ruby/network/BasicRouter.hh	/^operator<<(std::ostream& out, const BasicRouter& obj)$/;"	f
operator <<	src/mem/ruby/network/Network.hh	/^operator<<(std::ostream& out, const Network& obj)$/;"	f
operator <<	src/mem/ruby/network/Topology.hh	/^operator<<(std::ostream& out, const Topology& obj)$/;"	f
operator <<	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.hh	/^operator<<(std::ostream& out, const GarnetExtLink_d& obj)$/;"	f
operator <<	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.hh	/^operator<<(std::ostream& out, const GarnetIntLink_d& obj)$/;"	f
operator <<	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.hh	/^operator<<(std::ostream& out, const GarnetNetwork_d& obj)$/;"	f
operator <<	src/mem/ruby/network/garnet/fixed-pipeline/flitBuffer_d.hh	/^operator<<(std::ostream& out, const flitBuffer_d& obj)$/;"	f
operator <<	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.hh	/^operator<<(std::ostream& out, const flit_d& obj)$/;"	f
operator <<	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.hh	/^operator<<(std::ostream& out, const GarnetExtLink& obj)$/;"	f
operator <<	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.hh	/^operator<<(std::ostream& out, const GarnetIntLink& obj)$/;"	f
operator <<	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.hh	/^operator<<(std::ostream& out, const GarnetNetwork& obj)$/;"	f
operator <<	src/mem/ruby/network/garnet/flexible-pipeline/flit.hh	/^operator<<(std::ostream& out, const flit& obj)$/;"	f
operator <<	src/mem/ruby/network/garnet/flexible-pipeline/flitBuffer.hh	/^operator<<(std::ostream& out, const flitBuffer& obj)$/;"	f
operator <<	src/mem/ruby/network/orion/ConfigFile.cc	/^std::ostream& operator<<( std::ostream& os, const ConfigFile& cf )$/;"	f
operator <<	src/mem/ruby/network/simple/PerfectSwitch.hh	/^operator<<(std::ostream& out, const PerfectSwitch& obj)$/;"	f
operator <<	src/mem/ruby/network/simple/SimpleLink.hh	/^operator<<(std::ostream& out, const SimpleExtLink& obj)$/;"	f
operator <<	src/mem/ruby/network/simple/SimpleLink.hh	/^operator<<(std::ostream& out, const SimpleIntLink& obj)$/;"	f
operator <<	src/mem/ruby/network/simple/SimpleNetwork.hh	/^operator<<(std::ostream& out, const SimpleNetwork& obj)$/;"	f
operator <<	src/mem/ruby/network/simple/Switch.hh	/^operator<<(std::ostream& out, const Switch& obj)$/;"	f
operator <<	src/mem/ruby/network/simple/Throttle.hh	/^operator<<(std::ostream& out, const Throttle& obj)$/;"	f
operator <<	src/mem/ruby/profiler/AccessTraceForAddress.hh	/^operator<<(std::ostream& out, const AccessTraceForAddress& obj)$/;"	f
operator <<	src/mem/ruby/profiler/AddressProfiler.hh	/^operator<<(std::ostream& out, const AddressProfiler& obj)$/;"	f
operator <<	src/mem/ruby/profiler/MemCntrlProfiler.hh	/^operator<<(std::ostream& out, const MemCntrlProfiler& obj)$/;"	f
operator <<	src/mem/ruby/profiler/StoreTrace.hh	/^operator<<(std::ostream& out, const StoreTrace& obj)$/;"	f
operator <<	src/mem/ruby/recorder/CacheRecorder.hh	/^operator<<(std::ostream& out, const TraceRecord& obj)$/;"	f
operator <<	src/mem/ruby/slicc_interface/AbstractCacheEntry.hh	/^operator<<(std::ostream& out, const AbstractCacheEntry& obj)$/;"	f
operator <<	src/mem/ruby/slicc_interface/AbstractEntry.hh	/^operator<<(std::ostream& out, const AbstractEntry& obj)$/;"	f
operator <<	src/mem/ruby/slicc_interface/Message.hh	/^operator<<(std::ostream& out, const Message& obj)$/;"	f
operator <<	src/mem/ruby/slicc_interface/NetworkMessage.hh	/^operator<<(std::ostream& out, const NetworkMessage& obj)$/;"	f
operator <<	src/mem/ruby/slicc_interface/RubyRequest.hh	/^operator<<(std::ostream& out, const RubyRequest& obj)$/;"	f
operator <<	src/mem/ruby/system/CacheMemory.cc	/^operator<<(ostream& out, const CacheMemory& obj)$/;"	f
operator <<	src/mem/ruby/system/DirectoryMemory.hh	/^operator<<(std::ostream& out, const DirectoryMemory& obj)$/;"	f
operator <<	src/mem/ruby/system/MachineID.hh	/^operator<<(std::ostream& out, const MachineID& obj)$/;"	f
operator <<	src/mem/ruby/system/MemoryNode.hh	/^operator<<(std::ostream& out, const MemoryNode& obj)$/;"	f
operator <<	src/mem/ruby/system/PerfectCacheMemory.hh	/^operator<<(std::ostream& out, const PerfectCacheLineState<ENTRY>& obj)$/;"	f
operator <<	src/mem/ruby/system/PerfectCacheMemory.hh	/^operator<<(std::ostream& out, const PerfectCacheMemory<ENTRY>& obj)$/;"	f
operator <<	src/mem/ruby/system/PersistentTable.hh	/^operator<<(std::ostream& out, const PersistentTable& obj)$/;"	f
operator <<	src/mem/ruby/system/PersistentTable.hh	/^operator<<(std::ostream& out, const PersistentTableEntry& obj)$/;"	f
operator <<	src/mem/ruby/system/RubyMemoryControl.cc	/^operator<<(ostream& out, const RubyMemoryControl& obj)$/;"	f
operator <<	src/mem/ruby/system/Sequencer.cc	/^operator<<(ostream &out, const m5::hash_map<KEY, VALUE> &map)$/;"	f
operator <<	src/mem/ruby/system/Sequencer.hh	/^operator<<(std::ostream& out, const Sequencer& obj)$/;"	f
operator <<	src/mem/ruby/system/TBETable.hh	/^operator<<(std::ostream& out, const TBETable<ENTRY>& obj)$/;"	f
operator <<	src/mem/ruby/system/TimerTable.hh	/^operator<<(std::ostream& out, const TimerTable& obj)$/;"	f
operator <<	src/mem/ruby/system/WireBuffer.cc	/^operator<<(ostream& out, const WireBuffer& obj)$/;"	f
operator <=	src/base/mod_num.hh	/^operator<=(ModNum<T, MV> l, ModNum<T, MV> r) {$/;"	f
operator <=	src/base/time.hh	/^operator<=(const Time &l, const Time &r)$/;"	f
operator <=	src/sim/eventq.hh	/^operator<=(const Event &l, const Event &r)$/;"	f
operator =	src/arch/alpha/pagetable.hh	/^    const PageTableEntry &operator=(const PageTableEntry &e)$/;"	f	struct:AlphaISA::PageTableEntry
operator =	src/arch/alpha/pagetable.hh	/^    const PageTableEntry &operator=(uint64_t e) { entry = e; return *this; }$/;"	f	struct:AlphaISA::PageTableEntry
operator =	src/arch/alpha/pagetable.hh	/^    const VAddr &operator=(Addr a) { addr = a; return *this; }$/;"	f	struct:AlphaISA::VAddr
operator =	src/arch/power/pagetable.hh	/^    &operator=(Addr a)$/;"	f	struct:PowerISA::VAddr
operator =	src/arch/sparc/pagetable.hh	/^    operator=(const PageTableEntry &e)$/;"	f	class:SparcISA::PageTableEntry
operator =	src/arch/sparc/pagetable.hh	/^    operator=(uint64_t e) $/;"	f	class:SparcISA::TteTag
operator =	src/arch/sparc/pagetable.hh	/^    operator=(uint64_t e)$/;"	f	class:SparcISA::PageTableEntry
operator =	src/base/bigint.hh	/^    inline m5_twin32_t& operator=(const uint32_t x)$/;"	f	struct:m5_twin32_t
operator =	src/base/bigint.hh	/^    inline m5_twin64_t& operator=(const uint64_t x)$/;"	f	struct:m5_twin64_t
operator =	src/base/bitunion.hh	/^            int64_t operator=(const int64_t _data)$/;"	f	class:BitfieldBackend::SignedBitfieldTypes::SignedBitfieldWO
operator =	src/base/bitunion.hh	/^            operator=(const int64_t _data)$/;"	f	class:BitfieldBackend::SignedBitfieldTypes::SignedBitfield
operator =	src/base/bitunion.hh	/^            operator=(const uint64_t _data)$/;"	f	class:BitfieldBackend::RegularBitfieldTypes::Bitfield
operator =	src/base/bitunion.hh	/^        operator=(Type const & _data)$/;"	f	class:BitfieldBackend::BitUnionOperators
operator =	src/base/flags.hh	/^    operator=(T flags)$/;"	f	class:Flags
operator =	src/base/flags.hh	/^    operator=(const Flags<U> &flags)$/;"	f	class:Flags
operator =	src/base/inet.cc	/^EthAddr::operator=(const eth_addr &ea)$/;"	f	class:Net::EthAddr
operator =	src/base/inet.cc	/^EthAddr::operator=(const std::string &addr)$/;"	f	class:Net::EthAddr
operator =	src/base/inet.hh	/^    const EthPtr &operator=(const EthPacketPtr &ptr) { p = ptr; return *this; }$/;"	f	class:Net::EthPtr
operator =	src/base/inet.hh	/^    const Ip6Ptr &operator=(const EthPacketPtr &ptr)$/;"	f	class:Net::Ip6Ptr
operator =	src/base/inet.hh	/^    const Ip6Ptr &operator=(const EthPtr &ptr)$/;"	f	class:Net::Ip6Ptr
operator =	src/base/inet.hh	/^    const Ip6Ptr &operator=(const Ip6Ptr &ptr)$/;"	f	class:Net::Ip6Ptr
operator =	src/base/inet.hh	/^    const IpPtr &operator=(const EthPacketPtr &ptr) { set(ptr); return *this; }$/;"	f	class:Net::IpPtr
operator =	src/base/inet.hh	/^    const IpPtr &operator=(const EthPtr &ptr) { set(ptr.p); return *this; }$/;"	f	class:Net::IpPtr
operator =	src/base/inet.hh	/^    const IpPtr &operator=(const IpPtr &ptr) { p = ptr.p; return *this; }$/;"	f	class:Net::IpPtr
operator =	src/base/inet.hh	/^    const TcpPtr &operator=(const IpPtr &i)$/;"	f	class:Net::TcpPtr
operator =	src/base/inet.hh	/^    const TcpPtr &operator=(const TcpPtr &t)$/;"	f	class:Net::TcpPtr
operator =	src/base/inet.hh	/^    const UdpPtr &operator=(const IpPtr &i) { set(i); return *this; }$/;"	f	class:Net::UdpPtr
operator =	src/base/inet.hh	/^    const UdpPtr &operator=(const UdpPtr &t)$/;"	f	class:Net::UdpPtr
operator =	src/base/mod_num.hh	/^    ModNum operator=(T n) {$/;"	f	class:ModNum
operator =	src/base/mod_num.hh	/^    const ModNum operator=(ModNum n) {$/;"	f	class:ModNum
operator =	src/base/refcnt.hh	/^    const RefCountingPtr &operator=(T *p) { set(p); return *this; }$/;"	f	class:RefCountingPtr
operator =	src/base/refcnt.hh	/^    const RefCountingPtr &operator=(const RefCountingPtr &r)$/;"	f	class:RefCountingPtr
operator =	src/base/statistics.cc	/^Formula::operator=(Temp r)$/;"	f	class:Stats::Formula
operator =	src/base/statistics.hh	/^    operator=(const DistProxy &sp)$/;"	f	class:Stats::DistProxy
operator =	src/base/statistics.hh	/^    operator=(const ScalarProxy &sp)$/;"	f	class:Stats::ScalarProxy
operator =	src/base/statistics.hh	/^    operator=(const U &v)$/;"	f	class:Stats::ScalarProxy
operator =	src/base/statistics.hh	/^    operator=(const VectorProxy &sp)$/;"	f	class:Stats::VectorProxy
operator =	src/base/statistics.hh	/^    void operator=(const DataWrap &) {}$/;"	f	class:Stats::DataWrap
operator =	src/base/statistics.hh	/^    void operator=(const DataWrapVec &)$/;"	f	class:Stats::DataWrapVec
operator =	src/base/statistics.hh	/^    void operator=(const U &v) { data()->set(v); }$/;"	f	class:Stats::ScalarBase
operator =	src/base/time.hh	/^    operator=(const Time &other)$/;"	f	class:Time
operator =	src/base/time.hh	/^    operator=(const timespec &ts)$/;"	f	class:Time
operator =	src/base/time.hh	/^    operator=(const timeval &tv)$/;"	f	class:Time
operator =	src/base/time.hh	/^    operator=(double new_time)$/;"	f	class:Time
operator =	src/cpu/inorder/resource_sked.hh	/^    RSkedIt operator=(ResourceSked::SkedIt const &rhs)$/;"	f	class:RSkedIt
operator =	src/cpu/timebuf.hh	/^        const wire &operator=(const wire &i)$/;"	f	class:TimeBuffer::wire
operator =	src/cpu/timebuf.hh	/^        const wire &operator=(int idx)$/;"	f	class:TimeBuffer::wire
operator =	src/dev/copy_engine_defs.hh	/^    const Reg<T> &operator=(T d) { _data = d; return *this;}$/;"	f	struct:CopyEngineReg::Reg
operator =	src/dev/i8254xGBe_defs.hh	/^        const Reg<T> &operator=(T d) { _data = d; return *this;}$/;"	f	struct:iGbReg::Regs::Reg
operator =	src/mem/cache/blk.hh	/^    const CacheBlk& operator=(const CacheBlk& rhs)$/;"	f	class:CacheBlk
operator =	src/mem/ruby/common/Address.cc	/^Address::operator=(const Address& obj)$/;"	f	class:Address
operator =	src/mem/ruby/common/DataBlock.cc	/^DataBlock::operator=(const DataBlock & obj)$/;"	f	class:DataBlock
operator =	src/mem/ruby/common/Set.cc	/^Set::operator=(const Set& obj)$/;"	f	class:Set
operator =	src/sim/arguments.hh	/^    const Arguments &operator=(const Arguments &args) {$/;"	f	class:Arguments
operator =	src/sim/syscallreturn.hh	/^    SyscallReturn& operator=(const SyscallReturn& s)$/;"	f	class:SyscallReturn
operator =	src/sim/vptr.hh	/^    operator=(Addr p)$/;"	f	class:VPtr
operator =	src/sim/vptr.hh	/^    operator=(const VPtr<U> &vp)$/;"	f	class:VPtr
operator ==	src/arch/arm/types.hh	/^        operator == (const PCState &opc) const$/;"	f	class:ArmISA::PCState
operator ==	src/arch/generic/types.hh	/^    operator == (const DelaySlotPCState<MachInst> &opc) const$/;"	f	class:GenericISA::DelaySlotPCState
operator ==	src/arch/generic/types.hh	/^    operator == (const DelaySlotUPCState<MachInst> &opc) const$/;"	f	class:GenericISA::DelaySlotUPCState
operator ==	src/arch/generic/types.hh	/^    operator == (const PCStateBase &opc) const$/;"	f	class:GenericISA::PCStateBase
operator ==	src/arch/generic/types.hh	/^    operator == (const UPCState<MachInst> &opc) const$/;"	f	class:GenericISA::UPCState
operator ==	src/arch/sparc/pagetable.hh	/^    operator==(const TlbRange &r2) const$/;"	f	struct:SparcISA::TlbRange
operator ==	src/arch/x86/types.hh	/^        operator == (const ExtMachInst &emi1, const ExtMachInst &emi2)$/;"	f	namespace:X86ISA
operator ==	src/base/bitunion.hh	/^        operator==(Base const & base) const$/;"	f	class:BitfieldBackend::BitUnionOperators
operator ==	src/base/inet.cc	/^operator==(const EthAddr &left, const EthAddr &right)$/;"	f	namespace:Net
operator ==	src/base/inet.cc	/^operator==(const IpAddress &left, const IpAddress &right)$/;"	f	namespace:Net
operator ==	src/base/inet.cc	/^operator==(const IpNetmask &left, const IpNetmask &right)$/;"	f	namespace:Net
operator ==	src/base/inet.cc	/^operator==(const IpWithPort &left, const IpWithPort &right)$/;"	f	namespace:Net
operator ==	src/base/mod_num.hh	/^operator==(ModNum<T, MV> l, ModNum<T, MV> r) {$/;"	f
operator ==	src/base/refcnt.hh	/^inline bool operator==(const RefCountingPtr<T> &l, const RefCountingPtr<T> &r)$/;"	f
operator ==	src/base/refcnt.hh	/^inline bool operator==(const RefCountingPtr<T> &l, const T *r)$/;"	f
operator ==	src/base/refcnt.hh	/^inline bool operator==(const T *l, const RefCountingPtr<T> &r)$/;"	f
operator ==	src/base/time.hh	/^operator==(const Time &l, const Time &r)$/;"	f
operator ==	src/cpu/inorder/resource_sked.hh	/^    bool operator==(RSkedIt const &rhs)$/;"	f	class:RSkedIt
operator ==	src/cpu/pred/bpred_unit.hh	/^        bool operator==(const PredictorHistory &entry) const {$/;"	f	struct:BPredUnit::PredictorHistory
operator ==	src/dev/copy_engine_defs.hh	/^    bool operator==(T d) { return d == _data; }$/;"	f	struct:CopyEngineReg::Reg
operator ==	src/dev/i8254xGBe_defs.hh	/^        bool operator==(T d) { return d == _data; }$/;"	f	struct:iGbReg::Regs::Reg
operator ==	src/mem/packet.hh	/^    bool operator==(MemCmd c2) const { return (cmd == c2.cmd); }$/;"	f	class:MemCmd
operator ==	src/mem/ruby/common/Address.hh	/^operator==(const Address& obj1, const Address& obj2)$/;"	f
operator ==	src/mem/ruby/common/DataBlock.hh	/^operator==(const DataBlock& obj1,const DataBlock& obj2)$/;"	f
operator ==	src/mem/ruby/system/MachineID.hh	/^operator==(const MachineID & obj1, const MachineID & obj2)$/;"	f
operator ==	src/sim/eventq.hh	/^operator==(const Event &l, const Event &r)$/;"	f
operator >	src/base/mod_num.hh	/^operator>(ModNum<T, MV> l, ModNum<T, MV> r) {$/;"	f
operator >	src/base/time.hh	/^operator>(const Time &l, const Time &r)$/;"	f
operator >	src/base/types.hh	/^    bool operator>(const Cycles& cc) const$/;"	f	class:Cycles
operator >	src/mem/ruby/buffers/MessageBufferNode.hh	/^operator>(const MessageBufferNode& n1, const MessageBufferNode& n2)$/;"	f
operator >	src/sim/eventq.hh	/^operator>(const Event &l, const Event &r)$/;"	f
operator >=	src/base/mod_num.hh	/^operator>=(ModNum<T, MV> l, ModNum<T, MV> r) {$/;"	f
operator >=	src/base/time.hh	/^operator>=(const Time &l, const Time &r)$/;"	f
operator >=	src/sim/eventq.hh	/^operator>=(const Event &l, const Event &r)$/;"	f
operator >>	src/base/types.hh	/^    const Cycles operator >>(const int32_t shift)$/;"	f	class:Cycles
operator >>	src/mem/ruby/network/orion/ConfigFile.cc	/^std::istream& operator>>( std::istream& is, ConfigFile& cf )$/;"	f
operator Addr	src/arch/alpha/pagetable.hh	/^    operator Addr() const { return addr; }$/;"	f	struct:AlphaISA::VAddr
operator Addr	src/arch/power/pagetable.hh	/^    operator Addr() const$/;"	f	struct:PowerISA::VAddr
operator EthHdr *	src/base/inet.hh	/^    operator EthHdr *() { return (EthHdr *)p->data; }$/;"	f	class:Net::EthPtr
operator NodePtr&	src/base/statistics.hh	/^    operator NodePtr&() { return node; }$/;"	f	class:Stats::Temp
operator T	src/base/mod_num.hh	/^    operator T() const { return value; }$/;"	f	class:ModNum
operator T	src/sim/arguments.hh	/^    operator T() {$/;"	f	class:Arguments
operator T *	src/sim/arguments.hh	/^    operator T *() {$/;"	f	class:Arguments
operator T *	src/sim/vptr.hh	/^    operator T *()$/;"	f	class:VPtr
operator T*	src/sim/syscall_emul.hh	/^    operator T*() { return (T *)bufPtr; }$/;"	f	class:TypedBufferArg
operator []	src/base/statistics.hh	/^    Proxy operator[](off_type index)$/;"	f	class:Stats::VectorDistBase
operator []	src/base/statistics.hh	/^    operator[](off_type index)$/;"	f	class:Stats::Vector2dBase
operator []	src/base/statistics.hh	/^    operator[](off_type index)$/;"	f	class:Stats::VectorBase
operator []	src/base/statistics.hh	/^    operator[](off_type index)$/;"	f	class:Stats::VectorProxy
operator []	src/cpu/ozone/rename_table.hh	/^    DynInstPtr &operator [] (int index)$/;"	f	class:RenameTable
operator []	src/cpu/timebuf.hh	/^    T &operator[](int idx)$/;"	f	class:TimeBuffer
operator []	src/mem/ruby/filters/H3BloomFilter.hh	/^    operator[](const int index) const$/;"	f	class:H3BloomFilter
operator []	src/mem/ruby/filters/MultiBitSelBloomFilter.hh	/^    operator[](const int index) const$/;"	f	class:MultiBitSelBloomFilter
operator []	src/mem/ruby/filters/NonCountingBloomFilter.hh	/^    operator[](const int index) const$/;"	f	class:NonCountingBloomFilter
operator []	src/sim/arguments.hh	/^    Arguments operator[](int index) {$/;"	f	class:Arguments
operator []	src/sim/syscall_emul.hh	/^    T &operator[](int i) { return ((T *)bufPtr)[i]; }$/;"	f	class:TypedBufferArg
operator bool	src/base/debug.hh	/^    operator bool() const { return _status; }$/;"	f	class:Debug::SimpleFlag
operator bool	src/base/inet.hh	/^    operator bool() const { return p; }$/;"	f	class:Net::EthPtr
operator bool	src/base/inet.hh	/^    operator bool() const { return p; }$/;"	f	class:Net::Ip6Ptr
operator bool	src/base/inet.hh	/^    operator bool() const { return p; }$/;"	f	class:Net::IpPtr
operator bool	src/base/inet.hh	/^    operator bool() const { return p; }$/;"	f	class:Net::TcpPtr
operator bool	src/base/inet.hh	/^    operator bool() const { return p; }$/;"	f	class:Net::UdpPtr
operator bool	src/base/refcnt.hh	/^    operator bool() const { return data != 0; }$/;"	f	class:RefCountingPtr
operator char *	src/sim/arguments.hh	/^    operator char *() {$/;"	f	class:Arguments
operator const EthHdr *	src/base/inet.hh	/^    operator const EthHdr *() const { return (const EthHdr *)p->data; }$/;"	f	class:Net::EthPtr
operator const Type	src/base/bitunion.hh	/^        operator const Type () const$/;"	f	class:BitfieldBackend::BitUnionOperators
operator const Type	src/base/flags.hh	/^    operator const Type() const { return _flags; }$/;"	f	class:Flags
operator const int64_t	src/base/bitunion.hh	/^            operator const int64_t () const$/;"	f	class:BitfieldBackend::SignedBitfieldTypes::SignedBitfield
operator const uint64_t	src/base/bitunion.hh	/^            operator const uint64_t () const$/;"	f	class:BitfieldBackend::RegularBitfieldTypes::Bitfield
operator double	src/base/time.hh	/^    operator double() const$/;"	f	class:Time
operator timespec	src/base/time.hh	/^    operator timespec() const { return _time; }$/;"	f	class:Time
operator timeval	src/base/time.hh	/^    operator timeval() const$/;"	f	class:Time
operator uint32_t	src/base/bigint.hh	/^    operator uint32_t()$/;"	f	struct:m5_twin32_t
operator uint64_t	src/arch/alpha/pagetable.hh	/^    operator uint64_t() const { return entry; }$/;"	f	struct:AlphaISA::PageTableEntry
operator uint64_t	src/base/bigint.hh	/^    operator uint64_t()$/;"	f	struct:m5_twin64_t
operator uint64_t	src/base/inet.hh	/^    operator uint64_t() const$/;"	f	struct:Net::EthAddr
operator uint64_t	src/base/types.hh	/^    operator uint64_t() const { return c; }$/;"	f	class:Cycles
ops	src/base/cp_annotate.hh	/^    enum ops {$/;"	g	class:CPA
opsCommitted	src/cpu/o3/commit.hh	/^    Stats::Vector opsCommitted;$/;"	m	class:DefaultCommit
optNil	src/base/loader/coff_sym.h	/^#define optNil /;"	d
optParamIn	src/sim/serialize.cc	/^optParamIn(Checkpoint *cp, const string &section, const string &name, T &param)$/;"	f
option	src/python/m5/util/jobfile.py	/^    def option(self, name, desc, **kwargs):$/;"	m	class:Group
optiondict	src/python/m5/util/__init__.py	/^from attrdict import attrdict, multiattrdict, optiondict$/;"	i
optiondict	src/python/m5/util/attrdict.py	/^class optiondict(attrdict):$/;"	c
optiondict	src/python/m5/util/jobfile.py	/^    def optiondict(self):$/;"	m	class:Data
options	src/base/inet.cc	/^IpHdr::options(vector<const IpOpt *> &vec) const$/;"	f	class:Net::IpHdr
options	src/base/inet.cc	/^TcpHdr::options(vector<const TcpOpt *> &vec) const$/;"	f	class:Net::TcpHdr
options	src/python/m5/simulate.py	/^    from m5 import options$/;"	i
options	src/python/m5/util/jobfile.py	/^    def options(self):$/;"	m	class:Group
options	src/python/m5/util/jobfile.py	/^    def options(self, groups=None, checkpoint=False):$/;"	m	class:Configuration
optparse	src/mem/slicc/main.py	/^    import optparse$/;"	i
optparse	src/python/m5/options.py	/^import optparse$/;"	i
or0	src/arch/arm/miscregs.hh	/^       Bitfield<17,16> or0;$/;"	m	namespace:ArmISA
or1	src/arch/arm/miscregs.hh	/^       Bitfield<19,18> or1;$/;"	m	namespace:ArmISA
or2	src/arch/arm/miscregs.hh	/^       Bitfield<21,20> or2;$/;"	m	namespace:ArmISA
or3	src/arch/arm/miscregs.hh	/^       Bitfield<23,22> or3;$/;"	m	namespace:ArmISA
or4	src/arch/arm/miscregs.hh	/^       Bitfield<25,24> or4;$/;"	m	namespace:ArmISA
or5	src/arch/arm/miscregs.hh	/^       Bitfield<27,26> or5;$/;"	m	namespace:ArmISA
or6	src/arch/arm/miscregs.hh	/^       Bitfield<29,28> or6;$/;"	m	namespace:ArmISA
or7	src/arch/arm/miscregs.hh	/^       Bitfield<31,30> or7;$/;"	m	namespace:ArmISA
order	src/mem/cache/base.hh	/^    uint64_t order;$/;"	m	class:BaseCache
order	src/mem/cache/mshr.hh	/^        Counter order;  \/\/!< Global order (for memory consistency mgmt)$/;"	m	class:MSHR::Target
order	src/mem/cache/mshr.hh	/^    Counter order;$/;"	m	class:MSHR
orderdict	src/mem/slicc/symbols/StateMachine.py	/^from m5.util import orderdict$/;"	i
orderdict	src/mem/slicc/symbols/Type.py	/^from m5.util import orderdict$/;"	i
orderdict	src/python/m5/util/__init__.py	/^from orderdict import orderdict$/;"	i
orderdict	src/python/m5/util/orderdict.py	/^class orderdict(dict, DictMixin):$/;"	c
orgn0	src/arch/arm/miscregs.hh	/^        Bitfield<11, 10> orgn0;$/;"	m	namespace:ArmISA
orgn1	src/arch/arm/miscregs.hh	/^        Bitfield<27, 26> orgn1;$/;"	m	namespace:ArmISA
origAddr	src/mem/addr_mapper.hh	/^        Addr origAddr;$/;"	m	class:AddrMapper::AddrMapperSenderState
origCmd	src/mem/packet.hh	/^    MemCmd origCmd;$/;"	m	class:Packet
origPC	src/arch/x86/decoder.hh	/^    Addr origPC;$/;"	m	class:X86ISA::Decoder
origSrc	src/mem/bridge.hh	/^        const PortID origSrc;$/;"	m	class:Bridge::RequestState
orig_data	src/base/cp_annotate.hh	/^        uint32_t orig_data;$/;"	m	struct:CPA::AnnotateData
originalRanges	src/mem/addr_mapper.hh	/^    std::vector<AddrRange> originalRanges;$/;"	m	class:RangeAddrMapper
original_ranges	src/mem/AddrMapper.py	/^    original_ranges = VectorParam.AddrRange($/;"	v	class:RangeAddrMapper
os	src/arch/isa_parser.py	/^import os$/;"	i
os	src/arch/micro_asm.py	/^import os$/;"	i
os	src/arch/x86/regs/misc.hh	/^        Bitfield<17> os; \/\/ Operating-system mode$/;"	m	namespace:X86ISA
os	src/mem/packet.hh	/^        std::ostream &os;$/;"	m	class:Packet::PrintReqState
os	src/mem/slicc/main.py	/^import os$/;"	i
os	src/mem/slicc/parser.py	/^import os.path$/;"	i
os	src/mem/slicc/util.py	/^import os$/;"	i
os	src/python/importer.py	/^        import os$/;"	i
os	src/python/m5/config.py	/^import os$/;"	i
os	src/python/m5/main.py	/^import os$/;"	i
os	src/python/m5/simulate.py	/^import os$/;"	i
os	src/python/m5/util/__init__.py	/^import os$/;"	i
os	src/python/m5/util/code_formatter.py	/^import os$/;"	i
os	src/python/m5/util/dot_writer.py	/^import m5, os, re$/;"	i
os	src/python/m5/util/grammar.py	/^import os$/;"	i
os	src/unittest/genini.py	/^import getopt, os, os.path, sys$/;"	i
osbin	src/base/cp_annotate.hh	/^    std::ostream *osbin;$/;"	m	class:CPA
osf_getsysinfoFunc	src/arch/alpha/linux/process.cc	/^osf_getsysinfoFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	file:
osf_setsysinfoFunc	src/arch/alpha/linux/process.cc	/^osf_setsysinfoFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	file:
osfxsr	src/arch/x86/regs/misc.hh	/^        Bitfield<9> osfxsr; \/\/ Operating System FXSave\/FSRSTOR Support$/;"	m	namespace:X86ISA
osxmmexcpt	src/arch/x86/regs/misc.hh	/^        Bitfield<10> osxmmexcpt; \/\/ Operating System Unmasked$/;"	m	namespace:X86ISA
ot	src/base/loader/coff_sym.h	/^    unsigned ot: 8;             \/* optimization type *\/$/;"	m	struct:__anon45
otherInfo	src/arch/x86/regs/misc.hh	/^        Bitfield<56,32> otherInfo;$/;"	m	namespace:X86ISA
otherwin	src/cpu/m5legion_interface.h	/^    uint8_t otherwin;$/;"	m	struct:__anon55
out	src/base/stl_helpers.hh	/^    std::ostream &out;$/;"	m	class:m5::stl_helpers::ContainerPrint
out	src/dev/terminal.cc	/^Terminal::out(char c)$/;"	f	class:Terminal
outBuffer	src/dev/x86/i8042.hh	/^    std::queue<uint8_t> outBuffer;$/;"	m	class:X86ISA::PS2Device
outNetLink	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.hh	/^    NetworkLink_d *outNetLink;$/;"	m	class:NetworkInterface_d
outNetLink	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.hh	/^    NetworkLink *outNetLink;$/;"	m	class:NetworkInterface
outNode_ptr	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.hh	/^    std::vector<MessageBuffer *> outNode_ptr;$/;"	m	class:NetworkInterface_d
outNode_ptr	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.hh	/^    std::vector<MessageBuffer *> outNode_ptr;$/;"	m	class:NetworkInterface
outOfBytes	src/arch/arm/decoder.hh	/^    bool outOfBytes;$/;"	m	class:ArmISA::Decoder
outOfBytes	src/arch/x86/decoder.hh	/^    bool outOfBytes;$/;"	m	class:X86ISA::Decoder
outSrcQueue	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.hh	/^    flitBuffer_d *outSrcQueue; \/\/ For modelling link contention$/;"	m	class:NetworkInterface_d
outSrcQueue	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.hh	/^    flitBuffer *outSrcQueue; \/\/ For modelling link contention$/;"	m	class:NetworkInterface
outerAttrs	src/arch/arm/pagetable.hh	/^    uint8_t outerAttrs;$/;"	m	struct:ArmISA::TlbEntry
outerShareable	src/arch/arm/pagetable.hh	/^    bool outerShareable;$/;"	m	struct:ArmISA::TlbEntry
outfile	src/dev/terminal.hh	/^    std::ostream *outfile;$/;"	m	class:Terminal
output	src/base/trace.cc	/^output()$/;"	f	namespace:Trace
output	src/dev/Terminal.py	/^    output = Param.Bool(True, "Enable output dump to file")$/;"	v	class:Terminal
output	src/dev/x86/I8259.py	/^    output = Param.X86IntSourcePin(X86IntSourcePin(),$/;"	v	class:I8259
output	src/dev/x86/i8259.hh	/^    IntSourcePin *output;$/;"	m	class:X86ISA::I8259
output	src/mem/ruby/common/Address.cc	/^Address::output(std::ostream& out) const$/;"	f	class:Address
output	src/python/m5/trace.py	/^from internal.trace import output, ignore$/;"	i
output	src/sim/Process.py	/^    output = Param.String('cout', 'filename for stdout')$/;"	v	class:Process
outputChar	src/dev/alpha/access.h	/^    uint64_t    outputChar;             \/\/ 60: Placeholder for output$/;"	m	struct:AlphaAccess
outputChar	src/dev/mips/access.h	/^                uint32_t        outputChar;             \/\/ 20: Placeholder for output$/;"	m	struct:MipsAccess
outputFull	src/dev/x86/i8042.hh	/^        Bitfield<0> outputFull;$/;"	m	class:X86ISA::I8042
outputHigh	src/dev/intel_8254_timer.cc	/^Intel8254Timer::Counter::outputHigh()$/;"	f	class:Intel8254Timer::Counter
outputHigh	src/dev/intel_8254_timer.hh	/^    outputHigh(unsigned int num)$/;"	f	class:Intel8254Timer
outputHigh	src/dev/x86/i8254.hh	/^    outputHigh(unsigned int num)$/;"	f	class:X86ISA::I8254
outputList	src/python/m5/stats/__init__.py	/^outputList = []$/;"	v
outputMode	src/base/vnc/convert.hh	/^    Mode outputMode;$/;"	m	class:VideoConvert
output_high	src/dev/intel_8254_timer.hh	/^        bool output_high;$/;"	m	class:Intel8254Timer::Counter
outstanding	src/cpu/o3/lsq_unit.hh	/^        uint8_t outstanding;$/;"	m	class:LSQUnit::LSQSenderState
outstanding	src/cpu/simple/timing.hh	/^        int outstanding;$/;"	m	class:TimingSimpleCPU::SplitMainSenderState
outstanding	src/cpu/translation.hh	/^    int outstanding;$/;"	m	class:WholeTranslationState
outstandingAddrs	src/cpu/testers/memtest/memtest.hh	/^    std::set<unsigned> outstandingAddrs;$/;"	m	class:MemTest
outstandingCount	src/mem/ruby/system/DMASequencer.hh	/^    int outstandingCount() const { return (m_is_busy ? 1 : 0); }$/;"	f	class:DMASequencer
outstandingCount	src/mem/ruby/system/RubyPortProxy.hh	/^    int outstandingCount() const { return 0; }$/;"	f	class:RubyPortProxy
outstandingCount	src/mem/ruby/system/Sequencer.hh	/^    int outstandingCount() const { return m_outstanding_count; }$/;"	f	class:Sequencer
outstandingMisses	src/mem/cache/cache.hh	/^    bool outstandingMisses() const$/;"	f	class:Cache
outstandingReadReqs	src/mem/comm_monitor.hh	/^        unsigned int outstandingReadReqs;$/;"	m	struct:CommMonitor::MonitorStats
outstandingReads	src/mem/dramsim2.hh	/^    m5::hash_map<Addr, std::queue<PacketPtr> > outstandingReads;$/;"	m	class:DRAMSim2
outstandingReadsHist	src/mem/comm_monitor.hh	/^        Stats::Histogram outstandingReadsHist;$/;"	m	struct:CommMonitor::MonitorStats
outstandingReq	src/mem/coherent_bus.hh	/^    m5::hash_set<RequestPtr> outstandingReq;$/;"	m	class:CoherentBus
outstandingResponses	src/mem/bridge.hh	/^        unsigned int outstandingResponses;$/;"	m	class:Bridge::BridgeSlavePort
outstandingWriteReqs	src/mem/comm_monitor.hh	/^        unsigned int outstandingWriteReqs;$/;"	m	struct:CommMonitor::MonitorStats
outstandingWrites	src/mem/dramsim2.hh	/^    m5::hash_map<Addr, std::queue<PacketPtr> > outstandingWrites;$/;"	m	class:DRAMSim2
outstandingWritesHist	src/mem/comm_monitor.hh	/^        Stats::Histogram outstandingWritesHist;$/;"	m	struct:CommMonitor::MonitorStats
outstanding_bins	src/mem/CommMonitor.py	/^                                          "requests histograms")$/;"	v	class:CommMonitor
ov	src/arch/power/miscregs.hh	/^    Bitfield<30> ov;$/;"	m	namespace:PowerISA
ovadvise	src/kern/tru64/tru64_syscalls.hh	/^        ovadvise = 72,$/;"	e	enum:SystemCalls::__anon102
over	src/arch/x86/regs/misc.hh	/^        Bitfield<62> over; \/\/ Status register overflow$/;"	m	namespace:X86ISA
overallAccesses	src/mem/cache/base.hh	/^    Stats::Formula overallAccesses;$/;"	m	class:BaseCache
overallAvgMissLatency	src/mem/cache/base.hh	/^    Stats::Formula overallAvgMissLatency;$/;"	m	class:BaseCache
overallAvgMshrMissLatency	src/mem/cache/base.hh	/^    Stats::Formula overallAvgMshrMissLatency;$/;"	m	class:BaseCache
overallAvgMshrUncacheableLatency	src/mem/cache/base.hh	/^    Stats::Formula overallAvgMshrUncacheableLatency;$/;"	m	class:BaseCache
overallHits	src/mem/cache/base.hh	/^    Stats::Formula overallHits;$/;"	m	class:BaseCache
overallMissLatency	src/mem/cache/base.hh	/^    Stats::Formula overallMissLatency;$/;"	m	class:BaseCache
overallMissRate	src/mem/cache/base.hh	/^    Stats::Formula overallMissRate;$/;"	m	class:BaseCache
overallMisses	src/mem/cache/base.hh	/^    Stats::Formula overallMisses;$/;"	m	class:BaseCache
overallMshrHits	src/mem/cache/base.hh	/^    Stats::Formula overallMshrHits;$/;"	m	class:BaseCache
overallMshrMissLatency	src/mem/cache/base.hh	/^    Stats::Formula overallMshrMissLatency;$/;"	m	class:BaseCache
overallMshrMissRate	src/mem/cache/base.hh	/^    Stats::Formula overallMshrMissRate;$/;"	m	class:BaseCache
overallMshrMisses	src/mem/cache/base.hh	/^    Stats::Formula overallMshrMisses;$/;"	m	class:BaseCache
overallMshrUncacheable	src/mem/cache/base.hh	/^    Stats::Formula overallMshrUncacheable;$/;"	m	class:BaseCache
overallMshrUncacheableLatency	src/mem/cache/base.hh	/^    Stats::Formula overallMshrUncacheableLatency;$/;"	m	class:BaseCache
overflow	src/base/statistics.hh	/^    Counter overflow;$/;"	m	class:Stats::DistStor
overflow	src/base/stats/info.hh	/^    Counter overflow;$/;"	m	struct:Stats::DistData
overlapping	src/mem/cache/blk.hh	/^        bool overlapping(Request *req)$/;"	f	class:CacheBlk::Lock
overrideEc	src/arch/arm/faults.hh	/^    ExceptionClass overrideEc;$/;"	m	class:ArmISA::HypervisorTrap
overrideEc	src/arch/arm/faults.hh	/^    ExceptionClass overrideEc;$/;"	m	class:ArmISA::SecureMonitorTrap
overrideEc	src/arch/arm/faults.hh	/^    ExceptionClass overrideEc;$/;"	m	class:ArmISA::SupervisorCall
overrideEc	src/arch/arm/faults.hh	/^    ExceptionClass overrideEc;$/;"	m	class:ArmISA::SupervisorTrap
overrideEc	src/arch/arm/faults.hh	/^    ExceptionClass overrideEc;$/;"	m	class:ArmISA::UndefinedInstruction
owner	src/mem/port.hh	/^    MemObject& owner;$/;"	m	class:Port
ox	src/arch/power/miscregs.hh	/^    Bitfield<28> ox;$/;"	m	namespace:PowerISA
ozoneTC	src/cpu/ozone/cpu.hh	/^    OzoneTC ozoneTC;$/;"	m	class:OzoneCPU
p	src/arch/mips/pra_constants.hh	/^    Bitfield<0>     p;$/;"	m	namespace:MipsISA
p	src/arch/mips/pra_constants.hh	/^    Bitfield<31> p;$/;"	m	namespace:MipsISA
p	src/arch/x86/pagetable_walker.cc	/^    Bitfield<0> p;$/;"	m	namespace:X86ISA	file:
p	src/arch/x86/regs/misc.hh	/^        Bitfield<47> p; \/\/ Present$/;"	m	namespace:X86ISA
p	src/base/inet.hh	/^    EthPacketPtr p;$/;"	m	class:Net::EthPtr
p	src/base/inet.hh	/^    EthPacketPtr p;$/;"	m	class:Net::Ip6Ptr
p	src/base/inet.hh	/^    EthPacketPtr p;$/;"	m	class:Net::IpPtr
p	src/base/inet.hh	/^    EthPacketPtr p;$/;"	m	class:Net::TcpPtr
p	src/base/inet.hh	/^    EthPacketPtr p;$/;"	m	class:Net::UdpPtr
p	src/cpu/testers/traffic_gen/traffic_gen.hh	/^        double p;$/;"	m	struct:TrafficGen::Transition
pAUXU	src/base/loader/coff_sym.h	/^} AUXU, *pAUXU;$/;"	t	typeref:union:__anon44
pAddr	src/arch/arm/pagetable.hh	/^    pAddr(Addr va) const$/;"	f	struct:ArmISA::TlbEntry
pDNR	src/base/loader/coff_sym.h	/^} DNR, *pDNR;$/;"	t	typeref:struct:__anon43
pEXTR	src/base/loader/coff_sym.h	/^} EXTR, *pEXTR;$/;"	t	typeref:struct:ecoff_extsym
pFDR	src/base/loader/coff_sym.h	/^} FDR, *pFDR;$/;"	t	typeref:struct:ecoff_fdr
pFIT	src/base/loader/coff_sym.h	/^typedef coff_int FIT, *pFIT;$/;"	t
pHDRR	src/base/loader/coff_sym.h	/^} HDRR, *pHDRR;$/;"	t	typeref:struct:ecoff_symhdr
pLINER	src/base/loader/coff_sym.h	/^typedef coff_int LINER, *pLINER;$/;"	t
pOPTR	src/base/loader/coff_sym.h	/^} OPTR, *pOPTR;$/;"	t	typeref:struct:__anon45
pPDR	src/base/loader/coff_sym.h	/^} PDR, *pPDR;$/;"	t	typeref:struct:pdr
pRFDT	src/base/loader/coff_sym.h	/^typedef coff_long RFDT, *pRFDT;$/;"	t
pRNDXR	src/base/loader/coff_sym.h	/^} RNDXR, *pRNDXR;$/;"	t	typeref:struct:__anon42
pSYMR	src/base/loader/coff_sym.h	/^} SYMR, *pSYMR;$/;"	t	typeref:struct:ecoff_sym
pState	src/arch/mips/pra_constants.hh	/^    Bitfield<7,  6> pState;$/;"	m	namespace:MipsISA
pTIR	src/base/loader/coff_sym.h	/^} TIR, *pTIR;$/;"	t	typeref:struct:__anon41
pTable	src/cpu/ozone/lsq_unit.hh	/^    PageTable *pTable;$/;"	m	class:OzoneLSQ
pTable	src/cpu/ozone/simple_params.hh	/^    PageTable *pTable;$/;"	m	class:SimpleParams
pTable	src/mem/page_table.hh	/^    PTable pTable;$/;"	m	class:PageTable
pTable	src/mem/se_translating_port_proxy.hh	/^    PageTable *pTable;$/;"	m	class:SETranslatingPortProxy
pTable	src/sim/process.hh	/^    PageTable* pTable;$/;"	m	class:Process
pTableCache	src/mem/page_table.hh	/^    struct cacheElement pTableCache[3];$/;"	m	class:PageTable	typeref:struct:PageTable::cacheElement
pTagLo	src/arch/mips/pra_constants.hh	/^    Bitfield<31, 8> pTagLo;$/;"	m	namespace:MipsISA
p_arg_list_0	src/arch/isa_parser.py	/^    def p_arg_list_0(self, t):$/;"	m	class:ISAParser
p_arg_list_1	src/arch/isa_parser.py	/^    def p_arg_list_1(self, t):$/;"	m	class:ISAParser
p_arg_list_2	src/arch/isa_parser.py	/^    def p_arg_list_2(self, t):$/;"	m	class:ISAParser
p_block	src/arch/micro_asm.py	/^def p_block(t):$/;"	f
p_case_label_0	src/arch/isa_parser.py	/^    def p_case_label_0(self, t):$/;"	m	class:ISAParser
p_case_label_1	src/arch/isa_parser.py	/^    def p_case_label_1(self, t):$/;"	m	class:ISAParser
p_content_of_statement_0	src/arch/micro_asm.py	/^def p_content_of_statement_0(t):$/;"	f
p_content_of_statement_1	src/arch/micro_asm.py	/^def p_content_of_statement_1(t):$/;"	f
p_decl__action	src/mem/slicc/parser.py	/^    def p_decl__action(self, p):$/;"	m	class:SLICC
p_decl__enum	src/mem/slicc/parser.py	/^    def p_decl__enum(self, p):$/;"	m	class:SLICC
p_decl__extern0	src/mem/slicc/parser.py	/^    def p_decl__extern0(self, p):$/;"	m	class:SLICC
p_decl__func_decl	src/mem/slicc/parser.py	/^    def p_decl__func_decl(self, p):$/;"	m	class:SLICC
p_decl__func_def	src/mem/slicc/parser.py	/^    def p_decl__func_def(self, p):$/;"	m	class:SLICC
p_decl__global	src/mem/slicc/parser.py	/^    def p_decl__global(self, p):$/;"	m	class:SLICC
p_decl__in_port	src/mem/slicc/parser.py	/^    def p_decl__in_port(self, p):$/;"	m	class:SLICC
p_decl__include	src/mem/slicc/parser.py	/^    def p_decl__include(self, p):$/;"	m	class:SLICC
p_decl__machine0	src/mem/slicc/parser.py	/^    def p_decl__machine0(self, p):$/;"	m	class:SLICC
p_decl__machine1	src/mem/slicc/parser.py	/^    def p_decl__machine1(self, p):$/;"	m	class:SLICC
p_decl__object	src/mem/slicc/parser.py	/^    def p_decl__object(self, p):$/;"	m	class:SLICC
p_decl__out_port	src/mem/slicc/parser.py	/^    def p_decl__out_port(self, p):$/;"	m	class:SLICC
p_decl__protocol	src/mem/slicc/parser.py	/^    def p_decl__protocol(self, p):$/;"	m	class:SLICC
p_decl__state_decl	src/mem/slicc/parser.py	/^    def p_decl__state_decl(self, p):$/;"	m	class:SLICC
p_decl__struct	src/mem/slicc/parser.py	/^    def p_decl__struct(self, p):$/;"	m	class:SLICC
p_decl__trans0	src/mem/slicc/parser.py	/^    def p_decl__trans0(self, p):$/;"	m	class:SLICC
p_decl__trans1	src/mem/slicc/parser.py	/^    def p_decl__trans1(self, p):$/;"	m	class:SLICC
p_decl__trans2	src/mem/slicc/parser.py	/^    def p_decl__trans2(self, p):$/;"	m	class:SLICC
p_decl__trans3	src/mem/slicc/parser.py	/^    def p_decl__trans3(self, p):$/;"	m	class:SLICC
p_decls	src/mem/slicc/parser.py	/^    def p_decls(self, p):$/;"	m	class:SLICC
p_declsx__list	src/mem/slicc/parser.py	/^    def p_declsx__list(self, p):$/;"	m	class:SLICC
p_declsx__none	src/mem/slicc/parser.py	/^    def p_declsx__none(self, p):$/;"	m	class:SLICC
p_decode_block	src/arch/isa_parser.py	/^    def p_decode_block(self, t):$/;"	m	class:ISAParser
p_decode_stmt_cpp	src/arch/isa_parser.py	/^    def p_decode_stmt_cpp(self, t):$/;"	m	class:ISAParser
p_decode_stmt_decode	src/arch/isa_parser.py	/^    def p_decode_stmt_decode(self, t):$/;"	m	class:ISAParser
p_decode_stmt_format	src/arch/isa_parser.py	/^    def p_decode_stmt_format(self, t):$/;"	m	class:ISAParser
p_decode_stmt_inst	src/arch/isa_parser.py	/^    def p_decode_stmt_inst(self, t):$/;"	m	class:ISAParser
p_decode_stmt_list_0	src/arch/isa_parser.py	/^    def p_decode_stmt_list_0(self, t):$/;"	m	class:ISAParser
p_decode_stmt_list_1	src/arch/isa_parser.py	/^    def p_decode_stmt_list_1(self, t):$/;"	m	class:ISAParser
p_def_bitfield_0	src/arch/isa_parser.py	/^    def p_def_bitfield_0(self, t):$/;"	m	class:ISAParser
p_def_bitfield_1	src/arch/isa_parser.py	/^    def p_def_bitfield_1(self, t):$/;"	m	class:ISAParser
p_def_bitfield_struct	src/arch/isa_parser.py	/^    def p_def_bitfield_struct(self, t):$/;"	m	class:ISAParser
p_def_format	src/arch/isa_parser.py	/^    def p_def_format(self, t):$/;"	m	class:ISAParser
p_def_operand_types	src/arch/isa_parser.py	/^    def p_def_operand_types(self, t):$/;"	m	class:ISAParser
p_def_operands	src/arch/isa_parser.py	/^    def p_def_operands(self, t):$/;"	m	class:ISAParser
p_def_or_output	src/arch/isa_parser.py	/^    def p_def_or_output(self, t):$/;"	m	class:ISAParser
p_def_template	src/arch/isa_parser.py	/^    def p_def_template(self, t):$/;"	m	class:ISAParser
p_defs_and_outputs_0	src/arch/isa_parser.py	/^    def p_defs_and_outputs_0(self, t):$/;"	m	class:ISAParser
p_defs_and_outputs_1	src/arch/isa_parser.py	/^    def p_defs_and_outputs_1(self, t):$/;"	m	class:ISAParser
p_directive_0	src/arch/micro_asm.py	/^def p_directive_0(t):$/;"	f
p_directive_1	src/arch/micro_asm.py	/^def p_directive_1(t):$/;"	f
p_empty	src/arch/isa_parser.py	/^    def p_empty(self, t):$/;"	m	class:ISAParser
p_empty	src/mem/slicc/parser.py	/^    def p_empty(self, p):$/;"	m	class:SLICC
p_end_of_statement	src/arch/micro_asm.py	/^def p_end_of_statement(t):$/;"	f
p_enumeration	src/mem/slicc/parser.py	/^    def p_enumeration(self, p):$/;"	m	class:SLICC
p_error	src/arch/isa_parser.py	/^    def p_error(self, t):$/;"	m	class:ISAParser
p_error	src/arch/micro_asm.py	/^def p_error(t):$/;"	f
p_error	src/python/m5/util/grammar.py	/^    def p_error(self, t):$/;"	m	class:Grammar
p_excess_args_param	src/arch/isa_parser.py	/^    def p_excess_args_param(self, t):$/;"	m	class:ISAParser
p_expr_0	src/arch/isa_parser.py	/^    def p_expr_0(self, t):$/;"	m	class:ISAParser
p_expr_1	src/arch/isa_parser.py	/^    def p_expr_1(self, t):$/;"	m	class:ISAParser
p_expr__aexpr	src/mem/slicc/parser.py	/^    def p_expr__aexpr(self, p):$/;"	m	class:SLICC
p_expr__binary_op	src/mem/slicc/parser.py	/^    def p_expr__binary_op(self, p):$/;"	m	class:SLICC
p_expr__class_method_call	src/mem/slicc/parser.py	/^    def p_expr__class_method_call(self, p):$/;"	m	class:SLICC
p_expr__enumeration	src/mem/slicc/parser.py	/^    def p_expr__enumeration(self, p):$/;"	m	class:SLICC
p_expr__func_call	src/mem/slicc/parser.py	/^    def p_expr__func_call(self, p):$/;"	m	class:SLICC
p_expr__is_invalid_ptr	src/mem/slicc/parser.py	/^    def p_expr__is_invalid_ptr(self, p):$/;"	m	class:SLICC
p_expr__is_valid_ptr	src/mem/slicc/parser.py	/^    def p_expr__is_valid_ptr(self, p):$/;"	m	class:SLICC
p_expr__literal	src/mem/slicc/parser.py	/^    def p_expr__literal(self, p):$/;"	m	class:SLICC
p_expr__localvar	src/mem/slicc/parser.py	/^    def p_expr__localvar(self, p):$/;"	m	class:SLICC
p_expr__member	src/mem/slicc/parser.py	/^    def p_expr__member(self, p):$/;"	m	class:SLICC
p_expr__member_method_call	src/mem/slicc/parser.py	/^    def p_expr__member_method_call(self, p):$/;"	m	class:SLICC
p_expr__member_method_call_lookup	src/mem/slicc/parser.py	/^    def p_expr__member_method_call_lookup(self, p):$/;"	m	class:SLICC
p_expr__new	src/mem/slicc/parser.py	/^    def p_expr__new(self, p):$/;"	m	class:SLICC
p_expr__null	src/mem/slicc/parser.py	/^    def p_expr__null(self, p):$/;"	m	class:SLICC
p_expr__parens	src/mem/slicc/parser.py	/^    def p_expr__parens(self, p):$/;"	m	class:SLICC
p_expr__unary_op	src/mem/slicc/parser.py	/^    def p_expr__unary_op(self, p):$/;"	m	class:SLICC
p_expr__var	src/mem/slicc/parser.py	/^    def p_expr__var(self, p):$/;"	m	class:SLICC
p_exprs__empty	src/mem/slicc/parser.py	/^    def p_exprs__empty(self, p):$/;"	m	class:SLICC
p_exprs__multiple	src/mem/slicc/parser.py	/^    def p_exprs__multiple(self, p):$/;"	m	class:SLICC
p_exprs__one	src/mem/slicc/parser.py	/^    def p_exprs__one(self, p):$/;"	m	class:SLICC
p_file	src/arch/micro_asm.py	/^def p_file(t):$/;"	f
p_file	src/mem/slicc/parser.py	/^    def p_file(self, p):$/;"	m	class:SLICC
p_func_decl__0	src/mem/slicc/parser.py	/^    def p_func_decl__0(self, p):$/;"	m	class:SLICC
p_func_def__0	src/mem/slicc/parser.py	/^    def p_func_def__0(self, p):$/;"	m	class:SLICC
p_global_let	src/arch/isa_parser.py	/^    def p_global_let(self, t):$/;"	m	class:ISAParser
p_id_with_dot_0	src/arch/isa_parser.py	/^    def p_id_with_dot_0(self, t):$/;"	m	class:ISAParser
p_id_with_dot_1	src/arch/isa_parser.py	/^    def p_id_with_dot_1(self, t):$/;"	m	class:ISAParser
p_ident	src/mem/slicc/parser.py	/^    def p_ident(self, p):$/;"	m	class:SLICC
p_idents__bare	src/mem/slicc/parser.py	/^    def p_idents__bare(self, p):$/;"	m	class:SLICC
p_idents__braced	src/mem/slicc/parser.py	/^    def p_idents__braced(self, p):$/;"	m	class:SLICC
p_identx__multiple_1	src/mem/slicc/parser.py	/^    def p_identx__multiple_1(self, p):$/;"	m	class:SLICC
p_identx__multiple_2	src/mem/slicc/parser.py	/^    def p_identx__multiple_2(self, p):$/;"	m	class:SLICC
p_identx__single	src/mem/slicc/parser.py	/^    def p_identx__single(self, p):$/;"	m	class:SLICC
p_if_statement__if	src/mem/slicc/parser.py	/^    def p_if_statement__if(self, p):$/;"	m	class:SLICC
p_if_statement__if_else	src/mem/slicc/parser.py	/^    def p_if_statement__if_else(self, p):$/;"	m	class:SLICC
p_inst_0	src/arch/isa_parser.py	/^    def p_inst_0(self, t):$/;"	m	class:ISAParser
p_inst_1	src/arch/isa_parser.py	/^    def p_inst_1(self, t):$/;"	m	class:ISAParser
p_intlit_list_0	src/arch/isa_parser.py	/^    def p_intlit_list_0(self, t):$/;"	m	class:ISAParser
p_intlit_list_1	src/arch/isa_parser.py	/^    def p_intlit_list_1(self, t):$/;"	m	class:ISAParser
p_keyword_arg	src/arch/isa_parser.py	/^    def p_keyword_arg(self, t):$/;"	m	class:ISAParser
p_keyword_arg_list_0	src/arch/isa_parser.py	/^    def p_keyword_arg_list_0(self, t):$/;"	m	class:ISAParser
p_keyword_arg_list_1	src/arch/isa_parser.py	/^    def p_keyword_arg_list_1(self, t):$/;"	m	class:ISAParser
p_keyword_param	src/arch/isa_parser.py	/^    def p_keyword_param(self, t):$/;"	m	class:ISAParser
p_keyword_param_list_0	src/arch/isa_parser.py	/^    def p_keyword_param_list_0(self, t):$/;"	m	class:ISAParser
p_keyword_param_list_1	src/arch/isa_parser.py	/^    def p_keyword_param_list_1(self, t):$/;"	m	class:ISAParser
p_label_0	src/arch/micro_asm.py	/^def p_label_0(t):$/;"	f
p_label_1	src/arch/micro_asm.py	/^def p_label_1(t):$/;"	f
p_labels_0	src/arch/micro_asm.py	/^def p_labels_0(t):$/;"	f
p_labels_1	src/arch/micro_asm.py	/^def p_labels_1(t):$/;"	f
p_labels_2	src/arch/micro_asm.py	/^def p_labels_2(t):$/;"	f
p_list_expr_0	src/arch/isa_parser.py	/^    def p_list_expr_0(self, t):$/;"	m	class:ISAParser
p_list_expr_1	src/arch/isa_parser.py	/^    def p_list_expr_1(self, t):$/;"	m	class:ISAParser
p_list_expr_2	src/arch/isa_parser.py	/^    def p_list_expr_2(self, t):$/;"	m	class:ISAParser
p_literal__bool	src/mem/slicc/parser.py	/^    def p_literal__bool(self, p):$/;"	m	class:SLICC
p_literal__float	src/mem/slicc/parser.py	/^    def p_literal__float(self, p):$/;"	m	class:SLICC
p_literal__number	src/mem/slicc/parser.py	/^    def p_literal__number(self, p):$/;"	m	class:SLICC
p_literal__string	src/mem/slicc/parser.py	/^    def p_literal__string(self, p):$/;"	m	class:SLICC
p_macroop_def_0	src/arch/micro_asm.py	/^def p_macroop_def_0(t):$/;"	f
p_macroop_def_1	src/arch/micro_asm.py	/^def p_macroop_def_1(t):$/;"	f
p_microop_0	src/arch/micro_asm.py	/^def p_microop_0(t):$/;"	f
p_microop_1	src/arch/micro_asm.py	/^def p_microop_1(t):$/;"	f
p_microop_2	src/arch/micro_asm.py	/^def p_microop_2(t):$/;"	f
p_microop_3	src/arch/micro_asm.py	/^def p_microop_3(t):$/;"	f
p_name_decl	src/arch/isa_parser.py	/^    def p_name_decl(self, t):$/;"	m	class:ISAParser
p_nonpositional_param_list_0	src/arch/isa_parser.py	/^    def p_nonpositional_param_list_0(self, t):$/;"	m	class:ISAParser
p_nonpositional_param_list_1	src/arch/isa_parser.py	/^    def p_nonpositional_param_list_1(self, t):$/;"	m	class:ISAParser
p_opt_default_0	src/arch/isa_parser.py	/^    def p_opt_default_0(self, t):$/;"	m	class:ISAParser
p_opt_default_1	src/arch/isa_parser.py	/^    def p_opt_default_1(self, t):$/;"	m	class:ISAParser
p_opt_defs_and_outputs_0	src/arch/isa_parser.py	/^    def p_opt_defs_and_outputs_0(self, t):$/;"	m	class:ISAParser
p_opt_defs_and_outputs_1	src/arch/isa_parser.py	/^    def p_opt_defs_and_outputs_1(self, t):$/;"	m	class:ISAParser
p_opt_rom_or_macros_0	src/arch/micro_asm.py	/^def p_opt_rom_or_macros_0(t):$/;"	f
p_opt_rom_or_macros_1	src/arch/micro_asm.py	/^def p_opt_rom_or_macros_1(t):$/;"	f
p_opt_signed_0	src/arch/isa_parser.py	/^    def p_opt_signed_0(self, t):$/;"	m	class:ISAParser
p_opt_signed_1	src/arch/isa_parser.py	/^    def p_opt_signed_1(self, t):$/;"	m	class:ISAParser
p_output_decoder	src/arch/isa_parser.py	/^    def p_output_decoder(self, t):$/;"	m	class:ISAParser
p_output_exec	src/arch/isa_parser.py	/^    def p_output_exec(self, t):$/;"	m	class:ISAParser
p_output_header	src/arch/isa_parser.py	/^    def p_output_header(self, t):$/;"	m	class:ISAParser
p_pair__assign	src/mem/slicc/parser.py	/^    def p_pair__assign(self, p):$/;"	m	class:SLICC
p_pair__literal	src/mem/slicc/parser.py	/^    def p_pair__literal(self, p):$/;"	m	class:SLICC
p_pairs__empty	src/mem/slicc/parser.py	/^    def p_pairs__empty(self, p):$/;"	m	class:SLICC
p_pairs__list	src/mem/slicc/parser.py	/^    def p_pairs__list(self, p):$/;"	m	class:SLICC
p_pairsx__many	src/mem/slicc/parser.py	/^    def p_pairsx__many(self, p):$/;"	m	class:SLICC
p_pairsx__one	src/mem/slicc/parser.py	/^    def p_pairsx__one(self, p):$/;"	m	class:SLICC
p_param	src/mem/slicc/parser.py	/^    def p_param(self, p):$/;"	m	class:SLICC
p_param__default_bool	src/mem/slicc/parser.py	/^    def p_param__default_bool(self, p):$/;"	m	class:SLICC
p_param__default_number	src/mem/slicc/parser.py	/^    def p_param__default_number(self, p):$/;"	m	class:SLICC
p_param__default_string	src/mem/slicc/parser.py	/^    def p_param__default_string(self, p):$/;"	m	class:SLICC
p_param__pointer	src/mem/slicc/parser.py	/^    def p_param__pointer(self, p):$/;"	m	class:SLICC
p_param__pointer_default	src/mem/slicc/parser.py	/^    def p_param__pointer_default(self, p):$/;"	m	class:SLICC
p_param_list_0	src/arch/isa_parser.py	/^    def p_param_list_0(self, t):$/;"	m	class:ISAParser
p_param_list_1	src/arch/isa_parser.py	/^    def p_param_list_1(self, t):$/;"	m	class:ISAParser
p_params__many	src/mem/slicc/parser.py	/^    def p_params__many(self, p):$/;"	m	class:SLICC
p_params__none	src/mem/slicc/parser.py	/^    def p_params__none(self, p):$/;"	m	class:SLICC
p_params__one	src/mem/slicc/parser.py	/^    def p_params__one(self, p):$/;"	m	class:SLICC
p_positional_arg_list_0	src/arch/isa_parser.py	/^    def p_positional_arg_list_0(self, t):$/;"	m	class:ISAParser
p_positional_arg_list_1	src/arch/isa_parser.py	/^    def p_positional_arg_list_1(self, t):$/;"	m	class:ISAParser
p_positional_arg_list_2	src/arch/isa_parser.py	/^    def p_positional_arg_list_2(self, t):$/;"	m	class:ISAParser
p_positional_param_list_0	src/arch/isa_parser.py	/^    def p_positional_param_list_0(self, t):$/;"	m	class:ISAParser
p_positional_param_list_1	src/arch/isa_parser.py	/^    def p_positional_param_list_1(self, t):$/;"	m	class:ISAParser
p_positional_param_list_2	src/arch/isa_parser.py	/^    def p_positional_param_list_2(self, t):$/;"	m	class:ISAParser
p_push_format_id	src/arch/isa_parser.py	/^    def p_push_format_id(self, t):$/;"	m	class:ISAParser
p_rom_block	src/arch/micro_asm.py	/^def p_rom_block(t):$/;"	f
p_rom_or_macro_0	src/arch/micro_asm.py	/^def p_rom_or_macro_0(t):$/;"	f
p_rom_or_macros_0	src/arch/micro_asm.py	/^def p_rom_or_macros_0(t):$/;"	f
p_rom_or_macros_1	src/arch/micro_asm.py	/^def p_rom_or_macros_1(t):$/;"	f
p_specification	src/arch/isa_parser.py	/^    def p_specification(self, t):$/;"	m	class:ISAParser
p_statement	src/arch/micro_asm.py	/^def p_statement(t):$/;"	f
p_statement__assign	src/mem/slicc/parser.py	/^    def p_statement__assign(self, p):$/;"	m	class:SLICC
p_statement__check_allocate	src/mem/slicc/parser.py	/^    def p_statement__check_allocate(self, p):$/;"	m	class:SLICC
p_statement__check_stop	src/mem/slicc/parser.py	/^    def p_statement__check_stop(self, p):$/;"	m	class:SLICC
p_statement__enqueue	src/mem/slicc/parser.py	/^    def p_statement__enqueue(self, p):$/;"	m	class:SLICC
p_statement__expression	src/mem/slicc/parser.py	/^    def p_statement__expression(self, p):$/;"	m	class:SLICC
p_statement__if	src/mem/slicc/parser.py	/^    def p_statement__if(self, p):$/;"	m	class:SLICC
p_statement__if_else_if	src/mem/slicc/parser.py	/^    def p_statement__if_else_if(self, p):$/;"	m	class:SLICC
p_statement__peek	src/mem/slicc/parser.py	/^    def p_statement__peek(self, p):$/;"	m	class:SLICC
p_statement__return	src/mem/slicc/parser.py	/^    def p_statement__return(self, p):$/;"	m	class:SLICC
p_statement__stall_and_wait	src/mem/slicc/parser.py	/^    def p_statement__stall_and_wait(self, p):$/;"	m	class:SLICC
p_statement__static_cast	src/mem/slicc/parser.py	/^    def p_statement__static_cast(self, p):$/;"	m	class:SLICC
p_statement__static_cast_ptr	src/mem/slicc/parser.py	/^    def p_statement__static_cast_ptr(self, p):$/;"	m	class:SLICC
p_statements_0	src/arch/micro_asm.py	/^def p_statements_0(t):$/;"	f
p_statements_1	src/arch/micro_asm.py	/^def p_statements_1(t):$/;"	f
p_statements__inner	src/mem/slicc/parser.py	/^    def p_statements__inner(self, p):$/;"	m	class:SLICC
p_statements__none	src/mem/slicc/parser.py	/^    def p_statements__none(self, p):$/;"	m	class:SLICC
p_statements_inner__many	src/mem/slicc/parser.py	/^    def p_statements_inner__many(self, p):$/;"	m	class:SLICC
p_statements_inner__one	src/mem/slicc/parser.py	/^    def p_statements_inner__one(self, p):$/;"	m	class:SLICC
p_type__one	src/mem/slicc/parser.py	/^    def p_type__one(self, p):$/;"	m	class:SLICC
p_type_enum	src/mem/slicc/parser.py	/^    def p_type_enum(self, p):$/;"	m	class:SLICC
p_type_enums__empty	src/mem/slicc/parser.py	/^    def p_type_enums__empty(self, p):$/;"	m	class:SLICC
p_type_enums__list	src/mem/slicc/parser.py	/^    def p_type_enums__list(self, p):$/;"	m	class:SLICC
p_type_member__1	src/mem/slicc/parser.py	/^    def p_type_member__1(self, p):$/;"	m	class:SLICC
p_type_member__2	src/mem/slicc/parser.py	/^    def p_type_member__2(self, p):$/;"	m	class:SLICC
p_type_members__empty	src/mem/slicc/parser.py	/^    def p_type_members__empty(self, p):$/;"	m	class:SLICC
p_type_members__list	src/mem/slicc/parser.py	/^    def p_type_members__list(self, p):$/;"	m	class:SLICC
p_type_method__0	src/mem/slicc/parser.py	/^    def p_type_method__0(self, p):$/;"	m	class:SLICC
p_type_method__1	src/mem/slicc/parser.py	/^    def p_type_method__1(self, p):$/;"	m	class:SLICC
p_type_or_void	src/mem/slicc/parser.py	/^    def p_type_or_void(self, p):$/;"	m	class:SLICC
p_type_state	src/mem/slicc/parser.py	/^    def p_type_state(self, p):$/;"	m	class:SLICC
p_type_states__empty	src/mem/slicc/parser.py	/^    def p_type_states__empty(self, p):$/;"	m	class:SLICC
p_type_states__list	src/mem/slicc/parser.py	/^    def p_type_states__list(self, p):$/;"	m	class:SLICC
p_types__empty	src/mem/slicc/parser.py	/^    def p_types__empty(self, p):$/;"	m	class:SLICC
p_types__multiple	src/mem/slicc/parser.py	/^    def p_types__multiple(self, p):$/;"	m	class:SLICC
p_types__one	src/mem/slicc/parser.py	/^    def p_types__one(self, p):$/;"	m	class:SLICC
p_typestr__multi	src/mem/slicc/parser.py	/^    def p_typestr__multi(self, p):$/;"	m	class:SLICC
p_typestr__single	src/mem/slicc/parser.py	/^    def p_typestr__single(self, p):$/;"	m	class:SLICC
p_var	src/mem/slicc/parser.py	/^    def p_var(self, p):$/;"	m	class:SLICC
p_void	src/mem/slicc/parser.py	/^    def p_void(self, p):$/;"	m	class:SLICC
pa	src/arch/arm/miscregs.hh	/^        Bitfield<39, 12> pa;$/;"	m	namespace:ArmISA
pack	src/arch/mips/remote_gdb.hh	/^        pack(uint32_t lo, uint32_t hi)$/;"	f	class:MipsISA::RemoteGDB
packet	src/base/inet.hh	/^    EthPacketPtr packet() { return p; }$/;"	f	class:Net::EthPtr
packet	src/base/inet.hh	/^    EthPacketPtr packet() { return p; }$/;"	f	class:Net::Ip6Ptr
packet	src/base/inet.hh	/^    EthPacketPtr packet() { return p; }$/;"	f	class:Net::IpPtr
packet	src/base/inet.hh	/^    EthPacketPtr packet() { return p; }$/;"	f	class:Net::TcpPtr
packet	src/base/inet.hh	/^    EthPacketPtr packet() { return p; }$/;"	f	class:Net::UdpPtr
packet	src/base/inet.hh	/^    const EthPacketPtr packet() const { return p; }$/;"	f	class:Net::EthPtr
packet	src/base/inet.hh	/^    const EthPacketPtr packet() const { return p; }$/;"	f	class:Net::Ip6Ptr
packet	src/base/inet.hh	/^    const EthPacketPtr packet() const { return p; }$/;"	f	class:Net::IpPtr
packet	src/base/inet.hh	/^    const EthPacketPtr packet() const { return p; }$/;"	f	class:Net::TcpPtr
packet	src/base/inet.hh	/^    const EthPacketPtr packet() const { return p; }$/;"	f	class:Net::UdpPtr
packet	src/dev/etherbus.hh	/^    EthPacketPtr packet;$/;"	m	class:EtherBus
packet	src/dev/etherlink.cc	/^    EthPacketPtr packet;$/;"	m	class:LinkDelayEvent	file:
packet	src/dev/etherlink.hh	/^        EthPacketPtr packet;$/;"	m	class:EtherLink::Link
packet	src/dev/pktfifo.hh	/^    EthPacketPtr packet;$/;"	m	struct:PacketFifoEntry
packetAvailable	src/dev/i8254xGBe.cc	/^IGbE::TxDescCache::packetAvailable()$/;"	f	class:IGbE::TxDescCache
packetBuffer	src/dev/ethertap.hh	/^    std::queue<EthPacketPtr> packetBuffer;$/;"	m	class:EtherTap
packetDone	src/dev/i8254xGBe.cc	/^IGbE::RxDescCache::packetDone()$/;"	f	class:IGbE::RxDescCache
packetMultiDesc	src/dev/i8254xGBe.hh	/^        bool packetMultiDesc() { return pktMultiDesc;}$/;"	f	class:IGbE::TxDescCache
packetQueue	src/mem/simple_mem.hh	/^    std::deque<DeferredPacket> packetQueue;$/;"	m	class:SimpleMemory
packetWaiting	src/dev/i8254xGBe.hh	/^        bool packetWaiting() { return pktWaiting; }$/;"	f	class:IGbE::TxDescCache
packets	src/dev/pktfifo.hh	/^    unsigned packets() const { return fifo.size(); }$/;"	f	class:PacketFifo
paco	src/arch/mips/dt_constants.hh	/^    Bitfield<0> paco;$/;"	m	namespace:MipsISA
pad	src/arch/arm/linux/linux.hh	/^        uint16_t pad;$/;"	m	struct:ArmLinux64::__anon11
pad	src/kern/tru64/tru64.hh	/^        int64_t            pad[2];         \/\/!< pad$/;"	m	struct:Tru64::nxm_sched_state
pad	src/kern/tru64/tru64.hh	/^        uint32_t  pad;          \/\/!< padding$/;"	m	struct:Tru64::tbl_sysinfo
pad0	src/cpu/kvm/x86_cpu.cc	/^    uint8_t pad0;$/;"	m	struct:FXSave	file:
pad1	src/cpu/kvm/x86_cpu.cc	/^            uint16_t pad1;$/;"	m	struct:FXSave::__anon52::__anon53	file:
pad1	src/kern/tru64/tru64.hh	/^        int pad1;               \/\/!< pad1$/;"	m	struct:Tru64::nxm_task_attr
pad1	src/kern/tru64/tru64.hh	/^        unsigned short pad1;            \/\/!< pad1$/;"	m	struct:Tru64::nxm_shared
pad2	src/cpu/kvm/x86_cpu.cc	/^            uint16_t pad2;$/;"	m	struct:FXSave::__anon52::__anon53	file:
pad2	src/kern/tru64/tru64.hh	/^        int64_t pad2;           \/\/!< pad2$/;"	m	struct:Tru64::nxm_task_attr
pad2	src/kern/tru64/tru64.hh	/^        uint64_t pad2[2];       \/\/!< pad2$/;"	m	struct:Tru64::nxm_thread_attr
padcell	src/arch/alpha/aout_machdep.h	/^    uint16_t    padcell;        \/\/\/< padding$/;"	m	struct:aout_exechdr
padding	src/base/vnc/vncinput.hh	/^        uint8_t padding;$/;"	m	struct:VncInput::PixelEncodingsMessage
padding	src/base/vnc/vncinput.hh	/^        uint8_t padding[2];$/;"	m	struct:VncInput::KeyEventMessage
padding	src/base/vnc/vncinput.hh	/^        uint8_t padding[3];$/;"	m	struct:VncInput::ClientCutTextMessage
padding	src/base/vnc/vncinput.hh	/^        uint8_t padding[3];$/;"	m	struct:VncInput::PixelFormat
padding	src/base/vnc/vncinput.hh	/^        uint8_t padding[3];$/;"	m	struct:VncInput::PixelFormatMessage
padding	src/base/vnc/vncserver.hh	/^        uint8_t padding;$/;"	m	struct:VncServer::FrameBufferUpdate
padding	src/base/vnc/vncserver.hh	/^        uint8_t padding[3];$/;"	m	struct:VncServer::ServerCutText
paddr	src/arch/alpha/pagetable.hh	/^    Addr paddr() const { return _pfn() << PageShift; }$/;"	f	struct:AlphaISA::PageTableEntry
paddr	src/arch/arm/table_walker.hh	/^        Addr paddr() const$/;"	f	class:ArmISA::TableWalker::L1Descriptor
paddr	src/arch/arm/table_walker.hh	/^        Addr paddr() const$/;"	f	class:ArmISA::TableWalker::LongDescriptor
paddr	src/arch/arm/table_walker.hh	/^        Addr paddr(Addr va) const$/;"	f	class:ArmISA::TableWalker::L1Descriptor
paddr	src/arch/arm/table_walker.hh	/^        Addr paddr(Addr va) const$/;"	f	class:ArmISA::TableWalker::L2Descriptor
paddr	src/arch/arm/table_walker.hh	/^        Addr paddr(Addr va) const$/;"	f	class:ArmISA::TableWalker::LongDescriptor
paddr	src/arch/sparc/pagetable.hh	/^    Addr paddr()    const { assert(populated); return mbits(entry4u, 39,13);}$/;"	f	class:SparcISA::PageTableEntry
paddr	src/arch/x86/pagetable.hh	/^        Addr paddr;$/;"	m	struct:X86ISA::TlbEntry
paddrMask	src/arch/sparc/pagetable.hh	/^    Addr paddrMask() const { assert(populated); return paddr() & ~sizeMask(); }$/;"	f	class:SparcISA::PageTableEntry
pae	src/arch/x86/regs/misc.hh	/^        Bitfield<5> pae; \/\/ Physical-Address Extension$/;"	m	namespace:X86ISA
paePdtb	src/arch/x86/regs/misc.hh	/^        Bitfield<31, 5> paePdtb; \/\/ PAE Addressing Page-Directory-Table$/;"	m	namespace:X86ISA
pael1	src/arch/x86/pagetable.hh	/^        Bitfield<20, 12> pael1;$/;"	m	namespace:X86ISA
pael2	src/arch/x86/pagetable.hh	/^        Bitfield<29, 21> pael2;$/;"	m	namespace:X86ISA
pael3	src/arch/x86/pagetable.hh	/^        Bitfield<31, 30> pael3;$/;"	m	namespace:X86ISA
page	src/arch/alpha/pagetable.hh	/^    Addr page() const { return addr & PageMask; }$/;"	f	struct:AlphaISA::VAddr
page	src/arch/power/pagetable.hh	/^    page() const$/;"	f	struct:PowerISA::VAddr
pageAlign	src/mem/page_table.hh	/^    Addr pageAlign(Addr a)  { return (a & ~offsetMask); }$/;"	f	class:PageTable
pageBits	src/cpu/testers/traffic_gen/generators.hh	/^    const unsigned int pageBits;$/;"	m	class:DramGen
pageFault	src/arch/x86/pagetable_walker.cc	/^Walker::WalkerState::pageFault(bool present)$/;"	f	class:X86ISA::Walker::WalkerState
pageHitRate	src/mem/dram_ctrl.hh	/^    Stats::Formula pageHitRate;$/;"	m	class:DRAMCtrl
pageMap	src/cpu/decode_cache.hh	/^    PageMap pageMap;$/;"	m	class:DecodeCache::AddrMap
pageMgmt	src/mem/dram_ctrl.hh	/^    Enums::PageManage pageMgmt;$/;"	m	class:DRAMCtrl
pageOffset	src/mem/page_table.hh	/^    Addr pageOffset(Addr a) { return (a &  offsetMask); }$/;"	f	class:PageTable
pagePtr	src/sim/system.hh	/^    Addr pagePtr;$/;"	m	class:System
pageSize	src/cpu/kvm/base.hh	/^    const long pageSize;$/;"	m	class:BaseKvmCPU
pageSize	src/cpu/kvm/perfevent.hh	/^    long pageSize;$/;"	m	class:PerfKvmCounter
pageSize	src/cpu/testers/traffic_gen/generators.hh	/^    const unsigned int pageSize;$/;"	m	class:DramGen
pageSize	src/mem/page_table.hh	/^    const Addr pageSize;$/;"	m	class:PageTable
pageSizes	src/arch/sparc/pagetable.cc	/^int PageTableEntry::pageSizes[] =$/;"	m	class:SparcISA::PageTableEntry	file:
pageSizes	src/arch/sparc/pagetable.hh	/^    static int pageSizes[6];$/;"	m	class:SparcISA::PageTableEntry
pageStart	src/arch/alpha/pagetable.hh	/^    pageStart()$/;"	f	struct:AlphaISA::TlbEntry
pageStart	src/arch/arm/pagetable.hh	/^    pageStart() const$/;"	f	struct:ArmISA::TlbEntry
pageStart	src/arch/mips/pagetable.hh	/^    Addr pageStart()$/;"	f	struct:MipsISA::TlbEntry
pageStart	src/arch/power/tlb.hh	/^    pageStart()$/;"	f	struct:PowerISA::TlbEntry
pageStart	src/arch/sparc/pagetable.hh	/^    pageStart()$/;"	f	struct:SparcISA::TlbEntry
pageStart	src/arch/x86/pagetable.hh	/^        Addr pageStart()$/;"	f	struct:X86ISA::TlbEntry
pageStop	src/mem/cache/prefetch/base.hh	/^    const bool pageStop;$/;"	m	class:BasePrefetcher
page_address	src/mem/ruby/common/Address.cc	/^page_address(const Address& addr)$/;"	f
page_policy	src/mem/DRAMCtrl.py	/^    page_policy = Param.PageManage('open_adaptive', "Page management policy")$/;"	v	class:DRAMCtrl
pagesize	src/arch/arm/linux/atag.hh	/^    void pagesize(uint32_t i) { storage[3] = i; }$/;"	f	class:AtagCore
paging	src/arch/x86/regs/misc.hh	/^        Bitfield<6> paging;$/;"	m	namespace:X86ISA
pair	src/doxygen/stl.hh	/^template <class X, class Y> class pair {$/;"	c	namespace:std
pal	src/arch/alpha/AlphaSystem.py	/^    pal = Param.String("file that contains palcode")$/;"	v	class:AlphaSystem
pal	src/arch/alpha/system.hh	/^    ObjectFile *pal;$/;"	m	class:AlphaSystem
palSymtab	src/arch/alpha/system.hh	/^    SymbolTable *palSymtab;$/;"	m	class:AlphaSystem
panic	src/base/misc.hh	/^#define panic(/;"	d
panic	src/python/m5/util/__init__.py	/^def panic(fmt, *args):$/;"	f
panicFsOnlyPseudoInst	src/sim/pseudo_inst.cc	/^panicFsOnlyPseudoInst(const char *name)$/;"	f	namespace:PseudoInst
panicStr	src/sim/faults.hh	/^    std::string panicStr;$/;"	m	class:UnimpFault
panic_if	src/base/misc.hh	/^#define panic_if(/;"	d
panic_on_oops	src/arch/arm/ArmSystem.py	/^                                   "guest kernel oopses")$/;"	v	class:LinuxArmSystem
panic_on_panic	src/arch/arm/ArmSystem.py	/^                                    "guest kernel panics")$/;"	v	class:LinuxArmSystem
paramIn	src/arch/x86/types.cc	/^paramIn(Checkpoint *cp, const string &section,$/;"	f
paramIn	src/sim/serialize.cc	/^paramIn(Checkpoint *cp, const string &section, const string &name, T &param)$/;"	f
paramOut	src/arch/x86/types.cc	/^paramOut(ostream &os, const string &name, ExtMachInst const &machInst)$/;"	f
paramOut	src/sim/serialize.cc	/^paramOut(ostream &os, const string &name, const T &param)$/;"	f
params	src/arch/alpha/interrupts.hh	/^    params() const$/;"	f	class:AlphaISA::Interrupts
params	src/arch/alpha/isa.cc	/^ISA::params() const$/;"	f	class:AlphaISA::ISA
params	src/arch/alpha/linux/system.hh	/^    const Params *params() const { return (const Params *)_params; }$/;"	f	class:LinuxAlphaSystem
params	src/arch/alpha/system.hh	/^    const Params *params() const { return (const Params *)_params; }$/;"	f	class:AlphaSystem
params	src/arch/arm/interrupts.hh	/^    params() const$/;"	f	class:ArmISA::Interrupts
params	src/arch/arm/isa.cc	/^ISA::params() const$/;"	f	class:ArmISA::ISA
params	src/arch/arm/linux/system.hh	/^    params() const$/;"	f	class:LinuxArmSystem
params	src/arch/arm/nativetrace.hh	/^    params() const$/;"	f	class:Trace::ArmNativeTrace
params	src/arch/arm/system.hh	/^    params() const$/;"	f	class:ArmSystem
params	src/arch/arm/table_walker.hh	/^    params() const$/;"	f	class:ArmISA::TableWalker
params	src/arch/arm/tlb.hh	/^    params() const$/;"	f	class:ArmISA::TLB
params	src/arch/mips/interrupts.hh	/^    params() const$/;"	f	class:MipsISA::Interrupts
params	src/arch/mips/isa.cc	/^ISA::params() const$/;"	f	class:MipsISA::ISA
params	src/arch/mips/system.hh	/^    const Params *params() const { return (const Params *)_params; }$/;"	f	class:MipsSystem
params	src/arch/power/interrupts.hh	/^    params() const$/;"	f	class:PowerISA::Interrupts
params	src/arch/power/isa.cc	/^ISA::params() const$/;"	f	class:PowerISA::ISA
params	src/arch/sparc/interrupts.hh	/^    params() const$/;"	f	class:SparcISA::Interrupts
params	src/arch/sparc/isa.cc	/^ISA::params() const$/;"	f	class:SparcISA::ISA
params	src/arch/sparc/system.hh	/^    const Params *params() const { return (const Params *)_params; }$/;"	f	class:SparcSystem
params	src/arch/x86/interrupts.hh	/^    params() const$/;"	f	class:X86ISA::Interrupts
params	src/arch/x86/isa.cc	/^ISA::params() const$/;"	f	class:X86ISA::ISA
params	src/arch/x86/pagetable_walker.hh	/^        params() const$/;"	f	class:X86ISA::Walker
params	src/arch/x86/system.hh	/^    const Params *params() const { return (const Params *)_params; }$/;"	f	class:X86System
params	src/base/cp_annotate.hh	/^        params() const$/;"	f	class:CPA
params	src/cpu/base.hh	/^    const Params *params() const$/;"	f	class:BaseCPU
params	src/dev/alpha/backdoor.hh	/^    params() const$/;"	f	class:AlphaBackdoor
params	src/dev/alpha/tsunami_cchip.hh	/^    params() const$/;"	f	class:TsunamiCChip
params	src/dev/alpha/tsunami_io.hh	/^    params() const$/;"	f	class:TsunamiIO
params	src/dev/alpha/tsunami_pchip.hh	/^    params() const$/;"	f	class:TsunamiPChip
params	src/dev/arm/amba_fake.hh	/^    params() const$/;"	f	class:AmbaFake
params	src/dev/arm/base_gic.cc	/^BaseGic::params() const$/;"	f	class:BaseGic
params	src/dev/arm/generic_timer.hh	/^    params() const$/;"	f	class:GenericTimer
params	src/dev/arm/gic_pl390.hh	/^    params() const$/;"	f	class:Pl390
params	src/dev/arm/hdlcd.hh	/^    params() const$/;"	f	class:HDLcd
params	src/dev/arm/kmi.hh	/^    params() const$/;"	f	class:Pl050
params	src/dev/arm/pl011.hh	/^    params() const$/;"	f	class:Pl011
params	src/dev/arm/pl111.hh	/^    params() const$/;"	f	class:Pl111
params	src/dev/arm/realview.hh	/^    params() const {$/;"	f	class:RealView
params	src/dev/arm/rtc_pl031.hh	/^    params() const$/;"	f	class:PL031
params	src/dev/arm/rv_ctrl.hh	/^    params() const$/;"	f	class:RealViewCtrl
params	src/dev/arm/timer_cpulocal.hh	/^    params() const$/;"	f	class:CpuLocalTimer
params	src/dev/arm/timer_sp804.hh	/^    params() const$/;"	f	class:Sp804
params	src/dev/arm/vgic.hh	/^    params() const$/;"	f	class:VGic
params	src/dev/baddev.hh	/^    params() const$/;"	f	class:BadDevice
params	src/dev/copy_engine.hh	/^    params() const$/;"	f	class:CopyEngine
params	src/dev/etherbus.hh	/^    params() const$/;"	f	class:EtherBus
params	src/dev/etherdevice.hh	/^    params() const$/;"	f	class:EtherDevBase
params	src/dev/etherdevice.hh	/^    params() const$/;"	f	class:EtherDevice
params	src/dev/etherlink.hh	/^    params() const$/;"	f	class:EtherLink
params	src/dev/etherobject.hh	/^    params() const$/;"	f	class:EtherObject
params	src/dev/ethertap.hh	/^    params() const$/;"	f	class:EtherTap
params	src/dev/i8254xGBe.hh	/^    params() const {$/;"	f	class:IGbE
params	src/dev/ide_ctrl.hh	/^    const Params *params() const { return (const Params *)_params; }$/;"	f	class:IdeController
params	src/dev/io_device.hh	/^    params() const$/;"	f	class:BasicPioDevice
params	src/dev/io_device.hh	/^    params() const$/;"	f	class:PioDevice
params	src/dev/isa_fake.hh	/^    params() const$/;"	f	class:IsaFake
params	src/dev/mips/malta_cchip.hh	/^    params() const$/;"	f	class:MaltaCChip
params	src/dev/mips/malta_io.hh	/^    params() const$/;"	f	class:MaltaIO
params	src/dev/mips/malta_pchip.hh	/^    params() const$/;"	f	class:MaltaPChip
params	src/dev/ns_gige.hh	/^    const Params *params() const {$/;"	f	class:NSGigE
params	src/dev/pciconfigall.hh	/^    const Params *params() const { return (const Params *)_params; }$/;"	f	class:PciConfigAll
params	src/dev/pcidev.hh	/^    params() const$/;"	f	class:PciDevice
params	src/dev/sinic.hh	/^    const Params *params() const { return (const Params *)_params; }$/;"	f	class:Sinic::Base
params	src/dev/sparc/dtod.hh	/^    params() const$/;"	f	class:DumbTOD
params	src/dev/sparc/iob.hh	/^    params() const$/;"	f	class:Iob
params	src/dev/sparc/mm_disk.hh	/^    params() const$/;"	f	class:MmDisk
params	src/dev/uart.hh	/^    params() const$/;"	f	class:Uart
params	src/dev/uart8250.hh	/^    params() const$/;"	f	class:Uart8250
params	src/dev/x86/i8042.hh	/^    params() const$/;"	f	class:X86ISA::I8042
params	src/dev/x86/i82094aa.hh	/^    params() const$/;"	f	class:X86ISA::I82094AA
params	src/dev/x86/i8237.hh	/^    params() const$/;"	f	class:X86ISA::I8237
params	src/dev/x86/i8254.hh	/^    params() const$/;"	f	class:X86ISA::I8254
params	src/dev/x86/i8259.hh	/^    params() const$/;"	f	class:X86ISA::I8259
params	src/dev/x86/intdev.hh	/^    params() const$/;"	f	class:X86ISA::IntLine
params	src/dev/x86/intdev.hh	/^    params() const$/;"	f	class:X86ISA::IntSinkPin
params	src/dev/x86/intdev.hh	/^    params() const$/;"	f	class:X86ISA::IntSourcePin
params	src/dev/x86/south_bridge.hh	/^    params() const$/;"	f	class:SouthBridge
params	src/dev/x86/speaker.hh	/^    params() const$/;"	f	class:X86ISA::Speaker
params	src/mem/abstract_mem.hh	/^    params() const$/;"	f	class:AbstractMemory
params	src/mem/cache/prefetch/base.hh	/^    params() const$/;"	f	class:BasePrefetcher
params	src/mem/comm_monitor.hh	/^    const Params* params() const$/;"	f	class:CommMonitor
params	src/mem/mem_object.hh	/^    const Params *params() const$/;"	f	class:MemObject
params	src/mem/ruby/network/BasicLink.hh	/^    const Params *params() const { return (const Params *)_params; }$/;"	f	class:BasicExtLink
params	src/mem/ruby/network/BasicLink.hh	/^    const Params *params() const { return (const Params *)_params; }$/;"	f	class:BasicIntLink
params	src/mem/ruby/network/BasicLink.hh	/^    const Params *params() const { return (const Params *)_params; }$/;"	f	class:BasicLink
params	src/mem/ruby/network/BasicRouter.hh	/^    const Params *params() const { return (const Params *)_params; }$/;"	f	class:BasicRouter
params	src/mem/ruby/network/Network.hh	/^    const Params * params() const$/;"	f	class:Network
params	src/mem/ruby/network/fault_model/FaultModel.hh	/^    const Params *params() const { return (const Params *)_params; }$/;"	f	class:FaultModel
params	src/mem/ruby/network/simple/SimpleLink.hh	/^    const Params *params() const { return (const Params *)_params; }$/;"	f	class:SimpleExtLink
params	src/mem/ruby/network/simple/SimpleLink.hh	/^    const Params *params() const { return (const Params *)_params; }$/;"	f	class:SimpleIntLink
params	src/mem/ruby/slicc_interface/AbstractController.hh	/^    const Params *params() const { return (const Params *)_params; }$/;"	f	class:AbstractController
params	src/mem/ruby/system/MemoryControl.hh	/^    const Params *params() const$/;"	f	class:MemoryControl
params	src/python/m5/__init__.py	/^    import params$/;"	i
params	src/python/m5/objects/__init__.py	/^from m5.internal import params$/;"	i
params	src/python/m5/proxy.py	/^import params # for EthernetAddr$/;"	i
params	src/sim/root.hh	/^    params() const$/;"	f	class:Root
params	src/sim/sim_object.hh	/^    const Params *params() const { return _params; }$/;"	f	class:SimObject
params	src/sim/system.hh	/^    const Params *params() const { return (const Params *)_params; }$/;"	f	class:System
parent	src/arch/arm/stage2_mmu.hh	/^        Stage2MMU &parent;$/;"	m	class:ArmISA::Stage2MMU::Stage2Translation
parent	src/base/trie.hh	/^        Node *parent;$/;"	m	struct:Trie::Node
parent	src/cpu/nativetrace.hh	/^    NativeTrace * parent;$/;"	m	class:Trace::NativeTraceRecord
parent	src/dev/arm/timer_cpulocal.hh	/^        CpuLocalTimer *parent;$/;"	m	class:CpuLocalTimer::Timer
parent	src/dev/arm/timer_sp804.hh	/^        Sp804 *parent;$/;"	m	class:Sp804::Timer
parent	src/dev/etherlink.hh	/^        EtherLink *parent;$/;"	m	class:EtherLink::Link
parent	src/dev/intel_8254_timer.hh	/^        Intel8254Timer *parent;$/;"	m	class:Intel8254Timer::Counter
parent	src/dev/mc146818.hh	/^        MC146818 * parent;$/;"	m	struct:MC146818::RTCEvent
parent	src/dev/mc146818.hh	/^        MC146818 * parent;$/;"	m	struct:MC146818::RTCTickEvent
parent	src/dev/x86/i8254.hh	/^        I8254 * parent;$/;"	m	class:X86ISA::I8254::X86Intel8254Timer
parent	src/sim/clock_domain.hh	/^    ClockDomain &parent;$/;"	m	class:DerivedClockDomain
parentBus	src/arch/x86/bios/intelmp.hh	/^    uint8_t parentBus;$/;"	m	class:X86ISA::IntelMP::BusHierarchy
parent_bus	src/arch/x86/bios/IntelMP.py	/^    parent_bus = Param.UInt8(0, 'bus id of this busses parent')$/;"	v	class:X86IntelMPBusHierarchy
parityError	src/dev/x86/i8042.hh	/^        Bitfield<7> parityError;$/;"	m	class:X86ISA::I8042
parse	src/base/inet.cc	/^EthAddr::parse(const std::string &addr)$/;"	f	class:Net::EthAddr
parseConfig	src/cpu/testers/traffic_gen/traffic_gen.cc	/^TrafficGen::parseConfig()$/;"	f	class:TrafficGen
parseLine	src/base/loader/hex_file.cc	/^HexFile::parseLine(char *Str, Addr *A, uint32_t *D)$/;"	f	class:HexFile
parseParam	src/sim/serialize.cc	/^parseParam(const string &s, T &value)$/;"	f
parseParam	src/sim/serialize.cc	/^parseParam(const string &s, bool &value)$/;"	f
parseParam	src/sim/serialize.cc	/^parseParam(const string &s, double &value)$/;"	f
parseParam	src/sim/serialize.cc	/^parseParam(const string &s, float &value)$/;"	f
parseParam	src/sim/serialize.cc	/^parseParam(const string &s, string &value)$/;"	f
parse_args	src/python/m5/options.py	/^    def parse_args(self):$/;"	m	class:OptionParser
parse_file	src/python/m5/util/grammar.py	/^    def parse_file(self, f, **kwargs):$/;"	m	class:Grammar
parse_isa_desc	src/arch/isa_parser.py	/^    def parse_isa_desc(self, *args, **kwargs):$/;"	m	class:ISAParser
parse_options	src/python/m5/main.py	/^def parse_options():$/;"	f
parse_string	src/python/m5/util/grammar.py	/^    def parse_string(self, data, source='<string>', debug=None, tracking=0):$/;"	m	class:Grammar
parse_time	src/python/m5/params.py	/^def parse_time(value):$/;"	f
partId	src/arch/sparc/isa.hh	/^    uint16_t partId;$/;"	m	class:SparcISA::ISA
partitionDescSymtab	src/arch/sparc/system.hh	/^    SymbolTable *partitionDescSymtab;$/;"	m	class:SparcSystem
partitionId	src/arch/sparc/pagetable.hh	/^    int partitionId;$/;"	m	struct:SparcISA::TlbRange
partition_desc	src/arch/sparc/SparcSystem.py	/^    partition_desc = Param.SimpleMemory($/;"	v	class:SparcSystem
partition_desc	src/arch/sparc/system.hh	/^    ObjectFile *partition_desc;$/;"	m	class:SparcSystem
partition_desc_addr	src/arch/sparc/SparcSystem.py	/^    partition_desc_addr = Param.Addr(_partition_desc_base,$/;"	v	class:SparcSystem
partition_desc_bin	src/arch/sparc/SparcSystem.py	/^    partition_desc_bin = Param.String("file that contains the partition description")$/;"	v	class:SparcSystem
passedSelfTest	src/dev/x86/i8042.hh	/^        Bitfield<2> passedSelfTest;$/;"	m	class:X86ISA::I8042
passes	src/unittest/unittest.cc	/^unsigned passes() { return _passes; }$/;"	f	namespace:UnitTest
past	src/cpu/timebuf.hh	/^    int past;$/;"	m	class:TimeBuffer
patBit	src/arch/x86/pagetable.hh	/^        bool patBit;$/;"	m	struct:X86ISA::TlbEntry
path	src/mem/slicc/parser.py	/^import os.path$/;"	i
path	src/python/m5/SimObject.py	/^    def path(self):$/;"	f
path	src/python/m5/proxy.py	/^    def path(self):$/;"	m	class:AllProxy
path	src/python/m5/proxy.py	/^    def path(self):$/;"	m	class:AnyProxy
path	src/python/m5/proxy.py	/^    def path(self):$/;"	m	class:AttrProxy
path	src/sim/Root.py	/^    def path(self):$/;"	m	class:Root
path	src/unittest/genini.py	/^import getopt, os, os.path, sys$/;"	i
pathconf	src/kern/tru64/tru64_syscalls.hh	/^        pathconf = 247,$/;"	e	enum:SystemCalls::__anon102
pathlist	src/unittest/genini.py	/^pathlist = [ '.' ]$/;"	v
pause	src/kern/linux/linux_syscalls.hh	/^    pause = 145,$/;"	e	enum:SystemCalls::__anon87
payload	src/base/inet.hh	/^    const uint8_t *payload() const { return bytes() + IP6_HDR_LEN$/;"	f	struct:Net::Ip6Hdr
payload	src/base/inet.hh	/^    const uint8_t *payload() const { return bytes() + size(); }$/;"	f	struct:Net::EthHdr
payload	src/base/inet.hh	/^    const uint8_t *payload() const { return bytes() + size(); }$/;"	f	struct:Net::IpHdr
payload	src/base/inet.hh	/^    const uint8_t *payload() const { return bytes() + size(); }$/;"	f	struct:Net::TcpHdr
payload	src/base/inet.hh	/^    const uint8_t *payload() const { return bytes() + size(); }$/;"	f	struct:Net::TcpOpt
payload	src/base/inet.hh	/^    const uint8_t *payload() const { return bytes() + size(); }$/;"	f	struct:Net::UdpHdr
payload	src/base/inet.hh	/^    uint8_t *payload() { return bytes() + IP6_HDR_LEN$/;"	f	struct:Net::Ip6Hdr
payload	src/base/inet.hh	/^    uint8_t *payload() { return bytes() + size(); }$/;"	f	struct:Net::EthHdr
payload	src/base/inet.hh	/^    uint8_t *payload() { return bytes() + size(); }$/;"	f	struct:Net::IpHdr
payload	src/base/inet.hh	/^    uint8_t *payload() { return bytes() + size(); }$/;"	f	struct:Net::TcpHdr
payload	src/base/inet.hh	/^    uint8_t *payload() { return bytes() + size(); }$/;"	f	struct:Net::TcpOpt
payload	src/base/inet.hh	/^    uint8_t *payload() { return bytes() + size(); }$/;"	f	struct:Net::UdpHdr
pb0	src/arch/x86/regs/misc.hh	/^        Bitfield<2> pb0; \/\/ Performance monitoring pin control 0$/;"	m	namespace:X86ISA
pb1	src/arch/x86/regs/misc.hh	/^        Bitfield<3> pb1; \/\/ Performance monitoring pin control 1$/;"	m	namespace:X86ISA
pb2	src/arch/x86/regs/misc.hh	/^        Bitfield<4> pb2; \/\/ Performance monitoring pin control 2$/;"	m	namespace:X86ISA
pb3	src/arch/x86/regs/misc.hh	/^        Bitfield<5> pb3; \/\/ Performance monitoring pin control 3$/;"	m	namespace:X86ISA
pba	src/dev/i8254xGBe_defs.hh	/^    PBA pba;$/;"	m	struct:iGbReg::Regs
pbao	src/dev/pcireg.h	/^        Bitfield<31,3>  pbao;$/;"	m	struct:MSIXCAP
pbir	src/dev/pcireg.h	/^        Bitfield<2,0>   pbir;$/;"	m	struct:MSIXCAP
pc	src/arch/alpha/faults.hh	/^    Addr pc;$/;"	m	class:AlphaISA::ItbFault
pc	src/arch/generic/types.hh	/^    Addr pc() const { return _pc; }$/;"	f	class:GenericISA::SimplePCState
pc	src/arch/generic/types.hh	/^    void pc(Addr val) { _pc = val; }$/;"	f	class:GenericISA::SimplePCState
pc	src/arch/mips/pra_constants.hh	/^    Bitfield<4>      pc;$/;"	m	namespace:MipsISA
pc	src/arch/x86/regs/misc.hh	/^        Bitfield<19> pc; \/\/ Pin control$/;"	m	namespace:X86ISA
pc	src/cpu/base_dyn_inst.hh	/^    TheISA::PCState pc;$/;"	m	class:BaseDynInst
pc	src/cpu/inorder/cpu.hh	/^    TheISA::PCState pc[ThePipeline::MaxThreads];$/;"	m	class:InOrderCPU
pc	src/cpu/inorder/inorder_dyn_inst.hh	/^    TheISA::PCState pc;$/;"	m	class:InOrderDynInst
pc	src/cpu/inorder/resources/fetch_seq_unit.hh	/^    TheISA::PCState pc[ThePipeline::MaxThreads];$/;"	m	class:FetchSeqUnit
pc	src/cpu/m5legion_interface.h	/^    uint64_t pc;$/;"	m	struct:__anon55
pc	src/cpu/o3/comm.hh	/^        TheISA::PCState pc; \/\/ *F$/;"	m	struct:TimeBufStruct::commitComm
pc	src/cpu/o3/comm.hh	/^    TheISA::PCState pc[Impl::MaxThreads];$/;"	m	struct:DefaultIEWDefaultCommit
pc	src/cpu/o3/commit.hh	/^    TheISA::PCState pc[Impl::MaxThreads];$/;"	m	class:DefaultCommit
pc	src/cpu/o3/fetch.hh	/^    TheISA::PCState pc[Impl::MaxThreads];$/;"	m	class:DefaultFetch
pc	src/cpu/pc_event.hh	/^    Addr pc() const { return evpc; }$/;"	f	class:PCEvent
pc	src/cpu/pred/bpred_unit.hh	/^        Addr pc;$/;"	m	struct:BPredUnit::PredictorHistory
pc	src/dev/pcireg.h	/^    PC pc;$/;"	m	struct:PMCAP
pc	src/kern/tru64/tru64.hh	/^            uint64_t pc;        \/\/!< pc$/;"	m	struct:Tru64::nxm_thread_attr::__anon100
pc	src/sim/insttracer.hh	/^    TheISA::PCState pc;$/;"	m	class:Trace::InstRecord
pcBlockStage	src/cpu/inorder/resources/fetch_seq_unit.hh	/^    int pcBlockStage[ThePipeline::MaxThreads];$/;"	m	class:FetchSeqUnit
pcEventQueue	src/sim/system.hh	/^    PCEventQueue pcEventQueue;$/;"	m	class:System
pcState	src/cpu/base_dyn_inst.hh	/^    const TheISA::PCState pcState() const { return pc; }$/;"	f	class:BaseDynInst
pcState	src/cpu/base_dyn_inst.hh	/^    const void pcState(const TheISA::PCState &val) { pc = val; }$/;"	f	class:BaseDynInst
pcState	src/cpu/checker/cpu.hh	/^    TheISA::PCState pcState() { return thread->pcState(); }$/;"	f	class:CheckerCPU
pcState	src/cpu/checker/cpu.hh	/^    void pcState(const TheISA::PCState &val)$/;"	f	class:CheckerCPU
pcState	src/cpu/checker/thread_context.hh	/^    TheISA::PCState pcState()$/;"	f	class:CheckerThreadContext
pcState	src/cpu/checker/thread_context.hh	/^    void pcState(const TheISA::PCState &val)$/;"	f	class:CheckerThreadContext
pcState	src/cpu/inorder/cpu.hh	/^    pcState(ThreadID tid)$/;"	f	class:InOrderCPU
pcState	src/cpu/inorder/cpu.hh	/^    pcState(const TheISA::PCState &newPC, ThreadID tid)$/;"	f	class:InOrderCPU
pcState	src/cpu/inorder/inorder_dyn_inst.hh	/^    const TheISA::PCState &pcState() const { return pc; }$/;"	f	class:InOrderDynInst
pcState	src/cpu/inorder/inorder_dyn_inst.hh	/^    void pcState(const TheISA::PCState &_pc) { pc = _pc; }$/;"	f	class:InOrderDynInst
pcState	src/cpu/inorder/thread_context.hh	/^    TheISA::PCState pcState()$/;"	f	class:InOrderThreadContext
pcState	src/cpu/inorder/thread_context.hh	/^    void pcState(const TheISA::PCState &val)$/;"	f	class:InOrderThreadContext
pcState	src/cpu/o3/commit.hh	/^    TheISA::PCState pcState(ThreadID tid) { return pc[tid]; }$/;"	f	class:DefaultCommit
pcState	src/cpu/o3/commit.hh	/^    void pcState(const TheISA::PCState &val, ThreadID tid)$/;"	f	class:DefaultCommit
pcState	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::pcState(ThreadID tid)$/;"	f	class:FullO3CPU
pcState	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::pcState(const TheISA::PCState &val, ThreadID tid)$/;"	f	class:FullO3CPU
pcState	src/cpu/o3/thread_context.hh	/^    virtual TheISA::PCState pcState()$/;"	f	class:O3ThreadContext
pcState	src/cpu/o3/thread_context_impl.hh	/^O3ThreadContext<Impl>::pcState(const TheISA::PCState &val)$/;"	f	class:O3ThreadContext
pcState	src/cpu/simple/base.hh	/^    TheISA::PCState pcState() { return thread->pcState(); }$/;"	f	class:BaseSimpleCPU
pcState	src/cpu/simple/base.hh	/^    void pcState(const TheISA::PCState &val) { thread->pcState(val); }$/;"	f	class:BaseSimpleCPU
pcState	src/cpu/simple_thread.hh	/^    pcState()$/;"	f	class:SimpleThread
pcState	src/cpu/simple_thread.hh	/^    pcState(const TheISA::PCState &val)$/;"	f	class:SimpleThread
pcState	src/cpu/thread_context.hh	/^    TheISA::PCState pcState() { return actualTC->pcState(); }$/;"	f	class:ProxyThreadContext
pcState	src/cpu/thread_context.hh	/^    void pcState(const TheISA::PCState &val) { actualTC->pcState(val); }$/;"	f	class:ProxyThreadContext
pcStateNoRecord	src/cpu/checker/thread_context.hh	/^    void pcStateNoRecord(const TheISA::PCState &val)$/;"	f	class:CheckerThreadContext
pcStateNoRecord	src/cpu/inorder/thread_context.hh	/^    void pcStateNoRecord(const TheISA::PCState &val)$/;"	f	class:InOrderThreadContext
pcStateNoRecord	src/cpu/o3/thread_context_impl.hh	/^O3ThreadContext<Impl>::pcStateNoRecord(const TheISA::PCState &val)$/;"	f	class:O3ThreadContext
pcStateNoRecord	src/cpu/simple_thread.hh	/^    pcStateNoRecord(const TheISA::PCState &val)$/;"	f	class:SimpleThread
pcStateNoRecord	src/cpu/thread_context.hh	/^    void pcStateNoRecord(const TheISA::PCState &val) { actualTC->pcState(val); }$/;"	f	class:ProxyThreadContext
pcValid	src/cpu/inorder/resources/fetch_seq_unit.hh	/^    bool pcValid[ThePipeline::MaxThreads];$/;"	m	class:FetchSeqUnit
pc_count	src/cpu/profile.hh	/^    std::map<Addr, Counter> pc_count;$/;"	m	class:FunctionProfile
pc_map	src/cpu/pc_event.hh	/^    map_t pc_map;$/;"	m	class:PCEventQueue
pcap_file_header	src/dev/etherdump.cc	/^struct pcap_file_header {$/;"	s	file:
pcap_pkthdr	src/dev/etherdump.cc	/^struct pcap_pkthdr {$/;"	s	file:
pcb	src/arch/mips/linux/thread_info.hh	/^        struct pcb_struct       pcb;$/;"	m	struct:Linux::thread_info	typeref:struct:Linux::thread_info::pcb_struct
pcb_struct	src/arch/mips/linux/hwrpb.hh	/^    struct pcb_struct {$/;"	s	namespace:Linux
pcbb	src/arch/generic/linux/threadinfo.hh	/^    Addr pcbb;$/;"	m	class:Linux::ThreadInfo
pcc	src/arch/x86/regs/misc.hh	/^        Bitfield<57> pcc; \/\/ Processor-context corrupt$/;"	m	namespace:X86ISA
pcd	src/arch/x86/pagetable_walker.cc	/^    Bitfield<4> pcd;$/;"	m	namespace:X86ISA	file:
pcd	src/arch/x86/regs/misc.hh	/^        Bitfield<4> pcd; \/\/ Page-Level Cache Disable$/;"	m	namespace:X86ISA
pcdhi	src/dev/arm/pl111.hh	/^        Bitfield<31,27> pcdhi;$/;"	m	class:Pl111
pcdlo	src/dev/arm/pl111.hh	/^        Bitfield<4,0> pcdlo;$/;"	m	class:Pl111
pce	src/arch/x86/regs/misc.hh	/^        Bitfield<8> pce; \/\/ Performance-Monitoring Counter Enable$/;"	m	namespace:X86ISA
pchip	src/dev/alpha/Tsunami.py	/^    pchip = TsunamiPChip(pio_addr=0x80180000000)$/;"	v	class:Tsunami
pchip	src/dev/alpha/tsunami.hh	/^    TsunamiPChip *pchip;$/;"	m	class:Tsunami
pchip	src/dev/mips/malta.hh	/^    MaltaPChip *pchip;$/;"	m	class:Malta
pci	src/arch/mips/pra_constants.hh	/^    Bitfield<26>     pci;$/;"	m	namespace:MipsISA
pciDevices	src/dev/platform.hh	/^    std::set<uint32_t> pciDevices;$/;"	m	class:Platform
pciToDma	src/dev/alpha/tsunami.cc	/^Tsunami::pciToDma(Addr pciAddr) const$/;"	f	class:Tsunami
pciToDma	src/dev/arm/realview.cc	/^RealView::pciToDma(Addr pciAddr) const$/;"	f	class:RealView
pciToDma	src/dev/i8254xGBe.hh	/^        Addr pciToDma(Addr a) { return igbe->platform->pciToDma(a); }$/;"	f	class:IGbE::DescCache
pciToDma	src/dev/ide_disk.cc	/^IdeDisk::pciToDma(Addr pciAddr)$/;"	f	class:IdeDisk
pciToDma	src/dev/mips/malta.cc	/^Malta::pciToDma(Addr pciAddr) const$/;"	f	class:Malta
pciToDma	src/dev/pcidev.hh	/^    Addr pciToDma(Addr pciAddr) const$/;"	f	class:PciDevice
pciToDma	src/dev/platform.cc	/^Platform::pciToDma(Addr pciAddr) const$/;"	f	class:Platform
pciToDma	src/dev/sparc/t1000.cc	/^T1000::pciToDma(Addr pciAddr) const$/;"	f	class:T1000
pciToDma	src/dev/x86/pc.cc	/^Pc::pciToDma(Addr pciAddr) const$/;"	f	class:Pc
pci_bus	src/dev/Pci.py	/^    pci_bus = Param.Int("PCI bus")$/;"	v	class:PciDevice
pci_cfg_base	src/dev/arm/RealView.py	/^    pci_cfg_base = 0x30000000$/;"	v	class:VExpress_EMM
pci_cfg_base	src/dev/arm/RealView.py	/^    pci_cfg_base = Param.Addr(0, "Base address of PCI Configuraiton Space")$/;"	v	class:RealView
pci_dev	src/dev/Pci.py	/^    pci_dev = Param.Int("PCI device number")$/;"	v	class:PciDevice
pci_func	src/dev/Pci.py	/^    pci_func = Param.Int("PCI function code")$/;"	v	class:PciDevice
pciconfig	src/dev/alpha/Tsunami.py	/^    pciconfig = PciConfigAll()$/;"	v	class:Tsunami
pciconfig	src/dev/arm/RealView.py	/^    pciconfig = PciConfigAll(size='256MB')$/;"	v	class:VExpress_EMM
pciconfig	src/dev/x86/Pc.py	/^    pciconfig = PciConfigAll()$/;"	v	class:Pc
pcp	src/arch/mips/mt_constants.hh	/^    Bitfield<27>     pcp;$/;"	m	namespace:MipsISA
pcr	src/dev/ns_gige.hh	/^    uint32_t    pcr;$/;"	m	struct:dp_regs
pcreg	src/base/loader/coff_sym.h	/^    coff_short  pcreg;          \/* offset or reg of return pc *\/$/;"	m	struct:pdr
pctl	src/dev/alpha/tsunami_pchip.hh	/^    uint64_t pctl;$/;"	m	class:TsunamiPChip
pctl	src/dev/mips/malta_pchip.hh	/^    uint64_t pctl;$/;"	m	class:MaltaPChip
pd0	src/arch/arm/miscregs.hh	/^        Bitfield<4> pd0;$/;"	m	namespace:ArmISA
pd1	src/arch/arm/miscregs.hh	/^        Bitfield<5> pd1;$/;"	m	namespace:ArmISA
pdNil	src/base/loader/coff_sym.h	/^#define pdNil /;"	d
pdb	src/python/m5/main.py	/^        import pdb$/;"	i
pdf	src/base/stats/info.hh	/^const FlagsType pdf =           0x0020;$/;"	m	namespace:Stats
pdf	src/base/stats/text.cc	/^    Result pdf;$/;"	m	struct:Stats::ScalarPrint	file:
pdr	src/base/loader/coff_sym.h	/^typedef struct pdr {$/;"	s
pdtb	src/arch/x86/regs/misc.hh	/^        Bitfield<31, 12> pdtb; \/\/ Non-PAE Addressing Page-Directory-Table$/;"	m	namespace:X86ISA
pe	src/arch/x86/regs/misc.hh	/^        Bitfield<0> pe; \/\/ Protection Enabled$/;"	m	namespace:X86ISA
peakBW	src/mem/dram_ctrl.hh	/^    Stats::Formula peakBW;$/;"	m	class:DRAMCtrl
peak_inst_count	src/cpu/ozone/back_end.hh	/^        Stats::Vector peak_inst_count;$/;"	m	class:BackEnd::InstQueue
pebi	src/python/m5/util/convert.py	/^pebi = tebi * 1024$/;"	v
peek	src/mem/ruby/buffers/MessageBuffer.cc	/^MessageBuffer::peek() const$/;"	f	class:MessageBuffer
peek	src/mem/ruby/system/RubyMemoryControl.cc	/^RubyMemoryControl::peek()$/;"	f	class:RubyMemoryControl
peek	src/mem/ruby/system/WireBuffer.cc	/^WireBuffer::peek()$/;"	f	class:WireBuffer
peekLink	src/mem/ruby/network/garnet/fixed-pipeline/NetworkLink_d.hh	/^    inline flit_d* peekLink()       { return linkBuffer->peekTopFlit(); }$/;"	f	class:NetworkLink_d
peekLink	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.cc	/^NetworkLink::peekLink()$/;"	f	class:NetworkLink
peekMsgPtr	src/mem/ruby/buffers/MessageBuffer.hh	/^    peekMsgPtr() const$/;"	f	class:MessageBuffer
peekNode	src/mem/ruby/system/RubyMemoryControl.cc	/^RubyMemoryControl::peekNode()$/;"	f	class:RubyMemoryControl
peekNode	src/mem/ruby/system/WireBuffer.cc	/^WireBuffer::peekNode()$/;"	f	class:WireBuffer
peekTopFlit	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.hh	/^    peekTopFlit(int vc)$/;"	f	class:InputUnit_d
peekTopFlit	src/mem/ruby/network/garnet/fixed-pipeline/VirtualChannel_d.hh	/^    peekTopFlit()$/;"	f	class:VirtualChannel_d
peekTopFlit	src/mem/ruby/network/garnet/fixed-pipeline/flitBuffer_d.hh	/^    peekTopFlit()$/;"	f	class:flitBuffer_d
peekTopFlit	src/mem/ruby/network/garnet/flexible-pipeline/flitBuffer.cc	/^flitBuffer::peekTopFlit()$/;"	f	class:flitBuffer
peer	src/dev/etherint.hh	/^    EtherInt *peer;$/;"	m	class:EtherInt
peer	src/mem/ruby/slicc_interface/Controller.py	/^    peer = Param.RubyController(NULL, "")$/;"	v	class:RubyController
peerQueueMap	src/mem/ruby/slicc_interface/AbstractController.hh	/^    std::map<uint32_t, MessageBuffer*> peerQueueMap;$/;"	m	class:AbstractController
pef	src/arch/sparc/miscregs.hh	/^    Bitfield<4> pef;$/;"	m	namespace:SparcISA
peim	src/dev/arm/pl011.hh	/^        Bitfield<8> peim;$/;"	m	class:Pl011
pen64ReleaseAddr	src/arch/arm/linux/system.hh	/^    Addr pen64ReleaseAddr;$/;"	m	class:LinuxArmSystem
penReleaseAddr	src/arch/arm/linux/system.hh	/^    Addr penReleaseAddr;$/;"	m	class:LinuxArmSystem
pend	src/dev/sparc/iob.hh	/^        bool pend;$/;"	m	struct:Iob::IntCtl
pending	src/arch/arm/table_walker.hh	/^    bool pending;$/;"	m	class:ArmISA::TableWalker
pendingCount	src/dev/dma_device.hh	/^    uint32_t pendingCount;$/;"	m	class:DmaPort
pendingDelete	src/mem/cache/cache.hh	/^    std::vector<PacketPtr> pendingDelete;$/;"	m	class:Cache
pendingDelete	src/mem/dram_ctrl.hh	/^    std::vector<PacketPtr> pendingDelete;$/;"	m	class:DRAMCtrl
pendingDelete	src/mem/dramsim2.hh	/^    std::vector<PacketPtr> pendingDelete;$/;"	m	class:DRAMSim2
pendingDelete	src/mem/simple_mem.hh	/^    std::vector<PacketPtr> pendingDelete;$/;"	m	class:SimpleMemory
pendingDelete	src/mem/tport.hh	/^    std::vector<PacketPtr> pendingDelete;$/;"	m	class:SimpleTimingPort
pendingDirty	src/mem/cache/mshr.hh	/^    bool pendingDirty;$/;"	m	class:MSHR
pendingExtInt	src/arch/x86/interrupts.hh	/^    bool pendingExtInt;$/;"	m	class:X86ISA::Interrupts
pendingFetch	src/cpu/inorder/resources/fetch_unit.hh	/^    std::list<FetchBlock*> pendingFetch;$/;"	m	class:FetchUnit
pendingIPIs	src/arch/x86/interrupts.hh	/^    int pendingIPIs;$/;"	m	class:X86ISA::Interrupts
pendingInit	src/arch/x86/interrupts.hh	/^    bool pendingInit;$/;"	m	class:X86ISA::Interrupts
pendingInt	src/dev/arm/gic_pl390.hh	/^    uint32_t pendingInt[INT_BITS_MAX];$/;"	m	class:Pl390
pendingInt	src/dev/arm/rtc_pl031.hh	/^    bool pendingInt;$/;"	m	class:PL031
pendingInt	src/dev/arm/timer_sp804.hh	/^        bool pendingInt;$/;"	m	class:Sp804::Timer
pendingIntTimer	src/dev/arm/timer_cpulocal.hh	/^        bool pendingIntTimer;$/;"	m	class:CpuLocalTimer::Timer
pendingIntWatchdog	src/dev/arm/timer_cpulocal.hh	/^        bool pendingIntWatchdog;$/;"	m	class:CpuLocalTimer::Timer
pendingNmi	src/arch/x86/interrupts.hh	/^    bool pendingNmi;$/;"	m	class:X86ISA::Interrupts
pendingPacket	src/cpu/o3/lsq_unit.hh	/^        PacketPtr pendingPacket;$/;"	m	class:LSQUnit::LSQSenderState
pendingPkt	src/cpu/o3/lsq_unit.hh	/^    PacketPtr pendingPkt;$/;"	m	class:LSQUnit
pendingQueue	src/arch/arm/table_walker.hh	/^    std::list<WalkerState *> pendingQueue;$/;"	m	class:ArmISA::TableWalker
pendingSmi	src/arch/x86/interrupts.hh	/^    bool pendingSmi;$/;"	m	class:X86ISA::Interrupts
pendingStartup	src/arch/x86/interrupts.hh	/^    bool pendingStartup;$/;"	m	class:X86ISA::Interrupts
pendingUnmaskableInt	src/arch/x86/interrupts.hh	/^    bool pendingUnmaskableInt;$/;"	m	class:X86ISA::Interrupts
perBankRdBursts	src/mem/dram_ctrl.hh	/^    Stats::Vector perBankRdBursts;$/;"	m	class:DRAMCtrl
perBankWrBursts	src/mem/dram_ctrl.hh	/^    Stats::Vector perBankWrBursts;$/;"	m	class:DRAMCtrl
perProcessor	src/arch/mips/isa.hh	/^            perProcessor,$/;"	e	enum:MipsISA::ISA::BankType
perThreadContext	src/arch/mips/isa.hh	/^            perThreadContext,$/;"	e	enum:MipsISA::ISA::BankType
perVirtProcessor	src/arch/mips/isa.hh	/^            perVirtProcessor$/;"	e	enum:MipsISA::ISA::BankType
percentDestUnaligned	src/cpu/testers/memtest/memtest.hh	/^    unsigned percentDestUnaligned;$/;"	m	class:MemTest
percentFunctional	src/cpu/testers/memtest/memtest.hh	/^    unsigned percentFunctional; \/\/ target percentage of functional accesses$/;"	m	class:MemTest
percentOccsTaskId	src/mem/cache/tags/base.hh	/^    Stats::Formula percentOccsTaskId;$/;"	m	class:BaseTags
percentReads	src/cpu/testers/memtest/memtest.hh	/^    unsigned percentReads;      \/\/ target percentage of read accesses$/;"	m	class:MemTest
percentSourceUnaligned	src/cpu/testers/memtest/memtest.hh	/^    unsigned percentSourceUnaligned;$/;"	m	class:MemTest
percentUncacheable	src/cpu/testers/memtest/memtest.hh	/^    unsigned percentUncacheable;$/;"	m	class:MemTest
percent_dest_unaligned	src/cpu/testers/memtest/MemTest.py	/^    percent_dest_unaligned = Param.Percent(50,$/;"	v	class:MemTest
percent_functional	src/cpu/testers/memtest/MemTest.py	/^    percent_functional = Param.Percent(50, "percent of access that are functional")$/;"	v	class:MemTest
percent_reads	src/cpu/testers/memtest/MemTest.py	/^    percent_reads = Param.Percent(65, "target read percentage")$/;"	v	class:MemTest
percent_source_unaligned	src/cpu/testers/memtest/MemTest.py	/^    percent_source_unaligned = Param.Percent(50,$/;"	v	class:MemTest
percent_uncacheable	src/cpu/testers/memtest/MemTest.py	/^    percent_uncacheable = Param.Percent(10,$/;"	v	class:MemTest
percent_writes	src/cpu/testers/directedtest/RubyDirectedTester.py	/^    percent_writes = Param.Percent(50, "percent of access that are writes")$/;"	v	class:SeriesRequestGenerator
perfControlledByTimer	src/cpu/kvm/base.hh	/^    bool perfControlledByTimer;$/;"	m	class:BaseKvmCPU
perfectMatch	src/dev/ns_gige.hh	/^    uint8_t perfectMatch[ETH_ADDR_LEN];$/;"	m	struct:dp_rom
performCallback	src/cpu/testers/directedtest/InvalidateGenerator.cc	/^InvalidateGenerator::performCallback(uint32_t proc, Addr address)$/;"	f	class:InvalidateGenerator
performCallback	src/cpu/testers/directedtest/SeriesRequestGenerator.cc	/^SeriesRequestGenerator::performCallback(uint32_t proc, Addr address)$/;"	f	class:SeriesRequestGenerator
performCallback	src/cpu/testers/rubytest/Check.cc	/^Check::performCallback(NodeID proc, SubBlock* data, Time curTime)$/;"	f	class:Check
period	src/cpu/kvm/perfevent.cc	/^PerfKvmCounter::period(uint64_t period)$/;"	f	class:PerfKvmCounter
period	src/dev/arm/generic_timer.hh	/^        Tick period() const { return _period; }$/;"	f	class:GenericTimer::SystemCounter
period	src/dev/intel_8254_timer.hh	/^        uint16_t period;$/;"	m	class:Intel8254Timer::Counter
periodic	src/arch/x86/interrupts.hh	/^        Bitfield<17> periodic;$/;"	m	class:X86ISA::Interrupts
periodicStatDump	src/sim/stat_control.cc	/^periodicStatDump(Tick period)$/;"	f	namespace:Stats
permsFaults	src/arch/arm/tlb.hh	/^    mutable Stats::Scalar permsFaults;$/;"	m	class:ArmISA::TLB
permute	src/mem/ruby/filters/BulkBloomFilter.cc	/^BulkBloomFilter::permute(const Address & addr)$/;"	f	class:BulkBloomFilter
persistentRequestLock	src/mem/ruby/system/PersistentTable.cc	/^PersistentTable::persistentRequestLock(const Address& address,$/;"	f	class:PersistentTable
persistentRequestUnlock	src/mem/ruby/system/PersistentTable.cc	/^PersistentTable::persistentRequestUnlock(const Address& address,$/;"	f	class:PersistentTable
personality	src/kern/linux/linux_syscalls.hh	/^    personality = 146,$/;"	e	enum:SystemCalls::__anon87
peta	src/python/m5/util/convert.py	/^peta = 1.0e15$/;"	v
pf	src/arch/x86/regs/misc.hh	/^        Bitfield<2> pf; \/\/ Parity Flag$/;"	m	namespace:X86ISA
pf	src/arch/x86/regs/misc.hh	/^        Bitfield<2> pf;$/;"	m	namespace:X86ISA
pf	src/mem/cache/prefetch/base.hh	/^    std::list<DeferredPacket> pf;$/;"	m	class:BasePrefetcher
pfBufferHit	src/mem/cache/prefetch/base.hh	/^    Stats::Scalar pfBufferHit;$/;"	m	class:BasePrefetcher
pfCacheHit	src/mem/cache/prefetch/base.hh	/^    Stats::Scalar pfCacheHit;$/;"	m	class:BasePrefetcher
pfIdentified	src/mem/cache/prefetch/base.hh	/^    Stats::Scalar pfIdentified;$/;"	m	class:BasePrefetcher
pfIssued	src/mem/cache/prefetch/base.hh	/^    Stats::Scalar pfIssued;$/;"	m	class:BasePrefetcher
pfMSHRHit	src/mem/cache/prefetch/base.hh	/^    Stats::Scalar pfMSHRHit;$/;"	m	class:BasePrefetcher
pfRemovedFull	src/mem/cache/prefetch/base.hh	/^    Stats::Scalar pfRemovedFull;$/;"	m	class:BasePrefetcher
pfRemovedMSHR	src/mem/cache/prefetch/base.hh	/^    Stats::Scalar pfRemovedMSHR;$/;"	m	class:BasePrefetcher
pfSpanPage	src/mem/cache/prefetch/base.hh	/^    Stats::Scalar pfSpanPage;$/;"	m	class:BasePrefetcher
pfSquashed	src/mem/cache/prefetch/base.hh	/^    Stats::Scalar pfSquashed;$/;"	m	class:BasePrefetcher
pf_per_stream	src/mem/ruby/structures/RubyPrefetcher.py	/^    pf_per_stream = Param.UInt32(1, "Number of prefetches per stream")$/;"	v	class:Prefetcher
pfd	src/base/pollevent.hh	/^    pollfd pfd;$/;"	m	class:PollEvent
pfe	src/dev/pcireg.h	/^        Bitfield<9>     pfe;$/;"	m	struct:PXCAP
pfn	src/arch/arm/pagetable.hh	/^    Addr pfn;$/;"	m	struct:ArmISA::TlbEntry
pfn	src/arch/arm/table_walker.hh	/^        Addr pfn() const$/;"	f	class:ArmISA::TableWalker::L1Descriptor
pfn	src/arch/arm/table_walker.hh	/^        Addr pfn() const$/;"	f	class:ArmISA::TableWalker::L2Descriptor
pfn	src/arch/arm/table_walker.hh	/^        Addr pfn() const$/;"	f	class:ArmISA::TableWalker::LongDescriptor
pfn	src/arch/mips/pra_constants.hh	/^    Bitfield<29, 6>  pfn;   \/\/ Page frame number$/;"	m	namespace:MipsISA
pfn	src/arch/sparc/pagetable.hh	/^    Addr pfn()      const { assert(populated); return bits(entry4u,39,13); }$/;"	f	class:SparcISA::PageTableEntry
pfs	src/dev/pcireg.h	/^        Bitfield<4,3>   pfs;$/;"	m	struct:PXCAP
pg	src/arch/x86/regs/misc.hh	/^        Bitfield<31> pg; \/\/ Paging$/;"	m	namespace:X86ISA
pge	src/arch/x86/regs/misc.hh	/^        Bitfield<7> pge; \/\/ Page-Global Enable$/;"	m	namespace:X86ISA
phy_epid	src/dev/Ethernet.py	/^    phy_epid = 0x0380$/;"	v	class:IGbE_e1000
phy_epid	src/dev/Ethernet.py	/^    phy_epid = 0x0CC0$/;"	v	class:IGbE_igb
phy_epid	src/dev/Ethernet.py	/^    phy_epid = Param.UInt16("Phy EPID that corresponds to device ID")$/;"	v	class:IGbE
phy_pid	src/dev/Ethernet.py	/^    phy_pid = 0x0141$/;"	v	class:IGbE_igb
phy_pid	src/dev/Ethernet.py	/^    phy_pid = 0x02A8$/;"	v	class:IGbE_e1000
phy_pid	src/dev/Ethernet.py	/^    phy_pid = Param.UInt16("Phy PID that corresponds to device ID")$/;"	v	class:IGbE
physAddr	src/arch/x86/regs/misc.hh	/^        Bitfield<51,23> physAddr; \/\/ Top of memory physical address$/;"	m	namespace:X86ISA
physAddrMask	src/arch/arm/system.cc	/^ArmSystem::physAddrMask(ThreadContext *tc)$/;"	f	class:ArmSystem
physAddrMask	src/arch/arm/system.hh	/^    Addr physAddrMask() const$/;"	f	class:ArmSystem
physAddrRange	src/arch/arm/system.cc	/^ArmSystem::physAddrRange(ThreadContext *tc)$/;"	f	class:ArmSystem
physAddrRange	src/arch/arm/system.hh	/^    uint8_t physAddrRange() const$/;"	f	class:ArmSystem
physAddrRange	src/arch/arm/table_walker.hh	/^        int physAddrRange;$/;"	m	class:ArmISA::TableWalker::WalkerState
physAddrRange	src/arch/arm/table_walker.hh	/^    uint8_t physAddrRange;$/;"	m	class:ArmISA::TableWalker
physAddrRange64	src/arch/arm/isa.hh	/^        uint8_t physAddrRange64;$/;"	m	class:ArmISA::ISA
physAddrRange64	src/arch/arm/system.hh	/^    uint8_t physAddrRange64() const { return _physAddrRange64; }$/;"	f	class:ArmSystem
physEffAddr	src/cpu/base_dyn_inst.hh	/^    Addr physEffAddr;$/;"	m	class:BaseDynInst
physEffAddr	src/cpu/inorder/inorder_dyn_inst.hh	/^    Addr physEffAddr;$/;"	m	class:InOrderDynInst
physProxy	src/cpu/thread_state.hh	/^    PortProxy *physProxy;$/;"	m	struct:ThreadState
physProxy	src/sim/system.hh	/^    PortProxy physProxy;$/;"	m	class:System
phys_addr_range_64	src/arch/arm/ArmSystem.py	/^    phys_addr_range_64 = Param.UInt8(40,$/;"	v	class:ArmSystem
physbase	src/arch/x86/regs/misc.hh	/^        Bitfield<51, 12> physbase; \/\/ Range physical base address$/;"	m	namespace:X86ISA
physbase	src/arch/x86/regs/misc.hh	/^        Bitfield<51,12> physbase; \/\/ Range physical base address$/;"	m	namespace:X86ISA
physical_address_t	src/mem/ruby/common/TypeDefines.hh	/^typedef uint64 physical_address_t;$/;"	t
physmask	src/arch/x86/regs/misc.hh	/^        Bitfield<51, 12> physmask; \/\/ Range physical mask$/;"	m	namespace:X86ISA
physmask	src/arch/x86/regs/misc.hh	/^        Bitfield<51,12> physmask; \/\/ Range physical mask$/;"	m	namespace:X86ISA
physmem	src/sim/system.hh	/^    PhysicalMemory physmem;$/;"	m	class:System
pic	src/dev/arm/hdlcd.hh	/^    std::ostream *pic;$/;"	m	class:HDLcd
pic	src/dev/arm/pl111.hh	/^    std::ostream *pic;$/;"	m	class:Pl111
pic1	src/dev/x86/SouthBridge.py	/^    pic1 = Param.I8259(_pic1, "Master PIC")$/;"	v	class:SouthBridge
pic1	src/dev/x86/south_bridge.hh	/^    X86ISA::I8259 * pic1;$/;"	m	class:SouthBridge
pic2	src/dev/x86/SouthBridge.py	/^    pic2 = Param.I8259(_pic2, "Slave PIC")$/;"	v	class:SouthBridge
pic2	src/dev/x86/south_bridge.hh	/^    X86ISA::I8259 * pic2;$/;"	m	class:SouthBridge
picInterrupting	src/dev/alpha/tsunami_io.hh	/^    bool picInterrupting;$/;"	m	class:TsunamiIO
picInterrupting	src/dev/mips/malta_io.hh	/^    bool picInterrupting;$/;"	m	class:MaltaIO
pick	src/arch/x86/insts/static_inst.hh	/^        inline uint64_t pick(uint64_t from, int idx, int size) const$/;"	f	class:X86ISA::X86StaticInst
pickInitiatingNode	src/cpu/testers/rubytest/Check.cc	/^Check::pickInitiatingNode()$/;"	f	class:Check
pickValue	src/cpu/testers/rubytest/Check.cc	/^Check::pickValue()$/;"	f	class:Check
pico	src/python/m5/util/convert.py	/^pico  = 1.0e-12$/;"	v
picr	src/dev/alpha/tsunami_io.hh	/^    uint8_t picr; \/\/Raw PIC interrput register$/;"	m	class:TsunamiIO
picr	src/dev/mips/malta_io.hh	/^    uint8_t picr; \/\/Raw PIC interrput register$/;"	m	class:MaltaIO
pid	src/arch/alpha/stacktrace.cc	/^ProcessInfo::pid(Addr ksp) const$/;"	f	class:AlphaISA::ProcessInfo
pid	src/arch/arm/stacktrace.cc	/^    ProcessInfo::pid(Addr ksp) const$/;"	f	class:ArmISA::ProcessInfo
pid	src/arch/mips/stacktrace.cc	/^ProcessInfo::pid(Addr ksp) const$/;"	f	class:ProcessInfo
pid	src/arch/power/stacktrace.cc	/^ProcessInfo::pid(Addr ksp) const$/;"	f	class:PowerISA::ProcessInfo
pid	src/arch/x86/stacktrace.cc	/^    ProcessInfo::pid(Addr ksp) const$/;"	f	class:X86ISA::ProcessInfo
pid	src/dev/pcireg.h	/^    PID pid;$/;"	m	struct:PMCAP
pid	src/mem/page_table.hh	/^    const uint64_t pid;$/;"	m	class:PageTable
pid	src/sim/Process.py	/^    pid = Param.Int(100, 'process id')$/;"	v	class:LiveProcess
pid	src/sim/process.hh	/^    inline uint64_t pid() {return __pid;}$/;"	f	class:LiveProcess
pid0	src/arch/sparc/miscregs.hh	/^    Bitfield<10> pid0;$/;"	m	namespace:SparcISA
pid1	src/arch/sparc/miscregs.hh	/^    Bitfield<11> pid1;$/;"	m	namespace:SparcISA
pid_block	src/kern/tru64/tru64_syscalls.hh	/^        pid_block = 153,$/;"	e	enum:SystemCalls::__anon102
pid_off	src/arch/alpha/stacktrace.hh	/^    int pid_off;$/;"	m	class:AlphaISA::ProcessInfo
pid_off	src/arch/arm/stacktrace.hh	/^    int pid_off;$/;"	m	class:ArmISA::ProcessInfo
pid_off	src/arch/mips/stacktrace.hh	/^    int pid_off;$/;"	m	class:MipsISA::ProcessInfo
pid_off	src/arch/power/stacktrace.hh	/^    int pid_off;$/;"	m	class:PowerISA::ProcessInfo
pid_off	src/arch/x86/stacktrace.hh	/^        int pid_off;$/;"	m	class:X86ISA::ProcessInfo
pid_unblock	src/kern/tru64/tru64_syscalls.hh	/^        pid_unblock = 154,$/;"	e	enum:SystemCalls::__anon102
pie	src/dev/mc146818.hh	/^        Bitfield<6> pie;       \/\/\/ 1 = enable periodic clock interrupt$/;"	m	class:MC146818
pil	src/arch/sparc/isa.hh	/^    uint8_t pil;            \/\/ Process Interrupt Register$/;"	m	class:SparcISA::ISA
pil	src/cpu/m5legion_interface.h	/^    uint8_t pil;$/;"	m	struct:__anon55
pin	src/dev/x86/I82094AA.py	/^    def pin(self, line):$/;"	m	class:I82094AA
pin	src/dev/x86/I8259.py	/^    def pin(self, line):$/;"	m	class:I8259
pinStates	src/dev/x86/i82094aa.hh	/^    bool pinStates[TableSize];$/;"	m	class:X86ISA::I82094AA
pinStates	src/dev/x86/i8259.hh	/^    bool pinStates[NumLines];$/;"	m	class:X86ISA::I8259
pinned	src/cpu/kvm/perfevent.hh	/^    PerfKvmCounterConfig &pinned(bool val) {$/;"	f	class:PerfKvmCounterConfig
pio	src/dev/Device.py	/^    pio = SlavePort("Programmed I\/O port")$/;"	v	class:PioDevice
pioAddr	src/dev/arm/amba_device.hh	/^    Addr     pioAddr;$/;"	m	class:AmbaDmaDevice
pioAddr	src/dev/io_device.hh	/^    Addr pioAddr;$/;"	m	class:BasicPioDevice
pioDelay	src/dev/arm/amba_device.hh	/^    Tick     pioDelay;$/;"	m	class:AmbaDmaDevice
pioDelay	src/dev/arm/vgic.hh	/^    Tick pioDelay;$/;"	m	class:VGic
pioDelay	src/dev/io_device.hh	/^    Tick pioDelay;$/;"	m	class:BasicPioDevice
pioDelay	src/dev/pcidev.hh	/^    Tick pioDelay;$/;"	m	class:PciDevice
pioDelay	src/dev/sparc/iob.hh	/^    Tick pioDelay;$/;"	m	class:Iob
pioMasterPort	src/mem/ruby/system/RubyPort.hh	/^    PioMasterPort pioMasterPort;$/;"	m	class:RubyPort
pioPort	src/dev/io_device.hh	/^    PioPort pioPort;$/;"	m	class:PioDevice
pioSize	src/dev/arm/amba_device.hh	/^    Addr     pioSize;$/;"	m	class:AmbaDmaDevice
pioSize	src/dev/io_device.hh	/^    Addr pioSize;$/;"	m	class:BasicPioDevice
pioSlavePort	src/mem/ruby/system/RubyPort.hh	/^    PioSlavePort pioSlavePort;$/;"	m	class:RubyPort
pio_addr	src/dev/Device.py	/^    pio_addr = 0$/;"	v	class:BadAddr
pio_addr	src/dev/Device.py	/^    pio_addr = Param.Addr("Device Address")$/;"	v	class:BasicPioDevice
pio_addr	src/dev/Pci.py	/^    pio_addr = 0 # will be overridden by platform-based calculation$/;"	v	class:PciConfigAll
pio_addr	src/dev/arm/RealView.py	/^    pio_addr = Param.Addr("Address for AMBA slave interface")$/;"	v	class:AmbaDmaDevice
pio_addr	src/dev/sparc/T1000.py	/^    pio_addr = 0x1F40000000$/;"	v	class:MmDisk
pio_addr	src/dev/sparc/T1000.py	/^    pio_addr = 0xfff0c1fff8$/;"	v	class:DumbTOD
pio_addr	src/dev/x86/I8042.py	/^    pio_addr = 0x0$/;"	v	class:I8042
pio_delay	src/dev/arm/RealView.py	/^    pio_delay = Param.Latency('10ns', "Delay for PIO r\/w")$/;"	v	class:VGic
pio_latency	src/dev/Device.py	/^    pio_latency = Param.Latency('100ns', "Programmed IO latency")$/;"	v	class:BasicPioDevice
pio_latency	src/dev/Pci.py	/^    pio_latency = '30ns'$/;"	v	class:PciConfigAll
pio_latency	src/dev/Pci.py	/^    pio_latency = Param.Latency('30ns', "Programmed IO latency")$/;"	v	class:PciDevice
pio_latency	src/dev/arm/RealView.py	/^    pio_latency = Param.Latency("10ns", "Time between action and write\/read result by AMBA DMA Device")$/;"	v	class:AmbaDmaDevice
pio_latency	src/dev/sparc/T1000.py	/^    pio_latency = Param.Latency('1ns', "Programed IO latency")$/;"	v	class:Iob
pio_master_port	src/mem/ruby/system/Sequencer.py	/^    pio_master_port = MasterPort("Ruby mem master port")$/;"	v	class:RubyPort
pio_size	src/dev/Device.py	/^    pio_size = Param.Addr(0x8, "Size of address range")$/;"	v	class:IsaFake
pio_slave_port	src/mem/ruby/system/Sequencer.py	/^    pio_slave_port = SlavePort("Ruby pio slave port")$/;"	v	class:RubyPort
pipe	src/kern/linux/linux_syscalls.hh	/^    pipe = 147,$/;"	e	enum:SystemCalls::__anon87
pipe	src/kern/tru64/tru64_syscalls.hh	/^        pipe = 42,$/;"	e	enum:SystemCalls::__anon102
pipePseudoFunc	src/sim/syscall_emul.cc	/^pipePseudoFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
pipelineIcacheAccesses	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::pipelineIcacheAccesses(ThreadID tid)$/;"	f	class:DefaultFetch
pipelineStage	src/cpu/inorder/cpu.hh	/^    PipelineStage *pipelineStage[ThePipeline::NumStages];$/;"	m	class:InOrderCPU
pit	src/dev/x86/SouthBridge.py	/^    pit = Param.I8254(_pit, "Programmable interval timer")$/;"	v	class:SouthBridge
pit	src/dev/x86/i8254.hh	/^    X86Intel8254Timer pit;$/;"	m	class:X86ISA::I8254
pit	src/dev/x86/south_bridge.hh	/^    X86ISA::I8254 * pit;$/;"	m	class:SouthBridge
pitimer	src/dev/alpha/tsunami_io.hh	/^    Intel8254Timer pitimer;$/;"	m	class:TsunamiIO
pitimer	src/dev/mips/malta_io.hh	/^    Intel8254Timer pitimer;$/;"	m	class:MaltaIO
pivot_root	src/kern/linux/linux_syscalls.hh	/^    pivot_root = 148,$/;"	e	enum:SystemCalls::__anon87
pixelBufferSize	src/dev/arm/hdlcd.hh	/^    size_t pixelBufferSize;$/;"	m	class:HDLcd
pixelClock	src/dev/arm/hdlcd.hh	/^    const Tick pixelClock;$/;"	m	class:HDLcd
pixelClock	src/dev/arm/pl111.hh	/^    Tick pixelClock;$/;"	m	class:Pl111
pixelFormat	src/base/vnc/vncserver.hh	/^    PixelFormat pixelFormat;$/;"	m	class:VncServer
pixelIndex	src/dev/arm/hdlcd.hh	/^    size_t pixelIndex;$/;"	m	class:HDLcd
pixel_clock	src/dev/arm/RealView.py	/^    pixel_clock = Param.Clock('24MHz', "Pixel clock")$/;"	v	class:Pl111
pixel_clock	src/dev/arm/RealView.py	/^    pixel_clock = Param.Clock('65MHz', "Clock frequency of the pixel clock "$/;"	v	class:HDLcd
pixel_format	src/dev/arm/hdlcd.hh	/^    PixelFormatReg pixel_format;    \/**< Pixel format register *\/$/;"	m	class:HDLcd
pkt	src/cpu/o3/lsq_unit.hh	/^        PacketPtr pkt;$/;"	m	class:LSQUnit::WritebackEvent
pkt	src/cpu/ozone/lw_lsq.hh	/^        PacketPtr pkt;$/;"	m	class:OzoneLWLSQ::WritebackEvent
pkt	src/cpu/simple/timing.hh	/^            PacketPtr pkt;$/;"	m	struct:TimingSimpleCPU::TimingCPUPort::TickEvent
pkt	src/cpu/simple/timing.hh	/^        Packet *pkt;$/;"	m	struct:TimingSimpleCPU::IprEvent
pkt	src/dev/i8254xGBe_defs.hh	/^            Addr pkt;$/;"	m	struct:iGbReg::RxDesc::__anon70::__anon72
pkt	src/mem/bridge.hh	/^        const PacketPtr pkt;$/;"	m	class:Bridge::DeferredPacket
pkt	src/mem/cache/mshr.hh	/^        PacketPtr pkt;  \/\/!< Pending request packet.$/;"	m	class:MSHR::Target
pkt	src/mem/cache/prefetch/base.hh	/^        PacketPtr pkt;  \/\/\/< Pointer to the packet to transmit$/;"	m	class:BasePrefetcher::DeferredPacket
pkt	src/mem/dram_ctrl.hh	/^        const PacketPtr pkt;$/;"	m	class:DRAMCtrl::DRAMPacket
pkt	src/mem/packet_queue.hh	/^        PacketPtr pkt;  \/\/\/< Pointer to the packet to transmit$/;"	m	class:PacketQueue::DeferredPacket
pkt	src/mem/ruby/slicc_interface/RubyRequest.hh	/^    PacketPtr pkt;$/;"	m	class:RubyRequest
pkt	src/mem/ruby/system/DMASequencer.hh	/^    PacketPtr pkt;$/;"	m	struct:DMARequest
pkt	src/mem/ruby/system/Sequencer.hh	/^    PacketPtr pkt;$/;"	m	struct:SequencerRequest
pkt	src/mem/simple_mem.hh	/^        const PacketPtr pkt;$/;"	m	class:SimpleMemory::DeferredPacket
pktCmd	src/cpu/inorder/resources/cache_unit.hh	/^    MemCmd::Command pktCmd;$/;"	m	class:CacheRequest
pktComplete	src/dev/i8254xGBe.cc	/^IGbE::RxDescCache::pktComplete()$/;"	f	class:IGbE::RxDescCache
pktComplete	src/dev/i8254xGBe.cc	/^IGbE::TxDescCache::pktComplete()$/;"	f	class:IGbE::TxDescCache
pktCount	src/mem/bus.hh	/^    Stats::Vector2d pktCount;$/;"	m	class:BaseBus
pktDataEvent	src/dev/i8254xGBe.hh	/^        EventWrapper<RxDescCache, &RxDescCache::pktSplitDone> pktDataEvent;$/;"	m	class:IGbE::RxDescCache
pktDone	src/dev/i8254xGBe.hh	/^        bool pktDone;$/;"	m	class:IGbE::RxDescCache
pktDone	src/dev/i8254xGBe.hh	/^        bool pktDone;$/;"	m	class:IGbE::TxDescCache
pktEvent	src/dev/i8254xGBe.hh	/^        EventWrapper<RxDescCache, &RxDescCache::pktComplete> pktEvent;$/;"	m	class:IGbE::RxDescCache
pktEvent	src/dev/i8254xGBe.hh	/^        EventWrapper<TxDescCache, &TxDescCache::pktComplete> pktEvent;$/;"	m	class:IGbE::TxDescCache
pktHdrEvent	src/dev/i8254xGBe.hh	/^        EventWrapper<RxDescCache, &RxDescCache::pktSplitDone> pktHdrEvent;$/;"	m	class:IGbE::RxDescCache
pktMultiDesc	src/dev/i8254xGBe.hh	/^        bool pktMultiDesc;$/;"	m	class:IGbE::TxDescCache
pktOffset	src/dev/i8254xGBe.hh	/^    unsigned pktOffset;$/;"	m	class:IGbE
pktPtr	src/dev/i8254xGBe.hh	/^        EthPacketPtr pktPtr;$/;"	m	class:IGbE::DescCache
pktSplitDone	src/dev/i8254xGBe.cc	/^IGbE::RxDescCache::pktSplitDone()$/;"	f	class:IGbE::RxDescCache
pktToSend	src/cpu/o3/lsq_unit.hh	/^        bool pktToSend;$/;"	m	class:LSQUnit::LSQSenderState
pktWaiting	src/dev/i8254xGBe.hh	/^        bool pktWaiting;$/;"	m	class:IGbE::TxDescCache
pkt_len	src/dev/i8254xGBe_defs.hh	/^            uint16_t pkt_len;$/;"	m	struct:iGbReg::RxDesc::__anon70::__anon73
pkt_type	src/dev/i8254xGBe_defs.hh	/^            uint16_t pkt_type:12;$/;"	m	struct:iGbReg::RxDesc::__anon70::__anon73
pkthdr	src/kern/tru64/mbuf.hh	/^struct  pkthdr {$/;"	s	namespace:tru64
platform	src/dev/Pci.py	/^    platform = Param.Platform(Parent.any, "Platform this device is part of.")$/;"	v	class:PciConfigAll
platform	src/dev/Pci.py	/^    platform = Param.Platform(Parent.any, "Platform this device is part of.")$/;"	v	class:PciDevice
platform	src/dev/Uart.py	/^    platform = Param.Platform(Parent.any, "Platform this device is part of.")$/;"	v	class:Uart
platform	src/dev/alpha/AlphaBackdoor.py	/^    platform = Param.Platform(Parent.any, "Platform this device is part of.")$/;"	v	class:AlphaBackdoor
platform	src/dev/arm/Gic.py	/^    platform = Param.Platform(Parent.any, "Platform this device is part of.")$/;"	v	class:BaseGic
platform	src/dev/arm/RealView.py	/^    platform = Param.Platform(Parent.any, "Platform this device is part of.")$/;"	v	class:VGic
platform	src/dev/arm/base_gic.hh	/^    Platform *platform;$/;"	m	class:BaseGic
platform	src/dev/arm/gic_pl390.hh	/^        Platform *platform;$/;"	m	class:Pl390::PostIntEvent
platform	src/dev/arm/vgic.hh	/^        Platform *platform;$/;"	m	class:VGic::PostVIntEvent
platform	src/dev/arm/vgic.hh	/^    Platform *platform;$/;"	m	class:VGic
platform	src/dev/pcidev.hh	/^        Platform *platform;$/;"	m	class:PciDevice::PciConfigPort
platform	src/dev/pcidev.hh	/^    Platform *platform;$/;"	m	class:PciDevice
platform	src/dev/sparc/T1000.py	/^    platform = Param.Platform(Parent.any, "Platform this device is part of.")$/;"	v	class:Iob
platform	src/dev/uart.hh	/^    Platform *platform;$/;"	m	class:Uart
platform	src/dev/x86/SouthBridge.py	/^    platform = Param.Platform(Parent.any, "Platform this device is part of")$/;"	v	class:SouthBridge
platform	src/dev/x86/south_bridge.hh	/^    Platform * platform;$/;"	m	class:SouthBridge
plen	src/base/inet.hh	/^    uint16_t plen() const { return ntohs(ip6_plen); }$/;"	f	struct:Net::Ip6Hdr
plen	src/base/inet.hh	/^    void plen(uint16_t _plen) { ip6_plen = htons(_plen); }$/;"	f	struct:Net::Ip6Hdr
plock	src/kern/tru64/tru64_syscalls.hh	/^        plock = 107,$/;"	e	enum:SystemCalls::__anon102
ply	src/python/m5/util/grammar.py	/^import ply.lex$/;"	i
ply	src/python/m5/util/grammar.py	/^import ply.yacc$/;"	i
pmcap	src/dev/pcidev.hh	/^    PMCAP pmcap;$/;"	m	class:PciDevice
pmcs	src/dev/pcireg.h	/^    PMCS pmcs;$/;"	m	struct:PMCAP
pmec	src/dev/pcireg.h	/^        Bitfield<3>     pmec;$/;"	m	struct:PMCAP
pmee	src/dev/pcireg.h	/^        Bitfield<8>     pmee;$/;"	m	struct:PMCAP
pmemAddr	src/mem/abstract_mem.hh	/^    uint8_t* pmemAddr;$/;"	m	class:AbstractMemory
pmes	src/dev/pcireg.h	/^        Bitfield<15>    pmes;$/;"	m	struct:PMCAP
pn	src/dev/pcireg.h	/^        Bitfield<31,24> pn;$/;"	m	struct:PXCAP
points	src/sim/probe/probe.hh	/^    std::vector<ProbePoint *> points;$/;"	m	class:ProbeManager
polarities	src/dev/arm/hdlcd.hh	/^    PolaritiesReg polarities;       \/**< Polarities register *\/$/;"	m	class:HDLcd
polarity	src/arch/x86/bios/IntelMP.py	/^    polarity = Param.X86IntelMPPolarity('ConformPolarity', 'polarity')$/;"	v	class:X86IntelMPIOIntAssignment
polarity	src/arch/x86/bios/IntelMP.py	/^    polarity = Param.X86IntelMPPolarity('ConformPolarity', 'polarity')$/;"	v	class:X86IntelMPLocalIntAssignment
polarity	src/arch/x86/interrupts.hh	/^        Bitfield<13> polarity;$/;"	m	class:X86ISA::Interrupts
polarity	src/dev/x86/i82094aa.hh	/^        Bitfield<13> polarity;$/;"	m	class:X86ISA::I82094AA
policy	src/kern/tru64/tru64.hh	/^        int policy;     \/\/!< policy$/;"	m	struct:Tru64::nxm_thread_attr
poll	src/kern/linux/linux_syscalls.hh	/^    poll = 149,$/;"	e	enum:SystemCalls::__anon87
poll	src/kern/tru64/tru64_syscalls.hh	/^        poll = 94,$/;"	e	enum:SystemCalls::__anon102
poll_fds	src/base/pollevent.hh	/^    pollfd *poll_fds;$/;"	m	class:PollQueue
pop	src/cpu/inorder/resource_sked.cc	/^ResourceSked::pop()$/;"	f	class:ResourceSked
pop	src/cpu/inorder/resources/inst_buffer.cc	/^InstBuffer::pop(ThreadID tid)$/;"	f	class:InstBuffer
pop	src/cpu/o3/dep_graph.hh	/^DependencyGraph<DynInstPtr>::pop(PhysRegIndex idx)$/;"	f	class:DependencyGraph
pop	src/cpu/pred/ras.cc	/^ReturnAddrStack::pop()$/;"	f	class:ReturnAddrStack
pop	src/dev/pktfifo.hh	/^    void pop()$/;"	f	class:PacketFifo
pop	src/python/m5/util/sorteddict.py	/^    def pop(self, key, *args):$/;"	m	class:SortedDict
popFrame	src/mem/slicc/symbols/SymbolTable.py	/^    def popFrame(self):$/;"	m	class:SymbolTable
popLabel	src/mem/packet.cc	/^Packet::PrintReqState::popLabel()$/;"	f	class:Packet::PrintReqState
popLabel	src/mem/packet.hh	/^    popLabel()$/;"	f	class:Packet
popResult	src/cpu/base_dyn_inst.hh	/^    void popResult(T& t)$/;"	f	class:BaseDynInst
popSenderState	src/mem/packet.cc	/^Packet::popSenderState()$/;"	f	class:Packet
popTarget	src/mem/cache/mshr.hh	/^    void popTarget()$/;"	f	class:MSHR
pop_back	src/base/varargs.hh	/^    void pop_back() { return l.pop_back(); }$/;"	f	class:VarArgs::List
pop_front	src/base/varargs.hh	/^    void pop_front() { return l.pop_front(); }$/;"	f	class:VarArgs::List
popitem	src/python/m5/util/sorteddict.py	/^    def popitem(self):$/;"	m	class:SortedDict
populate	src/arch/sparc/pagetable.hh	/^    populate(uint64_t e, EntryType t = sun4u)$/;"	f	class:SparcISA::PageTableEntry
populatePages	src/mem/ruby/system/MemoryVector.hh	/^MemoryVector::populatePages(uint8_t *raw_data)$/;"	f	class:MemoryVector
populated	src/arch/sparc/pagetable.hh	/^    bool populated;$/;"	m	class:SparcISA::PageTableEntry
populated	src/arch/sparc/pagetable.hh	/^    bool populated;$/;"	m	class:SparcISA::TteTag
port	src/arch/arm/ArmTLB.py	/^    port = MasterPort("Port for TableWalker to do walk the translation with")$/;"	v	class:ArmTableWalker
port	src/arch/arm/table_walker.hh	/^    SnoopingDmaPort port;$/;"	m	class:ArmISA::TableWalker
port	src/arch/x86/X86TLB.py	/^    port = MasterPort("Port for the hardware table walker")$/;"	v	class:X86PagetableWalker
port	src/arch/x86/pagetable_walker.hh	/^        WalkerPort port;$/;"	m	class:X86ISA::Walker
port	src/base/inet.hh	/^    uint8_t port() const { return _port; }$/;"	f	struct:Net::IpWithPort
port	src/base/remote_gdb.hh	/^    int port;$/;"	m	class:GDBListener
port	src/base/vnc/Vnc.py	/^    port = Param.TcpPort(5900, "listen port")$/;"	v	class:VncServer
port	src/cpu/testers/traffic_gen/TrafficGen.py	/^    port = MasterPort("Master port")$/;"	v	class:TrafficGen
port	src/cpu/testers/traffic_gen/traffic_gen.hh	/^    TrafficGenPort port;$/;"	m	class:TrafficGen
port	src/dev/Ethernet.py	/^    port = Param.UInt16(3500, "tap port")$/;"	v	class:EtherTap
port	src/dev/Terminal.py	/^    port = Param.TcpPort(3456, "listen port")$/;"	v	class:Terminal
port	src/dev/ethertap.cc	/^    int port;$/;"	m	class:TapListener	file:
port	src/mem/DRAMCtrl.py	/^    port = SlavePort("Slave port")$/;"	v	class:DRAMCtrl
port	src/mem/DRAMSim2.py	/^    port = SlavePort("Slave port")$/;"	v	class:DRAMSim2
port	src/mem/SimpleMemory.py	/^    port = SlavePort("Slave ports")$/;"	v	class:SimpleMemory
port	src/mem/bus.hh	/^        DstType& port;$/;"	m	class:BaseBus::Layer
port	src/mem/dram_ctrl.hh	/^    MemoryPort port;$/;"	m	class:DRAMCtrl
port	src/mem/dramsim2.hh	/^    MemoryPort port;$/;"	m	class:DRAMSim2
port	src/mem/ruby/system/RubyPort.hh	/^        MemSlavePort *port;$/;"	m	struct:RubyPort::SenderState
port	src/mem/simple_mem.hh	/^    MemoryPort port;$/;"	m	class:SimpleMemory
portCache	src/mem/bus.hh	/^    PortCache portCache[3];$/;"	m	class:BaseBus
portMap	src/mem/bus.hh	/^    AddrRangeMap<PortID> portMap;$/;"	m	class:BaseBus
portName	src/dev/etherint.hh	/^    mutable std::string portName;$/;"	m	class:EtherInt
portName	src/mem/port.hh	/^    std::string portName;$/;"	m	class:Port
ports	src/cpu/testers/directedtest/RubyDirectedTester.hh	/^    std::vector<MasterPort*> ports;$/;"	m	class:RubyDirectedTester
pos	src/python/m5/util/code_formatter.py	/^    pos = r'[0-9]+'$/;"	v	class:code_formatter
pos_inf	src/python/m5/util/__init__.py	/^from region import neg_inf, pos_inf, Region, Regions$/;"	i
pos_inf	src/python/m5/util/region.py	/^pos_inf = _pos_inf()$/;"	v
possibleLoadViolation	src/cpu/base_dyn_inst.hh	/^    bool possibleLoadViolation() const { return instFlags[PossibleLoadViolation]; }$/;"	f	class:BaseDynInst
possibleLoadViolation	src/cpu/base_dyn_inst.hh	/^    void possibleLoadViolation(bool f) { instFlags[PossibleLoadViolation] = f; }$/;"	f	class:BaseDynInst
post	src/arch/alpha/interrupts.hh	/^    post(int int_num, int index)$/;"	f	class:AlphaISA::Interrupts
post	src/arch/arm/interrupts.hh	/^    post(int int_num, int index)$/;"	f	class:ArmISA::Interrupts
post	src/arch/mips/interrupts.cc	/^Interrupts::post(int int_num, ThreadContext* tc)$/;"	f	class:MipsISA::Interrupts
post	src/arch/mips/interrupts.cc	/^Interrupts::post(int int_num, int index)$/;"	f	class:MipsISA::Interrupts
post	src/arch/power/interrupts.hh	/^    post(int int_num, int index)$/;"	f	class:PowerISA::Interrupts
post	src/arch/sparc/interrupts.hh	/^    post(int int_num, int index)$/;"	f	class:SparcISA::Interrupts
post	src/arch/x86/interrupts.hh	/^    post(int int_num, int index)$/;"	f	class:X86ISA::Interrupts
post	src/cpu/intr_control.cc	/^IntrControl::post(int cpu_id, int int_num, int index)$/;"	f	class:IntrControl
post	src/cpu/intr_control.hh	/^    post(int int_num, int index = 0)$/;"	f	class:IntrControl
post	src/cpu/intr_control_noisa.cc	/^IntrControl::post(int cpu_id, int int_num, int index)$/;"	f	class:IntrControl
postConsoleInt	src/dev/alpha/tsunami.cc	/^Tsunami::postConsoleInt()$/;"	f	class:Tsunami
postConsoleInt	src/dev/arm/realview.cc	/^RealView::postConsoleInt()$/;"	f	class:RealView
postConsoleInt	src/dev/mips/malta.cc	/^Malta::postConsoleInt()$/;"	f	class:Malta
postConsoleInt	src/dev/sparc/t1000.cc	/^T1000::postConsoleInt()$/;"	f	class:T1000
postConsoleInt	src/dev/x86/pc.cc	/^Pc::postConsoleInt()$/;"	f	class:Pc
postDRIR	src/dev/alpha/tsunami_cchip.cc	/^TsunamiCChip::postDRIR(uint32_t interrupt)$/;"	f	class:TsunamiCChip
postDowngrade	src/mem/cache/mshr.hh	/^    bool postDowngrade;$/;"	m	class:MSHR
postExecute	src/cpu/simple/base.cc	/^BaseSimpleCPU::postExecute()$/;"	f	class:BaseSimpleCPU
postInt	src/dev/arm/gic_pl390.cc	/^Pl390::postInt(uint32_t cpu, Tick when)$/;"	f	class:Pl390
postIntEvent	src/dev/arm/gic_pl390.hh	/^    PostIntEvent *postIntEvent[CPU_MAX];$/;"	m	class:Pl390
postInterrupt	src/cpu/base.hh	/^    postInterrupt(int int_num, int index)$/;"	f	class:BaseCPU
postInterrupt	src/dev/i8254xGBe.cc	/^IGbE::postInterrupt(IntTypes t, bool now)$/;"	f	class:IGbE
postIntr	src/dev/mips/malta_cchip.cc	/^MaltaCChip::postIntr(uint32_t interrupt)$/;"	f	class:MaltaCChip
postIntr	src/dev/mips/malta_io.cc	/^MaltaIO::postIntr(uint8_t interrupt)$/;"	f	class:MaltaIO
postInvalidate	src/mem/cache/mshr.hh	/^    bool postInvalidate;$/;"	m	class:MSHR
postMaintInt	src/dev/arm/vgic.cc	/^VGic::postMaintInt(uint32_t cpu)$/;"	f	class:VGic
postPIC	src/dev/alpha/tsunami_io.cc	/^TsunamiIO::postPIC(uint8_t bitvector)$/;"	f	class:TsunamiIO
postPciInt	src/dev/alpha/tsunami.cc	/^Tsunami::postPciInt(int line)$/;"	f	class:Tsunami
postPciInt	src/dev/arm/realview.cc	/^RealView::postPciInt(int line)$/;"	f	class:RealView
postPciInt	src/dev/mips/malta.cc	/^Malta::postPciInt(int line)$/;"	f	class:Malta
postPciInt	src/dev/platform.cc	/^Platform::postPciInt(int line)$/;"	f	class:Platform
postPciInt	src/dev/sparc/t1000.cc	/^T1000::postPciInt(int line)$/;"	f	class:T1000
postPciInt	src/dev/x86/pc.cc	/^Pc::postPciInt(int line)$/;"	f	class:Pc
postRTC	src/dev/alpha/tsunami_cchip.cc	/^TsunamiCChip::postRTC()$/;"	f	class:TsunamiCChip
postRTC	src/dev/mips/malta_cchip.cc	/^MaltaCChip::postRTC()$/;"	f	class:MaltaCChip
postVInt	src/dev/arm/vgic.cc	/^VGic::postVInt(uint32_t cpu, Tick when)$/;"	f	class:VGic
postVIntEvent	src/dev/arm/vgic.hh	/^    PostVIntEvent *postVIntEvent[VGIC_CPU_MAX];$/;"	m	class:VGic
postedInterrupts	src/dev/etherdevice.hh	/^    Stats::Scalar postedInterrupts;$/;"	m	class:EtherDevice
postedRxDesc	src/dev/etherdevice.hh	/^    Stats::Scalar postedRxDesc;$/;"	m	class:EtherDevice
postedRxIdle	src/dev/etherdevice.hh	/^    Stats::Scalar postedRxIdle;$/;"	m	class:EtherDevice
postedRxOk	src/dev/etherdevice.hh	/^    Stats::Scalar postedRxOk;$/;"	m	class:EtherDevice
postedRxOrn	src/dev/etherdevice.hh	/^    Stats::Scalar postedRxOrn;$/;"	m	class:EtherDevice
postedSwi	src/dev/etherdevice.hh	/^    Stats::Scalar postedSwi;$/;"	m	class:EtherDevice
postedTxDesc	src/dev/etherdevice.hh	/^    Stats::Scalar postedTxDesc;$/;"	m	class:EtherDevice
postedTxIdle	src/dev/etherdevice.hh	/^    Stats::Scalar postedTxIdle;$/;"	m	class:EtherDevice
postedTxOk	src/dev/etherdevice.hh	/^    Stats::Scalar postedTxOk;$/;"	m	class:EtherDevice
power	src/base/intmath.hh	/^power(uint32_t n, uint32_t e)$/;"	f
ppCommit	src/cpu/o3/commit.hh	/^    ProbePointArg<DynInstPtr> *ppCommit;$/;"	m	class:DefaultCommit
ppCommitStall	src/cpu/o3/commit.hh	/^    ProbePointArg<DynInstPtr> *ppCommitStall;$/;"	m	class:DefaultCommit
ppDataAccessComplete	src/cpu/o3/cpu.hh	/^    ProbePointArg<std::pair<DynInstPtr, PacketPtr> > *ppDataAccessComplete;$/;"	m	class:FullO3CPU
ppDispatch	src/cpu/o3/iew.hh	/^    ProbePointArg<DynInstPtr> *ppDispatch;$/;"	m	class:DefaultIEW
ppFetch	src/cpu/o3/fetch.hh	/^    ProbePointArg<DynInstPtr> *ppFetch;$/;"	m	class:DefaultFetch
ppInstAccessComplete	src/cpu/o3/cpu.hh	/^    ProbePointArg<PacketPtr> *ppInstAccessComplete;$/;"	m	class:FullO3CPU
ppMispredict	src/cpu/o3/iew.hh	/^    ProbePointArg<DynInstPtr> *ppMispredict;$/;"	m	class:DefaultIEW
ppid	src/sim/Process.py	/^    ppid = Param.Int(99, 'parent process id')$/;"	v	class:LiveProcess
ppid	src/sim/process.hh	/^    inline uint64_t ppid() {return __ppid;}$/;"	f	class:LiveProcess
ppint	src/dev/arm/RealView.py	/^    ppint = Param.UInt32("HV maintenance interrupt number")$/;"	v	class:VGic
ppl	src/dev/arm/pl111.hh	/^        Bitfield<7,2> ppl;$/;"	m	class:Pl111
ppn	src/arch/alpha/pagetable.hh	/^    Addr ppn;               \/\/ physical page number$/;"	m	struct:AlphaISA::TlbEntry
pprint	src/python/m5/main.py	/^    from pprint import pprint$/;"	i
pprint	src/python/m5/util/jobfile.py	/^                import pprint$/;"	i
pqCompare	src/cpu/o3/inst_queue.hh	/^    struct pqCompare {$/;"	s	class:InstructionQueue
pqCompare	src/cpu/ozone/back_end.hh	/^        struct pqCompare {$/;"	s	class:BackEnd::InstQueue
pqCompare	src/cpu/ozone/inst_queue.hh	/^    struct pqCompare {$/;"	s	class:InstQueue
pqCompare	src/cpu/ozone/lw_back_end.hh	/^    struct pqCompare {$/;"	s	class:LWBackEnd
pqcr	src/dev/ns_gige.hh	/^    uint32_t    pqcr;$/;"	m	struct:dp_regs
prctl	src/kern/linux/linux_syscalls.hh	/^    prctl = 150,$/;"	e	enum:SystemCalls::__anon87
preExecute	src/cpu/simple/base.cc	/^BaseSimpleCPU::preExecute()$/;"	f	class:BaseSimpleCPU
preUnflattenMiscReg	src/arch/arm/miscregs.cc	/^preUnflattenMiscReg()$/;"	f	namespace:ArmISA
pre_F64_fstat	src/kern/tru64/tru64_syscalls.hh	/^        pre_F64_fstat = 91,$/;"	e	enum:SystemCalls::__anon102
pre_F64_fstatfs	src/kern/tru64/tru64_syscalls.hh	/^        pre_F64_fstatfs = 161,$/;"	e	enum:SystemCalls::__anon102
pre_F64_getfsstat	src/kern/tru64/tru64_syscalls.hh	/^        pre_F64_getfsstat = 18,$/;"	e	enum:SystemCalls::__anon102
pre_F64_lstat	src/kern/tru64/tru64_syscalls.hh	/^        pre_F64_lstat = 68,$/;"	e	enum:SystemCalls::__anon102
pre_F64_stat	src/kern/tru64/tru64.hh	/^    struct pre_F64_stat {$/;"	s	class:Tru64_PreF64
pre_F64_stat	src/kern/tru64/tru64_syscalls.hh	/^        pre_F64_stat = 67,$/;"	e	enum:SystemCalls::__anon102
pre_F64_statfs	src/kern/tru64/tru64.hh	/^    struct pre_F64_statfs {$/;"	s	class:Tru64
pre_F64_statfs	src/kern/tru64/tru64_syscalls.hh	/^        pre_F64_statfs = 160,$/;"	e	enum:SystemCalls::__anon102
pread	src/kern/tru64/tru64_syscalls.hh	/^        pread = 151,$/;"	e	enum:SystemCalls::__anon102
pread64	src/kern/linux/linux_syscalls.hh	/^    pread64 = 151,$/;"	e	enum:SystemCalls::__anon87
precedence	src/mem/slicc/parser.py	/^    precedence = ($/;"	v	class:SLICC
prechargeAllPercent	src/mem/dram_ctrl.hh	/^    Stats::Formula prechargeAllPercent;$/;"	m	class:DRAMCtrl
prechargeAllTime	src/mem/dram_ctrl.hh	/^    Stats::Scalar prechargeAllTime;$/;"	m	class:DRAMCtrl
precision	src/base/cprintf_formats.hh	/^    int precision;$/;"	m	struct:cp::Format
precision	src/base/statistics.hh	/^    precision(int _precision)$/;"	f	class:Stats::DataWrap
precision	src/base/stats/info.hh	/^    int precision;$/;"	m	class:Stats::Info
precision	src/base/stats/text.cc	/^    int precision;$/;"	m	struct:Stats::DistPrint	file:
precision	src/base/stats/text.cc	/^    int precision;$/;"	m	struct:Stats::ScalarPrint	file:
precision	src/base/stats/text.cc	/^    int precision;$/;"	m	struct:Stats::SparseHistPrint	file:
precision	src/base/stats/text.cc	/^    int precision;$/;"	m	struct:Stats::VectorPrint	file:
precision	src/cpu/testers/networktest/NetworkTest.py	/^    precision = Param.Int(3, "Number of digits of precision after decimal point")$/;"	v	class:NetworkTest
precision	src/cpu/testers/networktest/networktest.hh	/^    int precision;$/;"	m	class:NetworkTest
predHist	src/cpu/pred/bpred_unit.hh	/^    History *predHist;$/;"	m	class:BPredUnit
predIncorrect	src/cpu/o3/comm.hh	/^        bool predIncorrect;$/;"	m	struct:TimeBufStruct::decodeComm
predInstAddr	src/cpu/base_dyn_inst.hh	/^    Addr predInstAddr() { return predPC.instAddr(); }$/;"	f	class:BaseDynInst
predInstAddr	src/cpu/inorder/inorder_dyn_inst.hh	/^    Addr predInstAddr() { return predPC.instAddr(); }$/;"	f	class:InOrderDynInst
predMicroPC	src/cpu/base_dyn_inst.hh	/^    Addr predMicroPC() { return predPC.microPC(); }$/;"	f	class:BaseDynInst
predNextInstAddr	src/cpu/base_dyn_inst.hh	/^    Addr predNextInstAddr() { return predPC.nextInstAddr(); }$/;"	f	class:BaseDynInst
predNextInstAddr	src/cpu/inorder/inorder_dyn_inst.hh	/^    Addr predNextInstAddr() { return predPC.nextInstAddr(); }$/;"	f	class:InOrderDynInst
predPC	src/cpu/base_dyn_inst.hh	/^    TheISA::PCState predPC;$/;"	m	class:BaseDynInst
predPC	src/cpu/inorder/inorder_dyn_inst.hh	/^    TheISA::PCState predPC;$/;"	m	class:InOrderDynInst
predTaken	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool predTaken() { return predictTaken; }$/;"	f	class:InOrderDynInst
predTaken	src/cpu/pred/bpred_unit.hh	/^        bool predTaken;$/;"	m	struct:BPredUnit::PredictorHistory
predType	src/cpu/ozone/OzoneCPU.py	/^    predType = Param.String("Type of branch predictor ('local', 'tournament')")$/;"	v	class:DerivOzoneCPU
predType	src/cpu/ozone/simple_params.hh	/^    std::string predType;$/;"	m	class:SimpleParams
predType	src/cpu/pred/BranchPredictor.py	/^    predType = Param.String("tournament",$/;"	v	class:BranchPredictor
pred_pc	src/cpu/simple/base.hh	/^    TheISA::PCState pred_pc;$/;"	m	class:BaseSimpleCPU
predecessor	src/mem/packet.hh	/^        SenderState* predecessor;$/;"	m	struct:Packet::SenderState
predicate	src/cpu/simple_thread.hh	/^    bool predicate;$/;"	m	class:SimpleThread
predicate	src/sim/insttracer.hh	/^    bool predicate;$/;"	m	class:Trace::InstRecord
predict	src/cpu/ozone/null_predictor.hh	/^    bool predict(DynInstPtr &inst, Addr &PC, ThreadID tid)$/;"	f	class:NullPredictor
predict	src/cpu/pred/bpred_unit_impl.hh	/^BPredUnit::predict(StaticInstPtr &inst, const InstSeqNum &seqNum,$/;"	f	class:BPredUnit
predictInOrder	src/cpu/pred/bpred_unit_impl.hh	/^BPredUnit::predictInOrder(StaticInstPtr &inst, const InstSeqNum &seqNum,$/;"	f	class:BPredUnit
predictTaken	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool predictTaken;$/;"	m	class:InOrderDynInst
predictedBranches	src/cpu/o3/fetch.hh	/^    Stats::Scalar predictedBranches;$/;"	m	class:DefaultFetch
predictedBranches	src/cpu/ozone/front_end.hh	/^    Stats::Scalar predictedBranches;$/;"	m	class:FrontEnd
predictedCorrect	src/cpu/inorder/resources/execution_unit.hh	/^    Stats::Scalar predictedCorrect;$/;"	m	class:ExecutionUnit
predictedIncorrect	src/cpu/inorder/resources/execution_unit.hh	/^    Stats::Scalar predictedIncorrect;$/;"	m	class:ExecutionUnit
predictedNotTaken	src/cpu/inorder/resources/branch_predictor.hh	/^    Stats::Scalar predictedNotTaken;$/;"	m	class:BranchPredictor
predictedNotTakenIncorrect	src/cpu/inorder/resources/execution_unit.hh	/^    Stats::Scalar predictedNotTakenIncorrect;$/;"	m	class:ExecutionUnit
predictedNotTakenIncorrect	src/cpu/o3/iew.hh	/^    Stats::Scalar predictedNotTakenIncorrect;$/;"	m	class:DefaultIEW
predictedTaken	src/cpu/inorder/resources/branch_predictor.hh	/^    Stats::Scalar predictedTaken;$/;"	m	class:BranchPredictor
predictedTakenIncorrect	src/cpu/inorder/resources/execution_unit.hh	/^    Stats::Scalar predictedTakenIncorrect;$/;"	m	class:ExecutionUnit
predictedTakenIncorrect	src/cpu/o3/iew.hh	/^    Stats::Scalar predictedTakenIncorrect;$/;"	m	class:DefaultIEW
prefetchFaults	src/arch/arm/tlb.hh	/^    mutable Stats::Scalar prefetchFaults;$/;"	m	class:ArmISA::TLB
prefetchOnAccess	src/mem/cache/cache.hh	/^    const bool prefetchOnAccess;$/;"	m	class:Cache
prefetch_on_access	src/mem/cache/BaseCache.py	/^    prefetch_on_access = Param.Bool(False,$/;"	v	class:BaseCache
prefetcher	src/mem/cache/BaseCache.py	/^    prefetcher = Param.BasePrefetcher(NULL,"Prefetcher attached to cache")$/;"	v	class:BaseCache
prefetcher	src/mem/cache/cache.hh	/^    BasePrefetcher *prefetcher;$/;"	m	class:Cache
prefix	src/mem/packet.hh	/^            std::string *prefix;$/;"	m	struct:Packet::PrintReqState::LabelStackEntry
prefixA	src/arch/x86/types.hh	/^            uint8_t prefixA;$/;"	m	struct:X86ISA::ExtMachInst::__anon36
prefixB	src/arch/x86/types.hh	/^            uint8_t prefixB;$/;"	m	struct:X86ISA::ExtMachInst::__anon36
prepFpState	src/arch/arm/insts/vfp.cc	/^prepFpState(uint32_t rMode)$/;"	f	namespace:ArmISA
prepIntRequest	src/arch/x86/intmessage.hh	/^    prepIntRequest(const uint8_t id, Addr offset, Addr size)$/;"	f	namespace:X86ISA
prepare	src/base/statistics.hh	/^    prepare()$/;"	f	class:Stats::DataWrapVec
prepare	src/base/statistics.hh	/^    prepare()$/;"	f	class:Stats::DistBase
prepare	src/base/statistics.hh	/^    prepare()$/;"	f	class:Stats::SparseHistBase
prepare	src/base/statistics.hh	/^    prepare()$/;"	f	class:Stats::Vector2dBase
prepare	src/base/statistics.hh	/^    prepare()$/;"	f	class:Stats::VectorDistBase
prepare	src/base/statistics.hh	/^    prepare(Info *info)$/;"	f	class:Stats::AvgStor
prepare	src/base/statistics.hh	/^    prepare(Info *info, DistData &data)$/;"	f	class:Stats::AvgSampleStor
prepare	src/base/statistics.hh	/^    prepare(Info *info, DistData &data)$/;"	f	class:Stats::DistStor
prepare	src/base/statistics.hh	/^    prepare(Info *info, DistData &data)$/;"	f	class:Stats::HistStor
prepare	src/base/statistics.hh	/^    prepare(Info *info, DistData &data)$/;"	f	class:Stats::SampleStor
prepare	src/base/statistics.hh	/^    prepare(Info *info, SparseHistData &data)$/;"	f	class:Stats::SparseHistStor
prepare	src/base/statistics.hh	/^    void prepare() { data()->prepare(this->info()); }$/;"	f	class:Stats::ScalarBase
prepare	src/base/statistics.hh	/^    void prepare() { s.prepare(); }$/;"	f	class:Stats::InfoProxy
prepare	src/base/statistics.hh	/^    void prepare() { }$/;"	f	class:Stats::Formula
prepare	src/base/statistics.hh	/^    void prepare() { }$/;"	f	class:Stats::ProxyInfo
prepare	src/base/statistics.hh	/^    void prepare() { }$/;"	f	class:Stats::ValueBase
prepare	src/base/statistics.hh	/^    void prepare(Info *info) { }$/;"	f	class:Stats::StatStor
prepare	src/python/m5/stats/__init__.py	/^def prepare():$/;"	f
prepareIO	src/dev/sinic.cc	/^Device::prepareIO(int cpu, int index)$/;"	f	class:Sinic::Device
prepareRead	src/dev/sinic.cc	/^Device::prepareRead(int cpu, int index)$/;"	f	class:Sinic::Device
prepareWrite	src/dev/sinic.cc	/^Device::prepareWrite(int cpu, int index)$/;"	f	class:Sinic::Device
prepend_all	src/arch/isa_parser.py	/^    def prepend_all(self, pre):$/;"	m	class:GenCode
prepost	src/arch/arm/types.hh	/^            Bitfield<24> prepost;$/;"	m	namespace:ArmISA
prereq	src/base/statistics.hh	/^    prereq(const Stat &prereq)$/;"	f	class:Stats::DataWrap
prereq	src/base/stats/info.hh	/^    const Info *prereq;$/;"	m	class:Stats::Info
prescalar	src/dev/arm/timer_cpulocal.hh	/^            Bitfield<15,8> prescalar;$/;"	m	class:CpuLocalTimer::Timer
present	src/arch/x86/faults.hh	/^            Bitfield<0> present;$/;"	m	class:X86ISA::PageFault
present	src/arch/x86/regs/misc.hh	/^        Bitfield<7> present;$/;"	m	namespace:X86ISA
present	src/arch/x86/types.hh	/^        Bitfield<6> present;$/;"	m	namespace:X86ISA
prev	src/mem/cache/tags/fa_lru.hh	/^    FALRUBlk *prev;$/;"	m	class:FALRUBlk
prevArrival	src/mem/dram_ctrl.hh	/^    Tick prevArrival;$/;"	m	class:DRAMCtrl
prevDestInst	src/cpu/ozone/dyn_inst.hh	/^    DynInstPtr prevDestInst[MaxInstSrcRegs];$/;"	m	class:OzoneDynInst
prevDestRegIdx	src/cpu/base_dyn_inst.hh	/^    PhysRegIndex prevDestRegIdx(int idx) const$/;"	f	class:BaseDynInst
prevDestRegIdx	src/cpu/inorder/inorder_dyn_inst.hh	/^    PhysRegIndex prevDestRegIdx(int idx) const$/;"	f	class:InOrderDynInst
prevPhysReg	src/cpu/o3/rename.hh	/^        PhysRegIndex prevPhysReg;$/;"	m	struct:DefaultRename::RenameHistory
prevPrime	src/base/intmath.cc	/^prevPrime(int n)$/;"	f
prevSrc	src/mem/cache/cache_impl.hh	/^    PortID prevSrc;$/;"	m	class:ForwardResponseRecord
prevStage	src/cpu/inorder/pipeline_stage.hh	/^    TimeBuffer<InterStageStruct>::wire prevStage;$/;"	m	class:PipelineStage
prevStageInstsValid	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::prevStageInstsValid()$/;"	f	class:PipelineStage
prevStageQueue	src/cpu/inorder/pipeline_stage.hh	/^    TimeBuffer<InterStageStruct> *prevStageQueue;$/;"	m	class:PipelineStage
prevStageValid	src/cpu/inorder/pipeline_stage.hh	/^    bool prevStageValid;$/;"	m	class:PipelineStage
previousCycle	src/cpu/simple/timing.hh	/^    Tick previousCycle;$/;"	m	class:TimingSimpleCPU
priContext	src/arch/sparc/isa.hh	/^    uint16_t priContext;$/;"	m	class:SparcISA::ISA
primary	src/dev/ide_ctrl.hh	/^    Channel primary;$/;"	m	class:IdeController
primaryTiming	src/dev/ide_ctrl.hh	/^    uint16_t primaryTiming, secondaryTiming;$/;"	m	class:IdeController
primes_list	src/mem/ruby/filters/H3BloomFilter.hh	/^    int primes_list[6];\/\/ = {9323,11279,10247,30637,25717,43711};$/;"	m	class:H3BloomFilter
print	src/arch/arm/pagetable.hh	/^    print() const$/;"	f	struct:ArmISA::TlbEntry
print	src/arch/sparc/tlb_map.hh	/^    print()$/;"	f	class:SparcISA::TlbMap
print	src/cpu/inorder/resource_pool.cc	/^ResourcePool::print()$/;"	f	class:ResourcePool
print	src/cpu/inorder/resource_sked.cc	/^ResourceSked::print()$/;"	f	class:ResourceSked
print	src/cpu/testers/rubytest/Check.cc	/^Check::print(std::ostream& out) const$/;"	f	class:Check
print	src/cpu/testers/rubytest/CheckTable.cc	/^CheckTable::print(std::ostream& out) const$/;"	f	class:CheckTable
print	src/cpu/testers/rubytest/RubyTester.cc	/^RubyTester::print(std::ostream& out) const$/;"	f	class:RubyTester
print	src/mem/cache/blk.cc	/^CacheBlkPrintWrapper::print(std::ostream &os, int verbosity,$/;"	f	class:CacheBlkPrintWrapper
print	src/mem/cache/blk.hh	/^    std::string print() const$/;"	f	class:CacheBlk
print	src/mem/cache/mshr.cc	/^MSHR::print() const$/;"	f	class:MSHR
print	src/mem/cache/mshr.cc	/^MSHR::print(std::ostream &os, int verbosity, const std::string &prefix) const$/;"	f	class:MSHR
print	src/mem/cache/mshr.cc	/^print(std::ostream &os, int verbosity, const std::string &prefix) const$/;"	f	class:MSHR::TargetList
print	src/mem/cache/tags/fa_lru.hh	/^    virtual std::string print() const { return ""; }$/;"	f	class:FALRU
print	src/mem/cache/tags/lru.cc	/^LRU::print() const {$/;"	f	class:LRU
print	src/mem/packet.cc	/^Packet::print() const {$/;"	f	class:Packet
print	src/mem/packet.cc	/^Packet::print(ostream &o, const int verbosity, const string &prefix) const$/;"	f	class:Packet
print	src/mem/ruby/buffers/MessageBuffer.cc	/^MessageBuffer::print(ostream& out) const$/;"	f	class:MessageBuffer
print	src/mem/ruby/buffers/MessageBufferNode.cc	/^MessageBufferNode::print(std::ostream& out) const$/;"	f	class:MessageBufferNode
print	src/mem/ruby/common/Address.cc	/^Address::print(std::ostream& out) const$/;"	f	class:Address
print	src/mem/ruby/common/DataBlock.cc	/^DataBlock::print(std::ostream& out) const$/;"	f	class:DataBlock
print	src/mem/ruby/common/Histogram.cc	/^Histogram::print(ostream& out) const$/;"	f	class:Histogram
print	src/mem/ruby/common/NetDest.cc	/^NetDest::print(std::ostream& out) const$/;"	f	class:NetDest
print	src/mem/ruby/common/Set.cc	/^Set::print(std::ostream& out) const$/;"	f	class:Set
print	src/mem/ruby/common/SubBlock.cc	/^SubBlock::print(std::ostream& out) const$/;"	f	class:SubBlock
print	src/mem/ruby/filters/BlockBloomFilter.cc	/^BlockBloomFilter::print(ostream& out) const$/;"	f	class:BlockBloomFilter
print	src/mem/ruby/filters/BulkBloomFilter.cc	/^BulkBloomFilter::print(ostream& out) const$/;"	f	class:BulkBloomFilter
print	src/mem/ruby/filters/GenericBloomFilter.cc	/^GenericBloomFilter::print(ostream& out) const$/;"	f	class:GenericBloomFilter
print	src/mem/ruby/filters/H3BloomFilter.cc	/^H3BloomFilter::print(ostream& out) const$/;"	f	class:H3BloomFilter
print	src/mem/ruby/filters/LSB_CountingBloomFilter.cc	/^LSB_CountingBloomFilter::print(ostream& out) const$/;"	f	class:LSB_CountingBloomFilter
print	src/mem/ruby/filters/MultiBitSelBloomFilter.cc	/^MultiBitSelBloomFilter::print(ostream& out) const$/;"	f	class:MultiBitSelBloomFilter
print	src/mem/ruby/filters/MultiGrainBloomFilter.cc	/^MultiGrainBloomFilter::print(ostream& out) const$/;"	f	class:MultiGrainBloomFilter
print	src/mem/ruby/filters/NonCountingBloomFilter.cc	/^NonCountingBloomFilter::print(ostream& out) const$/;"	f	class:NonCountingBloomFilter
print	src/mem/ruby/network/BasicLink.cc	/^BasicLink::print(std::ostream& out) const$/;"	f	class:BasicLink
print	src/mem/ruby/network/BasicRouter.cc	/^BasicRouter::print(std::ostream& out) const$/;"	f	class:BasicRouter
print	src/mem/ruby/network/Topology.hh	/^    void print(std::ostream& out) const { out << "[Topology]"; }$/;"	f	class:Topology
print	src/mem/ruby/network/fault_model/FaultModel.cc	/^FaultModel::print(void)$/;"	f	class:FaultModel
print	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.cc	/^GarnetExtLink_d::print(std::ostream& out) const$/;"	f	class:GarnetExtLink_d
print	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.cc	/^GarnetIntLink_d::print(std::ostream& out) const$/;"	f	class:GarnetIntLink_d
print	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.cc	/^GarnetNetwork_d::print(ostream& out) const$/;"	f	class:GarnetNetwork_d
print	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.hh	/^    void print(std::ostream& out) const {};$/;"	f	class:InputUnit_d
print	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.cc	/^NetworkInterface_d::print(std::ostream& out) const$/;"	f	class:NetworkInterface_d
print	src/mem/ruby/network/garnet/fixed-pipeline/NetworkLink_d.hh	/^    void print(std::ostream& out) const{}$/;"	f	class:NetworkLink_d
print	src/mem/ruby/network/garnet/fixed-pipeline/OutputUnit_d.hh	/^    void print(std::ostream& out) const {};$/;"	f	class:OutputUnit_d
print	src/mem/ruby/network/garnet/fixed-pipeline/SWallocator_d.hh	/^    void print(std::ostream& out) const {};$/;"	f	class:SWallocator_d
print	src/mem/ruby/network/garnet/fixed-pipeline/Switch_d.hh	/^    void print(std::ostream& out) const {};$/;"	f	class:Switch_d
print	src/mem/ruby/network/garnet/fixed-pipeline/VCallocator_d.hh	/^    void print(std::ostream& out) const {}$/;"	f	class:VCallocator_d
print	src/mem/ruby/network/garnet/fixed-pipeline/flitBuffer_d.cc	/^flitBuffer_d::print(std::ostream& out) const$/;"	f	class:flitBuffer_d
print	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.cc	/^flit_d::print(std::ostream& out) const$/;"	f	class:flit_d
print	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.cc	/^GarnetExtLink::print(std::ostream& out) const$/;"	f	class:GarnetExtLink
print	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.cc	/^GarnetIntLink::print(std::ostream& out) const$/;"	f	class:GarnetIntLink
print	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.cc	/^GarnetNetwork::print(ostream& out) const$/;"	f	class:GarnetNetwork
print	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.cc	/^NetworkInterface::print(std::ostream& out) const$/;"	f	class:NetworkInterface
print	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.hh	/^    void print(std::ostream& out) const {}$/;"	f	class:NetworkLink
print	src/mem/ruby/network/garnet/flexible-pipeline/Router.cc	/^Router::print(ostream& out) const$/;"	f	class:Router
print	src/mem/ruby/network/garnet/flexible-pipeline/VCarbiter.hh	/^    void print(std::ostream& out) const {}$/;"	f	class:VCarbiter
print	src/mem/ruby/network/garnet/flexible-pipeline/flit.cc	/^flit::print(std::ostream& out) const$/;"	f	class:flit
print	src/mem/ruby/network/garnet/flexible-pipeline/flitBuffer.cc	/^flitBuffer::print(std::ostream& out) const$/;"	f	class:flitBuffer
print	src/mem/ruby/network/orion/OrionLink.cc	/^void OrionLink::print() const$/;"	f	class:OrionLink
print	src/mem/ruby/network/orion/OrionRouter.cc	/^void OrionRouter::print() const$/;"	f	class:OrionRouter
print	src/mem/ruby/network/simple/PerfectSwitch.cc	/^PerfectSwitch::print(std::ostream& out) const$/;"	f	class:PerfectSwitch
print	src/mem/ruby/network/simple/SimpleLink.cc	/^SimpleExtLink::print(std::ostream& out) const$/;"	f	class:SimpleExtLink
print	src/mem/ruby/network/simple/SimpleLink.cc	/^SimpleIntLink::print(std::ostream& out) const$/;"	f	class:SimpleIntLink
print	src/mem/ruby/network/simple/SimpleNetwork.cc	/^SimpleNetwork::print(ostream& out) const$/;"	f	class:SimpleNetwork
print	src/mem/ruby/network/simple/Switch.cc	/^Switch::print(std::ostream& out) const$/;"	f	class:Switch
print	src/mem/ruby/network/simple/Throttle.cc	/^Throttle::print(ostream& out) const$/;"	f	class:Throttle
print	src/mem/ruby/profiler/AccessTraceForAddress.cc	/^AccessTraceForAddress::print(std::ostream& out) const$/;"	f	class:AccessTraceForAddress
print	src/mem/ruby/profiler/StoreTrace.cc	/^StoreTrace::print(ostream& out) const$/;"	f	class:StoreTrace
print	src/mem/ruby/recorder/CacheRecorder.cc	/^TraceRecord::print(ostream& out) const$/;"	f	class:TraceRecord
print	src/mem/ruby/slicc_interface/RubyRequest.cc	/^RubyRequest::print(ostream& out) const$/;"	f	class:RubyRequest
print	src/mem/ruby/structures/Prefetcher.cc	/^Prefetcher::print(std::ostream& out) const$/;"	f	class:Prefetcher
print	src/mem/ruby/system/CacheMemory.cc	/^CacheMemory::print(ostream& out) const$/;"	f	class:CacheMemory
print	src/mem/ruby/system/DirectoryMemory.cc	/^DirectoryMemory::print(ostream& out) const$/;"	f	class:DirectoryMemory
print	src/mem/ruby/system/MemoryNode.cc	/^MemoryNode::print(ostream& out) const$/;"	f	class:MemoryNode
print	src/mem/ruby/system/PerfectCacheMemory.hh	/^PerfectCacheMemory<ENTRY>::print(std::ostream& out) const$/;"	f	class:PerfectCacheMemory
print	src/mem/ruby/system/PersistentTable.cc	/^PersistentTable::print(ostream& out) const$/;"	f	class:PersistentTable
print	src/mem/ruby/system/PersistentTable.hh	/^    void print(std::ostream& out) const {}$/;"	f	class:PersistentTableEntry
print	src/mem/ruby/system/RubyMemoryControl.cc	/^RubyMemoryControl::print(ostream& out) const$/;"	f	class:RubyMemoryControl
print	src/mem/ruby/system/Sequencer.cc	/^Sequencer::print(ostream& out) const$/;"	f	class:Sequencer
print	src/mem/ruby/system/TBETable.hh	/^TBETable<ENTRY>::print(std::ostream& out) const$/;"	f	class:TBETable
print	src/mem/ruby/system/TimerTable.cc	/^TimerTable::print(std::ostream& out) const$/;"	f	class:TimerTable
print	src/mem/ruby/system/WireBuffer.cc	/^WireBuffer::print(ostream& out) const$/;"	f	class:WireBuffer
printAddr	src/cpu/simple/atomic.cc	/^AtomicSimpleCPU::printAddr(Addr a)$/;"	f	class:AtomicSimpleCPU
printAddr	src/cpu/simple/timing.cc	/^TimingSimpleCPU::printAddr(Addr a)$/;"	f	class:TimingSimpleCPU
printAddr	src/cpu/testers/memtest/memtest.cc	/^MemTest::printAddr(Addr a)$/;"	f	class:MemTest
printAddr	src/cpu/testers/networktest/networktest.cc	/^NetworkTest::printAddr(Addr a)$/;"	f	class:NetworkTest
printAddr	src/mem/port.cc	/^MasterPort::printAddr(Addr a)$/;"	f	class:MasterPort
printAggregateFaultProbability	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.cc	/^Router_d::printAggregateFaultProbability(std::ostream& out)$/;"	f	class:Router_d
printAvailableInsts	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::printAvailableInsts()$/;"	f	class:DefaultIEW
printCSwitch	src/mem/slicc/symbols/StateMachine.py	/^    def printCSwitch(self, path):$/;"	m	class:StateMachine
printCWakeup	src/mem/slicc/symbols/StateMachine.py	/^    def printCWakeup(self, path, includes):$/;"	m	class:StateMachine
printColumnLabels	src/cpu/legiontrace.cc	/^inline void printColumnLabels(ostream & os)$/;"	f	namespace:Trace
printCondition	src/arch/arm/insts/static_inst.cc	/^ArmStaticInst::printCondition(std::ostream &os,$/;"	f	class:ArmISA::ArmStaticInst
printConfig	src/cpu/testers/directedtest/RubyDirectedTester.hh	/^    void printConfig(std::ostream& out) const {}$/;"	f	class:RubyDirectedTester
printConfig	src/cpu/testers/rubytest/RubyTester.hh	/^    void printConfig(std::ostream& out) const {}$/;"	f	class:RubyTester
printControllerCC	src/mem/slicc/symbols/StateMachine.py	/^    def printControllerCC(self, path, includes):$/;"	m	class:StateMachine
printControllerHH	src/mem/slicc/symbols/StateMachine.py	/^    def printControllerHH(self, path):$/;"	m	class:StateMachine
printControllerPython	src/mem/slicc/symbols/StateMachine.py	/^    def printControllerPython(self, path):$/;"	m	class:StateMachine
printData	src/mem/ruby/system/CacheMemory.cc	/^CacheMemory::printData(ostream& out) const$/;"	f	class:CacheMemory
printDataInst	src/arch/arm/insts/static_inst.cc	/^ArmStaticInst::printDataInst(std::ostream &os, bool withImm,$/;"	f	class:ArmISA::ArmStaticInst
printDest	src/arch/arm/insts/mem.hh	/^    printDest(std::ostream &os) const$/;"	f	class:ArmISA::Memory
printDest	src/arch/arm/insts/mem.hh	/^    printDest(std::ostream &os) const$/;"	f	class:ArmISA::MemoryDImm
printDest	src/arch/arm/insts/mem.hh	/^    printDest(std::ostream &os) const$/;"	f	class:ArmISA::MemoryDReg
printDest	src/arch/arm/insts/mem.hh	/^    printDest(std::ostream &os) const$/;"	f	class:ArmISA::MemoryExDImm
printDest	src/arch/arm/insts/mem.hh	/^    printDest(std::ostream &os) const$/;"	f	class:ArmISA::MemoryExImm
printDestReg	src/arch/x86/insts/static_inst.cc	/^    X86StaticInst::printDestReg(std::ostream &os, int reg, int size) const$/;"	f	class:X86ISA::X86StaticInst
printDotty	src/mem/slicc/generate/dot.py	/^def printDotty(sm, code):$/;"	f
printEnumCC	src/mem/slicc/symbols/Type.py	/^    def printEnumCC(self, path):$/;"	m	class:Type
printEnumHH	src/mem/slicc/symbols/Type.py	/^    def printEnumHH(self, path):$/;"	m	class:Type
printExtendOperand	src/arch/arm/insts/static_inst.cc	/^ArmStaticInst::printExtendOperand(bool firstOperand, std::ostream &os,$/;"	f	class:ArmISA::ArmStaticInst
printFaultVector	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.cc	/^Router_d::printFaultVector(ostream& out)$/;"	f	class:Router_d
printHTMLTransitions	src/mem/slicc/symbols/StateMachine.py	/^    def printHTMLTransitions(self, path, active_state):$/;"	m	class:StateMachine
printInst	src/arch/arm/insts/mem.cc	/^Memory::printInst(std::ostream &os, AddrMode addrMode) const$/;"	f	class:ArmISA::Memory
printLabels	src/mem/packet.cc	/^Packet::PrintReqState::printLabels()$/;"	f	class:Packet::PrintReqState
printLevelHeader	src/cpu/legiontrace.cc	/^inline void printLevelHeader(ostream & os, int level)$/;"	f	namespace:Trace
printList	src/python/m5/debug.py	/^from m5.util import printList$/;"	i
printList	src/python/m5/util/__init__.py	/^def printList(items, indent=4):$/;"	f
printMem	src/arch/x86/insts/static_inst.cc	/^    void X86StaticInst::printMem(std::ostream &os, uint8_t segment,$/;"	f	class:X86ISA::X86StaticInst
printMemData	src/cpu/inorder/resources/cache_unit.cc	/^printMemData(uint8_t *data, unsigned size)$/;"	f	file:
printMemSymbol	src/arch/arm/insts/static_inst.cc	/^ArmStaticInst::printMemSymbol(std::ostream &os,$/;"	f	class:ArmISA::ArmStaticInst
printMnemonic	src/arch/arm/insts/static_inst.cc	/^ArmStaticInst::printMnemonic(std::ostream &os,$/;"	f	class:ArmISA::ArmStaticInst
printMnemonic	src/arch/x86/insts/static_inst.cc	/^    void X86StaticInst::printMnemonic(std::ostream &os,$/;"	f	class:X86ISA::X86StaticInst
printMsrBase	src/arch/arm/insts/misc.cc	/^MsrBase::printMsrBase(std::ostream &os) const$/;"	f	class:MsrBase
printNewDel	src/unittest/refcnttest.cc	/^bool printNewDel = false;$/;"	m	namespace:__anon106	file:
printObj	src/mem/packet.cc	/^Packet::PrintReqState::printObj(Printable *obj)$/;"	f	class:Packet::PrintReqState
printOffset	src/arch/arm/insts/mem.cc	/^MemoryReg::printOffset(std::ostream &os) const$/;"	f	class:ArmISA::MemoryReg
printOffset	src/arch/arm/insts/mem.hh	/^    printOffset(std::ostream &os) const$/;"	f	class:ArmISA::Memory
printOffset	src/arch/arm/insts/mem.hh	/^    printOffset(std::ostream &os) const$/;"	f	class:ArmISA::MemoryImm
printOnPass	src/unittest/unittest.cc	/^bool printOnPass() { return _printOnPass; }$/;"	f	namespace:UnitTest
printOnPass	src/unittest/unittest.cc	/^void printOnPass(bool newPrintOnPass) { _printOnPass = newPrintOnPass; }$/;"	f	namespace:UnitTest
printParams	src/mem/dram_ctrl.cc	/^DRAMCtrl::printParams() const$/;"	f	class:DRAMCtrl
printPercent	src/mem/ruby/common/Histogram.cc	/^Histogram::printPercent(ostream& out) const$/;"	f	class:Histogram
printProgress	src/mem/ruby/system/Sequencer.cc	/^Sequencer::printProgress(ostream& out) const$/;"	f	class:Sequencer
printQs	src/mem/dram_ctrl.cc	/^DRAMCtrl::printQs() const {$/;"	f	class:DRAMCtrl
printReg	src/arch/arm/insts/static_inst.cc	/^ArmStaticInst::printReg(std::ostream &os, int reg) const$/;"	f	class:ArmISA::ArmStaticInst
printReg	src/arch/power/insts/static_inst.cc	/^PowerStaticInst::printReg(std::ostream &os, int reg) const$/;"	f	class:PowerStaticInst
printReg	src/arch/x86/insts/static_inst.cc	/^    X86StaticInst::printReg(std::ostream &os, int reg, int size) const$/;"	f	class:X86ISA::X86StaticInst
printRegPair	src/cpu/legiontrace.cc	/^inline void printRegPair(ostream & os, char const * title, uint64_t a, uint64_t b)$/;"	f	namespace:Trace
printResults	src/unittest/unittest.cc	/^printResults()$/;"	f	namespace:UnitTest
printSectionHeader	src/cpu/legiontrace.cc	/^inline void printSectionHeader(ostream & os, const char * name)$/;"	f	namespace:Trace
printSegment	src/arch/x86/insts/static_inst.cc	/^    void X86StaticInst::printSegment(std::ostream &os, int segment) const$/;"	f	class:X86ISA::X86StaticInst
printShiftOperand	src/arch/arm/insts/static_inst.cc	/^ArmStaticInst::printShiftOperand(std::ostream &os,$/;"	f	class:ArmISA::ArmStaticInst
printSked	src/cpu/inorder/inorder_dyn_inst.hh	/^    void printSked()$/;"	f	class:InOrderDynInst
printSorted	src/mem/ruby/profiler/AddressProfiler.cc	/^printSorted(ostream& out, int num_of_sequencers, const AddressMap &record_map,$/;"	f
printSrcReg	src/arch/x86/insts/static_inst.cc	/^    X86StaticInst::printSrcReg(std::ostream &os, int reg, int size) const$/;"	f	class:X86ISA::X86StaticInst
printStats	src/cpu/testers/directedtest/RubyDirectedTester.hh	/^    void printStats(std::ostream& out) const {}$/;"	f	class:RubyDirectedTester
printStats	src/cpu/testers/rubytest/RubyTester.hh	/^    void printStats(std::ostream& out) const {}$/;"	f	class:RubyTester
printStats	src/mem/dramsim2_wrapper.cc	/^DRAMSim2Wrapper::printStats()$/;"	f	class:DRAMSim2Wrapper
printStats	src/mem/ruby/profiler/AddressProfiler.cc	/^AddressProfiler::printStats(ostream& out) const$/;"	f	class:AddressProfiler
printSummary	src/mem/ruby/profiler/StoreTrace.cc	/^StoreTrace::printSummary(ostream& out)$/;"	f	class:StoreTrace
printSystems	src/sim/system.cc	/^System::printSystems()$/;"	f	class:System
printSystems	src/sim/system.cc	/^printSystems()$/;"	f
printTarget	src/arch/arm/insts/static_inst.cc	/^ArmStaticInst::printTarget(std::ostream &os, Addr target,$/;"	f	class:ArmISA::ArmStaticInst
printTexTable	src/mem/slicc/generate/tex.py	/^def printTexTable(sm, code):$/;"	f
printThreadEvent	src/arch/alpha/linux/system.hh	/^    PrintThreadInfo *printThreadEvent;$/;"	m	class:LinuxAlphaSystem
printThreadEvent	src/arch/mips/linux/system.hh	/^    PrintThreadInfo *printThreadEvent;$/;"	m	class:LinuxMipsSystem
printTlb	src/arch/arm/tlb.cc	/^TLB::printTlb() const$/;"	f	class:TLB
printTypeCC	src/mem/slicc/symbols/Type.py	/^    def printTypeCC(self, path):$/;"	m	class:Type
printTypeHH	src/mem/slicc/symbols/Type.py	/^    def printTypeHH(self, path):$/;"	m	class:Type
printUnreferenced	src/base/inifile.cc	/^IniFile::Section::printUnreferenced(const string &sectionName)$/;"	f	class:IniFile::Section
printUnreferenced	src/base/inifile.cc	/^IniFile::printUnreferenced()$/;"	f	class:IniFile
printWithMultiplier	src/mem/ruby/common/Histogram.cc	/^Histogram::printWithMultiplier(ostream& out, double multiplier) const$/;"	f	class:Histogram
print_all	src/mem/ruby/network/orion/Allocator/SWAllocator.cc	/^void SWAllocator::print_all() const$/;"	f	class:SWAllocator
print_all	src/mem/ruby/network/orion/Allocator/VCAllocator.cc	/^void VCAllocator::print_all() const$/;"	f	class:VCAllocator
print_all	src/mem/ruby/network/orion/Buffer/Buffer.cc	/^void Buffer::print_all() const$/;"	f	class:Buffer
print_all	src/mem/ruby/network/orion/Crossbar/Crossbar.cc	/^void Crossbar::print_all() const$/;"	f	class:Crossbar
print_config	src/mem/ruby/network/orion/OrionConfig.cc	/^void OrionConfig::print_config(ostream& out_)$/;"	f	class:OrionConfig
print_debug	src/arch/micro_asm_test.py	/^    def print_debug(self, message):$/;"	m	class:TestMacroop
print_error	src/arch/micro_asm.py	/^def print_error(message):$/;"	f
print_ini	src/python/m5/SimObject.py	/^    def print_ini(self, ini_file):$/;"	f
print_sign	src/base/cprintf_formats.hh	/^    bool print_sign;$/;"	m	struct:cp::Format
printfEvent	src/arch/alpha/tru64/system.hh	/^    PrintfEvent *printfEvent;$/;"	m	class:Tru64AlphaSystem
printinfo	src/python/m5/util/jobfile.py	/^    def printinfo(self):$/;"	m	class:Configuration
printinfo	src/python/m5/util/jobfile.py	/^    def printinfo(self):$/;"	m	class:Data
printinfo	src/python/m5/util/jobfile.py	/^    def printinfo(self):$/;"	m	class:Group
printinfo	src/python/m5/util/jobfile.py	/^    def printinfo(self):$/;"	m	class:Job
printinfo	src/python/m5/util/jobfile.py	/^    def printinfo(self):$/;"	m	class:Option
printverbose	src/python/m5/util/jobfile.py	/^    def printverbose(self):$/;"	m	class:Data
priocntlset	src/kern/tru64/tru64_syscalls.hh	/^        priocntlset = 237,$/;"	e	enum:SystemCalls::__anon102
priority	src/arch/sparc/faults.hh	/^        const FaultPriority priority;$/;"	m	struct:SparcISA::SparcFaultBase::FaultVals
priority	src/arch/sparc/faults.hh	/^    FaultPriority priority() { return 3200 - _n*100; }$/;"	f	class:SparcISA::InterruptLevelN
priority	src/arch/sparc/faults.hh	/^    FaultPriority priority() { return vals.priority; }$/;"	f	class:SparcISA::SparcFault
priority	src/cpu/inorder/pipeline_traits.5stage.hh	/^        int priority;$/;"	m	struct:ThePipeline::ScheduleEntry
priority	src/cpu/inorder/pipeline_traits.9stage.hh	/^        int priority;$/;"	m	struct:ThePipeline::ScheduleEntry
priority	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^        int priority;$/;"	m	struct:ThePipeline::ScheduleEntry
priority	src/cpu/inorder/resource_sked.hh	/^    int priority;$/;"	m	class:ScheduleEntry
priority	src/kern/tru64/tru64.hh	/^        int priority;   \/\/!< priority$/;"	m	struct:Tru64::nxm_thread_attr
priority	src/sim/eventq.hh	/^    Priority priority() const { return _priority; }$/;"	f	class:Event
priorityList	src/cpu/o3/fetch.hh	/^    std::list<ThreadID> priorityList;$/;"	m	class:DefaultFetch
priority_list	src/cpu/o3/commit.hh	/^    std::list<ThreadID> priority_list;$/;"	m	class:DefaultCommit
priv	src/arch/sparc/miscregs.hh	/^    Bitfield<2> priv;$/;"	m	namespace:SparcISA
priv	src/arch/sparc/pagetable.hh	/^    bool priv()     const { assert(populated); return bits(entry4u,2,2); }$/;"	f	class:SparcISA::PageTableEntry
priv	src/dev/pktfifo.hh	/^    int priv;$/;"	m	struct:PacketFifoEntry
privSyscallDescs32	src/arch/arm/linux/process.cc	/^static SyscallDesc privSyscallDescs32[] = {$/;"	v	file:
privSyscallDescs64	src/arch/arm/linux/process.cc	/^static SyscallDesc privSyscallDescs64[] = {$/;"	v	file:
privateFlags	src/mem/request.hh	/^    PrivateFlags privateFlags;$/;"	m	class:Request
prm	src/arch/mips/dt_constants.hh	/^    Bitfield<3> prm;$/;"	m	namespace:MipsISA
probeEntry	src/arch/mips/tlb.cc	/^TLB::probeEntry(Addr vpn, uint8_t asn) const$/;"	f	class:TLB
probeEntry	src/arch/power/tlb.cc	/^TLB::probeEntry(Addr vpn,uint8_t asn) const$/;"	f	class:TLB
probeManager	src/sim/sim_object.hh	/^    ProbeManager *probeManager;$/;"	m	class:SimObject
procDelaySlotOnMispred	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool procDelaySlotOnMispred;$/;"	m	class:InOrderDynInst
procId	src/arch/mips/pra_constants.hh	/^    Bitfield<15, 8>  procId;$/;"	m	namespace:MipsISA
procInfo	src/base/hostinfo.cc	/^procInfo(const char *filename, const char *target)$/;"	f
procMeminfo	src/kern/linux/linux.cc	/^Linux::procMeminfo(LiveProcess *process, ThreadContext *tc)$/;"	f	class:Linux
proc_id0	src/dev/arm/RealView.py	/^    proc_id0 = Param.UInt32(0x0C000000, "Processor ID, SYS_PROCID")$/;"	v	class:RealViewCtrl
proc_id1	src/dev/arm/RealView.py	/^    proc_id1 = Param.UInt32(0x0C000222, "Processor ID, SYS_PROCID1")$/;"	v	class:RealViewCtrl
process	src/arch/alpha/decoder.hh	/^    process()$/;"	f	class:AlphaISA::Decoder
process	src/arch/alpha/freebsd/system.cc	/^FreebsdAlphaSystem::SkipCalibrateClocksEvent::process(ThreadContext *tc)$/;"	f	class:FreebsdAlphaSystem::SkipCalibrateClocksEvent
process	src/arch/alpha/idle_event.cc	/^IdleStartEvent::process(ThreadContext *tc)$/;"	f	class:IdleStartEvent
process	src/arch/alpha/linux/system.cc	/^LinuxAlphaSystem::PrintThreadInfo::process(ThreadContext *tc)$/;"	f	class:LinuxAlphaSystem::PrintThreadInfo
process	src/arch/alpha/linux/system.cc	/^LinuxAlphaSystem::SkipDelayLoopEvent::process(ThreadContext *tc)$/;"	f	class:LinuxAlphaSystem::SkipDelayLoopEvent
process	src/arch/arm/decoder.cc	/^Decoder::process()$/;"	f	class:ArmISA::Decoder
process	src/arch/arm/linux/system.cc	/^DumpStatsPCEvent::process(ThreadContext *tc)$/;"	f	class:DumpStatsPCEvent
process	src/arch/mips/decoder.hh	/^    process()$/;"	f	class:MipsISA::Decoder
process	src/arch/mips/idle_event.cc	/^IdleStartEvent::process(ThreadContext *tc)$/;"	f	class:IdleStartEvent
process	src/arch/mips/isa.cc	/^ISA::CP0Event::process()$/;"	f	class:MipsISA::ISA::CP0Event
process	src/arch/mips/linux/system.cc	/^LinuxMipsSystem::PrintThreadInfo::process(ThreadContext *tc)$/;"	f	class:LinuxMipsSystem::PrintThreadInfo
process	src/arch/mips/linux/system.cc	/^LinuxMipsSystem::SkipDelayLoopEvent::process(ThreadContext *tc)$/;"	f	class:LinuxMipsSystem::SkipDelayLoopEvent
process	src/arch/power/decoder.hh	/^    process()$/;"	f	class:PowerISA::Decoder
process	src/arch/sparc/decoder.hh	/^    void process() {}$/;"	f	class:SparcISA::Decoder
process	src/arch/x86/decoder.cc	/^Decoder::process()$/;"	f	class:X86ISA::Decoder
process	src/arch/x86/interrupts.hh	/^        void process()$/;"	f	class:X86ISA::Interrupts::ApicTimerEvent
process	src/base/callback.hh	/^    process()$/;"	f	class:CallbackQueue
process	src/base/callback.hh	/^    void process() { (object->*F)(); }$/;"	f	class:MakeCallback
process	src/base/cp_annotate.cc	/^AnnotateDumpCallback::process()$/;"	f	class:AnnotateDumpCallback
process	src/base/cprintf.cc	/^Print::process()$/;"	f	class:cp::Print
process	src/base/remote_gdb.cc	/^BaseRemoteGDB::Event::process(int revent)$/;"	f	class:BaseRemoteGDB::Event
process	src/base/remote_gdb.cc	/^BaseRemoteGDB::HardBreakpoint::process(ThreadContext *tc)$/;"	f	class:BaseRemoteGDB::HardBreakpoint
process	src/base/remote_gdb.cc	/^GDBListener::Event::process(int revent)$/;"	f	class:GDBListener::Event
process	src/base/vnc/vncserver.cc	/^VncServer::DataEvent::process(int revent)$/;"	f	class:VncServer::DataEvent
process	src/base/vnc/vncserver.cc	/^VncServer::ListenEvent::process(int revent)$/;"	f	class:VncServer::ListenEvent
process	src/cpu/base.cc	/^BaseCPU::ProfileEvent::process()$/;"	f	class:BaseCPU::ProfileEvent
process	src/cpu/base.cc	/^CPUProgressEvent::process()$/;"	f	class:CPUProgressEvent
process	src/cpu/cpuevent.hh	/^    void process() { (object->*F)(tc); }$/;"	f	class:CpuEventWrapper
process	src/cpu/inorder/cpu.cc	/^InOrderCPU::CPUEvent::process()$/;"	f	class:InOrderCPU::CPUEvent
process	src/cpu/inorder/cpu.cc	/^InOrderCPU::TickEvent::process()$/;"	f	class:InOrderCPU::TickEvent
process	src/cpu/inorder/resource.cc	/^ResourceEvent::process()$/;"	f	class:ResourceEvent
process	src/cpu/inorder/resource_pool.9stage.cc	/^ResourcePool::ResPoolEvent::process()$/;"	f	class:ResourcePool::ResPoolEvent
process	src/cpu/inorder/resource_pool.cc	/^ResourcePool::ResPoolEvent::process()$/;"	f	class:ResourcePool::ResPoolEvent
process	src/cpu/inorder/resources/cache_unit.cc	/^CacheUnitEvent::process()$/;"	f	class:CacheUnitEvent
process	src/cpu/inorder/resources/fetch_seq_unit.cc	/^FetchSeqUnit::FetchSeqEvent::process()$/;"	f	class:FetchSeqUnit::FetchSeqEvent
process	src/cpu/inorder/resources/mult_div_unit.cc	/^MDUEvent::process()$/;"	f	class:MDUEvent
process	src/cpu/inorder/resources/tlb_unit.cc	/^TLBUnitEvent::process()$/;"	f	class:TLBUnitEvent
process	src/cpu/kvm/base.hh	/^        void process() { cpu.tick(); }$/;"	f	struct:BaseKvmCPU::TickEvent
process	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::TrapEvent::process()$/;"	f	class:DefaultCommit::TrapEvent
process	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::ActivateThreadEvent::process()$/;"	f	class:FullO3CPU::ActivateThreadEvent
process	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::DeallocateContextEvent::process()$/;"	f	class:FullO3CPU::DeallocateContextEvent
process	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::TickEvent::process()$/;"	f	class:FullO3CPU::TickEvent
process	src/cpu/o3/fetch.hh	/^        void process()$/;"	f	class:DefaultFetch::FinishTranslationEvent
process	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::FUCompletion::process()$/;"	f	class:InstructionQueue::FUCompletion
process	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::WritebackEvent::process()$/;"	f	class:LSQUnit::WritebackEvent
process	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::DCacheCompletionEvent::process()$/;"	f	class:BackEnd::DCacheCompletionEvent
process	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::LdWritebackEvent::process()$/;"	f	class:BackEnd::LdWritebackEvent
process	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::TickEvent::process()$/;"	f	class:OzoneCPU::TickEvent
process	src/cpu/ozone/inorder_back_end_impl.hh	/^InorderBackEnd<Impl>::DCacheCompletionEvent::process()$/;"	f	class:InorderBackEnd::DCacheCompletionEvent
process	src/cpu/ozone/lsq_unit_impl.hh	/^OzoneLSQ<Impl>::StoreCompletionEvent::process()$/;"	f	class:OzoneLSQ::StoreCompletionEvent
process	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::TrapEvent::process()$/;"	f	class:LWBackEnd::TrapEvent
process	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::WritebackEvent::process()$/;"	f	class:OzoneLWLSQ::WritebackEvent
process	src/cpu/pc_event.cc	/^BreakPCEvent::process(ThreadContext *tc)$/;"	f	class:BreakPCEvent
process	src/cpu/pc_event.cc	/^PanicPCEvent::process(ThreadContext *tc)$/;"	f	class:PanicPCEvent
process	src/cpu/quiesce_event.cc	/^EndQuiesceEvent::process()$/;"	f	class:EndQuiesceEvent
process	src/cpu/simple/atomic.cc	/^AtomicSimpleCPU::TickEvent::process()$/;"	f	class:AtomicSimpleCPU::TickEvent
process	src/cpu/simple/timing.cc	/^TimingSimpleCPU::DcachePort::DTickEvent::process()$/;"	f	class:TimingSimpleCPU::DcachePort::DTickEvent
process	src/cpu/simple/timing.cc	/^TimingSimpleCPU::IcachePort::ITickEvent::process()$/;"	f	class:TimingSimpleCPU::IcachePort::ITickEvent
process	src/cpu/simple/timing.cc	/^TimingSimpleCPU::IprEvent::process()$/;"	f	class:TimingSimpleCPU::IprEvent
process	src/cpu/testers/directedtest/RubyDirectedTester.hh	/^        void process() { tester->wakeup(); }$/;"	f	class:RubyDirectedTester::DirectedStartEvent
process	src/cpu/testers/memtest/memtest.hh	/^        void process() { cpu->tick(); }$/;"	f	class:MemTest::TickEvent
process	src/cpu/testers/networktest/networktest.hh	/^        void process() { cpu->tick(); }$/;"	f	class:NetworkTest::TickEvent
process	src/cpu/testers/rubytest/RubyTester.hh	/^        void process() { tester->wakeup(); }$/;"	f	class:RubyTester::CheckStartEvent
process	src/cpu/thread_state.hh	/^    Process *process;$/;"	m	struct:ThreadState
process	src/dev/arm/gic_pl390.hh	/^        void process() { platform->intrctrl->post(cpu, ArmISA::INT_IRQ, 0);}$/;"	f	class:Pl390::PostIntEvent
process	src/dev/arm/hdlcd.hh	/^        void process() {$/;"	f	class:HDLcd::DmaDoneEvent
process	src/dev/arm/pl111.hh	/^        void process() {$/;"	f	class:Pl111::DmaDoneEvent
process	src/dev/arm/vgic.hh	/^        void process() { platform->intrctrl->post(cpu, ArmISA::INT_VIRT_IRQ, 0);}$/;"	f	class:VGic::PostVIntEvent
process	src/dev/disk_image.cc	/^    void process() { image->save(); delete this; }$/;"	f	class:CowDiskCallback
process	src/dev/etherbus.hh	/^        virtual void process() { bus->txDone(); }$/;"	f	class:EtherBus::DoneEvent
process	src/dev/etherlink.cc	/^LinkDelayEvent::process()$/;"	f	class:LinkDelayEvent
process	src/dev/ethertap.cc	/^        virtual void process(int revent) { listener->accept(); }$/;"	f	class:TapListener::Event
process	src/dev/ethertap.cc	/^    virtual void process(int revent) { tap->process(revent); }$/;"	f	class:TapEvent
process	src/dev/ethertap.cc	/^EtherTap::process(int revent)$/;"	f	class:EtherTap
process	src/dev/ethertap.hh	/^        void process() { tap->retransmit(); }$/;"	f	class:EtherTap::TxEvent
process	src/dev/intel_8254_timer.cc	/^Intel8254Timer::Counter::CounterEvent::process()$/;"	f	class:Intel8254Timer::Counter::CounterEvent
process	src/dev/mc146818.cc	/^MC146818::RTCEvent::process()$/;"	f	class:MC146818::RTCEvent
process	src/dev/mc146818.cc	/^MC146818::RTCTickEvent::process()$/;"	f	class:MC146818::RTCTickEvent
process	src/dev/terminal.cc	/^Terminal::DataEvent::process(int revent)$/;"	f	class:Terminal::DataEvent
process	src/dev/terminal.cc	/^Terminal::ListenEvent::process(int revent)$/;"	f	class:Terminal::ListenEvent
process	src/dev/uart8250.cc	/^Uart8250::IntrEvent::process()$/;"	f	class:Uart8250::IntrEvent
process	src/kern/linux/events.cc	/^DebugPrintkEvent::process(ThreadContext *tc)$/;"	f	class:Linux::DebugPrintkEvent
process	src/kern/linux/events.cc	/^UDelayEvent::process(ThreadContext *tc)$/;"	f	class:Linux::UDelayEvent
process	src/kern/system_events.cc	/^SkipFuncEvent::process(ThreadContext *tc)$/;"	f	class:SkipFuncEvent
process	src/kern/tru64/tru64_events.cc	/^BadAddrEvent::process(ThreadContext *tc)$/;"	f	class:BadAddrEvent
process	src/kern/tru64/tru64_events.cc	/^DebugPrintfEvent::process(ThreadContext *tc)$/;"	f	class:DebugPrintfEvent
process	src/kern/tru64/tru64_events.cc	/^DumpMbufEvent::process(ThreadContext *tc)$/;"	f	class:DumpMbufEvent
process	src/kern/tru64/tru64_events.cc	/^PrintfEvent::process(ThreadContext *tc)$/;"	f	class:PrintfEvent
process	src/mem/cache/tags/base.hh	/^    virtual void process() { tags->cleanupRefs(); };$/;"	f	class:BaseTagsCallback
process	src/mem/cache/tags/base.hh	/^    virtual void process() { tags->computeStats(); };$/;"	f	class:BaseTagsDumpCallback
process	src/mem/ruby/common/Consumer.hh	/^          void process() { m_consumer_ptr->wakeup(); }$/;"	f	class:Consumer::ConsumerEvent
process	src/mem/ruby/network/Network.hh	/^        void process() {ctr->collateStats();}$/;"	f	class:Network::StatsCallback
process	src/mem/ruby/slicc_interface/AbstractController.hh	/^        void process() {ctr->collateStats();}$/;"	f	class:AbstractController::StatsCallback
process	src/mem/ruby/system/MemoryControl.hh	/^        void process() { mem_cntrl->wakeup(); }$/;"	f	class:MemoryControl::MemCntrlEvent
process	src/mem/ruby/system/Sequencer.hh	/^        void process() { m_sequencer_ptr->wakeup(); }$/;"	f	class:Sequencer::SequencerWakeupEvent
process	src/mem/ruby/system/System.cc	/^RubySystem::RubyEvent::process()$/;"	f	class:RubySystem::RubyEvent
process	src/mem/ruby/system/System.hh	/^    void process() { ruby_system->collateStats(); }$/;"	f	class:RubyStatsCallback
process	src/mem/se_translating_port_proxy.hh	/^    Process *process;$/;"	m	class:SETranslatingPortProxy
process	src/mem/slicc/parser.py	/^    def process(self):$/;"	m	class:SLICC
process	src/python/swig/pyevent.cc	/^PythonEvent::process()$/;"	f	class:PythonEvent
process	src/sim/debug.cc	/^DebugBreakEvent::process()$/;"	f	class:DebugBreakEvent
process	src/sim/eventq.hh	/^    void process() { (object->*F)(); }$/;"	f	class:EventWrapper
process	src/sim/global_event.cc	/^GlobalEvent::BarrierEvent::process()$/;"	f	class:GlobalEvent::BarrierEvent
process	src/sim/global_event.cc	/^GlobalSyncEvent::BarrierEvent::process()$/;"	f	class:GlobalSyncEvent::BarrierEvent
process	src/sim/global_event.cc	/^GlobalSyncEvent::process()$/;"	f	class:GlobalSyncEvent
process	src/sim/sim_events.cc	/^CountedExitEvent::process()$/;"	f	class:CountedExitEvent
process	src/sim/sim_events.cc	/^GlobalSimLoopExitEvent::process()$/;"	f	class:GlobalSimLoopExitEvent
process	src/sim/sim_events.cc	/^LocalSimLoopExitEvent::process()$/;"	f	class:LocalSimLoopExitEvent
process	src/sim/stat_control.cc	/^    process()$/;"	f	class:Stats::StatEvent
process	src/sim/stat_control.cc	/^    void process()$/;"	f	struct:Stats::SimTicksReset
processBarriers	src/cpu/ozone/front_end_impl.hh	/^FrontEnd<Impl>::processBarriers(DynInstPtr &inst)$/;"	f	class:FrontEnd
processCacheCompletion	src/cpu/inorder/resources/cache_unit.cc	/^CacheUnit::processCacheCompletion(PacketPtr pkt)$/;"	f	class:CacheUnit
processCacheCompletion	src/cpu/inorder/resources/fetch_unit.cc	/^FetchUnit::processCacheCompletion(PacketPtr pkt)$/;"	f	class:FetchUnit
processCacheCompletion	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::processCacheCompletion(PacketPtr pkt)$/;"	f	class:DefaultFetch
processCacheCompletion	src/cpu/ozone/front_end_impl.hh	/^FrontEnd<Impl>::processCacheCompletion(PacketPtr pkt)$/;"	f	class:FrontEnd
processCommand	src/dev/arm/kmi.cc	/^Pl050::processCommand(uint8_t byte)$/;"	f	class:Pl050
processContextDesc	src/dev/i8254xGBe.cc	/^IGbE::TxDescCache::processContextDesc()$/;"	f	class:IGbE::TxDescCache
processData	src/dev/x86/i8042.cc	/^X86ISA::PS2Keyboard::processData(uint8_t data)$/;"	f	class:X86ISA::PS2Keyboard
processData	src/dev/x86/i8042.cc	/^X86ISA::PS2Mouse::processData(uint8_t data)$/;"	f	class:X86ISA::PS2Mouse
processFUCompletion	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::processFUCompletion(DynInstPtr &inst, int fu_idx)$/;"	f	class:InstructionQueue
processFreeUnits	src/cpu/o3/fu_pool.cc	/^FUPool::processFreeUnits()$/;"	f	class:FUPool
processHSTickCompare	src/arch/sparc/ua2005.cc	/^ISA::processHSTickCompare(ThreadContext *tc)$/;"	f	class:ISA
processInst	src/cpu/ozone/front_end_impl.hh	/^FrontEnd<Impl>::processInst(DynInstPtr &inst)$/;"	f	class:FrontEnd
processInstSchedule	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::processInstSchedule(DynInstPtr inst,int &reqs_processed)$/;"	f	class:PipelineStage
processInsts	src/cpu/inorder/first_stage.cc	/^FirstStage::processInsts(ThreadID tid)$/;"	f	class:FirstStage
processInsts	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::processInsts(ThreadID tid)$/;"	f	class:PipelineStage
processInterrupts	src/cpu/inorder/cpu.cc	/^InOrderCPU::processInterrupts(Fault interrupt)$/;"	f	class:InOrderCPU
processInterrupts	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::processInterrupts(Fault interrupt)$/;"	f	class:FullO3CPU
processInterrupts	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::processInterrupts()$/;"	f	class:OzoneCPU
processNans	src/arch/arm/insts/vfp.cc	/^FpOp::processNans(FPSCR &fpscr, bool &done, bool defaultNan,$/;"	f	class:ArmISA::FpOp
processNextReqEvent	src/mem/dram_ctrl.cc	/^DRAMCtrl::processNextReqEvent()$/;"	f	class:DRAMCtrl
processRefreshEvent	src/mem/dram_ctrl.cc	/^DRAMCtrl::processRefreshEvent()$/;"	f	class:DRAMCtrl
processRespondEvent	src/mem/dram_ctrl.cc	/^DRAMCtrl::processRespondEvent()$/;"	f	class:DRAMCtrl
processSTickCompare	src/arch/sparc/ua2005.cc	/^ISA::processSTickCompare(ThreadContext *tc)$/;"	f	class:ISA
processSendEvent	src/mem/packet_queue.cc	/^PacketQueue::processSendEvent()$/;"	f	class:PacketQueue
processSquash	src/cpu/inorder/resources/cache_unit.cc	/^CacheUnit::processSquash(CacheReqPacket *cache_pkt)$/;"	f	class:CacheUnit
processStage	src/cpu/inorder/first_stage.cc	/^FirstStage::processStage(bool &status_change)$/;"	f	class:FirstStage
processStage	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::processStage(bool &status_change)$/;"	f	class:PipelineStage
processThread	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::processThread(bool &status_change, ThreadID tid)$/;"	f	class:PipelineStage
processTickCompare	src/arch/sparc/ua2005.cc	/^ISA::processTickCompare(ThreadContext *tc)$/;"	f	class:ISA
processWalk	src/arch/arm/table_walker.cc	/^TableWalker::processWalk()$/;"	f	class:TableWalker
processWalkAArch64	src/arch/arm/table_walker.cc	/^TableWalker::processWalkAArch64()$/;"	f	class:TableWalker
processWalkLPAE	src/arch/arm/table_walker.cc	/^TableWalker::processWalkLPAE()$/;"	f	class:TableWalker
processWalkWrapper	src/arch/arm/table_walker.cc	/^TableWalker::processWalkWrapper()$/;"	f	class:TableWalker
processWriteEvent	src/mem/dram_ctrl.cc	/^DRAMCtrl::processWriteEvent()$/;"	f	class:DRAMCtrl
process_flag	src/base/cprintf.cc	/^Print::process_flag()$/;"	f	class:cp::Print
process_output	src/arch/isa_parser.py	/^    def process_output(self, s):$/;"	m	class:ISAParser
processing	src/cpu/inorder/resource.hh	/^    bool processing;$/;"	m	class:ResourceRequest
procid	src/arch/arm/miscregs.hh	/^      Bitfield<31,8> procid;$/;"	m	namespace:ArmISA
procs	src/arch/alpha/linux/linux.hh	/^       uint16_t procs;     \/* Number of current processes *\/$/;"	m	struct:AlphaLinux::__anon2
procs	src/arch/arm/linux/linux.hh	/^        uint16_t procs;     \/* Number of current processes *\/$/;"	m	struct:ArmLinux32::__anon8
procs	src/arch/arm/linux/linux.hh	/^        uint16_t procs;     \/* Number of current processes *\/$/;"	m	struct:ArmLinux64::__anon11
procs	src/arch/mips/linux/linux.hh	/^       uint16_t procs;     \/* Number of current processes *\/$/;"	m	struct:MipsLinux::__anon20
procs	src/arch/sparc/linux/linux.hh	/^        uint16_t procs;     \/* Number of current processes *\/$/;"	m	struct:Sparc32Linux::__anon28
procs	src/arch/sparc/linux/linux.hh	/^        uint16_t procs;     \/* Number of current processes *\/$/;"	m	struct:SparcLinux::__anon26
procs	src/arch/x86/linux/linux.hh	/^        uint16_t procs;     \/* Number of current processes *\/$/;"	m	struct:X86Linux64::__anon32
procs	src/arch/x86/linux/linux.hh	/^       uint16_t procs;     \/* Number of current processes *\/$/;"	m	struct:X86Linux32::__anon34
producerInst	src/cpu/o3/iew.hh	/^    Stats::Vector producerInst;$/;"	m	class:DefaultIEW
producerInst	src/cpu/ozone/lw_back_end.hh	/^    Stats::Vector producerInst;$/;"	m	class:LWBackEnd
producer_inst	src/cpu/ozone/back_end.hh	/^    Stats::Vector producer_inst;$/;"	m	class:BackEnd
productID	src/arch/x86/bios/intelmp.hh	/^    std::string productID;$/;"	m	class:X86ISA::IntelMP::ConfigTable
product_id	src/arch/x86/bios/IntelMP.py	/^    product_id = Param.String("", 'product family')$/;"	v	class:X86IntelMPConfigTable
product_id	src/dev/arm/hdlcd.hh	/^        Bitfield<31,16> product_id;$/;"	m	class:HDLcd
prof	src/base/loader/coff_sym.h	/^    unsigned prof : 1;  \/* true if compiled with -pg *\/$/;"	m	struct:pdr
prof	src/kern/linux/linux_syscalls.hh	/^    prof = 152,$/;"	e	enum:SystemCalls::__anon87
profil	src/kern/linux/linux_syscalls.hh	/^    profil = 153,$/;"	e	enum:SystemCalls::__anon87
profil	src/kern/tru64/tru64_syscalls.hh	/^        profil = 44,$/;"	e	enum:SystemCalls::__anon102
profile	src/cpu/BaseCPU.py	/^    profile = Param.Latency('0ns', "trace the kernel stack")$/;"	v
profile	src/cpu/thread_state.hh	/^    FunctionProfile *profile;$/;"	m	struct:ThreadState
profileClear	src/cpu/checker/thread_context.hh	/^    void profileClear() { return actualTC->profileClear(); }$/;"	f	class:CheckerThreadContext
profileClear	src/cpu/inorder/thread_context.cc	/^InOrderThreadContext::profileClear()$/;"	f	class:InOrderThreadContext
profileClear	src/cpu/o3/thread_context_impl.hh	/^O3ThreadContext<Impl>::profileClear()$/;"	f	class:O3ThreadContext
profileClear	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::OzoneTC::profileClear()$/;"	f	class:OzoneCPU::OzoneTC
profileClear	src/cpu/thread_context.hh	/^    void profileClear() { return actualTC->profileClear(); }$/;"	f	class:ProxyThreadContext
profileClear	src/cpu/thread_state.cc	/^ThreadState::profileClear()$/;"	f	class:ThreadState
profileEvent	src/cpu/base.hh	/^    ProfileEvent *profileEvent;$/;"	m	class:BaseCPU
profileGetS	src/mem/ruby/profiler/AddressProfiler.cc	/^AddressProfiler::profileGetS(const Address& datablock, const Address& PC,$/;"	f	class:AddressProfiler
profileGetX	src/mem/ruby/profiler/AddressProfiler.cc	/^AddressProfiler::profileGetX(const Address& datablock, const Address& PC,$/;"	f	class:AddressProfiler
profileMemArbWait	src/mem/ruby/profiler/MemCntrlProfiler.cc	/^MemCntrlProfiler::profileMemArbWait(int cycles)$/;"	f	class:MemCntrlProfiler
profileMemBankBusy	src/mem/ruby/profiler/MemCntrlProfiler.cc	/^MemCntrlProfiler::profileMemBankBusy()$/;"	f	class:MemCntrlProfiler
profileMemBankQ	src/mem/ruby/profiler/MemCntrlProfiler.cc	/^MemCntrlProfiler::profileMemBankQ(int cycles)$/;"	f	class:MemCntrlProfiler
profileMemBusBusy	src/mem/ruby/profiler/MemCntrlProfiler.cc	/^MemCntrlProfiler::profileMemBusBusy()$/;"	f	class:MemCntrlProfiler
profileMemDataBusBusy	src/mem/ruby/profiler/MemCntrlProfiler.cc	/^MemCntrlProfiler::profileMemDataBusBusy()$/;"	f	class:MemCntrlProfiler
profileMemInputQ	src/mem/ruby/profiler/MemCntrlProfiler.cc	/^MemCntrlProfiler::profileMemInputQ(int cycles)$/;"	f	class:MemCntrlProfiler
profileMemNotOld	src/mem/ruby/profiler/MemCntrlProfiler.cc	/^MemCntrlProfiler::profileMemNotOld()$/;"	f	class:MemCntrlProfiler
profileMemRandBusy	src/mem/ruby/profiler/MemCntrlProfiler.cc	/^MemCntrlProfiler::profileMemRandBusy()$/;"	f	class:MemCntrlProfiler
profileMemRead	src/mem/ruby/profiler/MemCntrlProfiler.cc	/^MemCntrlProfiler::profileMemRead()$/;"	f	class:MemCntrlProfiler
profileMemReadWriteBusy	src/mem/ruby/profiler/MemCntrlProfiler.cc	/^MemCntrlProfiler::profileMemReadWriteBusy()$/;"	f	class:MemCntrlProfiler
profileMemRefresh	src/mem/ruby/profiler/MemCntrlProfiler.cc	/^MemCntrlProfiler::profileMemRefresh()$/;"	f	class:MemCntrlProfiler
profileMemReq	src/mem/ruby/profiler/MemCntrlProfiler.cc	/^MemCntrlProfiler::profileMemReq(int bank)$/;"	f	class:MemCntrlProfiler
profileMemTfawBusy	src/mem/ruby/profiler/MemCntrlProfiler.cc	/^MemCntrlProfiler::profileMemTfawBusy()$/;"	f	class:MemCntrlProfiler
profileMemWaitCycles	src/mem/ruby/profiler/MemCntrlProfiler.cc	/^MemCntrlProfiler::profileMemWaitCycles(int cycles)$/;"	f	class:MemCntrlProfiler
profileMemWrite	src/mem/ruby/profiler/MemCntrlProfiler.cc	/^MemCntrlProfiler::profileMemWrite()$/;"	f	class:MemCntrlProfiler
profileMsgDelay	src/mem/ruby/slicc_interface/AbstractController.cc	/^AbstractController::profileMsgDelay(uint32_t virtualNetwork, Cycles delay)$/;"	f	class:AbstractController
profileNode	src/cpu/thread_state.hh	/^    ProfileNode *profileNode;$/;"	m	struct:ThreadState
profilePC	src/cpu/thread_state.hh	/^    Addr profilePC;$/;"	m	struct:ThreadState
profileRetry	src/mem/ruby/profiler/AddressProfiler.cc	/^AddressProfiler::profileRetry(const Address& data_addr, AccessType type,$/;"	f	class:AddressProfiler
profileSample	src/cpu/checker/thread_context.hh	/^    void profileSample() { return actualTC->profileSample(); }$/;"	f	class:CheckerThreadContext
profileSample	src/cpu/inorder/thread_context.cc	/^InOrderThreadContext::profileSample()$/;"	f	class:InOrderThreadContext
profileSample	src/cpu/o3/thread_context_impl.hh	/^O3ThreadContext<Impl>::profileSample()$/;"	f	class:O3ThreadContext
profileSample	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::OzoneTC::profileSample()$/;"	f	class:OzoneCPU::OzoneTC
profileSample	src/cpu/thread_context.hh	/^    void profileSample() { return actualTC->profileSample(); }$/;"	f	class:ProxyThreadContext
profileSample	src/cpu/thread_state.cc	/^ThreadState::profileSample()$/;"	f	class:ThreadState
profileSimPoint	src/cpu/simple/atomic.cc	/^AtomicSimpleCPU::profileSimPoint()$/;"	f	class:AtomicSimpleCPU
profileStall	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::profileStall(ThreadID tid) {$/;"	f	class:DefaultFetch
progIF	src/dev/pcireg.h	/^        uint8_t progIF;$/;"	m	struct:PCIConfig::__anon80
progName	src/sim/process.hh	/^    virtual const char *progName() const { return "<unknown>"; }$/;"	f	class:Process
progName	src/sim/process.hh	/^    virtual const char *progName() const { return argv[0].c_str(); }$/;"	f	class:LiveProcess
progname	src/unittest/initest.cc	/^char *progname;$/;"	v
programHeaderCount	src/base/loader/elf_object.hh	/^    uint16_t programHeaderCount() {return _programHeaderCount;}$/;"	f	class:ElfObject
programHeaderSize	src/base/loader/elf_object.hh	/^    uint16_t programHeaderSize() {return _programHeaderSize;}$/;"	f	class:ElfObject
programHeaderTable	src/base/loader/elf_object.hh	/^    Addr programHeaderTable() {return _programHeaderTable;}$/;"	f	class:ElfObject
progressInterval	src/cpu/testers/memtest/memtest.hh	/^    unsigned progressInterval;  \/\/ frequency of progress reports$/;"	m	class:MemTest
progress_interval	src/cpu/BaseCPU.py	/^    progress_interval = Param.Frequency('0Hz',$/;"	v
progress_interval	src/cpu/testers/memtest/MemTest.py	/^    progress_interval = Param.Counter(1000000,$/;"	v	class:MemTest
promoteDeferredTargets	src/mem/cache/mshr.cc	/^MSHR::promoteDeferredTargets()$/;"	f	class:MSHR
propagateInterrupt	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::propagateInterrupt()$/;"	f	class:DefaultCommit
proplist_syscall	src/kern/tru64/tru64_syscalls.hh	/^        proplist_syscall = 244,$/;"	e	enum:SystemCalls::__anon102
prot	src/arch/x86/regs/misc.hh	/^        Bitfield<7> prot;$/;"	m	namespace:X86ISA
protectCpuSymbols	src/arch/isa_parser.py	/^    def protectCpuSymbols(self, template):$/;"	m	class:ISAParser
protectNonSubstPercents	src/arch/isa_parser.py	/^    def protectNonSubstPercents(self, s):$/;"	m	class:ISAParser
proto	src/base/inet.cc	/^Ip6Hdr::proto() const$/;"	f	class:Net::Ip6Hdr
proto	src/base/inet.hh	/^    uint8_t  proto() const { return ip_p; }$/;"	f	struct:Net::IpHdr
protocolSum	src/kern/tru64/mbuf.hh	/^    int32_t     protocolSum;    \/\/ 0x38$/;"	m	struct:tru64::m_ext
protocolSum	src/kern/tru64/mbuf.hh	/^    int32_t     protocolSum;$/;"	m	struct:tru64::pkthdr
prototype	src/mem/slicc/symbols/Func.py	/^    def prototype(self):$/;"	m	class:Func
provides	src/cpu/func_unit.cc	/^FuncUnit::provides(OpClass capability)$/;"	f	class:FuncUnit
proxy	src/base/statistics.hh	/^    ProxyInfo *proxy;$/;"	m	class:Stats::ValueBase
proxy	src/base/statistics.hh	/^    const ScalarProxy<Stat> proxy;$/;"	m	class:Stats::ScalarProxyNode
proxy	src/cpu/thread_state.hh	/^    SETranslatingPortProxy *proxy;$/;"	m	struct:ThreadState
proxy	src/python/m5/params.py	/^import proxy$/;"	i
prrr	src/arch/arm/tlb.hh	/^    PRRR prrr;$/;"	m	class:ArmISA::TLB
ps	src/arch/arm/miscregs.hh	/^        Bitfield<18, 16> ps;$/;"	m	namespace:ArmISA
ps	src/arch/x86/pagetable_walker.cc	/^    Bitfield<7> ps;$/;"	m	namespace:X86ISA	file:
ps	src/dev/pcireg.h	/^        Bitfield<1,0>   ps;$/;"	m	struct:PMCAP
ps	src/sim/core.cc	/^Tick ps;$/;"	m	namespace:SimClock::Int	file:
ps	src/sim/core.cc	/^double ps;$/;"	m	namespace:SimClock::Float	file:
pse	src/arch/x86/regs/misc.hh	/^        Bitfield<4> pse; \/\/ Page Size Extensions$/;"	m	namespace:X86ISA
pseudoInst	src/sim/pseudo_inst.cc	/^pseudoInst(ThreadContext *tc, uint8_t func, uint8_t subfunc)$/;"	f	namespace:PseudoInst
psruser	src/arch/arm/types.hh	/^            Bitfield<22> psruser;$/;"	m	namespace:ArmISA
pss	src/arch/mips/pra_constants.hh	/^    Bitfield<9,  6>  pss;$/;"	m	namespace:MipsISA
pstart	src/base/inet.hh	/^    int pstart() const { return (off() + get()->size()); }$/;"	f	class:Net::IpPtr
pstart	src/base/inet.hh	/^    int pstart() const { return off() + ((const EthHdr*)p->data)->size(); }$/;"	f	class:Net::EthPtr
pstart	src/base/inet.hh	/^    int pstart() const { return off() + get()->size(); }$/;"	f	class:Net::Ip6Ptr
pstart	src/base/inet.hh	/^    int pstart() const { return off() + get()->size(); }$/;"	f	class:Net::TcpPtr
pstart	src/base/inet.hh	/^    int pstart() const { return off() + get()->size(); }$/;"	f	class:Net::UdpPtr
pstate	src/arch/sparc/isa.hh	/^    PSTATE pstate;        \/\/ Process State Register$/;"	m	class:SparcISA::ISA
pstate	src/cpu/m5legion_interface.h	/^    uint16_t pstate;$/;"	m	struct:__anon55
psup	src/dev/pcireg.h	/^        Bitfield<15,11> psup;$/;"	m	struct:PMCAP
ptc	src/arch/mips/mt_constants.hh	/^    Bitfield<7,  0>  ptc;$/;"	m	namespace:MipsISA
pte	src/arch/sparc/pagetable.hh	/^    PageTableEntry pte;$/;"	m	struct:SparcISA::TlbEntry
pteBase	src/arch/mips/pra_constants.hh	/^    Bitfield<63, 23> pteBase;$/;"	m	namespace:MipsISA
pterm	src/dev/sparc/T1000.py	/^    pterm = Terminal()$/;"	v	class:T1000
pth_id	src/kern/tru64/tru64.hh	/^        Addr pth_id; \/\/!< out-of-line state$/;"	m	struct:Tru64::ushared_state
pthid	src/kern/tru64/tru64.hh	/^        Addr pthid;     \/\/!< pthid$/;"	m	struct:Tru64::nxm_thread_attr
ptlbe	src/arch/mips/mt_constants.hh	/^    Bitfield<25, 16> ptlbe;$/;"	m	namespace:MipsISA
ptr	src/base/cprintf.hh	/^    const char *ptr;$/;"	m	struct:cp::Print
ptr	src/sim/vptr.hh	/^    Addr ptr;$/;"	m	class:VPtr
ptrace	src/kern/linux/linux_syscalls.hh	/^    ptrace = 154,$/;"	e	enum:SystemCalls::__anon87
ptrace	src/kern/tru64/tru64_syscalls.hh	/^        ptrace = 26,$/;"	e	enum:SystemCalls::__anon102
ptscr	src/dev/ns_gige.hh	/^    uint32_t    ptscr;$/;"	m	struct:dp_regs
ptw	src/arch/arm/miscregs.hh	/^        Bitfield<2>      ptw;$/;"	m	namespace:ArmISA
ptype	src/python/m5/params.py	/^    ptype = Port$/;"	v	class:PortParamDesc
ptype_str	src/python/m5/params.py	/^    ptype_str = 'Port'$/;"	v	class:PortParamDesc
puart0	src/dev/sparc/T1000.py	/^    puart0 = Uart8250(pio_addr=0x1f10000000)$/;"	v	class:T1000
public_value	src/python/m5/SimObject.py	/^def public_value(key, value):$/;"	f
pubwl	src/arch/arm/types.hh	/^        Bitfield<24, 20> pubwl;$/;"	m	namespace:ArmISA
punwl	src/arch/arm/types.hh	/^        Bitfield<24, 20> punwl;$/;"	m	namespace:ArmISA
purifyTaggedAddr	src/arch/arm/utility.cc	/^purifyTaggedAddr(Addr addr, ThreadContext *tc, ExceptionLevel el)$/;"	f	namespace:ArmISA
push	src/arch/isa_parser.py	/^    def push(self, item):$/;"	m	class:Stack
push	src/cpu/inorder/resource_sked.cc	/^ResourceSked::push(ScheduleEntry* sked_entry)$/;"	f	class:ResourceSked
push	src/cpu/pred/ras.cc	/^ReturnAddrStack::push(const TheISA::PCState &return_addr)$/;"	f	class:ReturnAddrStack
push	src/dev/pktfifo.hh	/^    bool push(EthPacketPtr ptr)$/;"	f	class:PacketFifo
pushBefore	src/cpu/inorder/resource_sked.cc	/^ResourceSked::pushBefore(ScheduleEntry* sked_entry, int sked_cmd,$/;"	f	class:ResourceSked
pushFrame	src/mem/slicc/symbols/SymbolTable.py	/^    def pushFrame(self):$/;"	m	class:SymbolTable
pushLabel	src/mem/packet.cc	/^Packet::PrintReqState::pushLabel(const string &lbl, const string &prefix)$/;"	f	class:Packet::PrintReqState
pushLabel	src/mem/packet.hh	/^    pushLabel(const std::string &lbl)$/;"	f	class:Packet
pushSenderState	src/mem/packet.cc	/^Packet::pushSenderState(Packet::SenderState *sender_state)$/;"	f	class:Packet
push_back	src/base/varargs.hh	/^    push_back(const Argument &arg)$/;"	f	class:VarArgs::List
push_back	src/base/varargs.hh	/^    push_back(const T &arg)$/;"	f	class:VarArgs::List
push_front	src/base/varargs.hh	/^    push_front(const Argument &arg)$/;"	f	class:VarArgs::List
push_front	src/base/varargs.hh	/^    push_front(const T &arg)$/;"	f	class:VarArgs::List
pushedRAS	src/cpu/pred/bpred_unit.hh	/^        bool pushedRAS;$/;"	m	struct:BPredUnit::PredictorHistory
putbyte	src/base/remote_gdb.cc	/^BaseRemoteGDB::putbyte(uint8_t b)$/;"	f	class:BaseRemoteGDB
putpmsg	src/kern/linux/linux_syscalls.hh	/^    putpmsg = 155,$/;"	e	enum:SystemCalls::__anon87
pvi	src/arch/x86/regs/misc.hh	/^        Bitfield<1> pvi; \/\/ Protected-Mode Virtual Interrupts$/;"	m	namespace:X86ISA
pvm	src/dev/pcireg.h	/^        Bitfield<8>     pvm;$/;"	m	struct:MSICAP
pvpe	src/arch/mips/mt_constants.hh	/^    Bitfield<13, 10> pvpe;$/;"	m	namespace:MipsISA
pwrite	src/kern/tru64/tru64_syscalls.hh	/^        pwrite = 152,$/;"	e	enum:SystemCalls::__anon102
pwrite64	src/kern/linux/linux_syscalls.hh	/^    pwrite64 = 156,$/;"	e	enum:SystemCalls::__anon87
pwt	src/arch/x86/pagetable_walker.cc	/^    Bitfield<3> pwt;$/;"	m	namespace:X86ISA	file:
pwt	src/arch/x86/regs/misc.hh	/^        Bitfield<3> pwt; \/\/ Page-Level Writethrough$/;"	m	namespace:X86ISA
px	src/arch/mips/pra_constants.hh	/^    Bitfield<23>     px;$/;"	m	namespace:MipsISA
px	src/base/vnc/vncinput.hh	/^        PixelFormat px;$/;"	m	struct:VncInput::PixelFormatMessage
px	src/base/vnc/vncserver.hh	/^        PixelFormat px;$/;"	m	struct:VncServer::ServerInitMsg
pxcap	src/dev/pcidev.hh	/^    PXCAP pxcap;$/;"	m	class:PciDevice
pxcap	src/dev/pcireg.h	/^    _PXCAP pxcap;$/;"	m	struct:PXCAP
pxdc	src/dev/pcireg.h	/^    PXDC pxdc;$/;"	m	struct:PXCAP
pxdc2	src/dev/pcireg.h	/^    PXDC2 pxdc2;$/;"	m	struct:PXCAP
pxdcap	src/dev/pcireg.h	/^    PXDCAP pxdcap;$/;"	m	struct:PXCAP
pxdcap2	src/dev/pcireg.h	/^    PXDCAP2 pxdcap2;$/;"	m	struct:PXCAP
pxds	src/dev/pcireg.h	/^    PXDS pxds;$/;"	m	struct:PXCAP
pxid	src/dev/pcireg.h	/^    PXID pxid;$/;"	m	struct:PXCAP
pxlc	src/dev/pcireg.h	/^    PXLC pxlc;$/;"	m	struct:PXCAP
pxlcap	src/dev/pcireg.h	/^    PXLCAP pxlcap;$/;"	m	struct:PXCAP
pxlclk_polarity	src/dev/arm/hdlcd.hh	/^        Bitfield<4>    pxlclk_polarity;$/;"	m	class:HDLcd
pxls	src/dev/pcireg.h	/^    PXLS pxls;$/;"	m	struct:PXCAP
pxn	src/arch/arm/pagetable.hh	/^    bool pxn;               \/\/ Privileged Execute Never (LPAE only)$/;"	m	struct:ArmISA::TlbEntry
pxn	src/arch/arm/table_walker.hh	/^        bool pxn() const$/;"	f	class:ArmISA::TableWalker::LongDescriptor
pxnTable	src/arch/arm/table_walker.hh	/^        bool pxnTable() const$/;"	f	class:ArmISA::TableWalker::LongDescriptor
pxnTable	src/arch/arm/table_walker.hh	/^        bool pxnTable;$/;"	m	class:ArmISA::TableWalker::WalkerState
py_interact	src/sim/debug.cc	/^py_interact()$/;"	f
pydot	src/python/m5/util/dot_writer.py	/^    import pydot$/;"	i
pydot	src/python/m5/util/dot_writer.py	/^    pydot = False$/;"	v
python_class_map	src/mem/slicc/symbols/StateMachine.py	/^python_class_map = {$/;"	v
q	src/arch/arm/miscregs.hh	/^        Bitfield<27> q;$/;"	m	namespace:ArmISA
q	src/cpu/o3/regfile.hh	/^        FloatRegBits q;$/;"	m	union:PhysRegFile::__anon58
qBytes	src/base/cp_annotate.hh	/^    std::vector<int32_t> qBytes;$/;"	m	class:CPA
qCache	src/base/cp_annotate.hh	/^    IdCache qCache, smCache;$/;"	m	class:CPA
qData	src/base/cp_annotate.hh	/^    std::vector<AnnotateList> qData;$/;"	m	class:CPA
qMap	src/base/cp_annotate.hh	/^    IdMap smMap, qMap;$/;"	m	class:CPA
qSize	src/base/cp_annotate.hh	/^    std::vector<int> qSize;$/;"	m	class:CPA
qc	src/arch/arm/miscregs.hh	/^        Bitfield<27> qc;$/;"	m	namespace:ArmISA
quad	src/kern/tru64/tru64.hh	/^    typedef struct { int val[2]; } quad;$/;"	t	class:Tru64	typeref:struct:Tru64::__anon98
query_module	src/kern/linux/linux_syscalls.hh	/^    query_module = 157,$/;"	e	enum:SystemCalls::__anon87
queue	src/base/callback.hh	/^    typedef std::list<Callback *> queue;$/;"	t	class:CallbackQueue
queue	src/base/pollevent.hh	/^    PollQueue *queue;$/;"	m	class:PollEvent
queue	src/cpu/ozone/back_end.hh	/^        enum queue {$/;"	g	class:BackEnd::InstQueue
queue	src/cpu/pc_event.hh	/^    PCEventQueue *queue;$/;"	m	class:PCEvent
queue	src/mem/cache/base.hh	/^        SlavePacketQueue queue;$/;"	m	class:BaseCache::CacheSlavePort
queue	src/mem/cache/mshr.hh	/^    MSHRQueue *queue;$/;"	m	class:MSHR
queue	src/mem/dram_ctrl.hh	/^        SlavePacketQueue queue;$/;"	m	class:DRAMCtrl::MemoryPort
queue	src/mem/mport.hh	/^    MasterPacketQueue queue;$/;"	m	class:MessageMasterPort
queue	src/mem/qport.hh	/^    MasterPacketQueue &queue;$/;"	m	class:QueuedMasterPort
queue	src/mem/qport.hh	/^    SlavePacketQueue &queue;$/;"	m	class:QueuedSlavePort
queue	src/mem/ruby/system/RubyPort.hh	/^        MasterPacketQueue queue;$/;"	m	class:RubyPort::MemMasterPort
queue	src/mem/ruby/system/RubyPort.hh	/^        MasterPacketQueue queue;$/;"	m	class:RubyPort::PioMasterPort
queue	src/mem/ruby/system/RubyPort.hh	/^        SlavePacketQueue queue;$/;"	m	class:RubyPort::MemSlavePort
queue	src/mem/ruby/system/RubyPort.hh	/^        SlavePacketQueue queue;$/;"	m	class:RubyPort::PioSlavePort
queue	src/sim/eventq.hh	/^    EventQueue *queue;$/;"	m	class:Event
queueDma	src/dev/dma_device.cc	/^DmaPort::queueDma(PacketPtr pkt)$/;"	f	class:DmaPort
queueImpl	src/mem/tport.hh	/^    SlavePacketQueue queueImpl;$/;"	m	class:SimpleTimingPort
queueOnList	src/cpu/o3/inst_queue.hh	/^    bool queueOnList[Num_OpClasses];$/;"	m	class:InstructionQueue
queueReady	src/mem/ruby/system/RubyMemoryControl.cc	/^RubyMemoryControl::queueReady(int bank)$/;"	f	class:RubyMemoryControl
queueSize	src/mem/dramsim2_wrapper.cc	/^DRAMSim2Wrapper::queueSize() const$/;"	f	class:DRAMSim2Wrapper
queueType	src/cpu/o3/inst_queue.hh	/^        OpClass queueType;$/;"	m	struct:InstructionQueue::ListOrderEntry
queue_res_dist	src/cpu/ozone/back_end.hh	/^    Stats::VectorDistribution queue_res_dist;$/;"	m	class:BackEnd
queued	src/base/pollevent.hh	/^    bool queued() { return queue != 0; }$/;"	f	class:PollEvent
quiesce	src/kern/kernel_stats.hh	/^    void quiesce() { _quiesce++; }$/;"	f	class:Kernel::Statistics
quiesce	src/sim/pseudo_inst.cc	/^quiesce(ThreadContext *tc)$/;"	f	namespace:PseudoInst
quiesceCycles	src/cpu/o3/cpu.hh	/^    Stats::Scalar quiesceCycles;$/;"	m	class:FullO3CPU
quiesceCycles	src/cpu/ozone/cpu.hh	/^    Stats::Scalar quiesceCycles;$/;"	m	class:OzoneCPU
quiesceCycles	src/sim/pseudo_inst.cc	/^quiesceCycles(ThreadContext *tc, uint64_t cycles)$/;"	f	namespace:PseudoInst
quiesceEvent	src/cpu/thread_state.hh	/^    EndQuiesceEvent *quiesceEvent;$/;"	m	struct:ThreadState
quiesceNs	src/sim/pseudo_inst.cc	/^quiesceNs(ThreadContext *tc, uint64_t ns)$/;"	f	namespace:PseudoInst
quiesceSkip	src/sim/pseudo_inst.cc	/^quiesceSkip(ThreadContext *tc)$/;"	f	namespace:PseudoInst
quiesceTime	src/sim/pseudo_inst.cc	/^quiesceTime(ThreadContext *tc)$/;"	f	namespace:PseudoInst
quotactl	src/kern/linux/linux_syscalls.hh	/^    quotactl = 158,$/;"	e	enum:SystemCalls::__anon87
quotactl	src/kern/tru64/tru64_syscalls.hh	/^        quotactl = 148,$/;"	e	enum:SystemCalls::__anon102
quote	src/base/str.hh	/^quote(const std::string &s)$/;"	f
r	src/arch/mips/pra_constants.hh	/^    Bitfield<1>      r;$/;"	m	namespace:MipsISA
r	src/arch/mips/pra_constants.hh	/^    Bitfield<1>     r;$/;"	m	namespace:MipsISA
r	src/arch/mips/pra_constants.hh	/^    Bitfield<63, 62> r;$/;"	m	namespace:MipsISA
r	src/arch/x86/regs/misc.hh	/^            Bitfield<41> r; \/\/ Readable$/;"	m	namespace:X86ISA
r	src/arch/x86/types.hh	/^        Bitfield<2> r;$/;"	m	namespace:X86ISA
r	src/base/statistics.hh	/^    NodePtr r;$/;"	m	class:Stats::BinaryNode
r0	src/arch/mips/pra_constants.hh	/^    Bitfield<3>      r0;$/;"	m	namespace:MipsISA
r10	src/arch/x86/nativetrace.hh	/^        uint64_t r10;$/;"	m	struct:Trace::X86NativeTrace::ThreadState
r11	src/arch/x86/nativetrace.hh	/^        uint64_t r11;$/;"	m	struct:Trace::X86NativeTrace::ThreadState
r12	src/arch/x86/nativetrace.hh	/^        uint64_t r12;$/;"	m	struct:Trace::X86NativeTrace::ThreadState
r13	src/arch/x86/nativetrace.hh	/^        uint64_t r13;$/;"	m	struct:Trace::X86NativeTrace::ThreadState
r14	src/arch/x86/nativetrace.hh	/^        uint64_t r14;$/;"	m	struct:Trace::X86NativeTrace::ThreadState
r15	src/arch/x86/nativetrace.hh	/^        uint64_t r15;$/;"	m	struct:Trace::X86NativeTrace::ThreadState
r8	src/arch/x86/nativetrace.hh	/^        uint64_t r8;$/;"	m	struct:Trace::X86NativeTrace::ThreadState
r9	src/arch/x86/nativetrace.hh	/^        uint64_t r9;$/;"	m	struct:Trace::X86NativeTrace::ThreadState
rInit	src/arch/x86/regs/misc.hh	/^        Bitfield<1> rInit;$/;"	m	namespace:X86ISA
rMode	src/arch/arm/miscregs.hh	/^        Bitfield<23, 22> rMode;$/;"	m	namespace:ArmISA
ra	src/arch/power/types.hh	/^    Bitfield<20, 16> ra;$/;"	m	namespace:PowerISA
radv	src/dev/i8254xGBe_defs.hh	/^    RADV radv;$/;"	m	struct:iGbReg::Regs
radvEvent	src/dev/i8254xGBe.hh	/^    EventWrapper<IGbE, &IGbE::radvProcess> radvEvent;$/;"	m	class:IGbE
radvProcess	src/dev/i8254xGBe.hh	/^    void radvProcess() {$/;"	f	class:IGbE
raise	src/dev/x86/intdev.hh	/^    raise()$/;"	f	class:X86ISA::IntSourcePin
raiseInterruptPin	src/dev/x86/i82094aa.cc	/^X86ISA::I82094AA::raiseInterruptPin(int number)$/;"	f	class:X86ISA::I82094AA
raiseInterruptPin	src/dev/x86/i8259.cc	/^X86ISA::I8259::raiseInterruptPin(int number)$/;"	f	class:X86ISA::I8259
raiseInterruptPin	src/dev/x86/intdev.hh	/^    raiseInterruptPin(int number)$/;"	f	class:X86ISA::IntDevice
random	src/arch/mips/pra_constants.hh	/^    Bitfield<30, 0> random;$/;"	m	namespace:MipsISA
random	src/base/random.hh	/^    random()$/;"	f	class:Random
random	src/base/random.hh	/^    random(T min, T max)$/;"	f	class:Random
random	src/mem/ruby/slicc_interface/RubySlicc_Util.hh	/^random(int n)$/;"	f
random_mt	src/base/random.cc	/^Random random_mt;$/;"	v
random_seed	src/mem/ruby/system/RubySystem.py	/^    random_seed = Param.Int(1234, "random seed used by the simulation");$/;"	v	class:RubySystem
random_time	src/mem/ruby/buffers/MessageBuffer.cc	/^random_time()$/;"	f
randomization	src/mem/ruby/system/RubySystem.py	/^    randomization = Param.Bool(False,$/;"	v	class:RubySystem
range	src/arch/sparc/pagetable.hh	/^    TlbRange range;$/;"	m	struct:SparcISA::TlbEntry
range	src/mem/AbstractMemory.py	/^    range = Param.AddrRange('128MB', "Address range (potentially interleaved)")$/;"	v	class:AbstractMemory
range	src/mem/abstract_mem.hh	/^    AddrRange range;$/;"	m	class:AbstractMemory
range	src/mem/bus.hh	/^        AddrRange range;$/;"	m	struct:BaseBus::PortCache
rangeCache	src/mem/physical.hh	/^    mutable AddrRange rangeCache;$/;"	m	class:PhysicalMemory
rangeList	src/arch/x86/bios/intelmp.hh	/^    uint32_t rangeList;$/;"	m	class:X86ISA::IntelMP::CompatAddrSpaceMod
rangeMRU	src/arch/arm/tlb.hh	/^    int rangeMRU; \/\/On lookup, only move entries ahead when outside rangeMRU$/;"	m	class:ArmISA::TLB
range_list	src/arch/x86/bios/IntelMP.py	/^    range_list = Param.X86IntelMPRangeList('ISACompatible',$/;"	v	class:X86IntelMPCompatAddrSpaceMod
range_t	src/cpu/pc_event.hh	/^    typedef std::pair<iterator, iterator> range_t;$/;"	t	class:PCEventQueue
range_type	src/arch/x86/bios/E820.py	/^    range_type = Param.UInt64('type of the region')$/;"	v	class:X86E820Entry
ranges	src/mem/Bridge.py	/^    ranges = VectorParam.AddrRange([AllMemory],$/;"	v	class:Bridge
ranges	src/mem/bridge.hh	/^        const AddrRangeList ranges;$/;"	m	class:Bridge::BridgeSlavePort
rank	src/mem/dram_ctrl.hh	/^        const uint8_t rank;$/;"	m	class:DRAMCtrl::DRAMPacket
rank_bit_0	src/mem/ruby/system/RubyMemoryControl.py	/^    rank_bit_0 = Param.Int(11, "");$/;"	v	class:RubyMemoryControl
rank_rank_delay	src/mem/ruby/system/RubyMemoryControl.py	/^    rank_rank_delay = Param.Int(1, "");$/;"	v	class:RubyMemoryControl
ranksPerChannel	src/mem/dram_ctrl.hh	/^    const uint32_t ranksPerChannel;$/;"	m	class:DRAMCtrl
ranks_per_channel	src/mem/DRAMCtrl.py	/^    ranks_per_channel = 1$/;"	v	class:LPDDR2_S4_1066_x32
ranks_per_channel	src/mem/DRAMCtrl.py	/^    ranks_per_channel = 1$/;"	v	class:LPDDR3_1600_x32
ranks_per_channel	src/mem/DRAMCtrl.py	/^    ranks_per_channel = 1$/;"	v	class:WideIO_200_x128
ranks_per_channel	src/mem/DRAMCtrl.py	/^    ranks_per_channel = 2$/;"	v	class:DDR3_1333_x64_DRAMSim2
ranks_per_channel	src/mem/DRAMCtrl.py	/^    ranks_per_channel = 2$/;"	v	class:DDR3_1600_x64
ranks_per_channel	src/mem/DRAMCtrl.py	/^    ranks_per_channel = Param.Unsigned("Number of ranks per channel")$/;"	v	class:DRAMCtrl
ranks_per_dimm	src/mem/ruby/system/RubyMemoryControl.py	/^    ranks_per_dimm = Param.Int(2, "");$/;"	v	class:RubyMemoryControl
rao2	src/arch/arm/miscregs.hh	/^        Bitfield<18>   rao2;    \/\/ Read as one$/;"	m	namespace:ArmISA
rao3	src/arch/arm/miscregs.hh	/^        Bitfield<16>   rao3;    \/\/ Read as one$/;"	m	namespace:ArmISA
rao4	src/arch/arm/miscregs.hh	/^        Bitfield<6, 3> rao4;    \/\/ Read as one$/;"	m	namespace:ArmISA
raw	src/kern/tru64/tru64_events.hh	/^    bool raw;$/;"	m	class:DebugPrintfEvent
rawData	src/base/bitmap.hh	/^    void rawData(uint8_t* d) { data = d; }$/;"	f	class:Bitmap
rawInt	src/dev/arm/pl011.hh	/^    INTREG rawInt;$/;"	m	class:Pl011
rawInt	src/dev/arm/rtc_pl031.hh	/^    bool rawInt;$/;"	m	class:PL031
rawInt	src/dev/arm/timer_sp804.hh	/^        bool rawInt;$/;"	m	class:Sp804::Timer
rawIntTimer	src/dev/arm/timer_cpulocal.hh	/^        bool rawIntTimer;$/;"	m	class:CpuLocalTimer::Timer
rawIntWatchdog	src/dev/arm/timer_cpulocal.hh	/^        bool rawIntWatchdog;$/;"	m	class:CpuLocalTimer::Timer
rawInterrupts	src/dev/arm/kmi.hh	/^    InterruptReg rawInterrupts;$/;"	m	class:Pl050
rawResetWatchdog	src/dev/arm/timer_cpulocal.hh	/^        bool rawResetWatchdog;$/;"	m	class:CpuLocalTimer::Timer
raw_stats_list	src/python/m5/stats/__init__.py	/^raw_stats_list = []$/;"	v
rax	src/arch/x86/cpuid.hh	/^        uint64_t rax;$/;"	m	struct:X86ISA::CpuidResult
rax	src/arch/x86/nativetrace.hh	/^        uint64_t rax;$/;"	m	struct:Trace::X86NativeTrace::ThreadState
raz	src/arch/arm/miscregs.hh	/^        Bitfield<31, 28> raz;$/;"	m	namespace:ArmISA
raz_13_4	src/arch/arm/miscregs.hh	/^      Bitfield<13,4>  raz_13_4;$/;"	m	namespace:ArmISA
raz_28	src/arch/arm/miscregs.hh	/^      Bitfield<28>    raz_28;$/;"	m	namespace:ArmISA
rbp	src/arch/x86/nativetrace.hh	/^        uint64_t rbp;$/;"	m	struct:Trace::X86NativeTrace::ThreadState
rbx	src/arch/x86/cpuid.hh	/^        uint64_t rbx;$/;"	m	struct:X86ISA::CpuidResult
rbx	src/arch/x86/nativetrace.hh	/^        uint64_t rbx;$/;"	m	struct:Trace::X86NativeTrace::ThreadState
rc31	src/arch/power/types.hh	/^    Bitfield<0>      rc31;$/;"	m	namespace:PowerISA
rcSet	src/arch/power/insts/floating.hh	/^    bool rcSet;$/;"	m	class:PowerISA::FloatOp
rcSet	src/arch/power/insts/integer.hh	/^    bool rcSet;$/;"	m	class:PowerISA::IntOp
rcb	src/dev/pcireg.h	/^        Bitfield<3>     rcb;$/;"	m	struct:PXCAP
rctl	src/dev/i8254xGBe_defs.hh	/^    RCTL rctl;$/;"	m	struct:iGbReg::Regs
rcvif	src/kern/tru64/mbuf.hh	/^    Addr        rcvif;$/;"	m	struct:tru64::pkthdr
rcx	src/arch/x86/cpuid.hh	/^        uint64_t rcx;$/;"	m	struct:X86ISA::CpuidResult
rcx	src/arch/x86/nativetrace.hh	/^        uint64_t rcx;$/;"	m	struct:Trace::X86NativeTrace::ThreadState
rd	src/arch/arm/types.hh	/^        Bitfield<15, 12> rd;$/;"	m	namespace:ArmISA
rd	src/arch/x86/regs/misc.hh	/^        Bitfield<4> rd; \/\/ RdMem Enable$/;"	m	namespace:X86ISA
rdPerTurnAround	src/mem/dram_ctrl.hh	/^    Stats::Histogram rdPerTurnAround;$/;"	m	class:DRAMCtrl
rdQLenPdf	src/mem/dram_ctrl.hh	/^    Stats::Vector rdQLenPdf;$/;"	m	class:DRAMCtrl
rdba	src/dev/i8254xGBe_defs.hh	/^    RDBA rdba;$/;"	m	struct:iGbReg::Regs
rdh	src/dev/i8254xGBe_defs.hh	/^    RDH rdh;$/;"	m	struct:iGbReg::Regs
rdi	src/arch/x86/nativetrace.hh	/^        uint64_t rdi;$/;"	m	struct:Trace::X86NativeTrace::ThreadState
rdlen	src/dev/i8254xGBe_defs.hh	/^    RDLEN rdlen;$/;"	m	struct:iGbReg::Regs
rdmces	src/arch/alpha/osfpal.hh	/^        rdmces = 0x10,$/;"	e	enum:PAL::__anon3
rdps	src/arch/alpha/osfpal.hh	/^        rdps = 0x36,$/;"	e	enum:PAL::__anon3
rdt	src/dev/i8254xGBe_defs.hh	/^    RDT rdt;$/;"	m	struct:iGbReg::Regs
rdtr	src/dev/i8254xGBe_defs.hh	/^    RDTR rdtr;$/;"	m	struct:iGbReg::Regs
rdtrEvent	src/dev/i8254xGBe.hh	/^    EventWrapper<IGbE, &IGbE::rdtrProcess> rdtrEvent;$/;"	m	class:IGbE
rdtrProcess	src/dev/i8254xGBe.hh	/^    void rdtrProcess() {$/;"	f	class:IGbE
rdunique	src/arch/alpha/osfpal.hh	/^        rdunique = 0x9e,$/;"	e	enum:PAL::__anon3
rdusp	src/arch/alpha/osfpal.hh	/^        rdusp = 0x3a,$/;"	e	enum:PAL::__anon3
rdval	src/arch/alpha/osfpal.hh	/^        rdval = 0x32,$/;"	e	enum:PAL::__anon3
rdx	src/arch/x86/cpuid.hh	/^        uint64_t rdx;$/;"	m	struct:X86ISA::CpuidResult
rdx	src/arch/x86/nativetrace.hh	/^        uint64_t rdx;$/;"	m	struct:Trace::X86NativeTrace::ThreadState
re	src/arch/isa_parser.py	/^import re$/;"	i
re	src/arch/micro_asm.py	/^import re$/;"	i
re	src/arch/mips/pra_constants.hh	/^    Bitfield<25>     re;$/;"	m	namespace:MipsISA
re	src/mem/slicc/parser.py	/^import re$/;"	i
re	src/mem/slicc/symbols/StateMachine.py	/^import re$/;"	i
re	src/python/m5/params.py	/^import re$/;"	i
re	src/python/m5/util/__init__.py	/^import re$/;"	i
re	src/python/m5/util/code_formatter.py	/^import re$/;"	i
re	src/python/m5/util/dot_writer.py	/^import m5, os, re$/;"	i
re	src/python/m5/util/jobfile.py	/^        import re$/;"	i
read	src/arch/x86/interrupts.cc	/^X86ISA::Interrupts::read(PacketPtr pkt)$/;"	f	class:X86ISA::Interrupts
read	src/arch/x86/pagetable_walker.hh	/^            PacketPtr read;$/;"	m	class:X86ISA::Walker::WalkerState
read	src/base/circlebuf.cc	/^CircleBuf::read(char *b, int len)$/;"	f	class:CircleBuf
read	src/base/circlebuf.cc	/^CircleBuf::read(int fd)$/;"	f	class:CircleBuf
read	src/base/circlebuf.cc	/^CircleBuf::read(int fd, int len)$/;"	f	class:CircleBuf
read	src/base/circlebuf.cc	/^CircleBuf::read(ostream &out)$/;"	f	class:CircleBuf
read	src/base/remote_gdb.cc	/^BaseRemoteGDB::read(Addr vaddr, size_t size, char *data)$/;"	f	class:BaseRemoteGDB
read	src/base/remote_gdb.hh	/^BaseRemoteGDB::read(Addr addr)$/;"	f	class:BaseRemoteGDB
read	src/base/vnc/vncserver.cc	/^VncServer::read(T* val)$/;"	f	class:VncServer
read	src/base/vnc/vncserver.cc	/^VncServer::read(uint8_t *buf, size_t len)$/;"	f	class:VncServer
read	src/cpu/inorder/cpu.cc	/^InOrderCPU::read(DynInstPtr inst, Addr addr,$/;"	f	class:InOrderCPU
read	src/cpu/inorder/resources/cache_unit.cc	/^CacheUnit::read(DynInstPtr inst, Addr addr,$/;"	f	class:CacheUnit
read	src/cpu/kvm/perfevent.cc	/^PerfKvmCounter::read() const$/;"	f	class:PerfKvmCounter
read	src/cpu/kvm/perfevent.cc	/^PerfKvmCounter::read(void *buf, size_t size) const$/;"	f	class:PerfKvmCounter
read	src/cpu/nativetrace.hh	/^    read(void *ptr, size_t size)$/;"	f	class:Trace::NativeTrace
read	src/cpu/o3/cpu.hh	/^    Fault read(RequestPtr &req, RequestPtr &sreqLow, RequestPtr &sreqHigh,$/;"	f	class:FullO3CPU
read	src/cpu/o3/lsq.hh	/^LSQ<Impl>::read(RequestPtr req, RequestPtr sreqLow, RequestPtr sreqHigh,$/;"	f	class:LSQ
read	src/cpu/o3/lsq_unit.hh	/^LSQUnit<Impl>::read(Request *req, Request *sreqLow, Request *sreqHigh,$/;"	f	class:LSQUnit
read	src/cpu/ozone/back_end.hh	/^BackEnd<Impl>::read(RequestPtr req, T &data, int load_idx)$/;"	f	class:BackEnd
read	src/cpu/ozone/cpu.hh	/^    Fault read(Request *req, T &data, int load_idx)$/;"	f	class:OzoneCPU
read	src/cpu/ozone/inorder_back_end.hh	/^InorderBackEnd<Impl>::read(Addr addr, T &data, unsigned flags)$/;"	f	class:InorderBackEnd
read	src/cpu/ozone/inorder_back_end.hh	/^InorderBackEnd<Impl>::read(MemReqPtr &req, T &data, int load_idx)$/;"	f	class:InorderBackEnd
read	src/cpu/ozone/lsq_unit.hh	/^OzoneLSQ<Impl>::read(MemReqPtr &req, T &data, int load_idx)$/;"	f	class:OzoneLSQ
read	src/cpu/ozone/lw_back_end.hh	/^LWBackEnd<Impl>::read(RequestPtr req, T &data, int load_idx)$/;"	f	class:LWBackEnd
read	src/cpu/ozone/lw_lsq.hh	/^OzoneLWLSQ<Impl>::read(RequestPtr req, T &data, int load_idx)$/;"	f	class:OzoneLWLSQ
read	src/cpu/pred/sat_counter.hh	/^    const uint8_t read() const$/;"	f	class:SatCounter
read	src/cpu/testers/traffic_gen/generators.cc	/^TraceGen::InputStream::read(TraceElement& element)$/;"	f	class:TraceGen::InputStream
read	src/dev/alpha/backdoor.cc	/^AlphaBackdoor::read(PacketPtr pkt)$/;"	f	class:AlphaBackdoor
read	src/dev/alpha/tsunami_cchip.cc	/^TsunamiCChip::read(PacketPtr pkt)$/;"	f	class:TsunamiCChip
read	src/dev/alpha/tsunami_io.cc	/^TsunamiIO::read(PacketPtr pkt)$/;"	f	class:TsunamiIO
read	src/dev/alpha/tsunami_pchip.cc	/^TsunamiPChip::read(PacketPtr pkt)$/;"	f	class:TsunamiPChip
read	src/dev/arm/a9scu.cc	/^A9SCU::read(PacketPtr pkt)$/;"	f	class:A9SCU
read	src/dev/arm/amba_fake.cc	/^AmbaFake::read(PacketPtr pkt)$/;"	f	class:AmbaFake
read	src/dev/arm/gic_pl390.cc	/^Pl390::read(PacketPtr pkt)$/;"	f	class:Pl390
read	src/dev/arm/hdlcd.cc	/^HDLcd::read(PacketPtr pkt)$/;"	f	class:HDLcd
read	src/dev/arm/kmi.cc	/^Pl050::read(PacketPtr pkt)$/;"	f	class:Pl050
read	src/dev/arm/pl011.cc	/^Pl011::read(PacketPtr pkt)$/;"	f	class:Pl011
read	src/dev/arm/pl111.cc	/^Pl111::read(PacketPtr pkt)$/;"	f	class:Pl111
read	src/dev/arm/rtc_pl031.cc	/^PL031::read(PacketPtr pkt)$/;"	f	class:PL031
read	src/dev/arm/rv_ctrl.cc	/^RealViewCtrl::read(PacketPtr pkt)$/;"	f	class:RealViewCtrl
read	src/dev/arm/timer_cpulocal.cc	/^CpuLocalTimer::Timer::read(PacketPtr pkt, Addr daddr)$/;"	f	class:CpuLocalTimer::Timer
read	src/dev/arm/timer_cpulocal.cc	/^CpuLocalTimer::read(PacketPtr pkt)$/;"	f	class:CpuLocalTimer
read	src/dev/arm/timer_sp804.cc	/^Sp804::Timer::read(PacketPtr pkt, Addr daddr)$/;"	f	class:Sp804::Timer
read	src/dev/arm/timer_sp804.cc	/^Sp804::read(PacketPtr pkt)$/;"	f	class:Sp804
read	src/dev/arm/vgic.cc	/^VGic::read(PacketPtr pkt)$/;"	f	class:VGic
read	src/dev/baddev.cc	/^BadDevice::read(PacketPtr pkt)$/;"	f	class:BadDevice
read	src/dev/copy_engine.cc	/^CopyEngine::read(PacketPtr pkt)$/;"	f	class:CopyEngine
read	src/dev/copy_engine.hh	/^        virtual Tick read(PacketPtr pkt)$/;"	f	class:CopyEngine::CopyEngineChannel
read	src/dev/disk_image.cc	/^CowDiskImage::read(uint8_t *data, std::streampos offset) const$/;"	f	class:CowDiskImage
read	src/dev/disk_image.cc	/^RawDiskImage::read(uint8_t *data, std::streampos offset) const$/;"	f	class:RawDiskImage
read	src/dev/i8254xGBe.cc	/^IGbE::read(PacketPtr pkt)$/;"	f	class:IGbE
read	src/dev/ide_ctrl.cc	/^IdeController::read(PacketPtr pkt)$/;"	f	class:IdeController
read	src/dev/intel_8254_timer.cc	/^Intel8254Timer::Counter::read()$/;"	f	class:Intel8254Timer::Counter
read	src/dev/isa_fake.cc	/^IsaFake::read(PacketPtr pkt)$/;"	f	class:IsaFake
read	src/dev/mips/malta_cchip.cc	/^MaltaCChip::read(PacketPtr pkt)$/;"	f	class:MaltaCChip
read	src/dev/mips/malta_io.cc	/^MaltaIO::read(PacketPtr pkt)$/;"	f	class:MaltaIO
read	src/dev/mips/malta_pchip.cc	/^MaltaPChip::read(PacketPtr pkt)$/;"	f	class:MaltaPChip
read	src/dev/ns_gige.cc	/^NSGigE::read(PacketPtr pkt)$/;"	f	class:NSGigE
read	src/dev/pciconfigall.cc	/^PciConfigAll::read(PacketPtr pkt)$/;"	f	class:PciConfigAll
read	src/dev/simple_disk.cc	/^SimpleDisk::read(Addr addr, baddr_t block, int count) const$/;"	f	class:SimpleDisk
read	src/dev/sinic.cc	/^Device::read(PacketPtr pkt)$/;"	f	class:Sinic::Device
read	src/dev/sinicreg.hh	/^    bool read;$/;"	m	struct:Sinic::Regs::Info
read	src/dev/sparc/dtod.cc	/^DumbTOD::read(PacketPtr pkt)$/;"	f	class:DumbTOD
read	src/dev/sparc/iob.cc	/^Iob::read(PacketPtr pkt)$/;"	f	class:Iob
read	src/dev/sparc/mm_disk.cc	/^MmDisk::read(PacketPtr pkt)$/;"	f	class:MmDisk
read	src/dev/terminal.cc	/^Terminal::read(uint8_t *buf, size_t len)$/;"	f	class:Terminal
read	src/dev/terminal.hh	/^    void read(uint8_t &c) { read(&c, 1); }$/;"	f	class:Terminal
read	src/dev/uart8250.cc	/^Uart8250::read(PacketPtr pkt)$/;"	f	class:Uart8250
read	src/dev/x86/cmos.cc	/^X86ISA::Cmos::read(PacketPtr pkt)$/;"	f	class:X86ISA::Cmos
read	src/dev/x86/i8042.cc	/^X86ISA::I8042::read(PacketPtr pkt)$/;"	f	class:X86ISA::I8042
read	src/dev/x86/i82094aa.cc	/^X86ISA::I82094AA::read(PacketPtr pkt)$/;"	f	class:X86ISA::I82094AA
read	src/dev/x86/i8237.cc	/^X86ISA::I8237::read(PacketPtr pkt)$/;"	f	class:X86ISA::I8237
read	src/dev/x86/i8254.cc	/^X86ISA::I8254::read(PacketPtr pkt)$/;"	f	class:X86ISA::I8254
read	src/dev/x86/i8259.cc	/^X86ISA::I8259::read(PacketPtr pkt)$/;"	f	class:X86ISA::I8259
read	src/dev/x86/speaker.cc	/^X86ISA::Speaker::read(PacketPtr pkt)$/;"	f	class:X86ISA::Speaker
read	src/kern/linux/linux_syscalls.hh	/^    read = 159,$/;"	e	enum:SystemCalls::__anon87
read	src/kern/tru64/tru64_syscalls.hh	/^        read = 3,$/;"	e	enum:SystemCalls::__anon102
read	src/mem/port_proxy.hh	/^PortProxy::read(Addr address) const$/;"	f	class:PortProxy
read	src/mem/ruby/network/orion/ConfigFile.hh	/^T ConfigFile::read( const string& key ) const$/;"	f	class:ConfigFile
read	src/mem/ruby/network/orion/ConfigFile.hh	/^T ConfigFile::read( const string& key, const T& value ) const$/;"	f	class:ConfigFile
read	src/mem/ruby/system/MemoryVector.hh	/^MemoryVector::read(const Address & paddr, uint8_t *data, int len)$/;"	f	class:MemoryVector
read	src/proto/protoio.cc	/^ProtoInputStream::read(Message& msg)$/;"	f	class:ProtoInputStream
read1	src/base/vnc/vncserver.cc	/^VncServer::read1(uint8_t *buf, size_t len)$/;"	f	class:VncServer
readAccesses	src/arch/arm/tlb.hh	/^    Stats::Formula readAccesses;$/;"	m	class:ArmISA::TLB
readAddrDist	src/mem/comm_monitor.hh	/^        Stats::SparseHistogram readAddrDist;$/;"	m	struct:CommMonitor::MonitorStats
readAddrMask	src/mem/comm_monitor.hh	/^    Addr readAddrMask;$/;"	m	class:CommMonitor
readArchCCReg	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::readArchCCReg(int reg_idx, ThreadID tid)$/;"	f	class:FullO3CPU
readArchFloatReg	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::readArchFloatReg(int reg_idx, ThreadID tid)$/;"	f	class:FullO3CPU
readArchFloatRegInt	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::readArchFloatRegInt(int reg_idx, ThreadID tid)$/;"	f	class:FullO3CPU
readArchIntReg	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::readArchIntReg(int reg_idx, ThreadID tid)$/;"	f	class:FullO3CPU
readBandwidthHist	src/mem/comm_monitor.hh	/^        Stats::Histogram readBandwidthHist;$/;"	m	struct:CommMonitor::MonitorStats
readBit	src/mem/ruby/filters/BlockBloomFilter.cc	/^BlockBloomFilter::readBit(const int index)$/;"	f	class:BlockBloomFilter
readBit	src/mem/ruby/filters/BulkBloomFilter.cc	/^BulkBloomFilter::readBit(const int index)$/;"	f	class:BulkBloomFilter
readBit	src/mem/ruby/filters/GenericBloomFilter.cc	/^GenericBloomFilter::readBit(const int index)$/;"	f	class:GenericBloomFilter
readBit	src/mem/ruby/filters/H3BloomFilter.cc	/^H3BloomFilter::readBit(const int index)$/;"	f	class:H3BloomFilter
readBit	src/mem/ruby/filters/LSB_CountingBloomFilter.cc	/^LSB_CountingBloomFilter::readBit(const int index)$/;"	f	class:LSB_CountingBloomFilter
readBit	src/mem/ruby/filters/MultiBitSelBloomFilter.cc	/^MultiBitSelBloomFilter::readBit(const int index)$/;"	f	class:MultiBitSelBloomFilter
readBit	src/mem/ruby/filters/MultiGrainBloomFilter.cc	/^MultiGrainBloomFilter::readBit(const int index)$/;"	f	class:MultiGrainBloomFilter
readBit	src/mem/ruby/filters/NonCountingBloomFilter.cc	/^NonCountingBloomFilter::readBit(const int index)$/;"	f	class:NonCountingBloomFilter
readBlob	src/mem/fs_translating_port_proxy.cc	/^FSTranslatingPortProxy::readBlob(Addr addr, uint8_t *p, int size) const$/;"	f	class:FSTranslatingPortProxy
readBlob	src/mem/port_proxy.hh	/^    virtual void readBlob(Addr addr, uint8_t* p, int size) const$/;"	f	class:PortProxy
readBlob	src/mem/se_translating_port_proxy.cc	/^SETranslatingPortProxy::readBlob(Addr addr, uint8_t *p, int size) const$/;"	f	class:SETranslatingPortProxy
readBufferSize	src/mem/dram_ctrl.hh	/^    const uint32_t readBufferSize;$/;"	m	class:DRAMCtrl
readBurstLengthHist	src/mem/comm_monitor.hh	/^        Stats::Histogram readBurstLengthHist;$/;"	m	struct:CommMonitor::MonitorStats
readBursts	src/mem/dram_ctrl.hh	/^    Stats::Scalar readBursts;$/;"	m	class:DRAMCtrl
readByte	src/mem/ruby/common/SubBlock.hh	/^    uint8_t readByte() const { return getByte(0); }$/;"	f	class:SubBlock
readBytes	src/mem/comm_monitor.hh	/^        unsigned int readBytes;$/;"	m	struct:CommMonitor::MonitorStats
readCCReg	src/cpu/checker/thread_context.hh	/^    CCReg readCCReg(int reg_idx)$/;"	f	class:CheckerThreadContext
readCCReg	src/cpu/inorder/cpu.cc	/^InOrderCPU::readCCReg(RegIndex reg_idx, ThreadID tid)$/;"	f	class:InOrderCPU
readCCReg	src/cpu/inorder/thread_context.cc	/^InOrderThreadContext::readCCReg(int reg_idx)$/;"	f	class:InOrderThreadContext
readCCReg	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::readCCReg(int reg_idx)$/;"	f	class:FullO3CPU
readCCReg	src/cpu/o3/regfile.hh	/^    CCReg readCCReg(PhysRegIndex reg_idx)$/;"	f	class:PhysRegFile
readCCReg	src/cpu/o3/thread_context.hh	/^    virtual CCReg readCCReg(int reg_idx) {$/;"	f	class:O3ThreadContext
readCCReg	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::OzoneTC::readCCReg(int reg_idx)$/;"	f	class:OzoneCPU::OzoneTC
readCCReg	src/cpu/simple_thread.hh	/^    CCReg readCCReg(int reg_idx)$/;"	f	class:SimpleThread
readCCReg	src/cpu/thread_context.hh	/^    CCReg readCCReg(int reg_idx)$/;"	f	class:ProxyThreadContext
readCCRegFlat	src/cpu/checker/thread_context.hh	/^    CCReg readCCRegFlat(int idx)$/;"	f	class:CheckerThreadContext
readCCRegFlat	src/cpu/inorder/thread_context.cc	/^InOrderThreadContext::readCCRegFlat(int idx)$/;"	f	class:InOrderThreadContext
readCCRegFlat	src/cpu/o3/thread_context_impl.hh	/^O3ThreadContext<Impl>::readCCRegFlat(int reg_idx)$/;"	f	class:O3ThreadContext
readCCRegFlat	src/cpu/simple_thread.hh	/^    CCReg readCCRegFlat(int idx) { return ccRegs[idx]; }$/;"	f	class:SimpleThread
readCCRegFlat	src/cpu/simple_thread.hh	/^    CCReg readCCRegFlat(int idx)$/;"	f	class:SimpleThread
readCCRegFlat	src/cpu/thread_context.hh	/^    CCReg readCCRegFlat(int idx)$/;"	f	class:ProxyThreadContext
readCCRegOperand	src/cpu/checker/cpu.hh	/^    uint64_t readCCRegOperand(const StaticInst *si, int idx)$/;"	f	class:CheckerCPU
readCCRegOperand	src/cpu/o3/dyn_inst.hh	/^    uint64_t readCCRegOperand(const StaticInst *si, int idx)$/;"	f	class:BaseO3DynInst
readCCRegOperand	src/cpu/simple/base.hh	/^    CCReg readCCRegOperand(const StaticInst *si, int idx)$/;"	f	class:BaseSimpleCPU
readCCResult	src/cpu/inorder/inorder_dyn_inst.hh	/^    CCReg readCCResult(int idx)$/;"	f	class:InOrderDynInst
readCallback	src/mem/ruby/system/Sequencer.cc	/^Sequencer::readCallback(const Address& address, DataBlock& data,$/;"	f	class:Sequencer
readCommand	src/dev/ide_disk.cc	/^IdeDisk::readCommand(const Addr offset, int size, uint8_t *data)$/;"	f	class:IdeDisk
readCommand	src/python/m5/util/__init__.py	/^def readCommand(cmd, **kwargs):$/;"	f
readCommitPC	src/cpu/ozone/back_end.hh	/^    Addr readCommitPC() { return commitPC; }$/;"	f	class:BackEnd
readCommitPC	src/cpu/ozone/inorder_back_end.hh	/^    Addr readCommitPC() { return commitPC; }$/;"	f	class:InorderBackEnd
readCommitPC	src/cpu/ozone/lw_back_end.hh	/^    Addr readCommitPC() { return commitPC; }$/;"	f	class:LWBackEnd
readComplete	src/mem/dramsim2.cc	/^void DRAMSim2::readComplete(unsigned id, uint64_t addr, uint64_t cycle)$/;"	f	class:DRAMSim2
readCompleteEvent	src/dev/copy_engine.hh	/^            readCompleteEvent;$/;"	m	class:CopyEngine::CopyEngineChannel
readCompressedTrace	src/mem/ruby/system/System.cc	/^RubySystem::readCompressedTrace(string filename, uint8_t *&raw_data,$/;"	f	class:RubySystem
readConfig	src/dev/ide_ctrl.cc	/^IdeController::readConfig(PacketPtr pkt)$/;"	f	class:IdeController
readConfig	src/dev/pcidev.cc	/^PciDevice::readConfig(PacketPtr pkt)$/;"	f	class:PciDevice
readControl	src/dev/ide_disk.cc	/^IdeDisk::readControl(const Addr offset, int size, uint8_t *data)$/;"	f	class:IdeDisk
readCopyBytes	src/dev/copy_engine.cc	/^CopyEngine::CopyEngineChannel::readCopyBytes()$/;"	f	class:CopyEngine::CopyEngineChannel
readCopyBytesComplete	src/dev/copy_engine.cc	/^CopyEngine::CopyEngineChannel::readCopyBytesComplete()$/;"	f	class:CopyEngine::CopyEngineChannel
readCounter	src/dev/intel_8254_timer.hh	/^    readCounter(unsigned int num)$/;"	f	class:Intel8254Timer
readCounter	src/dev/x86/i8254.hh	/^    readCounter(unsigned int num)$/;"	f	class:X86ISA::I8254
readCpu	src/dev/arm/gic_pl390.cc	/^Pl390::readCpu(PacketPtr pkt)$/;"	f	class:Pl390
readCpuId	src/cpu/inorder/cpu.hh	/^    int readCpuId() { return cpu_id; }$/;"	f	class:InOrderCPU
readCtrl	src/dev/arm/vgic.cc	/^VGic::readCtrl(PacketPtr pkt)$/;"	f	class:VGic
readDSPControl	src/arch/mips/dsp.cc	/^MipsISA::readDSPControl(uint32_t *dspctl, uint32_t mask)$/;"	f	class:MipsISA
readData	src/dev/mc146818.cc	/^MC146818::readData(uint8_t addr)$/;"	f	class:MC146818
readDataOut	src/dev/x86/i8042.cc	/^X86ISA::I8042::readDataOut()$/;"	f	class:X86ISA::I8042
readDataTimed	src/arch/arm/stage2_mmu.cc	/^Stage2MMU::readDataTimed(ThreadContext *tc, Addr descAddr,$/;"	f	class:Stage2MMU
readDataUntimed	src/arch/arm/stage2_mmu.cc	/^Stage2MMU::readDataUntimed(ThreadContext *tc, Addr oVAddr, Addr descAddr,$/;"	f	class:Stage2MMU
readDestRegIdx	src/cpu/inorder/inorder_dyn_inst.hh	/^    PhysRegIndex readDestRegIdx(int idx)$/;"	f	class:InOrderDynInst
readDisk	src/dev/ide_disk.cc	/^IdeDisk::readDisk(uint32_t sector, uint8_t *data)$/;"	f	class:IdeDisk
readDistributor	src/dev/arm/gic_pl390.cc	/^Pl390::readDistributor(PacketPtr pkt)$/;"	f	class:Pl390
readEvent	src/dev/arm/pl111.hh	/^    EventWrapper<Pl111, &Pl111::readFramebuffer> readEvent;$/;"	m	class:Pl111
readFSReg	src/arch/sparc/ua2005.cc	/^ISA::readFSReg(int miscReg, ThreadContext * tc)$/;"	f	class:ISA
readFillStart	src/arch/sparc/process.hh	/^    Addr readFillStart() { return fillStart; }$/;"	f	class:SparcLiveProcess
readFloatBitsResult	src/cpu/inorder/inorder_dyn_inst.hh	/^    FloatRegBits readFloatBitsResult(int idx)$/;"	f	class:InOrderDynInst
readFloatReg	src/cpu/checker/thread_context.hh	/^    FloatReg readFloatReg(int reg_idx)$/;"	f	class:CheckerThreadContext
readFloatReg	src/cpu/inorder/cpu.cc	/^InOrderCPU::readFloatReg(RegIndex reg_idx, ThreadID tid)$/;"	f	class:InOrderCPU
readFloatReg	src/cpu/inorder/thread_context.cc	/^InOrderThreadContext::readFloatReg(int reg_idx)$/;"	f	class:InOrderThreadContext
readFloatReg	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::readFloatReg(int reg_idx)$/;"	f	class:FullO3CPU
readFloatReg	src/cpu/o3/regfile.hh	/^    FloatReg readFloatReg(PhysRegIndex reg_idx) const$/;"	f	class:PhysRegFile
readFloatReg	src/cpu/o3/thread_context.hh	/^    virtual FloatReg readFloatReg(int reg_idx) {$/;"	f	class:O3ThreadContext
readFloatReg	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::OzoneTC::readFloatReg(int reg_idx)$/;"	f	class:OzoneCPU::OzoneTC
readFloatReg	src/cpu/simple_thread.hh	/^    FloatReg readFloatReg(int reg_idx)$/;"	f	class:SimpleThread
readFloatReg	src/cpu/thread_context.hh	/^    FloatReg readFloatReg(int reg_idx)$/;"	f	class:ProxyThreadContext
readFloatRegBits	src/cpu/checker/thread_context.hh	/^    FloatRegBits readFloatRegBits(int reg_idx)$/;"	f	class:CheckerThreadContext
readFloatRegBits	src/cpu/inorder/cpu.cc	/^InOrderCPU::readFloatRegBits(RegIndex reg_idx, ThreadID tid)$/;"	f	class:InOrderCPU
readFloatRegBits	src/cpu/inorder/thread_context.cc	/^InOrderThreadContext::readFloatRegBits(int reg_idx)$/;"	f	class:InOrderThreadContext
readFloatRegBits	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::readFloatRegBits(int reg_idx)$/;"	f	class:FullO3CPU
readFloatRegBits	src/cpu/o3/regfile.hh	/^    FloatRegBits readFloatRegBits(PhysRegIndex reg_idx) const$/;"	f	class:PhysRegFile
readFloatRegBits	src/cpu/o3/thread_context.hh	/^    virtual FloatRegBits readFloatRegBits(int reg_idx) {$/;"	f	class:O3ThreadContext
readFloatRegBits	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::OzoneTC::readFloatRegBits(int reg_idx)$/;"	f	class:OzoneCPU::OzoneTC
readFloatRegBits	src/cpu/simple_thread.hh	/^    FloatRegBits readFloatRegBits(int reg_idx)$/;"	f	class:SimpleThread
readFloatRegBits	src/cpu/thread_context.hh	/^    FloatRegBits readFloatRegBits(int reg_idx)$/;"	f	class:ProxyThreadContext
readFloatRegBitsFlat	src/cpu/checker/thread_context.hh	/^    FloatRegBits readFloatRegBitsFlat(int idx)$/;"	f	class:CheckerThreadContext
readFloatRegBitsFlat	src/cpu/inorder/thread_context.cc	/^InOrderThreadContext::readFloatRegBitsFlat(int idx)$/;"	f	class:InOrderThreadContext
readFloatRegBitsFlat	src/cpu/o3/thread_context_impl.hh	/^O3ThreadContext<Impl>::readFloatRegBitsFlat(int reg_idx)$/;"	f	class:O3ThreadContext
readFloatRegBitsFlat	src/cpu/simple_thread.hh	/^    FloatRegBits readFloatRegBitsFlat(int idx) { return floatRegs.i[idx]; }$/;"	f	class:SimpleThread
readFloatRegBitsFlat	src/cpu/thread_context.hh	/^    FloatRegBits readFloatRegBitsFlat(int idx)$/;"	f	class:ProxyThreadContext
readFloatRegFlat	src/cpu/checker/thread_context.hh	/^    FloatReg readFloatRegFlat(int idx)$/;"	f	class:CheckerThreadContext
readFloatRegFlat	src/cpu/inorder/thread_context.cc	/^InOrderThreadContext::readFloatRegFlat(int idx)$/;"	f	class:InOrderThreadContext
readFloatRegFlat	src/cpu/o3/thread_context_impl.hh	/^O3ThreadContext<Impl>::readFloatRegFlat(int reg_idx)$/;"	f	class:O3ThreadContext
readFloatRegFlat	src/cpu/simple_thread.hh	/^    FloatReg readFloatRegFlat(int idx) { return floatRegs.f[idx]; }$/;"	f	class:SimpleThread
readFloatRegFlat	src/cpu/thread_context.hh	/^    FloatReg readFloatRegFlat(int idx)$/;"	f	class:ProxyThreadContext
readFloatRegOperand	src/cpu/checker/cpu.hh	/^    FloatReg readFloatRegOperand(const StaticInst *si, int idx)$/;"	f	class:CheckerCPU
readFloatRegOperand	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::readFloatRegOperand(const StaticInst *si, int idx)$/;"	f	class:InOrderDynInst
readFloatRegOperand	src/cpu/o3/dyn_inst.hh	/^    FloatReg readFloatRegOperand(const StaticInst *si, int idx)$/;"	f	class:BaseO3DynInst
readFloatRegOperand	src/cpu/ozone/dyn_inst.hh	/^    FloatReg readFloatRegOperand(const StaticInst *si, int idx)$/;"	f	class:OzoneDynInst
readFloatRegOperand	src/cpu/simple/base.hh	/^    FloatReg readFloatRegOperand(const StaticInst *si, int idx)$/;"	f	class:BaseSimpleCPU
readFloatRegOperandBits	src/cpu/checker/cpu.hh	/^    FloatRegBits readFloatRegOperandBits(const StaticInst *si, int idx)$/;"	f	class:CheckerCPU
readFloatRegOperandBits	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::readFloatRegOperandBits(const StaticInst *si, int idx)$/;"	f	class:InOrderDynInst
readFloatRegOperandBits	src/cpu/o3/dyn_inst.hh	/^    FloatRegBits readFloatRegOperandBits(const StaticInst *si, int idx)$/;"	f	class:BaseO3DynInst
readFloatRegOperandBits	src/cpu/ozone/dyn_inst.hh	/^    FloatRegBits readFloatRegOperandBits(const StaticInst *si, int idx)$/;"	f	class:OzoneDynInst
readFloatRegOperandBits	src/cpu/simple/base.hh	/^    FloatRegBits readFloatRegOperandBits(const StaticInst *si, int idx)$/;"	f	class:BaseSimpleCPU
readFloatResult	src/cpu/inorder/inorder_dyn_inst.hh	/^    FloatReg readFloatResult(int idx)$/;"	f	class:InOrderDynInst
readFramebuffer	src/dev/arm/pl111.cc	/^Pl111::readFramebuffer()$/;"	f	class:Pl111
readFreeEntries	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::readFreeEntries(ThreadID tid)$/;"	f	class:DefaultRename
readFunc	src/sim/syscall_emul.cc	/^readFunc(SyscallDesc *desc, int num, LiveProcess *p, ThreadContext *tc)$/;"	f
readFuncExeInst	src/cpu/checker/thread_context.hh	/^    Counter readFuncExeInst() { return actualTC->readFuncExeInst(); }$/;"	f	class:CheckerThreadContext
readFuncExeInst	src/cpu/inorder/thread_context.hh	/^    Counter readFuncExeInst() { return thread->funcExeInst; }$/;"	f	class:InOrderThreadContext
readFuncExeInst	src/cpu/o3/thread_context.hh	/^    virtual Counter readFuncExeInst() { return thread->funcExeInst; }$/;"	f	class:O3ThreadContext
readFuncExeInst	src/cpu/ozone/cpu.hh	/^        Counter readFuncExeInst() { return thread->funcExeInst; }$/;"	f	class:OzoneCPU::OzoneTC
readFuncExeInst	src/cpu/thread_context.hh	/^    Counter readFuncExeInst() { return actualTC->readFuncExeInst(); }$/;"	f	class:ProxyThreadContext
readFuncExeInst	src/cpu/thread_state.hh	/^    Counter readFuncExeInst() { return funcExeInst; }$/;"	f	struct:ThreadState
readGlobalHist	src/cpu/pred/tournament.hh	/^    inline unsigned readGlobalHist() { return globalHistory; }$/;"	f	class:TournamentBP
readGtoH	src/mem/port_proxy.hh	/^PortProxy::readGtoH(Addr address) const$/;"	f	class:PortProxy
readHeadInst	src/cpu/o3/rob_impl.hh	/^ROB<Impl>::readHeadInst(ThreadID tid)$/;"	f	class:ROB
readHits	src/arch/arm/tlb.hh	/^    mutable Stats::Scalar readHits;$/;"	m	class:ArmISA::TLB
readIRR	src/dev/x86/i8259.hh	/^    bool readIRR;$/;"	m	class:X86ISA::I8259
readId	src/dev/arm/amba_device.cc	/^AmbaDevice::readId(PacketPtr pkt, uint64_t amba_id, Addr pio_addr)$/;"	f	class:AmbaDevice
readIntReg	src/cpu/checker/thread_context.hh	/^    uint64_t readIntReg(int reg_idx)$/;"	f	class:CheckerThreadContext
readIntReg	src/cpu/inorder/cpu.cc	/^InOrderCPU::readIntReg(RegIndex reg_idx, ThreadID tid)$/;"	f	class:InOrderCPU
readIntReg	src/cpu/inorder/thread_context.cc	/^InOrderThreadContext::readIntReg(int reg_idx)$/;"	f	class:InOrderThreadContext
readIntReg	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::readIntReg(int reg_idx)$/;"	f	class:FullO3CPU
readIntReg	src/cpu/o3/regfile.hh	/^    uint64_t readIntReg(PhysRegIndex reg_idx) const$/;"	f	class:PhysRegFile
readIntReg	src/cpu/o3/thread_context.hh	/^    virtual uint64_t readIntReg(int reg_idx) {$/;"	f	class:O3ThreadContext
readIntReg	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::OzoneTC::readIntReg(int reg_idx)$/;"	f	class:OzoneCPU::OzoneTC
readIntReg	src/cpu/simple_thread.hh	/^    uint64_t readIntReg(int reg_idx)$/;"	f	class:SimpleThread
readIntReg	src/cpu/thread_context.hh	/^    uint64_t readIntReg(int reg_idx)$/;"	f	class:ProxyThreadContext
readIntRegFlat	src/cpu/checker/thread_context.hh	/^    uint64_t readIntRegFlat(int idx)$/;"	f	class:CheckerThreadContext
readIntRegFlat	src/cpu/inorder/thread_context.cc	/^InOrderThreadContext::readIntRegFlat(int idx)$/;"	f	class:InOrderThreadContext
readIntRegFlat	src/cpu/o3/thread_context_impl.hh	/^O3ThreadContext<Impl>::readIntRegFlat(int reg_idx)$/;"	f	class:O3ThreadContext
readIntRegFlat	src/cpu/simple_thread.hh	/^    uint64_t readIntRegFlat(int idx) { return intRegs[idx]; }$/;"	f	class:SimpleThread
readIntRegFlat	src/cpu/thread_context.hh	/^    uint64_t readIntRegFlat(int idx)$/;"	f	class:ProxyThreadContext
readIntRegOperand	src/cpu/checker/cpu.hh	/^    uint64_t readIntRegOperand(const StaticInst *si, int idx)$/;"	f	class:CheckerCPU
readIntRegOperand	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::readIntRegOperand(const StaticInst *si, int idx, ThreadID tid)$/;"	f	class:InOrderDynInst
readIntRegOperand	src/cpu/o3/dyn_inst.hh	/^    uint64_t readIntRegOperand(const StaticInst *si, int idx)$/;"	f	class:BaseO3DynInst
readIntRegOperand	src/cpu/ozone/dyn_inst.hh	/^    uint64_t readIntRegOperand(const StaticInst *si, int idx)$/;"	f	class:OzoneDynInst
readIntRegOperand	src/cpu/simple/base.hh	/^    uint64_t readIntRegOperand(const StaticInst *si, int idx)$/;"	f	class:BaseSimpleCPU
readIntResult	src/cpu/inorder/inorder_dyn_inst.hh	/^    IntReg readIntResult(int idx)$/;"	f	class:InOrderDynInst
readIntSrc	src/cpu/inorder/inorder_dyn_inst.hh	/^    uint64_t readIntSrc(int idx) { return instSrc[idx].intVal; }$/;"	f	class:InOrderDynInst
readInto	src/mem/ruby/network/orion/ConfigFile.hh	/^bool ConfigFile::readInto( T& var, const string& key ) const$/;"	f	class:ConfigFile
readInto	src/mem/ruby/network/orion/ConfigFile.hh	/^bool ConfigFile::readInto( T& var, const string& key, const T& value ) const$/;"	f	class:ConfigFile
readIob	src/dev/sparc/iob.cc	/^Iob::readIob(PacketPtr pkt)$/;"	f	class:Iob
readIpr	src/arch/alpha/ev5.cc	/^ISA::readIpr(int idx, ThreadContext *tc)$/;"	f	class:AlphaISA::ISA
readJBus	src/dev/sparc/iob.cc	/^Iob::readJBus(PacketPtr pkt)$/;"	f	class:Iob
readLastActivate	src/cpu/checker/thread_context.hh	/^    Tick readLastActivate() { return actualTC->readLastActivate(); }$/;"	f	class:CheckerThreadContext
readLastActivate	src/cpu/inorder/thread_context.cc	/^InOrderThreadContext::readLastActivate()$/;"	f	class:InOrderThreadContext
readLastActivate	src/cpu/o3/thread_context_impl.hh	/^O3ThreadContext<Impl>::readLastActivate()$/;"	f	class:O3ThreadContext
readLastActivate	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::OzoneTC::readLastActivate()$/;"	f	class:OzoneCPU::OzoneTC
readLastActivate	src/cpu/thread_context.hh	/^    Tick readLastActivate() { return actualTC->readLastActivate(); }$/;"	f	class:ProxyThreadContext
readLastActivate	src/cpu/thread_state.hh	/^    Tick readLastActivate() const { return lastActivate; }$/;"	f	struct:ThreadState
readLastSuspend	src/cpu/checker/thread_context.hh	/^    Tick readLastSuspend() { return actualTC->readLastSuspend(); }$/;"	f	class:CheckerThreadContext
readLastSuspend	src/cpu/inorder/thread_context.cc	/^InOrderThreadContext::readLastSuspend()$/;"	f	class:InOrderThreadContext
readLastSuspend	src/cpu/o3/thread_context_impl.hh	/^O3ThreadContext<Impl>::readLastSuspend()$/;"	f	class:O3ThreadContext
readLastSuspend	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::OzoneTC::readLastSuspend()$/;"	f	class:OzoneCPU::OzoneTC
readLastSuspend	src/cpu/thread_context.hh	/^    Tick readLastSuspend() { return actualTC->readLastSuspend(); }$/;"	f	class:ProxyThreadContext
readLastSuspend	src/cpu/thread_state.hh	/^    Tick readLastSuspend() const { return lastSuspend; }$/;"	f	struct:ThreadState
readLatencyHist	src/mem/comm_monitor.hh	/^        Stats::Histogram readLatencyHist;$/;"	m	struct:CommMonitor::MonitorStats
readMem	src/cpu/base_dyn_inst.hh	/^BaseDynInst<Impl>::readMem(Addr addr, uint8_t *data,$/;"	f	class:BaseDynInst
readMem	src/cpu/checker/cpu.cc	/^CheckerCPU::readMem(Addr addr, uint8_t *data, unsigned size, unsigned flags)$/;"	f	class:CheckerCPU
readMem	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::readMem(Addr addr, uint8_t *data,$/;"	f	class:InOrderDynInst
readMem	src/cpu/simple/atomic.cc	/^AtomicSimpleCPU::readMem(Addr addr, uint8_t * data,$/;"	f	class:AtomicSimpleCPU
readMem	src/cpu/simple/timing.cc	/^TimingSimpleCPU::readMem(Addr addr, uint8_t *data,$/;"	f	class:TimingSimpleCPU
readMemAtomic	src/arch/generic/memhelpers.hh	/^readMemAtomic(XC *xc, Trace::InstRecord *traceData, Addr addr, MemT &mem,$/;"	f
readMemAtomic	src/arch/x86/memhelpers.hh	/^readMemAtomic(XC *xc, Trace::InstRecord *traceData, Addr addr, uint64_t &mem,$/;"	f	namespace:X86ISA
readMemTiming	src/arch/generic/memhelpers.hh	/^readMemTiming(XC *xc, Trace::InstRecord *traceData, Addr addr,$/;"	f
readMemTiming	src/arch/x86/memhelpers.hh	/^readMemTiming(XC *xc, Trace::InstRecord *traceData, Addr addr,$/;"	f	namespace:X86ISA
readMicroPC	src/cpu/inorder/thread_context.hh	/^    uint64_t readMicroPC()$/;"	f	class:InOrderThreadContext
readMiscReg	src/arch/alpha/isa.cc	/^ISA::readMiscReg(int misc_reg, ThreadContext *tc, ThreadID tid)$/;"	f	class:AlphaISA::ISA
readMiscReg	src/arch/arm/isa.cc	/^ISA::readMiscReg(int misc_reg, ThreadContext *tc)$/;"	f	class:ArmISA::ISA
readMiscReg	src/arch/mips/isa.cc	/^ISA::readMiscReg(int misc_reg, ThreadContext *tc,  ThreadID tid)$/;"	f	class:MipsISA::ISA
readMiscReg	src/arch/power/isa.hh	/^    readMiscReg(int misc_reg, ThreadContext *tc)$/;"	f	class:PowerISA::ISA
readMiscReg	src/arch/sparc/isa.cc	/^ISA::readMiscReg(int miscReg, ThreadContext * tc)$/;"	f	class:SparcISA::ISA
readMiscReg	src/arch/x86/isa.cc	/^ISA::readMiscReg(int miscReg, ThreadContext * tc)$/;"	f	class:X86ISA::ISA
readMiscReg	src/cpu/checker/cpu.hh	/^    MiscReg readMiscReg(int misc_reg)$/;"	f	class:CheckerCPU
readMiscReg	src/cpu/checker/thread_context.hh	/^    MiscReg readMiscReg(int misc_reg)$/;"	f	class:CheckerThreadContext
readMiscReg	src/cpu/inorder/cpu.cc	/^InOrderCPU::readMiscReg(int misc_reg, ThreadID tid)$/;"	f	class:InOrderCPU
readMiscReg	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::readMiscReg(int misc_reg)$/;"	f	class:InOrderDynInst
readMiscReg	src/cpu/inorder/thread_context.hh	/^    MiscReg readMiscReg(int misc_reg)$/;"	f	class:InOrderThreadContext
readMiscReg	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::readMiscReg(int misc_reg, ThreadID tid)$/;"	f	class:FullO3CPU
readMiscReg	src/cpu/o3/dyn_inst.hh	/^    MiscReg readMiscReg(int misc_reg)$/;"	f	class:BaseO3DynInst
readMiscReg	src/cpu/o3/thread_context.hh	/^    virtual MiscReg readMiscReg(int misc_reg)$/;"	f	class:O3ThreadContext
readMiscReg	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::OzoneTC::readMiscReg(int misc_reg)$/;"	f	class:OzoneCPU::OzoneTC
readMiscReg	src/cpu/ozone/dyn_inst_impl.hh	/^OzoneDynInst<Impl>::readMiscReg(int misc_reg)$/;"	f	class:OzoneDynInst
readMiscReg	src/cpu/ozone/thread_state.hh	/^    MiscReg readMiscReg(int misc_reg)$/;"	f	struct:OzoneThreadState
readMiscReg	src/cpu/simple/base.hh	/^    MiscReg readMiscReg(int misc_reg)$/;"	f	class:BaseSimpleCPU
readMiscReg	src/cpu/simple_thread.hh	/^    readMiscReg(int misc_reg, ThreadID tid = 0)$/;"	f	class:SimpleThread
readMiscReg	src/cpu/thread_context.hh	/^    MiscReg readMiscReg(int misc_reg)$/;"	f	class:ProxyThreadContext
readMiscRegNoEffect	src/arch/alpha/isa.cc	/^ISA::readMiscRegNoEffect(int misc_reg, ThreadID tid)$/;"	f	class:AlphaISA::ISA
readMiscRegNoEffect	src/arch/arm/isa.cc	/^ISA::readMiscRegNoEffect(int misc_reg) const$/;"	f	class:ArmISA::ISA
readMiscRegNoEffect	src/arch/mips/isa.cc	/^ISA::readMiscRegNoEffect(int misc_reg, ThreadID tid)$/;"	f	class:MipsISA::ISA
readMiscRegNoEffect	src/arch/power/isa.hh	/^    readMiscRegNoEffect(int misc_reg)$/;"	f	class:PowerISA::ISA
readMiscRegNoEffect	src/arch/sparc/isa.cc	/^ISA::readMiscRegNoEffect(int miscReg)$/;"	f	class:SparcISA::ISA
readMiscRegNoEffect	src/arch/x86/isa.cc	/^ISA::readMiscRegNoEffect(int miscReg)$/;"	f	class:X86ISA::ISA
readMiscRegNoEffect	src/cpu/checker/cpu.hh	/^    MiscReg readMiscRegNoEffect(int misc_reg)$/;"	f	class:CheckerCPU
readMiscRegNoEffect	src/cpu/checker/thread_context.hh	/^    MiscReg readMiscRegNoEffect(int misc_reg)$/;"	f	class:CheckerThreadContext
readMiscRegNoEffect	src/cpu/inorder/cpu.cc	/^InOrderCPU::readMiscRegNoEffect(int misc_reg, ThreadID tid)$/;"	f	class:InOrderCPU
readMiscRegNoEffect	src/cpu/inorder/thread_context.hh	/^    MiscReg readMiscRegNoEffect(int misc_reg)$/;"	f	class:InOrderThreadContext
readMiscRegNoEffect	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::readMiscRegNoEffect(int misc_reg, ThreadID tid)$/;"	f	class:FullO3CPU
readMiscRegNoEffect	src/cpu/o3/thread_context.hh	/^    virtual MiscReg readMiscRegNoEffect(int misc_reg)$/;"	f	class:O3ThreadContext
readMiscRegNoEffect	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::OzoneTC::readMiscRegNoEffect(int misc_reg)$/;"	f	class:OzoneCPU::OzoneTC
readMiscRegNoEffect	src/cpu/ozone/dyn_inst_impl.hh	/^OzoneDynInst<Impl>::readMiscRegNoEffect(int misc_reg)$/;"	f	class:OzoneDynInst
readMiscRegNoEffect	src/cpu/ozone/thread_state.hh	/^    MiscReg readMiscRegNoEffect(int misc_reg)$/;"	f	struct:OzoneThreadState
readMiscRegNoEffect	src/cpu/simple/base.hh	/^    MiscReg readMiscRegNoEffect(int misc_reg)$/;"	f	class:BaseSimpleCPU
readMiscRegNoEffect	src/cpu/simple_thread.hh	/^    readMiscRegNoEffect(int misc_reg, ThreadID tid = 0)$/;"	f	class:SimpleThread
readMiscRegNoEffect	src/cpu/thread_context.hh	/^    MiscReg readMiscRegNoEffect(int misc_reg)$/;"	f	class:ProxyThreadContext
readMiscRegOperand	src/cpu/checker/cpu.hh	/^    MiscReg readMiscRegOperand(const StaticInst *si, int idx)$/;"	f	class:CheckerCPU
readMiscRegOperand	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::readMiscRegOperand(const StaticInst *si, int idx)$/;"	f	class:InOrderDynInst
readMiscRegOperand	src/cpu/o3/dyn_inst.hh	/^    TheISA::MiscReg readMiscRegOperand(const StaticInst *si, int idx)$/;"	f	class:BaseO3DynInst
readMiscRegOperand	src/cpu/simple/base.hh	/^    MiscReg readMiscRegOperand(const StaticInst *si, int idx)$/;"	f	class:BaseSimpleCPU
readMisses	src/arch/arm/tlb.hh	/^    mutable Stats::Scalar readMisses;$/;"	m	class:ArmISA::TLB
readMsix	src/dev/arm/gic_pl390.cc	/^Pl390::readMsix(PacketPtr pkt)$/;"	f	class:Pl390
readNextMicroPC	src/cpu/inorder/thread_context.hh	/^    uint64_t readNextMicroPC()$/;"	f	class:InOrderThreadContext
readNextNPC	src/cpu/ozone/cpu.hh	/^        uint64_t readNextNPC()$/;"	f	class:OzoneCPU::OzoneTC
readNextPC	src/cpu/ozone/cpu.hh	/^        uint64_t readNextPC() { return thread->nextPC; }$/;"	f	class:OzoneCPU::OzoneTC
readNextPC	src/cpu/ozone/thread_state.hh	/^    uint64_t readNextPC()$/;"	f	struct:OzoneThreadState
readPC	src/arch/arm/insts/static_inst.hh	/^    readPC(XC *xc)$/;"	f	class:ArmISA::ArmStaticInst
readPC	src/cpu/ozone/cpu.hh	/^        uint64_t readPC() { return thread->PC; }$/;"	f	class:OzoneCPU::OzoneTC
readPC	src/cpu/ozone/thread_state.hh	/^    uint64_t readPC()$/;"	f	struct:OzoneThreadState
readPercent	src/cpu/testers/traffic_gen/generators.hh	/^    const uint8_t readPercent;$/;"	m	class:LinearGen
readPercent	src/cpu/testers/traffic_gen/generators.hh	/^    const uint8_t readPercent;$/;"	m	class:RandomGen
readPipeSource	src/sim/process.hh	/^        int readPipeSource;$/;"	m	class:Process::FdMap
readPktSize	src/mem/dram_ctrl.hh	/^    Stats::Vector readPktSize;$/;"	m	class:DRAMCtrl
readPorts	src/cpu/testers/rubytest/RubyTester.hh	/^    std::vector<MasterPort*> readPorts;$/;"	m	class:RubyTester
readPredMicroPC	src/cpu/inorder/inorder_dyn_inst.hh	/^    Addr readPredMicroPC() { return predPC.microPC(); }$/;"	f	class:InOrderDynInst
readPredTaken	src/cpu/base_dyn_inst.hh	/^    bool readPredTaken()$/;"	f	class:BaseDynInst
readPredTarg	src/cpu/base_dyn_inst.hh	/^    const TheISA::PCState &readPredTarg() { return predPC; }$/;"	f	class:BaseDynInst
readPredTarg	src/cpu/inorder/inorder_dyn_inst.hh	/^    TheISA::PCState readPredTarg() { return predPC; }$/;"	f	class:InOrderDynInst
readPredicate	src/cpu/base_dyn_inst.hh	/^    bool readPredicate()$/;"	f	class:BaseDynInst
readPredicate	src/cpu/checker/cpu.hh	/^    bool readPredicate() { return thread->readPredicate(); }$/;"	f	class:CheckerCPU
readPredicate	src/cpu/simple/base.hh	/^    bool readPredicate() { return thread->readPredicate(); }$/;"	f	class:BaseSimpleCPU
readPredicate	src/cpu/simple_thread.hh	/^    bool readPredicate()$/;"	f	class:SimpleThread
readPredicate	src/cpu/thread_context.hh	/^    bool readPredicate() { return actualTC->readPredicate(); }$/;"	f	class:ProxyThreadContext
readQueue	src/mem/dram_ctrl.hh	/^    std::deque<DRAMPacket*> readQueue;$/;"	m	class:DRAMCtrl
readQueueFull	src/mem/dram_ctrl.cc	/^DRAMCtrl::readQueueFull(unsigned int neededEntries) const$/;"	f	class:DRAMCtrl
readReg	src/arch/x86/interrupts.cc	/^X86ISA::Interrupts::readReg(ApicRegIndex reg)$/;"	f	class:X86ISA::Interrupts
readReg	src/dev/x86/i82094aa.cc	/^X86ISA::I82094AA::readReg(uint8_t offset)$/;"	f	class:X86ISA::I82094AA
readRegOtherThread	src/cpu/checker/cpu.hh	/^    uint64_t readRegOtherThread(int misc_reg)$/;"	f	class:CheckerCPU
readRegOtherThread	src/cpu/inorder/cpu.cc	/^InOrderCPU::readRegOtherThread(unsigned reg_idx, ThreadID tid)$/;"	f	class:InOrderCPU
readRegOtherThread	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::readRegOtherThread(unsigned reg_idx, ThreadID tid)$/;"	f	class:InOrderDynInst
readRegOtherThread	src/cpu/inorder/thread_context.cc	/^InOrderThreadContext::readRegOtherThread(int reg_idx, ThreadID tid)$/;"	f	class:InOrderThreadContext
readRegOtherThread	src/cpu/o3/dyn_inst.hh	/^    uint64_t readRegOtherThread(int misc_reg)$/;"	f	class:BaseO3DynInst
readRegOtherThread	src/cpu/simple/base.hh	/^     MiscReg readRegOtherThread(int regIdx, ThreadID tid = InvalidThreadID)$/;"	f	class:BaseSimpleCPU
readRegOtherThread	src/cpu/thread_context.hh	/^    readRegOtherThread(int misc_reg, ThreadID tid)$/;"	f	class:ThreadContext
readRegister	src/dev/x86/cmos.cc	/^X86ISA::Cmos::readRegister(uint8_t reg)$/;"	f	class:X86ISA::Cmos
readReqs	src/mem/dram_ctrl.hh	/^    Stats::Scalar readReqs;$/;"	m	class:DRAMCtrl
readResult	src/cpu/base_dyn_inst.hh	/^    void readResult(T& t)$/;"	f	class:BaseDynInst
readResultTime	src/cpu/inorder/inorder_dyn_inst.hh	/^    Tick readResultTime(int idx) { return instResult[idx].tick; }$/;"	f	class:InOrderDynInst
readRowHitRate	src/mem/dram_ctrl.hh	/^    Stats::Formula readRowHitRate;$/;"	m	class:DRAMCtrl
readRowHits	src/mem/dram_ctrl.hh	/^    Stats::Scalar readRowHits;$/;"	m	class:DRAMCtrl
readSpillStart	src/arch/sparc/process.hh	/^    Addr readSpillStart() { return spillStart; }$/;"	f	class:SparcLiveProcess
readSrcRegIdx	src/cpu/inorder/inorder_dyn_inst.hh	/^    PhysRegIndex readSrcRegIdx(int idx)$/;"	f	class:InOrderDynInst
readStCondFailures	src/cpu/base_dyn_inst.hh	/^    unsigned readStCondFailures()$/;"	f	class:BaseDynInst
readStCondFailures	src/cpu/checker/thread_context.hh	/^    unsigned readStCondFailures()$/;"	f	class:CheckerThreadContext
readStCondFailures	src/cpu/inorder/inorder_dyn_inst.hh	/^    unsigned readStCondFailures()$/;"	f	class:InOrderDynInst
readStCondFailures	src/cpu/inorder/thread_context.hh	/^    unsigned readStCondFailures()$/;"	f	class:InOrderThreadContext
readStCondFailures	src/cpu/o3/thread_context.hh	/^    virtual unsigned readStCondFailures()$/;"	f	class:O3ThreadContext
readStCondFailures	src/cpu/ozone/cpu.hh	/^        unsigned readStCondFailures()$/;"	f	class:OzoneCPU::OzoneTC
readStCondFailures	src/cpu/simple/base.hh	/^    unsigned readStCondFailures() {$/;"	f	class:BaseSimpleCPU
readStCondFailures	src/cpu/simple_thread.hh	/^    unsigned readStCondFailures() { return storeCondFailures; }$/;"	f	class:SimpleThread
readStCondFailures	src/cpu/thread_context.hh	/^    unsigned readStCondFailures()$/;"	f	class:ProxyThreadContext
readStallSignals	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::readStallSignals(ThreadID tid)$/;"	f	class:PipelineStage
readStallSignals	src/cpu/o3/decode_impl.hh	/^DefaultDecode<Impl>::readStallSignals(ThreadID tid)$/;"	f	class:DefaultDecode
readStallSignals	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::readStallSignals(ThreadID tid)$/;"	f	class:DefaultIEW
readStallSignals	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::readStallSignals(ThreadID tid)$/;"	f	class:DefaultRename
readString	src/arch/x86/bios/smbios.cc	/^X86ISA::SMBios::SMBiosStructure::readString(int n)$/;"	f	class:X86ISA::SMBios::SMBiosStructure
readString	src/mem/se_translating_port_proxy.cc	/^SETranslatingPortProxy::readString(std::string &str, Addr addr) const$/;"	f	class:SETranslatingPortProxy
readTailInst	src/cpu/o3/rob_impl.hh	/^ROB<Impl>::readTailInst(ThreadID tid)$/;"	f	class:ROB
readTid	src/cpu/inorder/inorder_dyn_inst.hh	/^    short readTid() { return threadNumber; }$/;"	f	class:InOrderDynInst
readTrans	src/mem/comm_monitor.hh	/^        unsigned int readTrans;$/;"	m	struct:CommMonitor::MonitorStats
readTransHist	src/mem/comm_monitor.hh	/^        Stats::Histogram readTransHist;$/;"	m	struct:CommMonitor::MonitorStats
readVCpu	src/dev/arm/vgic.cc	/^VGic::readVCpu(PacketPtr pkt)$/;"	f	class:VGic
readVecElem	src/arch/arm/insts/neon64_mem.hh	/^readVecElem(VReg src, int index, int eSize)$/;"	f	namespace:ArmISA
readVpn	src/cpu/inorder/inorder_dyn_inst.hh	/^    int readVpn() { return virtProcNumber; }$/;"	f	class:InOrderDynInst
read_accesses	src/arch/alpha/tlb.hh	/^    mutable Stats::Scalar read_accesses;$/;"	m	class:AlphaISA::TLB
read_accesses	src/arch/mips/tlb.hh	/^    mutable Stats::Scalar read_accesses;$/;"	m	class:MipsISA::TLB
read_accesses	src/arch/power/tlb.hh	/^    mutable Stats::Scalar read_accesses;$/;"	m	class:PowerISA::TLB
read_acv	src/arch/alpha/tlb.hh	/^    mutable Stats::Scalar read_acv;$/;"	m	class:AlphaISA::TLB
read_acv	src/arch/mips/tlb.hh	/^    mutable Stats::Scalar read_acv;$/;"	m	class:MipsISA::TLB
read_acv	src/arch/power/tlb.hh	/^    mutable Stats::Scalar read_acv;$/;"	m	class:PowerISA::TLB
read_addr_mask	src/mem/CommMonitor.py	/^    read_addr_mask = Param.Addr(MaxAddr, "Address mask for read address")$/;"	v	class:CommMonitor
read_and_flatten	src/arch/isa_parser.py	/^    def read_and_flatten(self, filename):$/;"	m	class:ISAParser
read_buffer_size	src/mem/DRAMCtrl.py	/^    read_buffer_size = Param.Unsigned(32, "Number of read queue entries")$/;"	v	class:DRAMCtrl
read_byte	src/dev/intel_8254_timer.hh	/^        uint8_t read_byte, write_byte;$/;"	m	class:Intel8254Timer::Counter
read_exec_only	src/arch/x86/linux/syscalls.cc	/^    Bitfield<3> read_exec_only;$/;"	v
read_file	src/mem/ruby/network/orion/OrionConfig.cc	/^void OrionConfig::read_file($/;"	f	class:OrionConfig
read_hits	src/arch/alpha/tlb.hh	/^    mutable Stats::Scalar read_hits;$/;"	m	class:AlphaISA::TLB
read_hits	src/arch/mips/tlb.hh	/^    mutable Stats::Scalar read_hits;$/;"	m	class:MipsISA::TLB
read_hits	src/arch/power/tlb.hh	/^    mutable Stats::Scalar read_hits;$/;"	m	class:PowerISA::TLB
read_misses	src/arch/alpha/tlb.hh	/^    mutable Stats::Scalar read_misses;$/;"	m	class:AlphaISA::TLB
read_misses	src/arch/mips/tlb.hh	/^    mutable Stats::Scalar read_misses;$/;"	m	class:MipsISA::TLB
read_misses	src/arch/power/tlb.hh	/^    mutable Stats::Scalar read_misses;$/;"	m	class:PowerISA::TLB
read_only	src/dev/DiskImage.py	/^    read_only = Param.Bool(False, "read only image")$/;"	v	class:DiskImage
read_write_delay	src/mem/ruby/system/RubyMemoryControl.py	/^    read_write_delay = Param.Int(2, "");$/;"	v	class:RubyMemoryControl
readable	src/arch/x86/regs/misc.hh	/^        Bitfield<13> readable;$/;"	m	namespace:X86ISA
readahead	src/kern/linux/linux_syscalls.hh	/^    readahead = 160,$/;"	e	enum:SystemCalls::__anon87
readall	src/base/circlebuf.cc	/^CircleBuf::readall(int fd)$/;"	f	class:CircleBuf
readdir	src/kern/linux/linux_syscalls.hh	/^    readdir = 161,$/;"	e	enum:SystemCalls::__anon87
readfile	src/sim/System.py	/^    readfile = Param.String("", "file to read startup script from")$/;"	v
readfile	src/sim/pseudo_inst.cc	/^readfile(ThreadContext *tc, Addr vaddr, uint64_t len, uint64_t offset)$/;"	f	namespace:PseudoInst
readline	src/python/m5/main.py	/^        exec "import readline" in scope$/;"	i
readlink	src/kern/linux/linux_syscalls.hh	/^    readlink = 162,$/;"	e	enum:SystemCalls::__anon87
readlink	src/kern/tru64/tru64_syscalls.hh	/^        readlink = 58,$/;"	e	enum:SystemCalls::__anon102
readlinkFunc	src/sim/syscall_emul.cc	/^readlinkFunc(SyscallDesc *desc, int num, LiveProcess *p, ThreadContext *tc)$/;"	f
readonly	src/dev/disk_image.hh	/^    bool readonly;$/;"	m	class:RawDiskImage
readsThisTime	src/mem/dram_ctrl.hh	/^    uint32_t readsThisTime;$/;"	m	class:DRAMCtrl
readv	src/kern/linux/linux_syscalls.hh	/^    readv = 163,$/;"	e	enum:SystemCalls::__anon87
readv	src/kern/tru64/tru64_syscalls.hh	/^        readv = 120,$/;"	e	enum:SystemCalls::__anon102
readyAddress	src/mem/ruby/system/TimerTable.cc	/^TimerTable::readyAddress() const$/;"	f	class:TimerTable
readyInsts	src/cpu/o3/inst_queue.hh	/^    ReadyInstQueue readyInsts[Num_OpClasses];$/;"	m	class:InstructionQueue
readyInsts	src/cpu/ozone/inst_queue.hh	/^    ReadyInstQueue readyInsts;$/;"	m	class:InstQueue
readyInstsForCommit	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::readyInstsForCommit()$/;"	f	class:LWBackEnd
readyIt	src/cpu/o3/inst_queue.hh	/^    ListOrderIt readyIt[Num_OpClasses];$/;"	m	class:InstructionQueue
readyIter	src/mem/cache/mshr.hh	/^    Iterator readyIter;$/;"	m	class:MSHR
readyList	src/cpu/ozone/back_end.hh	/^        InstList readyList;$/;"	m	class:BackEnd::InstQueue
readyList	src/mem/cache/mshr_queue.hh	/^    MSHR::List readyList;$/;"	m	class:MSHRQueue
readyQueue	src/cpu/ozone/back_end.hh	/^        ReadyInstQueue readyQueue;$/;"	m	class:BackEnd::InstQueue
readyRegs	src/cpu/base_dyn_inst.hh	/^    uint8_t readyRegs;$/;"	m	class:BaseDynInst
readyRegs	src/cpu/inorder/inorder_dyn_inst.hh	/^    unsigned readyRegs;$/;"	m	class:InOrderDynInst
readyThreads	src/cpu/inorder/cpu.hh	/^    std::list<ThreadID> readyThreads;$/;"	m	class:InOrderCPU
readyTime	src/mem/cache/mshr.hh	/^        Tick readyTime; \/\/!< Time when request is ready to be serviced$/;"	m	class:MSHR::Target
readyTime	src/mem/cache/mshr.hh	/^    Tick readyTime;$/;"	m	class:MSHR
readyTime	src/mem/dram_ctrl.hh	/^        Tick readyTime;$/;"	m	class:DRAMCtrl::DRAMPacket
readyToCommit	src/cpu/base_dyn_inst.hh	/^    bool readyToCommit() const { return status[CanCommit]; }$/;"	f	class:BaseDynInst
readyToCommit	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool readyToCommit() const { return status[CanCommit]; }$/;"	f	class:InOrderDynInst
readyToIssue	src/cpu/base_dyn_inst.hh	/^    bool readyToIssue() const { return status[CanIssue]; }$/;"	f	class:BaseDynInst
readyToIssue	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool readyToIssue() const { return status[CanIssue]; }$/;"	f	class:InOrderDynInst
real	src/arch/sparc/pagetable.hh	/^    bool real;$/;"	m	struct:SparcISA::TlbRange
realpath	src/unittest/genini.py	/^from os.path import join as joinpath, realpath$/;"	i
realview_io	src/dev/arm/RealView.py	/^    realview_io = RealViewCtrl(pio_addr=0x10000000)$/;"	v	class:RealViewEB
realview_io	src/dev/arm/RealView.py	/^    realview_io = RealViewCtrl(pio_addr=0x10000000)$/;"	v	class:RealViewPBX
realview_io	src/dev/arm/RealView.py	/^    realview_io = RealViewCtrl(proc_id0=0x14000000, proc_id1=0x14000000, pio_addr=0x1C010000)$/;"	v	class:VExpress_EMM
reanalyzeAllMessages	src/mem/ruby/buffers/MessageBuffer.cc	/^MessageBuffer::reanalyzeAllMessages()$/;"	f	class:MessageBuffer
reanalyzeList	src/mem/ruby/buffers/MessageBuffer.cc	/^MessageBuffer::reanalyzeList(list<MsgPtr> &lt, Tick nextTick)$/;"	f	class:MessageBuffer
reanalyzeMessages	src/mem/ruby/buffers/MessageBuffer.cc	/^MessageBuffer::reanalyzeMessages(const Address& addr)$/;"	f	class:MessageBuffer
reboot	src/kern/linux/linux_syscalls.hh	/^    reboot = 164,$/;"	e	enum:SystemCalls::__anon87
reboot	src/kern/tru64/tru64_syscalls.hh	/^        reboot = 55,$/;"	e	enum:SystemCalls::__anon102
receiveDeviceInterrupt	src/dev/sparc/iob.cc	/^Iob::receiveDeviceInterrupt(DeviceId devid)$/;"	f	class:Iob
receiveJBusInterrupt	src/dev/sparc/iob.cc	/^Iob::receiveJBusInterrupt(int cpu_id, int source, uint64_t d0, uint64_t d1)$/;"	f	class:Iob
recent	src/cpu/decode_cache.hh	/^    PageIt recent[2];$/;"	m	class:DecodeCache::AddrMap
recipEstimate	src/arch/arm/insts/vfp.cc	/^recipEstimate(double a)$/;"	f	namespace:ArmISA
recipSqrtEstimate	src/arch/arm/insts/vfp.cc	/^recipSqrtEstimate(double a)$/;"	f	namespace:ArmISA
recip_sqrt_estimate	src/arch/arm/insts/fplib.cc	/^static const uint8_t recip_sqrt_estimate[256] = {$/;"	m	namespace:ArmISA	file:
recordActivate	src/mem/dram_ctrl.cc	/^DRAMCtrl::recordActivate(Tick act_tick, uint8_t rank, uint8_t bank)$/;"	f	class:DRAMCtrl
recordBlocks	src/mem/ruby/system/SparseMemory.cc	/^SparseMemory::recordBlocks(int cntrl_id, CacheRecorder* tr) const$/;"	f	class:SparseMemory
recordCacheContents	src/mem/ruby/system/CacheMemory.cc	/^CacheMemory::recordCacheContents(int cntrl, CacheRecorder* tr) const$/;"	f	class:CacheMemory
recordMissLatency	src/mem/ruby/system/Sequencer.cc	/^Sequencer::recordMissLatency(const Cycles cycles, const RubyRequestType type,$/;"	f	class:Sequencer
recordPCChange	src/cpu/checker/cpu.hh	/^    void recordPCChange(const TheISA::PCState &val)$/;"	f	class:CheckerCPU
recordProducer	src/cpu/o3/inst_queue.hh	/^    void recordProducer(DynInstPtr &inst)$/;"	f	class:InstructionQueue
recordRequestType	src/mem/ruby/system/CacheMemory.cc	/^CacheMemory::recordRequestType(CacheRequestType requestType)$/;"	f	class:CacheMemory
recordRequestType	src/mem/ruby/system/DMASequencer.cc	/^DMASequencer::recordRequestType(DMASequencerRequestType requestType) {$/;"	f	class:DMASequencer
recordRequestType	src/mem/ruby/system/DirectoryMemory.cc	/^DirectoryMemory::recordRequestType(DirectoryRequestType requestType) {$/;"	f	class:DirectoryMemory
recordRequestType	src/mem/ruby/system/MemoryControl.cc	/^MemoryControl::recordRequestType(MemoryControlRequestType request) {$/;"	f	class:MemoryControl
recordRequestType	src/mem/ruby/system/Sequencer.cc	/^Sequencer::recordRequestType(SequencerRequestType requestType) {$/;"	f	class:Sequencer
recordResult	src/cpu/base_dyn_inst.hh	/^    void recordResult(bool f) { instFlags[RecordResult] = f; }$/;"	f	class:BaseDynInst
record_t	src/cpu/pc_event.hh	/^    typedef PCEvent * record_t;$/;"	t	class:PCEventQueue
recover	src/base/remote_gdb.hh	/^    label_t recover;$/;"	m	class:BaseRemoteGDB
recursivelyRemoveLevels	src/mem/ruby/system/SparseMemory.cc	/^SparseMemory::recursivelyRemoveLevels(const Address& address,$/;"	f	class:SparseMemory
recursivelyRemoveTables	src/mem/ruby/system/SparseMemory.cc	/^SparseMemory::recursivelyRemoveTables(SparseMapType* curTable, int curLevel)$/;"	f	class:SparseMemory
recv	src/base/remote_gdb.cc	/^BaseRemoteGDB::recv(char *bp, int maxlen)$/;"	f	class:BaseRemoteGDB
recvAtomic	src/cpu/ozone/front_end_impl.hh	/^FrontEnd<Impl>::IcachePort::recvAtomic(PacketPtr pkt)$/;"	f	class:FrontEnd::IcachePort
recvAtomic	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::DcachePort::recvAtomic(PacketPtr pkt)$/;"	f	class:OzoneLWLSQ::DcachePort
recvAtomic	src/dev/io_device.cc	/^PioPort::recvAtomic(PacketPtr pkt)$/;"	f	class:PioPort
recvAtomic	src/dev/pcidev.cc	/^PciDevice::PciConfigPort::recvAtomic(PacketPtr pkt)$/;"	f	class:PciDevice::PciConfigPort
recvAtomic	src/mem/addr_mapper.cc	/^AddrMapper::recvAtomic(PacketPtr pkt)$/;"	f	class:AddrMapper
recvAtomic	src/mem/addr_mapper.hh	/^        Tick recvAtomic(PacketPtr pkt)$/;"	f	class:AddrMapper::MapperSlavePort
recvAtomic	src/mem/bridge.cc	/^Bridge::BridgeSlavePort::recvAtomic(PacketPtr pkt)$/;"	f	class:Bridge::BridgeSlavePort
recvAtomic	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::CpuSidePort::recvAtomic(PacketPtr pkt)$/;"	f	class:Cache::CpuSidePort
recvAtomic	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::recvAtomic(PacketPtr pkt)$/;"	f	class:Cache
recvAtomic	src/mem/coherent_bus.cc	/^CoherentBus::recvAtomic(PacketPtr pkt, PortID slave_port_id)$/;"	f	class:CoherentBus
recvAtomic	src/mem/coherent_bus.hh	/^        virtual Tick recvAtomic(PacketPtr pkt)$/;"	f	class:CoherentBus::CoherentBusSlavePort
recvAtomic	src/mem/comm_monitor.cc	/^CommMonitor::recvAtomic(PacketPtr pkt)$/;"	f	class:CommMonitor
recvAtomic	src/mem/comm_monitor.hh	/^        Tick recvAtomic(PacketPtr pkt)$/;"	f	class:CommMonitor::MonitorSlavePort
recvAtomic	src/mem/dram_ctrl.cc	/^DRAMCtrl::MemoryPort::recvAtomic(PacketPtr pkt)$/;"	f	class:DRAMCtrl::MemoryPort
recvAtomic	src/mem/dram_ctrl.cc	/^DRAMCtrl::recvAtomic(PacketPtr pkt)$/;"	f	class:DRAMCtrl
recvAtomic	src/mem/dramsim2.cc	/^DRAMSim2::MemoryPort::recvAtomic(PacketPtr pkt)$/;"	f	class:DRAMSim2::MemoryPort
recvAtomic	src/mem/dramsim2.cc	/^DRAMSim2::recvAtomic(PacketPtr pkt)$/;"	f	class:DRAMSim2
recvAtomic	src/mem/mport.cc	/^MessageSlavePort::recvAtomic(PacketPtr pkt)$/;"	f	class:MessageSlavePort
recvAtomic	src/mem/noncoherent_bus.cc	/^NoncoherentBus::recvAtomic(PacketPtr pkt, PortID slave_port_id)$/;"	f	class:NoncoherentBus
recvAtomic	src/mem/noncoherent_bus.hh	/^        virtual Tick recvAtomic(PacketPtr pkt)$/;"	f	class:NoncoherentBus::NoncoherentBusSlavePort
recvAtomic	src/mem/ruby/system/RubyPort.hh	/^        Tick recvAtomic(PacketPtr pkt)$/;"	f	class:RubyPort::MemSlavePort
recvAtomic	src/mem/ruby/system/RubyPort.hh	/^        Tick recvAtomic(PacketPtr pkt)$/;"	f	class:RubyPort::PioSlavePort
recvAtomic	src/mem/simple_mem.cc	/^SimpleMemory::MemoryPort::recvAtomic(PacketPtr pkt)$/;"	f	class:SimpleMemory::MemoryPort
recvAtomic	src/mem/simple_mem.cc	/^SimpleMemory::recvAtomic(PacketPtr pkt)$/;"	f	class:SimpleMemory
recvAtomicSnoop	src/arch/arm/table_walker.hh	/^        virtual Tick recvAtomicSnoop(PacketPtr pkt)$/;"	f	class:ArmISA::TableWalker::SnoopingDmaPort
recvAtomicSnoop	src/arch/x86/pagetable_walker.hh	/^            Tick recvAtomicSnoop(PacketPtr pkt) { return 0; }$/;"	f	class:X86ISA::Walker::WalkerPort
recvAtomicSnoop	src/cpu/simple/atomic.cc	/^AtomicSimpleCPU::AtomicCPUDPort::recvAtomicSnoop(PacketPtr pkt)$/;"	f	class:AtomicSimpleCPU::AtomicCPUDPort
recvAtomicSnoop	src/cpu/simple/atomic.hh	/^        virtual Tick recvAtomicSnoop(PacketPtr pkt) { return 0; }$/;"	f	class:AtomicSimpleCPU::AtomicCPUPort
recvAtomicSnoop	src/cpu/testers/memtest/memtest.hh	/^        virtual Tick recvAtomicSnoop(PacketPtr pkt) { return 0; }$/;"	f	class:MemTest::CpuPort
recvAtomicSnoop	src/mem/addr_mapper.cc	/^AddrMapper::recvAtomicSnoop(PacketPtr pkt)$/;"	f	class:AddrMapper
recvAtomicSnoop	src/mem/addr_mapper.hh	/^        Tick recvAtomicSnoop(PacketPtr pkt)$/;"	f	class:AddrMapper::MapperMasterPort
recvAtomicSnoop	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::MemSidePort::recvAtomicSnoop(PacketPtr pkt)$/;"	f	class:Cache::MemSidePort
recvAtomicSnoop	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::recvAtomicSnoop(PacketPtr pkt)$/;"	f	class:Cache
recvAtomicSnoop	src/mem/coherent_bus.cc	/^CoherentBus::recvAtomicSnoop(PacketPtr pkt, PortID master_port_id)$/;"	f	class:CoherentBus
recvAtomicSnoop	src/mem/coherent_bus.hh	/^        virtual Tick recvAtomicSnoop(PacketPtr pkt)$/;"	f	class:CoherentBus::CoherentBusMasterPort
recvAtomicSnoop	src/mem/comm_monitor.cc	/^CommMonitor::recvAtomicSnoop(PacketPtr pkt)$/;"	f	class:CommMonitor
recvAtomicSnoop	src/mem/comm_monitor.hh	/^        Tick recvAtomicSnoop(PacketPtr pkt)$/;"	f	class:CommMonitor::MonitorMasterPort
recvAtomicSnoop	src/mem/port.hh	/^    virtual Tick recvAtomicSnoop(PacketPtr pkt)$/;"	f	class:MasterPort
recvCommand	src/dev/copy_engine.cc	/^CopyEngine::CopyEngineChannel::recvCommand()$/;"	f	class:CopyEngine::CopyEngineChannel
recvCutText	src/base/vnc/vncserver.cc	/^VncServer::recvCutText()$/;"	f	class:VncServer
recvDone	src/dev/etherint.hh	/^    void recvDone() { peer->sendDone(); }$/;"	f	class:EtherInt
recvFunctional	src/cpu/ozone/front_end_impl.hh	/^FrontEnd<Impl>::IcachePort::recvFunctional(PacketPtr pkt)$/;"	f	class:FrontEnd::IcachePort
recvFunctional	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::DcachePort::recvFunctional(PacketPtr pkt)$/;"	f	class:OzoneLWLSQ::DcachePort
recvFunctional	src/mem/addr_mapper.cc	/^AddrMapper::recvFunctional(PacketPtr pkt)$/;"	f	class:AddrMapper
recvFunctional	src/mem/addr_mapper.hh	/^        void recvFunctional(PacketPtr pkt)$/;"	f	class:AddrMapper::MapperSlavePort
recvFunctional	src/mem/bridge.cc	/^Bridge::BridgeSlavePort::recvFunctional(PacketPtr pkt)$/;"	f	class:Bridge::BridgeSlavePort
recvFunctional	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::CpuSidePort::recvFunctional(PacketPtr pkt)$/;"	f	class:Cache::CpuSidePort
recvFunctional	src/mem/coherent_bus.cc	/^CoherentBus::recvFunctional(PacketPtr pkt, PortID slave_port_id)$/;"	f	class:CoherentBus
recvFunctional	src/mem/coherent_bus.hh	/^        virtual void recvFunctional(PacketPtr pkt)$/;"	f	class:CoherentBus::CoherentBusSlavePort
recvFunctional	src/mem/comm_monitor.cc	/^CommMonitor::recvFunctional(PacketPtr pkt)$/;"	f	class:CommMonitor
recvFunctional	src/mem/comm_monitor.hh	/^        void recvFunctional(PacketPtr pkt)$/;"	f	class:CommMonitor::MonitorSlavePort
recvFunctional	src/mem/dram_ctrl.cc	/^DRAMCtrl::MemoryPort::recvFunctional(PacketPtr pkt)$/;"	f	class:DRAMCtrl::MemoryPort
recvFunctional	src/mem/dram_ctrl.cc	/^DRAMCtrl::recvFunctional(PacketPtr pkt)$/;"	f	class:DRAMCtrl
recvFunctional	src/mem/dramsim2.cc	/^DRAMSim2::MemoryPort::recvFunctional(PacketPtr pkt)$/;"	f	class:DRAMSim2::MemoryPort
recvFunctional	src/mem/dramsim2.cc	/^DRAMSim2::recvFunctional(PacketPtr pkt)$/;"	f	class:DRAMSim2
recvFunctional	src/mem/noncoherent_bus.cc	/^NoncoherentBus::recvFunctional(PacketPtr pkt, PortID slave_port_id)$/;"	f	class:NoncoherentBus
recvFunctional	src/mem/noncoherent_bus.hh	/^        virtual void recvFunctional(PacketPtr pkt)$/;"	f	class:NoncoherentBus::NoncoherentBusSlavePort
recvFunctional	src/mem/ruby/system/RubyPort.cc	/^RubyPort::MemSlavePort::recvFunctional(PacketPtr pkt)$/;"	f	class:RubyPort::MemSlavePort
recvFunctional	src/mem/ruby/system/RubyPort.hh	/^        void recvFunctional(PacketPtr pkt)$/;"	f	class:RubyPort::PioSlavePort
recvFunctional	src/mem/simple_mem.cc	/^SimpleMemory::MemoryPort::recvFunctional(PacketPtr pkt)$/;"	f	class:SimpleMemory::MemoryPort
recvFunctional	src/mem/simple_mem.cc	/^SimpleMemory::recvFunctional(PacketPtr pkt)$/;"	f	class:SimpleMemory
recvFunctional	src/mem/tport.cc	/^SimpleTimingPort::recvFunctional(PacketPtr pkt)$/;"	f	class:SimpleTimingPort
recvFunctionalSnoop	src/arch/arm/table_walker.hh	/^        virtual void recvFunctionalSnoop(PacketPtr pkt)$/;"	f	class:ArmISA::TableWalker::SnoopingDmaPort
recvFunctionalSnoop	src/arch/x86/pagetable_walker.hh	/^            void recvFunctionalSnoop(PacketPtr pkt) { }$/;"	f	class:X86ISA::Walker::WalkerPort
recvFunctionalSnoop	src/cpu/o3/cpu.hh	/^        virtual void recvFunctionalSnoop(PacketPtr pkt)$/;"	f	class:FullO3CPU::DcachePort
recvFunctionalSnoop	src/cpu/simple/atomic.cc	/^AtomicSimpleCPU::AtomicCPUDPort::recvFunctionalSnoop(PacketPtr pkt)$/;"	f	class:AtomicSimpleCPU::AtomicCPUDPort
recvFunctionalSnoop	src/cpu/testers/memtest/memtest.hh	/^        virtual void recvFunctionalSnoop(PacketPtr pkt) { }$/;"	f	class:MemTest::CpuPort
recvFunctionalSnoop	src/mem/addr_mapper.cc	/^AddrMapper::recvFunctionalSnoop(PacketPtr pkt)$/;"	f	class:AddrMapper
recvFunctionalSnoop	src/mem/addr_mapper.hh	/^        void recvFunctionalSnoop(PacketPtr pkt)$/;"	f	class:AddrMapper::MapperMasterPort
recvFunctionalSnoop	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::MemSidePort::recvFunctionalSnoop(PacketPtr pkt)$/;"	f	class:Cache::MemSidePort
recvFunctionalSnoop	src/mem/coherent_bus.cc	/^CoherentBus::recvFunctionalSnoop(PacketPtr pkt, PortID master_port_id)$/;"	f	class:CoherentBus
recvFunctionalSnoop	src/mem/coherent_bus.hh	/^        virtual void recvFunctionalSnoop(PacketPtr pkt)$/;"	f	class:CoherentBus::CoherentBusMasterPort
recvFunctionalSnoop	src/mem/comm_monitor.cc	/^CommMonitor::recvFunctionalSnoop(PacketPtr pkt)$/;"	f	class:CommMonitor
recvFunctionalSnoop	src/mem/comm_monitor.hh	/^        void recvFunctionalSnoop(PacketPtr pkt)$/;"	f	class:CommMonitor::MonitorMasterPort
recvFunctionalSnoop	src/mem/port.hh	/^    virtual void recvFunctionalSnoop(PacketPtr pkt)$/;"	f	class:MasterPort
recvKeyboardInput	src/base/vnc/vncserver.cc	/^VncServer::recvKeyboardInput()$/;"	f	class:VncServer
recvMessage	src/arch/x86/interrupts.cc	/^X86ISA::Interrupts::recvMessage(PacketPtr pkt)$/;"	f	class:X86ISA::Interrupts
recvMessage	src/dev/x86/intdev.hh	/^        Tick recvMessage(PacketPtr pkt)$/;"	f	class:X86ISA::IntDevice::IntSlavePort
recvMessage	src/dev/x86/intdev.hh	/^    recvMessage(PacketPtr pkt)$/;"	f	class:X86ISA::IntDevice
recvPacket	src/arch/x86/pagetable_walker.cc	/^Walker::WalkerState::recvPacket(PacketPtr pkt)$/;"	f	class:X86ISA::Walker::WalkerState
recvPacket	src/dev/etherlink.hh	/^        bool recvPacket(EthPacketPtr packet) { return txlink->transmit(packet); }$/;"	f	class:EtherLink::Interface
recvPacket	src/dev/ethertap.cc	/^EtherTap::recvPacket(EthPacketPtr packet)$/;"	f	class:EtherTap
recvPacket	src/dev/ethertap.hh	/^    virtual bool recvPacket(EthPacketPtr pkt) { return tap->recvPacket(pkt); }$/;"	f	class:EtherTapInt
recvPacket	src/dev/i8254xGBe.hh	/^    virtual bool recvPacket(EthPacketPtr pkt) { return dev->ethRxPkt(pkt); }$/;"	f	class:IGbEInt
recvPacket	src/dev/ns_gige.cc	/^NSGigE::recvPacket(EthPacketPtr packet)$/;"	f	class:NSGigE
recvPacket	src/dev/ns_gige.hh	/^    virtual bool recvPacket(EthPacketPtr pkt) { return dev->recvPacket(pkt); }$/;"	f	class:NSGigEInt
recvPacket	src/dev/sinic.cc	/^Device::recvPacket(EthPacketPtr packet)$/;"	f	class:Sinic::Device
recvPacket	src/dev/sinic.hh	/^    virtual bool recvPacket(EthPacketPtr pkt) { return dev->recvPacket(pkt); }$/;"	f	class:Sinic::Interface
recvPointerInput	src/base/vnc/vncserver.cc	/^VncServer::recvPointerInput()$/;"	f	class:VncServer
recvRangeChange	src/mem/addr_mapper.cc	/^AddrMapper::recvRangeChange()$/;"	f	class:AddrMapper
recvRangeChange	src/mem/addr_mapper.hh	/^        void recvRangeChange()$/;"	f	class:AddrMapper::MapperMasterPort
recvRangeChange	src/mem/bus.cc	/^BaseBus::recvRangeChange(PortID master_port_id)$/;"	f	class:BaseBus
recvRangeChange	src/mem/coherent_bus.hh	/^        virtual void recvRangeChange()$/;"	f	class:CoherentBus::CoherentBusMasterPort
recvRangeChange	src/mem/comm_monitor.cc	/^CommMonitor::recvRangeChange()$/;"	f	class:CommMonitor
recvRangeChange	src/mem/comm_monitor.hh	/^        void recvRangeChange()$/;"	f	class:CommMonitor::MonitorMasterPort
recvRangeChange	src/mem/noncoherent_bus.hh	/^        virtual void recvRangeChange()$/;"	f	class:NoncoherentBus::NoncoherentBusMasterPort
recvRangeChange	src/mem/packet_queue.hh	/^    virtual void recvRangeChange() { }$/;"	f	class:PacketQueue
recvRangeChange	src/mem/port.hh	/^    virtual void recvRangeChange() { }$/;"	f	class:MasterPort
recvRangeChange	src/mem/ruby/system/RubyPort.cc	/^RubyPort::PioMasterPort::recvRangeChange()$/;"	f	class:RubyPort::PioMasterPort
recvRangeChange	src/mem/ruby/system/RubyPort.hh	/^        void recvRangeChange() {}$/;"	f	class:RubyPort::MemMasterPort
recvResponse	src/arch/x86/interrupts.cc	/^X86ISA::Interrupts::recvResponse(PacketPtr pkt)$/;"	f	class:X86ISA::Interrupts
recvResponse	src/dev/x86/intdev.hh	/^        Tick recvResponse(PacketPtr pkt)$/;"	f	class:X86ISA::IntDevice::IntMasterPort
recvResponse	src/dev/x86/intdev.hh	/^    recvResponse(PacketPtr pkt)$/;"	f	class:X86ISA::IntDevice
recvResponse	src/mem/mport.hh	/^    virtual Tick recvResponse(PacketPtr pkt)$/;"	f	class:MessageMasterPort
recvRetry	src/arch/x86/pagetable_walker.cc	/^Walker::WalkerPort::recvRetry()$/;"	f	class:X86ISA::Walker::WalkerPort
recvRetry	src/arch/x86/pagetable_walker.cc	/^Walker::recvRetry()$/;"	f	class:X86ISA::Walker
recvRetry	src/cpu/inorder/cpu.cc	/^InOrderCPU::CachePort::recvRetry()$/;"	f	class:InOrderCPU::CachePort
recvRetry	src/cpu/inorder/resources/cache_unit.cc	/^CacheUnit::recvRetry()$/;"	f	class:CacheUnit
recvRetry	src/cpu/kvm/base.hh	/^        void recvRetry()$/;"	f	class:BaseKvmCPU::KVMCpuPort
recvRetry	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::DcachePort::recvRetry()$/;"	f	class:FullO3CPU::DcachePort
recvRetry	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::IcachePort::recvRetry()$/;"	f	class:FullO3CPU::IcachePort
recvRetry	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::recvRetry()$/;"	f	class:DefaultFetch
recvRetry	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::recvRetry()$/;"	f	class:LSQ
recvRetry	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::recvRetry()$/;"	f	class:LSQUnit
recvRetry	src/cpu/ozone/front_end_impl.hh	/^FrontEnd<Impl>::IcachePort::recvRetry()$/;"	f	class:FrontEnd::IcachePort
recvRetry	src/cpu/ozone/front_end_impl.hh	/^FrontEnd<Impl>::recvRetry()$/;"	f	class:FrontEnd
recvRetry	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::DcachePort::recvRetry()$/;"	f	class:OzoneLWLSQ::DcachePort
recvRetry	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::recvRetry()$/;"	f	class:OzoneLWLSQ
recvRetry	src/cpu/simple/atomic.hh	/^        void recvRetry()$/;"	f	class:AtomicSimpleCPU::AtomicCPUPort
recvRetry	src/cpu/simple/timing.cc	/^TimingSimpleCPU::DcachePort::recvRetry()$/;"	f	class:TimingSimpleCPU::DcachePort
recvRetry	src/cpu/simple/timing.cc	/^TimingSimpleCPU::IcachePort::recvRetry()$/;"	f	class:TimingSimpleCPU::IcachePort
recvRetry	src/cpu/testers/directedtest/RubyDirectedTester.hh	/^        virtual void recvRetry()$/;"	f	class:RubyDirectedTester::CpuPort
recvRetry	src/cpu/testers/memtest/memtest.cc	/^MemTest::CpuPort::recvRetry()$/;"	f	class:MemTest::CpuPort
recvRetry	src/cpu/testers/networktest/networktest.cc	/^NetworkTest::CpuPort::recvRetry()$/;"	f	class:NetworkTest::CpuPort
recvRetry	src/cpu/testers/rubytest/RubyTester.hh	/^        virtual void recvRetry()$/;"	f	class:RubyTester::CpuPort
recvRetry	src/cpu/testers/traffic_gen/traffic_gen.cc	/^TrafficGen::recvRetry()$/;"	f	class:TrafficGen
recvRetry	src/cpu/testers/traffic_gen/traffic_gen.hh	/^        void recvRetry() { trafficGen.recvRetry(); }$/;"	f	class:TrafficGen::TrafficGenPort
recvRetry	src/dev/dma_device.cc	/^DmaPort::recvRetry()$/;"	f	class:DmaPort
recvRetry	src/mem/addr_mapper.hh	/^        void recvRetry()$/;"	f	class:AddrMapper::MapperMasterPort
recvRetry	src/mem/addr_mapper.hh	/^        void recvRetry()$/;"	f	class:AddrMapper::MapperSlavePort
recvRetry	src/mem/bridge.cc	/^Bridge::BridgeMasterPort::recvRetry()$/;"	f	class:Bridge::BridgeMasterPort
recvRetry	src/mem/bridge.cc	/^Bridge::BridgeSlavePort::recvRetry()$/;"	f	class:Bridge::BridgeSlavePort
recvRetry	src/mem/bus.cc	/^BaseBus::Layer<SrcType,DstType>::recvRetry()$/;"	f	class:BaseBus::Layer
recvRetry	src/mem/coherent_bus.cc	/^CoherentBus::recvRetry(PortID master_port_id)$/;"	f	class:CoherentBus
recvRetry	src/mem/coherent_bus.hh	/^        virtual void recvRetry()$/;"	f	class:CoherentBus::CoherentBusMasterPort
recvRetry	src/mem/coherent_bus.hh	/^        virtual void recvRetry()$/;"	f	class:CoherentBus::CoherentBusSlavePort
recvRetry	src/mem/coherent_bus.hh	/^        void recvRetry() { panic("SnoopRespPort should never see retry\\n"); }$/;"	f	class:CoherentBus::SnoopRespPort
recvRetry	src/mem/comm_monitor.hh	/^        void recvRetry()$/;"	f	class:CommMonitor::MonitorMasterPort
recvRetry	src/mem/comm_monitor.hh	/^        void recvRetry()$/;"	f	class:CommMonitor::MonitorSlavePort
recvRetry	src/mem/dramsim2.cc	/^DRAMSim2::MemoryPort::recvRetry()$/;"	f	class:DRAMSim2::MemoryPort
recvRetry	src/mem/dramsim2.cc	/^DRAMSim2::recvRetry()$/;"	f	class:DRAMSim2
recvRetry	src/mem/noncoherent_bus.cc	/^NoncoherentBus::recvRetry(PortID master_port_id)$/;"	f	class:NoncoherentBus
recvRetry	src/mem/noncoherent_bus.hh	/^        virtual void recvRetry()$/;"	f	class:NoncoherentBus::NoncoherentBusMasterPort
recvRetry	src/mem/noncoherent_bus.hh	/^        virtual void recvRetry()$/;"	f	class:NoncoherentBus::NoncoherentBusSlavePort
recvRetry	src/mem/qport.hh	/^    virtual void recvRetry() { queue.retry(); }$/;"	f	class:QueuedMasterPort
recvRetry	src/mem/qport.hh	/^    virtual void recvRetry() { queue.retry(); }$/;"	f	class:QueuedSlavePort
recvRetry	src/mem/simple_mem.cc	/^SimpleMemory::MemoryPort::recvRetry()$/;"	f	class:SimpleMemory::MemoryPort
recvRetry	src/mem/simple_mem.cc	/^SimpleMemory::recvRetry()$/;"	f	class:SimpleMemory
recvRetry	src/sim/system.hh	/^        void recvRetry()$/;"	f	class:System::SystemPort
recvRetryMaster	src/mem/addr_mapper.cc	/^AddrMapper::recvRetryMaster()$/;"	f	class:AddrMapper
recvRetryMaster	src/mem/comm_monitor.cc	/^CommMonitor::recvRetryMaster()$/;"	f	class:CommMonitor
recvRetrySlave	src/mem/addr_mapper.cc	/^AddrMapper::recvRetrySlave()$/;"	f	class:AddrMapper
recvRetrySlave	src/mem/comm_monitor.cc	/^CommMonitor::recvRetrySlave()$/;"	f	class:CommMonitor
recvTime	src/mem/cache/mshr.hh	/^        Tick recvTime;  \/\/!< Time when request was received (for stats)$/;"	m	class:MSHR::Target
recvTiming	src/cpu/ozone/front_end_impl.hh	/^FrontEnd<Impl>::IcachePort::recvTiming(PacketPtr pkt)$/;"	f	class:FrontEnd::IcachePort
recvTiming	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::DcachePort::recvTiming(PacketPtr pkt)$/;"	f	class:OzoneLWLSQ::DcachePort
recvTimingReq	src/mem/addr_mapper.cc	/^AddrMapper::recvTimingReq(PacketPtr pkt)$/;"	f	class:AddrMapper
recvTimingReq	src/mem/addr_mapper.hh	/^        bool recvTimingReq(PacketPtr pkt)$/;"	f	class:AddrMapper::MapperSlavePort
recvTimingReq	src/mem/bridge.cc	/^Bridge::BridgeSlavePort::recvTimingReq(PacketPtr pkt)$/;"	f	class:Bridge::BridgeSlavePort
recvTimingReq	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::CpuSidePort::recvTimingReq(PacketPtr pkt)$/;"	f	class:Cache::CpuSidePort
recvTimingReq	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::recvTimingReq(PacketPtr pkt)$/;"	f	class:Cache
recvTimingReq	src/mem/coherent_bus.cc	/^CoherentBus::recvTimingReq(PacketPtr pkt, PortID slave_port_id)$/;"	f	class:CoherentBus
recvTimingReq	src/mem/coherent_bus.hh	/^        virtual bool recvTimingReq(PacketPtr pkt)$/;"	f	class:CoherentBus::CoherentBusSlavePort
recvTimingReq	src/mem/comm_monitor.cc	/^CommMonitor::recvTimingReq(PacketPtr pkt)$/;"	f	class:CommMonitor
recvTimingReq	src/mem/comm_monitor.hh	/^        bool recvTimingReq(PacketPtr pkt)$/;"	f	class:CommMonitor::MonitorSlavePort
recvTimingReq	src/mem/dram_ctrl.cc	/^DRAMCtrl::MemoryPort::recvTimingReq(PacketPtr pkt)$/;"	f	class:DRAMCtrl::MemoryPort
recvTimingReq	src/mem/dram_ctrl.cc	/^DRAMCtrl::recvTimingReq(PacketPtr pkt)$/;"	f	class:DRAMCtrl
recvTimingReq	src/mem/dramsim2.cc	/^DRAMSim2::MemoryPort::recvTimingReq(PacketPtr pkt)$/;"	f	class:DRAMSim2::MemoryPort
recvTimingReq	src/mem/dramsim2.cc	/^DRAMSim2::recvTimingReq(PacketPtr pkt)$/;"	f	class:DRAMSim2
recvTimingReq	src/mem/noncoherent_bus.cc	/^NoncoherentBus::recvTimingReq(PacketPtr pkt, PortID slave_port_id)$/;"	f	class:NoncoherentBus
recvTimingReq	src/mem/noncoherent_bus.hh	/^        virtual bool recvTimingReq(PacketPtr pkt)$/;"	f	class:NoncoherentBus::NoncoherentBusSlavePort
recvTimingReq	src/mem/ruby/system/RubyPort.cc	/^RubyPort::MemSlavePort::recvTimingReq(PacketPtr pkt)$/;"	f	class:RubyPort::MemSlavePort
recvTimingReq	src/mem/ruby/system/RubyPort.cc	/^RubyPort::PioSlavePort::recvTimingReq(PacketPtr pkt)$/;"	f	class:RubyPort::PioSlavePort
recvTimingReq	src/mem/simple_mem.cc	/^SimpleMemory::MemoryPort::recvTimingReq(PacketPtr pkt)$/;"	f	class:SimpleMemory::MemoryPort
recvTimingReq	src/mem/simple_mem.cc	/^SimpleMemory::recvTimingReq(PacketPtr pkt)$/;"	f	class:SimpleMemory
recvTimingReq	src/mem/tport.cc	/^SimpleTimingPort::recvTimingReq(PacketPtr pkt)$/;"	f	class:SimpleTimingPort
recvTimingResp	src/arch/x86/pagetable_walker.cc	/^Walker::WalkerPort::recvTimingResp(PacketPtr pkt)$/;"	f	class:X86ISA::Walker::WalkerPort
recvTimingResp	src/arch/x86/pagetable_walker.cc	/^Walker::recvTimingResp(PacketPtr pkt)$/;"	f	class:X86ISA::Walker
recvTimingResp	src/cpu/inorder/cpu.cc	/^InOrderCPU::CachePort::recvTimingResp(Packet *pkt)$/;"	f	class:InOrderCPU::CachePort
recvTimingResp	src/cpu/kvm/base.hh	/^        bool recvTimingResp(PacketPtr pkt)$/;"	f	class:BaseKvmCPU::KVMCpuPort
recvTimingResp	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::DcachePort::recvTimingResp(PacketPtr pkt)$/;"	f	class:FullO3CPU::DcachePort
recvTimingResp	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::IcachePort::recvTimingResp(PacketPtr pkt)$/;"	f	class:FullO3CPU::IcachePort
recvTimingResp	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::recvTimingResp(PacketPtr pkt)$/;"	f	class:LSQ
recvTimingResp	src/cpu/simple/atomic.hh	/^        bool recvTimingResp(PacketPtr pkt)$/;"	f	class:AtomicSimpleCPU::AtomicCPUPort
recvTimingResp	src/cpu/simple/timing.cc	/^TimingSimpleCPU::DcachePort::recvTimingResp(PacketPtr pkt)$/;"	f	class:TimingSimpleCPU::DcachePort
recvTimingResp	src/cpu/simple/timing.cc	/^TimingSimpleCPU::IcachePort::recvTimingResp(PacketPtr pkt)$/;"	f	class:TimingSimpleCPU::IcachePort
recvTimingResp	src/cpu/testers/directedtest/RubyDirectedTester.cc	/^RubyDirectedTester::CpuPort::recvTimingResp(PacketPtr pkt)$/;"	f	class:RubyDirectedTester::CpuPort
recvTimingResp	src/cpu/testers/memtest/memtest.cc	/^MemTest::CpuPort::recvTimingResp(PacketPtr pkt)$/;"	f	class:MemTest::CpuPort
recvTimingResp	src/cpu/testers/networktest/networktest.cc	/^NetworkTest::CpuPort::recvTimingResp(PacketPtr pkt)$/;"	f	class:NetworkTest::CpuPort
recvTimingResp	src/cpu/testers/rubytest/RubyTester.cc	/^RubyTester::CpuPort::recvTimingResp(PacketPtr pkt)$/;"	f	class:RubyTester::CpuPort
recvTimingResp	src/cpu/testers/traffic_gen/traffic_gen.cc	/^TrafficGen::TrafficGenPort::recvTimingResp(PacketPtr pkt)$/;"	f	class:TrafficGen::TrafficGenPort
recvTimingResp	src/dev/dma_device.cc	/^DmaPort::recvTimingResp(PacketPtr pkt)$/;"	f	class:DmaPort
recvTimingResp	src/mem/addr_mapper.cc	/^AddrMapper::recvTimingResp(PacketPtr pkt)$/;"	f	class:AddrMapper
recvTimingResp	src/mem/addr_mapper.hh	/^        bool recvTimingResp(PacketPtr pkt)$/;"	f	class:AddrMapper::MapperMasterPort
recvTimingResp	src/mem/bridge.cc	/^Bridge::BridgeMasterPort::recvTimingResp(PacketPtr pkt)$/;"	f	class:Bridge::BridgeMasterPort
recvTimingResp	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::MemSidePort::recvTimingResp(PacketPtr pkt)$/;"	f	class:Cache::MemSidePort
recvTimingResp	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::recvTimingResp(PacketPtr pkt)$/;"	f	class:Cache
recvTimingResp	src/mem/coherent_bus.cc	/^CoherentBus::recvTimingResp(PacketPtr pkt, PortID master_port_id)$/;"	f	class:CoherentBus
recvTimingResp	src/mem/coherent_bus.hh	/^        bool recvTimingResp(PacketPtr pkt)$/;"	f	class:CoherentBus::SnoopRespPort
recvTimingResp	src/mem/coherent_bus.hh	/^        virtual bool recvTimingResp(PacketPtr pkt)$/;"	f	class:CoherentBus::CoherentBusMasterPort
recvTimingResp	src/mem/comm_monitor.cc	/^CommMonitor::recvTimingResp(PacketPtr pkt)$/;"	f	class:CommMonitor
recvTimingResp	src/mem/comm_monitor.hh	/^        bool recvTimingResp(PacketPtr pkt)$/;"	f	class:CommMonitor::MonitorMasterPort
recvTimingResp	src/mem/mport.hh	/^    bool recvTimingResp(PacketPtr pkt) { recvResponse(pkt); return true; }$/;"	f	class:MessageMasterPort
recvTimingResp	src/mem/noncoherent_bus.cc	/^NoncoherentBus::recvTimingResp(PacketPtr pkt, PortID master_port_id)$/;"	f	class:NoncoherentBus
recvTimingResp	src/mem/noncoherent_bus.hh	/^        virtual bool recvTimingResp(PacketPtr pkt)$/;"	f	class:NoncoherentBus::NoncoherentBusMasterPort
recvTimingResp	src/mem/ruby/system/RubyPort.cc	/^RubyPort::PioMasterPort::recvTimingResp(PacketPtr pkt)$/;"	f	class:RubyPort::PioMasterPort
recvTimingResp	src/mem/ruby/system/RubyPort.cc	/^bool RubyPort::MemMasterPort::recvTimingResp(PacketPtr pkt)$/;"	f	class:RubyPort::MemMasterPort
recvTimingResp	src/sim/system.hh	/^        bool recvTimingResp(PacketPtr pkt)$/;"	f	class:System::SystemPort
recvTimingSnoopReq	src/arch/arm/table_walker.hh	/^        virtual void recvTimingSnoopReq(PacketPtr pkt)$/;"	f	class:ArmISA::TableWalker::SnoopingDmaPort
recvTimingSnoopReq	src/arch/x86/pagetable_walker.hh	/^            void recvTimingSnoopReq(PacketPtr pkt) { }$/;"	f	class:X86ISA::Walker::WalkerPort
recvTimingSnoopReq	src/cpu/inorder/cpu.hh	/^        void recvTimingSnoopReq(PacketPtr pkt) { }$/;"	f	class:InOrderCPU::CachePort
recvTimingSnoopReq	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::DcachePort::recvTimingSnoopReq(PacketPtr pkt)$/;"	f	class:FullO3CPU::DcachePort
recvTimingSnoopReq	src/cpu/o3/cpu.hh	/^        virtual void recvTimingSnoopReq(PacketPtr pkt) { }$/;"	f	class:FullO3CPU::IcachePort
recvTimingSnoopReq	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::recvTimingSnoopReq(PacketPtr pkt)$/;"	f	class:LSQ
recvTimingSnoopReq	src/cpu/simple/timing.cc	/^TimingSimpleCPU::DcachePort::recvTimingSnoopReq(PacketPtr pkt)$/;"	f	class:TimingSimpleCPU::DcachePort
recvTimingSnoopReq	src/cpu/simple/timing.hh	/^        virtual void recvTimingSnoopReq(PacketPtr pkt) {}$/;"	f	class:TimingSimpleCPU::TimingCPUPort
recvTimingSnoopReq	src/cpu/testers/memtest/memtest.hh	/^        virtual void recvTimingSnoopReq(PacketPtr pkt) { }$/;"	f	class:MemTest::CpuPort
recvTimingSnoopReq	src/mem/addr_mapper.cc	/^AddrMapper::recvTimingSnoopReq(PacketPtr pkt)$/;"	f	class:AddrMapper
recvTimingSnoopReq	src/mem/addr_mapper.hh	/^        void recvTimingSnoopReq(PacketPtr pkt)$/;"	f	class:AddrMapper::MapperMasterPort
recvTimingSnoopReq	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::MemSidePort::recvTimingSnoopReq(PacketPtr pkt)$/;"	f	class:Cache::MemSidePort
recvTimingSnoopReq	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::recvTimingSnoopReq(PacketPtr pkt)$/;"	f	class:Cache
recvTimingSnoopReq	src/mem/coherent_bus.cc	/^CoherentBus::recvTimingSnoopReq(PacketPtr pkt, PortID master_port_id)$/;"	f	class:CoherentBus
recvTimingSnoopReq	src/mem/coherent_bus.hh	/^        virtual void recvTimingSnoopReq(PacketPtr pkt)$/;"	f	class:CoherentBus::CoherentBusMasterPort
recvTimingSnoopReq	src/mem/comm_monitor.cc	/^CommMonitor::recvTimingSnoopReq(PacketPtr pkt)$/;"	f	class:CommMonitor
recvTimingSnoopReq	src/mem/comm_monitor.hh	/^        void recvTimingSnoopReq(PacketPtr pkt)$/;"	f	class:CommMonitor::MonitorMasterPort
recvTimingSnoopReq	src/mem/port.hh	/^    virtual void recvTimingSnoopReq(PacketPtr pkt)$/;"	f	class:MasterPort
recvTimingSnoopResp	src/mem/addr_mapper.cc	/^AddrMapper::recvTimingSnoopResp(PacketPtr pkt)$/;"	f	class:AddrMapper
recvTimingSnoopResp	src/mem/addr_mapper.hh	/^        bool recvTimingSnoopResp(PacketPtr pkt)$/;"	f	class:AddrMapper::MapperSlavePort
recvTimingSnoopResp	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::CpuSidePort::recvTimingSnoopResp(PacketPtr pkt)$/;"	f	class:Cache::CpuSidePort
recvTimingSnoopResp	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::recvTimingSnoopResp(PacketPtr pkt)$/;"	f	class:Cache
recvTimingSnoopResp	src/mem/coherent_bus.cc	/^CoherentBus::recvTimingSnoopResp(PacketPtr pkt, PortID slave_port_id)$/;"	f	class:CoherentBus
recvTimingSnoopResp	src/mem/coherent_bus.hh	/^        virtual bool recvTimingSnoopResp(PacketPtr pkt)$/;"	f	class:CoherentBus::CoherentBusSlavePort
recvTimingSnoopResp	src/mem/comm_monitor.cc	/^CommMonitor::recvTimingSnoopResp(PacketPtr pkt)$/;"	f	class:CommMonitor
recvTimingSnoopResp	src/mem/comm_monitor.hh	/^        bool recvTimingSnoopResp(PacketPtr pkt)$/;"	f	class:CommMonitor::MonitorSlavePort
recvTimingSnoopResp	src/mem/port.hh	/^    virtual bool recvTimingSnoopResp(PacketPtr pkt)$/;"	f	class:SlavePort
recvfrom	src/kern/tru64/tru64_syscalls.hh	/^        recvfrom = 29,$/;"	e	enum:SystemCalls::__anon102
recvmsg	src/kern/tru64/tru64_syscalls.hh	/^        recvmsg = 27,$/;"	e	enum:SystemCalls::__anon102
recycle	src/mem/ruby/buffers/MessageBuffer.cc	/^MessageBuffer::recycle()$/;"	f	class:MessageBuffer
recycle	src/mem/ruby/system/WireBuffer.cc	/^WireBuffer::recycle()$/;"	f	class:WireBuffer
recycle_latency	src/mem/ruby/slicc_interface/Controller.py	/^    recycle_latency = Param.Cycles(10, "")$/;"	v	class:RubyController
red	src/arch/sparc/miscregs.hh	/^    Bitfield<5> red;$/;"	m	namespace:SparcISA
red	src/base/vnc/convert.hh	/^        Bitfield<23,16> red;$/;"	m	class:VideoConvert
red	src/base/vnc/convert.hh	/^        Bitfield<4,0> red;$/;"	m	class:VideoConvert
red	src/base/vnc/convert.hh	/^        Bitfield<7,0> red;$/;"	m	class:VideoConvert
red_select	src/dev/arm/hdlcd.hh	/^    ColorSelectReg red_select;      \/**< Red color select register *\/$/;"	m	class:HDLcd
redirTable	src/dev/x86/i82094aa.hh	/^    RedirTableEntry redirTable[TableSize];$/;"	m	class:X86ISA::I82094AA
redmax	src/base/vnc/vncinput.hh	/^        uint16_t redmax;$/;"	m	struct:VncInput::PixelFormat
redshift	src/base/vnc/vncinput.hh	/^        uint8_t redshift;$/;"	m	struct:VncInput::PixelFormat
refCount	src/mem/cache/blk.hh	/^    int refCount;$/;"	m	class:CacheBlk
refcount	src/base/remote_gdb.hh	/^        int refcount;$/;"	m	class:BaseRemoteGDB::HardBreakpoint
referenced	src/base/inifile.hh	/^        mutable bool    referenced;     \/\/\/< Has this entry been used?$/;"	m	class:IniFile::Entry
referenced	src/base/inifile.hh	/^        mutable bool    referenced;     \/\/\/< Has this section been used?$/;"	m	class:IniFile::Section
refresh	src/cpu/kvm/perfevent.cc	/^PerfKvmCounter::refresh(int refresh)$/;"	f	class:PerfKvmCounter
refresh	src/sim/vptr.hh	/^    refresh()$/;"	f	class:VPtr
refreshEvent	src/mem/dram_ctrl.hh	/^    EventWrapper<DRAMCtrl, &DRAMCtrl::processRefreshEvent> refreshEvent;$/;"	m	class:DRAMCtrl
refreshNext	src/dev/copy_engine.hh	/^        bool refreshNext;$/;"	m	class:CopyEngine::CopyEngineChannel
refresh_period	src/mem/ruby/system/RubyMemoryControl.py	/^    refresh_period = Param.Cycles(1560, "");$/;"	v	class:RubyMemoryControl
reg	src/arch/x86/emulenv.hh	/^        RegIndex reg;$/;"	m	struct:X86ISA::EmulEnv
reg	src/arch/x86/types.hh	/^        Bitfield<5,3> reg;$/;"	m	namespace:X86ISA
reg0	src/arch/arm/insts/mult.hh	/^    IntRegIndex reg0, reg1, reg2;$/;"	m	class:ArmISA::Mult3
reg1	src/arch/arm/insts/mult.hh	/^    IntRegIndex reg0, reg1, reg2;$/;"	m	class:ArmISA::Mult3
reg2	src/arch/arm/insts/mult.hh	/^    IntRegIndex reg0, reg1, reg2;$/;"	m	class:ArmISA::Mult3
reg3	src/arch/arm/insts/mult.hh	/^    IntRegIndex reg3;$/;"	m	class:ArmISA::Mult4
regData32	src/dev/sinic.hh	/^    uint32_t &regData32(Addr daddr) { return *(uint32_t *)&regData8(daddr); }$/;"	f	class:Sinic::Device
regData64	src/dev/sinic.hh	/^    uint64_t &regData64(Addr daddr) { return *(uint64_t *)&regData8(daddr); }$/;"	f	class:Sinic::Device
regData8	src/dev/sinic.hh	/^    uint8_t  &regData8(Addr daddr) { return *((uint8_t *)&regs + daddr); }$/;"	f	class:Sinic::Device
regDepMap	src/cpu/inorder/resources/decode_unit.hh	/^    RegDepMap *regDepMap[ThePipeline::MaxThreads];$/;"	m	class:DecodeUnit
regDepMap	src/cpu/inorder/resources/use_def.hh	/^    RegDepMap *regDepMap[ThePipeline::MaxThreads];$/;"	m	class:UseDefUnit
regFile	src/cpu/o3/cpu.hh	/^    PhysRegFile regFile;$/;"	m	class:FullO3CPU
regFile	src/cpu/o3/free_list.hh	/^    PhysRegFile *regFile;$/;"	m	class:UnifiedFreeList
regFile	src/cpu/o3/rename_map.hh	/^    PhysRegFile *regFile;$/;"	m	class:UnifiedRenameMap
regForwards	src/cpu/inorder/resources/use_def.hh	/^    Stats::Scalar regForwards;$/;"	m	class:UseDefUnit
regFpFull	src/cpu/ozone/front_end.hh	/^    Stats::Formula regFpFull;$/;"	m	class:FrontEnd
regIdxToClass	src/cpu/reg_class.hh	/^RegClass regIdxToClass(TheISA::RegIndex reg_idx,$/;"	f
regInfo	src/dev/sinicreg.hh	/^regInfo(Addr daddr)$/;"	f	namespace:Sinic
regIntFull	src/cpu/ozone/front_end.hh	/^    Stats::Formula regIntFull;$/;"	m	class:FrontEnd
regLinkStats	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.cc	/^GarnetNetwork_d::regLinkStats()$/;"	f	class:GarnetNetwork_d
regList	src/arch/arm/types.hh	/^        Bitfield<15, 0>  regList;$/;"	m	namespace:ArmISA
regMap	src/cpu/inorder/reg_dep_map.hh	/^    std::vector<DepMap> regMap;$/;"	m	class:RegDepMap
regMode	src/arch/arm/insts/mem.hh	/^    uint32_t regMode;$/;"	m	class:ArmISA::SrsOp
regNames	src/arch/arm/nativetrace.cc	/^static const char *regNames[] = {$/;"	m	namespace:Trace	file:
regPowerStats	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.cc	/^GarnetNetwork_d::regPowerStats()$/;"	f	class:GarnetNetwork_d
regProbeListeners	src/cpu/o3/probe/simple_trace.cc	/^void SimpleTrace::regProbeListeners()$/;"	f	class:SimpleTrace
regProbeListeners	src/sim/sim_object.cc	/^SimObject::regProbeListeners()$/;"	f	class:SimObject
regProbePoints	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::regProbePoints()$/;"	f	class:DefaultCommit
regProbePoints	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::regProbePoints()$/;"	f	class:FullO3CPU
regProbePoints	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::regProbePoints()$/;"	f	class:DefaultFetch
regProbePoints	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::regProbePoints()$/;"	f	class:DefaultIEW
regProbePoints	src/sim/sim_object.cc	/^SimObject::regProbePoints()$/;"	f	class:SimObject
regScoreBoard	src/cpu/o3/scoreboard.hh	/^    std::vector<bool> regScoreBoard;$/;"	m	class:Scoreboard
regScoreboard	src/cpu/o3/inst_queue.hh	/^    std::vector<bool> regScoreboard;$/;"	m	class:InstructionQueue
regSel	src/dev/x86/i82094aa.hh	/^    uint8_t regSel;$/;"	m	class:X86ISA::I82094AA
regStats	src/arch/alpha/kernel_stats.cc	/^Statistics::regStats(const string &_name)$/;"	f	class:AlphaISA::Kernel::Statistics
regStats	src/arch/alpha/tlb.cc	/^TLB::regStats()$/;"	f	class:AlphaISA::TLB
regStats	src/arch/arm/tlb.cc	/^TLB::regStats()$/;"	f	class:TLB
regStats	src/arch/mips/tlb.cc	/^TLB::regStats()$/;"	f	class:TLB
regStats	src/arch/power/tlb.cc	/^TLB::regStats()$/;"	f	class:TLB
regStats	src/cpu/base.cc	/^BaseCPU::regStats()$/;"	f	class:BaseCPU
regStats	src/cpu/checker/thread_context.hh	/^    void regStats(const std::string &name)$/;"	f	class:CheckerThreadContext
regStats	src/cpu/inorder/cpu.cc	/^InOrderCPU::regStats()$/;"	f	class:InOrderCPU
regStats	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::regStats()$/;"	f	class:PipelineStage
regStats	src/cpu/inorder/resource.hh	/^    virtual void regStats() { }$/;"	f	class:Resource
regStats	src/cpu/inorder/resource_pool.9stage.cc	/^ResourcePool::regStats()$/;"	f	class:ResourcePool
regStats	src/cpu/inorder/resource_pool.cc	/^ResourcePool::regStats()$/;"	f	class:ResourcePool
regStats	src/cpu/inorder/resources/agen_unit.cc	/^AGENUnit::regStats()$/;"	f	class:AGENUnit
regStats	src/cpu/inorder/resources/branch_predictor.cc	/^BranchPredictor::regStats()$/;"	f	class:BranchPredictor
regStats	src/cpu/inorder/resources/execution_unit.cc	/^ExecutionUnit::regStats()$/;"	f	class:ExecutionUnit
regStats	src/cpu/inorder/resources/inst_buffer.cc	/^InstBuffer::regStats()$/;"	f	class:InstBuffer
regStats	src/cpu/inorder/resources/mult_div_unit.cc	/^MultDivUnit::regStats()$/;"	f	class:MultDivUnit
regStats	src/cpu/inorder/resources/use_def.cc	/^UseDefUnit::regStats()$/;"	f	class:UseDefUnit
regStats	src/cpu/inorder/thread_context.cc	/^InOrderThreadContext::regStats(const std::string &name)$/;"	f	class:InOrderThreadContext
regStats	src/cpu/kvm/base.cc	/^BaseKvmCPU::regStats()$/;"	f	class:BaseKvmCPU
regStats	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::regStats()$/;"	f	class:DefaultCommit
regStats	src/cpu/o3/cpu.cc	/^BaseO3CPU::regStats()$/;"	f	class:BaseO3CPU
regStats	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::regStats()$/;"	f	class:FullO3CPU
regStats	src/cpu/o3/decode_impl.hh	/^DefaultDecode<Impl>::regStats()$/;"	f	class:DefaultDecode
regStats	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::regStats()$/;"	f	class:DefaultFetch
regStats	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::regStats()$/;"	f	class:DefaultIEW
regStats	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::regStats()$/;"	f	class:InstructionQueue
regStats	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::regStats()$/;"	f	class:LSQ
regStats	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::regStats()$/;"	f	class:LSQUnit
regStats	src/cpu/o3/mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::regStats()$/;"	f	class:MemDepUnit
regStats	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::regStats()$/;"	f	class:DefaultRename
regStats	src/cpu/o3/rob_impl.hh	/^ROB<Impl>::regStats()$/;"	f	class:ROB
regStats	src/cpu/o3/thread_context_impl.hh	/^O3ThreadContext<Impl>::regStats(const std::string &name)$/;"	f	class:O3ThreadContext
regStats	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::InstQueue::regStats()$/;"	f	class:BackEnd::InstQueue
regStats	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::regStats()$/;"	f	class:BackEnd
regStats	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::OzoneTC::regStats(const std::string &name)$/;"	f	class:OzoneCPU::OzoneTC
regStats	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::regStats()$/;"	f	class:OzoneCPU
regStats	src/cpu/ozone/front_end_impl.hh	/^FrontEnd<Impl>::regStats()$/;"	f	class:FrontEnd
regStats	src/cpu/ozone/inorder_back_end.hh	/^    void regStats() { }$/;"	f	class:InorderBackEnd
regStats	src/cpu/ozone/inst_queue_impl.hh	/^InstQueue<Impl>::regStats()$/;"	f	class:InstQueue
regStats	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::regStats()$/;"	f	class:LWBackEnd
regStats	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::regStats()$/;"	f	class:OzoneLWLSQ
regStats	src/cpu/pred/bpred_unit_impl.hh	/^BPredUnit::regStats()$/;"	f	class:BPredUnit
regStats	src/cpu/simple/base.cc	/^BaseSimpleCPU::regStats()$/;"	f	class:BaseSimpleCPU
regStats	src/cpu/simple_thread.cc	/^SimpleThread::regStats(const string &name)$/;"	f	class:SimpleThread
regStats	src/cpu/testers/memtest/memtest.cc	/^MemTest::regStats()$/;"	f	class:MemTest
regStats	src/cpu/testers/traffic_gen/traffic_gen.cc	/^TrafficGen::regStats()$/;"	f	class:TrafficGen
regStats	src/cpu/thread_context.hh	/^    void regStats(const std::string &name) { actualTC->regStats(name); }$/;"	f	class:ProxyThreadContext
regStats	src/dev/copy_engine.cc	/^CopyEngine::regStats()$/;"	f	class:CopyEngine
regStats	src/dev/etherdevice.cc	/^EtherDevice::regStats()$/;"	f	class:EtherDevice
regStats	src/dev/ide_disk.cc	/^IdeDisk::regStats()$/;"	f	class:IdeDisk
regStats	src/dev/sinic.cc	/^Device::regStats()$/;"	f	class:Sinic::Device
regStats	src/kern/kernel_stats.cc	/^Statistics::regStats(const string &_name)$/;"	f	class:Kernel::Statistics
regStats	src/mem/abstract_mem.cc	/^AbstractMemory::regStats()$/;"	f	class:AbstractMemory
regStats	src/mem/bus.cc	/^BaseBus::Layer<SrcType,DstType>::regStats()$/;"	f	class:BaseBus::Layer
regStats	src/mem/bus.cc	/^BaseBus::regStats()$/;"	f	class:BaseBus
regStats	src/mem/cache/base.cc	/^BaseCache::regStats()$/;"	f	class:BaseCache
regStats	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::regStats()$/;"	f	class:Cache
regStats	src/mem/cache/prefetch/base.cc	/^BasePrefetcher::regStats()$/;"	f	class:BasePrefetcher
regStats	src/mem/cache/tags/base.cc	/^BaseTags::regStats()$/;"	f	class:BaseTags
regStats	src/mem/cache/tags/fa_lru.cc	/^FALRU::regStats()$/;"	f	class:FALRU
regStats	src/mem/coherent_bus.cc	/^CoherentBus::regStats()$/;"	f	class:CoherentBus
regStats	src/mem/comm_monitor.cc	/^CommMonitor::regStats()$/;"	f	class:CommMonitor
regStats	src/mem/dram_ctrl.cc	/^DRAMCtrl::regStats()$/;"	f	class:DRAMCtrl
regStats	src/mem/noncoherent_bus.cc	/^NoncoherentBus::regStats()$/;"	f	class:NoncoherentBus
regStats	src/mem/ruby/network/garnet/BaseGarnetNetwork.cc	/^BaseGarnetNetwork::regStats()$/;"	f	class:BaseGarnetNetwork
regStats	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.cc	/^GarnetNetwork_d::regStats()$/;"	f	class:GarnetNetwork_d
regStats	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.cc	/^GarnetNetwork::regStats()$/;"	f	class:GarnetNetwork
regStats	src/mem/ruby/network/simple/SimpleNetwork.cc	/^SimpleNetwork::regStats()$/;"	f	class:SimpleNetwork
regStats	src/mem/ruby/network/simple/Switch.cc	/^Switch::regStats()$/;"	f	class:Switch
regStats	src/mem/ruby/network/simple/Throttle.cc	/^Throttle::regStats(string parent)$/;"	f	class:Throttle
regStats	src/mem/ruby/profiler/AddressProfiler.hh	/^    void regStats(const std::string &name) {}$/;"	f	class:AddressProfiler
regStats	src/mem/ruby/profiler/MemCntrlProfiler.cc	/^MemCntrlProfiler::regStats()$/;"	f	class:MemCntrlProfiler
regStats	src/mem/ruby/profiler/Profiler.cc	/^Profiler::regStats(const std::string &pName)$/;"	f	class:Profiler
regStats	src/mem/ruby/slicc_interface/AbstractController.cc	/^AbstractController::regStats()$/;"	f	class:AbstractController
regStats	src/mem/ruby/structures/Prefetcher.cc	/^Prefetcher::regStats()$/;"	f	class:Prefetcher
regStats	src/mem/ruby/system/CacheMemory.cc	/^CacheMemory::regStats()$/;"	f	class:CacheMemory
regStats	src/mem/ruby/system/DirectoryMemory.cc	/^DirectoryMemory::regStats()$/;"	f	class:DirectoryMemory
regStats	src/mem/ruby/system/MemoryControl.hh	/^    virtual void regStats() {};$/;"	f	class:MemoryControl
regStats	src/mem/ruby/system/RubyMemoryControl.cc	/^RubyMemoryControl::regStats()$/;"	f	class:RubyMemoryControl
regStats	src/mem/ruby/system/Sequencer.cc	/^Sequencer::regStats()$/;"	f	class:Sequencer
regStats	src/mem/ruby/system/SparseMemory.cc	/^SparseMemory::regStats(const string &name)$/;"	f	class:SparseMemory
regStats	src/mem/ruby/system/System.hh	/^    void regStats() { m_profiler->regStats(name()); }$/;"	f	class:RubySystem
regStats	src/sim/clock_domain.cc	/^ClockDomain::regStats()$/;"	f	class:ClockDomain
regStats	src/sim/process.cc	/^Process::regStats()$/;"	f	class:Process
regStats	src/sim/sim_object.cc	/^SimObject::regStats()$/;"	f	class:SimObject
regStats	src/sim/system.cc	/^System::regStats()$/;"	f	class:System
regStats	src/sim/voltage_domain.cc	/^VoltageDomain::regStats()$/;"	f	class:VoltageDomain
regVal	src/arch/x86/isa.hh	/^        MiscReg regVal[NUM_MISCREGS];$/;"	m	class:X86ISA::ISA
regValid	src/dev/sinicreg.hh	/^regValid(Addr daddr)$/;"	f	namespace:Sinic
reg_frame	src/base/loader/coff_sym.h	/^    unsigned reg_frame : 1;     \/* true if register frame procedure *\/$/;"	m	struct:pdr
reg_redir	src/arch/alpha/regredir.cc	/^const int reg_redir[NumIntRegs] = {$/;"	m	namespace:AlphaISA	file:
rega_dv_disabled	src/dev/mc146818.cc	/^MC146818::rega_dv_disabled(const RtcRegA &reg)$/;"	f	class:MC146818
regenerateBlkAddr	src/mem/cache/tags/fa_lru.hh	/^    Addr regenerateBlkAddr(Addr tag, int set) const$/;"	f	class:FALRU
regenerateBlkAddr	src/mem/cache/tags/lru.hh	/^    Addr regenerateBlkAddr(Addr tag, unsigned set) const$/;"	f	class:LRU
registerAbstractController	src/mem/ruby/system/System.cc	/^RubySystem::registerAbstractController(AbstractController* cntrl)$/;"	f	class:RubySystem
registerDumpCallback	src/base/statistics.cc	/^registerDumpCallback(Callback *cb)$/;"	f	namespace:Stats
registerExitCallback	src/sim/core.cc	/^registerExitCallback(Callback *callback)$/;"	f
registerGlobalSym	src/mem/slicc/symbols/SymbolTable.py	/^    def registerGlobalSym(self, ident, symbol):$/;"	m	class:SymbolTable
registerMemController	src/mem/ruby/system/System.cc	/^RubySystem::registerMemController(MemoryControl *mc) {$/;"	f	class:RubySystem
registerNetwork	src/mem/ruby/system/System.cc	/^RubySystem::registerNetwork(Network* network_ptr)$/;"	f	class:RubySystem
registerPciDevice	src/dev/platform.cc	/^Platform::registerPciDevice(uint8_t bus, uint8_t dev, uint8_t func, uint8_t intr)$/;"	f	class:Platform
registerResetCallback	src/base/statistics.cc	/^registerResetCallback(Callback *cb)$/;"	f	namespace:Stats
registerSparseMemory	src/mem/ruby/system/System.cc	/^RubySystem::registerSparseMemory(SparseMemory* s)$/;"	f	class:RubySystem
registerSym	src/mem/slicc/symbols/SymbolTable.py	/^    def registerSym(self, id, sym):$/;"	m	class:SymbolTable
registerThreadContext	src/sim/system.cc	/^System::registerThreadContext(ThreadContext *tc, int assigned)$/;"	f	class:System
registerThreadContexts	src/cpu/base.cc	/^BaseCPU::registerThreadContexts()$/;"	f	class:BaseCPU
registerWithClockDomain	src/sim/clock_domain.hh	/^    void registerWithClockDomain(ClockedObject *c)$/;"	f	class:ClockDomain
registers	src/kern/tru64/tru64.hh	/^        } registers;$/;"	m	struct:Tru64::nxm_thread_attr	typeref:struct:Tru64::nxm_thread_attr::__anon100
registers	src/mem/cache/mshr_queue.hh	/^    std::vector<MSHR> registers;$/;"	m	class:MSHRQueue
regm	src/arch/x86/emulenv.hh	/^        RegIndex regm;$/;"	m	struct:X86ISA::EmulEnv
regmask	src/base/loader/coff_sym.h	/^    coff_uint   regmask;        \/* save register mask *\/$/;"	m	struct:pdr
regoffset	src/base/loader/coff_sym.h	/^    coff_int    regoffset;      \/* save register offset *\/$/;"	m	struct:pdr
regs	src/arch/x86/interrupts.hh	/^    uint32_t regs[NUM_APIC_REGS];$/;"	m	class:X86ISA::Interrupts
regs	src/base/remote_gdb.hh	/^        uint64_t * regs;$/;"	m	class:BaseRemoteGDB::GdbRegCache
regs	src/dev/copy_engine.hh	/^    CopyEngineReg::Regs regs;$/;"	m	class:CopyEngine
regs	src/dev/i8254xGBe.hh	/^    iGbReg::Regs regs;$/;"	m	class:IGbE
regs	src/dev/ns_gige.hh	/^    dp_regs regs;$/;"	m	class:NSGigE
regs	src/dev/sinic.hh	/^    } regs;$/;"	m	class:Sinic::Device	typeref:struct:Sinic::Device::__anon83
regs	src/dev/x86/cmos.hh	/^    uint8_t regs[numRegs];$/;"	m	class:X86ISA::Cmos
regsReady	src/cpu/o3/mem_dep_unit.hh	/^        bool regsReady;$/;"	m	class:MemDepUnit::MemDepEntry
regsReady	src/cpu/o3/mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::regsReady(DynInstPtr &inst)$/;"	f	class:MemDepUnit
regsReset	src/dev/ns_gige.cc	/^NSGigE::regsReset()$/;"	f	class:NSGigE
reinitFromRequest	src/mem/packet.hh	/^    reinitFromRequest()$/;"	f	class:Packet
rejectRequest	src/cpu/inorder/resource.cc	/^Resource::rejectRequest(DynInstPtr inst)$/;"	f	class:Resource
release	src/kern/linux/linux.hh	/^        char release[_SYS_NMLN];        \/\/!< OS release.$/;"	m	struct:Linux::utsname
release	src/kern/operatingsystem.hh	/^        char release[_SYS_NMLN];        \/\/!< OS release.$/;"	m	struct:OperatingSystem::__anon88
release	src/kern/solaris/solaris.hh	/^        char release[_SYS_NMLN];        \/\/!< OS release.$/;"	m	struct:Solaris::utsname
release	src/kern/tru64/tru64.hh	/^        char release[_SYS_NMLN];        \/\/!< OS release.$/;"	m	struct:Tru64::utsname
release	src/mem/simple_mem.cc	/^SimpleMemory::release()$/;"	f	class:SimpleMemory
releaseDate	src/arch/x86/bios/smbios.hh	/^    uint8_t releaseDate;$/;"	m	class:X86ISA::SMBios::BiosInformation
releaseEvent	src/mem/bus.hh	/^        EventWrapper<Layer, &Layer::releaseLayer> releaseEvent;$/;"	m	class:BaseBus::Layer
releaseEvent	src/mem/simple_mem.hh	/^    EventWrapper<SimpleMemory, &SimpleMemory::release> releaseEvent;$/;"	m	class:SimpleMemory
releaseLayer	src/mem/bus.cc	/^BaseBus::Layer<SrcType,DstType>::releaseLayer()$/;"	f	class:BaseBus::Layer
releaseReq	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::releaseReq(ResourceRequest* req)$/;"	f	class:InOrderDynInst
release_date	src/arch/x86/bios/SMBios.py	/^    release_date = Param.String("06\/08\/2008", "release date")$/;"	v	class:X86SMBiosBiosInformation
release_vc	src/mem/ruby/network/garnet/flexible-pipeline/FlexibleConsumer.hh	/^    virtual void release_vc(int out_port, int vc, Cycles release_time) {}$/;"	f	class:FlexibleConsumer
release_vc	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.cc	/^NetworkInterface::release_vc(int out_port, int vc, Cycles release_time)$/;"	f	class:NetworkInterface
release_vc	src/mem/ruby/network/garnet/flexible-pipeline/Router.cc	/^Router::release_vc(int out_port, int vc, Cycles release_time)$/;"	f	class:Router
release_vc_link	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.cc	/^NetworkLink::release_vc_link(int vc, Cycles release_time)$/;"	f	class:NetworkLink
reloadRegMap	src/arch/sparc/isa.cc	/^ISA::reloadRegMap()$/;"	f	class:SparcISA::ISA
remap	src/mem/page_table.cc	/^PageTable::remap(Addr vaddr, int64_t size, Addr new_vaddr)$/;"	f	class:PageTable
remapAddr	src/mem/addr_mapper.cc	/^RangeAddrMapper::remapAddr(Addr addr) const$/;"	f	class:RangeAddrMapper
remap_file_pages	src/kern/linux/linux_syscalls.hh	/^    remap_file_pages = 165,$/;"	e	enum:SystemCalls::__anon87
remappedRanges	src/mem/addr_mapper.hh	/^    std::vector<AddrRange> remappedRanges;$/;"	m	class:RangeAddrMapper
remapped_ranges	src/mem/AddrMapper.py	/^    remapped_ranges = VectorParam.AddrRange($/;"	v	class:RangeAddrMapper
remote	src/dev/x86/i8042.hh	/^        Bitfield<6> remote;$/;"	m	class:X86ISA::PS2Mouse
remoteGDB	src/sim/system.hh	/^    std::vector<BaseRemoteGDB *> remoteGDB;$/;"	m	class:System
remoteIRR	src/arch/x86/interrupts.hh	/^        Bitfield<14> remoteIRR;$/;"	m	class:X86ISA::Interrupts
remoteIRR	src/dev/x86/i82094aa.hh	/^        Bitfield<14> remoteIRR;$/;"	m	class:X86ISA::I82094AA
remote_gdb_base_port	src/sim/debug.cc	/^int remote_gdb_base_port = 7000;$/;"	v
remove	src/base/output.cc	/^OutputDirectory::remove(const string &name, bool recursive)$/;"	f	class:OutputDirectory
remove	src/base/pollevent.cc	/^PollQueue::remove(PollEvent *event)$/;"	f	class:PollQueue
remove	src/base/trie.hh	/^    remove(Handle handle)$/;"	f	class:Trie
remove	src/base/trie.hh	/^    remove(Key key)$/;"	f	class:Trie
remove	src/cpu/inorder/reg_dep_map.cc	/^RegDepMap::remove(DynInstPtr inst)$/;"	f	class:RegDepMap
remove	src/cpu/inorder/reg_dep_map.cc	/^RegDepMap::remove(uint8_t reg_type, RegIndex idx, DynInstPtr inst)$/;"	f	class:RegDepMap
remove	src/cpu/inorder/resources/inst_buffer.cc	/^InstBuffer::remove(DynInstPtr inst)$/;"	f	class:InstBuffer
remove	src/cpu/o3/cpu.hh	/^        bool remove;$/;"	m	class:FullO3CPU::DeallocateContextEvent
remove	src/cpu/o3/dep_graph.hh	/^DependencyGraph<DynInstPtr>::remove(PhysRegIndex idx,$/;"	f	class:DependencyGraph
remove	src/cpu/pc_event.cc	/^PCEventQueue::remove(PCEvent *event)$/;"	f	class:PCEventQueue
remove	src/cpu/pc_event.hh	/^    bool remove;$/;"	m	class:BreakPCEvent
remove	src/cpu/pc_event.hh	/^PCEvent::remove()$/;"	f	class:PCEvent
remove	src/dev/pktfifo.hh	/^    void remove(iterator i)$/;"	f	class:PacketFifo
remove	src/mem/ruby/common/NetDest.cc	/^NetDest::remove(MachineID oldElement)$/;"	f	class:NetDest
remove	src/mem/ruby/common/Set.hh	/^    remove(NodeID index)$/;"	f	class:Set
remove	src/mem/ruby/network/orion/ConfigFile.cc	/^void ConfigFile::remove( const string& key )$/;"	f	class:ConfigFile
remove	src/mem/ruby/system/SparseMemory.cc	/^SparseMemory::remove(const Address& address)$/;"	f	class:SparseMemory
remove	src/sim/eventq.cc	/^EventQueue::remove(Event *event)$/;"	f	class:EventQueue
removeAddrDependency	src/cpu/inorder/resources/cache_unit.cc	/^CacheUnit::removeAddrDependency(DynInstPtr inst)$/;"	f	class:CacheUnit
removeAddrDependency	src/cpu/inorder/resources/fetch_unit.cc	/^FetchUnit::removeAddrDependency(DynInstPtr inst)$/;"	f	class:FetchUnit
removeDcacheMiss	src/cpu/ozone/lw_back_end.hh	/^    void removeDcacheMiss(DynInstPtr &inst)$/;"	f	class:LWBackEnd
removeEntries	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::removeEntries(ThreadID tid)$/;"	f	class:LSQ
removeFromHistory	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::removeFromHistory(InstSeqNum inst_seq_num, ThreadID tid)$/;"	f	class:DefaultRename
removeFront	src/cpu/inorder/reg_dep_map.cc	/^RegDepMap::removeFront(uint8_t reg_type, RegIndex idx, DynInstPtr inst)$/;"	f	class:RegDepMap
removeFrontInst	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::removeFrontInst(DynInstPtr &inst)$/;"	f	class:FullO3CPU
removeHardBreak	src/base/remote_gdb.cc	/^BaseRemoteGDB::removeHardBreak(Addr addr, size_t len)$/;"	f	class:BaseRemoteGDB
removeInLSQ	src/cpu/base_dyn_inst.hh	/^    void removeInLSQ() { status.reset(LsqEntry); }$/;"	f	class:BaseDynInst
removeInst	src/cpu/inorder/cpu.cc	/^InOrderCPU::removeInst(DynInstPtr inst)$/;"	f	class:InOrderCPU
removeInstsNotInROB	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::removeInstsNotInROB(ThreadID tid)$/;"	f	class:FullO3CPU
removeInstsThisCycle	src/cpu/inorder/cpu.hh	/^    bool removeInstsThisCycle;$/;"	m	class:InOrderCPU
removeInstsThisCycle	src/cpu/o3/cpu.hh	/^    bool removeInstsThisCycle;$/;"	m	class:FullO3CPU
removeInstsUntil	src/cpu/inorder/cpu.cc	/^InOrderCPU::removeInstsUntil(const InstSeqNum &seq_num, ThreadID tid)$/;"	f	class:InOrderCPU
removeInstsUntil	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::removeInstsUntil(const InstSeqNum &seq_num, ThreadID tid)$/;"	f	class:FullO3CPU
removeItem	src/sim/eventq.cc	/^Event::removeItem(Event *event, Event *top)$/;"	f	class:Event
removeList	src/cpu/inorder/cpu.hh	/^    std::queue<ListIt> removeList;$/;"	m	class:InOrderCPU
removeList	src/cpu/o3/cpu.hh	/^    std::queue<ListIt> removeList;$/;"	m	class:FullO3CPU
removeListener	src/sim/probe/probe.cc	/^ProbeManager::removeListener(std::string pointName, ProbeListener &listener)$/;"	f	class:ProbeManager
removeListener	src/sim/probe/probe.hh	/^    void removeListener(ProbeListener *l)$/;"	f	class:ProbePointArg
removeNetDest	src/mem/ruby/common/NetDest.cc	/^NetDest::removeNetDest(const NetDest& netDest)$/;"	f	class:NetDest
removePipelineStalls	src/cpu/inorder/cpu.cc	/^InOrderCPU::removePipelineStalls(ThreadID tid)$/;"	f	class:InOrderCPU
removeRequest	src/mem/ruby/system/Sequencer.cc	/^Sequencer::removeRequest(SequencerRequest* srequest)$/;"	f	class:Sequencer
removeSet	src/mem/ruby/common/Set.cc	/^Set::removeSet(const Set& set)$/;"	f	class:Set
removeSoftBreak	src/base/remote_gdb.cc	/^BaseRemoteGDB::removeSoftBreak(Addr addr, size_t len)$/;"	f	class:BaseRemoteGDB
removeStalls	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::removeStalls(ThreadID tid)$/;"	f	class:PipelineStage
removeStore	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::removeStore(int store_idx)$/;"	f	class:OzoneLWLSQ
removeThread	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::removeThread(ThreadID tid)$/;"	f	class:FullO3CPU
removeWaitingMemOp	src/cpu/ozone/lw_back_end.hh	/^    void removeWaitingMemOp(DynInstPtr &inst)$/;"	f	class:LWBackEnd
removexattr	src/kern/linux/linux_syscalls.hh	/^    removexattr = 166,$/;"	e	enum:SystemCalls::__anon87
rename	src/cpu/o3/cpu.hh	/^    typename CPUPolicy::Rename rename;$/;"	m	class:FullO3CPU
rename	src/cpu/o3/decode.hh	/^        bool rename;$/;"	m	struct:DefaultDecode::Stalls
rename	src/cpu/o3/fetch.hh	/^        bool rename;$/;"	m	struct:DefaultFetch::Stalls
rename	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::rename(bool &status_change, ThreadID tid)$/;"	f	class:DefaultRename
rename	src/cpu/o3/rename_map.cc	/^SimpleRenameMap::rename(RegIndex arch_reg)$/;"	f	class:SimpleRenameMap
rename	src/cpu/o3/rename_map.cc	/^UnifiedRenameMap::rename(RegIndex arch_reg)$/;"	f	class:UnifiedRenameMap
rename	src/kern/linux/linux_syscalls.hh	/^    rename = 167,$/;"	e	enum:SystemCalls::__anon87
rename	src/kern/tru64/tru64_syscalls.hh	/^        rename = 128,$/;"	e	enum:SystemCalls::__anon102
renameBlock	src/cpu/o3/comm.hh	/^    bool renameBlock[Impl::MaxThreads];$/;"	m	struct:TimeBufStruct
renameBlockCycles	src/cpu/o3/rename.hh	/^    Stats::Scalar renameBlockCycles;$/;"	m	class:DefaultRename
renameCC	src/cpu/o3/rename_map.hh	/^    RenameInfo renameCC(RegIndex rel_arch_reg)$/;"	f	class:UnifiedRenameMap
renameComm	src/cpu/o3/comm.hh	/^    struct renameComm {$/;"	s	struct:TimeBufStruct
renameCommittedMaps	src/cpu/o3/rename.hh	/^    Stats::Scalar renameCommittedMaps;$/;"	m	class:DefaultRename
renameDestReg	src/cpu/base_dyn_inst.hh	/^    void renameDestReg(int idx,$/;"	f	class:BaseDynInst
renameDestReg	src/cpu/inorder/inorder_dyn_inst.hh	/^    void renameDestReg(int idx,$/;"	f	class:InOrderDynInst
renameDestRegs	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::renameDestRegs(DynInstPtr &inst, ThreadID tid)$/;"	f	class:DefaultRename
renameFloat	src/cpu/o3/rename_map.hh	/^    RenameInfo renameFloat(RegIndex rel_arch_reg)$/;"	f	class:UnifiedRenameMap
renameFullRegistersEvents	src/cpu/o3/rename.hh	/^    Stats::Scalar renameFullRegistersEvents;$/;"	m	class:DefaultRename
renameFunc	src/sim/syscall_emul.cc	/^renameFunc(SyscallDesc *desc, int num, LiveProcess *p, ThreadContext *tc)$/;"	f
renameIQFullEvents	src/cpu/o3/rename.hh	/^    Stats::Scalar renameIQFullEvents;$/;"	m	class:DefaultRename
renameIdleCycles	src/cpu/o3/rename.hh	/^    Stats::Scalar renameIdleCycles;$/;"	m	class:DefaultRename
renameInfo	src/cpu/o3/comm.hh	/^    renameComm renameInfo[Impl::MaxThreads];$/;"	m	struct:TimeBufStruct
renameInst	src/cpu/ozone/front_end_impl.hh	/^FrontEnd<Impl>::renameInst(DynInstPtr &inst)$/;"	f	class:FrontEnd
renameInsts	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::renameInsts(ThreadID tid)$/;"	f	class:DefaultRename
renameInt	src/cpu/o3/rename_map.hh	/^    RenameInfo renameInt(RegIndex rel_arch_reg)$/;"	f	class:UnifiedRenameMap
renameLSQFullEvents	src/cpu/o3/rename.hh	/^    Stats::Scalar renameLSQFullEvents;$/;"	m	class:DefaultRename
renameMap	src/cpu/o3/commit.hh	/^    RenameMap *renameMap[Impl::MaxThreads];$/;"	m	class:DefaultCommit
renameMap	src/cpu/o3/cpu.hh	/^    typename CPUPolicy::RenameMap renameMap[Impl::MaxThreads];$/;"	m	class:FullO3CPU
renameMap	src/cpu/o3/rename.hh	/^    RenameMap *renameMap[Impl::MaxThreads];$/;"	m	class:DefaultRename
renameMisc	src/cpu/o3/rename_map.hh	/^    RenameInfo renameMisc(RegIndex rel_arch_reg)$/;"	f	class:UnifiedRenameMap
renameQueue	src/cpu/o3/commit.hh	/^    TimeBuffer<RenameStruct> *renameQueue;$/;"	m	class:DefaultCommit
renameQueue	src/cpu/o3/cpu.hh	/^    TimeBuffer<RenameStruct> renameQueue;$/;"	m	class:FullO3CPU
renameQueue	src/cpu/o3/iew.hh	/^    TimeBuffer<RenameStruct> *renameQueue;$/;"	m	class:DefaultIEW
renameQueue	src/cpu/o3/rename.hh	/^    TimeBuffer<RenameStruct> *renameQueue;$/;"	m	class:DefaultRename
renameROBFullEvents	src/cpu/o3/rename.hh	/^    Stats::Scalar renameROBFullEvents;$/;"	m	class:DefaultRename
renameRenameLookups	src/cpu/o3/rename.hh	/^    Stats::Scalar renameRenameLookups;$/;"	m	class:DefaultRename
renameRenamedInsts	src/cpu/o3/rename.hh	/^    Stats::Scalar renameRenamedInsts;$/;"	m	class:DefaultRename
renameRenamedOperands	src/cpu/o3/rename.hh	/^    Stats::Scalar renameRenamedOperands;$/;"	m	class:DefaultRename
renameRunCycles	src/cpu/o3/rename.hh	/^    Stats::Scalar renameRunCycles;$/;"	m	class:DefaultRename
renameSerializeStallCycles	src/cpu/o3/rename.hh	/^    Stats::Scalar renameSerializeStallCycles;$/;"	m	class:DefaultRename
renameSkidInsts	src/cpu/o3/rename.hh	/^    Stats::Scalar renameSkidInsts;$/;"	m	class:DefaultRename
renameSquashCycles	src/cpu/o3/rename.hh	/^    Stats::Scalar renameSquashCycles;$/;"	m	class:DefaultRename
renameSquashedInsts	src/cpu/o3/rename.hh	/^    Stats::Scalar renameSquashedInsts;$/;"	m	class:DefaultRename
renameSrcReg	src/cpu/base_dyn_inst.hh	/^    void renameSrcReg(int idx, PhysRegIndex renamed_src)$/;"	f	class:BaseDynInst
renameSrcReg	src/cpu/inorder/inorder_dyn_inst.hh	/^    void renameSrcReg(int idx, PhysRegIndex renamed_src)$/;"	f	class:InOrderDynInst
renameSrcRegs	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::renameSrcRegs(DynInstPtr &inst, ThreadID tid)$/;"	f	class:DefaultRename
renameStatus	src/cpu/o3/rename.hh	/^    ThreadStatus renameStatus[Impl::MaxThreads];$/;"	m	class:DefaultRename
renameTable	src/cpu/ozone/back_end.hh	/^    RenameTable<Impl> renameTable;$/;"	m	class:BackEnd
renameTable	src/cpu/ozone/front_end.hh	/^    RenameTable<Impl> renameTable;$/;"	m	class:FrontEnd
renameTable	src/cpu/ozone/inorder_back_end.hh	/^    RenameTable<Impl> renameTable;$/;"	m	class:InorderBackEnd
renameTable	src/cpu/ozone/lw_back_end.hh	/^    RenameTable<Impl> renameTable;$/;"	m	class:LWBackEnd
renameTable	src/cpu/ozone/thread_state.hh	/^    RenameTable<Impl> renameTable;$/;"	m	struct:OzoneThreadState
renameTick	src/cpu/o3/dyn_inst.hh	/^    int32_t renameTick;  \/\/ instruction enters rename phase$/;"	m	class:BaseO3DynInst
renameToDecodeDelay	src/cpu/o3/O3CPU.py	/^    renameToDecodeDelay = Param.Cycles(1, "Rename to decode delay")$/;"	v	class:DerivO3CPU
renameToDecodeDelay	src/cpu/o3/decode.hh	/^    Cycles renameToDecodeDelay;$/;"	m	class:DefaultDecode
renameToDecodeDelay	src/cpu/ozone/OzoneCPU.py	/^    renameToDecodeDelay = Param.Unsigned("Rename to decode delay")$/;"	v	class:DerivOzoneCPU
renameToDecodeDelay	src/cpu/ozone/SimpleOzoneCPU.py	/^    renameToDecodeDelay = Param.Unsigned("Rename to decode delay")$/;"	v	class:SimpleOzoneCPU
renameToDecodeDelay	src/cpu/ozone/simple_params.hh	/^    unsigned renameToDecodeDelay;$/;"	m	class:SimpleParams
renameToFetchDelay	src/cpu/o3/O3CPU.py	/^    renameToFetchDelay = Param.Cycles(1 ,"Rename to fetch delay")$/;"	v	class:DerivO3CPU
renameToFetchDelay	src/cpu/o3/fetch.hh	/^    Cycles renameToFetchDelay;$/;"	m	class:DefaultFetch
renameToFetchDelay	src/cpu/ozone/OzoneCPU.py	/^    renameToFetchDelay = Param.Unsigned("Rename to fetch delay")$/;"	v	class:DerivOzoneCPU
renameToFetchDelay	src/cpu/ozone/SimpleOzoneCPU.py	/^    renameToFetchDelay = Param.Unsigned("Rename to fetch delay")$/;"	v	class:SimpleOzoneCPU
renameToFetchDelay	src/cpu/ozone/simple_params.hh	/^    unsigned renameToFetchDelay;$/;"	m	class:SimpleParams
renameToIEWDelay	src/cpu/o3/O3CPU.py	/^    renameToIEWDelay = Param.Cycles(2, "Rename to "$/;"	v	class:DerivO3CPU
renameToIEWDelay	src/cpu/o3/iew.hh	/^    Cycles renameToIEWDelay;$/;"	m	class:DefaultIEW
renameToIEWDelay	src/cpu/ozone/OzoneCPU.py	/^    renameToIEWDelay = Param.Unsigned("Rename to "$/;"	v	class:DerivOzoneCPU
renameToIEWDelay	src/cpu/ozone/SimpleOzoneCPU.py	/^    renameToIEWDelay = Param.Unsigned("Rename to "$/;"	v	class:SimpleOzoneCPU
renameToIEWDelay	src/cpu/ozone/simple_params.hh	/^    unsigned renameToIEWDelay;$/;"	m	class:SimpleParams
renameToROBDelay	src/cpu/o3/O3CPU.py	/^    renameToROBDelay = Param.Cycles(1, "Rename to reorder buffer delay")$/;"	v	class:DerivO3CPU
renameToROBDelay	src/cpu/o3/commit.hh	/^    Cycles renameToROBDelay;$/;"	m	class:DefaultCommit
renameToROBDelay	src/cpu/ozone/OzoneCPU.py	/^    renameToROBDelay = Param.Unsigned("Rename to reorder buffer delay")$/;"	v	class:DerivOzoneCPU
renameToROBDelay	src/cpu/ozone/SimpleOzoneCPU.py	/^    renameToROBDelay = Param.Unsigned("Rename to reorder buffer delay")$/;"	v	class:SimpleOzoneCPU
renameToROBDelay	src/cpu/ozone/simple_params.hh	/^    unsigned renameToROBDelay;$/;"	m	class:SimpleParams
renameUnblock	src/cpu/o3/comm.hh	/^    bool renameUnblock[Impl::MaxThreads];$/;"	m	struct:TimeBufStruct
renameUnblockCycles	src/cpu/o3/rename.hh	/^    Stats::Scalar renameUnblockCycles;$/;"	m	class:DefaultRename
renameUndoneMaps	src/cpu/o3/rename.hh	/^    Stats::Scalar renameUndoneMaps;$/;"	m	class:DefaultRename
renameWidth	src/cpu/o3/O3CPU.py	/^    renameWidth = Param.Unsigned(8, "Rename width")$/;"	v	class:DerivO3CPU
renameWidth	src/cpu/o3/commit.hh	/^    unsigned renameWidth;$/;"	m	class:DefaultCommit
renameWidth	src/cpu/o3/rename.hh	/^    unsigned renameWidth;$/;"	m	class:DefaultRename
renameWidth	src/cpu/ozone/OzoneCPU.py	/^    renameWidth = Param.Unsigned("Rename width")$/;"	v	class:DerivOzoneCPU
renameWidth	src/cpu/ozone/SimpleOzoneCPU.py	/^    renameWidth = Param.Unsigned("Rename width")$/;"	v	class:SimpleOzoneCPU
renameWidth	src/cpu/ozone/simple_params.hh	/^    unsigned renameWidth;$/;"	m	class:SimpleParams
renamedDestRegIdx	src/cpu/base_dyn_inst.hh	/^    PhysRegIndex renamedDestRegIdx(int idx) const$/;"	f	class:BaseDynInst
renamedDestRegIdx	src/cpu/inorder/inorder_dyn_inst.hh	/^    PhysRegIndex renamedDestRegIdx(int idx) const$/;"	f	class:InOrderDynInst
renamedSerializing	src/cpu/o3/rename.hh	/^    Stats::Scalar renamedSerializing;$/;"	m	class:DefaultRename
renamedSrcRegIdx	src/cpu/base_dyn_inst.hh	/^    PhysRegIndex renamedSrcRegIdx(int idx) const$/;"	f	class:BaseDynInst
renamedSrcRegIdx	src/cpu/inorder/inorder_dyn_inst.hh	/^    PhysRegIndex renamedSrcRegIdx(int idx) const$/;"	f	class:InOrderDynInst
renamedTempSerializing	src/cpu/o3/rename.hh	/^    Stats::Scalar renamedTempSerializing;$/;"	m	class:DefaultRename
renderPixel	src/dev/arm/hdlcd.cc	/^HDLcd::renderPixel()$/;"	f	class:HDLcd
renderPixelEvent	src/dev/arm/hdlcd.hh	/^    EventWrapper<HDLcd, &HDLcd::renderPixel> renderPixelEvent;$/;"	m	class:HDLcd
reorderQueue	src/mem/dram_ctrl.cc	/^DRAMCtrl::reorderQueue(std::deque<DRAMPacket*>& queue)$/;"	f	class:DRAMCtrl
rep	src/arch/x86/types.hh	/^        Bitfield<6> rep;$/;"	m	namespace:X86ISA
repeat	src/sim/global_event.hh	/^    Tick repeat;$/;"	m	class:GlobalSyncEvent
repeat	src/sim/sim_events.hh	/^    Tick repeat;$/;"	m	class:GlobalSimLoopExitEvent
repeat	src/sim/sim_events.hh	/^    Tick repeat;$/;"	m	class:LocalSimLoopExitEvent
repeat	src/sim/stat_control.cc	/^    Tick repeat;$/;"	m	class:Stats::StatEvent	file:
repeatEvent	src/cpu/base.hh	/^    void repeatEvent(bool repeat) { _repeatEvent = repeat; }$/;"	f	class:CPUProgressEvent
replace	src/arch/isa_parser.py	/^        def replace(matchobj):$/;"	f	function:ISAParser.read_and_flatten
replaceBits	src/base/bitfield.hh	/^replaceBits(T& val, int bit, B bit_val)$/;"	f
replaceBits	src/base/bitfield.hh	/^replaceBits(T& val, int first, int last, B bit_val)$/;"	f
replaceHead	src/sim/eventq.cc	/^EventQueue::replaceHead(Event* s)$/;"	f	class:EventQueue
replaceThreadContext	src/arch/null/remote_gdb.hh	/^    void replaceThreadContext(ThreadContext *tc) {}$/;"	f	class:BaseRemoteGDB
replaceThreadContext	src/base/remote_gdb.hh	/^    void replaceThreadContext(ThreadContext *tc) { context = tc; }$/;"	f	class:BaseRemoteGDB
replaceThreadContext	src/cpu/cpuevent.cc	/^CpuEvent::replaceThreadContext(ThreadContext *oldTc, ThreadContext *newTc)$/;"	f	class:CpuEvent
replaceThreadContext	src/sim/system.cc	/^System::replaceThreadContext(ThreadContext *tc, int context_id)$/;"	f	class:System
replaceUpgrade	src/mem/cache/mshr.cc	/^replaceUpgrade(PacketPtr pkt)$/;"	f	file:
replaceUpgrades	src/mem/cache/mshr.cc	/^MSHR::TargetList::replaceUpgrades()$/;"	f	class:MSHR::TargetList
replace_include	src/arch/isa_parser.py	/^    def replace_include(self, matchobj, dirname):$/;"	m	class:ISAParser
replacement_policy	src/mem/ruby/system/Cache.py	/^    replacement_policy = Param.String("PSEUDO_LRU", "");$/;"	v	class:RubyCache
replacements	src/mem/cache/tags/base.hh	/^    Stats::Vector replacements;$/;"	m	class:BaseTags
replay	src/cpu/o3/mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::replay(DynInstPtr &inst)$/;"	f	class:MemDepUnit
replayList	src/cpu/ozone/back_end.hh	/^        InstList replayList;$/;"	m	class:BackEnd::InstQueue
replayList	src/cpu/ozone/lw_back_end.hh	/^    std::list<DynInstPtr> replayList;$/;"	m	class:LWBackEnd
replayMemInst	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::replayMemInst(DynInstPtr &inst)$/;"	f	class:DefaultIEW
replayMemInst	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::replayMemInst(DynInstPtr &replay_inst)$/;"	f	class:InstructionQueue
replayMemInst	src/cpu/ozone/back_end.hh	/^    void replayMemInst(DynInstPtr &inst)$/;"	f	class:BackEnd
replayMemInst	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::InstQueue::replayMemInst(DynInstPtr &inst)$/;"	f	class:BackEnd::InstQueue
replayMemInst	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::replayMemInst(DynInstPtr &inst)$/;"	f	class:LWBackEnd
replicate	src/arch/arm/insts/macromem.hh	/^    bool replicate;$/;"	m	class:ArmISA::MicroNeonMixLaneOp64
replicate	src/arch/arm/insts/macromem.hh	/^    bool wb, replicate;$/;"	m	class:ArmISA::VldSingleOp64
replicate	src/arch/arm/insts/macromem.hh	/^    bool wb, replicate;$/;"	m	class:ArmISA::VstSingleOp64
repne	src/arch/x86/types.hh	/^        Bitfield<7> repne;$/;"	m	namespace:X86ISA
req	src/arch/arm/stage2_lookup.hh	/^    Request                 req;$/;"	m	class:ArmISA::Stage2LookUp
req	src/arch/arm/stage2_mmu.hh	/^        Request   req;$/;"	m	class:ArmISA::Stage2MMU::Stage2Translation
req	src/arch/arm/table_walker.hh	/^        RequestPtr req;$/;"	m	class:ArmISA::TableWalker::WalkerState
req	src/arch/x86/pagetable_walker.hh	/^            RequestPtr req;$/;"	m	class:X86ISA::Walker::WalkerState
req	src/cpu/inorder/inorder_dyn_inst.hh	/^    Request *req;$/;"	m	class:InOrderDynInst
req	src/cpu/o3/fetch.hh	/^        RequestPtr req;$/;"	m	class:DefaultFetch::FinishTranslationEvent
req	src/cpu/o3/lsq_unit.hh	/^        RequestPtr req;$/;"	m	struct:LSQUnit::SQEntry
req	src/cpu/ozone/lsq_unit.hh	/^        MemReqPtr req;$/;"	m	struct:OzoneLSQ::SQEntry
req	src/cpu/ozone/lw_lsq.hh	/^        RequestPtr req;$/;"	m	struct:OzoneLWLSQ::SQEntry
req	src/mem/packet.hh	/^    RequestPtr req;$/;"	m	class:Packet
reqData	src/cpu/inorder/resources/cache_unit.hh	/^    PacketDataPtr reqData;$/;"	m	class:CacheReqPacket
reqData	src/cpu/inorder/resources/cache_unit.hh	/^    PacketDataPtr reqData;$/;"	m	class:CacheRequest
reqFlags	src/arch/alpha/faults.hh	/^    Request::Flags reqFlags;$/;"	m	class:AlphaISA::DtbFault
reqID	src/cpu/inorder/resource.hh	/^    int reqID;$/;"	m	class:ResourceRequest
reqIPI	src/dev/alpha/tsunami_cchip.cc	/^TsunamiCChip::reqIPI(uint64_t ipreq)$/;"	f	class:TsunamiCChip
reqIPI	src/dev/mips/malta_cchip.cc	/^MaltaCChip::reqIPI(uint64_t ipreq)$/;"	f	class:MaltaCChip
reqLayers	src/mem/coherent_bus.hh	/^    std::vector<ReqLayer*> reqLayers;$/;"	m	class:CoherentBus
reqLayers	src/mem/noncoherent_bus.hh	/^    std::vector<ReqLayer*> reqLayers;$/;"	m	class:NoncoherentBus
reqList	src/cpu/inorder/inorder_dyn_inst.hh	/^    std::list<ResourceRequest*> reqList;$/;"	m	class:InOrderDynInst
reqQueueFull	src/mem/bridge.cc	/^Bridge::BridgeMasterPort::reqQueueFull() const$/;"	f	class:Bridge::BridgeMasterPort
reqQueueLimit	src/mem/bridge.hh	/^        const unsigned int reqQueueLimit;$/;"	m	class:Bridge::BridgeMasterPort
reqToVerify	src/cpu/base_dyn_inst.hh	/^    RequestPtr reqToVerify;$/;"	m	class:BaseDynInst
req_size	src/mem/Bridge.py	/^    req_size = Param.Unsigned(16, "The number of requests to buffer")$/;"	v	class:Bridge
reqs	src/cpu/inorder/resource.hh	/^    std::vector<ResReqPtr> reqs;$/;"	m	class:Resource
request	src/cpu/inorder/resource.cc	/^Resource::request(DynInstPtr inst)$/;"	f	class:Resource
request	src/cpu/inorder/resource_pool.9stage.cc	/^ResourcePool::request(int res_idx, DynInstPtr inst)$/;"	f	class:ResourcePool
request	src/cpu/inorder/resource_pool.cc	/^ResourcePool::request(int res_idx, DynInstPtr inst)$/;"	f	class:ResourcePool
requestAgain	src/cpu/inorder/resource.cc	/^Resource::requestAgain(DynInstPtr inst, bool &do_request)$/;"	f	class:Resource
requestAgain	src/cpu/inorder/resources/cache_unit.cc	/^CacheUnit::requestAgain(DynInstPtr inst, bool &service_request)$/;"	f	class:CacheUnit
requestAgain	src/cpu/inorder/resources/mult_div_unit.cc	/^MultDivUnit::requestAgain(DynInstPtr inst, bool &service_request)$/;"	f	class:MultDivUnit
requestBus	src/mem/cache/base.hh	/^        void requestBus(RequestCause cause, Tick time)$/;"	f	class:BaseCache::CacheMasterPort
requestCompleted	src/mem/ruby/structures/Prefetcher.hh	/^        std::bitset<MAX_PF_INFLIGHT> requestCompleted;$/;"	m	class:PrefetchEntry
requestFbUpdate	src/base/vnc/vncserver.cc	/^VncServer::requestFbUpdate()$/;"	f	class:VncServer
requestInterrupt	src/arch/x86/interrupts.cc	/^X86ISA::Interrupts::requestInterrupt(uint8_t vector,$/;"	f	class:X86ISA::Interrupts
requestInterrupt	src/dev/x86/i8259.cc	/^X86ISA::I8259::requestInterrupt(int line)$/;"	f	class:X86ISA::I8259
requestIssued	src/mem/ruby/structures/Prefetcher.hh	/^        std::bitset<MAX_PF_INFLIGHT> requestIssued;$/;"	m	class:PrefetchEntry
requestMemSideBus	src/mem/cache/base.hh	/^    void requestMemSideBus(RequestCause cause, Tick time)$/;"	f	class:BaseCache
request_vc	src/mem/ruby/network/garnet/flexible-pipeline/FlexibleConsumer.hh	/^    virtual void request_vc(int vc, int in_port, NetDest destination,$/;"	f	class:FlexibleConsumer
request_vc	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.cc	/^NetworkInterface::request_vc(int in_vc, int in_port, NetDest destination,$/;"	f	class:NetworkInterface
request_vc	src/mem/ruby/network/garnet/flexible-pipeline/Router.cc	/^Router::request_vc(int in_vc, int in_port, NetDest destination,$/;"	f	class:Router
request_vc_link	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.cc	/^NetworkLink::request_vc_link(int vc, NetDest destination, Cycles request_time)$/;"	f	class:NetworkLink
requests_to_complete	src/cpu/testers/directedtest/RubyDirectedTester.py	/^    requests_to_complete = Param.Int("checks to complete")$/;"	v	class:RubyDirectedTester
require_caches	src/cpu/BaseCPU.py	/^    def require_caches(cls):$/;"	f
require_caches	src/cpu/inorder/InOrderCPU.py	/^    def require_caches(cls):$/;"	m	class:InOrderCPU
require_caches	src/cpu/kvm/BaseKvmCPU.py	/^    def require_caches(cls):$/;"	f
require_caches	src/cpu/o3/O3CPU.py	/^    def require_caches(cls):$/;"	m	class:DerivO3CPU
rer	src/dev/pcireg.h	/^        Bitfield<15>    rer;$/;"	m	struct:PXCAP
res	src/cpu/inorder/inorder_dyn_inst.hh	/^        InstValue res;$/;"	m	struct:InOrderDynInst::InstResult
res	src/cpu/inorder/resource.hh	/^    Resource *res;$/;"	m	class:ResourceRequest
res	src/cpu/translation.hh	/^    uint64_t *res;$/;"	m	class:WholeTranslationState
res0_23_22	src/arch/arm/miscregs.hh	/^        Bitfield<23, 22> res0_23_22;$/;"	m	namespace:ArmISA
res1	src/arch/mips/linux/hwrpb.hh	/^        uint64_ta res1, res2;$/;"	m	struct:Linux::pcb_struct
res1_13_12_el2	src/arch/arm/miscregs.hh	/^        Bitfield<13, 12> res1_13_12_el2;$/;"	m	namespace:ArmISA
res1_9_0_el2	src/arch/arm/miscregs.hh	/^        Bitfield<9, 0> res1_9_0_el2;$/;"	m	namespace:ArmISA
res2	src/arch/mips/linux/hwrpb.hh	/^        uint64_ta res1, res2;$/;"	m	struct:Linux::pcb_struct
resIdx	src/cpu/inorder/resource.hh	/^    int resIdx;$/;"	m	class:ResourceRequest
resName	src/cpu/inorder/resource.hh	/^    std::string resName;$/;"	m	class:Resource
resNum	src/cpu/inorder/pipeline_traits.5stage.hh	/^        int resNum;$/;"	m	struct:ThePipeline::ScheduleEntry
resNum	src/cpu/inorder/pipeline_traits.9stage.hh	/^        int resNum;$/;"	m	struct:ThePipeline::ScheduleEntry
resNum	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^        int resNum;$/;"	m	struct:ThePipeline::ScheduleEntry
resNum	src/cpu/inorder/resource_sked.hh	/^    int resNum;$/;"	m	class:ScheduleEntry
resPool	src/cpu/inorder/cpu.hh	/^    ResourcePool *resPool;$/;"	m	class:InOrderCPU
resPool	src/cpu/inorder/resource_pool.hh	/^        ResourcePool *resPool;$/;"	m	class:ResourcePool::ResPoolEvent
resReqCount	src/cpu/inorder/cpu.hh	/^    unsigned resReqCount;$/;"	m	class:InOrderCPU
resReqID	src/cpu/inorder/resource.cc	/^int ResourceRequest::resReqID = 0;$/;"	m	class:ResourceRequest	file:
resReqID	src/cpu/inorder/resource.hh	/^    static int resReqID;$/;"	m	class:ResourceRequest
res_error_head	src/arch/sparc/isa.hh	/^    uint64_t res_error_head;$/;"	m	class:SparcISA::ISA
res_error_tail	src/arch/sparc/isa.hh	/^    uint64_t res_error_tail;$/;"	m	class:SparcISA::ISA
reschedule	src/cpu/o3/mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::reschedule(DynInstPtr &inst)$/;"	f	class:MemDepUnit
reschedule	src/sim/eventq.hh	/^    reschedule(Event &event, Tick when, bool always = false)$/;"	f	class:EventManager
reschedule	src/sim/eventq.hh	/^    reschedule(Event *event, Tick when, bool always = false)$/;"	f	class:EventManager
reschedule	src/sim/eventq_impl.hh	/^EventQueue::reschedule(Event *event, Tick when, bool always)$/;"	f	class:EventQueue
reschedule	src/sim/global_event.cc	/^void BaseGlobalEvent::reschedule(Tick when)$/;"	f	class:BaseGlobalEvent
rescheduleMemInst	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::rescheduleMemInst(DynInstPtr &inst)$/;"	f	class:DefaultIEW
rescheduleMemInst	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::rescheduleMemInst(DynInstPtr &resched_inst)$/;"	f	class:InstructionQueue
rescheduleMemInst	src/cpu/ozone/back_end.hh	/^    void rescheduleMemInst(DynInstPtr &inst)$/;"	f	class:BackEnd
rescheduleMemInst	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::InstQueue::rescheduleMemInst(DynInstPtr &inst)$/;"	f	class:BackEnd::InstQueue
rescheduleMemInst	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::rescheduleMemInst(DynInstPtr &inst)$/;"	f	class:LWBackEnd
reserve	src/dev/pktfifo.hh	/^    reserve(unsigned len = 0)$/;"	f	class:PacketFifo
reserved	src/arch/isa_parser.py	/^    reserved = ($/;"	v	class:ISAParser
reserved	src/arch/micro_asm.py	/^reserved = ('DEF', 'MACROOP', 'ROM', 'EXTERN')$/;"	v
reserved	src/arch/x86/faults.hh	/^            Bitfield<3> reserved;$/;"	m	class:X86ISA::PageFault
reserved	src/base/inet.hh	/^    uint32_t reserved;$/;"	m	struct:Net::ip6_opt_routing_type2
reserved	src/base/loader/coff_sym.h	/^    unsigned reserved : 13;     \/* reserved: must be zero *\/$/;"	m	struct:pdr
reserved	src/base/loader/coff_sym.h	/^    unsigned reserved : 1;      \/* reserved *\/$/;"	m	struct:ecoff_sym
reserved	src/base/loader/coff_sym.h	/^    unsigned reserved : 22;  \/* reserved for future use *\/$/;"	m	struct:ecoff_fdr
reserved	src/base/loader/coff_sym.h	/^    unsigned reserved:29;       \/* reserved for future use *\/$/;"	m	struct:ecoff_extsym
reserved	src/cpu/kvm/x86_cpu.cc	/^    uint64_t reserved[12];$/;"	m	struct:FXSave	file:
reserved	src/dev/arm/timer_cpulocal.hh	/^            Bitfield<7,3> reserved;$/;"	m	class:CpuLocalTimer::Timer
reserved	src/dev/arm/timer_cpulocal.hh	/^            Bitfield<7,4> reserved;$/;"	m	class:CpuLocalTimer::Timer
reserved	src/dev/pcireg.h	/^        Bitfield<1,0>   reserved;$/;"	m	struct:MSICAP
reserved	src/dev/pcireg.h	/^        Bitfield<13,11> reserved;$/;"	m	struct:MSIXCAP
reserved	src/dev/pcireg.h	/^        Bitfield<15,14> reserved;$/;"	m	struct:PXCAP
reserved	src/dev/pcireg.h	/^        Bitfield<15,6>  reserved;$/;"	m	struct:PXCAP
reserved	src/dev/pcireg.h	/^        Bitfield<15,9>  reserved;$/;"	m	struct:MSICAP
reserved	src/dev/pcireg.h	/^        Bitfield<23,22> reserved;$/;"	m	struct:PXCAP
reserved	src/dev/pcireg.h	/^        Bitfield<4>     reserved;$/;"	m	struct:PMCAP
reserved	src/dev/pcireg.h	/^        uint8_t reserved[7];$/;"	m	struct:PCIConfig::__anon80
reserved	src/dev/pktfifo.hh	/^    unsigned reserved() const { return _reserved; }$/;"	f	class:PacketFifo
reserved	src/kern/tru64/tru64.hh	/^        uint64_t reserved;      \/\/!< reserved$/;"	m	struct:Tru64::vm_stack
reserved	src/mem/slicc/parser.py	/^    reserved = {$/;"	v	class:SLICC
reserved0	src/dev/ide_ctrl.hh	/^            uint8_t reserved0;$/;"	m	struct:IdeController::Channel::BMIRegs
reserved0	src/dev/pcireg.h	/^        Bitfield<11,10> reserved0;$/;"	m	struct:PXCAP
reserved0	src/dev/pcireg.h	/^        Bitfield<14,12> reserved0;$/;"	m	struct:PXCAP
reserved0	src/dev/pcireg.h	/^        Bitfield<17,14> reserved0;$/;"	m	struct:PXCAP
reserved0	src/dev/pcireg.h	/^        Bitfield<2>     reserved0;$/;"	m	struct:PMCAP
reserved0	src/dev/pcireg.h	/^        Bitfield<2>     reserved0;$/;"	m	struct:PXCAP
reserved0	src/dev/pcireg.h	/^        Bitfield<9,5>   reserved0;$/;"	m	struct:PXCAP
reserved1	src/base/bitmap.hh	/^        uint16_t reserved1;$/;"	m	struct:Bitmap::Header
reserved1	src/dev/copy_engine_defs.hh	/^    uint64_t reserved1;$/;"	m	struct:CopyEngineReg::DmaDesc
reserved1	src/dev/ide_ctrl.hh	/^            uint8_t reserved1;$/;"	m	struct:IdeController::Channel::BMIRegs
reserved1	src/dev/pcireg.h	/^        Bitfield<12,11> reserved1;$/;"	m	struct:PXCAP
reserved1	src/dev/pcireg.h	/^        Bitfield<15,13> reserved1;$/;"	m	struct:PXCAP
reserved1	src/dev/pcireg.h	/^        Bitfield<17,16> reserved1;$/;"	m	struct:PXCAP
reserved1	src/dev/pcireg.h	/^        Bitfield<31,24> reserved1;$/;"	m	struct:PXCAP
reserved1	src/dev/pcireg.h	/^        Bitfield<5,4>   reserved1;$/;"	m	struct:PXCAP
reserved1	src/dev/pcireg.h	/^        Bitfield<7,4>   reserved1;$/;"	m	struct:PMCAP
reserved1	src/kern/tru64/tru64.hh	/^        int             reserved1;      \/\/!< reserved1$/;"	m	struct:Tru64::ushared_state
reserved2	src/base/bitmap.hh	/^        uint16_t reserved2;$/;"	m	struct:Bitmap::Header
reserved2	src/base/loader/coff_sym.h	/^    coff_uint   reserved2;$/;"	m	struct:ecoff_fdr
reserved2	src/dev/copy_engine_defs.hh	/^    uint64_t reserved2;$/;"	m	struct:CopyEngineReg::DmaDesc
reserved2	src/dev/pcireg.h	/^        Bitfield<15,10> reserved2;$/;"	m	struct:PXCAP
reserved2	src/dev/pcireg.h	/^        Bitfield<31,15> reserved2;$/;"	m	struct:PXCAP
reserved2	src/dev/pcireg.h	/^        Bitfield<31,29> reserved2;$/;"	m	struct:PXCAP
reserved2	src/kern/tru64/tru64.hh	/^        int64_t            reserved2;   \/\/!< reserved2$/;"	m	struct:Tru64::ushared_state
reserved_15_12	src/dev/arm/hdlcd.hh	/^        Bitfield<15,12> reserved_15_12;$/;"	m	class:HDLcd
reserved_20_13	src/arch/arm/miscregs.hh	/^      Bitfield<20,13> reserved_20_13;$/;"	m	namespace:ArmISA
reserved_22	src/arch/arm/miscregs.hh	/^      Bitfield<22>    reserved_22;$/;"	m	namespace:ArmISA
reserved_2_0	src/dev/arm/hdlcd.hh	/^        Bitfield<2,0>  reserved_2_0;$/;"	m	class:HDLcd
reserved_30_26	src/arch/arm/miscregs.hh	/^      Bitfield<30,26> reserved_30_26;$/;"	m	namespace:ArmISA
reserved_30_5	src/dev/arm/hdlcd.hh	/^        Bitfield<30,5> reserved_30_5;$/;"	m	class:HDLcd
reserved_31_1	src/dev/arm/hdlcd.hh	/^        Bitfield<31,1> reserved_31_1;$/;"	m	class:HDLcd
reserved_31_12	src/dev/arm/hdlcd.hh	/^        Bitfield<31,12> reserved_31_12;$/;"	m	class:HDLcd
reserved_31_24	src/dev/arm/hdlcd.hh	/^        Bitfield<31,24> reserved_31_24;$/;"	m	class:HDLcd
reserved_31_5	src/dev/arm/hdlcd.hh	/^        Bitfield<31,5> reserved_31_5;$/;"	m	class:HDLcd
reserved_4_3	src/arch/arm/miscregs.hh	/^      Bitfield<4,3>   reserved_4_3;$/;"	m	namespace:ArmISA
reserved_7_5	src/dev/arm/hdlcd.hh	/^        Bitfield<7,5>   reserved_7_5;$/;"	m	class:HDLcd
reserved_map	src/arch/isa_parser.py	/^    reserved_map = { }$/;"	v	class:ISAParser
reserved_map	src/arch/micro_asm.py	/^reserved_map = { }$/;"	v
reset	src/arch/alpha/decoder.hh	/^    reset()$/;"	f	class:AlphaISA::Decoder
reset	src/arch/arm/decoder.hh	/^    void reset()$/;"	f	class:ArmISA::Decoder
reset	src/arch/mips/decoder.hh	/^    reset()$/;"	f	class:MipsISA::Decoder
reset	src/arch/power/decoder.hh	/^    reset()$/;"	f	class:PowerISA::Decoder
reset	src/arch/sparc/decoder.hh	/^    reset()$/;"	f	class:SparcISA::Decoder
reset	src/arch/sparc/system.hh	/^    ObjectFile *reset;$/;"	m	class:SparcSystem
reset	src/arch/x86/decoder.hh	/^    void reset()$/;"	f	class:X86ISA::Decoder
reset	src/base/statistics.cc	/^Formula::reset()$/;"	f	class:Stats::Formula
reset	src/base/statistics.hh	/^    reset()$/;"	f	class:Stats::DataWrapVec
reset	src/base/statistics.hh	/^    reset()$/;"	f	class:Stats::DistBase
reset	src/base/statistics.hh	/^    reset()$/;"	f	class:Stats::SparseHistBase
reset	src/base/statistics.hh	/^    reset()$/;"	f	class:Stats::Vector2dBase
reset	src/base/statistics.hh	/^    reset(Info *info)$/;"	f	class:Stats::AvgSampleStor
reset	src/base/statistics.hh	/^    reset(Info *info)$/;"	f	class:Stats::AvgStor
reset	src/base/statistics.hh	/^    reset(Info *info)$/;"	f	class:Stats::DistStor
reset	src/base/statistics.hh	/^    reset(Info *info)$/;"	f	class:Stats::HistStor
reset	src/base/statistics.hh	/^    reset(Info *info)$/;"	f	class:Stats::SampleStor
reset	src/base/statistics.hh	/^    reset(Info *info)$/;"	f	class:Stats::SparseHistStor
reset	src/base/statistics.hh	/^    void reset() { data()->reset(this->info()); }$/;"	f	class:Stats::ScalarBase
reset	src/base/statistics.hh	/^    void reset() { s.reset(); }$/;"	f	class:Stats::InfoProxy
reset	src/base/statistics.hh	/^    void reset() { }$/;"	f	class:Stats::DistProxy
reset	src/base/statistics.hh	/^    void reset() { }$/;"	f	class:Stats::InfoAccess
reset	src/base/statistics.hh	/^    void reset() { }$/;"	f	class:Stats::ProxyInfo
reset	src/base/statistics.hh	/^    void reset() { }$/;"	f	class:Stats::ValueBase
reset	src/base/statistics.hh	/^    void reset(Info *info) { data = Counter(); }$/;"	f	class:Stats::StatStor
reset	src/cpu/activity.cc	/^ActivityRecorder::reset()$/;"	f	class:ActivityRecorder
reset	src/cpu/o3/dep_graph.hh	/^DependencyGraph<DynInstPtr>::reset()$/;"	f	class:DependencyGraph
reset	src/cpu/pred/2bit_local.cc	/^LocalBP::reset()$/;"	f	class:LocalBP
reset	src/cpu/pred/btb.cc	/^DefaultBTB::reset()$/;"	f	class:DefaultBTB
reset	src/cpu/pred/ras.cc	/^ReturnAddrStack::reset()$/;"	f	class:ReturnAddrStack
reset	src/cpu/pred/sat_counter.hh	/^    void reset() { counter = initialVal; }$/;"	f	class:SatCounter
reset	src/cpu/profile.hh	/^    Callback *reset;$/;"	m	class:FunctionProfile
reset	src/cpu/testers/traffic_gen/generators.cc	/^TraceGen::InputStream::reset()$/;"	f	class:TraceGen::InputStream
reset	src/dev/i8254xGBe.cc	/^IGbE::DescCache<T>::reset()$/;"	f	class:IGbE::DescCache
reset	src/dev/ide_disk.cc	/^IdeDisk::reset(int id)$/;"	f	class:IdeDisk
reset	src/dev/sinic.cc	/^Device::reset()$/;"	f	class:Sinic::Device
reset	src/mem/ruby/system/RubyMemoryControl.cc	/^RubyMemoryControl::reset()$/;"	f	class:RubyMemoryControl
reset	src/proto/protoio.cc	/^ProtoInputStream::reset()$/;"	f	class:ProtoInputStream
reset	src/python/m5/stats/__init__.py	/^def reset():$/;"	f
reset	src/sim/stat_control.cc	/^    bool reset;$/;"	m	class:Stats::StatEvent	file:
reset	src/unittest/unittest.cc	/^reset()$/;"	f	namespace:UnitTest
resetAddr64	src/arch/arm/system.cc	/^ArmSystem::resetAddr64(ThreadContext *tc)$/;"	f	class:ArmSystem
resetAddr64	src/arch/arm/system.hh	/^    Addr resetAddr64() const { return _resetAddr64; }$/;"	f	class:ArmSystem
resetClock	src/sim/clocked_object.hh	/^    void resetClock() const$/;"	f	class:ClockedObject
resetEntries	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::resetEntries()$/;"	f	class:DefaultIEW
resetEntries	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::resetEntries()$/;"	f	class:InstructionQueue
resetEntries	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::resetEntries()$/;"	f	class:LSQ
resetEntries	src/cpu/o3/rob_impl.hh	/^ROB<Impl>::resetEntries()$/;"	f	class:ROB
resetFlags	src/mem/cache/mshr.hh	/^        void resetFlags() { needsExclusive = hasUpgrade = false; }$/;"	f	class:MSHR::TargetList
resetInstCount	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::resetInstCount()$/;"	f	class:InOrderDynInst
resetQueue	src/base/statistics.cc	/^CallbackQueue resetQueue;$/;"	m	namespace:Stats	file:
resetStage	src/cpu/o3/decode_impl.hh	/^DefaultDecode<Impl>::resetStage()$/;"	f	class:DefaultDecode
resetStage	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::resetStage()$/;"	f	class:DefaultFetch
resetStage	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::resetStage()$/;"	f	class:DefaultRename
resetState	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::resetState()$/;"	f	class:InstructionQueue
resetState	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::resetState()$/;"	f	class:LSQUnit
resetState	src/cpu/o3/rob_impl.hh	/^ROB<Impl>::resetState()$/;"	f	class:ROB
resetStats	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::resetStats()$/;"	f	class:OzoneCPU
resetStats	src/cpu/simple/base.cc	/^BaseSimpleCPU::resetStats()$/;"	f	class:BaseSimpleCPU
resetStats	src/dev/sinic.cc	/^Device::resetStats()$/;"	f	class:Sinic::Device
resetStats	src/mem/ruby/network/simple/Switch.cc	/^Switch::resetStats()$/;"	f	class:Switch
resetStats	src/mem/ruby/slicc_interface/AbstractController.cc	/^AbstractController::resetStats()$/;"	f	class:AbstractController
resetStats	src/mem/ruby/system/Sequencer.cc	/^void Sequencer::resetStats()$/;"	f	class:Sequencer
resetStats	src/mem/ruby/system/System.cc	/^RubySystem::resetStats()$/;"	f	class:RubySystem
resetStats	src/sim/sim_object.cc	/^SimObject::resetStats()$/;"	f	class:SimObject
resetSymtab	src/arch/sparc/system.hh	/^    SymbolTable *resetSymtab;$/;"	m	class:SparcSystem
reset_addr	src/arch/sparc/SparcSystem.py	/^    reset_addr = Param.Addr(_rom_base, "Address to load ROM at")$/;"	v	class:SparcSystem
reset_addr_64	src/arch/arm/ArmSystem.py	/^    reset_addr_64 = Param.UInt64(0x0,$/;"	v	class:ArmSystem
reset_bin	src/arch/sparc/SparcSystem.py	/^    reset_bin = Param.String("file that contains the reset code")$/;"	v	class:SparcSystem
resetstats	src/sim/pseudo_inst.cc	/^resetstats(ThreadContext *tc, Tick delay, Tick period)$/;"	f	namespace:PseudoInst
resize	src/cpu/o3/dep_graph.hh	/^DependencyGraph<DynInstPtr>::resize(int num_entries)$/;"	f	class:DependencyGraph
resize	src/mem/ruby/buffers/MessageBuffer.hh	/^    void resize(unsigned int size) { m_max_size = size; }$/;"	f	class:MessageBuffer
resize	src/mem/ruby/common/NetDest.cc	/^NetDest::resize()$/;"	f	class:NetDest
resize	src/mem/ruby/common/SubBlock.hh	/^    void resize(int size) {  m_data.resize(size); }$/;"	f	class:SubBlock
resize	src/mem/ruby/system/MemoryVector.hh	/^MemoryVector::resize(uint64 size)$/;"	f	class:MemoryVector
resizeEntries	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::resizeEntries(unsigned size, ThreadID tid)$/;"	f	class:LSQ
resizeLQ	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::resizeLQ(unsigned size)$/;"	f	class:LSQUnit
resizeLQ	src/cpu/ozone/lsq_unit_impl.hh	/^OzoneLSQ<Impl>::resizeLQ(unsigned size)$/;"	f	class:OzoneLSQ
resizeLQ	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::resizeLQ(unsigned size)$/;"	f	class:OzoneLWLSQ
resizeSQ	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::resizeSQ(unsigned size)$/;"	f	class:LSQUnit
resizeSQ	src/cpu/ozone/lsq_unit_impl.hh	/^OzoneLSQ<Impl>::resizeSQ(unsigned size)$/;"	f	class:OzoneLSQ
resizeSQ	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::resizeSQ(unsigned size)$/;"	f	class:OzoneLWLSQ
resolution	src/cpu/kvm/timer.hh	/^    Tick resolution() {$/;"	f	class:BaseKvmTimer
resolution	src/dev/x86/i8042.hh	/^    uint8_t resolution;$/;"	m	class:X86ISA::PS2Mouse
resolve	src/base/output.cc	/^OutputDirectory::resolve(const string &name) const$/;"	f	class:OutputDirectory
resolveSimObject	src/python/m5/SimObject.py	/^def resolveSimObject(name):$/;"	f
resolveSimObject	src/python/swig/pyobject.cc	/^resolveSimObject(const string &name)$/;"	f
resource	src/cpu/inorder/resource.hh	/^    Resource *resource;$/;"	m	class:ResourceEvent
resourceEvent	src/cpu/inorder/resource.hh	/^    ResourceEvent *resourceEvent;$/;"	m	class:Resource
resourceStalls	src/mem/ruby/system/Cache.py	/^    resourceStalls = Param.Bool(False, "stall if there is a resource failure")$/;"	v	class:RubyCache
resources	src/cpu/inorder/pipeline_stage.hh	/^        std::vector<ResReqPtr> resources;$/;"	m	struct:PipelineStage::Stalls
resources	src/cpu/inorder/resource_pool.hh	/^    std::vector<Resource *> resources;$/;"	m	class:ResourcePool
respLayers	src/mem/coherent_bus.hh	/^    std::vector<RespLayer*> respLayers;$/;"	m	class:CoherentBus
respLayers	src/mem/noncoherent_bus.hh	/^    std::vector<RespLayer*> respLayers;$/;"	m	class:NoncoherentBus
respQueue	src/mem/dram_ctrl.hh	/^    std::deque<DRAMPacket*> respQueue;$/;"	m	class:DRAMCtrl
respQueueFull	src/mem/bridge.cc	/^Bridge::BridgeSlavePort::respQueueFull() const$/;"	f	class:Bridge::BridgeSlavePort
respQueueLimit	src/mem/bridge.hh	/^        unsigned int respQueueLimit;$/;"	m	class:Bridge::BridgeSlavePort
resp_size	src/mem/Bridge.py	/^    resp_size = Param.Unsigned(16, "The number of responses to buffer")$/;"	v	class:Bridge
respondEvent	src/mem/dram_ctrl.hh	/^    EventWrapper<DRAMCtrl, &DRAMCtrl::processRespondEvent> respondEvent;$/;"	m	class:DRAMCtrl
response	src/mem/packet.hh	/^        const Command response;$/;"	m	struct:MemCmd::CommandInfo
responseCommand	src/mem/packet.hh	/^    responseCommand() const$/;"	f	class:MemCmd
responseLatency	src/mem/cache/base.hh	/^    const Cycles responseLatency;$/;"	m	class:BaseCache
responseQueue	src/mem/dramsim2.hh	/^    std::deque<PacketPtr> responseQueue;$/;"	m	class:DRAMSim2
response_latency	src/mem/cache/BaseCache.py	/^    response_latency = Param.Cycles($/;"	v	class:BaseCache
restartClock	src/dev/i8254xGBe.cc	/^IGbE::restartClock()$/;"	f	class:IGbE
restartCounter	src/dev/arm/timer_sp804.cc	/^Sp804::Timer::restartCounter(uint32_t val)$/;"	f	class:Sp804::Timer
restartStateMachine	src/dev/copy_engine.cc	/^CopyEngine::CopyEngineChannel::restartStateMachine()$/;"	f	class:CopyEngine::CopyEngineChannel
restartTimerCounter	src/dev/arm/timer_cpulocal.cc	/^CpuLocalTimer::Timer::restartTimerCounter(uint32_t val)$/;"	f	class:CpuLocalTimer::Timer
restartWatchdogCounter	src/dev/arm/timer_cpulocal.cc	/^CpuLocalTimer::Timer::restartWatchdogCounter(uint32_t val)$/;"	f	class:CpuLocalTimer::Timer
restart_syscall	src/kern/linux/linux_syscalls.hh	/^    restart_syscall = 168,$/;"	e	enum:SystemCalls::__anon87
restore	src/cpu/pred/ras.cc	/^ReturnAddrStack::restore(unsigned top_entry_idx,$/;"	f	class:ReturnAddrStack
restoreThread	src/arch/mips/mt.hh	/^restoreThread(TC *tc)$/;"	f	namespace:MipsISA
result	src/arch/arm/insts/mem.hh	/^    IntRegIndex result;$/;"	m	class:ArmISA::MemoryExDImm
result	src/arch/arm/insts/mem.hh	/^    IntRegIndex result;$/;"	m	class:ArmISA::MemoryExImm
result	src/arch/arm/insts/mem64.hh	/^    IntRegIndex result;$/;"	m	class:ArmISA::MemoryDImmEx64
result	src/arch/arm/insts/mem64.hh	/^    IntRegIndex result;$/;"	m	class:ArmISA::MemoryEx64
result	src/base/statistics.cc	/^Formula::result(VResult &vec) const$/;"	f	class:Stats::Formula
result	src/base/statistics.hh	/^    Result result() const { return (*functor)(); }$/;"	f	class:Stats::FunctorProxy
result	src/base/statistics.hh	/^    Result result() const { return (Result)data; }$/;"	f	class:Stats::StatStor
result	src/base/statistics.hh	/^    Result result() const { return *scalar; }$/;"	f	class:Stats::ValueProxy
result	src/base/statistics.hh	/^    Result result() const { return proxy->result(); }$/;"	f	class:Stats::ValueBase
result	src/base/statistics.hh	/^    Result result() const { return stat.data(index)->result(); }$/;"	f	class:Stats::ScalarProxy
result	src/base/statistics.hh	/^    Result result() const { return this->s.result(); }$/;"	f	class:Stats::ScalarInfoProxy
result	src/base/statistics.hh	/^    Result result() { return data()->result(); }$/;"	f	class:Stats::ScalarBase
result	src/base/statistics.hh	/^    const VResult &result() const { formula.result(vec); return vec; }$/;"	f	class:Stats::FormulaNode
result	src/base/statistics.hh	/^    const VResult &result() const { return data->result(); }$/;"	f	class:Stats::VectorStatNode
result	src/base/statistics.hh	/^    const VResult &result() const { return vresult; }$/;"	f	class:Stats::ConstNode
result	src/base/statistics.hh	/^    const VResult &result() const { return vresult; }$/;"	f	class:Stats::ConstVectorNode
result	src/base/statistics.hh	/^    result() const$/;"	f	class:Stats::AvgStor
result	src/base/statistics.hh	/^    result() const$/;"	f	class:Stats::BinaryNode
result	src/base/statistics.hh	/^    result() const$/;"	f	class:Stats::FormulaInfoProxy
result	src/base/statistics.hh	/^    result() const$/;"	f	class:Stats::ScalarProxyNode
result	src/base/statistics.hh	/^    result() const$/;"	f	class:Stats::ScalarStatNode
result	src/base/statistics.hh	/^    result() const$/;"	f	class:Stats::SumNode
result	src/base/statistics.hh	/^    result() const$/;"	f	class:Stats::UnaryNode
result	src/base/statistics.hh	/^    result() const$/;"	f	class:Stats::VectorInfoProxy
result	src/base/statistics.hh	/^    result() const$/;"	f	class:Stats::VectorProxy
result	src/base/statistics.hh	/^    result(VResult &vec) const$/;"	f	class:Stats::VectorBase
result	src/cpu/checker/cpu.hh	/^    std::queue<Result> result;$/;"	m	class:CheckerCPU
resultType	src/cpu/inorder/inorder_dyn_inst.hh	/^    ResultType resultType(int idx)$/;"	f	class:InOrderDynInst
resume	src/python/m5/simulate.py	/^def resume(root):$/;"	f
resumeSerialize	src/cpu/o3/rename.hh	/^    bool resumeSerialize;$/;"	m	class:DefaultRename
resumeUnblocking	src/cpu/o3/rename.hh	/^    bool resumeUnblocking;$/;"	m	class:DefaultRename
resyncMatch	src/dev/arm/rtc_pl031.cc	/^PL031::resyncMatch()$/;"	f	class:PL031
retData16	src/dev/isa_fake.hh	/^    uint16_t retData16;$/;"	m	class:IsaFake
retData32	src/dev/isa_fake.hh	/^    uint32_t retData32;$/;"	m	class:IsaFake
retData64	src/dev/isa_fake.hh	/^    uint64_t retData64;$/;"	m	class:IsaFake
retData8	src/dev/isa_fake.hh	/^    uint8_t retData8;$/;"	m	class:IsaFake
ret_bad_addr	src/dev/Device.py	/^    ret_bad_addr = Param.Bool(False, "Return pkt status bad address on access")$/;"	v	class:IsaFake
ret_bad_addr	src/dev/Device.py	/^    ret_bad_addr = Param.Bool(True, "Return pkt status bad address on access")$/;"	v	class:BadAddr
ret_data16	src/dev/Device.py	/^    ret_data16 = Param.UInt16(0xFFFF, "Default data to return")$/;"	v	class:IsaFake
ret_data32	src/dev/Device.py	/^    ret_data32 = Param.UInt32(0xFFFFFFFF, "Default data to return")$/;"	v	class:IsaFake
ret_data64	src/dev/Device.py	/^    ret_data64 = Param.UInt64(0xFFFFFFFFFFFFFFFF, "Default data to return")$/;"	v	class:IsaFake
ret_data8	src/dev/Device.py	/^    ret_data8 = Param.UInt8(0xFF, "Default data to return")$/;"	v	class:IsaFake
retireHead	src/cpu/o3/rob_impl.hh	/^ROB<Impl>::retireHead(ThreadID tid)$/;"	f	class:ROB
retransmit	src/dev/ethertap.cc	/^EtherTap::retransmit()$/;"	f	class:EtherTap
retry	src/arch/x86/pagetable_walker.cc	/^Walker::WalkerState::retry()$/;"	f	class:X86ISA::Walker::WalkerState
retry	src/mem/packet_queue.cc	/^PacketQueue::retry()$/;"	f	class:PacketQueue
retryEvent	src/cpu/simple/timing.hh	/^        EventWrapper<MasterPort, &MasterPort::sendRetry> retryEvent;$/;"	m	class:TimingSimpleCPU::TimingCPUPort
retryList	src/mem/ruby/system/RubyPort.hh	/^    std::vector<MemSlavePort *> retryList;$/;"	m	class:RubyPort
retryPkt	src/cpu/o3/fetch.hh	/^    PacketPtr retryPkt;$/;"	m	class:DefaultFetch
retryPkt	src/cpu/o3/lsq_unit.hh	/^    PacketPtr retryPkt;$/;"	m	class:LSQUnit
retryPkt	src/cpu/ozone/front_end.hh	/^    PacketPtr retryPkt;$/;"	m	class:FrontEnd
retryPkt	src/cpu/ozone/lw_lsq.hh	/^    PacketPtr retryPkt;$/;"	m	class:OzoneLWLSQ
retryPkt	src/cpu/testers/memtest/memtest.hh	/^    PacketPtr retryPkt;$/;"	m	class:MemTest
retryPkt	src/cpu/testers/networktest/networktest.hh	/^    PacketPtr retryPkt;$/;"	m	class:NetworkTest
retryPkt	src/cpu/testers/traffic_gen/traffic_gen.hh	/^    PacketPtr retryPkt;$/;"	m	class:TrafficGen
retryPktTick	src/cpu/testers/traffic_gen/traffic_gen.hh	/^    Tick retryPktTick;$/;"	m	class:TrafficGen
retryRdReq	src/mem/dram_ctrl.hh	/^    bool retryRdReq;$/;"	m	class:DRAMCtrl
retryReq	src/mem/bridge.hh	/^        bool retryReq;$/;"	m	class:Bridge::BridgeSlavePort
retryReq	src/mem/dramsim2.hh	/^    bool retryReq;$/;"	m	class:DRAMSim2
retryReq	src/mem/simple_mem.hh	/^    bool retryReq;$/;"	m	class:SimpleMemory
retryResp	src/mem/dramsim2.hh	/^    bool retryResp;$/;"	m	class:DRAMSim2
retryResp	src/mem/simple_mem.hh	/^    bool retryResp;$/;"	m	class:SimpleMemory
retryStalledReq	src/mem/bridge.cc	/^Bridge::BridgeSlavePort::retryStalledReq()$/;"	f	class:Bridge::BridgeSlavePort
retryTicks	src/cpu/testers/traffic_gen/traffic_gen.hh	/^    Stats::Scalar retryTicks;$/;"	m	class:TrafficGen
retryTid	src/cpu/o3/fetch.hh	/^    ThreadID retryTid;$/;"	m	class:DefaultFetch
retryTid	src/cpu/o3/lsq.hh	/^    ThreadID retryTid;$/;"	m	class:LSQ
retryTime	src/sim/core.hh	/^const Tick retryTime = 1000;$/;"	v
retryWaiting	src/mem/bus.cc	/^BaseBus::Layer<SrcType,DstType>::retryWaiting()$/;"	f	class:BaseBus::Layer
retryWrReq	src/mem/dram_ctrl.hh	/^    bool retryWrReq;$/;"	m	class:DRAMCtrl
retrying	src/arch/x86/pagetable_walker.hh	/^            bool retrying;$/;"	m	class:X86ISA::Walker::WalkerState
retryingPort	src/mem/bus.hh	/^        SrcType* retryingPort;$/;"	m	class:BaseBus::Layer
retsys	src/arch/alpha/osfpal.hh	/^        retsys = 0x3d,$/;"	e	enum:PAL::__anon3
retval	src/sim/syscallreturn.hh	/^    uint64_t retval;$/;"	m	class:SyscallReturn
rev	src/arch/arm/linux/atag.hh	/^    void rev(uint32_t i) { storage[2] = i; }$/;"	f	class:AtagRev
rev	src/arch/mips/pra_constants.hh	/^    Bitfield<7,  0>  rev;$/;"	m	namespace:MipsISA
reverse	src/base/varargs.hh	/^    void reverse() { l.reverse(); }$/;"	f	class:VarArgs::List
revision	src/arch/x86/bios/ACPI.py	/^    revision = Param.UInt8(2, 'revision of ACPI being used, zero indexed')$/;"	v	class:X86ACPIRSDP
revision	src/arch/x86/bios/acpi.hh	/^    uint8_t revision;$/;"	m	class:X86ISA::ACPI::RSDP
revision	src/arch/x86/bios/acpi.hh	/^    uint8_t revision;$/;"	m	class:X86ISA::ACPI::SysDescTable
revision	src/dev/pcireg.h	/^        uint8_t revision;$/;"	m	struct:PCIConfig::__anon80
revoke	src/kern/tru64/tru64_syscalls.hh	/^        revoke = 56,$/;"	e	enum:SystemCalls::__anon102
rex	src/arch/x86/types.hh	/^        Rex rex;$/;"	m	struct:X86ISA::ExtMachInst
rf	src/arch/x86/regs/misc.hh	/^        Bitfield<16> rf; \/\/ Resume Flag$/;"	m	namespace:X86ISA
rfcr	src/dev/ns_gige.hh	/^    uint32_t    rfcr;$/;"	m	struct:dp_regs
rfctl	src/dev/i8254xGBe_defs.hh	/^    RFCTL rfctl;$/;"	m	struct:iGbReg::Regs
rfd	src/base/loader/coff_sym.h	/^    coff_uint   rfd;    \/* index into the file table *\/$/;"	m	struct:__anon43
rfd	src/base/loader/coff_sym.h	/^    unsigned    rfd : 12;    \/* index into the file indirect table *\/$/;"	m	struct:__anon42
rfdBase	src/base/loader/coff_sym.h	/^    coff_int    rfdBase;        \/* index into the file indirect table *\/$/;"	m	struct:ecoff_fdr
rfdNil	src/base/loader/coff_sym.h	/^#define rfdNil /;"	d
rfdr	src/dev/ns_gige.hh	/^    uint32_t    rfdr;$/;"	m	struct:dp_regs
rfr	src/arch/arm/miscregs.hh	/^        Bitfield<19> rfr;$/;"	m	namespace:ArmISA
rgb444	src/base/vnc/convert.hh	/^        rgb444,$/;"	e	enum:VideoConvert::Mode
rgb4444	src/base/vnc/convert.hh	/^        rgb4444$/;"	e	enum:VideoConvert::Mode
rgb565	src/base/vnc/convert.hh	/^        rgb565,$/;"	e	enum:VideoConvert::Mode
rgb888	src/base/vnc/convert.hh	/^        rgb888,$/;"	e	enum:VideoConvert::Mode
rgb8888	src/base/vnc/convert.hh	/^        rgb8888,$/;"	e	enum:VideoConvert::Mode
rgdb_wait	src/sim/system.cc	/^int rgdb_wait = -1;$/;"	v
rightButton	src/dev/ps2.hh	/^    Bitfield<1> rightButton;$/;"	m	namespace:Ps2
rightButton	src/dev/x86/i8042.hh	/^        Bitfield<0> rightButton;$/;"	m	class:X86ISA::PS2Mouse
rimim	src/dev/arm/pl011.hh	/^        Bitfield<0> rimim;$/;"	m	class:Pl011
ring0	src/arch/x86/kernel_stats.hh	/^    ring0,$/;"	e	enum:X86ISA::Kernel::cpu_mode
ring1	src/arch/x86/kernel_stats.hh	/^    ring1,$/;"	e	enum:X86ISA::Kernel::cpu_mode
ring2	src/arch/x86/kernel_stats.hh	/^    ring2,$/;"	e	enum:X86ISA::Kernel::cpu_mode
ring3	src/arch/x86/kernel_stats.hh	/^    ring3,$/;"	e	enum:X86ISA::Kernel::cpu_mode
ringBuffer	src/cpu/kvm/perfevent.hh	/^    struct perf_event_mmap_page *ringBuffer;$/;"	m	class:PerfKvmCounter	typeref:struct:PerfKvmCounter::perf_event_mmap_page
ringNumPages	src/cpu/kvm/perfevent.hh	/^    int ringNumPages;$/;"	m	class:PerfKvmCounter
rip	src/arch/x86/nativetrace.hh	/^        uint64_t rip;$/;"	m	struct:Trace::X86NativeTrace::ThreadState
ripl	src/arch/mips/pra_constants.hh	/^    Bitfield<15, 10> ripl;$/;"	m	namespace:MipsISA
ripv	src/arch/x86/regs/misc.hh	/^        Bitfield<0> ripv; \/\/ Restart-IP valid$/;"	m	namespace:X86ISA
rlim_cur	src/arch/arm/linux/linux.hh	/^        uint32_t  rlim_cur;     \/\/!< soft limit$/;"	m	struct:ArmLinux32::rlimit
rlim_cur	src/arch/arm/linux/linux.hh	/^        uint64_t  rlim_cur;     \/\/!< soft limit$/;"	m	struct:ArmLinux64::rlimit
rlim_cur	src/kern/linux/linux.hh	/^        uint64_t  rlim_cur;     \/\/!< soft limit$/;"	m	struct:Linux::rlimit
rlim_cur	src/kern/operatingsystem.hh	/^        uint64_t  rlim_cur;     \/\/!< soft limit$/;"	m	struct:OperatingSystem::__anon89
rlim_cur	src/kern/tru64/tru64.hh	/^        uint64_t  rlim_cur;     \/\/!< soft limit$/;"	m	struct:Tru64::rlimit
rlim_max	src/arch/arm/linux/linux.hh	/^        uint32_t  rlim_max;     \/\/!< hard limit$/;"	m	struct:ArmLinux32::rlimit
rlim_max	src/arch/arm/linux/linux.hh	/^        uint64_t  rlim_max;     \/\/!< hard limit$/;"	m	struct:ArmLinux64::rlimit
rlim_max	src/kern/linux/linux.hh	/^        uint64_t  rlim_max;     \/\/!< hard limit$/;"	m	struct:Linux::rlimit
rlim_max	src/kern/operatingsystem.hh	/^        uint64_t  rlim_max;     \/\/!< hard limit$/;"	m	struct:OperatingSystem::__anon89
rlim_max	src/kern/tru64/tru64.hh	/^        uint64_t  rlim_max;     \/\/!< hard limit$/;"	m	struct:Tru64::rlimit
rlim_t	src/kern/solaris/solaris.hh	/^    typedef uint64_t rlim_t;$/;"	t	class:Solaris
rlimit	src/arch/arm/linux/linux.hh	/^    struct rlimit {$/;"	s	class:ArmLinux32
rlimit	src/arch/arm/linux/linux.hh	/^    struct rlimit {$/;"	s	class:ArmLinux64
rlimit	src/kern/linux/linux.hh	/^    struct rlimit {$/;"	s	class:Linux
rlimit	src/kern/operatingsystem.hh	/^    } rlimit;$/;"	t	class:OperatingSystem	typeref:struct:OperatingSystem::__anon89
rlimit	src/kern/tru64/tru64.hh	/^    struct rlimit {$/;"	s	class:Tru64
rlimit_resources	src/arch/alpha/tru64/tru64.hh	/^    enum rlimit_resources {$/;"	g	class:AlphaTru64
rlimit_resources	src/arch/arm/linux/linux.hh	/^    enum rlimit_resources {$/;"	g	class:ArmLinux64
rlpml	src/dev/i8254xGBe_defs.hh	/^    uint32_t rlpml; \/\/ 0x5004 RLPML probably maximum accepted packet size$/;"	m	struct:iGbReg::Regs
rm	src/arch/arm/types.hh	/^        Bitfield<3,  0>  rm;$/;"	m	namespace:ArmISA
rm	src/arch/x86/types.hh	/^        Bitfield<2,0> rm;$/;"	m	namespace:X86ISA
rmdir	src/kern/linux/linux_syscalls.hh	/^    rmdir = 169,$/;"	e	enum:SystemCalls::__anon87
rmdir	src/kern/tru64/tru64_syscalls.hh	/^        rmdir = 137,$/;"	e	enum:SystemCalls::__anon102
rn	src/arch/arm/types.hh	/^        Bitfield<19, 16> rn;$/;"	m	namespace:ArmISA
rn	src/arch/power/miscregs.hh	/^    Bitfield<2,1> rn;$/;"	m	namespace:PowerISA
rndx	src/base/loader/coff_sym.h	/^    RNDXR       rndx;           \/* points to a symbol or opt entry *\/$/;"	m	struct:__anon45
rndx	src/base/loader/coff_sym.h	/^    RNDXR       rndx;           \/* relative index into symbol table *\/$/;"	m	union:__anon44
rndxNil	src/base/loader/coff_sym.h	/^#define rndxNil /;"	d
rnst	src/arch/mips/mt_constants.hh	/^    Bitfield<24, 23> rnst;$/;"	m	namespace:MipsISA
rob	src/cpu/o3/commit.hh	/^    ROB *rob;$/;"	m	class:DefaultCommit
rob	src/cpu/o3/cpu.hh	/^    typename CPUPolicy::ROB rob;$/;"	m	class:FullO3CPU
robCapEvents	src/cpu/ozone/lw_back_end.hh	/^    Stats::Vector robCapEvents;$/;"	m	class:LWBackEnd
robCapInstCount	src/cpu/ozone/lw_back_end.hh	/^    Stats::Vector robCapInstCount;$/;"	m	class:LWBackEnd
robDoneSquashing	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::robDoneSquashing()$/;"	f	class:DefaultCommit
robEmpty	src/cpu/ozone/back_end.hh	/^    bool robEmpty() { return instList.empty(); }$/;"	f	class:BackEnd
robEmpty	src/cpu/ozone/inorder_back_end.hh	/^    bool robEmpty() { return instList.empty(); }$/;"	f	class:InorderBackEnd
robEmpty	src/cpu/ozone/lw_back_end.hh	/^    bool robEmpty() { return numInsts == 0; }$/;"	f	class:LWBackEnd
robEntries	src/cpu/o3/rename.hh	/^        unsigned robEntries;$/;"	m	struct:DefaultRename::FreeEntries
robInfoFromIEW	src/cpu/o3/commit.hh	/^    typename TimeBuffer<TimeStruct>::wire robInfoFromIEW;$/;"	m	class:DefaultCommit
robPolicy	src/cpu/o3/rob.hh	/^    ROBPolicy robPolicy;$/;"	m	class:ROB
robReads	src/cpu/o3/rob.hh	/^    Stats::Scalar robReads;$/;"	m	class:ROB
robSquashing	src/cpu/o3/comm.hh	/^        bool robSquashing; \/\/ *F, D, R, I$/;"	m	struct:TimeBufStruct::commitComm
robStatus	src/cpu/o3/rob.hh	/^    Status robStatus[Impl::MaxThreads];$/;"	m	class:ROB
robWrites	src/cpu/o3/rob.hh	/^    Stats::Scalar robWrites;$/;"	m	class:ROB
rob_cap_events	src/cpu/ozone/back_end.hh	/^    Stats::Vector rob_cap_events;$/;"	m	class:BackEnd
rob_cap_inst_count	src/cpu/ozone/back_end.hh	/^    Stats::Vector rob_cap_inst_count;$/;"	m	class:BackEnd
rom	src/arch/sparc/SparcSystem.py	/^    rom = Param.SimpleMemory($/;"	v	class:SparcSystem
rom	src/dev/ns_gige.hh	/^    dp_rom rom;$/;"	m	class:NSGigE
romMicroPC	src/base/types.hh	/^romMicroPC(MicroPC upc)$/;"	f
romSize	src/arch/x86/bios/smbios.hh	/^    uint8_t romSize;$/;"	m	class:X86ISA::SMBios::BiosInformation
rom_size	src/arch/x86/bios/SMBios.py	/^    rom_size = Param.UInt8(0, "rom size")$/;"	v	class:X86SMBiosBiosInformation
root	src/base/statistics.hh	/^    NodePtr root;$/;"	m	class:Stats::Formula
root	src/sim/root.hh	/^    root()$/;"	f	class:Root
rootdev	src/arch/arm/linux/atag.hh	/^    void rootdev(uint32_t i) { storage[4] = i; }$/;"	f	class:AtagCore
rotC	src/arch/arm/insts/pred_inst.hh	/^    bool rotC;$/;"	m	class:ArmISA::DataImmOp
rotate	src/arch/arm/insts/pred_inst.hh	/^    uint32_t rotate;$/;"	m	class:ArmISA::PredImmOp
rotate	src/arch/arm/types.hh	/^        Bitfield<11, 8>  rotate;$/;"	m	namespace:ArmISA
rotateValue	src/arch/power/insts/integer.hh	/^    rotateValue(uint32_t rs, uint32_t shift) const$/;"	f	class:PowerISA::IntRotateOp
rotate_imm	src/arch/arm/insts/pred_inst.hh	/^rotate_imm(uint32_t immValue, int rotateValue)$/;"	f	namespace:ArmISA
rotated_carry	src/arch/arm/insts/pred_inst.hh	/^    uint32_t rotated_carry;$/;"	m	class:ArmISA::PredImmOp
rotated_imm	src/arch/arm/insts/pred_inst.hh	/^    uint32_t rotated_imm;$/;"	m	class:ArmISA::PredImmOp
roundDown	src/base/intmath.hh	/^roundDown(T val, int align)$/;"	f
roundFP	src/arch/mips/utility.cc	/^roundFP(double val, int digits)$/;"	f	namespace:MipsISA
roundNEven	src/arch/arm/insts/vfp.hh	/^roundNEven(T a) {$/;"	f	namespace:ArmISA
roundPage	src/arch/arm/utility.cc	/^roundPage(Addr addr)$/;"	f	namespace:ArmISA
roundRobin	src/cpu/inorder/first_stage.cc	/^FirstStage::roundRobin()$/;"	f	class:FirstStage
roundRobin	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::roundRobin()$/;"	f	class:DefaultCommit
roundRobin	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::roundRobin()$/;"	f	class:DefaultFetch
roundUp	src/base/intmath.hh	/^roundUp(T val, int align)$/;"	f
roundingModes	src/arch/arm/miscregs.hh	/^        Bitfield<31, 28> roundingModes;$/;"	m	namespace:ArmISA
route	src/mem/ruby/network/garnet/fixed-pipeline/VirtualChannel_d.hh	/^    int route;$/;"	m	class:VirtualChannel_d
routeCompute	src/mem/ruby/network/garnet/fixed-pipeline/RoutingUnit_d.cc	/^RoutingUnit_d::routeCompute(flit_d *t_flit)$/;"	f	class:RoutingUnit_d
routeCompute	src/mem/ruby/network/garnet/flexible-pipeline/Router.cc	/^Router::routeCompute(flit *m_flit, int inport)$/;"	f	class:Router
routeToHyp	src/arch/arm/faults.cc	/^DataAbort::routeToHyp(ThreadContext *tc) const$/;"	f	class:ArmISA::DataAbort
routeToHyp	src/arch/arm/faults.cc	/^FastInterrupt::routeToHyp(ThreadContext *tc) const$/;"	f	class:ArmISA::FastInterrupt
routeToHyp	src/arch/arm/faults.cc	/^Interrupt::routeToHyp(ThreadContext *tc) const$/;"	f	class:ArmISA::Interrupt
routeToHyp	src/arch/arm/faults.cc	/^PrefetchAbort::routeToHyp(ThreadContext *tc) const$/;"	f	class:ArmISA::PrefetchAbort
routeToHyp	src/arch/arm/faults.cc	/^SupervisorCall::routeToHyp(ThreadContext *tc) const$/;"	f	class:ArmISA::SupervisorCall
routeToHyp	src/arch/arm/faults.cc	/^SystemError::routeToHyp(ThreadContext *tc) const$/;"	f	class:ArmISA::SystemError
routeToHyp	src/arch/arm/faults.cc	/^UndefinedInstruction::routeToHyp(ThreadContext *tc) const$/;"	f	class:ArmISA::UndefinedInstruction
routeToHyp	src/arch/arm/faults.hh	/^    virtual bool routeToHyp(ThreadContext *tc) const { return false; }$/;"	f	class:ArmISA::ArmFault
routeToMonitor	src/arch/arm/faults.cc	/^DataAbort::routeToMonitor(ThreadContext *tc) const$/;"	f	class:ArmISA::DataAbort
routeToMonitor	src/arch/arm/faults.cc	/^FastInterrupt::routeToMonitor(ThreadContext *tc) const$/;"	f	class:ArmISA::FastInterrupt
routeToMonitor	src/arch/arm/faults.cc	/^Interrupt::routeToMonitor(ThreadContext *tc) const$/;"	f	class:ArmISA::Interrupt
routeToMonitor	src/arch/arm/faults.cc	/^PrefetchAbort::routeToMonitor(ThreadContext *tc) const$/;"	f	class:ArmISA::PrefetchAbort
routeToMonitor	src/arch/arm/faults.cc	/^SystemError::routeToMonitor(ThreadContext *tc) const$/;"	f	class:ArmISA::SystemError
routeToMonitor	src/arch/arm/faults.hh	/^    virtual bool routeToMonitor(ThreadContext *tc) const { return false; }$/;"	f	class:ArmISA::ArmFaultVals
route_req	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.cc	/^Router_d::route_req(flit_d *t_flit, InputUnit_d *in_unit, int invc)$/;"	f	class:Router_d
router_id	src/mem/ruby/network/BasicRouter.py	/^    router_id = Param.Int("ID in relation to other routers")$/;"	v	class:BasicRouter
routers	src/mem/ruby/network/Network.py	/^    routers = VectorParam.BasicRouter("Network routers")$/;"	v	class:RubyNetwork
routers	src/mem/ruby/network/fault_model/FaultModel.hh	/^    std::vector <system_conf> routers;$/;"	m	class:FaultModel
row	src/mem/dram_ctrl.hh	/^        const uint16_t row;$/;"	m	class:DRAMCtrl::DRAMPacket
rowAccesses	src/mem/dram_ctrl.hh	/^        uint32_t rowAccesses;$/;"	m	class:DRAMCtrl::Bank
rowBufferSize	src/mem/dram_ctrl.hh	/^    const uint32_t rowBufferSize;$/;"	m	class:DRAMCtrl
rowHitFlag	src/mem/dram_ctrl.hh	/^    bool rowHitFlag;$/;"	m	class:DRAMCtrl
rowsPerBank	src/mem/dram_ctrl.hh	/^    uint32_t rowsPerBank;$/;"	m	class:DRAMCtrl
rp	src/arch/mips/pra_constants.hh	/^    Bitfield<27>     rp;$/;"	m	namespace:MipsISA
rpb_cc	src/arch/mips/linux/hwrpb.hh	/^        uint32_t rpb_cc;$/;"	m	struct:Linux::pcb_struct
rpb_fen	src/arch/mips/linux/hwrpb.hh	/^        uint64_ta rpb_fen;$/;"	m	struct:Linux::pcb_struct
rpb_ksp	src/arch/mips/linux/hwrpb.hh	/^        uint64_ta rpb_ksp;$/;"	m	struct:Linux::pcb_struct
rpb_psn	src/arch/mips/linux/hwrpb.hh	/^        uint32_t rpb_psn;$/;"	m	struct:Linux::pcb_struct
rpb_ptbr	src/arch/mips/linux/hwrpb.hh	/^        uint64_ta rpb_ptbr;$/;"	m	struct:Linux::pcb_struct
rpb_unique	src/arch/mips/linux/hwrpb.hh	/^        uint64_ta rpb_unique;$/;"	m	struct:Linux::pcb_struct
rpb_usp	src/arch/mips/linux/hwrpb.hh	/^        uint64_ta rpb_usp;$/;"	m	struct:Linux::pcb_struct
rpl	src/arch/x86/regs/misc.hh	/^        Bitfield<1, 0> rpl; \/\/ Requestor Privilege Level$/;"	m	namespace:X86ISA
rpns	src/sim/pseudo_inst.cc	/^rpns(ThreadContext *tc)$/;"	f	namespace:PseudoInst
rr	src/arch/arm/miscregs.hh	/^        Bitfield<14>   rr;      \/\/ Round Robin select (ARMv7 only)$/;"	m	namespace:ArmISA
rs	src/arch/arm/miscregs.hh	/^        Bitfield<9, 8> rs;      \/\/ Deprecated protection bits (dropped in ARMv7)$/;"	m	namespace:ArmISA
rs	src/arch/arm/types.hh	/^        Bitfield<11, 8>  rs;$/;"	m	namespace:ArmISA
rs	src/arch/power/types.hh	/^    Bitfield<25, 21> rs;$/;"	m	namespace:PowerISA
rs	src/dev/i8254xGBe_defs.hh	/^inline bool rs(TxDesc *d)   { return bits(d->d2, 27,27); }$/;"	f	namespace:iGbReg::TxdOp
rs	src/dev/mc146818.hh	/^        Bitfield<3, 0> rs;$/;"	m	class:MC146818
rsdp	src/arch/x86/system.hh	/^    X86ISA::ACPI::RSDP * rsdp;$/;"	m	class:X86System
rsdt	src/arch/x86/bios/ACPI.py	/^    rsdt = Param.X86ACPIRSDT(NULL, 'root system description table')$/;"	v	class:X86ACPIRSDP
rsdt	src/arch/x86/bios/acpi.hh	/^    RSDT * rsdt;$/;"	m	class:X86ISA::ACPI::RSDP
rsi	src/arch/x86/nativetrace.hh	/^        uint64_t rsi;$/;"	m	struct:Trace::X86NativeTrace::ThreadState
rsize	src/kern/tru64/tru64.hh	/^        size_t  rsize;          \/\/!< red zone size$/;"	m	struct:Tru64::vm_stack
rsked	src/cpu/inorder/cpu.hh	/^        ThePipeline::RSkedPtr rsked;$/;"	m	class:InOrderCPU::StageScheduler
rsmCycle	src/arch/x86/regs/misc.hh	/^        Bitfield<4> rsmCycle;$/;"	m	namespace:X86ISA
rsp	src/arch/x86/nativetrace.hh	/^        uint64_t rsp;$/;"	m	struct:Trace::X86NativeTrace::ThreadState
rsrpd	src/dev/i8254xGBe_defs.hh	/^    RSRPD rsrpd;$/;"	m	struct:iGbReg::Regs
rss	src/base/loader/coff_sym.h	/^    coff_int    rss;            \/* file name (of source, if known) *\/$/;"	m	struct:ecoff_fdr
rss	src/dev/Ethernet.py	/^    rss = Param.Bool(False, "Receive Side Scaling")$/;"	v	class:EtherDevBase
rss_hash	src/dev/i8254xGBe_defs.hh	/^                uint32_t rss_hash;$/;"	m	union:iGbReg::RxDesc::__anon70::__anon73::__anon74
rss_type	src/dev/i8254xGBe_defs.hh	/^            uint16_t rss_type:4;$/;"	m	struct:iGbReg::RxDesc::__anon70::__anon73
rsvd	src/arch/arm/miscregs.hh	/^        Bitfield<29, 28> rsvd;$/;"	m	namespace:ArmISA
rsvd	src/dev/arm/pl011.hh	/^        Bitfield<15,11> rsvd;$/;"	m	class:Pl011
rt	src/arch/arm/types.hh	/^        Bitfield<15, 12> rt;$/;"	m	namespace:ArmISA
rtType2	src/base/inet.hh	/^        struct ip6_opt_routing_type2 rtType2;$/;"	m	union:Net::ip6_opt_hdr::__anon40	typeref:struct:Net::ip6_opt_hdr::__anon40::ip6_opt_routing_type2
rtType2Addr	src/base/inet.hh	/^    const uint8_t* rtType2Addr() const { return ext_data.rtType2.addr.data; }$/;"	f	struct:Net::Ip6Opt
rtType2SegLft	src/base/inet.hh	/^    uint8_t  rtType2SegLft() const { return ext_data.rtType2.segleft; }$/;"	f	struct:Net::Ip6Opt
rtType2Type	src/base/inet.hh	/^    uint8_t  rtType2Type() const { return ext_data.rtType2.type; }$/;"	f	struct:Net::Ip6Opt
rtTypeExt	src/base/inet.hh	/^    const Ip6Opt* rtTypeExt() const { return getExt(IP_PROTO_ROUTING); }$/;"	f	struct:Net::Ip6Hdr
rt_sigaction	src/kern/linux/linux_syscalls.hh	/^    rt_sigaction = 170,$/;"	e	enum:SystemCalls::__anon87
rt_sigpending	src/kern/linux/linux_syscalls.hh	/^    rt_sigpending = 171,$/;"	e	enum:SystemCalls::__anon87
rt_sigprocmask	src/kern/linux/linux_syscalls.hh	/^    rt_sigprocmask = 172,$/;"	e	enum:SystemCalls::__anon87
rt_sigqueueinfo	src/kern/linux/linux_syscalls.hh	/^    rt_sigqueueinfo = 173,$/;"	e	enum:SystemCalls::__anon87
rt_sigreturn	src/kern/linux/linux_syscalls.hh	/^    rt_sigreturn = 174,$/;"	e	enum:SystemCalls::__anon87
rt_sigsuspend	src/kern/linux/linux_syscalls.hh	/^    rt_sigsuspend = 175,$/;"	e	enum:SystemCalls::__anon87
rt_sigtimedwait	src/kern/linux/linux_syscalls.hh	/^    rt_sigtimedwait = 176,$/;"	e	enum:SystemCalls::__anon87
rtc	src/dev/alpha/tsunami_io.hh	/^    RTC rtc;$/;"	m	class:TsunamiIO
rtc	src/dev/arm/RealView.py	/^    rtc            = PL031(pio_addr=0x1C170000, int_num=36)$/;"	v	class:VExpress_EMM
rtc	src/dev/arm/RealView.py	/^    rtc           = PL031(pio_addr=0x10017000, int_num=42)$/;"	v	class:RealViewPBX
rtc	src/dev/mips/malta_io.hh	/^    RTC rtc;$/;"	m	class:MaltaIO
rtc	src/dev/x86/cmos.hh	/^    } rtc;$/;"	m	class:X86ISA::Cmos	typeref:class:X86ISA::Cmos::X86RTC
rtcAddr	src/dev/alpha/tsunami_io.hh	/^    uint8_t rtcAddr;$/;"	m	class:TsunamiIO
rtc_fake	src/dev/arm/RealView.py	/^    rtc_fake      = AmbaFake(pio_addr=0x10017000, amba_id=0x41031)$/;"	v	class:RealViewEB
rti	src/arch/alpha/osfpal.hh	/^        rti = 0x3f,$/;"	e	enum:PAL::__anon3
rtim	src/dev/arm/pl011.hh	/^        Bitfield<6> rtim;$/;"	m	class:Pl011
rtralt	src/base/inet.hh	/^    uint16_t rtralt() const { return ntohs(opt_data.rtralt); }$/;"	f	struct:Net::IpOpt
ru_idrss	src/arch/arm/linux/linux.hh	/^        int32_t ru_idrss;               \/\/!< integral unshared data "$/;"	m	struct:ArmLinux32::rusage
ru_idrss	src/arch/arm/linux/linux.hh	/^        int64_t ru_idrss;               \/\/!< integral unshared data "$/;"	m	struct:ArmLinux64::rusage
ru_idrss	src/kern/linux/linux.hh	/^        int64_t ru_idrss;               \/\/!< integral unshared data "$/;"	m	struct:Linux::rusage
ru_idrss	src/kern/operatingsystem.hh	/^        int64_t ru_idrss;               \/\/!< integral unshared data "$/;"	m	struct:OperatingSystem::__anon92
ru_idrss	src/kern/tru64/tru64.hh	/^        uint64_t ru_idrss;              \/\/!< integral unshared data "$/;"	m	struct:Tru64::rusage
ru_inblock	src/arch/arm/linux/linux.hh	/^        int32_t ru_inblock;             \/\/!< block input operations$/;"	m	struct:ArmLinux32::rusage
ru_inblock	src/arch/arm/linux/linux.hh	/^        int64_t ru_inblock;             \/\/!< block input operations$/;"	m	struct:ArmLinux64::rusage
ru_inblock	src/kern/linux/linux.hh	/^        int64_t ru_inblock;             \/\/!< block input operations$/;"	m	struct:Linux::rusage
ru_inblock	src/kern/operatingsystem.hh	/^        int64_t ru_inblock;             \/\/!< block input operations$/;"	m	struct:OperatingSystem::__anon92
ru_inblock	src/kern/tru64/tru64.hh	/^        uint64_t ru_inblock;            \/\/!< block input operations$/;"	m	struct:Tru64::rusage
ru_isrss	src/arch/arm/linux/linux.hh	/^        int32_t ru_isrss;               \/\/!< integral unshared stack "$/;"	m	struct:ArmLinux32::rusage
ru_isrss	src/arch/arm/linux/linux.hh	/^        int64_t ru_isrss;               \/\/!< integral unshared stack "$/;"	m	struct:ArmLinux64::rusage
ru_isrss	src/kern/linux/linux.hh	/^        int64_t ru_isrss;               \/\/!< integral unshared stack "$/;"	m	struct:Linux::rusage
ru_isrss	src/kern/operatingsystem.hh	/^        int64_t ru_isrss;               \/\/!< integral unshared stack "$/;"	m	struct:OperatingSystem::__anon92
ru_isrss	src/kern/tru64/tru64.hh	/^        uint64_t ru_isrss;              \/\/!< integral unshared stack "$/;"	m	struct:Tru64::rusage
ru_ixrss	src/arch/arm/linux/linux.hh	/^        int32_t ru_ixrss;               \/\/!< integral shared memory size$/;"	m	struct:ArmLinux32::rusage
ru_ixrss	src/arch/arm/linux/linux.hh	/^        int64_t ru_ixrss;               \/\/!< integral shared memory size$/;"	m	struct:ArmLinux64::rusage
ru_ixrss	src/kern/linux/linux.hh	/^        int64_t ru_ixrss;               \/\/!< integral shared memory size$/;"	m	struct:Linux::rusage
ru_ixrss	src/kern/operatingsystem.hh	/^        int64_t ru_ixrss;               \/\/!< integral shared memory size$/;"	m	struct:OperatingSystem::__anon92
ru_ixrss	src/kern/tru64/tru64.hh	/^        uint64_t ru_ixrss;              \/\/!< integral shared memory size$/;"	m	struct:Tru64::rusage
ru_majflt	src/arch/arm/linux/linux.hh	/^        int32_t ru_majflt;              \/\/!< page faults$/;"	m	struct:ArmLinux32::rusage
ru_majflt	src/arch/arm/linux/linux.hh	/^        int64_t ru_majflt;              \/\/!< page faults$/;"	m	struct:ArmLinux64::rusage
ru_majflt	src/kern/linux/linux.hh	/^        int64_t ru_majflt;              \/\/!< page faults$/;"	m	struct:Linux::rusage
ru_majflt	src/kern/operatingsystem.hh	/^        int64_t ru_majflt;              \/\/!< page faults$/;"	m	struct:OperatingSystem::__anon92
ru_majflt	src/kern/tru64/tru64.hh	/^        uint64_t ru_majflt;             \/\/!< page faults$/;"	m	struct:Tru64::rusage
ru_maxrss	src/arch/arm/linux/linux.hh	/^        int32_t ru_maxrss;              \/\/!< max rss$/;"	m	struct:ArmLinux32::rusage
ru_maxrss	src/arch/arm/linux/linux.hh	/^        int64_t ru_maxrss;              \/\/!< max rss$/;"	m	struct:ArmLinux64::rusage
ru_maxrss	src/kern/linux/linux.hh	/^        int64_t ru_maxrss;              \/\/!< max rss$/;"	m	struct:Linux::rusage
ru_maxrss	src/kern/operatingsystem.hh	/^        int64_t ru_maxrss;              \/\/!< max rss$/;"	m	struct:OperatingSystem::__anon92
ru_maxrss	src/kern/tru64/tru64.hh	/^        uint64_t ru_maxrss;             \/\/!< ru_maxrss$/;"	m	struct:Tru64::rusage
ru_minflt	src/arch/arm/linux/linux.hh	/^        int32_t ru_minflt;              \/\/!< page reclaims - total vmfaults$/;"	m	struct:ArmLinux32::rusage
ru_minflt	src/arch/arm/linux/linux.hh	/^        int64_t ru_minflt;              \/\/!< page reclaims - total vmfaults$/;"	m	struct:ArmLinux64::rusage
ru_minflt	src/kern/linux/linux.hh	/^        int64_t ru_minflt;              \/\/!< page reclaims - total vmfaults$/;"	m	struct:Linux::rusage
ru_minflt	src/kern/operatingsystem.hh	/^        int64_t ru_minflt;              \/\/!< page reclaims - total vmfaults$/;"	m	struct:OperatingSystem::__anon92
ru_minflt	src/kern/tru64/tru64.hh	/^        uint64_t ru_minflt;             \/\/!< page reclaims - total vmfaults$/;"	m	struct:Tru64::rusage
ru_msgrcv	src/arch/arm/linux/linux.hh	/^        int32_t ru_msgrcv;              \/\/!< messages received$/;"	m	struct:ArmLinux32::rusage
ru_msgrcv	src/arch/arm/linux/linux.hh	/^        int64_t ru_msgrcv;              \/\/!< messages received$/;"	m	struct:ArmLinux64::rusage
ru_msgrcv	src/kern/linux/linux.hh	/^        int64_t ru_msgrcv;              \/\/!< messages received$/;"	m	struct:Linux::rusage
ru_msgrcv	src/kern/operatingsystem.hh	/^        int64_t ru_msgrcv;              \/\/!< messages received$/;"	m	struct:OperatingSystem::__anon92
ru_msgrcv	src/kern/tru64/tru64.hh	/^        uint64_t ru_msgrcv;             \/\/!< messages received$/;"	m	struct:Tru64::rusage
ru_msgsnd	src/arch/arm/linux/linux.hh	/^        int32_t ru_msgsnd;              \/\/!< messages sent$/;"	m	struct:ArmLinux32::rusage
ru_msgsnd	src/arch/arm/linux/linux.hh	/^        int64_t ru_msgsnd;              \/\/!< messages sent$/;"	m	struct:ArmLinux64::rusage
ru_msgsnd	src/kern/linux/linux.hh	/^        int64_t ru_msgsnd;              \/\/!< messages sent$/;"	m	struct:Linux::rusage
ru_msgsnd	src/kern/operatingsystem.hh	/^        int64_t ru_msgsnd;              \/\/!< messages sent$/;"	m	struct:OperatingSystem::__anon92
ru_msgsnd	src/kern/tru64/tru64.hh	/^        uint64_t ru_msgsnd;             \/\/!< messages sent$/;"	m	struct:Tru64::rusage
ru_nivcsw	src/arch/arm/linux/linux.hh	/^        int32_t ru_nivcsw;              \/\/!< involuntary "$/;"	m	struct:ArmLinux32::rusage
ru_nivcsw	src/arch/arm/linux/linux.hh	/^        int64_t ru_nivcsw;              \/\/!< involuntary "$/;"	m	struct:ArmLinux64::rusage
ru_nivcsw	src/kern/linux/linux.hh	/^        int64_t ru_nivcsw;              \/\/!< involuntary "$/;"	m	struct:Linux::rusage
ru_nivcsw	src/kern/operatingsystem.hh	/^        int64_t ru_nivcsw;              \/\/!< involuntary "$/;"	m	struct:OperatingSystem::__anon92
ru_nivcsw	src/kern/tru64/tru64.hh	/^        uint64_t ru_nivcsw;             \/\/!< involuntary "$/;"	m	struct:Tru64::rusage
ru_nsignals	src/arch/arm/linux/linux.hh	/^        int32_t ru_nsignals;            \/\/!< signals received$/;"	m	struct:ArmLinux32::rusage
ru_nsignals	src/arch/arm/linux/linux.hh	/^        int64_t ru_nsignals;            \/\/!< signals received$/;"	m	struct:ArmLinux64::rusage
ru_nsignals	src/kern/linux/linux.hh	/^        int64_t ru_nsignals;            \/\/!< signals received$/;"	m	struct:Linux::rusage
ru_nsignals	src/kern/operatingsystem.hh	/^        int64_t ru_nsignals;            \/\/!< signals received$/;"	m	struct:OperatingSystem::__anon92
ru_nsignals	src/kern/tru64/tru64.hh	/^        uint64_t ru_nsignals;           \/\/!< signals received$/;"	m	struct:Tru64::rusage
ru_nswap	src/arch/arm/linux/linux.hh	/^        int32_t ru_nswap;               \/\/!< swaps$/;"	m	struct:ArmLinux32::rusage
ru_nswap	src/arch/arm/linux/linux.hh	/^        int64_t ru_nswap;               \/\/!< swaps$/;"	m	struct:ArmLinux64::rusage
ru_nswap	src/kern/linux/linux.hh	/^        int64_t ru_nswap;               \/\/!< swaps$/;"	m	struct:Linux::rusage
ru_nswap	src/kern/operatingsystem.hh	/^        int64_t ru_nswap;               \/\/!< swaps$/;"	m	struct:OperatingSystem::__anon92
ru_nswap	src/kern/tru64/tru64.hh	/^        uint64_t ru_nswap;              \/\/!< swaps$/;"	m	struct:Tru64::rusage
ru_nvcsw	src/arch/arm/linux/linux.hh	/^        int32_t ru_nvcsw;               \/\/!< voluntary context switches$/;"	m	struct:ArmLinux32::rusage
ru_nvcsw	src/arch/arm/linux/linux.hh	/^        int64_t ru_nvcsw;               \/\/!< voluntary context switches$/;"	m	struct:ArmLinux64::rusage
ru_nvcsw	src/kern/linux/linux.hh	/^        int64_t ru_nvcsw;               \/\/!< voluntary context switches$/;"	m	struct:Linux::rusage
ru_nvcsw	src/kern/operatingsystem.hh	/^        int64_t ru_nvcsw;               \/\/!< voluntary context switches$/;"	m	struct:OperatingSystem::__anon92
ru_nvcsw	src/kern/tru64/tru64.hh	/^        uint64_t ru_nvcsw;              \/\/!< voluntary context switches$/;"	m	struct:Tru64::rusage
ru_oublock	src/arch/arm/linux/linux.hh	/^        int32_t ru_oublock;             \/\/!< block output operations$/;"	m	struct:ArmLinux32::rusage
ru_oublock	src/arch/arm/linux/linux.hh	/^        int64_t ru_oublock;             \/\/!< block output operations$/;"	m	struct:ArmLinux64::rusage
ru_oublock	src/kern/linux/linux.hh	/^        int64_t ru_oublock;             \/\/!< block output operations$/;"	m	struct:Linux::rusage
ru_oublock	src/kern/operatingsystem.hh	/^        int64_t ru_oublock;             \/\/!< block output operations$/;"	m	struct:OperatingSystem::__anon92
ru_oublock	src/kern/tru64/tru64.hh	/^        uint64_t ru_oublock;            \/\/!< block output operations$/;"	m	struct:Tru64::rusage
ru_stime	src/arch/arm/linux/linux.hh	/^        struct timeval ru_stime;        \/\/!< system time used$/;"	m	struct:ArmLinux32::rusage	typeref:struct:ArmLinux32::rusage::timeval
ru_stime	src/arch/arm/linux/linux.hh	/^        struct timeval ru_stime;        \/\/!< system time used$/;"	m	struct:ArmLinux64::rusage	typeref:struct:ArmLinux64::rusage::timeval
ru_stime	src/kern/linux/linux.hh	/^        struct timeval ru_stime;        \/\/!< system time used$/;"	m	struct:Linux::rusage	typeref:struct:Linux::rusage::timeval
ru_stime	src/kern/operatingsystem.hh	/^        timeval ru_stime;       \/\/!< system time used$/;"	m	struct:OperatingSystem::__anon92
ru_stime	src/kern/tru64/tru64.hh	/^        struct timeval ru_stime;        \/\/!< system time used$/;"	m	struct:Tru64::rusage	typeref:struct:Tru64::rusage::timeval
ru_utime	src/arch/arm/linux/linux.hh	/^        struct timeval ru_utime;        \/\/!< user time used$/;"	m	struct:ArmLinux32::rusage	typeref:struct:ArmLinux32::rusage::timeval
ru_utime	src/arch/arm/linux/linux.hh	/^        struct timeval ru_utime;        \/\/!< user time used$/;"	m	struct:ArmLinux64::rusage	typeref:struct:ArmLinux64::rusage::timeval
ru_utime	src/kern/linux/linux.hh	/^        struct timeval ru_utime;        \/\/!< user time used$/;"	m	struct:Linux::rusage	typeref:struct:Linux::rusage::timeval
ru_utime	src/kern/operatingsystem.hh	/^        timeval ru_utime;       \/\/!< user time used$/;"	m	struct:OperatingSystem::__anon92
ru_utime	src/kern/tru64/tru64.hh	/^        struct timeval ru_utime;        \/\/!< user time used$/;"	m	struct:Tru64::rusage	typeref:struct:Tru64::rusage::timeval
ruby_eviction_callback	src/mem/ruby/system/RubyPort.cc	/^RubyPort::ruby_eviction_callback(const Address& address)$/;"	f	class:RubyPort
ruby_hit_callback	src/mem/ruby/system/RubyPort.cc	/^RubyPort::ruby_hit_callback(PacketPtr pkt)$/;"	f	class:RubyPort
ruby_system	src/mem/ruby/network/Network.py	/^    ruby_system = Param.RubySystem("")$/;"	v	class:RubyNetwork
ruby_system	src/mem/ruby/slicc_interface/Controller.py	/^    ruby_system = Param.RubySystem("")$/;"	v	class:RubyController
ruby_system	src/mem/ruby/system/MemoryControl.py	/^    ruby_system = Param.RubySystem("")$/;"	v	class:MemoryControl
ruby_system	src/mem/ruby/system/RubyPort.hh	/^        RubySystem* ruby_system;$/;"	m	class:RubyPort::MemSlavePort
ruby_system	src/mem/ruby/system/Sequencer.py	/^    ruby_system = Param.RubySystem("")$/;"	v	class:RubyPort
ruby_system	src/mem/ruby/system/System.hh	/^        RubySystem* ruby_system;$/;"	m	class:RubySystem::RubyEvent
ruby_system	src/mem/ruby/system/System.hh	/^    RubySystem *ruby_system;$/;"	m	class:RubyStatsCallback
run	src/unittest/stattest.cc	/^StatTest::run()$/;"	f	class:StatTest
runCycles	src/cpu/inorder/cpu.hh	/^    Stats::Scalar runCycles;$/;"	m	class:InOrderCPU
runCycles	src/cpu/inorder/pipeline_stage.hh	/^    Stats::Scalar runCycles;$/;"	m	class:PipelineStage
runTimer	src/cpu/kvm/base.hh	/^    std::unique_ptr<BaseKvmTimer> runTimer;$/;"	m	class:BaseKvmCPU
rusage	src/arch/arm/linux/linux.hh	/^    struct rusage {$/;"	s	class:ArmLinux32
rusage	src/arch/arm/linux/linux.hh	/^    struct rusage {$/;"	s	class:ArmLinux64
rusage	src/kern/linux/linux.hh	/^    struct rusage {$/;"	s	class:Linux
rusage	src/kern/operatingsystem.hh	/^    } rusage;$/;"	t	class:OperatingSystem	typeref:struct:OperatingSystem::__anon92
rusage	src/kern/tru64/tru64.hh	/^    struct rusage {$/;"	s	class:Tru64
rvec	src/base/statistics.hh	/^    mutable VResult rvec;$/;"	m	class:Stats::VectorInfoProxy
rvec	src/base/stats/info.hh	/^    mutable VResult rvec;$/;"	m	class:Stats::VectorDistInfo
rw	src/arch/arm/miscregs.hh	/^        Bitfield<10> rw;  \/\/ AArch64$/;"	m	namespace:ArmISA
rw	src/arch/arm/miscregs.hh	/^        Bitfield<31>     rw;    \/\/ AArch64$/;"	m	namespace:ArmISA
rw	src/arch/arm/table_walker.hh	/^        bool rw() const$/;"	f	class:ArmISA::TableWalker::LongDescriptor
rw	src/dev/ide_ctrl.hh	/^        Bitfield<3> rw;$/;"	m	class:IdeController
rw	src/dev/intel_8254_timer.hh	/^        Bitfield<5, 4> rw;$/;"	m	class:Intel8254Timer
rw0	src/arch/x86/regs/misc.hh	/^        Bitfield<17, 16> rw0;$/;"	m	namespace:X86ISA
rw1	src/arch/x86/regs/misc.hh	/^        Bitfield<21, 20> rw1;$/;"	m	namespace:X86ISA
rw2	src/arch/x86/regs/misc.hh	/^        Bitfield<25, 24> rw2;$/;"	m	namespace:X86ISA
rw3	src/arch/x86/regs/misc.hh	/^        Bitfield<29, 28> rw3;$/;"	m	namespace:X86ISA
rwTable	src/arch/arm/table_walker.hh	/^        bool rwTable;$/;"	m	class:ArmISA::TableWalker::WalkerState
rwTable	src/arch/arm/table_walker.hh	/^        uint8_t rwTable() const$/;"	f	class:ArmISA::TableWalker::LongDescriptor
rx	src/dev/arm/kmi.hh	/^        Bitfield<0> rx;$/;"	m	class:Pl050
rxActive	src/dev/sinic.hh	/^    int rxActive;$/;"	m	class:Sinic::Device
rxAdvance	src/dev/ns_gige.hh	/^        rxAdvance$/;"	e	enum:NSGigE::RxState
rxBandwidth	src/dev/etherdevice.hh	/^    Stats::Formula rxBandwidth;$/;"	m	class:EtherDevice
rxBeginCopy	src/dev/sinic.hh	/^        rxBeginCopy,$/;"	e	enum:Sinic::Device::RxState
rxBusy	src/dev/sinic.hh	/^    VirtualList rxBusy;$/;"	m	class:Sinic::Device
rxBusyCount	src/dev/sinic.hh	/^    int rxBusyCount;$/;"	m	class:Sinic::Device
rxBytes	src/dev/etherdevice.hh	/^    Stats::Scalar rxBytes;$/;"	m	class:EtherDevice
rxCopy	src/dev/sinic.hh	/^        rxCopy,$/;"	e	enum:Sinic::Device::RxState
rxCopyDone	src/dev/sinic.hh	/^        rxCopyDone$/;"	e	enum:Sinic::Device::RxState
rxDelay	src/dev/ns_gige.hh	/^    Tick rxDelay;$/;"	m	class:NSGigE
rxDesc32	src/dev/ns_gige.hh	/^    ns_desc32 rxDesc32;$/;"	m	class:NSGigE
rxDesc64	src/dev/ns_gige.hh	/^    ns_desc64 rxDesc64;$/;"	m	class:NSGigE
rxDescCache	src/dev/i8254xGBe.hh	/^    RxDescCache rxDescCache;$/;"	m	class:IGbE
rxDescCnt	src/dev/ns_gige.hh	/^    uint32_t rxDescCnt;$/;"	m	class:NSGigE
rxDescRead	src/dev/ns_gige.hh	/^        rxDescRead,$/;"	e	enum:NSGigE::RxState
rxDescRefr	src/dev/ns_gige.hh	/^        rxDescRefr,$/;"	e	enum:NSGigE::RxState
rxDescWrite	src/dev/ns_gige.hh	/^        rxDescWrite,$/;"	e	enum:NSGigE::RxState
rxDirtyCount	src/dev/sinic.hh	/^    int rxDirtyCount;$/;"	m	class:Sinic::Device
rxDmaAddr	src/dev/ns_gige.hh	/^    Addr  rxDmaAddr;$/;"	m	class:NSGigE
rxDmaAddr	src/dev/sinic.hh	/^    Addr rxDmaAddr;$/;"	m	class:Sinic::Device
rxDmaData	src/dev/ns_gige.hh	/^    void *rxDmaData;$/;"	m	class:NSGigE
rxDmaData	src/dev/sinic.hh	/^    uint8_t *rxDmaData;$/;"	m	class:Sinic::Device
rxDmaDone	src/dev/sinic.cc	/^Device::rxDmaDone()$/;"	f	class:Sinic::Device
rxDmaEvent	src/dev/sinic.hh	/^    EventWrapper<Device, &Device::rxDmaDone> rxDmaEvent;$/;"	m	class:Sinic::Device
rxDmaFree	src/dev/ns_gige.hh	/^    bool rxDmaFree;$/;"	m	class:NSGigE
rxDmaLen	src/dev/ns_gige.hh	/^    int   rxDmaLen;$/;"	m	class:NSGigE
rxDmaLen	src/dev/sinic.hh	/^    unsigned rxDmaLen;$/;"	m	class:Sinic::Device
rxDmaPacket	src/dev/i8254xGBe.hh	/^    bool rxDmaPacket;$/;"	m	class:IGbE
rxDmaReadDone	src/dev/ns_gige.cc	/^NSGigE::rxDmaReadDone()$/;"	f	class:NSGigE
rxDmaReadEvent	src/dev/ns_gige.hh	/^    EventWrapper<NSGigE, &NSGigE::rxDmaReadDone> rxDmaReadEvent;$/;"	m	class:NSGigE
rxDmaState	src/dev/ns_gige.hh	/^    DmaState rxDmaState;$/;"	m	class:NSGigE
rxDmaWriteDone	src/dev/ns_gige.cc	/^NSGigE::rxDmaWriteDone()$/;"	f	class:NSGigE
rxDmaWriteEvent	src/dev/ns_gige.hh	/^    EventWrapper<NSGigE, &NSGigE::rxDmaWriteDone> rxDmaWriteEvent;$/;"	m	class:NSGigE
rxDoneData	src/dev/sinic.hh	/^        uint64_t rxDoneData;$/;"	m	struct:Sinic::Device::VirtualReg
rxEmpty	src/dev/sinic.hh	/^    bool rxEmpty;$/;"	m	class:Sinic::Device
rxEnable	src/dev/ns_gige.hh	/^    bool rxEnable;$/;"	m	class:NSGigE
rxEnable	src/dev/sinic.hh	/^    bool rxEnable;$/;"	m	class:Sinic::Base
rxFifo	src/dev/i8254xGBe.hh	/^    PacketFifo rxFifo;$/;"	m	class:IGbE
rxFifo	src/dev/ns_gige.hh	/^    PacketFifo rxFifo;$/;"	m	class:NSGigE
rxFifo	src/dev/sinic.hh	/^    PacketFifo rxFifo;$/;"	m	class:Sinic::Device
rxFifoBlock	src/dev/ns_gige.hh	/^        rxFifoBlock,$/;"	e	enum:NSGigE::RxState
rxFifoBlock	src/dev/sinic.hh	/^        rxFifoBlock,$/;"	e	enum:Sinic::Device::RxState
rxFifoPtr	src/dev/sinic.hh	/^    PacketFifo::iterator rxFifoPtr;$/;"	m	class:Sinic::Device
rxFilter	src/dev/ns_gige.cc	/^NSGigE::rxFilter(const EthPacketPtr &packet)$/;"	f	class:NSGigE
rxFilter	src/dev/sinic.cc	/^Device::rxFilter(const EthPacketPtr &packet)$/;"	f	class:Sinic::Device
rxFilterEnable	src/dev/ns_gige.hh	/^    bool rxFilterEnable;$/;"	m	class:NSGigE
rxFragPtr	src/dev/ns_gige.hh	/^    Addr rxFragPtr;$/;"	m	class:NSGigE
rxFragWrite	src/dev/ns_gige.hh	/^        rxFragWrite,$/;"	e	enum:NSGigE::RxState
rxHalt	src/dev/ns_gige.hh	/^    bool rxHalt;$/;"	m	class:NSGigE
rxIdle	src/dev/ns_gige.hh	/^        rxIdle,$/;"	e	enum:NSGigE::RxState
rxIdle	src/dev/sinic.hh	/^        rxIdle,$/;"	e	enum:Sinic::Device::RxState
rxIndex	src/dev/sinic.hh	/^        PacketFifo::iterator rxIndex;$/;"	m	struct:Sinic::Device::VirtualReg
rxIntrEvent	src/dev/uart8250.hh	/^    IntrEvent rxIntrEvent;$/;"	m	class:Uart8250
rxIpChecksums	src/dev/etherdevice.hh	/^    Stats::Scalar rxIpChecksums;$/;"	m	class:EtherDevice
rxKick	src/dev/ns_gige.cc	/^NSGigE::rxKick()$/;"	f	class:NSGigE
rxKick	src/dev/sinic.cc	/^Device::rxKick()$/;"	f	class:Sinic::Device
rxKickEvent	src/dev/ns_gige.hh	/^    RxKickEvent rxKickEvent;$/;"	m	class:NSGigE
rxKickTick	src/dev/ns_gige.hh	/^    Tick rxKickTick;$/;"	m	class:NSGigE
rxKickTick	src/dev/sinic.hh	/^    Tick rxKickTick;$/;"	m	class:Sinic::Device
rxList	src/dev/sinic.hh	/^    VirtualList rxList;$/;"	m	class:Sinic::Device
rxLow	src/dev/sinic.hh	/^    bool rxLow;$/;"	m	class:Sinic::Device
rxMappedCount	src/dev/sinic.hh	/^    int rxMappedCount;$/;"	m	class:Sinic::Device
rxPacket	src/dev/ns_gige.hh	/^    EthPacketPtr rxPacket;$/;"	m	class:NSGigE
rxPacketBufPtr	src/dev/ns_gige.hh	/^    uint8_t *rxPacketBufPtr;$/;"	m	class:NSGigE
rxPacketBytes	src/dev/sinic.hh	/^        unsigned rxPacketBytes;$/;"	m	struct:Sinic::Device::VirtualReg
rxPacketOffset	src/dev/sinic.hh	/^        unsigned rxPacketOffset;$/;"	m	struct:Sinic::Device::VirtualReg
rxPacketRate	src/dev/etherdevice.hh	/^    Stats::Formula rxPacketRate;$/;"	m	class:EtherDevice
rxPackets	src/dev/etherdevice.hh	/^    Stats::Scalar rxPackets;$/;"	m	class:EtherDevice
rxPktBytes	src/dev/ns_gige.hh	/^    uint32_t rxPktBytes;$/;"	m	class:NSGigE
rxQueue	src/dev/arm/kmi.hh	/^    std::list<uint8_t> rxQueue;$/;"	m	class:Pl050
rxReset	src/dev/ns_gige.cc	/^NSGigE::rxReset()$/;"	f	class:NSGigE
rxState	src/dev/ns_gige.hh	/^    RxState rxState;$/;"	m	class:NSGigE
rxState	src/dev/sinic.hh	/^    RxState rxState;$/;"	m	class:Sinic::Device
rxStateMachine	src/dev/i8254xGBe.cc	/^IGbE::rxStateMachine()$/;"	f	class:IGbE
rxTcpChecksums	src/dev/etherdevice.hh	/^    Stats::Scalar rxTcpChecksums;$/;"	m	class:EtherDevice
rxTick	src/dev/i8254xGBe.hh	/^    bool rxTick;$/;"	m	class:IGbE
rxUdpChecksums	src/dev/etherdevice.hh	/^    Stats::Scalar rxUdpChecksums;$/;"	m	class:EtherDevice
rxUnique	src/dev/sinic.hh	/^        Counter rxUnique;$/;"	m	struct:Sinic::Device::VirtualReg
rxUnique	src/dev/sinic.hh	/^    Counter rxUnique;$/;"	m	class:Sinic::Device
rxWriteDelay	src/dev/i8254xGBe.hh	/^    Tick rxWriteDelay, txReadDelay;$/;"	m	class:IGbE
rxXferLen	src/dev/ns_gige.hh	/^    uint32_t rxXferLen;$/;"	m	class:NSGigE
rx_delay	src/dev/Ethernet.py	/^    rx_delay = Param.Latency('1us', "Receive Delay")$/;"	v	class:EtherDevBase
rx_desc_cache_size	src/dev/Ethernet.py	/^    rx_desc_cache_size = Param.Int(64,$/;"	v	class:IGbE
rx_fifo_low_mark	src/dev/Ethernet.py	/^    rx_fifo_low_mark = Param.MemorySize('128kB', "rx fifo low threshold")$/;"	v	class:Sinic
rx_fifo_size	src/dev/Ethernet.py	/^    rx_fifo_size = Param.MemorySize('384kB', "Size of the rx FIFO")$/;"	v	class:IGbE
rx_fifo_size	src/dev/Ethernet.py	/^    rx_fifo_size = Param.MemorySize('512kB', "max size of rx fifo")$/;"	v	class:EtherDevBase
rx_fifo_threshold	src/dev/Ethernet.py	/^    rx_fifo_threshold = Param.MemorySize('384kB', "rx fifo high threshold")$/;"	v	class:Sinic
rx_filter	src/dev/Ethernet.py	/^    rx_filter = Param.Bool(True, "Enable Receive Filter")$/;"	v	class:EtherDevBase
rx_max_copy	src/dev/Ethernet.py	/^    rx_max_copy = Param.MemorySize('1514B', "rx max copy")$/;"	v	class:Sinic
rx_max_intr	src/dev/Ethernet.py	/^    rx_max_intr = Param.UInt32(10, "max rx packets per interrupt")$/;"	v	class:Sinic
rx_thread	src/dev/Ethernet.py	/^    rx_thread = Param.Bool(False, "dedicated kernel thread for transmit")$/;"	v	class:EtherDevBase
rx_write_delay	src/dev/Ethernet.py	/^    rx_write_delay = Param.Latency('0ns', "delay after rx dma read")$/;"	v	class:IGbE
rxbuf	src/dev/terminal.hh	/^    CircleBuf rxbuf;$/;"	m	class:Terminal
rxbusy	src/dev/arm/kmi.hh	/^        Bitfield<3> rxbusy;$/;"	m	class:Pl050
rxcfg	src/dev/ns_gige.hh	/^    uint32_t    rxcfg;$/;"	m	struct:dp_regs
rxcsum	src/dev/i8254xGBe_defs.hh	/^    RXCSUM rxcsum;$/;"	m	struct:iGbReg::Regs
rxdctl	src/dev/i8254xGBe_defs.hh	/^    RXDCTL rxdctl;$/;"	m	struct:iGbReg::Regs
rxdp	src/dev/ns_gige.hh	/^    uint32_t    rxdp;$/;"	m	struct:dp_regs
rxdp_hi	src/dev/ns_gige.hh	/^    uint32_t    rxdp_hi;$/;"	m	struct:dp_regs
rxfull	src/dev/arm/kmi.hh	/^        Bitfield<4> rxfull;$/;"	m	class:Pl050
rxim	src/dev/arm/pl011.hh	/^        Bitfield<4> rxim;$/;"	m	class:Pl011
rxint	src/dev/etherlink.hh	/^        Interface *rxint;$/;"	m	class:EtherLink::Link
rxint_enable	src/dev/arm/kmi.hh	/^        Bitfield<4> rxint_enable;$/;"	m	class:Pl050
rxparity	src/dev/arm/kmi.hh	/^        Bitfield<2> rxparity;$/;"	m	class:Pl050
s	src/arch/arm/miscregs.hh	/^        Bitfield<4> s;$/;"	m	namespace:ArmISA
s	src/arch/mips/dt_constants.hh	/^    Bitfield<22>     s;$/;"	m	namespace:MipsISA
s	src/arch/mips/pra_constants.hh	/^    Bitfield<2>     s;$/;"	m	namespace:MipsISA
s	src/arch/x86/regs/misc.hh	/^        Bitfield<44> s; \/\/ System$/;"	m	namespace:X86ISA
s	src/base/statistics.hh	/^    Stat &s;$/;"	m	class:Stats::InfoProxy
s	src/python/m5/util/jobfile.py	/^        raise ImportError, 'cannot import name conf from %s' % jobfile$/;"	i
s	src/sim/core.cc	/^Tick s;$/;"	m	namespace:SimClock::Int	file:
s	src/sim/core.cc	/^double s;$/;"	m	namespace:SimClock::Float	file:
s1	src/unittest/stattest.cc	/^    Scalar s1;$/;"	m	struct:StatTest	file:
s10	src/unittest/stattest.cc	/^    AverageDeviation s10;$/;"	m	struct:StatTest	file:
s11	src/unittest/stattest.cc	/^    Scalar s11;$/;"	m	struct:StatTest	file:
s12	src/unittest/stattest.cc	/^    Distribution s12;$/;"	m	struct:StatTest	file:
s13	src/unittest/stattest.cc	/^    VectorDistribution s13;$/;"	m	struct:StatTest	file:
s14	src/unittest/stattest.cc	/^    VectorStandardDeviation s14;$/;"	m	struct:StatTest	file:
s15	src/unittest/stattest.cc	/^    VectorAverageDeviation s15;$/;"	m	struct:StatTest	file:
s16	src/unittest/stattest.cc	/^    Vector2d s16;$/;"	m	struct:StatTest	file:
s17	src/unittest/stattest.cc	/^    Value s17;$/;"	m	struct:StatTest	file:
s18	src/unittest/stattest.cc	/^    Value s18;$/;"	m	struct:StatTest	file:
s19	src/unittest/stattest.cc	/^    Vector s19;$/;"	m	struct:StatTest	file:
s1Req	src/arch/arm/stage2_lookup.hh	/^    RequestPtr              s1Req;$/;"	m	class:ArmISA::Stage2LookUp
s1ptw	src/arch/arm/faults.hh	/^    bool s1ptw;$/;"	m	class:ArmISA::AbortFault
s2	src/unittest/stattest.cc	/^    Scalar s2;$/;"	m	struct:StatTest	file:
s20	src/unittest/stattest.cc	/^    Vector s20;$/;"	m	struct:StatTest	file:
s3	src/unittest/stattest.cc	/^    Average s3;$/;"	m	struct:StatTest	file:
s4	src/unittest/stattest.cc	/^    Scalar s4;$/;"	m	struct:StatTest	file:
s5	src/unittest/stattest.cc	/^    Vector s5;$/;"	m	struct:StatTest	file:
s6	src/unittest/stattest.cc	/^    Distribution s6;$/;"	m	struct:StatTest	file:
s7	src/unittest/stattest.cc	/^    Vector s7;$/;"	m	struct:StatTest	file:
s8	src/unittest/stattest.cc	/^    AverageVector s8;$/;"	m	struct:StatTest	file:
s9	src/unittest/stattest.cc	/^    StandardDeviation s9;$/;"	m	struct:StatTest	file:
sField	src/arch/arm/types.hh	/^        Bitfield<20>     sField;$/;"	m	namespace:ArmISA
sTickCompare	src/arch/sparc/isa.hh	/^    STickCompareEvent *sTickCompare;$/;"	m	class:SparcISA::ISA
s_flags	src/base/loader/exec_ecoff.h	/^        coff_uint   s_flags;	\/* flags *\/$/;"	m	struct:ecoff_scnhdr
s_init	src/mem/ruby/profiler/StoreTrace.hh	/^    static bool s_init;$/;"	m	class:StoreTrace
s_lnnoptr	src/base/loader/exec_ecoff.h	/^        coff_ulong  s_lnnoptr;	\/* file offset of line data *\/$/;"	m	struct:ecoff_scnhdr
s_name	src/base/loader/exec_ecoff.h	/^        char	s_name[8];	\/* name *\/$/;"	m	struct:ecoff_scnhdr
s_nlnno	src/base/loader/exec_ecoff.h	/^        coff_ushort s_nlnno;	\/* # of line entries *\/$/;"	m	struct:ecoff_scnhdr
s_nreloc	src/base/loader/exec_ecoff.h	/^        coff_ushort s_nreloc;	\/* # of relocation entries *\/$/;"	m	struct:ecoff_scnhdr
s_paddr	src/base/loader/exec_ecoff.h	/^        coff_ulong  s_paddr;	\/* physical addr? for ROMing?*\/$/;"	m	struct:ecoff_scnhdr
s_relptr	src/base/loader/exec_ecoff.h	/^        coff_ulong  s_relptr;	\/* file offset of reloc data *\/$/;"	m	struct:ecoff_scnhdr
s_scnptr	src/base/loader/exec_ecoff.h	/^        coff_ulong  s_scnptr;	\/* file offset of raw data *\/$/;"	m	struct:ecoff_scnhdr
s_size	src/base/loader/exec_ecoff.h	/^        coff_ulong  s_size;		\/* size *\/$/;"	m	struct:ecoff_scnhdr
s_store_count_ptr	src/mem/ruby/profiler/StoreTrace.cc	/^Histogram* StoreTrace::s_store_count_ptr = NULL;$/;"	m	class:StoreTrace	file:
s_store_count_ptr	src/mem/ruby/profiler/StoreTrace.hh	/^    static Histogram* s_store_count_ptr;$/;"	m	class:StoreTrace
s_store_first_to_last_ptr	src/mem/ruby/profiler/StoreTrace.cc	/^Histogram* StoreTrace::s_store_first_to_last_ptr = NULL;$/;"	m	class:StoreTrace	file:
s_store_first_to_last_ptr	src/mem/ruby/profiler/StoreTrace.hh	/^    static Histogram* s_store_first_to_last_ptr;$/;"	m	class:StoreTrace
s_store_first_to_stolen_ptr	src/mem/ruby/profiler/StoreTrace.cc	/^Histogram* StoreTrace::s_store_first_to_stolen_ptr = NULL;$/;"	m	class:StoreTrace	file:
s_store_first_to_stolen_ptr	src/mem/ruby/profiler/StoreTrace.hh	/^    static Histogram* s_store_first_to_stolen_ptr;$/;"	m	class:StoreTrace
s_store_last_to_stolen_ptr	src/mem/ruby/profiler/StoreTrace.cc	/^Histogram* StoreTrace::s_store_last_to_stolen_ptr = NULL;$/;"	m	class:StoreTrace	file:
s_store_last_to_stolen_ptr	src/mem/ruby/profiler/StoreTrace.hh	/^    static Histogram* s_store_last_to_stolen_ptr;$/;"	m	class:StoreTrace
s_total_samples	src/mem/ruby/profiler/StoreTrace.cc	/^int64 StoreTrace::s_total_samples = 0; \/\/ Total number of store$/;"	m	class:StoreTrace	file:
s_total_samples	src/mem/ruby/profiler/StoreTrace.hh	/^    static int64 s_total_samples; \/\/ Total number of store lifetimes$/;"	m	class:StoreTrace
s_vaddr	src/base/loader/exec_ecoff.h	/^        coff_ulong  s_vaddr;	\/* virtual addr? *\/$/;"	m	struct:ecoff_scnhdr
sa	src/arch/arm/miscregs.hh	/^        Bitfield<3>    sa;      \/\/ Stack Alignment Check Enable (AArch64 only)$/;"	m	namespace:ArmISA
sa	src/arch/mips/pra_constants.hh	/^    Bitfield<3,  0>  sa;$/;"	m	namespace:MipsISA
sa0	src/arch/arm/miscregs.hh	/^        Bitfield<4>    sa0;     \/\/ Stack Alignment Check Enable for EL0$/;"	m	namespace:ArmISA
safe_cast	src/base/cast.hh	/^safe_cast(U ptr)$/;"	f
samePage	src/mem/cache/prefetch/base.cc	/^BasePrefetcher::samePage(Addr a, Addr b)$/;"	f	class:BasePrefetcher
sample	src/base/statistics.hh	/^    sample(Counter val, int number)$/;"	f	class:Stats::AvgSampleStor
sample	src/base/statistics.hh	/^    sample(Counter val, int number)$/;"	f	class:Stats::DistStor
sample	src/base/statistics.hh	/^    sample(Counter val, int number)$/;"	f	class:Stats::HistStor
sample	src/base/statistics.hh	/^    sample(Counter val, int number)$/;"	f	class:Stats::SampleStor
sample	src/base/statistics.hh	/^    sample(Counter val, int number)$/;"	f	class:Stats::SparseHistStor
sample	src/base/statistics.hh	/^    sample(const U &v, int n = 1)$/;"	f	class:Stats::DistProxy
sample	src/base/statistics.hh	/^    void sample(const U &v, int n = 1) { data()->sample(v, n); }$/;"	f	class:Stats::DistBase
sample	src/base/statistics.hh	/^    void sample(const U &v, int n = 1) { data()->sample(v, n); }$/;"	f	class:Stats::SparseHistBase
sample	src/cpu/profile.cc	/^FunctionProfile::sample(ProfileNode *node, Addr pc)$/;"	f	class:FunctionProfile
samplePeriod	src/cpu/kvm/perfevent.hh	/^    PerfKvmCounterConfig &samplePeriod(uint64_t period) {$/;"	f	class:PerfKvmCounterConfig
samplePeriod	src/mem/comm_monitor.hh	/^    Time samplePeriod;$/;"	m	class:CommMonitor
samplePeriodTicks	src/mem/comm_monitor.hh	/^    Tick samplePeriodTicks;$/;"	m	class:CommMonitor
samplePeriodic	src/mem/comm_monitor.cc	/^CommMonitor::samplePeriodic()$/;"	f	class:CommMonitor
samplePeriodicEvent	src/mem/comm_monitor.hh	/^    EventWrapper<CommMonitor, &CommMonitor::samplePeriodic> samplePeriodicEvent;$/;"	m	class:CommMonitor
sampleRate	src/dev/x86/i8042.hh	/^    uint8_t sampleRate;$/;"	m	class:X86ISA::PS2Mouse
sample_period	src/mem/CommMonitor.py	/^    sample_period = Param.Clock("1ms", "Sample period for histograms")$/;"	v	class:CommMonitor
sampledRefs	src/mem/cache/tags/base.hh	/^    Stats::Scalar sampledRefs;$/;"	m	class:BaseTags
samples	src/base/statistics.hh	/^    Counter samples;$/;"	m	class:Stats::DistStor
samples	src/base/statistics.hh	/^    Counter samples;$/;"	m	class:Stats::HistStor
samples	src/base/statistics.hh	/^    Counter samples;$/;"	m	class:Stats::SampleStor
samples	src/base/statistics.hh	/^    Counter samples;$/;"	m	class:Stats::SparseHistStor
samples	src/base/stats/info.hh	/^    Counter samples;$/;"	m	struct:Stats::DistData
samples	src/base/stats/info.hh	/^    Counter samples;$/;"	m	struct:Stats::SparseHistData
sas	src/arch/arm/faults.hh	/^    uint8_t sas;$/;"	m	class:ArmISA::DataAbort
satInt	src/arch/arm/insts/static_inst.hh	/^    satInt(int32_t &res, int64_t op, int width)$/;"	f	class:ArmISA::ArmStaticInst
sataRAMLatency	src/arch/arm/miscregs.hh	/^      Bitfield<2,0>   sataRAMLatency;$/;"	m	namespace:ArmISA
satid	src/base/inet.hh	/^    uint16_t satid() const { return ntohs(opt_data.satid); }$/;"	f	struct:Net::IpOpt
satisfyCpuSideRequest	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::satisfyCpuSideRequest(PacketPtr pkt, BlkType *blk,$/;"	f	class:Cache
saturateOp	src/arch/arm/insts/static_inst.hh	/^    saturateOp(int32_t &res, int64_t op1, int64_t op2, bool sub=false)$/;"	f	class:ArmISA::ArmStaticInst
save	src/dev/disk_image.cc	/^CowDiskImage::save()$/;"	f	class:CowDiskImage
save	src/dev/disk_image.cc	/^CowDiskImage::save(const string &file)$/;"	f	class:CowDiskImage
savedReq	src/cpu/base_dyn_inst.hh	/^    RequestPtr savedReq;$/;"	m	class:BaseDynInst
savedSreqHigh	src/cpu/base_dyn_inst.hh	/^    RequestPtr savedSreqHigh;$/;"	m	class:BaseDynInst
savedSreqLow	src/cpu/base_dyn_inst.hh	/^    RequestPtr savedSreqLow;$/;"	m	class:BaseDynInst
saved_fill	src/base/cprintf.hh	/^    char saved_fill;$/;"	m	struct:cp::Print
saved_flags	src/base/cprintf.hh	/^    std::ios::fmtflags saved_flags;$/;"	m	struct:cp::Print
saved_precision	src/base/cprintf.hh	/^    int saved_precision;$/;"	m	struct:cp::Print
sbrk	src/kern/tru64/tru64_syscalls.hh	/^        sbrk = 69,$/;"	e	enum:SystemCalls::__anon102
sc	src/base/loader/coff_sym.h	/^    unsigned sc  : 5;   \/* storage class - text, data, etc *\/$/;"	m	struct:ecoff_sym
scAbs	src/base/loader/coff_symconst.h	/^#define scAbs /;"	d
scBasedVar	src/base/loader/coff_symconst.h	/^#define scBasedVar /;"	d
scBits	src/base/loader/coff_symconst.h	/^#define scBits /;"	d
scBss	src/base/loader/coff_symconst.h	/^#define scBss /;"	d
scCdbLocal	src/base/loader/coff_symconst.h	/^#define scCdbLocal /;"	d
scCdbSystem	src/base/loader/coff_symconst.h	/^#define scCdbSystem /;"	d
scCommon	src/base/loader/coff_symconst.h	/^#define scCommon /;"	d
scData	src/base/loader/coff_symconst.h	/^#define scData /;"	d
scData	src/dev/arm/rv_ctrl.hh	/^    uint32_t scData;$/;"	m	class:RealViewCtrl
scDbx	src/base/loader/coff_symconst.h	/^#define scDbx /;"	d
scFini	src/base/loader/coff_symconst.h	/^#define scFini /;"	d
scInfo	src/base/loader/coff_symconst.h	/^#define scInfo /;"	d
scInit	src/base/loader/coff_symconst.h	/^#define scInit /;"	d
scLinks	src/base/cp_annotate.hh	/^    ScCache scLinks;$/;"	m	class:CPA
scMax	src/base/loader/coff_symconst.h	/^#define scMax /;"	d
scNil	src/base/loader/coff_symconst.h	/^#define scNil /;"	d
scPData	src/base/loader/coff_symconst.h	/^#define scPData /;"	d
scRConst	src/base/loader/coff_symconst.h	/^#define scRConst /;"	d
scRData	src/base/loader/coff_symconst.h	/^#define scRData /;"	d
scRegImage	src/base/loader/coff_symconst.h	/^#define scRegImage /;"	d
scRegister	src/base/loader/coff_symconst.h	/^#define scRegister /;"	d
scSBss	src/base/loader/coff_symconst.h	/^#define scSBss /;"	d
scSCommon	src/base/loader/coff_symconst.h	/^#define scSCommon /;"	d
scSData	src/base/loader/coff_symconst.h	/^#define scSData /;"	d
scSUndefined	src/base/loader/coff_symconst.h	/^#define scSUndefined /;"	d
scText	src/base/loader/coff_symconst.h	/^#define scText /;"	d
scUndefined	src/base/loader/coff_symconst.h	/^#define scUndefined /;"	d
scUserStruct	src/base/loader/coff_symconst.h	/^#define scUserStruct /;"	d
scVar	src/base/loader/coff_symconst.h	/^#define scVar /;"	d
scVarRegister	src/base/loader/coff_symconst.h	/^#define scVarRegister /;"	d
scVariant	src/base/loader/coff_symconst.h	/^#define scVariant /;"	d
scXData	src/base/loader/coff_symconst.h	/^#define scXData /;"	d
sc_fp_control	src/kern/tru64/tru64.hh	/^        uint64_t sc_fp_control;         \/\/!< software fpcr$/;"	m	struct:Tru64::sigcontext
sc_fp_trap_pc	src/kern/tru64/tru64.hh	/^        uint64_t sc_fp_trap_pc;         \/\/!< imprecise pc$/;"	m	struct:Tru64::sigcontext
sc_fp_trigger_inst	src/kern/tru64/tru64.hh	/^        uint64_t sc_fp_trigger_inst;    \/\/!< Instruction at trigger pc$/;"	m	struct:Tru64::sigcontext
sc_fp_trigger_sum	src/kern/tru64/tru64.hh	/^        uint64_t sc_fp_trigger_sum;     \/\/!< Exception summary at trigg$/;"	m	struct:Tru64::sigcontext
sc_fpcr	src/kern/tru64/tru64.hh	/^        uint64_t sc_fpcr;               \/\/!< floating point control reg$/;"	m	struct:Tru64::sigcontext
sc_fpregs	src/kern/tru64/tru64.hh	/^        int64_t sc_fpregs[32];          \/\/!< fp regs 0 to 31$/;"	m	struct:Tru64::sigcontext
sc_kreserved1	src/kern/tru64/tru64.hh	/^        uint32_t sc_kreserved1;         \/\/!< reserved for kernel$/;"	m	struct:Tru64::sigcontext
sc_kreserved2	src/kern/tru64/tru64.hh	/^        uint32_t sc_kreserved2;         \/\/!< reserved for kernel$/;"	m	struct:Tru64::sigcontext
sc_mask	src/kern/tru64/tru64.hh	/^        int64_t sc_mask;                \/\/!< signal mask to restore$/;"	m	struct:Tru64::sigcontext
sc_onstack	src/kern/tru64/tru64.hh	/^        int64_t sc_onstack;             \/\/!< sigstack state to restore$/;"	m	struct:Tru64::sigcontext
sc_ownedfp	src/kern/tru64/tru64.hh	/^        int64_t sc_ownedfp;             \/\/!< fp has been used$/;"	m	struct:Tru64::sigcontext
sc_pc	src/kern/tru64/tru64.hh	/^        int64_t sc_pc;                  \/\/!< pc at time of signal$/;"	m	struct:Tru64::sigcontext
sc_ps	src/kern/tru64/tru64.hh	/^        int64_t sc_ps;                  \/\/!< psl to retore$/;"	m	struct:Tru64::sigcontext
sc_regs	src/kern/tru64/tru64.hh	/^        int64_t sc_regs[32];            \/\/!< processor regs 0 to 31$/;"	m	struct:Tru64::sigcontext
sc_reserved1	src/kern/tru64/tru64.hh	/^        int64_t sc_reserved1;           \/\/!< reserved for kernel$/;"	m	struct:Tru64::sigcontext
sc_sbase	src/kern/tru64/tru64.hh	/^        caddr_t sc_sbase;               \/\/!< stack start$/;"	m	struct:Tru64::sigcontext
sc_ssize	src/kern/tru64/tru64.hh	/^        size_t  sc_ssize;               \/\/!< stack size$/;"	m	struct:Tru64::sigcontext
sc_traparg_a0	src/kern/tru64/tru64.hh	/^        uint64_t sc_traparg_a0;         \/\/!< a0 argument to trap on exc$/;"	m	struct:Tru64::sigcontext
sc_traparg_a1	src/kern/tru64/tru64.hh	/^        uint64_t sc_traparg_a1;         \/\/!< a1 argument to trap on exc$/;"	m	struct:Tru64::sigcontext
sc_traparg_a2	src/kern/tru64/tru64.hh	/^        uint64_t sc_traparg_a2;         \/\/!< a2 argument to trap on exc$/;"	m	struct:Tru64::sigcontext
scalar	src/base/statistics.hh	/^    T *scalar;$/;"	m	class:Stats::ValueProxy
scalar	src/base/statistics.hh	/^    scalar(T &value)$/;"	f	class:Stats::ValueBase
scalarOp	src/arch/x86/insts/micromediaop.hh	/^        scalarOp() const$/;"	f	class:X86ISA::MediaOpBase
scale	src/arch/x86/emulenv.hh	/^        uint8_t scale;$/;"	m	struct:X86ISA::EmulEnv
scale	src/arch/x86/insts/microldstop.hh	/^        const uint8_t scale;$/;"	m	class:X86ISA::LdStOp
scale	src/arch/x86/types.hh	/^        Bitfield<7,6> scale;$/;"	m	namespace:X86ISA
scd	src/arch/arm/miscregs.hh	/^        Bitfield<7> scd;$/;"	m	namespace:ArmISA
sce	src/arch/x86/regs/misc.hh	/^        Bitfield<0> sce; \/\/ System call extensions$/;"	m	namespace:X86ISA
schedBreak	src/python/m5/debug.py	/^from internal.debug import schedBreak, setRemoteGDBPort$/;"	i
schedBreak	src/sim/debug.cc	/^schedBreak(Tick when)$/;"	f
schedEvent	src/python/m5/stats/__init__.py	/^from m5.internal.stats import schedStatEvent as schedEvent$/;"	i
schedSendEvent	src/mem/packet_queue.cc	/^PacketQueue::schedSendEvent(Tick when)$/;"	f	class:PacketQueue
schedSendTiming	src/mem/packet_queue.cc	/^PacketQueue::schedSendTiming(PacketPtr pkt, Tick when, bool send_as_snoop)$/;"	f	class:PacketQueue
schedStatEvent	src/sim/stat_control.cc	/^schedStatEvent(bool dump, bool reset, Tick when, Tick repeat)$/;"	f	namespace:Stats
schedTimingReq	src/mem/bridge.cc	/^Bridge::BridgeMasterPort::schedTimingReq(PacketPtr pkt, Tick when)$/;"	f	class:Bridge::BridgeMasterPort
schedTimingReq	src/mem/qport.hh	/^    void schedTimingReq(PacketPtr pkt, Tick when)$/;"	f	class:QueuedMasterPort
schedTimingResp	src/mem/bridge.cc	/^Bridge::BridgeSlavePort::schedTimingResp(PacketPtr pkt, Tick when)$/;"	f	class:Bridge::BridgeSlavePort
schedTimingResp	src/mem/qport.hh	/^    void schedTimingResp(PacketPtr pkt, Tick when)$/;"	f	class:QueuedSlavePort
schedTimingSnoopResp	src/mem/qport.hh	/^    void schedTimingSnoopResp(PacketPtr pkt, Tick when)$/;"	f	class:QueuedMasterPort
sched_break_pc	src/cpu/pc_event.cc	/^sched_break_pc(Addr addr)$/;"	f
sched_break_pc_sys	src/cpu/pc_event.cc	/^sched_break_pc_sys(System *sys, Addr addr)$/;"	f
sched_get_priority_max	src/kern/linux/linux_syscalls.hh	/^    sched_get_priority_max = 177,$/;"	e	enum:SystemCalls::__anon87
sched_get_priority_min	src/kern/linux/linux_syscalls.hh	/^    sched_get_priority_min = 178,$/;"	e	enum:SystemCalls::__anon87
sched_getaffinity	src/kern/linux/linux_syscalls.hh	/^    sched_getaffinity = 179,$/;"	e	enum:SystemCalls::__anon87
sched_getparam	src/kern/linux/linux_syscalls.hh	/^    sched_getparam = 180,$/;"	e	enum:SystemCalls::__anon87
sched_getscheduler	src/kern/linux/linux_syscalls.hh	/^    sched_getscheduler = 181,$/;"	e	enum:SystemCalls::__anon87
sched_rr_get_interval	src/kern/linux/linux_syscalls.hh	/^    sched_rr_get_interval = 182,$/;"	e	enum:SystemCalls::__anon87
sched_setaffinity	src/kern/linux/linux_syscalls.hh	/^    sched_setaffinity = 183,$/;"	e	enum:SystemCalls::__anon87
sched_setparam	src/kern/linux/linux_syscalls.hh	/^    sched_setparam = 184,$/;"	e	enum:SystemCalls::__anon87
sched_setscheduler	src/kern/linux/linux_syscalls.hh	/^    sched_setscheduler = 185,$/;"	e	enum:SystemCalls::__anon87
sched_yield	src/kern/linux/linux_syscalls.hh	/^    sched_yield = 186,$/;"	e	enum:SystemCalls::__anon87
schedule	src/base/pollevent.cc	/^PollQueue::schedule(PollEvent *event)$/;"	f	class:PollQueue
schedule	src/cpu/pc_event.cc	/^PCEventQueue::schedule(PCEvent *event)$/;"	f	class:PCEventQueue
schedule	src/cpu/simple/timing.cc	/^TimingSimpleCPU::TimingCPUPort::TickEvent::schedule(PacketPtr _pkt, Tick t)$/;"	f	class:TimingSimpleCPU::TimingCPUPort::TickEvent
schedule	src/sim/eventq.hh	/^    schedule(Event &event, Tick when)$/;"	f	class:EventManager
schedule	src/sim/eventq.hh	/^    schedule(Event *event, Tick when)$/;"	f	class:EventManager
schedule	src/sim/eventq_impl.hh	/^EventQueue::schedule(Event *event, Tick when, bool global)$/;"	f	class:EventQueue
schedule	src/sim/global_event.cc	/^void BaseGlobalEvent::schedule(Tick when)$/;"	f	class:BaseGlobalEvent
scheduleActivateThreadEvent	src/cpu/o3/cpu.hh	/^    scheduleActivateThreadEvent(ThreadID tid, Cycles delay)$/;"	f	class:FullO3CPU
scheduleCP0Update	src/arch/mips/isa.cc	/^ISA::scheduleCP0Update(BaseCPU *cpu, Cycles delay)$/;"	f	class:MipsISA::ISA
scheduleCpuEvent	src/cpu/inorder/cpu.cc	/^InOrderCPU::scheduleCpuEvent(CPUEventType c_event, Fault fault,$/;"	f	class:InOrderCPU
scheduleDeallocateContext	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::scheduleDeallocateContext(ThreadID tid, bool remove,$/;"	f	class:FullO3CPU
scheduleDeallocateContextEvent	src/cpu/o3/cpu.hh	/^    scheduleDeallocateContextEvent(ThreadID tid, bool remove, Cycles delay)$/;"	f	class:FullO3CPU
scheduleEvent	src/arch/mips/isa.cc	/^ISA::CP0Event::scheduleEvent(Cycles delay)$/;"	f	class:MipsISA::ISA::CP0Event
scheduleEvent	src/cpu/inorder/cpu.cc	/^InOrderCPU::CPUEvent::scheduleEvent(Cycles delay)$/;"	f	class:InOrderCPU::CPUEvent
scheduleEvent	src/cpu/inorder/resource.cc	/^Resource::scheduleEvent(DynInstPtr inst, Cycles delay)$/;"	f	class:Resource
scheduleEvent	src/cpu/inorder/resource.cc	/^Resource::scheduleEvent(int slot_idx, Cycles delay)$/;"	f	class:Resource
scheduleEvent	src/cpu/inorder/resource.cc	/^ResourceEvent::scheduleEvent(Cycles delay)$/;"	f	class:ResourceEvent
scheduleEvent	src/cpu/inorder/resource_pool.9stage.cc	/^ResourcePool::ResPoolEvent::scheduleEvent(int delay)$/;"	f	class:ResourcePool::ResPoolEvent
scheduleEvent	src/cpu/inorder/resource_pool.9stage.cc	/^ResourcePool::scheduleEvent(InOrderCPU::CPUEventType e_type, DynInstPtr inst,$/;"	f	class:ResourcePool
scheduleEvent	src/cpu/inorder/resource_pool.cc	/^ResourcePool::ResPoolEvent::scheduleEvent(Cycles delay)$/;"	f	class:ResourcePool::ResPoolEvent
scheduleEvent	src/cpu/inorder/resource_pool.cc	/^ResourcePool::scheduleEvent(InOrderCPU::CPUEventType e_type, DynInstPtr inst,$/;"	f	class:ResourcePool
scheduleEvent	src/mem/ruby/common/Consumer.cc	/^Consumer::scheduleEvent(Cycles timeDelta)$/;"	f	class:Consumer
scheduleEventAbsolute	src/mem/ruby/common/Consumer.cc	/^Consumer::scheduleEventAbsolute(Tick evt_time)$/;"	f	class:Consumer
scheduleExecution	src/cpu/inorder/resource.cc	/^Resource::scheduleExecution(int slot_num)$/;"	f	class:Resource
scheduleInstStop	src/cpu/base.cc	/^BaseCPU::scheduleInstStop(ThreadID tid, Counter insts, const char *cause)$/;"	f	class:BaseCPU
scheduleIntr	src/dev/mc146818.cc	/^MC146818::RTCEvent::scheduleIntr()$/;"	f	class:MC146818::RTCEvent
scheduleIntr	src/dev/uart8250.cc	/^Uart8250::IntrEvent::scheduleIntr()$/;"	f	class:Uart8250::IntrEvent
scheduleLoadStop	src/cpu/base.cc	/^BaseCPU::scheduleLoadStop(ThreadID tid, Counter loads, const char *cause)$/;"	f	class:BaseCPU
scheduleNextReq	src/mem/dram_ctrl.cc	/^DRAMCtrl::scheduleNextReq()$/;"	f	class:DRAMCtrl
scheduleNonSpec	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::scheduleNonSpec(const InstSeqNum &inst)$/;"	f	class:InstructionQueue
scheduleNonSpec	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::InstQueue::scheduleNonSpec(const InstSeqNum &sn)$/;"	f	class:BackEnd::InstQueue
scheduleNonSpec	src/cpu/ozone/inst_queue_impl.hh	/^InstQueue<Impl>::scheduleNonSpec(const InstSeqNum &inst)$/;"	f	class:InstQueue
scheduleOutputLink	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.cc	/^NetworkInterface_d::scheduleOutputLink()$/;"	f	class:NetworkInterface_d
scheduleOutputLink	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.cc	/^NetworkInterface::scheduleOutputLink()$/;"	f	class:NetworkInterface
scheduleOutputLinks	src/mem/ruby/network/garnet/flexible-pipeline/Router.cc	/^Router::scheduleOutputLinks()$/;"	f	class:Router
scheduleReadyInsts	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::scheduleReadyInsts()$/;"	f	class:InstructionQueue
scheduleReadyInsts	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::InstQueue::scheduleReadyInsts()$/;"	f	class:BackEnd::InstQueue
scheduleReadyInsts	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::scheduleReadyInsts()$/;"	f	class:BackEnd
scheduleReadyInsts	src/cpu/ozone/inst_queue_impl.hh	/^InstQueue<Impl>::scheduleReadyInsts()$/;"	f	class:InstQueue
scheduleSend	src/mem/packet_queue.cc	/^PacketQueue::scheduleSend(Tick time)$/;"	f	class:PacketQueue
scheduleTickEvent	src/cpu/inorder/cpu.hh	/^    void scheduleTickEvent(Cycles delay)$/;"	f	class:InOrderCPU
scheduleTickEvent	src/cpu/o3/cpu.hh	/^    void scheduleTickEvent(Cycles delay)$/;"	f	class:FullO3CPU
scheduleTickEvent	src/cpu/ozone/cpu.hh	/^    void scheduleTickEvent(int delay)$/;"	f	class:OzoneCPU
scheduled	src/sim/eventq.hh	/^    bool scheduled() const { return flags.isSet(Scheduled); }$/;"	f	class:Event
scheduled	src/sim/global_event.hh	/^    bool scheduled() const$/;"	f	class:BaseGlobalEvent
sci_fake	src/dev/arm/RealView.py	/^    sci_fake      = AmbaFake(pio_addr=0x1000e000)$/;"	v	class:RealViewEB
sci_fake	src/dev/arm/RealView.py	/^    sci_fake      = AmbaFake(pio_addr=0x1000e000)$/;"	v	class:RealViewPBX
scientific	src/base/cprintf_formats.hh	/^    enum { best, fixed, scientific } float_format;$/;"	e	enum:cp::Format::__anon39
scoreboard	src/cpu/o3/cpu.hh	/^    Scoreboard scoreboard;$/;"	m	class:FullO3CPU
scoreboard	src/cpu/o3/iew.hh	/^    Scoreboard* scoreboard;$/;"	m	class:DefaultIEW
scoreboard	src/cpu/o3/rename.hh	/^    Scoreboard *scoreboard;$/;"	m	class:DefaultRename
scr	src/arch/arm/table_walker.hh	/^        SCR scr;$/;"	m	class:ArmISA::TableWalker::WalkerState
scr	src/arch/arm/tlb.hh	/^    SCR scr;$/;"	m	class:ArmISA::TLB
scratchPad	src/arch/sparc/isa.hh	/^    uint64_t scratchPad[8];$/;"	m	class:SparcISA::ISA
scs	src/arch/mips/mt_constants.hh	/^    Bitfield<18>     scs;$/;"	m	namespace:MipsISA
sctlr	src/arch/arm/table_walker.hh	/^        SCTLR sctlr;$/;"	m	class:ArmISA::TableWalker::WalkerState
sctlr	src/arch/arm/table_walker.hh	/^    SCTLR sctlr;$/;"	m	class:ArmISA::TableWalker
sctlr	src/arch/arm/tlb.hh	/^    SCTLR sctlr;$/;"	m	class:ArmISA::TLB
sderc	src/dev/pcireg.h	/^        Bitfield<19>    sderc;$/;"	m	struct:PXCAP
sec	src/base/time.hh	/^    time_t sec() const { return _time.tv_sec; }$/;"	f	class:Time
sec	src/base/time.hh	/^    void sec(time_t sec) { _time.tv_sec = sec; }$/;"	f	class:Time
sec	src/dev/mc146818.hh	/^            uint8_t sec;$/;"	m	struct:MC146818::__anon78::__anon79
secContext	src/arch/sparc/isa.hh	/^    uint16_t secContext;$/;"	m	class:SparcISA::ISA
secDataAddr	src/arch/arm/linux/system.hh	/^    Addr secDataAddr;$/;"	m	class:LinuxArmSystem
secDataPtrAddr	src/arch/arm/linux/system.hh	/^    Addr secDataPtrAddr;$/;"	m	class:LinuxArmSystem
sec_alrm	src/dev/mc146818.hh	/^            uint8_t sec_alrm;$/;"	m	struct:MC146818::__anon78::__anon79
sec_count	src/dev/ide_disk.hh	/^    uint8_t sec_count;$/;"	m	struct:CommandReg
sec_num	src/dev/ide_disk.hh	/^    uint8_t sec_num;$/;"	m	struct:CommandReg
secondLastMissAddr	src/mem/cache/prefetch/ghb.hh	/^    Addr secondLastMissAddr[Max_Masters];$/;"	m	class:GHBPrefetcher
secondLastMissIsSecure	src/mem/cache/prefetch/ghb.hh	/^    bool secondLastMissIsSecure[Max_Masters];$/;"	m	class:GHBPrefetcher
secondary	src/dev/ide_ctrl.hh	/^    Channel secondary;$/;"	m	class:IdeController
secondaryTiming	src/dev/ide_ctrl.hh	/^    uint16_t primaryTiming, secondaryTiming;$/;"	m	class:IdeController
seconds	src/dev/etherdump.cc	/^    uint32_t seconds;$/;"	m	struct:pcap_pkthdr	file:
seconds_since_epoch	src/sim/syscall_emul.hh	/^const unsigned seconds_since_epoch = 1000000000;$/;"	v
sectionExists	src/base/inifile.cc	/^IniFile::sectionExists(const string &sectionName) const$/;"	f	class:IniFile
sectionExists	src/base/loader/elf_object.cc	/^ElfObject::sectionExists(string sec)$/;"	f	class:ElfObject
sectionExists	src/sim/serialize.cc	/^Checkpoint::sectionExists(const string &section)$/;"	f	class:Checkpoint
sectionNames	src/base/loader/elf_object.hh	/^    std::set<std::string> sectionNames;$/;"	m	class:ElfObject
secure	src/arch/arm/table_walker.hh	/^        bool secure(bool have_security, WalkerState *currState) const$/;"	f	class:ArmISA::TableWalker::L1Descriptor
secure	src/arch/arm/table_walker.hh	/^        bool secure(bool have_security, WalkerState *currState) const$/;"	f	class:ArmISA::TableWalker::L2Descriptor
secure	src/arch/arm/table_walker.hh	/^        bool secure(bool have_security, WalkerState *currState) const$/;"	f	class:ArmISA::TableWalker::LongDescriptor
secureLookup	src/arch/arm/table_walker.hh	/^        bool secureLookup;$/;"	m	class:ArmISA::TableWalker::WalkerState
secureTable	src/arch/arm/table_walker.hh	/^        bool secureTable() const$/;"	f	class:ArmISA::TableWalker::LongDescriptor
security	src/kern/tru64/tru64_syscalls.hh	/^        security = 222,$/;"	e	enum:SystemCalls::__anon102
sed	src/arch/arm/miscregs.hh	/^        Bitfield<8>    sed;     \/\/ SETEND disable$/;"	m	namespace:ArmISA
seg	src/arch/x86/emulenv.hh	/^        SegmentRegIndex seg;$/;"	m	struct:X86ISA::EmulEnv
seg	src/arch/x86/types.hh	/^        Bitfield<2,0> seg;$/;"	m	namespace:X86ISA
seg_32bit	src/arch/x86/linux/syscalls.cc	/^    Bitfield<0> seg_32bit;$/;"	v
seg_not_present	src/arch/x86/linux/syscalls.cc	/^    Bitfield<5> seg_not_present;$/;"	v
segleft	src/base/inet.hh	/^    uint8_t segleft;$/;"	m	struct:Net::ip6_opt_routing_type2
segment	src/arch/x86/insts/microldstop.hh	/^        const uint8_t segment;$/;"	m	class:X86ISA::LdStOp
sel	src/arch/arm/miscregs.hh	/^      Bitfield<4, 0> sel;$/;"	m	namespace:ArmISA
sel	src/dev/intel_8254_timer.hh	/^        Bitfield<7, 6> sel;$/;"	m	class:Intel8254Timer
select	src/dev/ide_ctrl.hh	/^        select(bool selSlave)$/;"	f	struct:IdeController::Channel
select	src/kern/linux/linux_syscalls.hh	/^    select = 187,$/;"	e	enum:SystemCalls::__anon87
select	src/kern/tru64/tru64_syscalls.hh	/^        select = 93,$/;"	e	enum:SystemCalls::__anon102
selectBit	src/dev/ide_ctrl.hh	/^        bool selectBit;$/;"	m	struct:IdeController::Channel
select_outvc	src/mem/ruby/network/garnet/fixed-pipeline/VCallocator_d.cc	/^VCallocator_d::select_outvc(int inport_iter, int invc_iter)$/;"	f	class:VCallocator_d
selected	src/dev/ide_ctrl.hh	/^        IdeDisk *selected;$/;"	m	struct:IdeController::Channel
selector	src/arch/x86/regs/misc.hh	/^        Bitfield<31, 16> selector; \/\/ Target Code-Segment Selector$/;"	m	namespace:X86ISA
self	src/base/statistics.hh	/^    Derived &self() { return *static_cast<Derived *>(this); }$/;"	f	class:Stats::DataWrap
selfDelete	src/arch/arm/stage2_lookup.hh	/^    bool                    selfDelete;$/;"	m	class:ArmISA::Stage2LookUp
semctl	src/kern/tru64/tru64_syscalls.hh	/^        semctl = 204,$/;"	e	enum:SystemCalls::__anon102
semget	src/kern/tru64/tru64_syscalls.hh	/^        semget = 205,$/;"	e	enum:SystemCalls::__anon102
semop	src/kern/tru64/tru64_syscalls.hh	/^        semop = 206,$/;"	e	enum:SystemCalls::__anon102
semop_fast	src/kern/tru64/tru64_syscalls.hh	/^        semop_fast = 62,$/;"	e	enum:SystemCalls::__anon103
send	src/base/remote_gdb.cc	/^BaseRemoteGDB::send(const char *bp)$/;"	f	class:BaseRemoteGDB
send	src/dev/etherbus.cc	/^EtherBus::send(EtherInt *sndr, EthPacketPtr &pkt)$/;"	f	class:EtherBus
sendAsSnoop	src/mem/packet_queue.hh	/^        bool sendAsSnoop; \/\/\/< Should it be sent as a snoop or not$/;"	m	class:PacketQueue::DeferredPacket
sendAtomic	src/mem/port.cc	/^MasterPort::sendAtomic(PacketPtr pkt)$/;"	f	class:MasterPort
sendAtomicSnoop	src/mem/port.cc	/^SlavePort::sendAtomicSnoop(PacketPtr pkt)$/;"	f	class:SlavePort
sendData	src/cpu/simple/timing.cc	/^TimingSimpleCPU::sendData(RequestPtr req, uint8_t *data, uint64_t *res,$/;"	f	class:TimingSimpleCPU
sendDeferredPacket	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::MemSidePacketQueue::sendDeferredPacket()$/;"	f	class:Cache::MemSidePacketQueue
sendDeferredPacket	src/mem/packet_queue.cc	/^PacketQueue::sendDeferredPacket()$/;"	f	class:PacketQueue
sendDma	src/dev/dma_device.cc	/^DmaPort::sendDma()$/;"	f	class:DmaPort
sendDone	src/dev/etherlink.hh	/^        void sendDone() { peer->sendDone(); }$/;"	f	class:EtherLink::Interface
sendDone	src/dev/ethertap.cc	/^EtherTap::sendDone()$/;"	f	class:EtherTap
sendDone	src/dev/ethertap.hh	/^    virtual void sendDone() { tap->sendDone(); }$/;"	f	class:EtherTapInt
sendDone	src/dev/i8254xGBe.hh	/^    virtual void sendDone() { dev->ethTxDone(); }$/;"	f	class:IGbEInt
sendDone	src/dev/ns_gige.hh	/^    virtual void sendDone() { dev->transferDone(); }$/;"	f	class:NSGigEInt
sendDone	src/dev/sinic.hh	/^    virtual void sendDone() { dev->transferDone(); }$/;"	f	class:Sinic::Interface
sendError	src/base/vnc/vncserver.cc	/^VncServer::sendError(const char* error_msg)$/;"	f	class:VncServer
sendEvent	src/dev/dma_device.hh	/^    EventWrapper<DmaPort, &DmaPort::sendDma> sendEvent;$/;"	m	class:DmaPort
sendEvent	src/mem/bridge.hh	/^                     &BridgeMasterPort::trySendTiming> sendEvent;$/;"	m	class:Bridge::BridgeMasterPort
sendEvent	src/mem/bridge.hh	/^                     &BridgeSlavePort::trySendTiming> sendEvent;$/;"	m	class:Bridge::BridgeSlavePort
sendEvent	src/mem/packet_queue.hh	/^    EventWrapper<PacketQueue, &PacketQueue::processSendEvent> sendEvent;$/;"	m	class:PacketQueue
sendFetch	src/cpu/simple/timing.cc	/^TimingSimpleCPU::sendFetch(Fault fault, RequestPtr req, ThreadContext *tc)$/;"	f	class:TimingSimpleCPU
sendFrameBufferResized	src/base/vnc/vncserver.cc	/^VncServer::sendFrameBufferResized()$/;"	f	class:VncServer
sendFrameBufferUpdate	src/base/vnc/vncserver.cc	/^VncServer::sendFrameBufferUpdate()$/;"	f	class:VncServer
sendFunctional	src/mem/port.cc	/^MasterPort::sendFunctional(PacketPtr pkt)$/;"	f	class:MasterPort
sendFunctionalSnoop	src/mem/port.cc	/^SlavePort::sendFunctionalSnoop(PacketPtr pkt)$/;"	f	class:SlavePort
sendInstToNextStage	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::sendInstToNextStage(DynInstPtr inst)$/;"	f	class:PipelineStage
sendInt	src/dev/arm/gic_pl390.cc	/^Pl390::sendInt(uint32_t num)$/;"	f	class:Pl390
sendMessage	src/dev/x86/intdev.cc	/^X86ISA::IntDevice::IntMasterPort::sendMessage(ApicList apics,$/;"	f	class:X86ISA::IntDevice::IntMasterPort
sendPPInt	src/dev/arm/gic_pl390.cc	/^Pl390::sendPPInt(uint32_t num, uint32_t cpu)$/;"	f	class:Pl390
sendPacket	src/dev/etherint.hh	/^    bool sendPacket(EthPacketPtr packet)$/;"	f	class:EtherInt
sendPackets	src/arch/x86/pagetable_walker.cc	/^Walker::WalkerState::sendPackets()$/;"	f	class:X86ISA::Walker::WalkerState
sendPkt	src/cpu/testers/memtest/memtest.cc	/^MemTest::sendPkt(PacketPtr pkt) {$/;"	f	class:MemTest
sendPkt	src/cpu/testers/networktest/networktest.cc	/^NetworkTest::sendPkt(PacketPtr pkt)$/;"	f	class:NetworkTest
sendRangeChange	src/mem/port.hh	/^    void sendRangeChange() const { _masterPort->recvRangeChange(); }$/;"	f	class:SlavePort
sendResponse	src/mem/dramsim2.cc	/^DRAMSim2::sendResponse()$/;"	f	class:DRAMSim2
sendResponseEvent	src/mem/dramsim2.hh	/^    EventWrapper<DRAMSim2, &DRAMSim2::sendResponse> sendResponseEvent;$/;"	m	class:DRAMSim2
sendRetry	src/mem/coherent_bus.hh	/^        void sendRetry() {$/;"	f	class:CoherentBus::SnoopRespPort
sendRetry	src/mem/port.cc	/^MasterPort::sendRetry()$/;"	f	class:MasterPort
sendRetry	src/mem/port.cc	/^SlavePort::sendRetry()$/;"	f	class:SlavePort
sendRetryEvent	src/mem/cache/base.hh	/^        EventWrapper<SlavePort, &SlavePort::sendRetry> sendRetryEvent;$/;"	m	class:BaseCache::CacheSlavePort
sendServerInit	src/base/vnc/vncserver.cc	/^VncServer::sendServerInit()$/;"	f	class:VncServer
sendSplitData	src/cpu/simple/timing.cc	/^TimingSimpleCPU::sendSplitData(RequestPtr req1, RequestPtr req2,$/;"	f	class:TimingSimpleCPU
sendStore	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::sendStore(PacketPtr data_pkt)$/;"	f	class:LSQUnit
sendTiming	src/arch/x86/pagetable_walker.cc	/^bool Walker::sendTiming(WalkerState* sendingState, PacketPtr pkt)$/;"	f	class:X86ISA::Walker
sendTiming	src/mem/packet_queue.cc	/^MasterPacketQueue::sendTiming(PacketPtr pkt, bool send_as_snoop)$/;"	f	class:MasterPacketQueue
sendTiming	src/mem/packet_queue.cc	/^SlavePacketQueue::sendTiming(PacketPtr pkt, bool send_as_snoop)$/;"	f	class:SlavePacketQueue
sendTimingReq	src/mem/port.cc	/^MasterPort::sendTimingReq(PacketPtr pkt)$/;"	f	class:MasterPort
sendTimingResp	src/mem/port.cc	/^SlavePort::sendTimingResp(PacketPtr pkt)$/;"	f	class:SlavePort
sendTimingSnoopReq	src/mem/port.cc	/^SlavePort::sendTimingSnoopReq(PacketPtr pkt)$/;"	f	class:SlavePort
sendTimingSnoopResp	src/mem/port.cc	/^MasterPort::sendTimingSnoopResp(PacketPtr pkt)$/;"	f	class:MasterPort
sendUpdate	src/base/vnc/vncserver.hh	/^    bool sendUpdate;$/;"	m	class:VncServer
sender	src/dev/etherbus.hh	/^    EtherInt *sender;$/;"	m	class:EtherBus
senderState	src/mem/packet.hh	/^    SenderState *senderState;$/;"	m	class:Packet
senderWalk	src/arch/x86/pagetable_walker.hh	/^            WalkerState * senderWalk;$/;"	m	struct:X86ISA::Walker::WalkerSenderState
sendfile	src/kern/linux/linux_syscalls.hh	/^    sendfile = 188,$/;"	e	enum:SystemCalls::__anon87
sendfile	src/kern/tru64/tru64_syscalls.hh	/^        sendfile = 266,$/;"	e	enum:SystemCalls::__anon102
sendfile64	src/kern/linux/linux_syscalls.hh	/^    sendfile64 = 189,$/;"	e	enum:SystemCalls::__anon87
sendmsg	src/kern/tru64/tru64_syscalls.hh	/^        sendmsg = 28,$/;"	e	enum:SystemCalls::__anon102
sendto	src/kern/tru64/tru64_syscalls.hh	/^        sendto = 133,$/;"	e	enum:SystemCalls::__anon102
separatorString	src/base/statistics.cc	/^std::string Info::separatorString = "::";$/;"	m	class:Stats::Info	file:
separatorString	src/base/stats/info.hh	/^    static std::string separatorString;$/;"	m	class:Stats::Info
separatorString	src/base/stats/text.cc	/^    string separatorString;$/;"	m	struct:Stats::DistPrint	file:
separatorString	src/base/stats/text.cc	/^    string separatorString;$/;"	m	struct:Stats::SparseHistPrint	file:
separatorString	src/base/stats/text.cc	/^    string separatorString;$/;"	m	struct:Stats::VectorPrint	file:
seq	src/base/inet.hh	/^    uint32_t seq() const { return ntohl(th_seq); }$/;"	f	struct:Net::TcpHdr
seq	src/base/inet.hh	/^    void seq(uint32_t _seq) { th_seq = htonl(_seq); }$/;"	f	struct:Net::TcpHdr
seqNum	src/cpu/base_dyn_inst.hh	/^    InstSeqNum seqNum;$/;"	m	class:BaseDynInst
seqNum	src/cpu/inorder/inorder_dyn_inst.hh	/^    InstSeqNum seqNum;$/;"	m	class:InOrderDynInst
seqNum	src/cpu/inorder/resource.hh	/^    InstSeqNum seqNum;$/;"	m	class:ResourceRequest
seqNum	src/cpu/inorder/resource_pool.hh	/^        InstSeqNum seqNum;$/;"	m	class:ResourcePool::ResPoolEvent
seqNum	src/cpu/pred/bpred_unit.hh	/^        InstSeqNum seqNum;$/;"	m	struct:BPredUnit::PredictorHistory
sequentialAccess	src/mem/cache/tags/lru.hh	/^    const bool sequentialAccess;$/;"	m	class:LRU
sequential_access	src/mem/cache/BaseCache.py	/^    sequential_access = Param.Bool(False,$/;"	v	class:BaseCache
sequential_access	src/mem/cache/tags/Tags.py	/^    sequential_access = Param.Bool(Parent.sequential_access,$/;"	v	class:LRU
serialSquash	src/mem/cache/prefetch/base.hh	/^    const bool serialSquash;$/;"	m	class:BasePrefetcher
serial_squash	src/mem/cache/prefetch/Prefetcher.py	/^    serial_squash = Param.Bool(False,$/;"	v	class:BasePrefetcher
serialize	src/arch/alpha/interrupts.hh	/^    serialize(std::ostream &os)$/;"	f	class:AlphaISA::Interrupts
serialize	src/arch/alpha/isa.cc	/^ISA::serialize(std::ostream &os)$/;"	f	class:AlphaISA::ISA
serialize	src/arch/alpha/kernel_stats.cc	/^Statistics::serialize(ostream &os)$/;"	f	class:AlphaISA::Kernel::Statistics
serialize	src/arch/alpha/pagetable.cc	/^TlbEntry::serialize(std::ostream &os)$/;"	f	class:AlphaISA::TlbEntry
serialize	src/arch/alpha/tlb.cc	/^TLB::serialize(ostream &os)$/;"	f	class:AlphaISA::TLB
serialize	src/arch/arm/interrupts.hh	/^    serialize(std::ostream &os)$/;"	f	class:ArmISA::Interrupts
serialize	src/arch/arm/isa.hh	/^        void serialize(std::ostream &os)$/;"	f	class:ArmISA::ISA
serialize	src/arch/arm/pagetable.hh	/^    serialize(std::ostream &os)$/;"	f	struct:ArmISA::TlbEntry
serialize	src/arch/arm/pagetable.hh	/^    void serialize(std::ostream &os)$/;"	f	struct:ArmISA::PTE
serialize	src/arch/arm/tlb.cc	/^TLB::serialize(ostream &os)$/;"	f	class:TLB
serialize	src/arch/arm/types.hh	/^        serialize(std::ostream &os)$/;"	f	class:ArmISA::PCState
serialize	src/arch/generic/types.hh	/^    serialize(std::ostream &os)$/;"	f	class:GenericISA::DelaySlotPCState
serialize	src/arch/generic/types.hh	/^    serialize(std::ostream &os)$/;"	f	class:GenericISA::DelaySlotUPCState
serialize	src/arch/generic/types.hh	/^    serialize(std::ostream &os)$/;"	f	class:GenericISA::PCStateBase
serialize	src/arch/generic/types.hh	/^    serialize(std::ostream &os)$/;"	f	class:GenericISA::UPCState
serialize	src/arch/mips/interrupts.hh	/^    serialize(std::ostream &os)$/;"	f	class:MipsISA::Interrupts
serialize	src/arch/mips/pagetable.cc	/^PTE::serialize(std::ostream &os)$/;"	f	class:MipsISA::PTE
serialize	src/arch/mips/pagetable.hh	/^    void serialize(std::ostream &os)$/;"	f	struct:MipsISA::TlbEntry
serialize	src/arch/mips/tlb.cc	/^TLB::serialize(ostream &os)$/;"	f	class:TLB
serialize	src/arch/power/pagetable.cc	/^PTE::serialize(std::ostream &os)$/;"	f	class:PowerISA::PTE
serialize	src/arch/power/tlb.cc	/^TLB::serialize(ostream &os)$/;"	f	class:TLB
serialize	src/arch/power/tlb.hh	/^    serialize(std::ostream &os)$/;"	f	struct:PowerISA::TlbEntry
serialize	src/arch/sparc/interrupts.hh	/^    serialize(std::ostream &os)$/;"	f	class:SparcISA::Interrupts
serialize	src/arch/sparc/isa.cc	/^ISA::serialize(std::ostream &os)$/;"	f	class:SparcISA::ISA
serialize	src/arch/sparc/pagetable.cc	/^TlbEntry::serialize(std::ostream &os)$/;"	f	class:SparcISA::TlbEntry
serialize	src/arch/sparc/tlb.cc	/^TLB::serialize(std::ostream &os)$/;"	f	class:SparcISA::TLB
serialize	src/arch/x86/interrupts.cc	/^X86ISA::Interrupts::serialize(std::ostream &os)$/;"	f	class:X86ISA::Interrupts
serialize	src/arch/x86/isa.cc	/^ISA::serialize(std::ostream & os)$/;"	f	class:X86ISA::ISA
serialize	src/arch/x86/pagetable.cc	/^TlbEntry::serialize(std::ostream &os)$/;"	f	class:X86ISA::TlbEntry
serialize	src/arch/x86/tlb.cc	/^TLB::serialize(std::ostream &os)$/;"	f	class:X86ISA::TLB
serialize	src/arch/x86/types.hh	/^        serialize(std::ostream &os)$/;"	f	class:X86ISA::PCState
serialize	src/base/cp_annotate.cc	/^CPA::AnnotateData::serialize(std::ostream &os)$/;"	f	class:CPA::AnnotateData
serialize	src/base/cp_annotate.cc	/^CPA::serialize(std::ostream &os)$/;"	f	class:CPA
serialize	src/base/loader/symtab.cc	/^SymbolTable::serialize(const string &base, ostream &os)$/;"	f	class:SymbolTable
serialize	src/base/pollevent.cc	/^PollEvent::serialize(ostream &os)$/;"	f	class:PollEvent
serialize	src/base/random.cc	/^Random::serialize(const string &base, ostream &os)$/;"	f	class:Random
serialize	src/base/time.cc	/^Time::serialize(const std::string &base, ostream &os)$/;"	f	class:Time
serialize	src/cpu/base.cc	/^BaseCPU::serialize(std::ostream &os)$/;"	f	class:BaseCPU
serialize	src/cpu/checker/cpu.cc	/^CheckerCPU::serialize(ostream &os)$/;"	f	class:CheckerCPU
serialize	src/cpu/checker/thread_context.hh	/^    void serialize(std::ostream &os) { actualTC->serialize(os); }$/;"	f	class:CheckerThreadContext
serialize	src/cpu/o3/thread_state.hh	/^    void serialize(std::ostream &os)$/;"	f	struct:O3ThreadState
serialize	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::OzoneTC::serialize(std::ostream &os)$/;"	f	class:OzoneCPU::OzoneTC
serialize	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::serialize(std::ostream &os)$/;"	f	class:OzoneCPU
serialize	src/cpu/simple_thread.cc	/^SimpleThread::serialize(ostream &os)$/;"	f	class:SimpleThread
serialize	src/cpu/testers/traffic_gen/traffic_gen.cc	/^TrafficGen::serialize(ostream &os)$/;"	f	class:TrafficGen
serialize	src/cpu/thread_context.cc	/^serialize(ThreadContext &tc, std::ostream &os)$/;"	f
serialize	src/cpu/thread_state.cc	/^ThreadState::serialize(std::ostream &os)$/;"	f	class:ThreadState
serialize	src/dev/alpha/backdoor.cc	/^AlphaBackdoor::Access::serialize(ostream &os)$/;"	f	class:AlphaBackdoor::Access
serialize	src/dev/alpha/backdoor.cc	/^AlphaBackdoor::serialize(ostream &os)$/;"	f	class:AlphaBackdoor
serialize	src/dev/alpha/tsunami.cc	/^Tsunami::serialize(std::ostream &os)$/;"	f	class:Tsunami
serialize	src/dev/alpha/tsunami_cchip.cc	/^TsunamiCChip::serialize(std::ostream &os)$/;"	f	class:TsunamiCChip
serialize	src/dev/alpha/tsunami_io.cc	/^TsunamiIO::serialize(ostream &os)$/;"	f	class:TsunamiIO
serialize	src/dev/alpha/tsunami_pchip.cc	/^TsunamiPChip::serialize(std::ostream &os)$/;"	f	class:TsunamiPChip
serialize	src/dev/arm/generic_timer.cc	/^GenericTimer::ArchTimer::serialize(std::ostream &os)$/;"	f	class:GenericTimer::ArchTimer
serialize	src/dev/arm/generic_timer.cc	/^GenericTimer::SystemCounter::serialize(std::ostream &os)$/;"	f	class:GenericTimer::SystemCounter
serialize	src/dev/arm/generic_timer.cc	/^GenericTimer::serialize(std::ostream &os)$/;"	f	class:GenericTimer
serialize	src/dev/arm/gic_pl390.cc	/^Pl390::serialize(std::ostream &os)$/;"	f	class:Pl390
serialize	src/dev/arm/hdlcd.cc	/^HDLcd::serialize(std::ostream &os)$/;"	f	class:HDLcd
serialize	src/dev/arm/kmi.cc	/^Pl050::serialize(std::ostream &os)$/;"	f	class:Pl050
serialize	src/dev/arm/pl011.cc	/^Pl011::serialize(std::ostream &os)$/;"	f	class:Pl011
serialize	src/dev/arm/pl111.cc	/^Pl111::serialize(std::ostream &os)$/;"	f	class:Pl111
serialize	src/dev/arm/rtc_pl031.cc	/^PL031::serialize(std::ostream &os)$/;"	f	class:PL031
serialize	src/dev/arm/rv_ctrl.cc	/^RealViewCtrl::serialize(std::ostream &os)$/;"	f	class:RealViewCtrl
serialize	src/dev/arm/timer_cpulocal.cc	/^CpuLocalTimer::Timer::serialize(std::ostream &os)$/;"	f	class:CpuLocalTimer::Timer
serialize	src/dev/arm/timer_cpulocal.cc	/^CpuLocalTimer::serialize(std::ostream &os)$/;"	f	class:CpuLocalTimer
serialize	src/dev/arm/timer_sp804.cc	/^Sp804::Timer::serialize(std::ostream &os)$/;"	f	class:Sp804::Timer
serialize	src/dev/arm/timer_sp804.cc	/^Sp804::serialize(std::ostream &os)$/;"	f	class:Sp804
serialize	src/dev/arm/vgic.cc	/^VGic::serialize(std::ostream &os)$/;"	f	class:VGic
serialize	src/dev/copy_engine.cc	/^CopyEngine::CopyEngineChannel::serialize(std::ostream &os)$/;"	f	class:CopyEngine::CopyEngineChannel
serialize	src/dev/copy_engine.cc	/^CopyEngine::serialize(std::ostream &os)$/;"	f	class:CopyEngine
serialize	src/dev/copy_engine_defs.hh	/^    void serialize(std::ostream &os)$/;"	f	struct:CopyEngineReg::ChanRegs
serialize	src/dev/copy_engine_defs.hh	/^    void serialize(std::ostream &os)$/;"	f	struct:CopyEngineReg::Reg
serialize	src/dev/copy_engine_defs.hh	/^    void serialize(std::ostream &os)$/;"	f	struct:CopyEngineReg::Regs
serialize	src/dev/disk_image.cc	/^CowDiskImage::serialize(ostream &os)$/;"	f	class:CowDiskImage
serialize	src/dev/etherlink.cc	/^EtherLink::Link::serialize(const string &base, ostream &os)$/;"	f	class:EtherLink::Link
serialize	src/dev/etherlink.cc	/^EtherLink::serialize(ostream &os)$/;"	f	class:EtherLink
serialize	src/dev/etherlink.cc	/^LinkDelayEvent::serialize(ostream &os)$/;"	f	class:LinkDelayEvent
serialize	src/dev/etherpkt.cc	/^EthPacketData::serialize(const string &base, ostream &os)$/;"	f	class:EthPacketData
serialize	src/dev/ethertap.cc	/^EtherTap::serialize(ostream &os)$/;"	f	class:EtherTap
serialize	src/dev/i8254xGBe.cc	/^IGbE::DescCache<T>::serialize(std::ostream &os)$/;"	f	class:IGbE::DescCache
serialize	src/dev/i8254xGBe.cc	/^IGbE::RxDescCache::serialize(std::ostream &os)$/;"	f	class:IGbE::RxDescCache
serialize	src/dev/i8254xGBe.cc	/^IGbE::TxDescCache::serialize(std::ostream &os)$/;"	f	class:IGbE::TxDescCache
serialize	src/dev/i8254xGBe.cc	/^IGbE::serialize(std::ostream &os)$/;"	f	class:IGbE
serialize	src/dev/i8254xGBe_defs.hh	/^        void serialize(std::ostream &os)$/;"	f	struct:iGbReg::Regs::Reg
serialize	src/dev/i8254xGBe_defs.hh	/^    void serialize(std::ostream &os)$/;"	f	struct:iGbReg::Regs
serialize	src/dev/ide_ctrl.cc	/^IdeController::Channel::serialize(const std::string &base, std::ostream &os)$/;"	f	class:IdeController::Channel
serialize	src/dev/ide_ctrl.cc	/^IdeController::serialize(std::ostream &os)$/;"	f	class:IdeController
serialize	src/dev/ide_disk.cc	/^IdeDisk::serialize(ostream &os)$/;"	f	class:IdeDisk
serialize	src/dev/intel_8254_timer.cc	/^Intel8254Timer::Counter::serialize(const string &base, ostream &os)$/;"	f	class:Intel8254Timer::Counter
serialize	src/dev/intel_8254_timer.cc	/^Intel8254Timer::serialize(const string &base, ostream &os)$/;"	f	class:Intel8254Timer
serialize	src/dev/mc146818.cc	/^MC146818::serialize(const string &base, ostream &os)$/;"	f	class:MC146818
serialize	src/dev/mips/malta.cc	/^Malta::serialize(std::ostream &os)$/;"	f	class:Malta
serialize	src/dev/mips/malta_cchip.cc	/^MaltaCChip::serialize(std::ostream &os)$/;"	f	class:MaltaCChip
serialize	src/dev/mips/malta_io.cc	/^MaltaIO::serialize(ostream &os)$/;"	f	class:MaltaIO
serialize	src/dev/mips/malta_pchip.cc	/^MaltaPChip::serialize(std::ostream &os)$/;"	f	class:MaltaPChip
serialize	src/dev/ns_gige.cc	/^NSGigE::serialize(ostream &os)$/;"	f	class:NSGigE
serialize	src/dev/pcidev.cc	/^PciDevice::serialize(std::ostream &os)$/;"	f	class:PciDevice
serialize	src/dev/pktfifo.cc	/^PacketFifo::serialize(const string &base, ostream &os)$/;"	f	class:PacketFifo
serialize	src/dev/pktfifo.cc	/^PacketFifoEntry::serialize(const string &base, ostream &os)$/;"	f	class:PacketFifoEntry
serialize	src/dev/sinic.cc	/^Base::serialize(std::ostream &os)$/;"	f	class:Sinic::Base
serialize	src/dev/sinic.cc	/^Device::serialize(std::ostream &os)$/;"	f	class:Sinic::Device
serialize	src/dev/sparc/dtod.cc	/^DumbTOD::serialize(std::ostream &os)$/;"	f	class:DumbTOD
serialize	src/dev/sparc/iob.cc	/^Iob::serialize(std::ostream &os)$/;"	f	class:Iob
serialize	src/dev/sparc/mm_disk.cc	/^MmDisk::serialize(std::ostream &os)$/;"	f	class:MmDisk
serialize	src/dev/uart8250.cc	/^Uart8250::serialize(ostream &os)$/;"	f	class:Uart8250
serialize	src/dev/x86/cmos.cc	/^X86ISA::Cmos::serialize(std::ostream &os)$/;"	f	class:X86ISA::Cmos
serialize	src/dev/x86/i8042.cc	/^X86ISA::I8042::serialize(std::ostream &os)$/;"	f	class:X86ISA::I8042
serialize	src/dev/x86/i8042.cc	/^X86ISA::PS2Keyboard::serialize(const std::string &base, std::ostream &os)$/;"	f	class:X86ISA::PS2Keyboard
serialize	src/dev/x86/i8042.cc	/^X86ISA::PS2Mouse::serialize(const std::string &base, std::ostream &os)$/;"	f	class:X86ISA::PS2Mouse
serialize	src/dev/x86/i82094aa.cc	/^X86ISA::I82094AA::serialize(std::ostream &os)$/;"	f	class:X86ISA::I82094AA
serialize	src/dev/x86/i8237.cc	/^X86ISA::I8237::serialize(std::ostream &os)$/;"	f	class:X86ISA::I8237
serialize	src/dev/x86/i8254.cc	/^X86ISA::I8254::serialize(std::ostream &os)$/;"	f	class:X86ISA::I8254
serialize	src/dev/x86/i8259.cc	/^X86ISA::I8259::serialize(std::ostream &os)$/;"	f	class:X86ISA::I8259
serialize	src/dev/x86/speaker.cc	/^X86ISA::Speaker::serialize(std::ostream &os)$/;"	f	class:X86ISA::Speaker
serialize	src/kern/kernel_stats.cc	/^Statistics::serialize(ostream &os)$/;"	f	class:Kernel::Statistics
serialize	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::serialize(std::ostream &os)$/;"	f	class:Cache
serialize	src/mem/page_table.cc	/^PageTable::serialize(std::ostream &os)$/;"	f	class:PageTable
serialize	src/mem/physical.cc	/^PhysicalMemory::serialize(ostream& os)$/;"	f	class:PhysicalMemory
serialize	src/mem/ruby/system/System.cc	/^RubySystem::serialize(std::ostream &os)$/;"	f	class:RubySystem
serialize	src/sim/eventq.cc	/^Event::serialize(std::ostream &os)$/;"	f	class:Event
serialize	src/sim/eventq.cc	/^EventQueue::serialize(ostream &os)$/;"	f	class:EventQueue
serialize	src/sim/process.cc	/^Process::FdMap::serialize(std::ostream &os)$/;"	f	class:Process::FdMap
serialize	src/sim/process.cc	/^Process::serialize(std::ostream &os)$/;"	f	class:Process
serialize	src/sim/root.cc	/^Root::serialize(std::ostream &os)$/;"	f	class:Root
serialize	src/sim/serialize.cc	/^Globals::serialize(ostream &os)$/;"	f	class:Globals
serialize	src/sim/serialize.cc	/^Serializable::serialize(ostream &os)$/;"	f	class:Serializable
serialize	src/sim/sim_events.cc	/^LocalSimLoopExitEvent::serialize(ostream &os)$/;"	f	class:LocalSimLoopExitEvent
serialize	src/sim/system.cc	/^System::serialize(ostream &os)$/;"	f	class:System
serializeAfter	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::serializeAfter(InstQueue &inst_list, ThreadID tid)$/;"	f	class:DefaultRename
serializeAfterSeqNum	src/cpu/inorder/resources/use_def.hh	/^    InstSeqNum serializeAfterSeqNum[ThePipeline::MaxThreads];$/;"	m	class:UseDefUnit
serializeAll	src/python/swig/pyobject.hh	/^serializeAll(const std::string &cpt_dir)$/;"	f
serializeAll	src/sim/serialize.cc	/^Serializable::serializeAll(const string &cpt_dir)$/;"	f	class:Serializable
serializeAll	src/sim/sim_object.cc	/^SimObject::serializeAll(std::ostream &os)$/;"	f	class:SimObject
serializeInst	src/cpu/o3/rename.hh	/^    DynInstPtr serializeInst[Impl::MaxThreads];$/;"	m	class:DefaultRename
serializeNext	src/cpu/ozone/front_end.hh	/^    bool serializeNext;$/;"	m	class:FrontEnd
serializeOnNextInst	src/cpu/inorder/resources/use_def.hh	/^    bool serializeOnNextInst[ThePipeline::MaxThreads];$/;"	m	class:UseDefUnit
serializeOnNextInst	src/cpu/o3/rename.hh	/^    bool serializeOnNextInst[Impl::MaxThreads];$/;"	m	class:DefaultRename
serializeStore	src/mem/physical.cc	/^PhysicalMemory::serializeStore(ostream& os, unsigned int store_id,$/;"	f	class:PhysicalMemory
serializeSymtab	src/arch/alpha/system.cc	/^AlphaSystem::serializeSymtab(std::ostream &os)$/;"	f	class:AlphaSystem
serializeSymtab	src/arch/sparc/system.cc	/^SparcSystem::serializeSymtab(std::ostream &os)$/;"	f	class:SparcSystem
serializeSymtab	src/sim/system.hh	/^    virtual void serializeSymtab(std::ostream &os) {}$/;"	f	class:System
serializeThread	src/cpu/base.hh	/^    virtual void serializeThread(std::ostream &os, ThreadID tid) {};$/;"	f	class:BaseCPU
serializeThread	src/cpu/kvm/base.cc	/^BaseKvmCPU::serializeThread(std::ostream &os, ThreadID tid)$/;"	f	class:BaseKvmCPU
serializeThread	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::serializeThread(std::ostream &os, ThreadID tid)$/;"	f	class:FullO3CPU
serializeThread	src/cpu/simple/base.cc	/^BaseSimpleCPU::serializeThread(ostream &os, ThreadID tid)$/;"	f	class:BaseSimpleCPU
service	src/base/pollevent.cc	/^PollQueue::service()$/;"	f	class:PollQueue
service	src/cpu/pc_event.hh	/^    bool service(ThreadContext *tc)$/;"	f	class:PCEventQueue
serviceEvents	src/sim/eventq.hh	/^    serviceEvents(Tick when)$/;"	f	class:EventQueue
serviceOne	src/sim/eventq.cc	/^EventQueue::serviceOne()$/;"	f	class:EventQueue
servicedByWrQ	src/mem/dram_ctrl.hh	/^    Stats::Scalar servicedByWrQ;$/;"	m	class:DRAMCtrl
set	src/arch/arm/types.hh	/^        set(Addr val)$/;"	f	class:ArmISA::PCState
set	src/arch/generic/types.hh	/^    set(Addr val)$/;"	f	class:GenericISA::DelaySlotPCState
set	src/arch/generic/types.hh	/^    set(Addr val)$/;"	f	class:GenericISA::DelaySlotUPCState
set	src/arch/generic/types.hh	/^    set(Addr val)$/;"	f	class:GenericISA::SimplePCState
set	src/arch/generic/types.hh	/^    set(Addr val)$/;"	f	class:GenericISA::UPCState
set	src/arch/x86/types.hh	/^        set(Addr val)$/;"	f	class:X86ISA::PCState
set	src/base/flags.hh	/^    void set(Type f, bool val) { _flags = (_flags & ~f) | (val ? f : 0); }$/;"	f	class:Flags
set	src/base/flags.hh	/^    void set(Type flags) { _flags |= flags; }$/;"	f	class:Flags
set	src/base/inet.hh	/^    void set(const EthPacketPtr &ptr)$/;"	f	class:Net::Ip6Ptr
set	src/base/inet.hh	/^    void set(const EthPacketPtr &ptr)$/;"	f	class:Net::IpPtr
set	src/base/inet.hh	/^    void set(const EthPacketPtr &ptr, int offset) { p = ptr; _off = offset; }$/;"	f	class:Net::TcpPtr
set	src/base/inet.hh	/^    void set(const EthPacketPtr &ptr, int offset) { p = ptr; _off = offset; }$/;"	f	class:Net::UdpPtr
set	src/base/inet.hh	/^    void set(const Ip6Ptr &ptr)$/;"	f	class:Net::TcpPtr
set	src/base/inet.hh	/^    void set(const Ip6Ptr &ptr)$/;"	f	class:Net::UdpPtr
set	src/base/inet.hh	/^    void set(const IpPtr &ptr)$/;"	f	class:Net::TcpPtr
set	src/base/inet.hh	/^    void set(const IpPtr &ptr)$/;"	f	class:Net::UdpPtr
set	src/base/refcnt.hh	/^    set(T *d)$/;"	f	class:RefCountingPtr
set	src/base/statistics.hh	/^    set(Counter val)$/;"	f	class:Stats::AvgStor
set	src/base/statistics.hh	/^    void set(Counter val) { data = val; }$/;"	f	class:Stats::StatStor
set	src/base/time.hh	/^    void set(time_t _sec, long _nsec) { sec(_sec); nsec(_nsec); }$/;"	f	class:Time
set	src/cpu/base_dyn_inst.hh	/^        void set(double d) { dbl = d; }$/;"	f	union:BaseDynInst::Result
set	src/cpu/base_dyn_inst.hh	/^        void set(uint64_t i) { integer = i; }$/;"	f	union:BaseDynInst::Result
set	src/cpu/checker/cpu.hh	/^        void set(double d) { dbl = d; }$/;"	f	union:CheckerCPU::Result
set	src/cpu/checker/cpu.hh	/^        void set(uint64_t i) { integer = i; }$/;"	f	union:CheckerCPU::Result
set	src/cpu/timebuf.hh	/^        void set(int idx)$/;"	f	class:TimeBuffer::wire
set	src/dev/mc146818.hh	/^        Bitfield<7> set;       \/\/\/ stop clock updates$/;"	m	class:MC146818
set	src/mem/cache/blk.hh	/^    int set;$/;"	m	class:CacheBlk
set	src/mem/packet_access.hh	/^Packet::set(T v)$/;"	f	class:Packet
set	src/mem/ruby/filters/BlockBloomFilter.cc	/^BlockBloomFilter::set(const Address& addr)$/;"	f	class:BlockBloomFilter
set	src/mem/ruby/filters/BulkBloomFilter.cc	/^BulkBloomFilter::set(const Address& addr)$/;"	f	class:BulkBloomFilter
set	src/mem/ruby/filters/GenericBloomFilter.cc	/^GenericBloomFilter::set(const Address& addr)$/;"	f	class:GenericBloomFilter
set	src/mem/ruby/filters/H3BloomFilter.cc	/^H3BloomFilter::set(const Address& addr)$/;"	f	class:H3BloomFilter
set	src/mem/ruby/filters/LSB_CountingBloomFilter.cc	/^LSB_CountingBloomFilter::set(const Address& addr)$/;"	f	class:LSB_CountingBloomFilter
set	src/mem/ruby/filters/MultiBitSelBloomFilter.cc	/^MultiBitSelBloomFilter::set(const Address& addr)$/;"	f	class:MultiBitSelBloomFilter
set	src/mem/ruby/filters/MultiGrainBloomFilter.cc	/^MultiGrainBloomFilter::set(const Address& addr)$/;"	f	class:MultiGrainBloomFilter
set	src/mem/ruby/filters/NonCountingBloomFilter.cc	/^NonCountingBloomFilter::set(const Address& addr)$/;"	f	class:NonCountingBloomFilter
set	src/mem/ruby/system/TimerTable.cc	/^TimerTable::set(const Address& address, Cycles relative_latency)$/;"	f	class:TimerTable
set	src/mem/ruby/system/TimerTable.hh	/^    void set(const Address& address, uint64_t relative_latency)$/;"	f	class:TimerTable
setAIWNextPC	src/arch/arm/insts/static_inst.hh	/^    setAIWNextPC(XC *xc, Addr val)$/;"	f	class:ArmISA::ArmStaticInst
setASID	src/cpu/base_dyn_inst.hh	/^    void setASID(short addr_space_id) { asid = addr_space_id; }$/;"	f	class:BaseDynInst
setASID	src/cpu/inorder/inorder_dyn_inst.hh	/^    void setASID(short addr_space_id) { asid = addr_space_id; }$/;"	f	class:InOrderDynInst
setAccessLatency	src/mem/request.hh	/^    void setAccessLatency() { accessDelta = curTick() - _time - translateDelta; }$/;"	f	class:Request
setActiveThreads	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::setActiveThreads(list<ThreadID> *at_ptr)$/;"	f	class:PipelineStage
setActiveThreads	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::setActiveThreads(list<ThreadID> *at_ptr)$/;"	f	class:DefaultCommit
setActiveThreads	src/cpu/o3/decode_impl.hh	/^DefaultDecode<Impl>::setActiveThreads(std::list<ThreadID> *at_ptr)$/;"	f	class:DefaultDecode
setActiveThreads	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::setActiveThreads(std::list<ThreadID> *at_ptr)$/;"	f	class:DefaultFetch
setActiveThreads	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::setActiveThreads(list<ThreadID> *at_ptr)$/;"	f	class:DefaultIEW
setActiveThreads	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::setActiveThreads(list<ThreadID> *at_ptr)$/;"	f	class:InstructionQueue
setActiveThreads	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::setActiveThreads(list<ThreadID> *at_ptr)$/;"	f	class:LSQ
setActiveThreads	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::setActiveThreads(list<ThreadID> *at_ptr)$/;"	f	class:DefaultRename
setActiveThreads	src/cpu/o3/rob_impl.hh	/^ROB<Impl>::setActiveThreads(list<ThreadID> *at_ptr)$/;"	f	class:ROB
setActivityCount	src/cpu/activity.hh	/^    void setActivityCount(int count)$/;"	f	class:ActivityRecorder
setAddr	src/mem/packet.hh	/^    void setAddr(Addr _addr) { assert(flags.isSet(VALID_ADDR)); addr = _addr; }$/;"	f	class:Packet
setAddr	src/sim/insttracer.hh	/^    void setAddr(Addr a) { addr = a; addr_valid = true; }$/;"	f	class:Trace::InstRecord
setAddrDependency	src/cpu/inorder/resources/cache_unit.cc	/^CacheUnit::setAddrDependency(DynInstPtr inst)$/;"	f	class:CacheUnit
setAddress	src/mem/ruby/common/Address.hh	/^    void setAddress(physical_address_t address) { m_address = address; }$/;"	f	class:Address
setAddress	src/mem/ruby/common/SubBlock.hh	/^    void setAddress(const Address& addr) { m_address = addr; }$/;"	f	class:SubBlock
setAddress	src/mem/ruby/profiler/AccessTraceForAddress.hh	/^    void setAddress(const Address& addr) { m_addr = addr; }$/;"	f	class:AccessTraceForAddress
setAf	src/arch/arm/table_walker.hh	/^        void setAf()$/;"	f	class:ArmISA::TableWalker::LongDescriptor
setAllInstructions	src/mem/ruby/profiler/AddressProfiler.cc	/^AddressProfiler::setAllInstructions(bool all_instructions)$/;"	f	class:AddressProfiler
setAlphaAccess	src/arch/alpha/system.cc	/^AlphaSystem::setAlphaAccess(Addr access)$/;"	f	class:AlphaSystem
setAp0	src/arch/arm/table_walker.hh	/^        void setAp0()$/;"	f	class:ArmISA::TableWalker::L1Descriptor
setAp0	src/arch/arm/table_walker.hh	/^        void setAp0()$/;"	f	class:ArmISA::TableWalker::L2Descriptor
setArchCCReg	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::setArchCCReg(int reg_idx, CCReg val, ThreadID tid)$/;"	f	class:FullO3CPU
setArchFlags	src/mem/request.hh	/^    setArchFlags(Flags flags)$/;"	f	class:Request
setArchFloatReg	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::setArchFloatReg(int reg_idx, float val, ThreadID tid)$/;"	f	class:FullO3CPU
setArchFloatRegInt	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::setArchFloatRegInt(int reg_idx, uint64_t val, ThreadID tid)$/;"	f	class:FullO3CPU
setArchIntReg	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::setArchIntReg(int reg_idx, uint64_t val, ThreadID tid)$/;"	f	class:FullO3CPU
setAsid	src/mem/request.hh	/^    setAsid(int asid)$/;"	f	class:Request
setAtCommit	src/cpu/base_dyn_inst.hh	/^    void setAtCommit() { status.set(AtCommit); }$/;"	f	class:BaseDynInst
setAtCommit	src/cpu/inorder/inorder_dyn_inst.hh	/^    void setAtCommit() { status.set(AtCommit); }$/;"	f	class:InOrderDynInst
setAttr	src/arch/arm/tlb.hh	/^    setAttr(uint64_t attr)$/;"	f	class:ArmISA::TLB
setAttributes	src/arch/arm/pagetable.hh	/^    setAttributes(bool lpae)$/;"	f	struct:ArmISA::TlbEntry
setBCD	src/dev/intel_8254_timer.cc	/^Intel8254Timer::Counter::setBCD(int bcd_val)$/;"	f	class:Intel8254Timer::Counter
setBE	src/cpu/ozone/back_end.hh	/^        void setBE(BackEnd *_be) { be = _be; }$/;"	f	class:BackEnd::InstQueue
setBE	src/cpu/ozone/lsq_unit.hh	/^    void setBE(BackEnd *be_ptr)$/;"	f	class:OzoneLSQ
setBE	src/cpu/ozone/lw_lsq.hh	/^    void setBE(BackEnd *be_ptr)$/;"	f	class:OzoneLWLSQ
setBackEnd	src/cpu/ozone/front_end.hh	/^    void setBackEnd(BackEnd *back_end_ptr)$/;"	f	class:FrontEnd
setBackSked	src/cpu/inorder/inorder_dyn_inst.hh	/^    void setBackSked(RSkedPtr back_sked)$/;"	f	class:InOrderDynInst
setBackingStore	src/mem/abstract_mem.cc	/^AbstractMemory::setBackingStore(uint8_t* pmem_addr)$/;"	f	class:AbstractMemory
setBadAddress	src/mem/packet.hh	/^    setBadAddress()$/;"	f	class:Packet
setBits	src/base/bitunion.hh	/^        setBits(int first, int last, uint64_t val)$/;"	f	class:BitfieldBackend::BitfieldBase
setBits	src/cpu/pred/sat_counter.hh	/^    void setBits(unsigned bits) { maxVal = (1 << bits) - 1; }$/;"	f	class:SatCounter
setBlocked	src/mem/cache/base.cc	/^BaseCache::CacheSlavePort::setBlocked()$/;"	f	class:BaseCache::CacheSlavePort
setBlocked	src/mem/cache/base.hh	/^    void setBlocked(BlockedCause cause)$/;"	f	class:BaseCache
setBranchPred	src/cpu/inorder/inorder_dyn_inst.hh	/^    void setBranchPred(bool prediction) { predictTaken = prediction; }$/;"	f	class:InOrderDynInst
setByte	src/mem/ruby/common/DataBlock.hh	/^DataBlock::setByte(int whichByte, uint8_t data)$/;"	f	class:DataBlock
setByte	src/mem/ruby/common/SubBlock.hh	/^    void setByte(int offset, uint8_t data) { m_data[offset] = data; }$/;"	f	class:SubBlock
setCCEntry	src/cpu/o3/rename_map.hh	/^    void setCCEntry(RegIndex arch_reg, PhysRegIndex phys_reg)$/;"	f	class:UnifiedRenameMap
setCCReg	src/cpu/checker/thread_context.hh	/^    void setCCReg(int reg_idx, CCReg val)$/;"	f	class:CheckerThreadContext
setCCReg	src/cpu/inorder/cpu.cc	/^InOrderCPU::setCCReg(RegIndex reg_idx, CCReg val, ThreadID tid)$/;"	f	class:InOrderCPU
setCCReg	src/cpu/inorder/thread_context.cc	/^InOrderThreadContext::setCCReg(int reg_idx, CCReg val)$/;"	f	class:InOrderThreadContext
setCCReg	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::setCCReg(int reg_idx, CCReg val)$/;"	f	class:FullO3CPU
setCCReg	src/cpu/o3/regfile.hh	/^    void setCCReg(PhysRegIndex reg_idx, CCReg val)$/;"	f	class:PhysRegFile
setCCReg	src/cpu/o3/thread_context.hh	/^    virtual void setCCReg(int reg_idx, CCReg val) {$/;"	f	class:O3ThreadContext
setCCReg	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::OzoneTC::setCCReg(int reg_idx, CCReg val)$/;"	f	class:OzoneCPU::OzoneTC
setCCReg	src/cpu/simple_thread.hh	/^    void setCCReg(int reg_idx, CCReg val)$/;"	f	class:SimpleThread
setCCReg	src/cpu/thread_context.hh	/^    void setCCReg(int reg_idx, CCReg val)$/;"	f	class:ProxyThreadContext
setCCRegFlat	src/cpu/checker/thread_context.hh	/^    void setCCRegFlat(int idx, CCReg val)$/;"	f	class:CheckerThreadContext
setCCRegFlat	src/cpu/inorder/thread_context.cc	/^InOrderThreadContext::setCCRegFlat(int idx, CCReg val)$/;"	f	class:InOrderThreadContext
setCCRegFlat	src/cpu/o3/thread_context_impl.hh	/^O3ThreadContext<Impl>::setCCRegFlat(int reg_idx, TheISA::CCReg val)$/;"	f	class:O3ThreadContext
setCCRegFlat	src/cpu/simple_thread.hh	/^    void setCCRegFlat(int idx, CCReg val) { ccRegs[idx] = val; }$/;"	f	class:SimpleThread
setCCRegFlat	src/cpu/simple_thread.hh	/^    void setCCRegFlat(int idx, CCReg val)$/;"	f	class:SimpleThread
setCCRegFlat	src/cpu/thread_context.hh	/^    void setCCRegFlat(int idx, CCReg val)$/;"	f	class:ProxyThreadContext
setCCRegOperand	src/cpu/base_dyn_inst.hh	/^    void setCCRegOperand(const StaticInst *si, int idx, uint64_t val)$/;"	f	class:BaseDynInst
setCCRegOperand	src/cpu/checker/cpu.hh	/^    void setCCRegOperand(const StaticInst *si, int idx, uint64_t val)$/;"	f	class:CheckerCPU
setCCRegOperand	src/cpu/o3/dyn_inst.hh	/^    void setCCRegOperand(const StaticInst *si, int idx, uint64_t val)$/;"	f	class:BaseO3DynInst
setCCRegOperand	src/cpu/simple/base.hh	/^    void setCCRegOperand(const StaticInst *si, int idx, CCReg val)$/;"	f	class:BaseSimpleCPU
setCPSeq	src/sim/insttracer.hh	/^    void setCPSeq(InstSeqNum seq)$/;"	f	class:Trace::InstRecord
setCPU	src/arch/alpha/interrupts.hh	/^    setCPU(BaseCPU * _cpu)$/;"	f	class:AlphaISA::Interrupts
setCPU	src/arch/arm/interrupts.hh	/^    setCPU(BaseCPU * _cpu)$/;"	f	class:ArmISA::Interrupts
setCPU	src/arch/mips/interrupts.hh	/^    setCPU(BaseCPU *_cpu)$/;"	f	class:MipsISA::Interrupts
setCPU	src/arch/power/interrupts.hh	/^    setCPU(BaseCPU * _cpu)$/;"	f	class:PowerISA::Interrupts
setCPU	src/arch/sparc/interrupts.hh	/^    setCPU(BaseCPU * _cpu)$/;"	f	class:SparcISA::Interrupts
setCPU	src/arch/x86/interrupts.cc	/^X86ISA::Interrupts::setCPU(BaseCPU * newCPU)$/;"	f	class:X86ISA::Interrupts
setCPU	src/cpu/inorder/first_stage.cc	/^FirstStage::setCPU(InOrderCPU *cpu_ptr)$/;"	f	class:FirstStage
setCPU	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::setCPU(InOrderCPU *cpu_ptr)$/;"	f	class:PipelineStage
setCPU	src/cpu/inorder/reg_dep_map.cc	/^RegDepMap::setCPU(InOrderCPU *_cpu)$/;"	f	class:RegDepMap
setCPU	src/cpu/ozone/back_end.hh	/^    void setCPU(FullCPU *cpu_ptr)$/;"	f	class:BackEnd
setCPU	src/cpu/ozone/front_end_impl.hh	/^FrontEnd<Impl>::setCPU(CPUType *cpu_ptr)$/;"	f	class:FrontEnd
setCPU	src/cpu/ozone/inorder_back_end.hh	/^    void setCPU(FullCPU *cpu_ptr)$/;"	f	class:InorderBackEnd
setCPU	src/cpu/ozone/inst_queue.hh	/^    void setCPU(FullCPU *_cpu) { cpu = _cpu; }$/;"	f	class:InstQueue
setCPU	src/cpu/ozone/lsq_unit.hh	/^    void setCPU(FullCPU *cpu_ptr)$/;"	f	class:OzoneLSQ
setCPU	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::setCPU(OzoneCPU *cpu_ptr)$/;"	f	class:LWBackEnd
setCPU	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::setCPU(OzoneCPU *cpu_ptr)$/;"	f	class:OzoneLWLSQ
setCPUID	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::setCPUID(const Kvm::CPUIDVector &cpuid)$/;"	f	class:X86KvmCPU
setCPUID	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::setCPUID(const struct kvm_cpuid2 &cpuid)$/;"	f	class:X86KvmCPU
setCache	src/mem/cache/prefetch/base.cc	/^BasePrefetcher::setCache(BaseCache *_cache)$/;"	f	class:BasePrefetcher
setCache	src/mem/cache/tags/base.cc	/^BaseTags::setCache(BaseCache *_cache)$/;"	f	class:BaseTags
setCallbacks	src/mem/dramsim2_wrapper.cc	/^DRAMSim2Wrapper::setCallbacks(DRAMSim::TransactionCompleteCB* read_callback,$/;"	f	class:DRAMSim2Wrapper
setCanCommit	src/cpu/base_dyn_inst.hh	/^    void setCanCommit() { status.set(CanCommit); }$/;"	f	class:BaseDynInst
setCanCommit	src/cpu/inorder/inorder_dyn_inst.hh	/^    void setCanCommit() { status.set(CanCommit); }$/;"	f	class:InOrderDynInst
setCanIssue	src/cpu/base_dyn_inst.hh	/^    void setCanIssue() { status.set(CanIssue); }$/;"	f	class:BaseDynInst
setCanIssue	src/cpu/inorder/inorder_dyn_inst.hh	/^    void setCanIssue() { status.set(CanIssue); }$/;"	f	class:InOrderDynInst
setCase	src/unittest/unittest.cc	/^setCase(const char *newCase)$/;"	f	namespace:UnitTest
setCauseIP	src/arch/mips/interrupts.cc	/^setCauseIP(ThreadContext *tc, uint8_t val) {$/;"	f	namespace:MipsISA
setClockFrequency	src/sim/core.cc	/^setClockFrequency(Tick ticksPerSecond)$/;"	f
setClockObj	src/mem/ruby/system/MemoryControl.hh	/^    virtual void setClockObj(ClockedObject* consumer_ptr) {}$/;"	f	class:MemoryControl
setClockObj	src/mem/ruby/system/TimerTable.hh	/^    void setClockObj(ClockedObject* obj)$/;"	f	class:TimerTable
setCommBuffer	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::setCommBuffer(TimeBuffer<CommStruct> *_comm)$/;"	f	class:BackEnd
setCommBuffer	src/cpu/ozone/front_end_impl.hh	/^FrontEnd<Impl>::setCommBuffer(TimeBuffer<CommStruct> *_comm)$/;"	f	class:FrontEnd
setCommBuffer	src/cpu/ozone/inorder_back_end.hh	/^    void setCommBuffer(TimeBuffer<CommStruct> *_comm)$/;"	f	class:InorderBackEnd
setCommBuffer	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::setCommBuffer(TimeBuffer<CommStruct> *_comm)$/;"	f	class:LWBackEnd
setComment	src/mem/ruby/network/orion/ConfigFile.hh	/^	string setComment( const string& s )$/;"	f	class:ConfigFile
setCommitStage	src/cpu/o3/rename.hh	/^    void setCommitStage(Commit *commit_stage)$/;"	f	class:DefaultRename
setCommitted	src/cpu/base_dyn_inst.hh	/^    void setCommitted() { status.set(Committed); }$/;"	f	class:BaseDynInst
setCommitted	src/cpu/inorder/inorder_dyn_inst.hh	/^    void setCommitted() { status.set(Committed); }$/;"	f	class:InOrderDynInst
setCompareValue	src/dev/arm/generic_timer.cc	/^GenericTimer::ArchTimer::setCompareValue(uint64_t val)$/;"	f	class:GenericTimer::ArchTimer
setComplete	src/dev/ide_disk.hh	/^    void setComplete()$/;"	f	class:IdeDisk
setCompleted	src/cpu/base_dyn_inst.hh	/^    void setCompleted() { status.set(Completed); }$/;"	f	class:BaseDynInst
setCompleted	src/cpu/inorder/inorder_dyn_inst.hh	/^    void setCompleted() { status.set(Completed); }$/;"	f	class:InOrderDynInst
setCompleted	src/cpu/inorder/resource.hh	/^    void setCompleted(bool cond = true) { completed = cond; }$/;"	f	class:ResourceRequest
setConfigAddress	src/arch/x86/tlb.cc	/^TLB::setConfigAddress(uint32_t addr)$/;"	f	class:X86ISA::TLB
setConsumer	src/mem/ruby/buffers/MessageBuffer.hh	/^    void setConsumer(Consumer* consumer)$/;"	f	class:MessageBuffer
setConsumer	src/mem/ruby/system/RubyMemoryControl.cc	/^RubyMemoryControl::setConsumer(Consumer* consumer_ptr)$/;"	f	class:RubyMemoryControl
setConsumer	src/mem/ruby/system/TimerTable.hh	/^    setConsumer(Consumer* consumer_ptr)$/;"	f	class:TimerTable
setConsumer	src/mem/ruby/system/WireBuffer.hh	/^    void setConsumer(Consumer* consumer_ptr)$/;"	f	class:WireBuffer
setContext	src/arch/arm/decoder.hh	/^    void setContext(FPSCR fpscr)$/;"	f	class:ArmISA::Decoder
setContext	src/arch/sparc/decoder.hh	/^    setContext(MiscReg _asi)$/;"	f	class:SparcISA::Decoder
setContextId	src/cpu/checker/thread_context.hh	/^    void setContextId(int id)$/;"	f	class:CheckerThreadContext
setContextId	src/cpu/inorder/thread_context.hh	/^    void setContextId(int id) { thread->setContextId(id); }$/;"	f	class:InOrderThreadContext
setContextId	src/cpu/o3/thread_context.hh	/^    virtual void setContextId(int id) { thread->setContextId(id); }$/;"	f	class:O3ThreadContext
setContextId	src/cpu/thread_context.hh	/^    void setContextId(int id) { actualTC->setContextId(id); }$/;"	f	class:ProxyThreadContext
setContextId	src/cpu/thread_state.hh	/^    void setContextId(int id) { _contextId = id; }$/;"	f	struct:ThreadState
setContextSegment	src/cpu/kvm/x86_cpu.cc	/^setContextSegment(ThreadContext *tc, const struct kvm_dtable &kvm_dtable,$/;"	f
setContextSegment	src/cpu/kvm/x86_cpu.cc	/^setContextSegment(ThreadContext *tc, const struct kvm_segment &kvm_seg,$/;"	f
setControl	src/dev/arm/generic_timer.cc	/^GenericTimer::ArchTimer::setControl(uint32_t val)$/;"	f	class:GenericTimer::ArchTimer
setController	src/dev/ide_disk.hh	/^    void setController(IdeController *c) {$/;"	f	class:IdeDisk
setController	src/mem/ruby/structures/Prefetcher.hh	/^        void setController(AbstractController *_ctrl)$/;"	f	class:Prefetcher
setController	src/mem/ruby/system/RubyPort.hh	/^    void setController(AbstractController* _cntrl) { m_controller = _cntrl; }$/;"	f	class:RubyPort
setCount	src/sim/drain.hh	/^    void setCount(int count) { _count = count; }$/;"	f	class:DrainManager
setCount	src/sim/sim_events.hh	/^    void setCount(int _count) { count = _count; }$/;"	f	class:CountedDrainEvent
setCpuId	src/cpu/inorder/cpu.hh	/^    void setCpuId(int val) { cpu_id = val; }$/;"	f	class:InOrderCPU
setCurResSlot	src/cpu/inorder/inorder_dyn_inst.hh	/^    void setCurResSlot(unsigned slot_num) { curResSlot = slot_num; }$/;"	f	class:InOrderDynInst
setCurTick	src/sim/eventq.hh	/^    void setCurTick(Tick newVal) { _curTick = newVal; }$/;"	f	class:EventQueue
setCurTick	src/sim/eventq.hh	/^    void setCurTick(Tick newVal) { eventq->setCurTick(newVal); }$/;"	f	class:EventManager
setData	src/mem/packet.hh	/^    setData(uint8_t *p)$/;"	f	class:Packet
setData	src/mem/ruby/common/DataBlock.cc	/^DataBlock::setData(uint8_t *data, int offset, int len)$/;"	f	class:DataBlock
setData	src/sim/insttracer.hh	/^    void setData(Twin32_t d) { data.as_int = d.a; data_status = DataInt32; }$/;"	f	class:Trace::InstRecord
setData	src/sim/insttracer.hh	/^    void setData(Twin64_t d) { data.as_int = d.a; data_status = DataInt64; }$/;"	f	class:Trace::InstRecord
setData	src/sim/insttracer.hh	/^    void setData(double d) { data.as_double = d; data_status = DataDouble; }$/;"	f	class:Trace::InstRecord
setData	src/sim/insttracer.hh	/^    void setData(int16_t d) { setData((uint16_t)d); }$/;"	f	class:Trace::InstRecord
setData	src/sim/insttracer.hh	/^    void setData(int32_t d) { setData((uint32_t)d); }$/;"	f	class:Trace::InstRecord
setData	src/sim/insttracer.hh	/^    void setData(int64_t d) { setData((uint64_t)d); }$/;"	f	class:Trace::InstRecord
setData	src/sim/insttracer.hh	/^    void setData(int8_t d)  { setData((uint8_t)d); }$/;"	f	class:Trace::InstRecord
setData	src/sim/insttracer.hh	/^    void setData(uint16_t d) { data.as_int = d; data_status = DataInt16; }$/;"	f	class:Trace::InstRecord
setData	src/sim/insttracer.hh	/^    void setData(uint32_t d) { data.as_int = d; data_status = DataInt32; }$/;"	f	class:Trace::InstRecord
setData	src/sim/insttracer.hh	/^    void setData(uint64_t d) { data.as_int = d; data_status = DataInt64; }$/;"	f	class:Trace::InstRecord
setData	src/sim/insttracer.hh	/^    void setData(uint8_t d) { data.as_int = d; data_status = DataInt8; }$/;"	f	class:Trace::InstRecord
setDataFromBlock	src/mem/packet.hh	/^    setDataFromBlock(uint8_t *blk_data, int blkSize)$/;"	f	class:Packet
setDcachePort	src/cpu/checker/cpu.cc	/^CheckerCPU::setDcachePort(MasterPort *dcache_port)$/;"	f	class:CheckerCPU
setDcachePort	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::setDcachePort(MasterPort *dcache_port)$/;"	f	class:LSQUnit
setDd	src/dev/i8254xGBe_defs.hh	/^inline void setDd(TxDesc *d) { replaceBits(d->d2, 35, 32, ULL(1)); }$/;"	f	namespace:iGbReg::TxdOp
setDebugFlag	src/base/debug.cc	/^setDebugFlag(const char *string)$/;"	f
setDebugRegisters	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::setDebugRegisters(const struct kvm_debugregs &regs)$/;"	f	class:X86KvmCPU
setDecodeQueue	src/cpu/o3/decode_impl.hh	/^DefaultDecode<Impl>::setDecodeQueue(TimeBuffer<DecodeStruct> *dq_ptr)$/;"	f	class:DefaultDecode
setDecodeQueue	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::setDecodeQueue(TimeBuffer<DecodeStruct> *dq_ptr)$/;"	f	class:DefaultRename
setDelayLoop	src/arch/alpha/linux/system.cc	/^LinuxAlphaSystem::setDelayLoop(ThreadContext *tc)$/;"	f	class:LinuxAlphaSystem
setDelayLoop	src/arch/mips/linux/system.cc	/^LinuxMipsSystem::setDelayLoop(ThreadContext *tc)$/;"	f	class:LinuxMipsSystem
setDelayedCommit	src/cpu/static_inst.hh	/^    void setDelayedCommit() { flags[IsDelayedCommit] = true; }$/;"	f	class:StaticInst
setDelimiter	src/mem/ruby/network/orion/ConfigFile.hh	/^	string setDelimiter( const string& s )$/;"	f	class:ConfigFile
setDescription	src/mem/ruby/buffers/MessageBuffer.hh	/^    void setDescription(const std::string& name) { m_name = name; }$/;"	f	class:MessageBuffer
setDescription	src/mem/ruby/system/RubyMemoryControl.hh	/^    void setDescription(const std::string& name) { m_description = name; };$/;"	f	class:RubyMemoryControl
setDescription	src/mem/ruby/system/TimerTable.hh	/^    setDescription(const std::string& name)$/;"	f	class:TimerTable
setDescription	src/mem/ruby/system/WireBuffer.hh	/^    void setDescription(const std::string& name) { m_description = name; };$/;"	f	class:WireBuffer
setDest	src/mem/packet.hh	/^    void setDest(PortID _dest) { dest = _dest; }$/;"	f	class:Packet
setDestRegIdx	src/cpu/inorder/inorder_dyn_inst.hh	/^    void setDestRegIdx(int idx, PhysRegIndex dest_idx)$/;"	f	class:InOrderDynInst
setDir	src/sim/serialize.cc	/^Checkpoint::setDir(const string &name)$/;"	f	class:Checkpoint
setDirectedTester	src/cpu/testers/directedtest/DirectedGenerator.cc	/^DirectedGenerator::setDirectedTester(RubyDirectedTester* directed_tester)$/;"	f	class:DirectedGenerator
setDirectory	src/base/output.cc	/^OutputDirectory::setDirectory(const string &d)$/;"	f	class:OutputDirectory
setDirty	src/base/vnc/vncinput.hh	/^    virtual void setDirty()$/;"	f	class:VncInput
setDirty	src/base/vnc/vncserver.hh	/^    setDirty()$/;"	f	class:VncServer
setDmaComplete	src/dev/ide_ctrl.cc	/^IdeController::setDmaComplete(IdeDisk *disk)$/;"	f	class:IdeController
setDoubleResult	src/cpu/ozone/dyn_inst.hh	/^    void setDoubleResult(double result) { this->instResult.dbl = result; }$/;"	f	class:OzoneDynInst
setDrainState	src/sim/drain.hh	/^    void setDrainState(State new_state) { _drainState = new_state; }$/;"	f	class:Drainable
setEA	src/cpu/base_dyn_inst.hh	/^    void setEA(Addr &ea) { instEffAddr = ea; instFlags[EACalcDone] = true; }$/;"	f	class:BaseDynInst
setEA	src/cpu/checker/cpu.hh	/^    void setEA(Addr EA) { panic("SimpleCPU::setEA() not implemented\\n"); }$/;"	f	class:CheckerCPU
setEA	src/cpu/inorder/inorder_dyn_inst.hh	/^    void setEA(Addr &ea) { instEffAddr = ea; eaCalcDone = true; }$/;"	f	class:InOrderDynInst
setEA	src/cpu/simple/base.hh	/^    void setEA(Addr EA) { panic("BaseSimpleCPU::setEA() not implemented\\n"); }$/;"	f	class:BaseSimpleCPU
setEncodings	src/base/vnc/vncserver.cc	/^VncServer::setEncodings()$/;"	f	class:VncServer
setEntry	src/cpu/o3/rename_map.cc	/^UnifiedRenameMap::setEntry(RegIndex arch_reg, PhysRegIndex phys_reg)$/;"	f	class:UnifiedRenameMap
setEntry	src/cpu/o3/rename_map.hh	/^    void setEntry(RegIndex arch_reg, PhysRegIndex phys_reg)$/;"	f	class:SimpleRenameMap
setEvent	src/cpu/inorder/cpu.hh	/^        void setEvent(CPUEventType e_type, Fault _fault, ThreadID _tid,$/;"	f	class:InOrderCPU::CPUEvent
setEvent	src/cpu/inorder/resource_pool.hh	/^        void setEvent(InOrderCPU::CPUEventType e_type,$/;"	f	class:ResourcePool::ResPoolEvent
setEventQueue	src/python/m5/event.py	/^def setEventQueue(eventq):$/;"	f
setExcAcRel	src/arch/arm/insts/mem64.cc	/^Memory64::setExcAcRel(bool exclusive, bool acrel)$/;"	f	class:ArmISA::Memory64
setExceptionState	src/arch/mips/faults.cc	/^MipsFaultBase::setExceptionState(ThreadContext *tc, uint8_t excCode)$/;"	f	class:MipsISA::MipsFaultBase
setExecuted	src/cpu/base_dyn_inst.hh	/^    void setExecuted() { status.set(Executed); }$/;"	f	class:BaseDynInst
setExecuted	src/cpu/inorder/inorder_dyn_inst.hh	/^    void setExecuted() { status.set(Executed); }$/;"	f	class:InOrderDynInst
setExpressSnoop	src/mem/packet.hh	/^    void setExpressSnoop()          { flags.set(EXPRESS_SNOOP); }$/;"	f	class:Packet
setExpression	src/base/match.cc	/^ObjectMatch::setExpression(const string &expr)$/;"	f	class:ObjectMatch
setExpression	src/base/match.cc	/^ObjectMatch::setExpression(const vector<string> &expr)$/;"	f	class:ObjectMatch
setExtraData	src/mem/request.hh	/^    setExtraData(uint64_t extraData)$/;"	f	class:Request
setFPExceptions	src/arch/arm/insts/vfp.hh	/^setFPExceptions(int exceptions) {$/;"	f	namespace:ArmISA
setFPUState	src/cpu/kvm/base.cc	/^BaseKvmCPU::setFPUState(const struct kvm_fpu &state)$/;"	f	class:BaseKvmCPU
setFSReg	src/arch/sparc/ua2005.cc	/^ISA::setFSReg(int miscReg, const MiscReg &val, ThreadContext *tc)$/;"	f	class:ISA
setFault	src/cpu/o3/fetch.hh	/^        void setFault(Fault _fault)$/;"	f	class:DefaultFetch::FinishTranslationEvent
setFetchQueue	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::setFetchQueue(TimeBuffer<FetchStruct> *fq_ptr)$/;"	f	class:DefaultCommit
setFetchQueue	src/cpu/o3/decode_impl.hh	/^DefaultDecode<Impl>::setFetchQueue(TimeBuffer<FetchStruct> *fq_ptr)$/;"	f	class:DefaultDecode
setFetchQueue	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::setFetchQueue(TimeBuffer<FetchStruct> *fq_ptr)$/;"	f	class:DefaultFetch
setFetchSeq	src/sim/insttracer.hh	/^    void setFetchSeq(InstSeqNum seq)$/;"	f	class:Trace::InstRecord
setFlag	src/cpu/static_inst.hh	/^    void setFlag(Flags f) { flags[f] = true; }$/;"	f	class:StaticInst
setFlags	src/mem/request.hh	/^    setFlags(Flags flags)$/;"	f	class:Request
setFlags	src/sim/eventq.hh	/^    setFlags(Flags _flags)$/;"	f	class:Event
setFloatEntry	src/cpu/o3/rename_map.hh	/^    void setFloatEntry(RegIndex arch_reg, PhysRegIndex phys_reg)$/;"	f	class:UnifiedRenameMap
setFloatReg	src/cpu/checker/thread_context.hh	/^    void setFloatReg(int reg_idx, FloatReg val)$/;"	f	class:CheckerThreadContext
setFloatReg	src/cpu/inorder/cpu.cc	/^InOrderCPU::setFloatReg(RegIndex reg_idx, FloatReg val, ThreadID tid)$/;"	f	class:InOrderCPU
setFloatReg	src/cpu/inorder/thread_context.cc	/^InOrderThreadContext::setFloatReg(int reg_idx, FloatReg val)$/;"	f	class:InOrderThreadContext
setFloatReg	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::setFloatReg(int reg_idx, FloatReg val)$/;"	f	class:FullO3CPU
setFloatReg	src/cpu/o3/regfile.hh	/^    void setFloatReg(PhysRegIndex reg_idx, FloatReg val)$/;"	f	class:PhysRegFile
setFloatReg	src/cpu/o3/thread_context.hh	/^    virtual void setFloatReg(int reg_idx, FloatReg val) {$/;"	f	class:O3ThreadContext
setFloatReg	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::OzoneTC::setFloatReg(int reg_idx, FloatReg val)$/;"	f	class:OzoneCPU::OzoneTC
setFloatReg	src/cpu/simple_thread.hh	/^    void setFloatReg(int reg_idx, FloatReg val)$/;"	f	class:SimpleThread
setFloatReg	src/cpu/thread_context.hh	/^    void setFloatReg(int reg_idx, FloatReg val)$/;"	f	class:ProxyThreadContext
setFloatRegBits	src/cpu/checker/thread_context.hh	/^    void setFloatRegBits(int reg_idx, FloatRegBits val)$/;"	f	class:CheckerThreadContext
setFloatRegBits	src/cpu/inorder/cpu.cc	/^InOrderCPU::setFloatRegBits(RegIndex reg_idx, FloatRegBits val, ThreadID tid)$/;"	f	class:InOrderCPU
setFloatRegBits	src/cpu/inorder/thread_context.cc	/^InOrderThreadContext::setFloatRegBits(int reg_idx, FloatRegBits val)$/;"	f	class:InOrderThreadContext
setFloatRegBits	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::setFloatRegBits(int reg_idx, FloatRegBits val)$/;"	f	class:FullO3CPU
setFloatRegBits	src/cpu/o3/regfile.hh	/^    void setFloatRegBits(PhysRegIndex reg_idx, FloatRegBits val)$/;"	f	class:PhysRegFile
setFloatRegBits	src/cpu/o3/thread_context.hh	/^    virtual void setFloatRegBits(int reg_idx, FloatRegBits val) {$/;"	f	class:O3ThreadContext
setFloatRegBits	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::OzoneTC::setFloatRegBits(int reg_idx, FloatRegBits val)$/;"	f	class:OzoneCPU::OzoneTC
setFloatRegBits	src/cpu/simple_thread.hh	/^    void setFloatRegBits(int reg_idx, FloatRegBits val)$/;"	f	class:SimpleThread
setFloatRegBits	src/cpu/thread_context.hh	/^    void setFloatRegBits(int reg_idx, FloatRegBits val)$/;"	f	class:ProxyThreadContext
setFloatRegBitsFlat	src/cpu/checker/thread_context.hh	/^    void setFloatRegBitsFlat(int idx, FloatRegBits val)$/;"	f	class:CheckerThreadContext
setFloatRegBitsFlat	src/cpu/inorder/thread_context.cc	/^InOrderThreadContext::setFloatRegBitsFlat(int idx, FloatRegBits val)$/;"	f	class:InOrderThreadContext
setFloatRegBitsFlat	src/cpu/o3/thread_context_impl.hh	/^O3ThreadContext<Impl>::setFloatRegBitsFlat(int reg_idx, FloatRegBits val)$/;"	f	class:O3ThreadContext
setFloatRegBitsFlat	src/cpu/simple_thread.hh	/^    void setFloatRegBitsFlat(int idx, FloatRegBits val) {$/;"	f	class:SimpleThread
setFloatRegBitsFlat	src/cpu/thread_context.hh	/^    void setFloatRegBitsFlat(int idx, FloatRegBits val)$/;"	f	class:ProxyThreadContext
setFloatRegBitsSrc	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::setFloatRegBitsSrc(int idx, FloatRegBits val)$/;"	f	class:InOrderDynInst
setFloatRegFlat	src/cpu/checker/thread_context.hh	/^    void setFloatRegFlat(int idx, FloatReg val)$/;"	f	class:CheckerThreadContext
setFloatRegFlat	src/cpu/inorder/thread_context.cc	/^InOrderThreadContext::setFloatRegFlat(int idx, FloatReg val)$/;"	f	class:InOrderThreadContext
setFloatRegFlat	src/cpu/o3/thread_context_impl.hh	/^O3ThreadContext<Impl>::setFloatRegFlat(int reg_idx, FloatReg val)$/;"	f	class:O3ThreadContext
setFloatRegFlat	src/cpu/simple_thread.hh	/^    void setFloatRegFlat(int idx, FloatReg val) { floatRegs.f[idx] = val; }$/;"	f	class:SimpleThread
setFloatRegFlat	src/cpu/thread_context.hh	/^    void setFloatRegFlat(int idx, FloatReg val)$/;"	f	class:ProxyThreadContext
setFloatRegOperand	src/cpu/base_dyn_inst.hh	/^    void setFloatRegOperand(const StaticInst *si, int idx, FloatReg val)$/;"	f	class:BaseDynInst
setFloatRegOperand	src/cpu/base_dyn_inst.hh	/^    void setFloatRegOperand(const StaticInst *si, int idx, FloatReg val,$/;"	f	class:BaseDynInst
setFloatRegOperand	src/cpu/checker/cpu.hh	/^    void setFloatRegOperand(const StaticInst *si, int idx, FloatReg val)$/;"	f	class:CheckerCPU
setFloatRegOperand	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::setFloatRegOperand(const StaticInst *si, int idx, FloatReg val)$/;"	f	class:InOrderDynInst
setFloatRegOperand	src/cpu/o3/dyn_inst.hh	/^    void setFloatRegOperand(const StaticInst *si, int idx, FloatReg val)$/;"	f	class:BaseO3DynInst
setFloatRegOperand	src/cpu/ozone/dyn_inst.hh	/^    void setFloatRegOperand(const StaticInst *si, int idx, FloatReg val)$/;"	f	class:OzoneDynInst
setFloatRegOperand	src/cpu/simple/base.hh	/^    void setFloatRegOperand(const StaticInst *si, int idx, FloatReg val)$/;"	f	class:BaseSimpleCPU
setFloatRegOperandBits	src/cpu/base_dyn_inst.hh	/^    void setFloatRegOperandBits(const StaticInst *si, int idx, uint64_t val)$/;"	f	class:BaseDynInst
setFloatRegOperandBits	src/cpu/base_dyn_inst.hh	/^    void setFloatRegOperandBits(const StaticInst *si, int idx, uint64_t val,$/;"	f	class:BaseDynInst
setFloatRegOperandBits	src/cpu/checker/cpu.hh	/^    void setFloatRegOperandBits(const StaticInst *si, int idx,$/;"	f	class:CheckerCPU
setFloatRegOperandBits	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::setFloatRegOperandBits(const StaticInst *si, int idx,$/;"	f	class:InOrderDynInst
setFloatRegOperandBits	src/cpu/o3/dyn_inst.hh	/^    void setFloatRegOperandBits(const StaticInst *si, int idx,$/;"	f	class:BaseO3DynInst
setFloatRegOperandBits	src/cpu/ozone/dyn_inst.hh	/^    void setFloatRegOperandBits(const StaticInst *si, int idx,$/;"	f	class:OzoneDynInst
setFloatRegOperandBits	src/cpu/simple/base.hh	/^    void setFloatRegOperandBits(const StaticInst *si, int idx,$/;"	f	class:BaseSimpleCPU
setFloatSrc	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::setFloatSrc(int idx, FloatReg val)$/;"	f	class:InOrderDynInst
setFrameBufferParams	src/base/vnc/vncinput.cc	/^VncInput::setFrameBufferParams(VideoConvert::Mode mode, uint16_t width,$/;"	f	class:VncInput
setFrameBufferParams	src/base/vnc/vncserver.cc	/^VncServer::setFrameBufferParams(VideoConvert::Mode mode, uint16_t width,$/;"	f	class:VncServer
setFramebufferAddr	src/base/vnc/vncinput.hh	/^    setFramebufferAddr(uint8_t* rfb)$/;"	f	class:VncInput
setFreeFU	src/cpu/o3/inst_queue.hh	/^        void setFreeFU() { freeFU = true; }$/;"	f	class:InstructionQueue::FUCompletion
setFreeList	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::setFreeList(FreeList *fl_ptr)$/;"	f	class:DefaultRename
setFreq	src/dev/arm/generic_timer.cc	/^GenericTimer::SystemCounter::setFreq(uint32_t freq)$/;"	f	class:GenericTimer::SystemCounter
setFrontEnd	src/cpu/ozone/back_end.hh	/^    void setFrontEnd(FrontEnd *front_end_ptr)$/;"	f	class:BackEnd
setFrontEnd	src/cpu/ozone/inorder_back_end.hh	/^    void setFrontEnd(FrontEnd *front_end_ptr)$/;"	f	class:InorderBackEnd
setFrontEnd	src/cpu/ozone/lw_back_end.hh	/^    void setFrontEnd(FrontEnd *front_end_ptr)$/;"	f	class:LWBackEnd
setFrontSked	src/cpu/inorder/inorder_dyn_inst.hh	/^    void setFrontSked(RSkedPtr front_sked)$/;"	f	class:InOrderDynInst
setFuncExeInst	src/cpu/ozone/cpu.hh	/^        void setFuncExeInst(Counter new_val)$/;"	f	class:OzoneCPU::OzoneTC
setFuncExeInst	src/cpu/thread_state.hh	/^    void setFuncExeInst(Counter new_val) { funcExeInst = new_val; }$/;"	f	struct:ThreadState
setFunctionalResponseStatus	src/mem/packet.hh	/^    setFunctionalResponseStatus(bool success)$/;"	f	class:Packet
setGenericTimer	src/arch/arm/system.hh	/^    void setGenericTimer(GenericTimer *generic_timer)$/;"	f	class:ArmSystem
setGic	src/dev/arm/realview.hh	/^    void setGic(BaseGic *_gic) { gic = _gic; }$/;"	f	class:RealView
setGlobalFrequency	src/python/m5/ticks.py	/^def setGlobalFrequency(ticksPerSecond):$/;"	f
setGlobalPointer	src/base/loader/object_file.hh	/^    void setGlobalPointer(Addr global_ptr) { globalPtr = global_ptr; }$/;"	f	class:ObjectFile
setHotLines	src/mem/ruby/profiler/AddressProfiler.cc	/^AddressProfiler::setHotLines(bool hot_lines)$/;"	f	class:AddressProfiler
setIEWQueue	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::setIEWQueue(TimeBuffer<IEWStruct> *iq_ptr)$/;"	f	class:DefaultCommit
setIEWQueue	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::setIEWQueue(TimeBuffer<IEWStruct> *iq_ptr)$/;"	f	class:DefaultIEW
setIEWStage	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::setIEWStage(IEW *iew_stage)$/;"	f	class:DefaultCommit
setIEWStage	src/cpu/o3/rename.hh	/^    void setIEWStage(IEW *iew_stage)$/;"	f	class:DefaultRename
setIQ	src/cpu/o3/mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::setIQ(InstructionQueue<Impl> *iq_ptr)$/;"	f	class:MemDepUnit
setIRQLine	src/cpu/kvm/vm.cc	/^KvmVM::setIRQLine(uint32_t irq, bool high)$/;"	f	class:KvmVM
setIWNextPC	src/arch/arm/insts/static_inst.hh	/^    setIWNextPC(XC *xc, Addr val)$/;"	f	class:ArmISA::ArmStaticInst
setIcachePort	src/cpu/checker/cpu.cc	/^CheckerCPU::setIcachePort(MasterPort *icache_port)$/;"	f	class:CheckerCPU
setIdleProcess	src/arch/alpha/kernel_stats.cc	/^Statistics::setIdleProcess(Addr idlepcbb, ThreadContext *tc)$/;"	f	class:AlphaISA::Kernel::Statistics
setInIQ	src/cpu/base_dyn_inst.hh	/^    void setInIQ() { status.set(IqEntry); }$/;"	f	class:BaseDynInst
setInLSQ	src/cpu/base_dyn_inst.hh	/^    void setInLSQ() { status.set(LsqEntry); }$/;"	f	class:BaseDynInst
setInPort	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.cc	/^NetworkLink::setInPort(int port)$/;"	f	class:NetworkLink
setInROB	src/cpu/base_dyn_inst.hh	/^    void setInROB() { status.set(RobEntry); }$/;"	f	class:BaseDynInst
setIncomingLink	src/mem/ruby/buffers/MessageBuffer.hh	/^    void setIncomingLink(int link_id) { m_input_link_id = link_id; }$/;"	f	class:MessageBuffer
setIncomingLink	src/mem/ruby/slicc_interface/Message.hh	/^    virtual void setIncomingLink(int) {}$/;"	f	class:Message
setIncomingLink	src/mem/ruby/slicc_interface/NetworkMessage.hh	/^    void setIncomingLink(int link) { incoming_link = link; }$/;"	f	class:NetworkMessage
setInfo	src/base/statistics.cc	/^InfoAccess::setInfo(Info *info)$/;"	f	class:Stats::InfoAccess
setInit	src/base/statistics.cc	/^InfoAccess::setInit()$/;"	f	class:Stats::InfoAccess
setInst	src/cpu/o3/dep_graph.hh	/^    void setInst(PhysRegIndex idx, DynInstPtr &new_inst)$/;"	f	class:DependencyGraph
setInstListIt	src/cpu/base_dyn_inst.hh	/^    void setInstListIt(ListIt _instListIt) { instListIt = _instListIt; }$/;"	f	class:BaseDynInst
setInstListIt	src/cpu/inorder/inorder_dyn_inst.hh	/^    void setInstListIt(ListIt _instListIt) { onInstList = true; instListIt = _instListIt; }$/;"	f	class:InOrderDynInst
setInstSeqNum	src/cpu/inorder/cpu.hh	/^    void setInstSeqNum(ThreadID tid, InstSeqNum seq_num)$/;"	f	class:InOrderCPU
setIntEntry	src/cpu/o3/rename_map.hh	/^    void setIntEntry(RegIndex arch_reg, PhysRegIndex phys_reg)$/;"	f	class:UnifiedRenameMap
setIntReg	src/cpu/checker/thread_context.hh	/^    void setIntReg(int reg_idx, uint64_t val)$/;"	f	class:CheckerThreadContext
setIntReg	src/cpu/inorder/cpu.cc	/^InOrderCPU::setIntReg(RegIndex reg_idx, uint64_t val, ThreadID tid)$/;"	f	class:InOrderCPU
setIntReg	src/cpu/inorder/thread_context.cc	/^InOrderThreadContext::setIntReg(int reg_idx, uint64_t val)$/;"	f	class:InOrderThreadContext
setIntReg	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::setIntReg(int reg_idx, uint64_t val)$/;"	f	class:FullO3CPU
setIntReg	src/cpu/o3/regfile.hh	/^    void setIntReg(PhysRegIndex reg_idx, uint64_t val)$/;"	f	class:PhysRegFile
setIntReg	src/cpu/o3/thread_context.hh	/^    virtual void setIntReg(int reg_idx, uint64_t val) {$/;"	f	class:O3ThreadContext
setIntReg	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::OzoneTC::setIntReg(int reg_idx, uint64_t val)$/;"	f	class:OzoneCPU::OzoneTC
setIntReg	src/cpu/simple_thread.hh	/^    void setIntReg(int reg_idx, uint64_t val)$/;"	f	class:SimpleThread
setIntReg	src/cpu/thread_context.hh	/^    void setIntReg(int reg_idx, uint64_t val)$/;"	f	class:ProxyThreadContext
setIntRegFlat	src/cpu/checker/thread_context.hh	/^    void setIntRegFlat(int idx, uint64_t val)$/;"	f	class:CheckerThreadContext
setIntRegFlat	src/cpu/inorder/thread_context.cc	/^InOrderThreadContext::setIntRegFlat(int idx, uint64_t val)$/;"	f	class:InOrderThreadContext
setIntRegFlat	src/cpu/o3/thread_context_impl.hh	/^O3ThreadContext<Impl>::setIntRegFlat(int reg_idx, uint64_t val)$/;"	f	class:O3ThreadContext
setIntRegFlat	src/cpu/simple_thread.hh	/^    void setIntRegFlat(int idx, uint64_t val) { intRegs[idx] = val; }$/;"	f	class:SimpleThread
setIntRegFlat	src/cpu/thread_context.hh	/^    void setIntRegFlat(int idx, uint64_t val)$/;"	f	class:ProxyThreadContext
setIntRegOperand	src/cpu/base_dyn_inst.hh	/^    void setIntRegOperand(const StaticInst *si, int idx, uint64_t val)$/;"	f	class:BaseDynInst
setIntRegOperand	src/cpu/checker/cpu.hh	/^    void setIntRegOperand(const StaticInst *si, int idx, uint64_t val)$/;"	f	class:CheckerCPU
setIntRegOperand	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::setIntRegOperand(const StaticInst *si, int idx, IntReg val)$/;"	f	class:InOrderDynInst
setIntRegOperand	src/cpu/o3/dyn_inst.hh	/^    void setIntRegOperand(const StaticInst *si, int idx, uint64_t val)$/;"	f	class:BaseO3DynInst
setIntRegOperand	src/cpu/ozone/dyn_inst.hh	/^    void setIntRegOperand(const StaticInst *si, int idx, uint64_t val)$/;"	f	class:OzoneDynInst
setIntRegOperand	src/cpu/simple/base.hh	/^    void setIntRegOperand(const StaticInst *si, int idx, uint64_t val)$/;"	f	class:BaseSimpleCPU
setIntResult	src/cpu/ozone/dyn_inst.hh	/^    void setIntResult(uint64_t result) { this->instResult.integer = result; }$/;"	f	class:OzoneDynInst
setIntSrc	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::setIntSrc(int idx, uint64_t val)$/;"	f	class:InOrderDynInst
setIntrFreq	src/arch/alpha/system.hh	/^    void setIntrFreq(Tick freq) { intrFreq = freq; }$/;"	f	class:AlphaSystem
setIpr	src/arch/alpha/ev5.cc	/^ISA::setIpr(int idx, uint64_t val, ThreadContext *tc)$/;"	f	class:AlphaISA::ISA
setIssueExecQueue	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::InstQueue::setIssueExecQueue(TimeBuffer<IssueToExec> *i2e_queue)$/;"	f	class:BackEnd::InstQueue
setIssueToExecuteQueue	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::setIssueToExecuteQueue(TimeBuffer<IssueStruct> *i2e_ptr)$/;"	f	class:InstructionQueue
setIssueToExecuteQueue	src/cpu/ozone/inst_queue_impl.hh	/^InstQueue<Impl>::setIssueToExecuteQueue(TimeBuffer<IssueStruct> *i2e_ptr)$/;"	f	class:InstQueue
setIssued	src/cpu/base_dyn_inst.hh	/^    void setIssued() { status.set(Issued); }$/;"	f	class:BaseDynInst
setIssued	src/cpu/inorder/inorder_dyn_inst.hh	/^    void setIssued() { status.set(Issued); }$/;"	f	class:InOrderDynInst
setKeyboard	src/base/vnc/vncinput.hh	/^    void setKeyboard(VncKeyboard *_keyboard) { keyboard = _keyboard; }$/;"	f	class:VncInput
setKvmDTableReg	src/cpu/kvm/x86_cpu.cc	/^setKvmDTableReg(ThreadContext *tc, struct kvm_dtable &kvm_dtable,$/;"	f	file:
setKvmSegmentReg	src/cpu/kvm/x86_cpu.cc	/^setKvmSegmentReg(ThreadContext *tc, struct kvm_segment &kvm_seg,$/;"	f	file:
setLastEnqueueTime	src/mem/ruby/slicc_interface/Message.hh	/^    void setLastEnqueueTime(const Tick& time) { m_LastEnqueueTime = time; }$/;"	f	class:Message
setLastMicroop	src/cpu/static_inst.hh	/^    void setLastMicroop() { flags[IsLastMicroop] = true; }$/;"	f	class:StaticInst
setLinkConsumer	src/mem/ruby/network/garnet/fixed-pipeline/NetworkLink_d.cc	/^NetworkLink_d::setLinkConsumer(Consumer *consumer)$/;"	f	class:NetworkLink_d
setLinkConsumer	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.cc	/^NetworkLink::setLinkConsumer(FlexibleConsumer *consumer)$/;"	f	class:NetworkLink
setLoadBlockedHandled	src/cpu/o3/lsq.hh	/^    void setLoadBlockedHandled(ThreadID tid)$/;"	f	class:LSQ
setLoadBlockedHandled	src/cpu/o3/lsq_unit.hh	/^    void setLoadBlockedHandled()$/;"	f	class:LSQUnit
setLoadBlockedHandled	src/cpu/ozone/lw_lsq.hh	/^    void setLoadBlockedHandled()$/;"	f	class:OzoneLWLSQ
setLocked	src/mem/ruby/system/CacheMemory.cc	/^CacheMemory::setLocked(const Address& address, int context)$/;"	f	class:CacheMemory
setM5Reg	src/arch/x86/decoder.hh	/^    void setM5Reg(HandyM5Reg m5Reg)$/;"	f	class:X86ISA::Decoder
setMMU	src/arch/arm/table_walker.hh	/^    void setMMU(Stage2MMU *m) { stage2Mmu = m; }$/;"	f	class:ArmISA::TableWalker
setMMU	src/arch/arm/tlb.cc	/^TLB::setMMU(Stage2MMU *m)$/;"	f	class:TLB
setMRU	src/mem/ruby/system/CacheMemory.cc	/^CacheMemory::setMRU(const Address& address)$/;"	f	class:CacheMemory
setMSR	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::setMSR(uint32_t index, uint64_t value)$/;"	f	class:X86KvmCPU
setMSRs	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::setMSRs(const KvmMSRVector &msrs)$/;"	f	class:X86KvmCPU
setMSRs	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::setMSRs(const struct kvm_msrs &msrs)$/;"	f	class:X86KvmCPU
setMask	src/mem/cache/tags/lru.hh	/^    unsigned setMask;$/;"	m	class:LRU
setMaxSize	src/mem/ruby/network/garnet/fixed-pipeline/flitBuffer_d.cc	/^flitBuffer_d::setMaxSize(int maximum)$/;"	f	class:flitBuffer_d
setMaxSize	src/mem/ruby/network/garnet/flexible-pipeline/flitBuffer.cc	/^flitBuffer::setMaxSize(int maximum)$/;"	f	class:flitBuffer
setMemAccCompleted	src/cpu/inorder/resources/cache_unit.hh	/^    setMemAccCompleted(bool completed = true)$/;"	f	class:CacheRequest
setMemAccPending	src/cpu/inorder/resources/cache_unit.hh	/^    void setMemAccPending(bool pending = true) { memAccPending = pending; }$/;"	f	class:CacheRequest
setMemAddr	src/cpu/inorder/inorder_dyn_inst.hh	/^    void setMemAddr(Addr addr)$/;"	f	class:InOrderDynInst
setMemStall	src/cpu/inorder/resource.hh	/^    void setMemStall(bool stall = true) { memStall = stall; }$/;"	f	class:ResourceRequest
setMemoryMode	src/sim/system.cc	/^System::setMemoryMode(Enums::MemoryMode mode)$/;"	f	class:System
setMicroPC	src/cpu/inorder/thread_context.hh	/^    void setMicroPC(uint64_t val) { };$/;"	f	class:InOrderThreadContext
setMipsAccess	src/arch/mips/system.cc	/^MipsSystem::setMipsAccess(Addr access)$/;"	f	class:MipsSystem
setMiscReg	src/arch/alpha/isa.cc	/^ISA::setMiscReg(int misc_reg, const MiscReg &val, ThreadContext *tc,$/;"	f	class:AlphaISA::ISA
setMiscReg	src/arch/arm/isa.cc	/^ISA::setMiscReg(int misc_reg, const MiscReg &val, ThreadContext *tc)$/;"	f	class:ArmISA::ISA
setMiscReg	src/arch/mips/isa.cc	/^ISA::setMiscReg(int misc_reg, const MiscReg &val,$/;"	f	class:MipsISA::ISA
setMiscReg	src/arch/power/isa.hh	/^    setMiscReg(int misc_reg, const MiscReg &val, ThreadContext *tc)$/;"	f	class:PowerISA::ISA
setMiscReg	src/arch/sparc/isa.cc	/^ISA::setMiscReg(int miscReg, MiscReg val, ThreadContext * tc)$/;"	f	class:SparcISA::ISA
setMiscReg	src/arch/x86/isa.cc	/^ISA::setMiscReg(int miscReg, MiscReg val, ThreadContext * tc)$/;"	f	class:X86ISA::ISA
setMiscReg	src/cpu/checker/cpu.hh	/^    void setMiscReg(int misc_reg, const MiscReg &val)$/;"	f	class:CheckerCPU
setMiscReg	src/cpu/checker/thread_context.hh	/^    void setMiscReg(int misc_reg, const MiscReg &val)$/;"	f	class:CheckerThreadContext
setMiscReg	src/cpu/inorder/cpu.cc	/^InOrderCPU::setMiscReg(int misc_reg, const MiscReg &val, ThreadID tid)$/;"	f	class:InOrderCPU
setMiscReg	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::setMiscReg(int misc_reg, const MiscReg &val)$/;"	f	class:InOrderDynInst
setMiscReg	src/cpu/inorder/thread_context.cc	/^InOrderThreadContext::setMiscReg(int misc_reg, const MiscReg &val)$/;"	f	class:InOrderThreadContext
setMiscReg	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::setMiscReg(int misc_reg,$/;"	f	class:FullO3CPU
setMiscReg	src/cpu/o3/dyn_inst.hh	/^    void setMiscReg(int misc_reg, const MiscReg &val)$/;"	f	class:BaseO3DynInst
setMiscReg	src/cpu/o3/thread_context_impl.hh	/^O3ThreadContext<Impl>::setMiscReg(int misc_reg, const MiscReg &val)$/;"	f	class:O3ThreadContext
setMiscReg	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::OzoneTC::setMiscReg(int misc_reg, const MiscReg &val)$/;"	f	class:OzoneCPU::OzoneTC
setMiscReg	src/cpu/ozone/dyn_inst_impl.hh	/^OzoneDynInst<Impl>::setMiscReg(int misc_reg, const MiscReg &val)$/;"	f	class:OzoneDynInst
setMiscReg	src/cpu/ozone/thread_state.hh	/^    void setMiscReg(int misc_reg, const MiscReg &val)$/;"	f	struct:OzoneThreadState
setMiscReg	src/cpu/simple/base.hh	/^    void setMiscReg(int misc_reg, const MiscReg &val)$/;"	f	class:BaseSimpleCPU
setMiscReg	src/cpu/simple_thread.hh	/^    setMiscReg(int misc_reg, const MiscReg &val, ThreadID tid = 0)$/;"	f	class:SimpleThread
setMiscReg	src/cpu/thread_context.hh	/^    void setMiscReg(int misc_reg, const MiscReg &val)$/;"	f	class:ProxyThreadContext
setMiscRegNoEffect	src/arch/alpha/isa.cc	/^ISA::setMiscRegNoEffect(int misc_reg, const MiscReg &val, ThreadID tid)$/;"	f	class:AlphaISA::ISA
setMiscRegNoEffect	src/arch/arm/isa.cc	/^ISA::setMiscRegNoEffect(int misc_reg, const MiscReg &val)$/;"	f	class:ArmISA::ISA
setMiscRegNoEffect	src/arch/mips/isa.cc	/^ISA::setMiscRegNoEffect(int misc_reg, const MiscReg &val, ThreadID tid)$/;"	f	class:MipsISA::ISA
setMiscRegNoEffect	src/arch/power/isa.hh	/^    setMiscRegNoEffect(int misc_reg, const MiscReg &val)$/;"	f	class:PowerISA::ISA
setMiscRegNoEffect	src/arch/sparc/isa.cc	/^ISA::setMiscRegNoEffect(int miscReg, MiscReg val)$/;"	f	class:SparcISA::ISA
setMiscRegNoEffect	src/arch/x86/isa.cc	/^ISA::setMiscRegNoEffect(int miscReg, MiscReg val)$/;"	f	class:X86ISA::ISA
setMiscRegNoEffect	src/cpu/checker/cpu.hh	/^    void setMiscRegNoEffect(int misc_reg, const MiscReg &val)$/;"	f	class:CheckerCPU
setMiscRegNoEffect	src/cpu/checker/thread_context.hh	/^    void setMiscRegNoEffect(int misc_reg, const MiscReg &val)$/;"	f	class:CheckerThreadContext
setMiscRegNoEffect	src/cpu/inorder/cpu.cc	/^InOrderCPU::setMiscRegNoEffect(int misc_reg, const MiscReg &val, ThreadID tid)$/;"	f	class:InOrderCPU
setMiscRegNoEffect	src/cpu/inorder/thread_context.cc	/^InOrderThreadContext::setMiscRegNoEffect(int misc_reg, const MiscReg &val)$/;"	f	class:InOrderThreadContext
setMiscRegNoEffect	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::setMiscRegNoEffect(int misc_reg,$/;"	f	class:FullO3CPU
setMiscRegNoEffect	src/cpu/o3/thread_context_impl.hh	/^O3ThreadContext<Impl>::setMiscRegNoEffect(int misc_reg, const MiscReg &val)$/;"	f	class:O3ThreadContext
setMiscRegNoEffect	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::OzoneTC::setMiscRegNoEffect(int misc_reg, const MiscReg &val)$/;"	f	class:OzoneCPU::OzoneTC
setMiscRegNoEffect	src/cpu/ozone/dyn_inst_impl.hh	/^OzoneDynInst<Impl>::setMiscRegNoEffect(int misc_reg, const MiscReg &val)$/;"	f	class:OzoneDynInst
setMiscRegNoEffect	src/cpu/ozone/thread_state.hh	/^    void setMiscRegNoEffect(int misc_reg, const MiscReg &val)$/;"	f	struct:OzoneThreadState
setMiscRegNoEffect	src/cpu/simple_thread.hh	/^    setMiscRegNoEffect(int misc_reg, const MiscReg &val, ThreadID tid = 0)$/;"	f	class:SimpleThread
setMiscRegNoEffect	src/cpu/thread_context.hh	/^    void setMiscRegNoEffect(int misc_reg, const MiscReg &val)$/;"	f	class:ProxyThreadContext
setMiscRegOperand	src/cpu/checker/cpu.hh	/^    void setMiscRegOperand($/;"	f	class:CheckerCPU
setMiscRegOperand	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::setMiscRegOperand(const StaticInst *si, int idx,$/;"	f	class:InOrderDynInst
setMiscRegOperand	src/cpu/o3/dyn_inst.hh	/^    void setMiscRegOperand(const StaticInst *si, int idx,$/;"	f	class:BaseO3DynInst
setMiscRegOperand	src/cpu/simple/base.hh	/^    void setMiscRegOperand($/;"	f	class:BaseSimpleCPU
setMode	src/dev/intel_8254_timer.cc	/^Intel8254Timer::Counter::setMode(int mode_val)$/;"	f	class:Intel8254Timer::Counter
setMouse	src/base/vnc/vncinput.hh	/^    void setMouse(VncMouse *_mouse) { mouse = _mouse; }$/;"	f	class:VncInput
setName	src/base/statistics.cc	/^Info::setName(const string &name)$/;"	f	class:Stats::Info
setNetDest	src/mem/ruby/common/NetDest.cc	/^NetDest::setNetDest(MachineType machine, const Set& set)$/;"	f	class:NetDest
setNextMicroPC	src/cpu/inorder/thread_context.hh	/^    void setNextMicroPC(uint64_t val) { };$/;"	f	class:InOrderThreadContext
setNextNPC	src/cpu/ozone/cpu.hh	/^        void setNextNPC(uint64_t val)$/;"	f	class:OzoneCPU::OzoneTC
setNextPC	src/arch/arm/insts/static_inst.hh	/^    setNextPC(XC *xc, Addr val)$/;"	f	class:ArmISA::ArmStaticInst
setNextPC	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::OzoneTC::setNextPC(Addr val)$/;"	f	class:OzoneCPU::OzoneTC
setNextPC	src/cpu/ozone/front_end.hh	/^    void setNextPC(Addr val) { nextPC = val; }$/;"	f	class:FrontEnd
setNextPC	src/cpu/ozone/thread_state.hh	/^    void setNextPC(uint64_t val)$/;"	f	struct:OzoneThreadState
setNextStage	src/cpu/inorder/inorder_dyn_inst.hh	/^    void setNextStage(int stage_num) { nextStage = stage_num; }$/;"	f	class:InOrderDynInst
setNextStageQueue	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::setNextStageQueue(TimeBuffer<InterStageStruct> *next_stage_ptr)$/;"	f	class:PipelineStage
setNextStatus	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::setNextStatus()$/;"	f	class:DefaultCommit
setNoFault	src/cpu/translation.hh	/^    setNoFault()$/;"	f	class:WholeTranslationState
setOffset	src/mem/ruby/common/Address.hh	/^    setOffset(int offset)$/;"	f	class:Address
setOffset	src/mem/ruby/slicc_interface/RubySlicc_Util.hh	/^setOffset(Address addr, int offset)$/;"	f
setOneReg	src/cpu/kvm/base.cc	/^BaseKvmCPU::setOneReg(uint64_t id, const void *addr)$/;"	f	class:BaseKvmCPU
setOneReg	src/cpu/kvm/base.hh	/^    void setOneReg(uint64_t id, uint32_t value) { setOneReg(id, &value); }$/;"	f	class:BaseKvmCPU
setOneReg	src/cpu/kvm/base.hh	/^    void setOneReg(uint64_t id, uint64_t value) { setOneReg(id, &value); }$/;"	f	class:BaseKvmCPU
setOrdering	src/mem/ruby/buffers/MessageBuffer.hh	/^    setOrdering(bool order)$/;"	f	class:MessageBuffer
setOutPort	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.cc	/^NetworkLink::setOutPort(int port)$/;"	f	class:NetworkLink
setOutput	src/base/trace.cc	/^setOutput(const string &filename)$/;"	f	namespace:Trace
setOutputDir	src/python/m5/core.py	/^def setOutputDir(dir):$/;"	f
setOutputDir	src/sim/core.cc	/^setOutputDir(const string &dir)$/;"	f
setPC	src/cpu/inorder/inorder_trace.hh	/^    void setPC(TheISA::PCState _pc) { pc = _pc; }$/;"	f	class:Trace::InOrderTraceRecord
setPC	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::OzoneTC::setPC(Addr val)$/;"	f	class:OzoneCPU::OzoneTC
setPC	src/cpu/ozone/front_end.hh	/^    void setPC(Addr val) { PC = val; }$/;"	f	class:FrontEnd
setPC	src/cpu/ozone/thread_state.hh	/^    void setPC(uint64_t val)$/;"	f	struct:OzoneThreadState
setPC	src/mem/request.hh	/^    setPC(Addr pc)$/;"	f	class:Request
setPaddr	src/mem/request.hh	/^    setPaddr(Addr paddr)$/;"	f	class:Request
setParams	src/base/statistics.cc	/^InfoAccess::setParams(const StorageParams *params)$/;"	f	class:Stats::InfoAccess
setPeer	src/dev/etherint.cc	/^EtherInt::setPeer(EtherInt *p)$/;"	f	class:EtherInt
setPhys	src/mem/request.hh	/^    setPhys(Addr paddr, int size, Flags flags, MasterID mid)$/;"	f	class:Request
setPhys	src/mem/request.hh	/^    setPhys(Addr paddr, int size, Flags flags, MasterID mid, Tick time)$/;"	f	class:Request
setPid	src/cpu/base.hh	/^    void setPid(uint32_t pid) { _pid = pid; }$/;"	f	class:BaseCPU
setPixelFormat	src/base/vnc/vncserver.cc	/^VncServer::setPixelFormat()$/;"	f	class:VncServer
setPredTaken	src/cpu/base_dyn_inst.hh	/^    void setPredTaken(bool predicted_taken)$/;"	f	class:BaseDynInst
setPredTarg	src/cpu/base_dyn_inst.hh	/^    void setPredTarg(const TheISA::PCState &_predPC)$/;"	f	class:BaseDynInst
setPredTarg	src/cpu/inorder/inorder_dyn_inst.hh	/^    void setPredTarg(const TheISA::PCState &predictedPC)$/;"	f	class:InOrderDynInst
setPredicate	src/cpu/base_dyn_inst.hh	/^    void setPredicate(bool val)$/;"	f	class:BaseDynInst
setPredicate	src/cpu/checker/cpu.hh	/^    void setPredicate(bool val)$/;"	f	class:CheckerCPU
setPredicate	src/cpu/simple/base.hh	/^    void setPredicate(bool val)$/;"	f	class:BaseSimpleCPU
setPredicate	src/cpu/simple_thread.hh	/^    void setPredicate(bool val)$/;"	f	class:SimpleThread
setPredicate	src/cpu/thread_context.hh	/^    void setPredicate(bool val)$/;"	f	class:ProxyThreadContext
setPredicate	src/sim/insttracer.hh	/^    void setPredicate(bool val) { predicate = val; }$/;"	f	class:Trace::InstRecord
setPrevDestInst	src/cpu/ozone/dyn_inst.hh	/^    void setPrevDestInst(DynInstPtr &oldDestInst, int regIdx)$/;"	f	class:OzoneDynInst
setPrevStageQueue	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::setPrevStageQueue(TimeBuffer<InterStageStruct> *prev_stage_ptr)$/;"	f	class:PipelineStage
setPriority	src/mem/ruby/buffers/MessageBuffer.hh	/^    void setPriority(int rank) { m_priority_rank = rank; }$/;"	f	class:MessageBuffer
setProcessing	src/cpu/inorder/resource.hh	/^    void setProcessing(bool cond = true) { processing = cond; }$/;"	f	class:ResourceRequest
setRFlags	src/arch/x86/utility.cc	/^setRFlags(ThreadContext *tc, uint64_t val)$/;"	f	namespace:X86ISA
setROB	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::setROB(ROB *rob_ptr)$/;"	f	class:DefaultCommit
setRW	src/dev/intel_8254_timer.cc	/^Intel8254Timer::Counter::setRW(int rw_val)$/;"	f	class:Intel8254Timer::Counter
setRandomization	src/mem/ruby/buffers/MessageBuffer.hh	/^    void setRandomization(bool random_flag) { m_randomization = random_flag; }$/;"	f	class:MessageBuffer
setReadPipeSource	src/sim/process.cc	/^Process::setReadPipeSource(int read_pipe_fd, int source_fd)$/;"	f	class:Process
setReceiver	src/mem/ruby/buffers/MessageBuffer.hh	/^    void setReceiver(ClockedObject* obj)$/;"	f	class:MessageBuffer
setRecycleLatency	src/mem/ruby/buffers/MessageBuffer.hh	/^    void setRecycleLatency(Cycles recycle_latency)$/;"	f	class:MessageBuffer
setReg	src/arch/x86/interrupts.cc	/^X86ISA::Interrupts::setReg(ApicRegIndex reg, uint32_t val)$/;"	f	class:X86ISA::Interrupts
setReg	src/cpu/o3/scoreboard.hh	/^    void setReg(PhysRegIndex reg_idx)$/;"	f	class:Scoreboard
setRegArrayBit	src/arch/x86/interrupts.hh	/^    setRegArrayBit(ApicRegIndex base, uint8_t vector)$/;"	f	class:X86ISA::Interrupts
setRegDepEntry	src/cpu/inorder/inorder_dyn_inst.hh	/^    void setRegDepEntry() { status.set(RegDepMapEntry); }$/;"	f	class:InOrderDynInst
setRegMask	src/arch/mips/isa.cc	/^ISA::setRegMask(int misc_reg, const MiscReg &val, ThreadID tid)$/;"	f	class:MipsISA::ISA
setRegNoEffect	src/arch/x86/interrupts.hh	/^    setRegNoEffect(ApicRegIndex reg, uint32_t val)$/;"	f	class:X86ISA::Interrupts
setRegOtherThread	src/cpu/checker/cpu.hh	/^    void setRegOtherThread(int misc_reg, const TheISA::MiscReg &val)$/;"	f	class:CheckerCPU
setRegOtherThread	src/cpu/inorder/cpu.cc	/^InOrderCPU::setRegOtherThread(unsigned reg_idx, const MiscReg &val,$/;"	f	class:InOrderCPU
setRegOtherThread	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::setRegOtherThread(unsigned reg_idx, const MiscReg &val,$/;"	f	class:InOrderDynInst
setRegOtherThread	src/cpu/inorder/thread_context.cc	/^InOrderThreadContext::setRegOtherThread(int misc_reg, const MiscReg &val,$/;"	f	class:InOrderThreadContext
setRegOtherThread	src/cpu/o3/dyn_inst.hh	/^    void setRegOtherThread(int misc_reg, const TheISA::MiscReg &val)$/;"	f	class:BaseO3DynInst
setRegOtherThread	src/cpu/simple/base.hh	/^     void setRegOtherThread(int regIdx, const MiscReg &val,$/;"	f	class:BaseSimpleCPU
setRegOtherThread	src/cpu/thread_context.hh	/^    setRegOtherThread(int misc_reg, const MiscReg &val, ThreadID tid)$/;"	f	class:ThreadContext
setRegisters	src/cpu/kvm/base.cc	/^BaseKvmCPU::setRegisters(const struct kvm_regs &regs)$/;"	f	class:BaseKvmCPU
setRemoteGDBPort	src/python/m5/debug.py	/^from internal.debug import schedBreak, setRemoteGDBPort$/;"	i
setRemoteGDBPort	src/sim/debug.cc	/^setRemoteGDBPort(int port)$/;"	f
setRemove	src/cpu/o3/cpu.hh	/^        void setRemove(bool _remove) { remove = _remove; }$/;"	f	class:FullO3CPU::DeallocateContextEvent
setRemoveList	src/cpu/inorder/inorder_dyn_inst.hh	/^    void setRemoveList() { status.set(RemoveList); }$/;"	f	class:InOrderDynInst
setRenameMap	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::setRenameMap(RenameMap rm_ptr[])$/;"	f	class:DefaultCommit
setRenameMap	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::setRenameMap(RenameMap rm_ptr[])$/;"	f	class:DefaultRename
setRenameQueue	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::setRenameQueue(TimeBuffer<RenameStruct> *rq_ptr)$/;"	f	class:DefaultCommit
setRenameQueue	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::setRenameQueue(TimeBuffer<RenameStruct> *rq_ptr)$/;"	f	class:DefaultIEW
setRenameQueue	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::setRenameQueue(TimeBuffer<RenameStruct> *rq_ptr)$/;"	f	class:DefaultRename
setReq	src/cpu/o3/fetch.hh	/^        void setReq(RequestPtr _req)$/;"	f	class:DefaultFetch::FinishTranslationEvent
setRequest	src/cpu/inorder/resource.cc	/^ResourceRequest::setRequest(DynInstPtr _inst, int stage_num,$/;"	f	class:ResourceRequest
setRequest	src/cpu/inorder/resources/cache_unit.hh	/^    void setRequest(DynInstPtr _inst, int stage_num, int res_idx, int slot_num,$/;"	f	class:CacheRequest
setRequest	src/cpu/inorder/resources/tlb_unit.hh	/^    void setRequest(DynInstPtr inst, int stage_num, int res_idx, int slot_num,$/;"	f	class:TLBUnitRequest
setRequest	src/cpu/inorder/resources/use_def.hh	/^        void setRequest(DynInstPtr _inst, int stage_num, int res_idx,$/;"	f	class:UseDefUnit::UseDefRequest
setResStall	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::setResStall(ResReqPtr res_req, ThreadID tid)$/;"	f	class:PipelineStage
setRestartAddress	src/arch/alpha/faults.hh	/^    bool setRestartAddress() {return false;}$/;"	f	class:AlphaISA::InterruptFault
setRestartAddress	src/arch/alpha/faults.hh	/^    virtual bool setRestartAddress() {return true;}$/;"	f	class:AlphaISA::AlphaFault
setResult	src/cpu/base_dyn_inst.hh	/^    void setResult(T t)$/;"	f	class:BaseDynInst
setResult	src/cpu/checker/cpu.hh	/^    void setResult(T t)$/;"	f	class:CheckerCPU
setResultReady	src/cpu/base_dyn_inst.hh	/^    void setResultReady() { status.set(ResultReady); }$/;"	f	class:BaseDynInst
setResultReady	src/cpu/inorder/inorder_dyn_inst.hh	/^    void setResultReady() { status.set(ResultReady); }$/;"	f	class:InOrderDynInst
setRetryTid	src/cpu/o3/lsq.hh	/^    void setRetryTid(ThreadID tid)$/;"	f	class:LSQ
setRoute	src/mem/ruby/network/garnet/flexible-pipeline/InVcState.cc	/^InVcState::setRoute(int route)$/;"	f	class:InVcState
setRxInt	src/dev/etherlink.hh	/^        void setRxInt(Interface *i) { assert(!rxint); rxint = i; }$/;"	f	class:EtherLink::Link
setScoreboard	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::setScoreboard(Scoreboard *sb_ptr)$/;"	f	class:DefaultIEW
setScoreboard	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::setScoreboard(Scoreboard *_scoreboard)$/;"	f	class:DefaultRename
setSeg	src/arch/x86/emulenv.cc	/^void EmulEnv::setSeg(const ExtMachInst & machInst)$/;"	f	class:EmulEnv
setSelfDelete	src/arch/arm/stage2_lookup.hh	/^    void setSelfDelete() { selfDelete = true; }$/;"	f	class:ArmISA::Stage2LookUp
setSender	src/mem/ruby/buffers/MessageBuffer.hh	/^    void setSender(ClockedObject* obj)$/;"	f	class:MessageBuffer
setSeparator	src/base/statistics.hh	/^    const std::string &setSeparator() const$/;"	f	class:Stats::DataWrap
setSeparator	src/base/statistics.hh	/^    setSeparator(const std::string &_sep)$/;"	f	class:Stats::DataWrap
setSeparator	src/base/stats/info.hh	/^    void setSeparator(std::string _sep) { separatorString = _sep;}$/;"	f	class:Stats::Info
setSeqNum	src/cpu/inorder/inorder_dyn_inst.hh	/^    void setSeqNum(InstSeqNum seq_num) { seqNum = seq_num; }$/;"	f	class:InOrderDynInst
setSerializeAfter	src/cpu/base_dyn_inst.hh	/^    void setSerializeAfter() { status.set(SerializeAfter); }$/;"	f	class:BaseDynInst
setSerializeAfter	src/cpu/inorder/inorder_dyn_inst.hh	/^    void setSerializeAfter() { status.set(SerializeAfter); }$/;"	f	class:InOrderDynInst
setSerializeBefore	src/cpu/base_dyn_inst.hh	/^    void setSerializeBefore() { status.set(SerializeBefore); }$/;"	f	class:BaseDynInst
setSerializeBefore	src/cpu/inorder/inorder_dyn_inst.hh	/^    void setSerializeBefore() { status.set(SerializeBefore); }$/;"	f	class:InOrderDynInst
setSerializeHandled	src/cpu/base_dyn_inst.hh	/^    void setSerializeHandled() { status.set(SerializeHandled); }$/;"	f	class:BaseDynInst
setSerializeHandled	src/cpu/inorder/inorder_dyn_inst.hh	/^    void setSerializeHandled() { status.set(SerializeHandled); }$/;"	f	class:InOrderDynInst
setShift	src/mem/cache/tags/lru.hh	/^    int setShift;$/;"	m	class:LRU
setSignalMask	src/cpu/kvm/base.cc	/^BaseKvmCPU::setSignalMask(const sigset_t *mask)$/;"	f	class:BaseKvmCPU
setSingleStep	src/arch/alpha/remote_gdb.cc	/^RemoteGDB::setSingleStep()$/;"	f	class:RemoteGDB
setSingleStep	src/arch/arm/remote_gdb.cc	/^RemoteGDB::setSingleStep()$/;"	f	class:RemoteGDB
setSingleStep	src/arch/mips/remote_gdb.cc	/^RemoteGDB::setSingleStep()$/;"	f	class:RemoteGDB
setSingleStep	src/arch/power/remote_gdb.hh	/^    setSingleStep()$/;"	f	class:PowerISA::RemoteGDB
setSingleStep	src/arch/sparc/remote_gdb.cc	/^RemoteGDB::setSingleStep()$/;"	f	class:RemoteGDB
setSingleStep	src/arch/x86/remote_gdb.cc	/^void RemoteGDB::setSingleStep()$/;"	f	class:RemoteGDB
setSize	src/mem/packet.hh	/^    setSize(unsigned size)$/;"	f	class:Packet
setSize	src/mem/ruby/common/Set.cc	/^Set::setSize(int size)$/;"	f	class:Set
setSlot	src/cpu/inorder/resource.hh	/^    void setSlot(int slot) { slotIdx = slot; }$/;"	f	class:ResourceEvent
setSource	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.cc	/^NetworkLink::setSource(FlexibleConsumer *source)$/;"	f	class:NetworkLink
setSourceQueue	src/mem/ruby/network/garnet/fixed-pipeline/NetworkLink_d.cc	/^NetworkLink_d::setSourceQueue(flitBuffer_d *srcQueue)$/;"	f	class:NetworkLink_d
setSourceQueue	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.cc	/^NetworkLink::setSourceQueue(flitBuffer *srcQueue)$/;"	f	class:NetworkLink
setSpecialRegisters	src/cpu/kvm/base.cc	/^BaseKvmCPU::setSpecialRegisters(const struct kvm_sregs &regs)$/;"	f	class:BaseKvmCPU
setSquashInfo	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::setSquashInfo(unsigned stage_num)$/;"	f	class:InOrderDynInst
setSquashInfoFromXC	src/cpu/ozone/inorder_back_end_impl.hh	/^InorderBackEnd<Impl>::setSquashInfoFromXC()$/;"	f	class:InorderBackEnd
setSquashed	src/cpu/base_dyn_inst.hh	/^    void setSquashed() { status.set(Squashed); }$/;"	f	class:BaseDynInst
setSquashed	src/cpu/inorder/inorder_dyn_inst.hh	/^    void setSquashed() { status.set(Squashed); }$/;"	f	class:InOrderDynInst
setSquashed	src/cpu/inorder/resource.hh	/^    void setSquashed() { squashed = true; }$/;"	f	class:ResourceRequest
setSquashedInIQ	src/cpu/base_dyn_inst.hh	/^    void setSquashedInIQ() { status.set(SquashedInIQ); status.set(Squashed);}$/;"	f	class:BaseDynInst
setSquashedInLSQ	src/cpu/base_dyn_inst.hh	/^    void setSquashedInLSQ() { status.set(SquashedInLSQ);}$/;"	f	class:BaseDynInst
setSquashedInROB	src/cpu/base_dyn_inst.hh	/^    void setSquashedInROB() { status.set(SquashedInROB); }$/;"	f	class:BaseDynInst
setSrc	src/mem/packet.hh	/^    void setSrc(PortID _src) { src = _src; }$/;"	f	class:Packet
setSrcInst	src/cpu/ozone/dyn_inst.hh	/^    void setSrcInst(DynInstPtr &newSrcInst, int regIdx)$/;"	f	class:OzoneDynInst
setSrcRegIdx	src/cpu/inorder/inorder_dyn_inst.hh	/^    void setSrcRegIdx(int idx, PhysRegIndex src_idx)$/;"	f	class:InOrderDynInst
setStCondFailures	src/cpu/base_dyn_inst.hh	/^    void setStCondFailures(unsigned sc_failures)$/;"	f	class:BaseDynInst
setStCondFailures	src/cpu/checker/cpu.hh	/^    void setStCondFailures(unsigned sc_failures)$/;"	f	class:CheckerCPU
setStCondFailures	src/cpu/checker/thread_context.hh	/^    void setStCondFailures(unsigned sc_failures)$/;"	f	class:CheckerThreadContext
setStCondFailures	src/cpu/inorder/inorder_dyn_inst.hh	/^    void setStCondFailures(unsigned sc_failures)$/;"	f	class:InOrderDynInst
setStCondFailures	src/cpu/inorder/thread_context.hh	/^    void setStCondFailures(unsigned sc_failures)$/;"	f	class:InOrderThreadContext
setStCondFailures	src/cpu/o3/thread_context.hh	/^    virtual void setStCondFailures(unsigned sc_failures)$/;"	f	class:O3ThreadContext
setStCondFailures	src/cpu/ozone/cpu.hh	/^        void setStCondFailures(unsigned sc_failures)$/;"	f	class:OzoneCPU::OzoneTC
setStCondFailures	src/cpu/simple/base.hh	/^    void setStCondFailures(unsigned sc_failures) {$/;"	f	class:BaseSimpleCPU
setStCondFailures	src/cpu/simple_thread.hh	/^    void setStCondFailures(unsigned sc_failures)$/;"	f	class:SimpleThread
setStCondFailures	src/cpu/thread_context.hh	/^    void setStCondFailures(unsigned sc_failures)$/;"	f	class:ProxyThreadContext
setStageCycle	src/cpu/inorder/inorder_trace.hh	/^    setStageCycle(int num_stage, Tick cur_cycle)$/;"	f	class:Trace::InOrderTraceRecord
setState	src/mem/ruby/network/garnet/fixed-pipeline/OutVcState_d.hh	/^    setState(VC_state_type state, Cycles time)$/;"	f	class:OutVcState_d
setState	src/mem/ruby/network/garnet/flexible-pipeline/InVcState.cc	/^InVcState::setState(VC_state_type state, Cycles time)$/;"	f	class:InVcState
setState	src/mem/ruby/network/garnet/flexible-pipeline/OutVcState.cc	/^OutVcState::setState(VC_state_type state, Cycles time)$/;"	f	class:OutVcState
setStaticInst	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::setStaticInst(StaticInstPtr &static_inst)$/;"	f	class:InOrderDynInst
setStaticInst	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::setStaticInst(StaticInstPtr si)$/;"	f	class:InOrderDynInst
setStaticInst	src/cpu/inorder/inorder_trace.hh	/^    setStaticInst(const StaticInstPtr &_staticInst)$/;"	f	class:Trace::InOrderTraceRecord
setStatus	src/cpu/checker/thread_context.hh	/^    void setStatus(Status new_status)$/;"	f	class:CheckerThreadContext
setStatus	src/cpu/inorder/thread_context.hh	/^    void setStatus(Status new_status)$/;"	f	class:InOrderThreadContext
setStatus	src/cpu/o3/thread_context.hh	/^    virtual void setStatus(Status new_status)$/;"	f	class:O3ThreadContext
setStatus	src/cpu/ozone/cpu.hh	/^    void setStatus(Status new_status) { _status = new_status; }$/;"	f	class:OzoneCPU
setStatus	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::OzoneTC::setStatus(Status new_status)$/;"	f	class:OzoneCPU::OzoneTC
setStatus	src/cpu/simple_thread.hh	/^    void setStatus(Status newStatus) { _status = newStatus; }$/;"	f	class:SimpleThread
setStatus	src/cpu/thread_context.hh	/^    void setStatus(Status new_status) { actualTC->setStatus(new_status); }$/;"	f	class:ProxyThreadContext
setStatus	src/cpu/thread_state.hh	/^    void setStatus(Status new_status) { _status = new_status; }$/;"	f	struct:ThreadState
setString	src/arch/x86/bios/smbios.cc	/^X86ISA::SMBios::SMBiosStructure::setString(int n, std::string & newString)$/;"	f	class:X86ISA::SMBios::SMBiosStructure
setSupplyExclusive	src/mem/packet.hh	/^    void setSupplyExclusive()       { flags.set(SUPPLY_EXCLUSIVE); }$/;"	f	class:Packet
setSuppressFuncError	src/mem/packet.hh	/^    void setSuppressFuncError()     { flags.set(SUPPRESS_FUNC_ERROR); }$/;"	f	class:Packet
setSyndrome	src/arch/arm/faults.cc	/^ArmFault::setSyndrome(ThreadContext *tc, MiscRegIndex syndrome_reg)$/;"	f	class:ArmISA::ArmFault
setSyscallArg	src/arch/alpha/process.cc	/^AlphaLiveProcess::setSyscallArg(ThreadContext *tc,$/;"	f	class:AlphaLiveProcess
setSyscallArg	src/arch/arm/process.cc	/^ArmLiveProcess32::setSyscallArg(ThreadContext *tc, int i, ArmISA::IntReg val)$/;"	f	class:ArmLiveProcess32
setSyscallArg	src/arch/arm/process.cc	/^ArmLiveProcess64::setSyscallArg(ThreadContext *tc,$/;"	f	class:ArmLiveProcess64
setSyscallArg	src/arch/mips/process.cc	/^MipsLiveProcess::setSyscallArg(ThreadContext *tc,$/;"	f	class:MipsLiveProcess
setSyscallArg	src/arch/power/linux/process.cc	/^PowerLinuxProcess::setSyscallArg(ThreadContext *tc, int i, PowerISA::IntReg val)$/;"	f	class:PowerLinuxProcess
setSyscallArg	src/arch/power/process.cc	/^PowerLiveProcess::setSyscallArg(ThreadContext *tc,$/;"	f	class:PowerLiveProcess
setSyscallArg	src/arch/sparc/process.cc	/^Sparc32LiveProcess::setSyscallArg(ThreadContext *tc, int i, IntReg val)$/;"	f	class:Sparc32LiveProcess
setSyscallArg	src/arch/sparc/process.cc	/^Sparc64LiveProcess::setSyscallArg(ThreadContext *tc, int i, IntReg val)$/;"	f	class:Sparc64LiveProcess
setSyscallArg	src/arch/x86/process.cc	/^I386LiveProcess::setSyscallArg(ThreadContext *tc, int i, X86ISA::IntReg val)$/;"	f	class:I386LiveProcess
setSyscallArg	src/arch/x86/process.cc	/^X86_64LiveProcess::setSyscallArg(ThreadContext *tc, int i, X86ISA::IntReg val)$/;"	f	class:X86_64LiveProcess
setSyscallReturn	src/arch/alpha/process.cc	/^AlphaLiveProcess::setSyscallReturn(ThreadContext *tc,$/;"	f	class:AlphaLiveProcess
setSyscallReturn	src/arch/arm/process.cc	/^ArmLiveProcess32::setSyscallReturn(ThreadContext *tc,$/;"	f	class:ArmLiveProcess32
setSyscallReturn	src/arch/arm/process.cc	/^ArmLiveProcess64::setSyscallReturn(ThreadContext *tc,$/;"	f	class:ArmLiveProcess64
setSyscallReturn	src/arch/mips/process.cc	/^MipsLiveProcess::setSyscallReturn(ThreadContext *tc,$/;"	f	class:MipsLiveProcess
setSyscallReturn	src/arch/power/process.cc	/^PowerLiveProcess::setSyscallReturn(ThreadContext *tc,$/;"	f	class:PowerLiveProcess
setSyscallReturn	src/arch/sparc/process.cc	/^SparcLiveProcess::setSyscallReturn(ThreadContext *tc,$/;"	f	class:SparcLiveProcess
setSyscallReturn	src/arch/x86/process.cc	/^X86LiveProcess::setSyscallReturn(ThreadContext *tc, SyscallReturn return_value)$/;"	f	class:X86LiveProcess
setSystem	src/cpu/checker/cpu.cc	/^CheckerCPU::setSystem(System *system)$/;"	f	class:CheckerCPU
setTC	src/cpu/ozone/back_end.hh	/^    void setTC(ThreadContext *tc_ptr)$/;"	f	class:BackEnd
setTC	src/cpu/ozone/front_end_impl.hh	/^FrontEnd<Impl>::setTC(ThreadContext *tc_ptr)$/;"	f	class:FrontEnd
setTC	src/cpu/ozone/lw_back_end.hh	/^    void setTC(ThreadContext *tc_ptr)$/;"	f	class:LWBackEnd
setTLB	src/arch/x86/pagetable_walker.hh	/^        void setTLB(TLB * _tlb)$/;"	f	class:X86ISA::Walker
setTLSFunc32	src/arch/arm/linux/process.cc	/^setTLSFunc32(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	file:
setTLSFunc64	src/arch/arm/linux/process.cc	/^setTLSFunc64(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	file:
setTSSAddress	src/cpu/kvm/vm.cc	/^KvmVM::setTSSAddress(Addr tss_address)$/;"	f	class:KvmVM
setTableAddr	src/arch/x86/bios/intelmp.hh	/^    void setTableAddr(Addr addr)$/;"	f	class:X86ISA::IntelMP::FloatingPointer
setTableAddr	src/arch/x86/bios/smbios.hh	/^    void setTableAddr(Addr addr)$/;"	f	class:X86ISA::SMBios::SMBiosTable
setTempBreakpoint	src/base/remote_gdb.cc	/^BaseRemoteGDB::setTempBreakpoint(Addr bkpt)$/;"	f	class:BaseRemoteGDB
setTextBase	src/base/loader/object_file.hh	/^    void setTextBase(Addr a) { text.baseAddr = a; }$/;"	f	class:ObjectFile
setThreadArea32Func	src/arch/x86/linux/syscalls.cc	/^setThreadArea32Func(SyscallDesc *desc, int callnum,$/;"	f	file:
setThreadAreaFunc	src/arch/mips/linux/process.cc	/^setThreadAreaFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	file:
setThreadContext	src/mem/request.hh	/^    setThreadContext(int context_id, ThreadID tid)$/;"	f	class:Request
setThreadId	src/cpu/checker/thread_context.hh	/^    void setThreadId(int id)$/;"	f	class:CheckerThreadContext
setThreadId	src/cpu/inorder/thread_context.hh	/^    void setThreadId(int id) { return thread->setThreadId(id); }$/;"	f	class:InOrderThreadContext
setThreadId	src/cpu/o3/thread_context.hh	/^    virtual void setThreadId(int id) { return thread->setThreadId(id); }$/;"	f	class:O3ThreadContext
setThreadId	src/cpu/thread_context.hh	/^    void setThreadId(int id) { actualTC->setThreadId(id); }$/;"	f	class:ProxyThreadContext
setThreadId	src/cpu/thread_state.hh	/^    void setThreadId(ThreadID id) { _threadId = id; }$/;"	f	struct:ThreadState
setThreadState	src/cpu/base_dyn_inst.hh	/^    void setThreadState(ImplState *state) { thread = state; }$/;"	f	class:BaseDynInst
setThreadState	src/cpu/inorder/inorder_dyn_inst.hh	/^    void setThreadState(InOrderThreadState *state) { thread = state; }$/;"	f	class:InOrderDynInst
setThreadState	src/cpu/ozone/back_end.hh	/^    void setThreadState(Thread *thread_ptr)$/;"	f	class:BackEnd
setThreadState	src/cpu/ozone/front_end.hh	/^    void setThreadState(OzoneThreadState<Impl> *thread_ptr)$/;"	f	class:FrontEnd
setThreadState	src/cpu/ozone/inorder_back_end_impl.hh	/^InorderBackEnd<Impl>::setThreadState(OzoneThreadState<Impl> *thread_ptr)$/;"	f	class:InorderBackEnd
setThreadState	src/cpu/ozone/lw_back_end.hh	/^    void setThreadState(Thread *thread_ptr)$/;"	f	class:LWBackEnd
setThreads	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::setThreads(std::vector<Thread *> &threads)$/;"	f	class:DefaultCommit
setTick	src/base/time.cc	/^Time::setTick(Tick ticks)$/;"	f	class:Time
setTid	src/cpu/base_dyn_inst.hh	/^    void setTid(ThreadID tid) { threadNumber = tid; }$/;"	f	class:BaseDynInst
setTid	src/cpu/inorder/inorder_dyn_inst.hh	/^    void setTid(ThreadID tid) { threadNumber = tid; }$/;"	f	class:InOrderDynInst
setTid	src/cpu/inorder/resource.hh	/^    void setTid(ThreadID _tid) { tid = _tid; }$/;"	f	class:ResourceRequest
setTime	src/dev/mc146818.cc	/^MC146818::setTime(const struct tm time)$/;"	f	class:MC146818
setTime	src/mem/ruby/slicc_interface/Message.hh	/^    void setTime(const Tick& new_time) { m_time = new_time; }$/;"	f	class:Message
setTimeBuffer	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::setTimeBuffer(TimeBuffer<TimeStruct> *tb_ptr)$/;"	f	class:PipelineStage
setTimeBuffer	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::setTimeBuffer(TimeBuffer<TimeStruct> *tb_ptr)$/;"	f	class:DefaultCommit
setTimeBuffer	src/cpu/o3/decode_impl.hh	/^DefaultDecode<Impl>::setTimeBuffer(TimeBuffer<TimeStruct> *tb_ptr)$/;"	f	class:DefaultDecode
setTimeBuffer	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::setTimeBuffer(TimeBuffer<TimeStruct> *time_buffer)$/;"	f	class:DefaultFetch
setTimeBuffer	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::setTimeBuffer(TimeBuffer<TimeStruct> *tb_ptr)$/;"	f	class:DefaultIEW
setTimeBuffer	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::setTimeBuffer(TimeBuffer<TimeStruct> *tb_ptr)$/;"	f	class:InstructionQueue
setTimeBuffer	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::setTimeBuffer(TimeBuffer<TimeStruct> *tb_ptr)$/;"	f	class:DefaultRename
setTimer	src/base/time.hh	/^    void setTimer() { _set(true); }$/;"	f	class:Time
setTimerValue	src/dev/arm/generic_timer.cc	/^GenericTimer::ArchTimer::setTimerValue(uint32_t val)$/;"	f	class:GenericTimer::ArchTimer
setTlb	src/arch/arm/table_walker.hh	/^    void setTlb(TLB *_tlb) { tlb = _tlb; }$/;"	f	class:ArmISA::TableWalker
setTlbExceptionState	src/arch/mips/faults.hh	/^    setTlbExceptionState(ThreadContext *tc, uint8_t excCode)$/;"	f	class:MipsISA::TlbFault
setTo	src/dev/intel_8254_timer.cc	/^Intel8254Timer::Counter::CounterEvent::setTo(int clocks)$/;"	f	class:Intel8254Timer::Counter::CounterEvent
setTransactionSize	src/dev/arm/hdlcd.hh	/^        void setTransactionSize(size_t len) {$/;"	f	class:HDLcd::DmaDoneEvent
setTranslateLatency	src/mem/request.hh	/^    void setTranslateLatency() { translateDelta = curTick() - _time; }$/;"	f	class:Request
setTxInt	src/dev/etherlink.hh	/^        void setTxInt(Interface *i) { assert(!txint); txint = i; }$/;"	f	class:EtherLink::Link
setUserMemoryRegion	src/cpu/kvm/vm.cc	/^KvmVM::setUserMemoryRegion(uint32_t slot,$/;"	f	class:KvmVM
setVCpuEvents	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::setVCpuEvents(const struct kvm_vcpu_events &events)$/;"	f	class:X86KvmCPU
setValue	src/base/inifile.hh	/^        void setValue(const std::string &v) { value = v; }$/;"	f	class:IniFile::Entry
setValue	src/base/mod_num.hh	/^    void setValue(T n) { value = n % MV; }$/;"	f	class:ModNum
setVfpMicroFlags	src/arch/arm/insts/vfp.hh	/^setVfpMicroFlags(VfpMicroMode mode, T &flags)$/;"	f	namespace:ArmISA
setVirt	src/arch/arm/stage2_mmu.hh	/^        void setVirt(Addr vaddr, int size, Request::Flags flags, int masterId)$/;"	f	class:ArmISA::Stage2MMU::Stage2Translation
setVirt	src/mem/request.hh	/^    setVirt(int asid, Addr vaddr, int size, Flags flags, MasterID mid, Addr pc)$/;"	f	class:Request
setVnet	src/mem/ruby/buffers/MessageBuffer.hh	/^    void setVnet(int net) { m_vnet_id = net; }$/;"	f	class:MessageBuffer
setVnet	src/mem/ruby/slicc_interface/Message.hh	/^    virtual void setVnet(int) {}$/;"	f	class:Message
setVnet	src/mem/ruby/slicc_interface/NetworkMessage.hh	/^    void setVnet(int net) { vnet = net; }$/;"	f	class:NetworkMessage
setVpn	src/cpu/inorder/inorder_dyn_inst.hh	/^    void setVpn(int id) { virtProcNumber = id; }$/;"	f	class:InOrderDynInst
setWallclock	src/base/time.hh	/^    void setWallclock() { _set(false); }$/;"	f	class:Time
setWhen	src/sim/eventq.hh	/^    setWhen(Tick when, EventQueue *q)$/;"	f	class:Event
setXC	src/cpu/ozone/inorder_back_end_impl.hh	/^InorderBackEnd<Impl>::setXC(ExecContext *xc_ptr)$/;"	f	class:InorderBackEnd
setXCRs	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::setXCRs(const struct kvm_xcrs &regs)$/;"	f	class:X86KvmCPU
setXSave	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::setXSave(const struct kvm_xsave &xsave)$/;"	f	class:X86KvmCPU
set_buf_scheme	src/mem/ruby/network/orion/Wire.cc	/^void Wire::set_buf_scheme($/;"	f	class:Wire
set_conn_type	src/mem/ruby/network/orion/Crossbar/Crossbar.cc	/^void Crossbar::set_conn_type(const string& conn_type_str_)$/;"	f	class:Crossbar
set_credit_link	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.hh	/^    set_credit_link(CreditLink_d *credit_link)$/;"	f	class:InputUnit_d
set_credit_link	src/mem/ruby/network/garnet/fixed-pipeline/OutputUnit_d.cc	/^OutputUnit_d::set_credit_link(CreditLink_d *credit_link)$/;"	f	class:OutputUnit_d
set_defaults	src/python/m5/options.py	/^    def set_defaults(self, *args, **kwargs):$/;"	m	class:OptionParser
set_delay	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.hh	/^    void set_delay(Cycles delay) { src_delay = delay; }$/;"	f	class:flit_d
set_delay	src/mem/ruby/network/garnet/flexible-pipeline/flit.cc	/^flit::set_delay(Cycles delay)$/;"	f	class:flit
set_enqueue_time	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.hh	/^    set_enqueue_time(int invc, Cycles time)$/;"	f	class:InputUnit_d
set_enqueue_time	src/mem/ruby/network/garnet/fixed-pipeline/VirtualChannel_d.hh	/^    inline void set_enqueue_time(Cycles time) { m_enqueue_time = time; }$/;"	f	class:VirtualChannel_d
set_flit_width	src/mem/ruby/network/orion/OrionConfig.cc	/^void OrionConfig::set_flit_width(uint32_t flit_width_)$/;"	f	class:OrionConfig
set_fpscr	src/arch/arm/insts/fplib.cc	/^set_fpscr(FPSCR &fpscr, int flags)$/;"	f	namespace:ArmISA
set_fpscr0	src/arch/arm/insts/fplib.cc	/^set_fpscr0(FPSCR &fpscr, int flags)$/;"	f	namespace:ArmISA
set_group	src/python/m5/options.py	/^    def set_group(self, *args, **kwargs):$/;"	m	class:OptionParser
set_in_buf_num_set	src/mem/ruby/network/orion/OrionConfig.cc	/^void OrionConfig::set_in_buf_num_set(uint32_t in_buf_num_set_)$/;"	f	class:OrionConfig
set_in_link	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.hh	/^    set_in_link(NetworkLink_d *link)$/;"	f	class:InputUnit_d
set_inport	src/mem/ruby/network/garnet/fixed-pipeline/OutVcState_d.hh	/^    void set_inport(int port)       { m_in_port = port; }$/;"	f	class:OutVcState_d
set_invc	src/mem/ruby/network/garnet/fixed-pipeline/OutVcState_d.hh	/^    void set_invc(int vc)           { m_in_vc = vc; }$/;"	f	class:OutVcState_d
set_num_in_port	src/mem/ruby/network/orion/OrionConfig.cc	/^void OrionConfig::set_num_in_port(uint32_t num_in_port_)$/;"	f	class:OrionConfig
set_num_out_port	src/mem/ruby/network/orion/OrionConfig.cc	/^void OrionConfig::set_num_out_port(uint32_t num_out_port_)$/;"	f	class:OrionConfig
set_num_vchannel	src/mem/ruby/network/orion/OrionConfig.cc	/^void OrionConfig::set_num_vchannel(uint32_t num_vchannel_)$/;"	f	class:OrionConfig
set_num_vclass	src/mem/ruby/network/orion/OrionConfig.cc	/^void OrionConfig::set_num_vclass(uint32_t num_vclass_)$/;"	f	class:OrionConfig
set_out_link	src/mem/ruby/network/garnet/fixed-pipeline/OutputUnit_d.cc	/^OutputUnit_d::set_out_link(NetworkLink_d *link)$/;"	f	class:OutputUnit_d
set_outport	src/mem/ruby/network/garnet/fixed-pipeline/VirtualChannel_d.cc	/^VirtualChannel_d::set_outport(int outport)$/;"	f	class:VirtualChannel_d
set_outport	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.hh	/^    void set_outport(int port) { m_outport = port; }$/;"	f	class:flit_d
set_param_desc	src/python/m5/proxy.py	/^    def set_param_desc(self, pdesc):$/;"	m	class:BaseProxy
set_parent	src/python/m5/SimObject.py	/^    def set_parent(self, parent, name):$/;"	f
set_parent	src/python/m5/params.py	/^    def set_parent(self, parent, name):$/;"	m	class:SimObjectVector
set_path	src/python/m5/params.py	/^    def set_path(self, parent, name):$/;"	m	class:NullSimObject
set_program_attributes	src/kern/tru64/tru64_syscalls.hh	/^        set_program_attributes = 43,$/;"	e	enum:SystemCalls::__anon102
set_speculative	src/kern/tru64/tru64_syscalls.hh	/^        set_speculative = 239,$/;"	e	enum:SystemCalls::__anon102
set_state	src/mem/ruby/network/garnet/fixed-pipeline/VirtualChannel_d.hh	/^    set_state(VC_state_type m_state, Cycles curTime)$/;"	f	class:VirtualChannel_d
set_thread_area	src/kern/linux/linux_syscalls.hh	/^    set_thread_area = 190,$/;"	e	enum:SystemCalls::__anon87
set_tid_address	src/kern/linux/linux_syscalls.hh	/^    set_tid_address = 191,$/;"	e	enum:SystemCalls::__anon87
set_time	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.hh	/^    void set_time(Cycles time) { m_time = time; }$/;"	f	class:flit_d
set_time	src/mem/ruby/network/garnet/flexible-pipeline/flit.cc	/^flit::set_time(Cycles time)$/;"	f	class:flit
set_trans_type	src/mem/ruby/network/orion/Crossbar/Crossbar.cc	/^void Crossbar::set_trans_type(const string& trans_type_str_)$/;"	f	class:Crossbar
set_vc	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.hh	/^    void set_vc(int vc) { m_vc = vc; }$/;"	f	class:flit_d
set_vc	src/mem/ruby/network/garnet/flexible-pipeline/flit.cc	/^flit::set_vc(int vc)$/;"	f	class:flit
set_vc_state	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.hh	/^    set_vc_state(VC_state_type state, int vc, Cycles curTime)$/;"	f	class:InputUnit_d
set_vc_state	src/mem/ruby/network/garnet/fixed-pipeline/OutputUnit_d.hh	/^    set_vc_state(VC_state_type state, int vc, Cycles curTime)$/;"	f	class:OutputUnit_d
set_width_spacing_model	src/mem/ruby/network/orion/Wire.cc	/^void Wire::set_width_spacing_model($/;"	f	class:Wire
setdefault	src/python/m5/util/multidict.py	/^    def setdefault(self, key, default):$/;"	m	class:multidict
setdefault	src/python/m5/util/smartdict.py	/^    def setdefault(self, key, default='False'):$/;"	m	class:SmartDict
setdefault	src/python/m5/util/sorteddict.py	/^    def setdefault(self, key, _failobj=None):$/;"	m	class:SortedDict
setdomainname	src/kern/linux/linux_syscalls.hh	/^    setdomainname = 192,$/;"	e	enum:SystemCalls::__anon87
setdomainname	src/kern/tru64/tru64_syscalls.hh	/^        setdomainname = 166,$/;"	e	enum:SystemCalls::__anon102
setfsgid	src/kern/linux/linux_syscalls.hh	/^    setfsgid = 193,$/;"	e	enum:SystemCalls::__anon87
setfsgid32	src/kern/linux/linux_syscalls.hh	/^    setfsgid32 = 194,$/;"	e	enum:SystemCalls::__anon87
setfsuid	src/kern/linux/linux_syscalls.hh	/^    setfsuid = 195,$/;"	e	enum:SystemCalls::__anon87
setfsuid32	src/kern/linux/linux_syscalls.hh	/^    setfsuid32 = 196,$/;"	e	enum:SystemCalls::__anon87
setgid	src/kern/linux/linux_syscalls.hh	/^    setgid = 197,$/;"	e	enum:SystemCalls::__anon87
setgid	src/kern/tru64/tru64_syscalls.hh	/^        setgid = 132,$/;"	e	enum:SystemCalls::__anon102
setgid32	src/kern/linux/linux_syscalls.hh	/^    setgid32 = 198,$/;"	e	enum:SystemCalls::__anon87
setgroups	src/kern/linux/linux_syscalls.hh	/^    setgroups = 199,$/;"	e	enum:SystemCalls::__anon87
setgroups	src/kern/tru64/tru64_syscalls.hh	/^        setgroups = 80,$/;"	e	enum:SystemCalls::__anon102
setgroups32	src/kern/linux/linux_syscalls.hh	/^    setgroups32 = 200,$/;"	e	enum:SystemCalls::__anon87
sethostid	src/kern/tru64/tru64_syscalls.hh	/^        sethostid = 143,$/;"	e	enum:SystemCalls::__anon102
sethostname	src/kern/linux/linux_syscalls.hh	/^    sethostname = 201,$/;"	e	enum:SystemCalls::__anon87
sethostname	src/kern/tru64/tru64_syscalls.hh	/^        sethostname = 88,$/;"	e	enum:SystemCalls::__anon102
setitimer	src/kern/linux/linux_syscalls.hh	/^    setitimer = 202,$/;"	e	enum:SystemCalls::__anon87
setitimer	src/kern/tru64/tru64_syscalls.hh	/^        setitimer = 83,$/;"	e	enum:SystemCalls::__anon102
setlogin	src/kern/tru64/tru64_syscalls.hh	/^        setlogin = 50,$/;"	e	enum:SystemCalls::__anon102
setpgid	src/kern/linux/linux_syscalls.hh	/^    setpgid = 203,$/;"	e	enum:SystemCalls::__anon87
setpgid	src/kern/tru64/tru64_syscalls.hh	/^        setpgid = 39,$/;"	e	enum:SystemCalls::__anon102
setpgrp	src/kern/tru64/tru64_syscalls.hh	/^        setpgrp = 82,$/;"	e	enum:SystemCalls::__anon102
setpriority	src/kern/linux/linux_syscalls.hh	/^    setpriority = 204,$/;"	e	enum:SystemCalls::__anon87
setpriority	src/kern/tru64/tru64_syscalls.hh	/^        setpriority = 96,$/;"	e	enum:SystemCalls::__anon102
setregid	src/kern/linux/linux_syscalls.hh	/^    setregid = 205,$/;"	e	enum:SystemCalls::__anon87
setregid	src/kern/tru64/tru64_syscalls.hh	/^        setregid = 127,$/;"	e	enum:SystemCalls::__anon102
setregid32	src/kern/linux/linux_syscalls.hh	/^    setregid32 = 206,$/;"	e	enum:SystemCalls::__anon87
setregs	src/arch/alpha/remote_gdb.cc	/^RemoteGDB::setregs()$/;"	f	class:RemoteGDB
setregs	src/arch/arm/remote_gdb.cc	/^RemoteGDB::setregs()$/;"	f	class:RemoteGDB
setregs	src/arch/mips/remote_gdb.cc	/^RemoteGDB::setregs()$/;"	f	class:RemoteGDB
setregs	src/arch/power/remote_gdb.hh	/^    setregs()$/;"	f	class:PowerISA::RemoteGDB
setregs	src/arch/sparc/remote_gdb.cc	/^RemoteGDB::setregs()$/;"	f	class:RemoteGDB
setregs	src/arch/x86/remote_gdb.cc	/^void RemoteGDB::setregs()$/;"	f	class:RemoteGDB
setresgid	src/kern/linux/linux_syscalls.hh	/^    setresgid = 207,$/;"	e	enum:SystemCalls::__anon87
setresgid32	src/kern/linux/linux_syscalls.hh	/^    setresgid32 = 208,$/;"	e	enum:SystemCalls::__anon87
setresuid	src/kern/linux/linux_syscalls.hh	/^    setresuid = 209,$/;"	e	enum:SystemCalls::__anon87
setresuid32	src/kern/linux/linux_syscalls.hh	/^    setresuid32 = 210,$/;"	e	enum:SystemCalls::__anon87
setreuid	src/kern/linux/linux_syscalls.hh	/^    setreuid = 211,$/;"	e	enum:SystemCalls::__anon87
setreuid	src/kern/tru64/tru64_syscalls.hh	/^        setreuid = 126,$/;"	e	enum:SystemCalls::__anon102
setreuid32	src/kern/linux/linux_syscalls.hh	/^    setreuid32 = 212,$/;"	e	enum:SystemCalls::__anon87
setrlimit	src/kern/linux/linux_syscalls.hh	/^    setrlimit = 213,$/;"	e	enum:SystemCalls::__anon87
setrlimit	src/kern/tru64/tru64_syscalls.hh	/^        setrlimit = 145,$/;"	e	enum:SystemCalls::__anon102
sets	src/mem/cache/tags/lru.hh	/^    SetType *sets;$/;"	m	class:LRU
setsid	src/kern/linux/linux_syscalls.hh	/^    setsid = 214,$/;"	e	enum:SystemCalls::__anon87
setsid	src/kern/tru64/tru64_syscalls.hh	/^        setsid = 147,$/;"	e	enum:SystemCalls::__anon102
setsockopt	src/kern/tru64/tru64_syscalls.hh	/^        setsockopt = 105,$/;"	e	enum:SystemCalls::__anon102
setsysinfo	src/kern/tru64/tru64_syscalls.hh	/^        setsysinfo = 257,$/;"	e	enum:SystemCalls::__anon102
setsysinfoFunc	src/arch/alpha/tru64/process.cc	/^setsysinfoFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	file:
settimeofday	src/kern/linux/linux_syscalls.hh	/^    settimeofday = 215,$/;"	e	enum:SystemCalls::__anon87
settimeofday	src/kern/tru64/tru64_syscalls.hh	/^        settimeofday = 122,$/;"	e	enum:SystemCalls::__anon102
settimeofday64	src/kern/tru64/tru64_syscalls.hh	/^        settimeofday64 = 231,$/;"	e	enum:SystemCalls::__anon102
setuid	src/kern/linux/linux_syscalls.hh	/^    setuid = 216,$/;"	e	enum:SystemCalls::__anon87
setuid	src/kern/tru64/tru64_syscalls.hh	/^        setuid = 23,$/;"	e	enum:SystemCalls::__anon102
setuid32	src/kern/linux/linux_syscalls.hh	/^    setuid32 = 217,$/;"	e	enum:SystemCalls::__anon87
setuidFunc	src/sim/syscall_emul.cc	/^setuidFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
setupASNReg	src/arch/alpha/process.cc	/^AlphaLiveProcess::setupASNReg()$/;"	f	class:AlphaLiveProcess
setupAsyncIO	src/base/pollevent.cc	/^PollQueue::setupAsyncIO(int fd, bool set)$/;"	f	class:PollQueue
setupBootLoader	src/dev/arm/RealView.py	/^    def setupBootLoader(self, mem_bus, cur_sys, loc):$/;"	m	class:RealView
setupBootLoader	src/dev/arm/RealView.py	/^    def setupBootLoader(self, mem_bus, cur_sys, loc):$/;"	m	class:VExpress_EMM
setupBootLoader	src/dev/arm/RealView.py	/^    def setupBootLoader(self, mem_bus, cur_sys, loc):$/;"	m	class:VExpress_EMM64
setupCounters	src/cpu/kvm/base.cc	/^BaseKvmCPU::setupCounters()$/;"	f	class:BaseKvmCPU
setupFetchRequest	src/cpu/simple/base.cc	/^BaseSimpleCPU::setupFetchRequest(Request *req)$/;"	f	class:BaseSimpleCPU
setupFuncEvents	src/arch/alpha/linux/system.cc	/^LinuxAlphaSystem::setupFuncEvents()$/;"	f	class:LinuxAlphaSystem
setupFuncEvents	src/arch/alpha/system.cc	/^AlphaSystem::setupFuncEvents()$/;"	f	class:AlphaSystem
setupInstCounter	src/cpu/kvm/base.cc	/^BaseKvmCPU::setupInstCounter(uint64_t period)$/;"	f	class:BaseKvmCPU
setupInstStop	src/cpu/kvm/base.cc	/^BaseKvmCPU::setupInstStop()$/;"	f	class:BaseKvmCPU
setupLexerFactory	src/python/m5/util/grammar.py	/^    def setupLexerFactory(self, **kwargs):$/;"	m	class:Grammar
setupMemRequest	src/cpu/inorder/resources/cache_unit.cc	/^CacheUnit::setupMemRequest(DynInstPtr inst, CacheReqPtr cache_req,$/;"	f	class:CacheUnit
setupMemRequest	src/cpu/inorder/resources/fetch_unit.cc	/^FetchUnit::setupMemRequest(DynInstPtr inst, CacheReqPtr cache_req,$/;"	f	class:FetchUnit
setupParserFactory	src/python/m5/util/grammar.py	/^    def setupParserFactory(self, **kwargs):$/;"	m	class:Grammar
setupSharedData	src/cpu/legiontrace.cc	/^setupSharedData()$/;"	f	namespace:Trace
setupSignalHandler	src/cpu/kvm/base.cc	/^BaseKvmCPU::setupSignalHandler()$/;"	f	class:BaseKvmCPU
setupSquash	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::setupSquash(DynInstPtr inst, ThreadID tid)$/;"	f	class:PipelineStage
setupSquash	src/cpu/inorder/resource.cc	/^Resource::setupSquash(DynInstPtr inst, int stage_num, ThreadID tid)$/;"	f	class:Resource
setupWalk	src/arch/x86/pagetable_walker.cc	/^Walker::WalkerState::setupWalk(Addr vaddr)$/;"	f	class:X86ISA::Walker::WalkerState
setxattr	src/kern/linux/linux_syscalls.hh	/^    setxattr = 218,$/;"	e	enum:SystemCalls::__anon87
sevenAndFour	src/arch/arm/types.hh	/^        Bitfield<33>     sevenAndFour;$/;"	m	namespace:ArmISA
sext	src/base/bitfield.hh	/^sext(uint64_t val)$/;"	f
sf	src/arch/arm/faults.hh	/^    bool sf;$/;"	m	class:ArmISA::DataAbort
sf	src/arch/x86/regs/misc.hh	/^        Bitfield<7> sf; \/\/ Sign Flag$/;"	m	namespace:X86ISA
sf	src/arch/x86/regs/misc.hh	/^        Bitfield<7> sf;$/;"	m	namespace:X86ISA
sfar	src/arch/sparc/tlb.hh	/^    uint64_t sfar;$/;"	m	class:SparcISA::TLB
sfsr	src/arch/sparc/tlb.hh	/^    uint64_t sfsr;$/;"	m	class:SparcISA::TLB
sgetmask	src/kern/linux/linux_syscalls.hh	/^    sgetmask = 219,$/;"	e	enum:SystemCalls::__anon87
sgi_id	src/dev/arm/gic_pl390.hh	/^        Bitfield<3,0> sgi_id;$/;"	m	class:Pl390
sh	src/arch/arm/miscregs.hh	/^        Bitfield<8, 7>   sh;$/;"	m	namespace:ArmISA
sh	src/arch/arm/table_walker.hh	/^        uint8_t sh() const$/;"	f	class:ArmISA::TableWalker::LongDescriptor
sh	src/arch/power/insts/integer.hh	/^    uint32_t sh;$/;"	m	class:PowerISA::IntOp
sh	src/arch/power/insts/integer.hh	/^    uint32_t sh;$/;"	m	class:PowerISA::IntShiftOp
sh	src/arch/power/types.hh	/^    Bitfield<15, 11> sh;$/;"	m	namespace:PowerISA
sh0	src/arch/arm/miscregs.hh	/^        Bitfield<13, 12> sh0;$/;"	m	namespace:ArmISA
sh1	src/arch/arm/miscregs.hh	/^        Bitfield<29, 28> sh1;$/;"	m	namespace:ArmISA
sh1	src/unittest/stattest.cc	/^    SparseHistogram sh1;$/;"	m	struct:StatTest	file:
shareable	src/arch/arm/pagetable.hh	/^    bool shareable;$/;"	m	struct:ArmISA::TlbEntry
shareable	src/arch/arm/table_walker.hh	/^        bool shareable() const$/;"	f	class:ArmISA::TableWalker::L1Descriptor
shareable	src/arch/arm/table_walker.hh	/^        bool shareable() const$/;"	f	class:ArmISA::TableWalker::L2Descriptor
shareable	src/arch/arm/table_walker.hh	/^        virtual bool shareable() const$/;"	f	class:ArmISA::TableWalker::DescriptorBase
sharedAsserted	src/mem/packet.hh	/^    bool sharedAsserted() const     { return flags.isSet(SHARED); }$/;"	f	class:Packet
shared_data	src/cpu/legiontrace.cc	/^SharedData *shared_data = NULL;$/;"	m	namespace:Trace	file:
sharedram	src/arch/alpha/linux/linux.hh	/^       uint64_t sharedram; \/* Amount of shared memory *\/$/;"	m	struct:AlphaLinux::__anon2
sharedram	src/arch/arm/linux/linux.hh	/^        uint32_t sharedram; \/* Amount of shared memory *\/$/;"	m	struct:ArmLinux32::__anon8
sharedram	src/arch/arm/linux/linux.hh	/^        uint64_t sharedram; \/* Amount of shared memory *\/$/;"	m	struct:ArmLinux64::__anon11
sharedram	src/arch/mips/linux/linux.hh	/^       uint32_t sharedram; \/* Amount of shared memory *\/$/;"	m	struct:MipsLinux::__anon20
sharedram	src/arch/sparc/linux/linux.hh	/^        uint32_t sharedram; \/* Amount of shared memory *\/$/;"	m	struct:Sparc32Linux::__anon28
sharedram	src/arch/sparc/linux/linux.hh	/^        uint64_t sharedram; \/* Amount of shared memory *\/$/;"	m	struct:SparcLinux::__anon26
sharedram	src/arch/x86/linux/linux.hh	/^        uint64_t sharedram; \/* Amount of shared memory *\/$/;"	m	struct:X86Linux64::__anon32
sharedram	src/arch/x86/linux/linux.hh	/^       uint32_t sharedram; \/* Amount of shared memory *\/$/;"	m	struct:X86Linux32::__anon34
shft_fsm0	src/arch/sparc/miscregs.hh	/^    const static int shft_fsm0   = 31;$/;"	m	struct:SparcISA::STS
shft_fsm1	src/arch/sparc/miscregs.hh	/^    const static int shft_fsm1   = 26;$/;"	m	struct:SparcISA::STS
shft_fsm2	src/arch/sparc/miscregs.hh	/^    const static int shft_fsm2   = 21;$/;"	m	struct:SparcISA::STS
shft_fsm3	src/arch/sparc/miscregs.hh	/^    const static int shft_fsm3   = 16;$/;"	m	struct:SparcISA::STS
shft_id	src/arch/sparc/miscregs.hh	/^    const static int shft_id     = 8;$/;"	m	struct:SparcISA::STS
shift	src/arch/arm/insts/pred_inst.hh	/^    IntRegIndex dest, op1, op2, shift;$/;"	m	class:ArmISA::DataRegRegOp
shift	src/arch/arm/insts/pred_inst.hh	/^    uint32_t shift;$/;"	m	class:ArmISA::PredIntOp
shift	src/arch/arm/types.hh	/^        Bitfield<6,  5>  shift;$/;"	m	namespace:ArmISA
shiftAmt	src/arch/arm/insts/data64.hh	/^    int32_t shiftAmt;$/;"	m	class:ArmISA::DataXERegOp
shiftAmt	src/arch/arm/insts/data64.hh	/^    int32_t shiftAmt;$/;"	m	class:ArmISA::DataXSRegOp
shiftAmt	src/arch/arm/insts/macromem.hh	/^    int32_t shiftAmt;$/;"	m	class:ArmISA::MicroIntRegOp
shiftAmt	src/arch/arm/insts/macromem.hh	/^    uint32_t shiftAmt;$/;"	m	class:ArmISA::MicroIntRegXOp
shiftAmt	src/arch/arm/insts/mem.hh	/^    int32_t shiftAmt;$/;"	m	class:ArmISA::MemoryReg
shiftAmt	src/arch/arm/insts/mem64.hh	/^    uint64_t shiftAmt;$/;"	m	class:ArmISA::MemoryReg64
shiftAmt	src/arch/arm/insts/misc.hh	/^    int32_t shiftAmt;$/;"	m	class:RegImmRegShiftOp
shiftAmt	src/arch/arm/insts/pred_inst.hh	/^    int32_t shiftAmt;$/;"	m	class:ArmISA::DataRegOp
shiftDown	src/dev/arm/kmi.hh	/^    bool shiftDown;$/;"	m	class:Pl050
shiftLowOrderBits	src/mem/ruby/common/Address.hh	/^Address::shiftLowOrderBits(unsigned int number) const$/;"	f	class:Address
shiftReg64	src/arch/arm/insts/static_inst.cc	/^ArmStaticInst::shiftReg64(uint64_t base, uint64_t shiftAmt,$/;"	f	class:ArmISA::ArmStaticInst
shiftSize	src/arch/arm/types.hh	/^        Bitfield<11, 7>  shiftSize;$/;"	m	namespace:ArmISA
shiftType	src/arch/arm/insts/data64.hh	/^    ArmShiftType shiftType;$/;"	m	class:ArmISA::DataXSRegOp
shiftType	src/arch/arm/insts/macromem.hh	/^    ArmShiftType shiftType;$/;"	m	class:ArmISA::MicroIntRegOp
shiftType	src/arch/arm/insts/mem.hh	/^    ArmShiftType shiftType;$/;"	m	class:ArmISA::MemoryReg
shiftType	src/arch/arm/insts/misc.hh	/^    ArmShiftType shiftType;$/;"	m	class:RegImmRegShiftOp
shiftType	src/arch/arm/insts/pred_inst.hh	/^    ArmShiftType shiftType;$/;"	m	class:ArmISA::DataRegOp
shiftType	src/arch/arm/insts/pred_inst.hh	/^    ArmShiftType shiftType;$/;"	m	class:ArmISA::DataRegRegOp
shift_carry_imm	src/arch/arm/insts/static_inst.cc	/^ArmStaticInst::shift_carry_imm(uint32_t base, uint32_t shamt,$/;"	f	class:ArmISA::ArmStaticInst
shift_carry_rs	src/arch/arm/insts/static_inst.cc	/^ArmStaticInst::shift_carry_rs(uint32_t base, uint32_t shamt,$/;"	f	class:ArmISA::ArmStaticInst
shift_rm_imm	src/arch/arm/insts/static_inst.cc	/^ArmStaticInst::shift_rm_imm(uint32_t base, uint32_t shamt,$/;"	f	class:ArmISA::ArmStaticInst
shift_rm_rs	src/arch/arm/insts/static_inst.cc	/^ArmStaticInst::shift_rm_rs(uint32_t base, uint32_t shamt,$/;"	f	class:ArmISA::ArmStaticInst
shift_size	src/arch/arm/insts/pred_inst.hh	/^    uint32_t shift_size;$/;"	m	class:ArmISA::PredIntOp
shmat	src/kern/tru64/tru64_syscalls.hh	/^        shmat = 209,$/;"	e	enum:SystemCalls::__anon102
shmctl	src/kern/tru64/tru64_syscalls.hh	/^        shmctl = 210,$/;"	e	enum:SystemCalls::__anon102
shmdt	src/kern/tru64/tru64_syscalls.hh	/^        shmdt = 211,$/;"	e	enum:SystemCalls::__anon102
shmget	src/kern/tru64/tru64_syscalls.hh	/^        shmget = 212,$/;"	e	enum:SystemCalls::__anon102
short	src/mem/slicc/symbols/Symbol.py	/^    def short(self):$/;"	m	class:Symbol
shortDescFaultSources	src/arch/arm/faults.cc	/^uint8_t ArmFault::shortDescFaultSources[] = {$/;"	m	class:ArmISA::ArmFault	file:
shortDescFaultSources	src/arch/arm/faults.hh	/^    static uint8_t shortDescFaultSources[NumFaultSources];$/;"	m	class:ArmISA::ArmFault
shortVectors	src/arch/arm/miscregs.hh	/^        Bitfield<27, 24> shortVectors;$/;"	m	namespace:ArmISA
shortest_path	src/mem/ruby/network/Topology.cc	/^shortest_path(const Matrix& weights, Matrix& latencies, Matrix& inter_switches)$/;"	f
shortest_path_to_node	src/mem/ruby/network/Topology.cc	/^shortest_path_to_node(SwitchID src, SwitchID next, const Matrix& weights,$/;"	f
showParam	src/sim/serialize.cc	/^showParam(ostream &os, const T &value)$/;"	f
showParam	src/sim/serialize.cc	/^showParam(ostream &os, const bool &value)$/;"	f
showParam	src/sim/serialize.cc	/^showParam(ostream &os, const char &value)$/;"	f
showParam	src/sim/serialize.cc	/^showParam(ostream &os, const signed char &value)$/;"	f
showParam	src/sim/serialize.cc	/^showParam(ostream &os, const unsigned char &value)$/;"	f
shutdown	src/kern/tru64/tru64_syscalls.hh	/^        shutdown = 134,$/;"	e	enum:SystemCalls::__anon102
si	src/arch/power/types.hh	/^    Bitfield<15,  0> si;$/;"	m	namespace:PowerISA
si	src/arch/x86/decoder.hh	/^        StaticInstPtr si;$/;"	m	struct:X86ISA::Decoder::InstBytes
si	src/arch/x86/regs/misc.hh	/^        Bitfield<15, 3> si; \/\/ Selector Index$/;"	m	namespace:X86ISA
si	src/dev/pcireg.h	/^        Bitfield<8>     si;$/;"	m	struct:PXCAP
si_boottime	src/kern/tru64/tru64.hh	/^        uint64_t si_boottime;   \/\/!< Boot time in seconds$/;"	m	struct:Tru64::tbl_sysinfo
si_hz	src/kern/tru64/tru64.hh	/^        uint64_t si_hz;         \/\/!< hz$/;"	m	struct:Tru64::tbl_sysinfo
si_idle	src/kern/tru64/tru64.hh	/^        uint64_t si_idle;       \/\/!< Idle time$/;"	m	struct:Tru64::tbl_sysinfo
si_max_procs	src/kern/tru64/tru64.hh	/^        uint32_t  si_max_procs; \/\/!< rpb->rpb_numprocs$/;"	m	struct:Tru64::tbl_sysinfo
si_nice	src/kern/tru64/tru64.hh	/^        uint64_t si_nice;       \/\/!< Nice time$/;"	m	struct:Tru64::tbl_sysinfo
si_phz	src/kern/tru64/tru64.hh	/^        uint64_t si_phz;        \/\/!< phz$/;"	m	struct:Tru64::tbl_sysinfo
si_sys	src/kern/tru64/tru64.hh	/^        uint64_t si_sys;        \/\/!< System time$/;"	m	struct:Tru64::tbl_sysinfo
si_user	src/kern/tru64/tru64.hh	/^        uint64_t si_user;       \/\/!< User time$/;"	m	struct:Tru64::tbl_sysinfo
sib	src/arch/x86/types.hh	/^        Sib sib;$/;"	m	struct:X86ISA::ExtMachInst
sideffect	src/arch/sparc/pagetable.hh	/^    bool sideffect() const { assert(populated); return bits(entry4u,3,3); }$/;"	f	class:SparcISA::PageTableEntry
sif	src/arch/arm/miscregs.hh	/^        Bitfield<9> sif;$/;"	m	namespace:ArmISA
sig	src/kern/tru64/tru64.hh	/^        sigset_t        sig;            \/\/!< thread pending mask$/;"	m	struct:Tru64::ushared_state
sigaction	src/kern/linux/linux_syscalls.hh	/^    sigaction = 220,$/;"	e	enum:SystemCalls::__anon87
sigaction	src/kern/tru64/tru64_syscalls.hh	/^        sigaction = 156,$/;"	e	enum:SystemCalls::__anon102
sigaltstack	src/kern/linux/linux_syscalls.hh	/^    sigaltstack = 221,$/;"	e	enum:SystemCalls::__anon87
sigaltstack	src/kern/tru64/tru64_syscalls.hh	/^        sigaltstack = 235,$/;"	e	enum:SystemCalls::__anon102
sigcontext	src/kern/tru64/tru64.hh	/^    struct sigcontext {$/;"	s	class:Tru64
sigev_notify_thread_id	src/cpu/kvm/timer.cc	/^#define sigev_notify_thread_id /;"	d	file:
sigfigs	src/dev/etherdump.cc	/^    uint32_t sigfigs;           \/\/ accuracy of timestamps$/;"	m	struct:pcap_file_header	file:
sigmask	src/kern/tru64/tru64.hh	/^        sigset_t        sigmask;        \/\/!< thread signal mask$/;"	m	struct:Tru64::ushared_state
sigmask	src/kern/tru64/tru64.hh	/^        sigset_t sigmask;       \/\/!< sigmask$/;"	m	struct:Tru64::nxm_thread_attr
signExtend	src/arch/mips/dsp.cc	/^MipsISA::signExtend(uint64_t value, int32_t fmt)$/;"	f	class:MipsISA
signal	src/kern/linux/linux_syscalls.hh	/^    signal = 222,$/;"	e	enum:SystemCalls::__anon87
signal	src/kern/tru64/tru64_syscalls.hh	/^        signal = 218,$/;"	e	enum:SystemCalls::__anon102
signalDrainDone	src/sim/drain.hh	/^    void signalDrainDone() {$/;"	f	class:DrainManager
signalInterrupt	src/dev/x86/i82094aa.cc	/^X86ISA::I82094AA::signalInterrupt(int line)$/;"	f	class:X86ISA::I82094AA
signalInterrupt	src/dev/x86/i8259.cc	/^X86ISA::I8259::signalInterrupt(int line)$/;"	f	class:X86ISA::I8259
signalInterrupt	src/dev/x86/intdev.hh	/^    signalInterrupt(int line)$/;"	f	class:X86ISA::IntDevice
signalSwitched	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::signalSwitched()$/;"	f	class:OzoneCPU
signal_type	src/kern/tru64/tru64.hh	/^        int signal_type;        \/\/!< signal_type$/;"	m	struct:Tru64::nxm_thread_attr
signal_urti	src/kern/tru64/tru64_syscalls.hh	/^        signal_urti = 155,$/;"	e	enum:SystemCalls::__anon102
signature	src/arch/x86/bios/acpi.cc	/^const char X86ISA::ACPI::RSDP::signature[] = "RSD PTR ";$/;"	m	class:X86ISA::ACPI::RSDP	file:
signature	src/arch/x86/bios/acpi.hh	/^    const char * signature;$/;"	m	class:X86ISA::ACPI::SysDescTable
signature	src/arch/x86/bios/acpi.hh	/^    static const char signature[];$/;"	m	class:X86ISA::ACPI::RSDP
signature	src/arch/x86/bios/intelmp.cc	/^const char X86ISA::IntelMP::ConfigTable::signature[] = "PCMP";$/;"	m	class:X86ISA::IntelMP::ConfigTable	file:
signature	src/arch/x86/bios/intelmp.cc	/^const char X86ISA::IntelMP::FloatingPointer::signature[] = "_MP_";$/;"	m	class:X86ISA::IntelMP::FloatingPointer	file:
signature	src/arch/x86/bios/intelmp.hh	/^    static const char signature[];$/;"	m	class:X86ISA::IntelMP::ConfigTable
signature	src/arch/x86/bios/intelmp.hh	/^    static const char signature[];$/;"	m	class:X86ISA::IntelMP::FloatingPointer
signedOp	src/arch/x86/insts/micromediaop.hh	/^        signedOp() const$/;"	f	class:X86ISA::MediaOpBase
signedPick	src/arch/x86/insts/static_inst.hh	/^        inline int64_t signedPick(uint64_t from, int idx, int size) const$/;"	f	class:X86ISA::X86StaticInst
signo	src/cpu/kvm/timer.hh	/^    int signo;$/;"	m	class:BaseKvmTimer
sigpending	src/kern/linux/linux_syscalls.hh	/^    sigpending = 223,$/;"	e	enum:SystemCalls::__anon87
sigpending	src/kern/tru64/tru64_syscalls.hh	/^        sigpending = 52,$/;"	e	enum:SystemCalls::__anon102
sigprocmask	src/kern/linux/linux_syscalls.hh	/^    sigprocmask = 224,$/;"	e	enum:SystemCalls::__anon87
sigprocmask	src/kern/tru64/tru64_syscalls.hh	/^        sigprocmask = 48,$/;"	e	enum:SystemCalls::__anon102
sigreturn	src/kern/linux/linux_syscalls.hh	/^    sigreturn = 225,$/;"	e	enum:SystemCalls::__anon87
sigreturn	src/kern/tru64/tru64_syscalls.hh	/^        sigreturn = 103,$/;"	e	enum:SystemCalls::__anon102
sigreturnFunc	src/kern/tru64/tru64.hh	/^    sigreturnFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	class:Tru64
sigsendset	src/kern/tru64/tru64_syscalls.hh	/^        sigsendset = 238,$/;"	e	enum:SystemCalls::__anon102
sigset_t	src/kern/tru64/tru64.hh	/^    typedef uint64_t   sigset_t;$/;"	t	class:Tru64
sigstack	src/kern/tru64/tru64_syscalls.hh	/^        sigstack = 112,$/;"	e	enum:SystemCalls::__anon102
sigsuspend	src/kern/linux/linux_syscalls.hh	/^    sigsuspend = 226,$/;"	e	enum:SystemCalls::__anon87
sigsuspend	src/kern/tru64/tru64_syscalls.hh	/^        sigsuspend = 111,$/;"	e	enum:SystemCalls::__anon102
sigwaitprim	src/kern/tru64/tru64_syscalls.hh	/^        sigwaitprim = 157,$/;"	e	enum:SystemCalls::__anon102
simCycles	src/cpu/testers/networktest/networktest.hh	/^    Tick simCycles;$/;"	m	class:NetworkTest
simFreq	src/sim/stat_control.cc	/^Stats::Value simFreq;$/;"	v
simInsts	src/sim/stat_control.cc	/^    Stats::Value simInsts;$/;"	m	struct:Stats::Global	file:
simObjectList	src/sim/sim_object.hh	/^    static SimObjectList simObjectList;$/;"	m	class:SimObject
simOps	src/sim/stat_control.cc	/^    Stats::Value simOps;$/;"	m	struct:Stats::Global	file:
simPalCheck	src/arch/alpha/ev5.cc	/^SimpleThread::simPalCheck(int palFunc)$/;"	f	class:SimpleThread
simPalCheck	src/cpu/checker/cpu.hh	/^    bool simPalCheck(int palFunc) { return thread->simPalCheck(palFunc); }$/;"	f	class:CheckerCPU
simPalCheck	src/cpu/inorder/cpu.cc	/^InOrderCPU::simPalCheck(int palFunc, ThreadID tid)$/;"	f	class:InOrderCPU
simPalCheck	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::simPalCheck(int palFunc)$/;"	f	class:InOrderDynInst
simPalCheck	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::simPalCheck(int palFunc, ThreadID tid)$/;"	f	class:FullO3CPU
simPalCheck	src/cpu/o3/dyn_inst_impl.hh	/^BaseO3DynInst<Impl>::simPalCheck(int palFunc)$/;"	f	class:BaseO3DynInst
simPalCheck	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::simPalCheck(int palFunc)$/;"	f	class:OzoneCPU
simPalCheck	src/cpu/ozone/dyn_inst_impl.hh	/^OzoneDynInst<Impl>::simPalCheck(int palFunc)$/;"	f	class:OzoneDynInst
simPalCheck	src/cpu/simple/base.hh	/^    bool simPalCheck(int palFunc) { return thread->simPalCheck(palFunc); }$/;"	f	class:BaseSimpleCPU
simTicks	src/sim/stat_control.cc	/^Stats::Value simTicks;$/;"	v
simTicksReset	src/sim/stat_control.cc	/^SimTicksReset simTicksReset;$/;"	m	namespace:Stats	file:
sim_cycles	src/cpu/testers/networktest/NetworkTest.py	/^    sim_cycles = Param.Int(1000, "Number of simulation cycles")$/;"	v	class:NetworkTest
sim_fd	src/sim/process.cc	/^Process::sim_fd(int tgt_fd)$/;"	f	class:Process
sim_fd_obj	src/sim/process.cc	/^Process::sim_fd_obj(int tgt_fd)$/;"	f	class:Process
sim_quantum	src/sim/Root.py	/^    sim_quantum = Param.Tick(0, "simulation quantum")$/;"	v	class:Root
simdPack	src/arch/mips/dsp.cc	/^MipsISA::simdPack(uint64_t *values_ptr, int32_t *reg, int32_t fmt)$/;"	f	class:MipsISA
simdUnpack	src/arch/mips/dsp.cc	/^MipsISA::simdUnpack(int32_t reg, uint64_t *values_ptr, int32_t fmt, int32_t sign)$/;"	f	class:MipsISA
simd_modified_imm	src/arch/arm/insts/pred_inst.hh	/^simd_modified_imm(bool op, uint8_t cmode, uint8_t data, bool &immValid,$/;"	f	namespace:ArmISA
simpoint	src/cpu/simple/atomic.hh	/^    const bool simpoint;$/;"	m	class:AtomicSimpleCPU
simpoint	src/sim/Process.py	/^    simpoint = Param.UInt64(0, 'simulation point at which to start simulation')$/;"	v	class:LiveProcess
simpointStream	src/cpu/simple/atomic.hh	/^    std::ostream *simpointStream;$/;"	m	class:AtomicSimpleCPU
simpoint_interval	src/cpu/simple/AtomicSimpleCPU.py	/^    simpoint_interval = Param.UInt64(100000000, "SimPoint Interval Size (insts)")$/;"	v	class:AtomicSimpleCPU
simpoint_profile	src/cpu/simple/AtomicSimpleCPU.py	/^    simpoint_profile = Param.Bool(False, "Generate SimPoint BBVs")$/;"	v	class:AtomicSimpleCPU
simpoint_profile_file	src/cpu/simple/AtomicSimpleCPU.py	/^    simpoint_profile_file = Param.String("simpoint.bb.gz", "SimPoint BBV file")$/;"	v	class:AtomicSimpleCPU
simpoint_start_insts	src/cpu/BaseCPU.py	/^    simpoint_start_insts = VectorParam.Counter([],$/;"	v
simulate	src/python/m5/simulate.py	/^def simulate(*args, **kwargs):$/;"	f
simulate	src/sim/simulate.cc	/^simulate(Tick num_cycles)$/;"	f
simulate_data_stalls	src/cpu/simple/AtomicSimpleCPU.py	/^    simulate_data_stalls = Param.Bool(False, "Simulate dcache stall cycles")$/;"	v	class:AtomicSimpleCPU
simulate_data_stalls	src/cpu/simple/atomic.hh	/^    const bool simulate_data_stalls;$/;"	m	class:AtomicSimpleCPU
simulate_inst_stalls	src/cpu/simple/AtomicSimpleCPU.py	/^    simulate_inst_stalls = Param.Bool(False, "Simulate icache stall cycles")$/;"	v	class:AtomicSimpleCPU
simulate_inst_stalls	src/cpu/simple/atomic.hh	/^    const bool simulate_inst_stalls;$/;"	m	class:AtomicSimpleCPU
singlePrecision	src/arch/arm/miscregs.hh	/^        Bitfield<7, 4> singlePrecision;$/;"	m	namespace:ArmISA
sink	src/dev/x86/X86IntPin.py	/^    sink = Param.X86IntSinkPin("Pin driven by this line")$/;"	v	class:X86IntLine
sink	src/dev/x86/intdev.hh	/^    IntSinkPin *sink;$/;"	m	class:X86ISA::IntLine
sinks	src/dev/x86/intdev.hh	/^    std::vector<IntSinkPin *> sinks;$/;"	m	class:X86ISA::IntSourcePin
size	src/arch/alpha/AlphaTLB.py	/^    size = 48$/;"	v	class:AlphaITB
size	src/arch/alpha/AlphaTLB.py	/^    size = 64$/;"	v	class:AlphaDTB
size	src/arch/alpha/AlphaTLB.py	/^    size = Param.Int("TLB size")$/;"	v	class:AlphaTLB
size	src/arch/alpha/tlb.hh	/^    int size;               \/\/ TLB Size$/;"	m	class:AlphaISA::TLB
size	src/arch/arm/ArmTLB.py	/^    size = 32$/;"	v	class:ArmStage2TLB
size	src/arch/arm/ArmTLB.py	/^    size = Param.Int(64, "TLB size")$/;"	v	class:ArmTLB
size	src/arch/arm/linux/atag.hh	/^    uint32_t size() const { return _size; }$/;"	f	class:AtagHeader
size	src/arch/arm/linux/process.hh	/^        int size;$/;"	m	struct:ArmLinuxProcessBits::SyscallTable
size	src/arch/arm/pagetable.hh	/^    Addr size;              \/\/ Size of this entry, == Type of TLB Rec$/;"	m	struct:ArmISA::TlbEntry
size	src/arch/arm/tlb.hh	/^    int size;            \/\/ TLB Size$/;"	m	class:ArmISA::TLB
size	src/arch/arm/types.hh	/^        uint8_t size() const { return _size; }$/;"	f	class:ArmISA::PCState
size	src/arch/arm/types.hh	/^        void size(uint8_t s) { _size = s; }$/;"	f	class:ArmISA::PCState
size	src/arch/mips/MipsTLB.py	/^    size = Param.Int(64, "TLB size")$/;"	v	class:MipsTLB
size	src/arch/mips/tlb.hh	/^    int size;                   \/\/ TLB Size$/;"	m	class:MipsISA::TLB
size	src/arch/power/PowerTLB.py	/^    size = Param.Int(64, "TLB size")$/;"	v	class:PowerTLB
size	src/arch/power/tlb.hh	/^    int size;                   \/\/ TLB Size$/;"	m	class:PowerISA::TLB
size	src/arch/sparc/SparcTLB.py	/^    size = Param.Int(64, "TLB size")$/;"	v	class:SparcTLB
size	src/arch/sparc/pagetable.hh	/^    Addr size()     const { assert(_size() < 6); return pageSizes[_size()]; }$/;"	f	class:SparcISA::PageTableEntry
size	src/arch/sparc/pagetable.hh	/^    Addr size;$/;"	m	struct:SparcISA::TlbRange
size	src/arch/sparc/tlb.hh	/^    int size;$/;"	m	class:SparcISA::TLB
size	src/arch/sparc/tlb_map.hh	/^    size()$/;"	f	class:SparcISA::TlbMap
size	src/arch/x86/X86TLB.py	/^    size = Param.Unsigned(64, "TLB size")$/;"	v	class:X86TLB
size	src/arch/x86/bios/E820.py	/^    size = Param.MemorySize('0B', 'size of the region')$/;"	v	class:X86E820Entry
size	src/arch/x86/bios/e820.hh	/^        Addr size;$/;"	m	class:X86ISA::E820Entry
size	src/arch/x86/pagetable.hh	/^        int size()$/;"	f	struct:X86ISA::TlbEntry
size	src/arch/x86/process.hh	/^            Addr size;$/;"	m	class:X86ISA::I386LiveProcess::VSyscallPage
size	src/arch/x86/process.hh	/^            Addr size;$/;"	m	class:X86ISA::X86_64LiveProcess::VSyscallPage
size	src/arch/x86/tlb.hh	/^        uint32_t size;$/;"	m	class:X86ISA::TLB
size	src/arch/x86/types.hh	/^        uint8_t size() const { return _size; }$/;"	f	class:X86ISA::PCState
size	src/arch/x86/types.hh	/^        void size(uint8_t newSize) { _size = newSize; }$/;"	f	class:X86ISA::PCState
size	src/base/addr_range.hh	/^    Addr size() const$/;"	f	class:AddrRange
size	src/base/addr_range_map.hh	/^    size() const$/;"	f	class:AddrRangeMap
size	src/base/bitmap.hh	/^        uint32_t size;$/;"	m	struct:Bitmap::Header
size	src/base/chunk_generator.hh	/^    unsigned size() const { return curSize; }$/;"	f	class:ChunkGenerator
size	src/base/circlebuf.hh	/^    int size() const { return _size; }$/;"	f	class:CircleBuf
size	src/base/inet.hh	/^    int size() const { return IP6_HDR_LEN + extensionLength(); }$/;"	f	struct:Net::Ip6Hdr
size	src/base/inet.hh	/^    int size() const { return hlen(); }$/;"	f	struct:Net::IpHdr
size	src/base/inet.hh	/^    int size() const { return len(); }$/;"	f	struct:Net::TcpOpt
size	src/base/inet.hh	/^    int size() const { return off(); }$/;"	f	struct:Net::TcpHdr
size	src/base/inet.hh	/^    int size() const { return sizeof(eth_addr); }$/;"	f	struct:Net::EthAddr
size	src/base/inet.hh	/^    int size() const { return sizeof(udp_hdr); }$/;"	f	struct:Net::UdpHdr
size	src/base/inet.hh	/^    int size() const {$/;"	f	struct:Net::EthHdr
size	src/base/loader/object_file.hh	/^        size_t   size;$/;"	m	struct:ObjectFile::Section
size	src/base/remote_gdb.hh	/^        size_t size;$/;"	m	class:BaseRemoteGDB::GdbRegCache
size	src/base/statistics.cc	/^Formula::size() const$/;"	f	class:Stats::Formula
size	src/base/statistics.hh	/^    size() const$/;"	f	class:Stats::BinaryNode
size	src/base/statistics.hh	/^    size() const$/;"	f	class:Stats::DistProxy
size	src/base/statistics.hh	/^    size() const$/;"	f	class:Stats::ScalarProxyNode
size	src/base/statistics.hh	/^    size() const$/;"	f	class:Stats::Vector2dBase
size	src/base/statistics.hh	/^    size() const$/;"	f	class:Stats::VectorDistBase
size	src/base/statistics.hh	/^    size_type size() const { return 1; }$/;"	f	class:Stats::AvgSampleStor
size	src/base/statistics.hh	/^    size_type size() const { return 1; }$/;"	f	class:Stats::ConstNode
size	src/base/statistics.hh	/^    size_type size() const { return 1; }$/;"	f	class:Stats::ProxyInfo
size	src/base/statistics.hh	/^    size_type size() const { return 1; }$/;"	f	class:Stats::SampleStor
size	src/base/statistics.hh	/^    size_type size() const { return 1; }$/;"	f	class:Stats::ScalarBase
size	src/base/statistics.hh	/^    size_type size() const { return 1; }$/;"	f	class:Stats::ScalarProxy
size	src/base/statistics.hh	/^    size_type size() const { return 1; }$/;"	f	class:Stats::ScalarStatNode
size	src/base/statistics.hh	/^    size_type size() const { return 1; }$/;"	f	class:Stats::SumNode
size	src/base/statistics.hh	/^    size_type size() const { return _size; }$/;"	f	class:Stats::VectorBase
size	src/base/statistics.hh	/^    size_type size() const { return cmap.size(); }$/;"	f	class:Stats::SparseHistStor
size	src/base/statistics.hh	/^    size_type size() const { return cvec.size(); }$/;"	f	class:Stats::DistStor
size	src/base/statistics.hh	/^    size_type size() const { return cvec.size(); }$/;"	f	class:Stats::HistStor
size	src/base/statistics.hh	/^    size_type size() const { return data()->size(); }$/;"	f	class:Stats::DistBase
size	src/base/statistics.hh	/^    size_type size() const { return data()->size(); }$/;"	f	class:Stats::SparseHistBase
size	src/base/statistics.hh	/^    size_type size() const { return data->size(); }$/;"	f	class:Stats::VectorStatNode
size	src/base/statistics.hh	/^    size_type size() const { return formula.size(); }$/;"	f	class:Stats::FormulaNode
size	src/base/statistics.hh	/^    size_type size() const { return l->size(); }$/;"	f	class:Stats::UnaryNode
size	src/base/statistics.hh	/^    size_type size() const { return len; }$/;"	f	class:Stats::VectorProxy
size	src/base/statistics.hh	/^    size_type size() const { return proxy->size(); }$/;"	f	class:Stats::ValueBase
size	src/base/statistics.hh	/^    size_type size() const { return this->s.size(); }$/;"	f	class:Stats::FormulaInfoProxy
size	src/base/statistics.hh	/^    size_type size() const { return this->s.size(); }$/;"	f	class:Stats::VectorDistInfoProxy
size	src/base/statistics.hh	/^    size_type size() const { return this->s.size(); }$/;"	f	class:Stats::VectorInfoProxy
size	src/base/statistics.hh	/^    size_type size() const { return vresult.size(); }$/;"	f	class:Stats::ConstVectorNode
size	src/base/varargs.hh	/^    size_type size() const { return l.size(); }$/;"	f	class:VarArgs::List
size	src/cpu/inorder/resource_sked.cc	/^ResourceSked::size()$/;"	f	class:ResourceSked
size	src/cpu/o3/comm.hh	/^    int size;$/;"	m	struct:DefaultDecodeDefaultRename
size	src/cpu/o3/comm.hh	/^    int size;$/;"	m	struct:DefaultFetchDefaultDecode
size	src/cpu/o3/comm.hh	/^    int size;$/;"	m	struct:DefaultIEWDefaultCommit
size	src/cpu/o3/comm.hh	/^    int size;$/;"	m	struct:DefaultRenameDefaultIEW
size	src/cpu/o3/comm.hh	/^    int size;$/;"	m	struct:IssueStruct
size	src/cpu/o3/fu_pool.hh	/^        int size;$/;"	m	class:FUPool::FUIdxQueue
size	src/cpu/o3/fu_pool.hh	/^    int size() { return numFU; }$/;"	f	class:FUPool
size	src/cpu/o3/lsq_unit.hh	/^        uint8_t size;$/;"	m	struct:LSQUnit::SQEntry
size	src/cpu/ozone/back_end.hh	/^        int size;$/;"	m	class:BackEnd::InstQueue
size	src/cpu/ozone/back_end.hh	/^        int size;$/;"	m	struct:BackEnd::SizeStruct
size	src/cpu/ozone/lsq_unit.hh	/^        int size;$/;"	m	struct:OzoneLSQ::SQEntry
size	src/cpu/ozone/lw_back_end.hh	/^        int size;$/;"	m	struct:LWBackEnd::SizeStruct
size	src/cpu/ozone/lw_lsq.hh	/^        int size;$/;"	m	struct:OzoneLWLSQ::SQEntry
size	src/cpu/testers/memtest/memtest.hh	/^    unsigned size;              \/\/ size of testing memory region$/;"	m	class:MemTest
size	src/cpu/testers/networktest/networktest.hh	/^    unsigned size;$/;"	m	class:NetworkTest
size	src/cpu/timebuf.hh	/^    unsigned size;$/;"	m	class:TimeBuffer
size	src/dev/Pci.py	/^    size = Param.MemorySize32('16MB', "Size of config space")$/;"	v	class:PciConfigAll
size	src/dev/arm/hdlcd.hh	/^        Bitfield<11,8>  size;$/;"	m	class:HDLcd
size	src/dev/disk_image.cc	/^CowDiskImage::size() const$/;"	f	class:CowDiskImage
size	src/dev/disk_image.cc	/^RawDiskImage::size() const$/;"	f	class:RawDiskImage
size	src/dev/i8254xGBe.hh	/^        int size;$/;"	m	class:IGbE::DescCache
size	src/dev/pktfifo.hh	/^    unsigned size() const { return _size; }$/;"	f	class:PacketFifo
size	src/dev/sinicreg.hh	/^    uint8_t size;$/;"	m	struct:Sinic::Regs::Info
size	src/mem/abstract_mem.hh	/^    uint64_t size() const { return range.size(); }$/;"	f	class:AbstractMemory
size	src/mem/cache/BaseCache.py	/^    size = Param.MemorySize("capacity in bytes")$/;"	v	class:BaseCache
size	src/mem/cache/blk.hh	/^    int size;$/;"	m	class:CacheBlk
size	src/mem/cache/mshr.hh	/^    int size;$/;"	m	class:MSHR
size	src/mem/cache/prefetch/Prefetcher.py	/^    size = Param.Int(100,$/;"	v	class:BasePrefetcher
size	src/mem/cache/prefetch/base.hh	/^    const unsigned size;$/;"	m	class:BasePrefetcher
size	src/mem/cache/tags/Tags.py	/^    size = Param.MemorySize(Parent.size, "capacity in bytes")$/;"	v	class:BaseTags
size	src/mem/cache/tags/base.hh	/^    const unsigned size;$/;"	m	class:BaseTags
size	src/mem/dram_ctrl.hh	/^        unsigned int size;$/;"	m	class:DRAMCtrl::DRAMPacket
size	src/mem/packet.hh	/^    unsigned size;$/;"	m	class:Packet
size	src/mem/physical.hh	/^    uint64_t size;$/;"	m	class:PhysicalMemory
size	src/mem/ruby/common/Histogram.hh	/^    uint64_t size() const { return m_count; }$/;"	f	class:Histogram
size	src/mem/ruby/system/Cache.py	/^    size = Param.MemorySize("capacity in bytes");$/;"	v	class:RubyCache
size	src/mem/ruby/system/DirectoryMemory.py	/^    size = Param.MemorySize("1GB", "capacity in bytes")$/;"	v	class:RubyDirectoryMemory
size	src/python/m5/params.py	/^    def size(self):$/;"	m	class:AddrRange
size	src/python/m5/params.py	/^    size = 32$/;"	v	class:MemorySize32
size	src/python/m5/params.py	/^    size = 64$/;"	v	class:Addr
size	src/python/m5/params.py	/^    size = 64$/;"	v	class:Cycles
size	src/python/m5/params.py	/^    size = 64$/;"	v	class:MemorySize
size	src/sim/syscall_emul.hh	/^    int size;$/;"	m	class:BaseBufferArg
sizeLeft	src/base/chunk_generator.hh	/^    unsigned  sizeLeft;$/;"	m	class:ChunkGenerator
sizeMask	src/arch/sparc/pagetable.hh	/^    Addr sizeMask() const { return size() - 1; }$/;"	f	class:SparcISA::PageTableEntry
size_t	src/arch/arm/linux/linux.hh	/^    typedef uint32_t size_t;$/;"	t	class:ArmLinux32
size_t	src/arch/arm/linux/linux.hh	/^    typedef uint64_t size_t;$/;"	t	class:ArmLinux64
size_t	src/kern/linux/linux.hh	/^    typedef uint64_t size_t;$/;"	t	class:Linux
size_t	src/kern/solaris/solaris.hh	/^    typedef uint64_t size_t;$/;"	t	class:Solaris
size_t	src/kern/tru64/tru64.hh	/^    typedef uint64_t size_t;$/;"	t	class:Tru64
size_type	src/base/stats/types.hh	/^typedef unsigned int size_type;$/;"	t	namespace:Stats
size_type	src/base/varargs.hh	/^    typedef typename list::size_type size_type;$/;"	t	class:VarArgs::List
sizeofHeaderBuffer	src/base/bitmap.cc	/^const size_t Bitmap::sizeofHeaderBuffer = sizeof(Magic) + sizeof(Header) +$/;"	m	class:Bitmap	file:
sizeofHeaderBuffer	src/base/bitmap.hh	/^    static const size_t sizeofHeaderBuffer;$/;"	m	class:Bitmap
skedCache	src/cpu/inorder/cpu.cc	/^m5::hash_map<InOrderCPU::SkedID, ThePipeline::RSkedPtr> InOrderCPU::skedCache;$/;"	m	class:InOrderCPU	file:
skedCache	src/cpu/inorder/cpu.hh	/^    static m5::hash_map<SkedID, ThePipeline::RSkedPtr> skedCache;$/;"	m	class:InOrderCPU
skidBuffer	src/cpu/inorder/pipeline_stage.hh	/^    std::list<DynInstPtr> skidBuffer[ThePipeline::MaxThreads];$/;"	m	class:PipelineStage
skidBuffer	src/cpu/o3/commit.hh	/^    std::queue<DynInstPtr> skidBuffer;$/;"	m	class:DefaultCommit
skidBuffer	src/cpu/o3/decode.hh	/^    std::queue<DynInstPtr> skidBuffer[Impl::MaxThreads];$/;"	m	class:DefaultDecode
skidBuffer	src/cpu/o3/iew.hh	/^    std::queue<DynInstPtr> skidBuffer[Impl::MaxThreads];$/;"	m	class:DefaultIEW
skidBuffer	src/cpu/o3/rename.hh	/^    InstQueue skidBuffer[Impl::MaxThreads];$/;"	m	class:DefaultRename
skidBufferMax	src/cpu/o3/decode.hh	/^    unsigned skidBufferMax;$/;"	m	class:DefaultDecode
skidBufferMax	src/cpu/o3/iew.hh	/^    unsigned skidBufferMax;$/;"	m	class:DefaultIEW
skidBufferMax	src/cpu/o3/rename.hh	/^    unsigned skidBufferMax;$/;"	m	class:DefaultRename
skidCount	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::skidCount()$/;"	f	class:DefaultIEW
skidInsert	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::skidInsert()$/;"	f	class:DefaultCommit
skidInsert	src/cpu/o3/decode_impl.hh	/^DefaultDecode<Impl>::skidInsert(ThreadID tid)$/;"	f	class:DefaultDecode
skidInsert	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::skidInsert(ThreadID tid)$/;"	f	class:DefaultIEW
skidInsert	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::skidInsert(ThreadID tid)$/;"	f	class:DefaultRename
skidSize	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::skidSize()$/;"	f	class:PipelineStage
skidsEmpty	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::skidsEmpty()$/;"	f	class:PipelineStage
skidsEmpty	src/cpu/o3/decode_impl.hh	/^DefaultDecode<Impl>::skidsEmpty()$/;"	f	class:DefaultDecode
skidsEmpty	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::skidsEmpty()$/;"	f	class:DefaultIEW
skidsEmpty	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::skidsEmpty()$/;"	f	class:DefaultRename
skipCacheProbeEvent	src/arch/alpha/linux/system.hh	/^    SkipFuncEvent *skipCacheProbeEvent;$/;"	m	class:LinuxAlphaSystem
skipCacheProbeEvent	src/arch/mips/linux/system.hh	/^    SkipFuncEvent *skipCacheProbeEvent;$/;"	m	class:LinuxMipsSystem
skipCalibrateClocks	src/arch/alpha/freebsd/system.hh	/^    SkipCalibrateClocksEvent *skipCalibrateClocks;$/;"	m	class:FreebsdAlphaSystem
skipDelayEvent	src/arch/alpha/freebsd/system.hh	/^    SkipFuncEvent *skipDelayEvent;$/;"	m	class:FreebsdAlphaSystem
skipDelayLoopEvent	src/arch/alpha/linux/system.hh	/^    SkipDelayLoopEvent *skipDelayLoopEvent;$/;"	m	class:LinuxAlphaSystem
skipDelayLoopEvent	src/arch/mips/linux/system.hh	/^    SkipDelayLoopEvent *skipDelayLoopEvent;$/;"	m	class:LinuxMipsSystem
skipFaultingInstruction	src/arch/alpha/faults.hh	/^    bool skipFaultingInstruction() {return true;}$/;"	f	class:AlphaISA::ArithmeticFault
skipFaultingInstruction	src/arch/alpha/faults.hh	/^    bool skipFaultingInstruction() {return true;}$/;"	f	class:AlphaISA::PalFault
skipFaultingInstruction	src/arch/alpha/faults.hh	/^    virtual bool skipFaultingInstruction() {return false;}$/;"	f	class:AlphaISA::AlphaFault
skipFunction	src/arch/alpha/utility.cc	/^skipFunction(ThreadContext *tc)$/;"	f	namespace:AlphaISA
skipFunction	src/arch/arm/utility.cc	/^skipFunction(ThreadContext *tc)$/;"	f	namespace:ArmISA
skipFunction	src/arch/mips/utility.cc	/^skipFunction(ThreadContext *tc)$/;"	f	namespace:MipsISA
skipFunction	src/arch/power/utility.cc	/^skipFunction(ThreadContext *tc)$/;"	f	namespace:PowerISA
skipFunction	src/arch/sparc/utility.cc	/^skipFunction(ThreadContext *tc)$/;"	f	namespace:SparcISA
skipFunction	src/arch/x86/utility.cc	/^skipFunction(ThreadContext *tc)$/;"	f	namespace:X86ISA
skipIdeDelay50msEvent	src/arch/alpha/linux/system.hh	/^    SkipFuncEvent *skipIdeDelay50msEvent;$/;"	m	class:LinuxAlphaSystem
skipIdeDelay50msEvent	src/arch/mips/linux/system.hh	/^    SkipFuncEvent *skipIdeDelay50msEvent;$/;"	m	class:LinuxMipsSystem
skipPowerStateEvent	src/arch/alpha/tru64/system.hh	/^    SkipFuncEvent *skipPowerStateEvent;$/;"	m	class:Tru64AlphaSystem
skipScavengeBootEvent	src/arch/alpha/tru64/system.hh	/^    SkipFuncEvent *skipScavengeBootEvent;$/;"	m	class:Tru64AlphaSystem
sl	src/arch/mips/pra_constants.hh	/^    Bitfield<7,  4>  sl;$/;"	m	namespace:MipsISA
sl0	src/arch/arm/miscregs.hh	/^        Bitfield<7, 6> sl0;$/;"	m	namespace:ArmISA
slack	src/dev/pktfifo.hh	/^    unsigned slack;$/;"	m	struct:PacketFifoEntry
slave	src/dev/ide_ctrl.hh	/^        IdeDisk *master, *slave;$/;"	m	struct:IdeController::Channel
slave	src/dev/x86/I8259.py	/^    slave = Param.I8259(NULL, 'Slave I8259, if any')$/;"	v	class:I8259
slave	src/dev/x86/i8259.hh	/^    I8259 * slave;$/;"	m	class:X86ISA::I8259
slave	src/mem/AddrMapper.py	/^    slave = SlavePort("Slave port")$/;"	v	class:AddrMapper
slave	src/mem/Bridge.py	/^    slave = SlavePort('Slave port')$/;"	v	class:Bridge
slave	src/mem/Bus.py	/^    slave = VectorSlavePort("vector port for connecting masters")$/;"	v	class:BaseBus
slave	src/mem/CommMonitor.py	/^    slave = SlavePort("Slave port")$/;"	v	class:CommMonitor
slave	src/mem/ruby/system/Sequencer.py	/^    slave = VectorSlavePort("CPU slave port")$/;"	v	class:RubyPort
slavePort	src/mem/addr_mapper.hh	/^    MapperSlavePort slavePort;$/;"	m	class:AddrMapper
slavePort	src/mem/bridge.hh	/^        BridgeSlavePort& slavePort;$/;"	m	class:Bridge::BridgeMasterPort
slavePort	src/mem/bridge.hh	/^    BridgeSlavePort slavePort;$/;"	m	class:Bridge
slavePort	src/mem/coherent_bus.hh	/^        SlavePort& slavePort;$/;"	m	class:CoherentBus::SnoopRespPort
slavePort	src/mem/comm_monitor.hh	/^    MonitorSlavePort slavePort;$/;"	m	class:CommMonitor
slavePort	src/mem/packet_queue.hh	/^    SlavePort& slavePort;$/;"	m	class:SlavePacketQueue
slavePorts	src/mem/bus.hh	/^    std::vector<SlavePort*> slavePorts;$/;"	m	class:BaseBus
slave_ports	src/mem/ruby/system/RubyPort.hh	/^    std::vector<MemSlavePort *> slave_ports;$/;"	m	class:RubyPort
sleep	src/base/time.cc	/^sleep(const Time &time)$/;"	f
slicc	src/mem/slicc/parser.py	/^import slicc.ast as ast$/;"	i
slicc	src/mem/slicc/parser.py	/^import slicc.util as util$/;"	i
slicc	src/mem/slicc/symbols/StateMachine.py	/^import slicc.generate.html as html$/;"	i
slotIdx	src/cpu/inorder/resource.hh	/^    int slotIdx;$/;"	m	class:ResourceEvent
slotNum	src/cpu/inorder/resource.hh	/^    int slotNum;$/;"	m	class:ResourceRequest
slot_clk_config	src/dev/pcireg.h	/^        Bitfield<12>    slot_clk_config;$/;"	m	struct:PXCAP
slotsAvail	src/cpu/inorder/resource.cc	/^Resource::slotsAvail()$/;"	f	class:Resource
slotsAvail	src/cpu/inorder/resource_pool.9stage.cc	/^ResourcePool::slotsAvail(int res_idx)$/;"	f	class:ResourcePool
slotsAvail	src/cpu/inorder/resource_pool.cc	/^ResourcePool::slotsAvail(int res_idx)$/;"	f	class:ResourcePool
slotsInUse	src/cpu/inorder/resource.cc	/^Resource::slotsInUse()$/;"	f	class:Resource
slotsInUse	src/cpu/inorder/resource_pool.9stage.cc	/^ResourcePool::slotsInUse(int res_idx)$/;"	f	class:ResourcePool
slotsInUse	src/cpu/inorder/resource_pool.cc	/^ResourcePool::slotsInUse(int res_idx)$/;"	f	class:ResourcePool
sls	src/dev/pcireg.h	/^        Bitfield<3,0>   sls;$/;"	m	struct:PXCAP
sm	src/arch/mips/pra_constants.hh	/^    Bitfield<1>  sm;$/;"	m	namespace:MipsISA
sm	src/base/cp_annotate.hh	/^        uint16_t sm;$/;"	m	struct:CPA::AnnotateData
smCache	src/base/cp_annotate.hh	/^    IdCache qCache, smCache;$/;"	m	class:CPA
smMap	src/base/cp_annotate.hh	/^    IdMap smMap, qMap;$/;"	m	class:CPA
smStack	src/base/cp_annotate.hh	/^    SmStack smStack;$/;"	m	class:CPA
smallPages	src/arch/mips/tlb.hh	/^    int smallPages;$/;"	m	class:MipsISA::TLB
smallPages	src/arch/power/tlb.hh	/^    int smallPages;$/;"	m	class:PowerISA::TLB
smallestElement	src/mem/ruby/common/NetDest.cc	/^NetDest::smallestElement() const$/;"	f	class:NetDest
smallestElement	src/mem/ruby/common/NetDest.cc	/^NetDest::smallestElement(MachineType machine) const$/;"	f	class:NetDest
smallestElement	src/mem/ruby/common/Set.cc	/^Set::smallestElement() const$/;"	f	class:Set
smbiosBCDRevision	src/arch/x86/bios/smbios.hh	/^            uint8_t smbiosBCDRevision;$/;"	m	struct:X86ISA::SMBios::SMBiosTable::SMBiosHeader::IntermediateHeader
smbiosHeader	src/arch/x86/bios/smbios.hh	/^    } smbiosHeader;$/;"	m	class:X86ISA::SMBios::SMBiosTable	typeref:struct:X86ISA::SMBios::SMBiosTable::SMBiosHeader
smbiosTable	src/arch/x86/system.hh	/^    X86ISA::SMBios::SMBiosTable * smbiosTable;$/;"	m	class:X86System
smbios_table	src/arch/x86/X86System.py	/^    smbios_table = Param.X86SMBiosSMBiosTable($/;"	v	class:X86System
smc_fake	src/dev/arm/RealView.py	/^    smc_fake      = AmbaFake(pio_addr=0x100e1000)$/;"	v	class:RealViewEB
smc_fake	src/dev/arm/RealView.py	/^    smc_fake      = AmbaFake(pio_addr=0x100e1000)$/;"	v	class:RealViewPBX
smcreg_fake	src/dev/arm/RealView.py	/^    smcreg_fake   = IsaFake(pio_addr=0x10080000, pio_size=0x10000-1)$/;"	v	class:RealViewEB
smd	src/arch/arm/miscregs.hh	/^        Bitfield<7> smd;  \/\/ AArch64$/;"	m	namespace:ArmISA
smiCycle	src/arch/x86/regs/misc.hh	/^        Bitfield<2> smiCycle;$/;"	m	namespace:X86ISA
smiVector	src/arch/x86/interrupts.hh	/^    uint8_t smiVector;$/;"	m	class:X86ISA::Interrupts
smtCache	src/base/cp_annotate.hh	/^    SCache smtCache;$/;"	m	class:CPA
smtCommitPolicy	src/cpu/o3/O3CPU.py	/^    smtCommitPolicy = Param.String('RoundRobin', "SMT Commit Policy")$/;"	v	class:DerivO3CPU
smtCommitPolicy	src/cpu/ozone/simple_params.hh	/^    std::string   smtCommitPolicy;$/;"	m	class:SimpleParams
smtCommittedInsts	src/cpu/inorder/cpu.hh	/^    Stats::Vector smtCommittedInsts;$/;"	m	class:InOrderCPU
smtCpi	src/cpu/inorder/cpu.hh	/^    Stats::Formula smtCpi;$/;"	m	class:InOrderCPU
smtCycles	src/cpu/inorder/cpu.hh	/^    Stats::Scalar smtCycles;$/;"	m	class:InOrderCPU
smtFetchPolicy	src/cpu/o3/O3CPU.py	/^    smtFetchPolicy = Param.String('SingleThread', "SMT Fetch policy")$/;"	v	class:DerivO3CPU
smtFetchPolicy	src/cpu/ozone/simple_params.hh	/^    std::string   smtFetchPolicy;$/;"	m	class:SimpleParams
smtIQPolicy	src/cpu/o3/O3CPU.py	/^    smtIQPolicy    = Param.String('Partitioned', "SMT IQ Sharing Policy")$/;"	v	class:DerivO3CPU
smtIQPolicy	src/cpu/ozone/simple_params.hh	/^    std::string   smtIQPolicy;$/;"	m	class:SimpleParams
smtIQThreshold	src/cpu/o3/O3CPU.py	/^    smtIQThreshold = Param.Int(100, "SMT IQ Threshold Sharing Parameter")$/;"	v	class:DerivO3CPU
smtIQThreshold	src/cpu/ozone/simple_params.hh	/^    unsigned smtIQThreshold;$/;"	m	class:SimpleParams
smtIpc	src/cpu/inorder/cpu.hh	/^    Stats::Formula smtIpc;$/;"	m	class:InOrderCPU
smtLSQPolicy	src/cpu/o3/O3CPU.py	/^    smtLSQPolicy    = Param.String('Partitioned', "SMT LSQ Sharing Policy")$/;"	v	class:DerivO3CPU
smtLSQPolicy	src/cpu/ozone/simple_params.hh	/^    std::string   smtLSQPolicy;$/;"	m	class:SimpleParams
smtLSQThreshold	src/cpu/o3/O3CPU.py	/^    smtLSQThreshold = Param.Int(100, "SMT LSQ Threshold Sharing Parameter")$/;"	v	class:DerivO3CPU
smtLSQThreshold	src/cpu/ozone/simple_params.hh	/^    unsigned smtLSQThreshold;$/;"	m	class:SimpleParams
smtNumFetchingThreads	src/cpu/o3/O3CPU.py	/^    smtNumFetchingThreads = Param.Unsigned(1, "SMT Number of Fetching Threads")$/;"	v	class:DerivO3CPU
smtNumFetchingThreads	src/cpu/ozone/simple_params.hh	/^    unsigned smtNumFetchingThreads;$/;"	m	class:SimpleParams
smtROBPolicy	src/cpu/o3/O3CPU.py	/^    smtROBPolicy   = Param.String('Partitioned', "SMT ROB Sharing Policy")$/;"	v	class:DerivO3CPU
smtROBPolicy	src/cpu/ozone/simple_params.hh	/^    std::string   smtROBPolicy;$/;"	m	class:SimpleParams
smtROBThreshold	src/cpu/o3/O3CPU.py	/^    smtROBThreshold = Param.Int(100, "SMT ROB Threshold Sharing Parameter")$/;"	v	class:DerivO3CPU
smtROBThreshold	src/cpu/ozone/simple_params.hh	/^    unsigned smtROBThreshold;$/;"	m	class:SimpleParams
sn	src/arch/arm/linux/atag.hh	/^    void sn(uint64_t i) { storage[2] = (uint32_t)i; storage[3] = i >> 32; }$/;"	f	class:AtagSerial
snList	src/cpu/o3/cpu.hh	/^    std::set<InstSeqNum> snList;$/;"	m	class:FullO3CPU
snList	src/cpu/ozone/cpu.hh	/^    std::set<InstSeqNum> snList;$/;"	m	class:OzoneCPU
snaplen	src/dev/etherdump.cc	/^    uint32_t snaplen;           \/\/ max length saved portion of each pkt$/;"	m	struct:pcap_file_header	file:
snoopDataThroughBus	src/mem/coherent_bus.hh	/^    Stats::Scalar snoopDataThroughBus;$/;"	m	class:CoherentBus
snoopLayers	src/mem/coherent_bus.hh	/^    std::vector<SnoopLayer*> snoopLayers;$/;"	m	class:CoherentBus
snoopPorts	src/mem/coherent_bus.hh	/^    std::vector<SlavePort*> snoopPorts;$/;"	m	class:CoherentBus
snoopRespPorts	src/mem/coherent_bus.hh	/^    std::vector<SnoopRespPort*> snoopRespPorts;$/;"	m	class:CoherentBus
so	src/arch/power/miscregs.hh	/^        Bitfield<28> so;$/;"	m	namespace:PowerISA
so	src/arch/power/miscregs.hh	/^    Bitfield<31> so;$/;"	m	namespace:PowerISA
socket	src/dev/ethertap.hh	/^    int socket;$/;"	m	class:EtherTap
socket	src/kern/tru64/tru64_syscalls.hh	/^        socket = 97,$/;"	e	enum:SystemCalls::__anon102
socket	src/python/m5/main.py	/^import socket$/;"	i
socketcall	src/kern/linux/linux_syscalls.hh	/^    socketcall = 227,$/;"	e	enum:SystemCalls::__anon87
socketpair	src/kern/tru64/tru64_syscalls.hh	/^        socketpair = 135,$/;"	e	enum:SystemCalls::__anon102
softInt	src/dev/arm/gic_pl390.cc	/^Pl390::softInt(int ctx_id, SWI swi)$/;"	f	class:Pl390
soft_prefetch_mshr_full	src/mem/cache/base.hh	/^    Stats::Vector soft_prefetch_mshr_full;$/;"	m	class:BaseCache
softint	src/arch/sparc/isa.hh	/^    uint64_t softint;$/;"	m	class:SparcISA::ISA
sort	src/arch/isa_parser.py	/^    def sort(self):$/;"	m	class:OperandList
sortInsts	src/cpu/inorder/first_stage.hh	/^    void sortInsts() {}$/;"	f	class:FirstStage
sortInsts	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::sortInsts()$/;"	f	class:PipelineStage
sortInsts	src/cpu/o3/decode_impl.hh	/^DefaultDecode<Impl>::sortInsts()$/;"	f	class:DefaultDecode
sortInsts	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::sortInsts()$/;"	f	class:DefaultIEW
sortInsts	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::sortInsts()$/;"	f	class:DefaultRename
sorted	src/python/m5/util/sorteddict.py	/^    sorted = property(_get_sorted, _set_sorted)$/;"	v	class:SortedDict
sortgroups	src/python/m5/util/jobfile.py	/^    def sortgroups(self, groups):$/;"	m	class:Configuration
source	src/arch/arm/faults.hh	/^    uint8_t source;$/;"	m	class:ArmISA::AbortFault
source	src/dev/sparc/iob.hh	/^        int source;$/;"	m	struct:Iob::IntBusy
source	src/dev/x86/X86IntPin.py	/^    source = Param.X86IntSourcePin("Pin driving this line")$/;"	v	class:X86IntLine
source	src/dev/x86/intdev.hh	/^    IntSourcePin *source;$/;"	m	class:X86ISA::IntLine
source	src/mem/cache/mshr.hh	/^        Source source;  \/\/!< Did request come from cpu, memory, or prefetcher?$/;"	m	class:MSHR::Target
sourceBusID	src/arch/x86/bios/intelmp.hh	/^    uint8_t sourceBusID;$/;"	m	class:X86ISA::IntelMP::IntAssignment
sourceBusIRQ	src/arch/x86/bios/intelmp.hh	/^    uint8_t sourceBusIRQ;$/;"	m	class:X86ISA::IntelMP::IntAssignment
source_bus_id	src/arch/x86/bios/IntelMP.py	/^    source_bus_id = Param.UInt8(0,$/;"	v	class:X86IntelMPIOIntAssignment
source_bus_id	src/arch/x86/bios/IntelMP.py	/^    source_bus_id = Param.UInt8(0,$/;"	v	class:X86IntelMPLocalIntAssignment
source_bus_irq	src/arch/x86/bios/IntelMP.py	/^    source_bus_irq = Param.UInt8(0,$/;"	v	class:X86IntelMPIOIntAssignment
source_bus_irq	src/arch/x86/bios/IntelMP.py	/^    source_bus_irq = Param.UInt8(0,$/;"	v	class:X86IntelMPLocalIntAssignment
southBridge	src/dev/x86/pc.hh	/^    SouthBridge *southBridge;$/;"	m	class:Pc
south_bridge	src/dev/x86/Pc.py	/^    south_bridge = SouthBridge()$/;"	v	class:Pc
sp	src/arch/arm/miscregs.hh	/^        Bitfield<0> sp;         \/\/ AArch64$/;"	m	namespace:ArmISA
sp	src/arch/mips/pra_constants.hh	/^    Bitfield<4>  sp;$/;"	m	namespace:MipsISA
sp	src/kern/tru64/tru64.hh	/^            uint64_t sp;        \/\/!< sp$/;"	m	struct:Tru64::nxm_thread_attr::__anon100
sp810_fake	src/dev/arm/RealView.py	/^    sp810_fake     = AmbaFake(pio_addr=0x1C020000, ignore_access=True)$/;"	v	class:VExpress_EMM
sp810_fake	src/dev/arm/RealView.py	/^    sp810_fake    = AmbaFake(pio_addr=0x10001000, ignore_access=True)$/;"	v	class:RealViewEB
sp810_fake	src/dev/arm/RealView.py	/^    sp810_fake    = AmbaFake(pio_addr=0x10001000, ignore_access=True)$/;"	v	class:RealViewPBX
spX	src/arch/arm/types.hh	/^        Bitfield<0> spX;$/;"	m	namespace:ArmISA
space	src/kern/tru64/tru64.hh	/^        int64_t space[2];                  \/\/!< future growth$/;"	m	struct:Tru64::nxm_shared
speaker	src/dev/x86/SouthBridge.py	/^    speaker = Param.PcSpeaker(_speaker, "PC speaker")$/;"	v	class:SouthBridge
speaker	src/dev/x86/south_bridge.hh	/^    X86ISA::Speaker * speaker;$/;"	m	class:SouthBridge
speaker	src/dev/x86/speaker.hh	/^        Bitfield<1> speaker;$/;"	m	class:X86ISA::Speaker
specRev	src/arch/x86/bios/intelmp.hh	/^    uint8_t specRev;$/;"	m	class:X86ISA::IntelMP::ConfigTable
specRev	src/arch/x86/bios/intelmp.hh	/^    uint8_t specRev;$/;"	m	class:X86ISA::IntelMP::FloatingPointer
spec_rev	src/arch/x86/bios/IntelMP.py	/^    spec_rev = Param.UInt8(4, 'minor revision of the MP spec supported')$/;"	v	class:X86IntelMPConfigTable
spec_rev	src/arch/x86/bios/IntelMP.py	/^    spec_rev = Param.UInt8(4, 'minor revision of the MP spec supported')$/;"	v	class:X86IntelMPFloatingPointer
speculative	src/arch/sparc/miscregs.hh	/^    const static int speculative = 0x04;$/;"	m	struct:SparcISA::STS
speed	src/dev/Ethernet.py	/^    speed = Param.NetworkBandwidth('100Mbps', "bus speed in bits per second")$/;"	v	class:EtherBus
speed	src/dev/Ethernet.py	/^    speed = Param.NetworkBandwidth('1Gbps', "link speed")$/;"	v	class:EtherLink
sph	src/dev/i8254xGBe_defs.hh	/^            uint16_t sph:1;$/;"	m	struct:iGbReg::RxDesc::__anon70::__anon73
spillHandler32	src/arch/sparc/handlers.hh	/^const MachInst spillHandler32[numSpillInsts] =$/;"	m	namespace:SparcISA
spillHandler64	src/arch/sparc/handlers.hh	/^const MachInst spillHandler64[numSpillInsts] =$/;"	m	namespace:SparcISA
spillStart	src/arch/sparc/process.hh	/^    Addr fillStart, spillStart;$/;"	m	class:SparcLiveProcess
split2ndAccess	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool split2ndAccess;$/;"	m	class:InOrderDynInst
split2ndAccess	src/cpu/inorder/resources/cache_unit.hh	/^    bool split2ndAccess;$/;"	m	class:CacheRequest
split2ndAddr	src/cpu/inorder/inorder_dyn_inst.hh	/^    Addr split2ndAddr;$/;"	m	class:InOrderDynInst
split2ndData	src/cpu/inorder/inorder_dyn_inst.hh	/^    uint8_t split2ndData;$/;"	m	class:InOrderDynInst
split2ndDataPtr	src/cpu/inorder/inorder_dyn_inst.hh	/^    PacketDataPtr split2ndDataPtr;$/;"	m	class:InOrderDynInst
split2ndFlags	src/cpu/inorder/inorder_dyn_inst.hh	/^    unsigned split2ndFlags;$/;"	m	class:InOrderDynInst
split2ndSize	src/cpu/inorder/inorder_dyn_inst.hh	/^    int split2ndSize;$/;"	m	class:InOrderDynInst
split2ndStoreDataPtr	src/cpu/inorder/inorder_dyn_inst.hh	/^    uint64_t *split2ndStoreDataPtr;    $/;"	m	class:InOrderDynInst
splitAccess	src/cpu/inorder/resources/cache_unit.hh	/^    bool splitAccess;$/;"	m	class:CacheRequest
splitAccessNum	src/cpu/inorder/resources/cache_unit.hh	/^    int splitAccessNum;$/;"	m	class:CacheRequest
splitCount	src/dev/i8254xGBe.hh	/^        int splitCount;$/;"	m	class:IGbE::RxDescCache
splitFinishCnt	src/cpu/inorder/inorder_dyn_inst.hh	/^    int splitFinishCnt;$/;"	m	class:InOrderDynInst
splitInst	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool splitInst;$/;"	m	class:InOrderDynInst
splitInstSked	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool splitInstSked;$/;"	m	class:InOrderDynInst
splitMemData	src/cpu/inorder/inorder_dyn_inst.hh	/^    PacketDataPtr splitMemData;$/;"	m	class:InOrderDynInst
splitMemReq	src/cpu/inorder/inorder_dyn_inst.hh	/^    RequestPtr splitMemReq;    $/;"	m	class:InOrderDynInst
splitOnVaddr	src/mem/request.hh	/^    void splitOnVaddr(Addr split_addr, RequestPtr &req1, RequestPtr &req2)$/;"	f	class:Request
splitRequest	src/cpu/base_dyn_inst.hh	/^BaseDynInst<Impl>::splitRequest(RequestPtr req, RequestPtr &sreqLow,$/;"	f	class:BaseDynInst
split_first	src/base/str.cc	/^split_first(const string &s, string &lhs, string &rhs, char c)$/;"	f
split_last	src/base/str.cc	/^split_last(const string &s, string &lhs, string &rhs, char c)$/;"	f
splitter	src/python/m5/options.py	/^class splitter(object):$/;"	c
spm	src/arch/x86/insts/microfpop.hh	/^        const int8_t spm;$/;"	m	class:X86ISA::FpOp
sport	src/base/inet.hh	/^    uint16_t sport() const { return ntohs(th_sport); }$/;"	f	struct:Net::TcpHdr
sport	src/base/inet.hh	/^    uint16_t sport() const { return ntohs(uh_sport); }$/;"	f	struct:Net::UdpHdr
spr	src/arch/power/types.hh	/^    Bitfield<20, 11> spr;$/;"	m	namespace:PowerISA
spsrWriteByInstr	src/arch/arm/insts/static_inst.hh	/^    spsrWriteByInstr(uint32_t spsr, uint32_t val,$/;"	f	class:ArmISA::ArmStaticInst
sqEmpty	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::sqEmpty() const$/;"	f	class:LSQ
sqEmpty	src/cpu/o3/lsq_unit.hh	/^    bool sqEmpty() const { return stores == 0; }$/;"	f	class:LSQUnit
sqFull	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::sqFull()$/;"	f	class:LSQ
sqFull	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::sqFull(ThreadID tid)$/;"	f	class:LSQ
sqFull	src/cpu/o3/lsq_unit.hh	/^    bool sqFull() { return stores >= (SQEntries - 1); }$/;"	f	class:LSQUnit
sqFull	src/cpu/ozone/lsq_unit.hh	/^    bool sqFull() { return stores >= (SQEntries - 1); }$/;"	f	class:OzoneLSQ
sqFull	src/cpu/ozone/lw_lsq.hh	/^    bool sqFull() { return (stores + storesInFlight) >= (SQEntries - 1); }$/;"	f	class:OzoneLWLSQ
sqIdx	src/cpu/base_dyn_inst.hh	/^    int16_t sqIdx;$/;"	m	class:BaseDynInst
sqIdx	src/cpu/inorder/inorder_dyn_inst.hh	/^    int16_t sqIdx;$/;"	m	class:InOrderDynInst
squareRoot	src/arch/arm/miscregs.hh	/^        Bitfield<23, 20> squareRoot;$/;"	m	namespace:ArmISA
squares	src/base/statistics.hh	/^    Counter squares;$/;"	m	class:Stats::AvgSampleStor
squares	src/base/statistics.hh	/^    Counter squares;$/;"	m	class:Stats::DistStor
squares	src/base/statistics.hh	/^    Counter squares;$/;"	m	class:Stats::HistStor
squares	src/base/statistics.hh	/^    Counter squares;$/;"	m	class:Stats::SampleStor
squares	src/base/stats/info.hh	/^    Counter squares;$/;"	m	struct:Stats::DistData
squash	src/cpu/inorder/comm.hh	/^        bool squash;$/;"	m	struct:TimeStruct::StageComm
squash	src/cpu/inorder/first_stage.cc	/^FirstStage::squash(InstSeqNum squash_seq_num, ThreadID tid)$/;"	f	class:FirstStage
squash	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::squash(InstSeqNum squash_seq_num, ThreadID tid)$/;"	f	class:PipelineStage
squash	src/cpu/inorder/resource.cc	/^Resource::squash(DynInstPtr inst, int stage_num, InstSeqNum squash_seq_num,$/;"	f	class:Resource
squash	src/cpu/inorder/resource_pool.9stage.cc	/^ResourcePool::squash(DynInstPtr inst, int res_idx, InstSeqNum done_seq_num,$/;"	f	class:ResourcePool
squash	src/cpu/inorder/resource_pool.cc	/^ResourcePool::squash(DynInstPtr inst, int res_idx, InstSeqNum done_seq_num,$/;"	f	class:ResourcePool
squash	src/cpu/inorder/resources/branch_predictor.cc	/^BranchPredictor::squash(DynInstPtr inst, int squash_stage,$/;"	f	class:BranchPredictor
squash	src/cpu/inorder/resources/cache_unit.cc	/^CacheUnit::squash(DynInstPtr inst, int stage_num,$/;"	f	class:CacheUnit
squash	src/cpu/inorder/resources/fetch_seq_unit.cc	/^FetchSeqUnit::squash(DynInstPtr inst, int squash_stage,$/;"	f	class:FetchSeqUnit
squash	src/cpu/inorder/resources/inst_buffer.cc	/^InstBuffer::squash(DynInstPtr inst, int stage_num,$/;"	f	class:InstBuffer
squash	src/cpu/inorder/resources/mult_div_unit.cc	/^MultDivUnit::squash(DynInstPtr inst, int stage_num, InstSeqNum squash_seq_num,$/;"	f	class:MultDivUnit
squash	src/cpu/inorder/resources/tlb_unit.cc	/^TLBUnit::squash(DynInstPtr inst, int stage_num,$/;"	f	class:TLBUnit
squash	src/cpu/o3/comm.hh	/^        bool squash; \/\/ *F, D, R, I$/;"	m	struct:TimeBufStruct::commitComm
squash	src/cpu/o3/comm.hh	/^        bool squash;$/;"	m	struct:TimeBufStruct::decodeComm
squash	src/cpu/o3/comm.hh	/^    bool squash[Impl::MaxThreads];$/;"	m	struct:DefaultIEWDefaultCommit
squash	src/cpu/o3/decode_impl.hh	/^DefaultDecode<Impl>::squash(DynInstPtr &inst, ThreadID tid)$/;"	f	class:DefaultDecode
squash	src/cpu/o3/decode_impl.hh	/^DefaultDecode<Impl>::squash(ThreadID tid)$/;"	f	class:DefaultDecode
squash	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::squash(const TheISA::PCState &newPC,$/;"	f	class:DefaultFetch
squash	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::squash(ThreadID tid)$/;"	f	class:DefaultIEW
squash	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::squash(ThreadID tid)$/;"	f	class:InstructionQueue
squash	src/cpu/o3/lsq.hh	/^    void squash(const InstSeqNum &squashed_num, ThreadID tid)$/;"	f	class:LSQ
squash	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::squash(const InstSeqNum &squashed_num)$/;"	f	class:LSQUnit
squash	src/cpu/o3/mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::squash(const InstSeqNum &squashed_num,$/;"	f	class:MemDepUnit
squash	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::squash(const InstSeqNum &squash_seq_num, ThreadID tid)$/;"	f	class:DefaultRename
squash	src/cpu/o3/rob_impl.hh	/^ROB<Impl>::squash(InstSeqNum squash_num, ThreadID tid)$/;"	f	class:ROB
squash	src/cpu/o3/store_set.cc	/^StoreSet::squash(InstSeqNum squashed_num, ThreadID tid)$/;"	f	class:StoreSet
squash	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::InstQueue::squash(const InstSeqNum &sn)$/;"	f	class:BackEnd::InstQueue
squash	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::squash(const InstSeqNum &sn)$/;"	f	class:BackEnd
squash	src/cpu/ozone/front_end_impl.hh	/^FrontEnd<Impl>::squash(const InstSeqNum &squash_num, const Addr &next_PC,$/;"	f	class:FrontEnd
squash	src/cpu/ozone/inorder_back_end_impl.hh	/^InorderBackEnd<Impl>::squash(const InstSeqNum &squash_num, const Addr &next_PC)$/;"	f	class:InorderBackEnd
squash	src/cpu/ozone/inst_queue_impl.hh	/^InstQueue<Impl>::squash(ThreadID tid)$/;"	f	class:InstQueue
squash	src/cpu/ozone/lsq_unit_impl.hh	/^OzoneLSQ<Impl>::squash(const InstSeqNum &squashed_num)$/;"	f	class:OzoneLSQ
squash	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::squash(const InstSeqNum &sn)$/;"	f	class:LWBackEnd
squash	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::squash(const InstSeqNum &squashed_num)$/;"	f	class:OzoneLWLSQ
squash	src/cpu/ozone/null_predictor.hh	/^    void squash(const InstSeqNum &squashed_sn, ThreadID tid) { }$/;"	f	class:NullPredictor
squash	src/cpu/ozone/null_predictor.hh	/^    void squash(const InstSeqNum &squashed_sn, const Addr &corr_target,$/;"	f	class:NullPredictor
squash	src/cpu/pred/2bit_local.hh	/^    void squash(void *bp_history)$/;"	f	class:LocalBP
squash	src/cpu/pred/bpred_unit_impl.hh	/^BPredUnit::squash(const InstSeqNum &squashed_sn, ThreadID tid)$/;"	f	class:BPredUnit
squash	src/cpu/pred/bpred_unit_impl.hh	/^BPredUnit::squash(const InstSeqNum &squashed_sn,$/;"	f	class:BPredUnit
squash	src/cpu/pred/tournament.cc	/^TournamentBP::squash(void *bp_history)$/;"	f	class:TournamentBP
squash	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::squash(int threadNum)$/;"	f	class:Cache
squash	src/mem/cache/mshr_queue.cc	/^MSHRQueue::squash(int threadNum)$/;"	f	class:MSHRQueue
squash	src/sim/eventq.hh	/^    void squash() { flags.set(Squashed); }$/;"	f	class:Event
squashAfter	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::squashAfter(ThreadID tid, DynInstPtr &head_inst)$/;"	f	class:DefaultCommit
squashAfterDelaySlot	src/cpu/inorder/pipeline_stage.hh	/^    bool squashAfterDelaySlot[ThePipeline::MaxThreads];$/;"	m	class:PipelineStage
squashAfterDelaySlot	src/cpu/o3/decode.hh	/^    bool squashAfterDelaySlot[Impl::MaxThreads];$/;"	m	class:DefaultDecode
squashAfterInst	src/cpu/o3/commit.hh	/^    DynInstPtr squashAfterInst[Impl::MaxThreads];$/;"	m	class:DefaultCommit
squashAll	src/cpu/inorder/resource_pool.9stage.cc	/^ResourcePool::squashAll(DynInstPtr inst, int stage_num,$/;"	f	class:ResourcePool
squashAll	src/cpu/inorder/resource_pool.cc	/^ResourcePool::squashAll(DynInstPtr inst, int stage_num,$/;"	f	class:ResourcePool
squashAll	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::squashAll(ThreadID tid)$/;"	f	class:DefaultCommit
squashCacheRequest	src/cpu/inorder/resources/cache_unit.cc	/^CacheUnit::squashCacheRequest(CacheReqPtr req_ptr)$/;"	f	class:CacheUnit
squashCacheRequest	src/cpu/inorder/resources/fetch_unit.cc	/^FetchUnit::squashCacheRequest(CacheReqPtr req_ptr)$/;"	f	class:FetchUnit
squashCounter	src/cpu/o3/commit.hh	/^    ThreadID squashCounter;$/;"	m	class:DefaultCommit
squashDueToBranch	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::squashDueToBranch(DynInstPtr &inst, ThreadID tid)$/;"	f	class:DefaultIEW
squashDueToBranch	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::squashDueToBranch(DynInstPtr &inst)$/;"	f	class:BackEnd
squashDueToBranch	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::squashDueToBranch(DynInstPtr &inst)$/;"	f	class:LWBackEnd
squashDueToMemBlocked	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::squashDueToMemBlocked(DynInstPtr &inst, ThreadID tid)$/;"	f	class:DefaultIEW
squashDueToMemBlocked	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::squashDueToMemBlocked(DynInstPtr &inst)$/;"	f	class:BackEnd
squashDueToMemBlocked	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::squashDueToMemBlocked(DynInstPtr &inst)$/;"	f	class:LWBackEnd
squashDueToMemOrder	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::squashDueToMemOrder(DynInstPtr &inst, ThreadID tid)$/;"	f	class:DefaultIEW
squashDueToMemStall	src/cpu/inorder/cpu.cc	/^InOrderCPU::squashDueToMemStall(int stage_num, InstSeqNum seq_num,$/;"	f	class:InOrderCPU
squashDueToMemStall	src/cpu/inorder/first_stage.cc	/^FirstStage::squashDueToMemStall(InstSeqNum seq_num, ThreadID tid)$/;"	f	class:FirstStage
squashDueToMemStall	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::squashDueToMemStall(InstSeqNum seq_num, ThreadID tid)$/;"	f	class:PipelineStage
squashDueToMemStall	src/cpu/inorder/resource.cc	/^Resource::squashDueToMemStall(DynInstPtr inst, int stage_num,$/;"	f	class:Resource
squashDueToMemStall	src/cpu/inorder/resource_pool.cc	/^ResourcePool::squashDueToMemStall(DynInstPtr inst, int stage_num,$/;"	f	class:ResourcePool
squashDueToMemStall	src/cpu/inorder/resources/cache_unit.cc	/^CacheUnit::squashDueToMemStall(DynInstPtr inst, int stage_num,$/;"	f	class:CacheUnit
squashDueToMemViolation	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::squashDueToMemViolation(DynInstPtr &inst)$/;"	f	class:LWBackEnd
squashFromDecode	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::squashFromDecode(const TheISA::PCState &newPC,$/;"	f	class:DefaultFetch
squashFromMemStall	src/cpu/inorder/cpu.cc	/^InOrderCPU::squashFromMemStall(DynInstPtr inst, ThreadID tid,$/;"	f	class:InOrderCPU
squashFromSquashAfter	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::squashFromSquashAfter(ThreadID tid)$/;"	f	class:DefaultCommit
squashFromTC	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::squashFromTC(ThreadID tid)$/;"	f	class:DefaultCommit
squashFromTC	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::squashFromTC(ThreadID tid)$/;"	f	class:FullO3CPU
squashFromTC	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::squashFromTC()$/;"	f	class:OzoneCPU
squashFromTC	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::squashFromTC()$/;"	f	class:LWBackEnd
squashFromTrap	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::squashFromTrap(ThreadID tid)$/;"	f	class:DefaultCommit
squashFromTrap	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::squashFromTrap()$/;"	f	class:LWBackEnd
squashFromXC	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::squashFromXC()$/;"	f	class:BackEnd
squashFromXC	src/cpu/ozone/inorder_back_end_impl.hh	/^InorderBackEnd<Impl>::squashFromXC()$/;"	f	class:InorderBackEnd
squashInst	src/cpu/inorder/pipeline_stage.hh	/^    DynInstPtr squashInst[ThePipeline::MaxThreads];$/;"	m	class:PipelineStage
squashInst	src/cpu/o3/comm.hh	/^        DynInstPtr squashInst; \/\/ *F$/;"	m	struct:TimeBufStruct::commitComm
squashInst	src/cpu/o3/comm.hh	/^        DynInstPtr squashInst;$/;"	m	struct:TimeBufStruct::decodeComm
squashInst	src/cpu/o3/decode.hh	/^    DynInstPtr squashInst[Impl::MaxThreads];$/;"	m	class:DefaultDecode
squashInstIt	src/cpu/inorder/cpu.cc	/^InOrderCPU::squashInstIt(const ListIt inst_it, ThreadID tid)$/;"	f	class:InOrderCPU
squashInstIt	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::squashInstIt(const ListIt &instIt, ThreadID tid)$/;"	f	class:FullO3CPU
squashIt	src/cpu/o3/rob.hh	/^    InstIt squashIt[Impl::MaxThreads];$/;"	m	class:ROB
squashIt	src/cpu/ozone/inst_queue.hh	/^    ListIt squashIt[Impl::MaxThreads];$/;"	m	class:InstQueue
squashLatency	src/cpu/ozone/back_end.hh	/^    int squashLatency;$/;"	m	class:BackEnd
squashLatency	src/cpu/ozone/inorder_back_end.hh	/^    int squashLatency;$/;"	m	class:InorderBackEnd
squashLatency	src/cpu/ozone/lw_back_end.hh	/^    int squashLatency;$/;"	m	class:LWBackEnd
squashNextPC	src/cpu/ozone/back_end.hh	/^    Addr squashNextPC;$/;"	m	class:BackEnd
squashNextPC	src/cpu/ozone/inorder_back_end.hh	/^    Addr squashNextPC;$/;"	m	class:InorderBackEnd
squashNextPC	src/cpu/ozone/lw_back_end.hh	/^    Addr squashNextPC;$/;"	m	class:LWBackEnd
squashPending	src/cpu/ozone/back_end.hh	/^    bool squashPending;$/;"	m	class:BackEnd
squashPending	src/cpu/ozone/inorder_back_end.hh	/^    bool squashPending;$/;"	m	class:InorderBackEnd
squashPending	src/cpu/ozone/lw_back_end.hh	/^    bool squashPending;$/;"	m	class:LWBackEnd
squashPrevStageInsts	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::squashPrevStageInsts(InstSeqNum squash_seq_num, ThreadID tid)$/;"	f	class:PipelineStage
squashSeqNum	src/cpu/inorder/cpu.hh	/^    InstSeqNum squashSeqNum[ThePipeline::MaxThreads];$/;"	m	class:InOrderCPU
squashSeqNum	src/cpu/inorder/inorder_dyn_inst.hh	/^    InstSeqNum squashSeqNum;$/;"	m	class:InOrderDynInst
squashSeqNum	src/cpu/inorder/resources/fetch_seq_unit.hh	/^    InstSeqNum squashSeqNum[ThePipeline::MaxThreads];$/;"	m	class:FetchSeqUnit
squashSeqNum	src/cpu/ozone/back_end.hh	/^    InstSeqNum squashSeqNum;$/;"	m	class:BackEnd
squashSeqNum	src/cpu/ozone/inorder_back_end.hh	/^    InstSeqNum squashSeqNum;$/;"	m	class:InorderBackEnd
squashSeqNum	src/cpu/ozone/lw_back_end.hh	/^    InstSeqNum squashSeqNum;$/;"	m	class:LWBackEnd
squashThenTrap	src/cpu/inorder/resource.cc	/^Resource::squashThenTrap(int stage_num, DynInstPtr inst)$/;"	f	class:Resource
squashThreadInPipeline	src/cpu/inorder/cpu.cc	/^InOrderCPU::squashThreadInPipeline(ThreadID tid)$/;"	f	class:InOrderCPU
squashWidth	src/cpu/o3/O3CPU.py	/^    squashWidth = Param.Unsigned(8, "Squash width")$/;"	v	class:DerivO3CPU
squashWidth	src/cpu/o3/rob.hh	/^    unsigned squashWidth;$/;"	m	class:ROB
squashWidth	src/cpu/ozone/OzoneCPU.py	/^    squashWidth = Param.Unsigned("Squash width")$/;"	v	class:DerivOzoneCPU
squashWidth	src/cpu/ozone/SimpleOzoneCPU.py	/^    squashWidth = Param.Unsigned("Squash width")$/;"	v	class:SimpleOzoneCPU
squashWidth	src/cpu/ozone/simple_params.hh	/^    unsigned squashWidth;$/;"	m	class:SimpleParams
squashed	src/cpu/inorder/resource.hh	/^    bool squashed;$/;"	m	class:ResourceRequest
squashed	src/cpu/o3/mem_dep_unit.hh	/^        bool squashed;$/;"	m	class:MemDepUnit::MemDepEntry
squashed	src/cpu/translation.hh	/^    squashed() const$/;"	f	class:DataTranslation
squashed	src/sim/eventq.hh	/^    bool squashed() const { return flags.isSet(Squashed); }$/;"	f	class:Event
squashed	src/sim/tlb.hh	/^        virtual bool squashed() const { return false; }$/;"	f	class:BaseTLB::Translation
squashedInsts	src/cpu/ozone/lw_back_end.hh	/^    Stats::Vector squashedInsts;$/;"	m	class:LWBackEnd
squashedSeqNum	src/cpu/o3/comm.hh	/^    InstSeqNum squashedSeqNum[Impl::MaxThreads];$/;"	m	struct:DefaultIEWDefaultCommit
squashedSeqNum	src/cpu/o3/inst_queue.hh	/^    InstSeqNum squashedSeqNum[Impl::MaxThreads];$/;"	m	class:InstructionQueue
squashedSeqNum	src/cpu/o3/rob.hh	/^    InstSeqNum squashedSeqNum[Impl::MaxThreads];$/;"	m	class:ROB
squashedSeqNum	src/cpu/ozone/inst_queue.hh	/^    InstSeqNum squashedSeqNum[Impl::MaxThreads];$/;"	m	class:InstQueue
squashingStage	src/cpu/inorder/inorder_dyn_inst.hh	/^    int squashingStage;$/;"	m	class:InOrderDynInst
sqwe	src/dev/mc146818.hh	/^        Bitfield<3> sqwe;      \/\/\/ 1 = output sqare wave at SQW pin$/;"	m	class:MC146818
sr	src/arch/mips/pra_constants.hh	/^    Bitfield<20>     sr;$/;"	m	namespace:MipsISA
src	src/base/inet.hh	/^    const EthAddr &src() const { return *(EthAddr *)&eth_src; }$/;"	f	struct:Net::EthHdr
src	src/base/inet.hh	/^    const uint8_t* src() const { return ip6_src.data; }$/;"	f	struct:Net::Ip6Hdr
src	src/base/inet.hh	/^    uint32_t src() const { return ntohl(ip_src); }$/;"	f	struct:Net::IpHdr
src	src/dev/copy_engine_defs.hh	/^    Addr src;$/;"	m	struct:CopyEngineReg::DmaDesc
src	src/mem/packet.hh	/^    PortID src;$/;"	m	class:Packet
src1	src/arch/x86/insts/microfpop.hh	/^        const RegIndex src1;$/;"	m	class:X86ISA::FpOp
src1	src/arch/x86/insts/micromediaop.hh	/^        const RegIndex src1;$/;"	m	class:X86ISA::MediaOpBase
src1	src/arch/x86/insts/microregop.hh	/^        const RegIndex src1;$/;"	m	class:X86ISA::RegOpBase
src2	src/arch/x86/insts/microfpop.hh	/^        const RegIndex src2;$/;"	m	class:X86ISA::FpOp
src2	src/arch/x86/insts/micromediaop.hh	/^        const RegIndex src2;$/;"	m	class:X86ISA::MediaOpReg
src2	src/arch/x86/insts/microregop.hh	/^        const RegIndex src2;$/;"	m	class:X86ISA::RegOp
srcEncoded	src/arch/arm/faults.hh	/^    uint8_t srcEncoded;$/;"	m	class:ArmISA::AbortFault
srcInstReady	src/cpu/ozone/dyn_inst_impl.hh	/^OzoneDynInst<Impl>::srcInstReady(int regIdx)$/;"	f	class:OzoneDynInst
srcInsts	src/cpu/ozone/dyn_inst.hh	/^    DynInstPtr srcInsts[MaxInstSrcRegs];$/;"	m	class:OzoneDynInst
srcMasterId	src/mem/cache/blk.hh	/^    int srcMasterId;$/;"	m	class:CacheBlk
srcMemInsts	src/cpu/ozone/dyn_inst.hh	/^    std::list<DynInstPtr> srcMemInsts;$/;"	m	class:OzoneDynInst
srcRegIdx	src/cpu/base_dyn_inst.hh	/^    RegIndex srcRegIdx(int i) const { return staticInst->srcRegIdx(i); }$/;"	f	class:BaseDynInst
srcRegIdx	src/cpu/inorder/inorder_dyn_inst.hh	/^    RegIndex srcRegIdx(int i) const { return staticInst->srcRegIdx(i); }$/;"	f	class:InOrderDynInst
srcRegIdx	src/cpu/static_inst.hh	/^    RegIndex srcRegIdx(int i)  const { return _srcRegIdx[i]; }$/;"	f	class:StaticInst
srcSize	src/arch/x86/insts/micromediaop.hh	/^        const uint8_t srcSize;$/;"	m	class:X86ISA::MediaOpBase
src_delay	src/mem/ruby/network/garnet/fixed-pipeline/flit_d.hh	/^    Cycles src_delay;$/;"	m	class:flit_d
src_delay	src/mem/ruby/network/garnet/flexible-pipeline/flit.hh	/^    Cycles src_delay;$/;"	m	class:flit
srcsReady	src/cpu/ozone/dyn_inst_impl.hh	/^OzoneDynInst<Impl>::srcsReady()$/;"	f	class:OzoneDynInst
sreqHigh	src/cpu/o3/lsq_unit.hh	/^        RequestPtr sreqHigh;$/;"	m	struct:LSQUnit::SQEntry
sreqHigh	src/cpu/translation.hh	/^    RequestPtr sreqHigh;$/;"	m	class:WholeTranslationState
sreqLow	src/cpu/o3/lsq_unit.hh	/^        RequestPtr sreqLow;$/;"	m	struct:LSQUnit::SQEntry
sreqLow	src/cpu/translation.hh	/^    RequestPtr sreqLow;$/;"	m	class:WholeTranslationState
srr	src/dev/ns_gige.hh	/^    uint32_t    srr;$/;"	m	struct:dp_regs
srrctl	src/dev/i8254xGBe_defs.hh	/^    SRRCTL srrctl;$/;"	m	struct:iGbReg::Regs
srt	src/arch/arm/faults.hh	/^    uint8_t srt;$/;"	m	class:ArmISA::DataAbort
ss	src/arch/arm/miscregs.hh	/^        Bitfield<21> ss;        \/\/ AArch64$/;"	m	namespace:ArmISA
ss	src/arch/mips/pra_constants.hh	/^    Bitfield<11, 8>  ss;$/;"	m	namespace:MipsISA
sse	src/arch/arm/faults.hh	/^    uint8_t sse;$/;"	m	class:ArmISA::DataAbort
ssetmask	src/kern/linux/linux_syscalls.hh	/^    ssetmask = 228,$/;"	e	enum:SystemCalls::__anon87
ssp_fake	src/dev/arm/RealView.py	/^    ssp_fake      = AmbaFake(pio_addr=0x1000d000)$/;"	v	class:RealViewEB
ssp_fake	src/dev/arm/RealView.py	/^    ssp_fake      = AmbaFake(pio_addr=0x1000d000)$/;"	v	class:RealViewPBX
sst	src/arch/mips/dt_constants.hh	/^    Bitfield<8>      sst;$/;"	m	namespace:MipsISA
sstk	src/kern/tru64/tru64_syscalls.hh	/^        sstk = 70,$/;"	e	enum:SystemCalls::__anon102
ssv0	src/arch/mips/pra_constants.hh	/^    Bitfield<3,  0>  ssv0;$/;"	m	namespace:MipsISA
ssv1	src/arch/mips/pra_constants.hh	/^    Bitfield<7,  4>  ssv1;$/;"	m	namespace:MipsISA
ssv2	src/arch/mips/pra_constants.hh	/^    Bitfield<11, 8>  ssv2;$/;"	m	namespace:MipsISA
ssv3	src/arch/mips/pra_constants.hh	/^    Bitfield<15, 12> ssv3;$/;"	m	namespace:MipsISA
ssv4	src/arch/mips/pra_constants.hh	/^    Bitfield<19, 16> ssv4;$/;"	m	namespace:MipsISA
ssv5	src/arch/mips/pra_constants.hh	/^    Bitfield<23, 20> ssv5;$/;"	m	namespace:MipsISA
ssv6	src/arch/mips/pra_constants.hh	/^    Bitfield<27, 24> ssv6;$/;"	m	namespace:MipsISA
ssv7	src/arch/mips/pra_constants.hh	/^    Bitfield<31, 28> ssv7;$/;"	m	namespace:MipsISA
st	src/arch/arm/miscregs.hh	/^        Bitfield<11> st;  \/\/ AArch64$/;"	m	namespace:ArmISA
st	src/base/loader/coff_sym.h	/^    unsigned st : 6;    \/* symbol type *\/$/;"	m	struct:ecoff_sym
stBlock	src/base/loader/coff_symconst.h	/^#define stBlock /;"	d
stCache	src/base/cp_annotate.hh	/^    StCache stCache;$/;"	m	class:CPA
stConstant	src/base/loader/coff_symconst.h	/^#define stConstant /;"	d
stEnd	src/base/loader/coff_symconst.h	/^#define stEnd /;"	d
stEnum	src/base/loader/coff_symconst.h	/^#define stEnum /;"	d
stExpr	src/base/loader/coff_symconst.h	/^#define stExpr /;"	d
stFile	src/base/loader/coff_symconst.h	/^#define stFile /;"	d
stForward	src/base/loader/coff_symconst.h	/^#define stForward /;"	d
stGlobal	src/base/loader/coff_symconst.h	/^#define stGlobal /;"	d
stIndirect	src/base/loader/coff_symconst.h	/^#define stIndirect /;"	d
stLabel	src/base/loader/coff_symconst.h	/^#define stLabel /;"	d
stLocal	src/base/loader/coff_symconst.h	/^#define stLocal /;"	d
stMax	src/base/loader/coff_symconst.h	/^#define stMax /;"	d
stMember	src/base/loader/coff_symconst.h	/^#define stMember /;"	d
stNil	src/base/loader/coff_symconst.h	/^#define stNil /;"	d
stNumber	src/base/loader/coff_symconst.h	/^#define stNumber /;"	d
stParam	src/base/loader/coff_symconst.h	/^#define stParam /;"	d
stProc	src/base/loader/coff_symconst.h	/^#define stProc /;"	d
stRegReloc	src/base/loader/coff_symconst.h	/^#define stRegReloc /;"	d
stStaParam	src/base/loader/coff_symconst.h	/^#define stStaParam /;"	d
stStatic	src/base/loader/coff_symconst.h	/^#define stStatic /;"	d
stStaticProc	src/base/loader/coff_symconst.h	/^#define stStaticProc /;"	d
stStr	src/base/loader/coff_symconst.h	/^#define stStr /;"	d
stStruct	src/base/loader/coff_symconst.h	/^#define stStruct /;"	d
stType	src/base/loader/coff_symconst.h	/^#define stType /;"	d
stTypedef	src/base/loader/coff_symconst.h	/^#define stTypedef /;"	d
stUnion	src/base/loader/coff_symconst.h	/^#define stUnion /;"	d
st_atimeX	src/arch/arm/linux/linux.hh	/^        uint32_t  st_atimeX;$/;"	m	struct:ArmLinux32::__anon7
st_atimeX	src/arch/arm/linux/linux.hh	/^        uint32_t st_atimeX;$/;"	m	struct:ArmLinux32::__anon6
st_atimeX	src/arch/arm/linux/linux.hh	/^        uint64_t st_atimeX;$/;"	m	struct:ArmLinux64::__anon10
st_atimeX	src/arch/arm/linux/linux.hh	/^        uint64_t st_atimeX;$/;"	m	struct:ArmLinux64::__anon9
st_atimeX	src/arch/power/linux/linux.hh	/^        uint32_t st_atimeX;$/;"	m	struct:PowerLinux::__anon22
st_atimeX	src/arch/power/linux/linux.hh	/^        uint32_t st_atimeX;$/;"	m	struct:PowerLinux::__anon23
st_atimeX	src/arch/sparc/linux/linux.hh	/^        int64_t st_atimeX;$/;"	m	struct:SparcLinux::__anon25
st_atimeX	src/arch/sparc/linux/linux.hh	/^        uint64_t st_atimeX;$/;"	m	struct:Sparc32Linux::__anon27
st_atimeX	src/arch/x86/linux/linux.hh	/^        uint32_t st_atimeX;$/;"	m	struct:X86Linux32::__anon33
st_atimeX	src/arch/x86/linux/linux.hh	/^        uint64_t st_atimeX;$/;"	m	struct:X86Linux64::__anon30
st_atimeX	src/kern/linux/linux.hh	/^        uint64_t        st_atimeX;      \/\/!< time of last access$/;"	m	struct:Linux::__anon84
st_atimeX	src/kern/linux/linux.hh	/^        uint64_t        st_atimeX;$/;"	m	struct:Linux::__anon85
st_atimeX	src/kern/solaris/solaris.hh	/^        int64_t st_atimeX, st_mtimeX, st_ctimeX;$/;"	m	struct:Solaris::__anon93
st_atimeX	src/kern/solaris/solaris.hh	/^        int64_t st_atimeX, st_mtimeX, st_ctimeX;$/;"	m	struct:Solaris::__anon94
st_atimeX	src/kern/tru64/tru64.hh	/^        time_t  st_atimeX;              \/\/!< st_atime$/;"	m	struct:Tru64_F64::F64_stat
st_atimeX	src/kern/tru64/tru64.hh	/^        time_t  st_atimeX;$/;"	m	struct:Tru64_PreF64::pre_F64_stat
st_atime_nsec	src/arch/arm/linux/linux.hh	/^        uint32_t  st_atime_nsec;$/;"	m	struct:ArmLinux32::__anon7
st_atime_nsec	src/arch/arm/linux/linux.hh	/^        uint32_t st_atime_nsec;$/;"	m	struct:ArmLinux32::__anon6
st_atime_nsec	src/arch/arm/linux/linux.hh	/^        uint64_t st_atime_nsec;$/;"	m	struct:ArmLinux64::__anon10
st_atime_nsec	src/arch/arm/linux/linux.hh	/^        uint64_t st_atime_nsec;$/;"	m	struct:ArmLinux64::__anon9
st_atime_nsec	src/arch/power/linux/linux.hh	/^        uint32_t st_atime_nsec;$/;"	m	struct:PowerLinux::__anon22
st_atime_nsec	src/arch/power/linux/linux.hh	/^        uint32_t st_atime_nsec;$/;"	m	struct:PowerLinux::__anon23
st_atime_nsec	src/arch/sparc/linux/linux.hh	/^        uint64_t st_atime_nsec;$/;"	m	struct:Sparc32Linux::__anon27
st_atime_nsec	src/arch/x86/linux/linux.hh	/^        uint32_t st_atime_nsec;$/;"	m	struct:X86Linux32::__anon33
st_atime_nsec	src/arch/x86/linux/linux.hh	/^        uint64_t st_atime_nsec;$/;"	m	struct:X86Linux64::__anon30
st_atime_nsec	src/kern/linux/linux.hh	/^        uint64_t        st_atime_nsec;$/;"	m	struct:Linux::__anon85
st_atime_reserved	src/kern/tru64/tru64.hh	/^        int32_t st_atime_reserved;      \/\/!< st_atime_reserved$/;"	m	struct:Tru64_F64::F64_stat
st_blksize	src/arch/arm/linux/linux.hh	/^        uint32_t  st_blksize;$/;"	m	struct:ArmLinux32::__anon7
st_blksize	src/arch/arm/linux/linux.hh	/^        uint32_t st_blksize;$/;"	m	struct:ArmLinux32::__anon6
st_blksize	src/arch/arm/linux/linux.hh	/^        uint64_t st_blksize;$/;"	m	struct:ArmLinux64::__anon10
st_blksize	src/arch/arm/linux/linux.hh	/^        uint64_t st_blksize;$/;"	m	struct:ArmLinux64::__anon9
st_blksize	src/arch/power/linux/linux.hh	/^        uint32_t st_blksize;$/;"	m	struct:PowerLinux::__anon22
st_blksize	src/arch/power/linux/linux.hh	/^        uint32_t st_blksize;$/;"	m	struct:PowerLinux::__anon23
st_blksize	src/arch/sparc/linux/linux.hh	/^        int32_t st_blksize;$/;"	m	struct:Sparc32Linux::__anon27
st_blksize	src/arch/sparc/linux/linux.hh	/^        int64_t st_blksize;$/;"	m	struct:SparcLinux::__anon25
st_blksize	src/arch/x86/linux/linux.hh	/^        int64_t st_blksize;$/;"	m	struct:X86Linux64::__anon30
st_blksize	src/arch/x86/linux/linux.hh	/^        uint32_t st_blksize;$/;"	m	struct:X86Linux32::__anon33
st_blksize	src/kern/linux/linux.hh	/^        uint32_t        st_blksize;     \/\/!< optimal I\/O block size$/;"	m	struct:Linux::__anon84
st_blksize	src/kern/linux/linux.hh	/^        uint32_t        st_blksize;$/;"	m	struct:Linux::__anon85
st_blksize	src/kern/solaris/solaris.hh	/^        int32_t         st_blksize;     \/\/!< optimal I\/O block size$/;"	m	struct:Solaris::__anon93
st_blksize	src/kern/solaris/solaris.hh	/^        int32_t         st_blksize;     \/\/!< optimal I\/O block size$/;"	m	struct:Solaris::__anon94
st_blksize	src/kern/tru64/tru64.hh	/^        uint32_t st_blksize;$/;"	m	struct:Tru64_PreF64::pre_F64_stat
st_blksize	src/kern/tru64/tru64.hh	/^        uint64_t        st_blksize;     \/\/!< st_blksize$/;"	m	struct:Tru64_F64::F64_stat
st_blocks	src/arch/arm/linux/linux.hh	/^        uint32_t st_blocks;$/;"	m	struct:ArmLinux32::__anon6
st_blocks	src/arch/arm/linux/linux.hh	/^        uint64_t  __attribute__ ((aligned (8))) st_blocks;$/;"	m	struct:ArmLinux32::__anon7
st_blocks	src/arch/arm/linux/linux.hh	/^        uint64_t st_blocks;$/;"	m	struct:ArmLinux64::__anon10
st_blocks	src/arch/arm/linux/linux.hh	/^        uint64_t st_blocks;$/;"	m	struct:ArmLinux64::__anon9
st_blocks	src/arch/power/linux/linux.hh	/^        uint32_t st_blocks;$/;"	m	struct:PowerLinux::__anon22
st_blocks	src/arch/power/linux/linux.hh	/^        uint64_t st_blocks;$/;"	m	struct:PowerLinux::__anon23
st_blocks	src/arch/sparc/linux/linux.hh	/^        int64_t st_blocks;$/;"	m	struct:Sparc32Linux::__anon27
st_blocks	src/arch/sparc/linux/linux.hh	/^        int64_t st_blocks;$/;"	m	struct:SparcLinux::__anon25
st_blocks	src/arch/x86/linux/linux.hh	/^        int64_t st_blocks;$/;"	m	struct:X86Linux64::__anon30
st_blocks	src/arch/x86/linux/linux.hh	/^        uint64_t st_blocks;$/;"	m	struct:X86Linux32::__anon33
st_blocks	src/kern/linux/linux.hh	/^        int32_t         st_blocks;      \/\/!< number of blocks allocated$/;"	m	struct:Linux::__anon84
st_blocks	src/kern/linux/linux.hh	/^        uint64_t        st_blocks;$/;"	m	struct:Linux::__anon85
st_blocks	src/kern/solaris/solaris.hh	/^        int64_t         st_blocks;      \/\/!< number of blocks allocated$/;"	m	struct:Solaris::__anon93
st_blocks	src/kern/solaris/solaris.hh	/^        int64_t         st_blocks;      \/\/!< number of blocks allocated$/;"	m	struct:Solaris::__anon94
st_blocks	src/kern/tru64/tru64.hh	/^        int32_t st_blocks;$/;"	m	struct:Tru64_PreF64::pre_F64_stat
st_blocks	src/kern/tru64/tru64.hh	/^        uint64_t        st_blocks;      \/\/!< st_blocks$/;"	m	struct:Tru64_F64::F64_stat
st_ctimeX	src/arch/arm/linux/linux.hh	/^        uint32_t  st_ctimeX;$/;"	m	struct:ArmLinux32::__anon7
st_ctimeX	src/arch/arm/linux/linux.hh	/^        uint32_t st_ctimeX;$/;"	m	struct:ArmLinux32::__anon6
st_ctimeX	src/arch/arm/linux/linux.hh	/^        uint64_t st_ctimeX;$/;"	m	struct:ArmLinux64::__anon10
st_ctimeX	src/arch/arm/linux/linux.hh	/^        uint64_t st_ctimeX;$/;"	m	struct:ArmLinux64::__anon9
st_ctimeX	src/arch/power/linux/linux.hh	/^        uint32_t st_ctimeX;$/;"	m	struct:PowerLinux::__anon22
st_ctimeX	src/arch/power/linux/linux.hh	/^        uint32_t st_ctimeX;$/;"	m	struct:PowerLinux::__anon23
st_ctimeX	src/arch/sparc/linux/linux.hh	/^        int64_t st_ctimeX;$/;"	m	struct:SparcLinux::__anon25
st_ctimeX	src/arch/sparc/linux/linux.hh	/^        uint64_t st_ctimeX;$/;"	m	struct:Sparc32Linux::__anon27
st_ctimeX	src/arch/x86/linux/linux.hh	/^        uint32_t st_ctimeX;$/;"	m	struct:X86Linux32::__anon33
st_ctimeX	src/arch/x86/linux/linux.hh	/^        uint64_t st_ctimeX;$/;"	m	struct:X86Linux64::__anon30
st_ctimeX	src/kern/linux/linux.hh	/^        uint64_t        st_ctimeX;      \/\/!< time of last status change$/;"	m	struct:Linux::__anon84
st_ctimeX	src/kern/linux/linux.hh	/^        uint64_t        st_ctimeX;$/;"	m	struct:Linux::__anon85
st_ctimeX	src/kern/solaris/solaris.hh	/^        int64_t st_atimeX, st_mtimeX, st_ctimeX;$/;"	m	struct:Solaris::__anon93
st_ctimeX	src/kern/solaris/solaris.hh	/^        int64_t st_atimeX, st_mtimeX, st_ctimeX;$/;"	m	struct:Solaris::__anon94
st_ctimeX	src/kern/tru64/tru64.hh	/^        time_t  st_ctimeX;              \/\/!< st_ctime$/;"	m	struct:Tru64_F64::F64_stat
st_ctimeX	src/kern/tru64/tru64.hh	/^        time_t  st_ctimeX;$/;"	m	struct:Tru64_PreF64::pre_F64_stat
st_ctime_nsec	src/arch/arm/linux/linux.hh	/^        uint32_t  st_ctime_nsec;$/;"	m	struct:ArmLinux32::__anon7
st_ctime_nsec	src/arch/arm/linux/linux.hh	/^        uint32_t st_ctime_nsec;$/;"	m	struct:ArmLinux32::__anon6
st_ctime_nsec	src/arch/arm/linux/linux.hh	/^        uint64_t st_ctime_nsec;$/;"	m	struct:ArmLinux64::__anon10
st_ctime_nsec	src/arch/arm/linux/linux.hh	/^        uint64_t st_ctime_nsec;$/;"	m	struct:ArmLinux64::__anon9
st_ctime_nsec	src/arch/power/linux/linux.hh	/^        uint32_t st_ctime_nsec;$/;"	m	struct:PowerLinux::__anon22
st_ctime_nsec	src/arch/power/linux/linux.hh	/^        uint32_t st_ctime_nsec;$/;"	m	struct:PowerLinux::__anon23
st_ctime_nsec	src/arch/sparc/linux/linux.hh	/^        uint64_t st_ctime_nsec;$/;"	m	struct:Sparc32Linux::__anon27
st_ctime_nsec	src/arch/x86/linux/linux.hh	/^        uint32_t st_ctime_nsec;$/;"	m	struct:X86Linux32::__anon33
st_ctime_nsec	src/arch/x86/linux/linux.hh	/^        uint64_t st_ctime_nsec;$/;"	m	struct:X86Linux64::__anon30
st_ctime_nsec	src/kern/linux/linux.hh	/^        uint64_t        st_ctime_nsec;$/;"	m	struct:Linux::__anon85
st_ctime_reserved	src/kern/tru64/tru64.hh	/^        int32_t st_ctime_reserved;      \/\/!< st_ctime_reserved$/;"	m	struct:Tru64_F64::F64_stat
st_dev	src/arch/arm/linux/linux.hh	/^        uint32_t st_dev;$/;"	m	struct:ArmLinux32::__anon6
st_dev	src/arch/arm/linux/linux.hh	/^        uint64_t  st_dev;$/;"	m	struct:ArmLinux32::__anon7
st_dev	src/arch/arm/linux/linux.hh	/^        uint64_t st_dev;$/;"	m	struct:ArmLinux64::__anon10
st_dev	src/arch/arm/linux/linux.hh	/^        uint64_t st_dev;$/;"	m	struct:ArmLinux64::__anon9
st_dev	src/arch/power/linux/linux.hh	/^        uint64_t st_dev;$/;"	m	struct:PowerLinux::__anon22
st_dev	src/arch/power/linux/linux.hh	/^        uint64_t st_dev;$/;"	m	struct:PowerLinux::__anon23
st_dev	src/arch/sparc/linux/linux.hh	/^        uint32_t st_dev;$/;"	m	struct:SparcLinux::__anon25
st_dev	src/arch/sparc/linux/linux.hh	/^        uint64_t st_dev;$/;"	m	struct:Sparc32Linux::__anon27
st_dev	src/arch/x86/linux/linux.hh	/^        uint64_t st_dev;$/;"	m	struct:X86Linux32::__anon33
st_dev	src/arch/x86/linux/linux.hh	/^        uint64_t st_dev;$/;"	m	struct:X86Linux64::__anon30
st_dev	src/kern/linux/linux.hh	/^        uint32_t        st_dev;         \/\/!< device$/;"	m	struct:Linux::__anon84
st_dev	src/kern/linux/linux.hh	/^        uint64_t        st_dev;$/;"	m	struct:Linux::__anon85
st_dev	src/kern/solaris/solaris.hh	/^        uint64_t        st_dev;         \/\/!< device$/;"	m	struct:Solaris::__anon93
st_dev	src/kern/solaris/solaris.hh	/^        uint64_t        st_dev;         \/\/!< device$/;"	m	struct:Solaris::__anon94
st_dev	src/kern/tru64/tru64.hh	/^        dev_t   st_dev;                 \/\/!< st_dev$/;"	m	struct:Tru64_F64::F64_stat
st_dev	src/kern/tru64/tru64.hh	/^        dev_t   st_dev;$/;"	m	struct:Tru64_PreF64::pre_F64_stat
st_flags	src/kern/linux/linux.hh	/^        uint32_t        st_flags;       \/\/!< flags$/;"	m	struct:Linux::__anon84
st_flags	src/kern/tru64/tru64.hh	/^        uint32_t        st_flags;       \/\/!< st_flags$/;"	m	struct:Tru64_F64::F64_stat
st_flags	src/kern/tru64/tru64.hh	/^        uint32_t st_flags;$/;"	m	struct:Tru64_PreF64::pre_F64_stat
st_fstype	src/kern/solaris/solaris.hh	/^        char            st_fstype[16];$/;"	m	struct:Solaris::__anon93
st_fstype	src/kern/solaris/solaris.hh	/^        char            st_fstype[16];$/;"	m	struct:Solaris::__anon94
st_gen	src/kern/linux/linux.hh	/^        uint32_t        st_gen;         \/\/!< unknown$/;"	m	struct:Linux::__anon84
st_gen	src/kern/tru64/tru64.hh	/^        uint32_t        st_gen;         \/\/!< st_gen$/;"	m	struct:Tru64_F64::F64_stat
st_gen	src/kern/tru64/tru64.hh	/^        uint32_t st_gen;$/;"	m	struct:Tru64_PreF64::pre_F64_stat
st_gid	src/arch/arm/linux/linux.hh	/^        uint16_t st_gid;$/;"	m	struct:ArmLinux32::__anon6
st_gid	src/arch/arm/linux/linux.hh	/^        uint32_t  st_gid;$/;"	m	struct:ArmLinux32::__anon7
st_gid	src/arch/arm/linux/linux.hh	/^        uint32_t st_gid;$/;"	m	struct:ArmLinux64::__anon10
st_gid	src/arch/arm/linux/linux.hh	/^        uint32_t st_gid;$/;"	m	struct:ArmLinux64::__anon9
st_gid	src/arch/power/linux/linux.hh	/^        uint32_t st_gid;$/;"	m	struct:PowerLinux::__anon22
st_gid	src/arch/power/linux/linux.hh	/^        uint32_t st_gid;$/;"	m	struct:PowerLinux::__anon23
st_gid	src/arch/sparc/linux/linux.hh	/^        uint32_t st_gid;$/;"	m	struct:Sparc32Linux::__anon27
st_gid	src/arch/sparc/linux/linux.hh	/^        uint32_t st_gid;$/;"	m	struct:SparcLinux::__anon25
st_gid	src/arch/x86/linux/linux.hh	/^        uint32_t st_gid;$/;"	m	struct:X86Linux32::__anon33
st_gid	src/arch/x86/linux/linux.hh	/^        uint32_t st_gid;$/;"	m	struct:X86Linux64::__anon30
st_gid	src/kern/linux/linux.hh	/^        uint32_t        st_gid;         \/\/!< owner's group ID$/;"	m	struct:Linux::__anon84
st_gid	src/kern/linux/linux.hh	/^        uint32_t        st_gid;$/;"	m	struct:Linux::__anon85
st_gid	src/kern/solaris/solaris.hh	/^        int32_t         st_gid;         \/\/!< owner's group ID$/;"	m	struct:Solaris::__anon93
st_gid	src/kern/solaris/solaris.hh	/^        int32_t         st_gid;         \/\/!< owner's group ID$/;"	m	struct:Solaris::__anon94
st_gid	src/kern/tru64/tru64.hh	/^        gid_t   st_gid;                 \/\/!< st_gid$/;"	m	struct:Tru64_F64::F64_stat
st_gid	src/kern/tru64/tru64.hh	/^        gid_t   st_gid;$/;"	m	struct:Tru64_PreF64::pre_F64_stat
st_halt	src/arch/sparc/miscregs.hh	/^    const static int st_halt     = 0x02;$/;"	m	struct:SparcISA::STS
st_idle	src/arch/sparc/miscregs.hh	/^    const static int st_idle     = 0x00;$/;"	m	struct:SparcISA::STS
st_ino	src/arch/arm/linux/linux.hh	/^        uint32_t st_ino;$/;"	m	struct:ArmLinux32::__anon6
st_ino	src/arch/arm/linux/linux.hh	/^        uint64_t  st_ino;$/;"	m	struct:ArmLinux32::__anon7
st_ino	src/arch/arm/linux/linux.hh	/^        uint64_t st_ino;$/;"	m	struct:ArmLinux64::__anon10
st_ino	src/arch/arm/linux/linux.hh	/^        uint64_t st_ino;$/;"	m	struct:ArmLinux64::__anon9
st_ino	src/arch/power/linux/linux.hh	/^        uint32_t st_ino;$/;"	m	struct:PowerLinux::__anon22
st_ino	src/arch/power/linux/linux.hh	/^        uint64_t st_ino;$/;"	m	struct:PowerLinux::__anon23
st_ino	src/arch/sparc/linux/linux.hh	/^        uint64_t st_ino;$/;"	m	struct:Sparc32Linux::__anon27
st_ino	src/arch/sparc/linux/linux.hh	/^        uint64_t st_ino;$/;"	m	struct:SparcLinux::__anon25
st_ino	src/arch/x86/linux/linux.hh	/^        uint64_t st_ino;$/;"	m	struct:X86Linux32::__anon33
st_ino	src/arch/x86/linux/linux.hh	/^        uint64_t st_ino;$/;"	m	struct:X86Linux64::__anon30
st_ino	src/kern/linux/linux.hh	/^        uint32_t        st_ino;         \/\/!< inode$/;"	m	struct:Linux::__anon84
st_ino	src/kern/linux/linux.hh	/^        uint64_t        st_ino;$/;"	m	struct:Linux::__anon85
st_ino	src/kern/solaris/solaris.hh	/^        uint64_t        st_ino;         \/\/!< inode$/;"	m	struct:Solaris::__anon93
st_ino	src/kern/solaris/solaris.hh	/^        uint64_t        st_ino;         \/\/!< inode$/;"	m	struct:Solaris::__anon94
st_ino	src/kern/tru64/tru64.hh	/^        ino_t   st_ino;                 \/\/!< st_ino$/;"	m	struct:Tru64_F64::F64_stat
st_ino	src/kern/tru64/tru64.hh	/^        ino_t   st_ino;$/;"	m	struct:Tru64_PreF64::pre_F64_stat
st_ino_reserved	src/kern/tru64/tru64.hh	/^        int32_t st_ino_reserved;        \/\/!< st_ino_reserved$/;"	m	struct:Tru64_F64::F64_stat
st_ldev	src/kern/tru64/tru64.hh	/^        dev_t   st_ldev;                \/\/!< st_ldev$/;"	m	struct:Tru64_F64::F64_stat
st_mode	src/arch/arm/linux/linux.hh	/^        uint16_t st_mode;$/;"	m	struct:ArmLinux32::__anon6
st_mode	src/arch/arm/linux/linux.hh	/^        uint32_t  st_mode;$/;"	m	struct:ArmLinux32::__anon7
st_mode	src/arch/arm/linux/linux.hh	/^        uint32_t st_mode;$/;"	m	struct:ArmLinux64::__anon10
st_mode	src/arch/arm/linux/linux.hh	/^        uint32_t st_mode;$/;"	m	struct:ArmLinux64::__anon9
st_mode	src/arch/power/linux/linux.hh	/^        uint32_t st_mode;$/;"	m	struct:PowerLinux::__anon22
st_mode	src/arch/power/linux/linux.hh	/^        uint32_t st_mode;$/;"	m	struct:PowerLinux::__anon23
st_mode	src/arch/sparc/linux/linux.hh	/^        uint32_t st_mode;$/;"	m	struct:Sparc32Linux::__anon27
st_mode	src/arch/sparc/linux/linux.hh	/^        uint32_t st_mode;$/;"	m	struct:SparcLinux::__anon25
st_mode	src/arch/x86/linux/linux.hh	/^        uint32_t st_mode;$/;"	m	struct:X86Linux32::__anon33
st_mode	src/arch/x86/linux/linux.hh	/^        uint32_t st_mode;$/;"	m	struct:X86Linux64::__anon30
st_mode	src/kern/linux/linux.hh	/^        uint32_t        st_mode;        \/\/!< mode$/;"	m	struct:Linux::__anon84
st_mode	src/kern/linux/linux.hh	/^        uint32_t        st_mode;$/;"	m	struct:Linux::__anon85
st_mode	src/kern/solaris/solaris.hh	/^        uint32_t        st_mode;        \/\/!< mode$/;"	m	struct:Solaris::__anon93
st_mode	src/kern/solaris/solaris.hh	/^        uint32_t        st_mode;        \/\/!< mode$/;"	m	struct:Solaris::__anon94
st_mode	src/kern/tru64/tru64.hh	/^        mode_t  st_mode;                \/\/!< st_mode$/;"	m	struct:Tru64_F64::F64_stat
st_mode	src/kern/tru64/tru64.hh	/^        mode_t  st_mode;$/;"	m	struct:Tru64_PreF64::pre_F64_stat
st_mtimeX	src/arch/arm/linux/linux.hh	/^        uint32_t  st_mtimeX;$/;"	m	struct:ArmLinux32::__anon7
st_mtimeX	src/arch/arm/linux/linux.hh	/^        uint32_t st_mtimeX;$/;"	m	struct:ArmLinux32::__anon6
st_mtimeX	src/arch/arm/linux/linux.hh	/^        uint64_t st_mtimeX;$/;"	m	struct:ArmLinux64::__anon10
st_mtimeX	src/arch/arm/linux/linux.hh	/^        uint64_t st_mtimeX;$/;"	m	struct:ArmLinux64::__anon9
st_mtimeX	src/arch/power/linux/linux.hh	/^        uint32_t st_mtimeX;$/;"	m	struct:PowerLinux::__anon22
st_mtimeX	src/arch/power/linux/linux.hh	/^        uint32_t st_mtimeX;$/;"	m	struct:PowerLinux::__anon23
st_mtimeX	src/arch/sparc/linux/linux.hh	/^        int64_t st_mtimeX;$/;"	m	struct:SparcLinux::__anon25
st_mtimeX	src/arch/sparc/linux/linux.hh	/^        uint64_t st_mtimeX;$/;"	m	struct:Sparc32Linux::__anon27
st_mtimeX	src/arch/x86/linux/linux.hh	/^        uint32_t st_mtimeX;$/;"	m	struct:X86Linux32::__anon33
st_mtimeX	src/arch/x86/linux/linux.hh	/^        uint64_t st_mtimeX;$/;"	m	struct:X86Linux64::__anon30
st_mtimeX	src/kern/linux/linux.hh	/^        uint64_t        st_mtimeX;      \/\/!< time of last modification$/;"	m	struct:Linux::__anon84
st_mtimeX	src/kern/linux/linux.hh	/^        uint64_t        st_mtimeX;$/;"	m	struct:Linux::__anon85
st_mtimeX	src/kern/solaris/solaris.hh	/^        int64_t st_atimeX, st_mtimeX, st_ctimeX;$/;"	m	struct:Solaris::__anon93
st_mtimeX	src/kern/solaris/solaris.hh	/^        int64_t st_atimeX, st_mtimeX, st_ctimeX;$/;"	m	struct:Solaris::__anon94
st_mtimeX	src/kern/tru64/tru64.hh	/^        time_t  st_mtimeX;              \/\/!< st_mtime$/;"	m	struct:Tru64_F64::F64_stat
st_mtimeX	src/kern/tru64/tru64.hh	/^        time_t  st_mtimeX;$/;"	m	struct:Tru64_PreF64::pre_F64_stat
st_mtime_nsec	src/arch/arm/linux/linux.hh	/^        uint32_t  st_mtime_nsec;$/;"	m	struct:ArmLinux32::__anon7
st_mtime_nsec	src/arch/arm/linux/linux.hh	/^        uint32_t st_mtime_nsec;$/;"	m	struct:ArmLinux32::__anon6
st_mtime_nsec	src/arch/arm/linux/linux.hh	/^        uint64_t st_mtime_nsec;$/;"	m	struct:ArmLinux64::__anon10
st_mtime_nsec	src/arch/arm/linux/linux.hh	/^        uint64_t st_mtime_nsec;$/;"	m	struct:ArmLinux64::__anon9
st_mtime_nsec	src/arch/power/linux/linux.hh	/^        uint32_t st_mtime_nsec;$/;"	m	struct:PowerLinux::__anon22
st_mtime_nsec	src/arch/power/linux/linux.hh	/^        uint32_t st_mtime_nsec;$/;"	m	struct:PowerLinux::__anon23
st_mtime_nsec	src/arch/sparc/linux/linux.hh	/^        uint64_t st_mtime_nsec;$/;"	m	struct:Sparc32Linux::__anon27
st_mtime_nsec	src/arch/x86/linux/linux.hh	/^        uint32_t st_mtime_nsec;$/;"	m	struct:X86Linux32::__anon33
st_mtime_nsec	src/arch/x86/linux/linux.hh	/^        uint64_t st_mtime_nsec;$/;"	m	struct:X86Linux64::__anon30
st_mtime_nsec	src/kern/linux/linux.hh	/^        uint64_t        st_mtime_nsec;$/;"	m	struct:Linux::__anon85
st_mtime_reserved	src/kern/tru64/tru64.hh	/^        int32_t st_mtime_reserved;      \/\/!< st_mtime_reserved$/;"	m	struct:Tru64_F64::F64_stat
st_nlink	src/arch/arm/linux/linux.hh	/^        uint16_t st_nlink;$/;"	m	struct:ArmLinux32::__anon6
st_nlink	src/arch/arm/linux/linux.hh	/^        uint32_t  st_nlink;$/;"	m	struct:ArmLinux32::__anon7
st_nlink	src/arch/arm/linux/linux.hh	/^        uint32_t st_nlink;$/;"	m	struct:ArmLinux64::__anon10
st_nlink	src/arch/arm/linux/linux.hh	/^        uint64_t st_nlink;$/;"	m	struct:ArmLinux64::__anon9
st_nlink	src/arch/power/linux/linux.hh	/^        uint32_t st_nlink;$/;"	m	struct:PowerLinux::__anon22
st_nlink	src/arch/power/linux/linux.hh	/^        uint32_t st_nlink;$/;"	m	struct:PowerLinux::__anon23
st_nlink	src/arch/sparc/linux/linux.hh	/^        uint16_t st_nlink;$/;"	m	struct:SparcLinux::__anon25
st_nlink	src/arch/sparc/linux/linux.hh	/^        uint32_t st_nlink;$/;"	m	struct:Sparc32Linux::__anon27
st_nlink	src/arch/x86/linux/linux.hh	/^        uint32_t st_nlink;$/;"	m	struct:X86Linux32::__anon33
st_nlink	src/arch/x86/linux/linux.hh	/^        uint64_t st_nlink;$/;"	m	struct:X86Linux64::__anon30
st_nlink	src/kern/linux/linux.hh	/^        uint32_t        st_nlink;       \/\/!< link count$/;"	m	struct:Linux::__anon84
st_nlink	src/kern/linux/linux.hh	/^        uint32_t        st_nlink;$/;"	m	struct:Linux::__anon85
st_nlink	src/kern/solaris/solaris.hh	/^        uint32_t        st_nlink;       \/\/!< link count$/;"	m	struct:Solaris::__anon93
st_nlink	src/kern/solaris/solaris.hh	/^        uint32_t        st_nlink;       \/\/!< link count$/;"	m	struct:Solaris::__anon94
st_nlink	src/kern/tru64/tru64.hh	/^        nlink_t st_nlink;               \/\/!< st_nlink$/;"	m	struct:Tru64_F64::F64_stat
st_nlink	src/kern/tru64/tru64.hh	/^        nlink_t st_nlink;$/;"	m	struct:Tru64_PreF64::pre_F64_stat
st_nlink_reserved	src/kern/tru64/tru64.hh	/^        uint16_t st_nlink_reserved;     \/\/!< st_nlink_reserved$/;"	m	struct:Tru64_F64::F64_stat
st_rdev	src/arch/arm/linux/linux.hh	/^        uint32_t st_rdev;$/;"	m	struct:ArmLinux32::__anon6
st_rdev	src/arch/arm/linux/linux.hh	/^        uint64_t  st_rdev;$/;"	m	struct:ArmLinux32::__anon7
st_rdev	src/arch/arm/linux/linux.hh	/^        uint64_t st_rdev;$/;"	m	struct:ArmLinux64::__anon10
st_rdev	src/arch/arm/linux/linux.hh	/^        uint64_t st_rdev;$/;"	m	struct:ArmLinux64::__anon9
st_rdev	src/arch/power/linux/linux.hh	/^        uint64_t st_rdev;$/;"	m	struct:PowerLinux::__anon22
st_rdev	src/arch/power/linux/linux.hh	/^        uint64_t st_rdev;$/;"	m	struct:PowerLinux::__anon23
st_rdev	src/arch/sparc/linux/linux.hh	/^        uint32_t st_rdev;$/;"	m	struct:SparcLinux::__anon25
st_rdev	src/arch/sparc/linux/linux.hh	/^        uint64_t st_rdev;$/;"	m	struct:Sparc32Linux::__anon27
st_rdev	src/arch/x86/linux/linux.hh	/^        uint64_t st_rdev;$/;"	m	struct:X86Linux32::__anon33
st_rdev	src/arch/x86/linux/linux.hh	/^        uint64_t st_rdev;$/;"	m	struct:X86Linux64::__anon30
st_rdev	src/kern/linux/linux.hh	/^        uint32_t        st_rdev;        \/\/!< device number$/;"	m	struct:Linux::__anon84
st_rdev	src/kern/linux/linux.hh	/^        uint64_t        st_rdev;$/;"	m	struct:Linux::__anon85
st_rdev	src/kern/solaris/solaris.hh	/^        uint64_t        st_rdev;        \/\/!< device number$/;"	m	struct:Solaris::__anon93
st_rdev	src/kern/solaris/solaris.hh	/^        uint64_t        st_rdev;        \/\/!< device number$/;"	m	struct:Solaris::__anon94
st_rdev	src/kern/tru64/tru64.hh	/^        dev_t   st_rdev;                \/\/!< st_rdev$/;"	m	struct:Tru64_F64::F64_stat
st_rdev	src/kern/tru64/tru64.hh	/^        dev_t   st_rdev;$/;"	m	struct:Tru64_PreF64::pre_F64_stat
st_ready	src/arch/sparc/miscregs.hh	/^    const static int st_ready    = 0x19;$/;"	m	struct:SparcISA::STS
st_retired1	src/kern/tru64/tru64.hh	/^        int32_t st_retired1;            \/\/!< st_retired1$/;"	m	struct:Tru64_F64::F64_stat
st_retired2	src/kern/tru64/tru64.hh	/^        time_t  st_retired2;            \/\/!< st_retired2$/;"	m	struct:Tru64_F64::F64_stat
st_retired3	src/kern/tru64/tru64.hh	/^        time_t  st_retired3;            \/\/!< st_retired3$/;"	m	struct:Tru64_F64::F64_stat
st_retired4	src/kern/tru64/tru64.hh	/^        time_t  st_retired4;            \/\/!< st_retired4$/;"	m	struct:Tru64_F64::F64_stat
st_retired5	src/kern/tru64/tru64.hh	/^        int32_t st_retired5;            \/\/!< st_retired5$/;"	m	struct:Tru64_F64::F64_stat
st_retired6	src/kern/tru64/tru64.hh	/^        int32_t st_retired6;            \/\/!< st_retired6$/;"	m	struct:Tru64_F64::F64_stat
st_run	src/arch/sparc/miscregs.hh	/^    const static int st_run      = 0x05;$/;"	m	struct:SparcISA::STS
st_size	src/arch/arm/linux/linux.hh	/^        int64_t   __attribute__ ((aligned (8))) st_size;$/;"	m	struct:ArmLinux32::__anon7
st_size	src/arch/arm/linux/linux.hh	/^        uint32_t st_size;$/;"	m	struct:ArmLinux32::__anon6
st_size	src/arch/arm/linux/linux.hh	/^        uint64_t st_size;$/;"	m	struct:ArmLinux64::__anon10
st_size	src/arch/arm/linux/linux.hh	/^        uint64_t st_size;$/;"	m	struct:ArmLinux64::__anon9
st_size	src/arch/power/linux/linux.hh	/^        uint32_t st_size;$/;"	m	struct:PowerLinux::__anon22
st_size	src/arch/power/linux/linux.hh	/^        uint64_t st_size;$/;"	m	struct:PowerLinux::__anon23
st_size	src/arch/sparc/linux/linux.hh	/^        int64_t st_size;$/;"	m	struct:Sparc32Linux::__anon27
st_size	src/arch/sparc/linux/linux.hh	/^        int64_t st_size;$/;"	m	struct:SparcLinux::__anon25
st_size	src/arch/x86/linux/linux.hh	/^        int64_t st_size;$/;"	m	struct:X86Linux32::__anon33
st_size	src/arch/x86/linux/linux.hh	/^        int64_t st_size;$/;"	m	struct:X86Linux64::__anon30
st_size	src/kern/linux/linux.hh	/^        int64_t         st_size;        \/\/!< file size in bytes$/;"	m	struct:Linux::__anon84
st_size	src/kern/linux/linux.hh	/^        int64_t         st_size;$/;"	m	struct:Linux::__anon85
st_size	src/kern/solaris/solaris.hh	/^        int64_t         st_size;        \/\/!< file size in bytes$/;"	m	struct:Solaris::__anon93
st_size	src/kern/solaris/solaris.hh	/^        int64_t         st_size;        \/\/!< file size in bytes$/;"	m	struct:Solaris::__anon94
st_size	src/kern/tru64/tru64.hh	/^        off_t   st_size __attribute__ ((aligned(sizeof(off_t))));$/;"	m	struct:Tru64_PreF64::pre_F64_stat
st_size	src/kern/tru64/tru64.hh	/^        off_t   st_size;                \/\/!< st_size$/;"	m	struct:Tru64_F64::F64_stat
st_spare	src/kern/tru64/tru64.hh	/^        uint64_t        st_spare[4];    \/\/!< st_spare[4]$/;"	m	struct:Tru64_F64::F64_stat
st_spec_rdy	src/arch/sparc/miscregs.hh	/^    const static int st_spec_rdy = 0x13;$/;"	m	struct:SparcISA::STS
st_spec_run	src/arch/sparc/miscregs.hh	/^    const static int st_spec_run = 0x07;$/;"	m	struct:SparcISA::STS
st_uatime	src/kern/tru64/tru64.hh	/^        int32_t st_uatime;              \/\/!< st_uatime$/;"	m	struct:Tru64_F64::F64_stat
st_uatime	src/kern/tru64/tru64.hh	/^        int32_t st_uatime;$/;"	m	struct:Tru64_PreF64::pre_F64_stat
st_uctime	src/kern/tru64/tru64.hh	/^        int32_t st_uctime;              \/\/!< st_uctime$/;"	m	struct:Tru64_F64::F64_stat
st_uctime	src/kern/tru64/tru64.hh	/^        int32_t st_uctime;$/;"	m	struct:Tru64_PreF64::pre_F64_stat
st_uid	src/arch/arm/linux/linux.hh	/^        uint16_t st_uid;$/;"	m	struct:ArmLinux32::__anon6
st_uid	src/arch/arm/linux/linux.hh	/^        uint32_t  st_uid;$/;"	m	struct:ArmLinux32::__anon7
st_uid	src/arch/arm/linux/linux.hh	/^        uint32_t st_uid;$/;"	m	struct:ArmLinux64::__anon10
st_uid	src/arch/arm/linux/linux.hh	/^        uint32_t st_uid;$/;"	m	struct:ArmLinux64::__anon9
st_uid	src/arch/power/linux/linux.hh	/^        uint32_t st_uid;$/;"	m	struct:PowerLinux::__anon22
st_uid	src/arch/power/linux/linux.hh	/^        uint32_t st_uid;$/;"	m	struct:PowerLinux::__anon23
st_uid	src/arch/sparc/linux/linux.hh	/^        uint32_t st_uid;$/;"	m	struct:Sparc32Linux::__anon27
st_uid	src/arch/sparc/linux/linux.hh	/^        uint32_t st_uid;$/;"	m	struct:SparcLinux::__anon25
st_uid	src/arch/x86/linux/linux.hh	/^        uint32_t st_uid;$/;"	m	struct:X86Linux32::__anon33
st_uid	src/arch/x86/linux/linux.hh	/^        uint32_t st_uid;$/;"	m	struct:X86Linux64::__anon30
st_uid	src/kern/linux/linux.hh	/^        uint32_t        st_uid;         \/\/!< owner's user ID$/;"	m	struct:Linux::__anon84
st_uid	src/kern/linux/linux.hh	/^        uint32_t        st_uid;$/;"	m	struct:Linux::__anon85
st_uid	src/kern/solaris/solaris.hh	/^        int32_t         st_uid;         \/\/!< owner's user ID$/;"	m	struct:Solaris::__anon93
st_uid	src/kern/solaris/solaris.hh	/^        int32_t         st_uid;         \/\/!< owner's user ID$/;"	m	struct:Solaris::__anon94
st_uid	src/kern/tru64/tru64.hh	/^        uid_t   st_uid __attribute__ ((aligned(sizeof(uid_t))));$/;"	m	struct:Tru64_PreF64::pre_F64_stat
st_uid	src/kern/tru64/tru64.hh	/^        uid_t   st_uid;                 \/\/!< st_uid$/;"	m	struct:Tru64_F64::F64_stat
st_umtime	src/kern/tru64/tru64.hh	/^        int32_t st_umtime;              \/\/!< st_umtime$/;"	m	struct:Tru64_F64::F64_stat
st_umtime	src/kern/tru64/tru64.hh	/^        int32_t st_umtime;$/;"	m	struct:Tru64_PreF64::pre_F64_stat
st_wait	src/arch/sparc/miscregs.hh	/^    const static int st_wait     = 0x01;$/;"	m	struct:SparcISA::STS
stack	src/arch/alpha/stacktrace.hh	/^    std::vector<Addr> stack;$/;"	m	class:AlphaISA::StackTrace
stack	src/arch/arm/stacktrace.hh	/^    std::vector<Addr> stack;$/;"	m	class:ArmISA::StackTrace
stack	src/arch/mips/stacktrace.hh	/^    std::vector<Addr> stack;$/;"	m	class:MipsISA::StackTrace
stack	src/arch/power/stacktrace.hh	/^    std::vector<Addr> stack;$/;"	m	class:PowerISA::StackTrace
stack	src/arch/sparc/stacktrace.hh	/^    std::vector<Addr> stack;$/;"	m	class:SparcISA::StackTrace
stack	src/arch/x86/decoder.hh	/^    uint8_t stack;$/;"	m	class:X86ISA::Decoder
stack	src/arch/x86/regs/misc.hh	/^        Bitfield<17, 16> stack;$/;"	m	namespace:X86ISA
stack	src/arch/x86/stacktrace.hh	/^        std::vector<Addr> stack;$/;"	m	class:X86ISA::StackTrace
stackSize	src/arch/x86/emulenv.hh	/^        int stackSize;$/;"	m	struct:X86ISA::EmulEnv
stackSize	src/arch/x86/types.hh	/^        uint8_t stackSize;$/;"	m	struct:X86ISA::ExtMachInst
stack_base	src/sim/process.hh	/^    Addr stack_base;            \/\/ stack segment base (highest address)$/;"	m	class:Process
stack_create	src/kern/tru64/tru64_syscalls.hh	/^        stack_create = 47,$/;"	e	enum:SystemCalls::__anon103
stack_createFunc	src/kern/tru64/tru64.hh	/^    stack_createFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	class:Tru64
stack_min	src/sim/process.hh	/^    Addr stack_min;             \/\/ lowest address accessed on the stack$/;"	m	class:Process
stack_size	src/sim/process.hh	/^    unsigned stack_size;        \/\/ initial stack size$/;"	m	class:Process
stage	src/cpu/inorder/pipeline_stage.hh	/^        bool stage[ThePipeline::NumStages];$/;"	m	struct:PipelineStage::Stalls
stage1Te	src/arch/arm/stage2_lookup.hh	/^    TlbEntry                stage1Te;$/;"	m	class:ArmISA::Stage2LookUp
stage1Tlb	src/arch/arm/stage2_lookup.hh	/^    TLB                     *stage1Tlb;$/;"	m	class:ArmISA::Stage2LookUp
stage1Tlb	src/arch/arm/stage2_mmu.hh	/^    TLB* stage1Tlb() const { return _stage1Tlb; }$/;"	f	class:ArmISA::Stage2MMU
stage2	src/arch/arm/faults.hh	/^    bool stage2;$/;"	m	class:ArmISA::AbortFault
stage2Mmu	src/arch/arm/table_walker.hh	/^    Stage2MMU *stage2Mmu;$/;"	m	class:ArmISA::TableWalker
stage2Mmu	src/arch/arm/tlb.hh	/^    Stage2MMU *stage2Mmu;$/;"	m	class:ArmISA::TLB
stage2Req	src/arch/arm/table_walker.hh	/^        bool stage2Req;$/;"	m	class:ArmISA::TableWalker::WalkerState
stage2Req	src/arch/arm/tlb.hh	/^    bool stage2Req;      \/\/ Indicates whether a stage 2 lookup is also required$/;"	m	class:ArmISA::TLB
stage2Te	src/arch/arm/stage2_lookup.hh	/^    TlbEntry                *stage2Te;$/;"	m	class:ArmISA::Stage2LookUp
stage2Tlb	src/arch/arm/stage2_lookup.hh	/^    TLB               *stage2Tlb;$/;"	m	class:ArmISA::Stage2LookUp
stage2Tlb	src/arch/arm/stage2_mmu.hh	/^    TLB* stage2Tlb() const { return _stage2Tlb; }$/;"	f	class:ArmISA::Stage2MMU
stage2Tlb	src/arch/arm/tlb.hh	/^    TLB *stage2Tlb;$/;"	m	class:ArmISA::TLB
stage2Tran	src/arch/arm/table_walker.hh	/^        TLB::Translation *stage2Tran;$/;"	m	class:ArmISA::TableWalker::WalkerState
stage2_tlb	src/arch/arm/ArmTLB.py	/^    stage2_tlb = ArmStage2TLB(walker = ArmStage2TableWalker())$/;"	v	class:ArmStage2DMMU
stage2_tlb	src/arch/arm/ArmTLB.py	/^    stage2_tlb = ArmStage2TLB(walker = ArmStage2TableWalker())$/;"	v	class:ArmStage2IMMU
stage2_tlb	src/arch/arm/ArmTLB.py	/^    stage2_tlb = Param.ArmTLB("Stage 2 TLB")$/;"	v	class:ArmStage2MMU
stageActive	src/cpu/activity.hh	/^    bool *stageActive;$/;"	m	class:ActivityRecorder
stageBlock	src/cpu/inorder/comm.hh	/^    bool stageBlock[ThePipeline::NumStages][ThePipeline::MaxThreads];$/;"	m	struct:TimeStruct
stageBufferAvail	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::stageBufferAvail()$/;"	f	class:PipelineStage
stageBufferMax	src/cpu/inorder/pipeline_stage.hh	/^    unsigned stageBufferMax;$/;"	m	class:PipelineStage
stageBufferSizes	src/cpu/inorder/pipeline_traits.9stage.hh	/^    static std::map<unsigned, unsigned> stageBufferSizes;$/;"	m	namespace:ThePipeline
stageBufferSizes	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^    static std::map<unsigned, unsigned> stageBufferSizes;$/;"	m	namespace:ThePipeline
stageCycle	src/cpu/inorder/inorder_trace.hh	/^    std::vector<Tick> stageCycle;$/;"	m	class:Trace::InOrderTraceRecord
stageInfo	src/cpu/inorder/comm.hh	/^    StageComm stageInfo[ThePipeline::NumStages][ThePipeline::MaxThreads];$/;"	m	struct:TimeStruct
stageNum	src/cpu/inorder/cpu.hh	/^        int stageNum;$/;"	m	class:InOrderCPU::StageScheduler
stageNum	src/cpu/inorder/pipeline_stage.hh	/^    unsigned stageNum;$/;"	m	class:PipelineStage
stageNum	src/cpu/inorder/pipeline_traits.5stage.hh	/^        int stageNum;$/;"	m	struct:ThePipeline::ScheduleEntry
stageNum	src/cpu/inorder/pipeline_traits.9stage.hh	/^        int stageNum;$/;"	m	struct:ThePipeline::ScheduleEntry
stageNum	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^        int stageNum;$/;"	m	struct:ThePipeline::ScheduleEntry
stageNum	src/cpu/inorder/resource.hh	/^    int stageNum;$/;"	m	class:ResourceRequest
stageNum	src/cpu/inorder/resource_pool.hh	/^        int stageNum;$/;"	m	class:ResourcePool::ResPoolEvent
stageNum	src/cpu/inorder/resource_sked.hh	/^    int stageNum;$/;"	m	class:ScheduleEntry
stagePasses	src/cpu/inorder/resource.hh	/^    short stagePasses;$/;"	m	class:ResourceRequest
stageQueue	src/cpu/inorder/cpu.hh	/^    StageQueue *stageQueue[ThePipeline::NumStages-1];$/;"	m	class:InOrderCPU
stageStatus	src/cpu/inorder/pipeline_stage.hh	/^    ThreadStatus stageStatus[ThePipeline::MaxThreads];$/;"	m	class:PipelineStage
stageTrace	src/cpu/inorder/inorder_trace.hh	/^    bool stageTrace;$/;"	m	class:Trace::InOrderTraceRecord
stageTracing	src/cpu/inorder/InOrderCPU.py	/^    stageTracing = Param.Bool(False, "Enable tracing of each stage in CPU")$/;"	v	class:InOrderCPU
stageTracing	src/cpu/inorder/cpu.hh	/^    bool stageTracing;$/;"	m	class:InOrderCPU
stageUnblock	src/cpu/inorder/comm.hh	/^    bool stageUnblock[ThePipeline::NumStages][ThePipeline::MaxThreads];$/;"	m	struct:TimeStruct
stageWidth	src/cpu/inorder/InOrderCPU.py	/^    stageWidth = Param.Unsigned(4, "Stage width")$/;"	v	class:InOrderCPU
stageWidth	src/cpu/inorder/cpu.hh	/^    int stageWidth;$/;"	m	class:InOrderCPU
stageWidth	src/cpu/inorder/pipeline_stage.hh	/^    unsigned stageWidth;$/;"	m	class:PipelineStage
stages	src/cpu/inorder/resource_sked.hh	/^    ResourceSked::StageList *stages;$/;"	m	class:RSkedIt
stages	src/cpu/inorder/resource_sked.hh	/^    StageList stages;$/;"	m	class:ResourceSked
stall	src/cpu/ozone/cpu.hh	/^        bool stall;$/;"	m	struct:OzoneCPU::CommStruct
stallBuffer	src/mem/ruby/slicc_interface/AbstractController.cc	/^AbstractController::stallBuffer(MessageBuffer* buf, Address addr)$/;"	f	class:AbstractController
stallMessage	src/mem/ruby/buffers/MessageBuffer.cc	/^MessageBuffer::stallMessage(const Address& addr)$/;"	f	class:MessageBuffer
stalled	src/cpu/o3/lsq_unit.hh	/^    bool stalled;$/;"	m	class:LSQUnit
stalled	src/cpu/ozone/lsq_unit.hh	/^    bool stalled;$/;"	m	class:OzoneLSQ
stalled	src/cpu/ozone/lw_lsq.hh	/^    bool stalled;$/;"	m	class:OzoneLWLSQ
stallingLoad	src/cpu/ozone/lw_lsq.hh	/^    LQIt stallingLoad;$/;"	m	class:OzoneLWLSQ
stallingLoadIdx	src/cpu/o3/lsq_unit.hh	/^    int stallingLoadIdx;$/;"	m	class:LSQUnit
stallingLoadIdx	src/cpu/ozone/lsq_unit.hh	/^    int stallingLoadIdx;$/;"	m	class:OzoneLSQ
stallingStoreIsn	src/cpu/o3/lsq_unit.hh	/^    InstSeqNum stallingStoreIsn;$/;"	m	class:LSQUnit
stallingStoreIsn	src/cpu/ozone/lsq_unit.hh	/^    InstSeqNum stallingStoreIsn;$/;"	m	class:OzoneLSQ
stallingStoreIsn	src/cpu/ozone/lw_lsq.hh	/^    InstSeqNum stallingStoreIsn;$/;"	m	class:OzoneLWLSQ
stalls	src/cpu/inorder/pipeline_stage.hh	/^    Stalls stalls[ThePipeline::MaxThreads];$/;"	m	class:PipelineStage
stalls	src/cpu/o3/decode.hh	/^    Stalls stalls[Impl::MaxThreads];$/;"	m	class:DefaultDecode
stalls	src/cpu/o3/fetch.hh	/^    Stalls stalls[Impl::MaxThreads];$/;"	m	class:DefaultFetch
stalls	src/cpu/o3/iew.hh	/^    Stalls stalls[Impl::MaxThreads];$/;"	m	class:DefaultIEW
stalls	src/cpu/o3/rename.hh	/^    Stalls stalls[Impl::MaxThreads];$/;"	m	class:DefaultRename
standard_strings	src/kern/linux/linux_syscalls.cc	/^    standard_strings[SystemCalls<Linux>::Number] = {$/;"	m	namespace:__anon86	file:
standard_strings	src/kern/tru64/tru64_syscalls.cc	/^    standard_strings[SystemCalls<Tru64>::StandardNumber] = {$/;"	m	namespace:__anon101	file:
start	src/arch/x86/pagetable_walker.cc	/^Walker::start(ThreadContext * _tc, BaseTLB::Translation *_translation,$/;"	f	class:X86ISA::Walker
start	src/base/addr_range.hh	/^    Addr start() const { return _start; }$/;"	f	class:AddrRange
start	src/cpu/kvm/perfevent.cc	/^PerfKvmCounter::start()$/;"	f	class:PerfKvmCounter
start	src/mem/abstract_mem.hh	/^    Addr start() const { return range.start(); }$/;"	f	class:AbstractMemory
start	src/python/m5/util/region.py	/^    def start(self):$/;"	m	class:Region
startAccess	src/mem/ruby/system/BankedArray.hh	/^        Tick startAccess;$/;"	m	class:BankedArray::AccessRecord
startAddr	src/base/chunk_generator.hh	/^    const Addr startAddr;$/;"	m	class:ChunkGenerator
startAddr	src/cpu/testers/traffic_gen/generators.hh	/^    const Addr startAddr;$/;"	m	class:LinearGen
startAddr	src/cpu/testers/traffic_gen/generators.hh	/^    const Addr startAddr;$/;"	m	class:RandomGen
startAddr	src/dev/arm/pl111.hh	/^    Addr startAddr;$/;"	m	class:Pl111
startCommand	src/dev/ide_disk.cc	/^IdeDisk::startCommand()$/;"	f	class:IdeDisk
startDisassembly	src/arch/arm/insts/mem64.cc	/^Memory64::startDisassembly(std::ostream &os) const$/;"	f	class:ArmISA::Memory64
startDma	src/dev/arm/pl111.cc	/^Pl111::startDma()$/;"	f	class:Pl111
startDma	src/dev/ide_disk.cc	/^IdeDisk::startDma(const uint32_t &prdTableBase)$/;"	f	class:IdeDisk
startFrame	src/dev/arm/hdlcd.cc	/^HDLcd::startFrame()$/;"	f	class:HDLcd
startFrameEvent	src/dev/arm/hdlcd.hh	/^    EventWrapper<HDLcd, &HDLcd::startFrame> startFrameEvent;$/;"	m	class:HDLcd
startFunctional	src/arch/x86/pagetable_walker.cc	/^Walker::WalkerState::startFunctional(Addr &addr, unsigned &logBytes)$/;"	f	class:X86ISA::Walker::WalkerState
startFunctional	src/arch/x86/pagetable_walker.cc	/^Walker::startFunctional(ThreadContext * _tc, Addr &addr, unsigned &logBytes,$/;"	f	class:X86ISA::Walker
startIndexBit	src/mem/ruby/system/BankedArray.hh	/^    unsigned int startIndexBit;$/;"	m	class:BankedArray
startNumInst	src/cpu/checker/cpu.hh	/^    Counter startNumInst;$/;"	m	class:CheckerCPU
startNumInst	src/cpu/ozone/cpu.hh	/^    Counter startNumInst;$/;"	m	class:OzoneCPU
startNumInst	src/cpu/simple/base.hh	/^    Counter startNumInst;$/;"	m	class:BaseSimpleCPU
startNumLoad	src/cpu/checker/cpu.hh	/^    Counter startNumLoad;$/;"	m	class:CheckerCPU
startNumLoad	src/cpu/ozone/cpu.hh	/^    Counter startNumLoad;$/;"	m	class:OzoneCPU
startNumLoad	src/cpu/simple/base.hh	/^    Counter startNumLoad;$/;"	m	class:BaseSimpleCPU
startNumLoad	src/cpu/thread_state.hh	/^    Counter startNumLoad;$/;"	m	struct:ThreadState
startNumOp	src/cpu/simple/base.hh	/^    Counter startNumOp;$/;"	m	class:BaseSimpleCPU
startStop	src/dev/ide_ctrl.hh	/^        Bitfield<0> startStop;$/;"	m	class:IdeController
startTick	src/sim/stat_control.cc	/^Tick startTick;$/;"	m	namespace:Stats	file:
startTickPrechargeAll	src/mem/dram_ctrl.hh	/^    Tick startTickPrechargeAll;$/;"	m	class:DRAMCtrl
startTime	src/dev/arm/pl111.hh	/^    Tick startTime;$/;"	m	class:Pl111
startWalk	src/arch/x86/pagetable_walker.cc	/^Walker::WalkerState::startWalk()$/;"	f	class:X86ISA::Walker::WalkerState
startWalkWrapper	src/arch/x86/pagetable_walker.cc	/^Walker::startWalkWrapper()$/;"	f	class:X86ISA::Walker
start_index_bit	src/mem/ruby/system/Cache.py	/^    start_index_bit = Param.Int(6, "index start, default 6 for 64-byte line");$/;"	v	class:RubyCache
start_paddr	src/mem/ruby/system/DMASequencer.hh	/^    uint64_t start_paddr;$/;"	m	struct:DMARequest
started	src/arch/x86/pagetable_walker.hh	/^            bool started;$/;"	m	class:X86ISA::Walker::WalkerState
started	src/cpu/kvm/vm.hh	/^    bool started;$/;"	m	class:KvmVM
startedUp	src/arch/x86/interrupts.hh	/^    bool startedUp;$/;"	m	class:X86ISA::Interrupts
startingAddrSegment	src/arch/x86/bios/smbios.hh	/^    uint16_t startingAddrSegment;$/;"	m	class:X86ISA::SMBios::BiosInformation
starting_addr_segment	src/arch/x86/bios/SMBios.py	/^        Param.UInt16(0, "segment location of bios starting address")$/;"	v	class:X86SMBiosBiosInformation
startswith	src/base/str.hh	/^startswith(const char *s, const char *prefix)$/;"	f
startswith	src/base/str.hh	/^startswith(const std::string &s, const char *prefix)$/;"	f
startswith	src/base/str.hh	/^startswith(const std::string &s, const std::string &prefix)$/;"	f
startup	src/arch/alpha/isa.hh	/^        void startup(ThreadContext *tc) {}$/;"	f	class:AlphaISA::ISA
startup	src/arch/alpha/system.cc	/^AlphaSystem::startup()$/;"	f	class:AlphaSystem
startup	src/arch/arm/isa.hh	/^        void startup(ThreadContext *tc) {}$/;"	f	class:ArmISA::ISA
startup	src/arch/arm/linux/system.cc	/^LinuxArmSystem::startup()$/;"	f	class:LinuxArmSystem
startup	src/arch/mips/isa.hh	/^        void startup(ThreadContext *tc) {}$/;"	f	class:MipsISA::ISA
startup	src/arch/power/isa.hh	/^    void startup(ThreadContext *tc) {}$/;"	f	class:PowerISA::ISA
startup	src/arch/sparc/isa.hh	/^    void startup(ThreadContext *tc) {}$/;"	f	class:SparcISA::ISA
startup	src/arch/x86/isa.cc	/^ISA::startup(ThreadContext *tc)$/;"	f	class:X86ISA::ISA
startup	src/base/cp_annotate.cc	/^CPA::startup()$/;"	f	class:CPA
startup	src/cpu/base.cc	/^BaseCPU::startup()$/;"	f	class:BaseCPU
startup	src/cpu/inorder/resource_pool.hh	/^    virtual void startup() { }$/;"	f	class:ResourcePool
startup	src/cpu/kvm/arm_cpu.cc	/^ArmKvmCPU::startup()$/;"	f	class:ArmKvmCPU
startup	src/cpu/kvm/base.cc	/^BaseKvmCPU::startup()$/;"	f	class:BaseKvmCPU
startup	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::startup()$/;"	f	class:X86KvmCPU
startup	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::startup()$/;"	f	class:FullO3CPU
startup	src/cpu/simple/base.cc	/^BaseSimpleCPU::startup()$/;"	f	class:BaseSimpleCPU
startup	src/cpu/simple_thread.cc	/^SimpleThread::startup()$/;"	f	class:SimpleThread
startup	src/dev/alpha/backdoor.cc	/^AlphaBackdoor::startup()$/;"	f	class:AlphaBackdoor
startup	src/mem/comm_monitor.cc	/^CommMonitor::startup()$/;"	f	class:CommMonitor
startup	src/mem/dram_ctrl.cc	/^DRAMCtrl::startup()$/;"	f	class:DRAMCtrl
startup	src/mem/dramsim2.cc	/^DRAMSim2::startup()$/;"	f	class:DRAMSim2
startup	src/mem/ruby/system/System.cc	/^RubySystem::startup()$/;"	f	class:RubySystem
startup	src/sim/sim_object.cc	/^SimObject::startup()$/;"	f	class:SimObject
startupCPU	src/arch/alpha/utility.hh	/^inline void startupCPU(ThreadContext *tc, int cpuId)$/;"	f	namespace:AlphaISA
startupCPU	src/arch/arm/utility.hh	/^inline void startupCPU(ThreadContext *tc, int cpuId)$/;"	f	namespace:ArmISA
startupCPU	src/arch/mips/utility.cc	/^startupCPU(ThreadContext *tc, int cpuId)$/;"	f	namespace:MipsISA
startupCPU	src/arch/null/utility.hh	/^inline void startupCPU(ThreadContext *tc, int cpuId) {}$/;"	f	namespace:NullISA
startupCPU	src/arch/power/utility.hh	/^startupCPU(ThreadContext *tc, int cpuId)$/;"	f	namespace:PowerISA
startupCPU	src/arch/sparc/utility.hh	/^startupCPU(ThreadContext *tc, int cpuId)$/;"	f	namespace:SparcISA
startupCPU	src/arch/x86/utility.cc	/^void startupCPU(ThreadContext *tc, int cpuId)$/;"	f	namespace:X86ISA
startupStage	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::startupStage()$/;"	f	class:DefaultCommit
startupStage	src/cpu/o3/decode_impl.hh	/^DefaultDecode<Impl>::startupStage()$/;"	f	class:DefaultDecode
startupStage	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::startupStage()$/;"	f	class:DefaultFetch
startupStage	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::startupStage()$/;"	f	class:DefaultIEW
startupStage	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::startupStage()$/;"	f	class:DefaultRename
startupThread	src/cpu/kvm/base.cc	/^BaseKvmCPU::startupThread()$/;"	f	class:BaseKvmCPU
startupVector	src/arch/x86/interrupts.hh	/^    uint8_t startupVector;$/;"	m	class:X86ISA::Interrupts
stat	src/base/statistics.hh	/^    Stat &stat;$/;"	m	class:Stats::DistProxy
stat	src/base/statistics.hh	/^    Stat &stat;$/;"	m	class:Stats::ScalarProxy
stat	src/base/statistics.hh	/^    Stat &stat;$/;"	m	class:Stats::VectorProxy
stat	src/kern/linux/linux_syscalls.hh	/^    stat = 229,$/;"	e	enum:SystemCalls::__anon87
stat	src/kern/tru64/tru64_syscalls.hh	/^        stat = 224,$/;"	e	enum:SystemCalls::__anon102
stat64	src/kern/linux/linux_syscalls.hh	/^    stat64 = 230,$/;"	e	enum:SystemCalls::__anon87
stat64Func	src/sim/syscall_emul.hh	/^stat64Func(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
statComBranches	src/cpu/o3/commit.hh	/^    Stats::Vector statComBranches;$/;"	m	class:DefaultCommit
statComBranches	src/cpu/ozone/lw_back_end.hh	/^    Stats::Vector statComBranches;$/;"	m	class:LWBackEnd
statComFloating	src/cpu/o3/commit.hh	/^    Stats::Vector statComFloating;$/;"	m	class:DefaultCommit
statComFunctionCalls	src/cpu/o3/commit.hh	/^    Stats::Vector statComFunctionCalls;$/;"	m	class:DefaultCommit
statComInst	src/cpu/ozone/lw_back_end.hh	/^    Stats::Vector statComInst;$/;"	m	class:LWBackEnd
statComInteger	src/cpu/o3/commit.hh	/^    Stats::Vector statComInteger;$/;"	m	class:DefaultCommit
statComLoads	src/cpu/o3/commit.hh	/^    Stats::Vector statComLoads;$/;"	m	class:DefaultCommit
statComLoads	src/cpu/ozone/lw_back_end.hh	/^    Stats::Vector statComLoads;$/;"	m	class:LWBackEnd
statComMembars	src/cpu/o3/commit.hh	/^    Stats::Vector statComMembars;$/;"	m	class:DefaultCommit
statComMembars	src/cpu/ozone/lw_back_end.hh	/^    Stats::Vector statComMembars;$/;"	m	class:LWBackEnd
statComRefs	src/cpu/o3/commit.hh	/^    Stats::Vector statComRefs;$/;"	m	class:DefaultCommit
statComRefs	src/cpu/ozone/lw_back_end.hh	/^    Stats::Vector statComRefs;$/;"	m	class:LWBackEnd
statComSwp	src/cpu/o3/commit.hh	/^    Stats::Vector statComSwp;$/;"	m	class:DefaultCommit
statComSwp	src/cpu/ozone/lw_back_end.hh	/^    Stats::Vector statComSwp;$/;"	m	class:LWBackEnd
statElapsedTicks	src/sim/stat_control.cc	/^statElapsedTicks()$/;"	f	namespace:Stats
statElapsedTime	src/sim/stat_control.cc	/^statElapsedTime()$/;"	f	namespace:Stats
statFinalTick	src/sim/stat_control.cc	/^statFinalTick()$/;"	f	namespace:Stats
statFuBusy	src/cpu/o3/inst_queue.hh	/^    Stats::Vector statFuBusy;$/;"	m	class:InstructionQueue
statFunc	src/sim/syscall_emul.hh	/^statFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
statIssuedInstType	src/cpu/o3/inst_queue.hh	/^    Stats::Vector2d statIssuedInstType;$/;"	m	class:InstructionQueue
stat_com_branches	src/cpu/ozone/back_end.hh	/^    Stats::Vector stat_com_branches;$/;"	m	class:BackEnd
stat_com_inst	src/cpu/ozone/back_end.hh	/^    Stats::Vector stat_com_inst;$/;"	m	class:BackEnd
stat_com_loads	src/cpu/ozone/back_end.hh	/^    Stats::Vector stat_com_loads;$/;"	m	class:BackEnd
stat_com_membars	src/cpu/ozone/back_end.hh	/^    Stats::Vector stat_com_membars;$/;"	m	class:BackEnd
stat_com_refs	src/cpu/ozone/back_end.hh	/^    Stats::Vector stat_com_refs;$/;"	m	class:BackEnd
stat_com_swp	src/cpu/ozone/back_end.hh	/^    Stats::Vector stat_com_swp;$/;"	m	class:BackEnd
stat_regA	src/dev/mc146818.hh	/^    RtcRegA stat_regA;$/;"	m	class:MC146818
stat_regB	src/dev/mc146818.hh	/^    RtcRegB stat_regB;$/;"	m	class:MC146818
state	src/arch/arm/nativetrace.hh	/^        uint64_t state[2][STATE_NUMVALS];$/;"	m	struct:Trace::ArmNativeTrace::ThreadState
state	src/arch/x86/decoder.hh	/^    State state;$/;"	m	class:X86ISA::Decoder
state	src/arch/x86/pagetable_walker.hh	/^            State state;$/;"	m	class:X86ISA::Walker::WalkerState
state	src/cpu/translation.hh	/^    WholeTranslationState *state;$/;"	m	class:DataTranslation
state	src/mem/bus.hh	/^        State state;$/;"	m	class:BaseBus::Layer
statePermPairAdd	src/mem/slicc/symbols/Type.py	/^    def statePermPairAdd(self, state_name, perm_name):$/;"	m	class:Type
stateQueues	src/arch/arm/table_walker.hh	/^    std::list<WalkerState *> stateQueues[MAX_LOOKUP_LEVELS];$/;"	m	class:ArmISA::TableWalker
state_machine	src/mem/slicc/ast/AST.py	/^    def state_machine(self):$/;"	m	class:AST
state_machine	src/mem/slicc/symbols/SymbolTable.py	/^    def state_machine(self):$/;"	m	class:SymbolTable
state_str	src/mem/slicc/generate/tex.py	/^        state_str = state.short$/;"	v
states	src/arch/micro_asm.py	/^states = ($/;"	v
states	src/cpu/testers/traffic_gen/traffic_gen.hh	/^    m5::hash_map<uint32_t, BaseGen*> states;$/;"	m	class:TrafficGen
statfs	src/kern/linux/linux_syscalls.hh	/^    statfs = 231,$/;"	e	enum:SystemCalls::__anon87
statfs	src/kern/tru64/tru64_syscalls.hh	/^        statfs = 227,$/;"	e	enum:SystemCalls::__anon102
statfs64	src/kern/linux/linux_syscalls.hh	/^    statfs64 = 232,$/;"	e	enum:SystemCalls::__anon87
statfsFunc	src/sim/syscall_emul.hh	/^statfsFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
staticInst	src/cpu/base_dyn_inst.hh	/^    StaticInstPtr staticInst;$/;"	m	class:BaseDynInst
staticInst	src/cpu/inorder/inorder_dyn_inst.hh	/^    StaticInstPtr staticInst;$/;"	m	class:InOrderDynInst
staticInst	src/sim/insttracer.hh	/^    StaticInstPtr staticInst;$/;"	m	class:Trace::InstRecord
static_backend_latency	src/mem/DRAMCtrl.py	/^    static_backend_latency = Param.Latency("10ns", "Static backend latency")$/;"	v	class:DRAMCtrl
static_frontend_latency	src/mem/DRAMCtrl.py	/^    static_frontend_latency = Param.Latency("10ns", "Static frontend latency")$/;"	v	class:DRAMCtrl
stats	src/mem/comm_monitor.hh	/^    MonitorStats stats;$/;"	m	class:CommMonitor
stats	src/python/m5/__init__.py	/^    import stats$/;"	i
stats	src/python/m5/main.py	/^    import stats$/;"	i
stats	src/python/m5/simulate.py	/^import stats$/;"	i
stats	src/unittest/stattestmain.py	/^    import m5.stats$/;"	i
statsList	src/base/statistics.cc	/^statsList()$/;"	f	namespace:Stats
statsMap	src/base/statistics.cc	/^statsMap()$/;"	f	namespace:Stats
stats_dict	src/python/m5/stats/__init__.py	/^stats_dict = {}$/;"	v
stats_list	src/python/m5/stats/__init__.py	/^stats_list = []$/;"	v
stattest_init	src/unittest/stattest.cc	/^stattest_init()$/;"	f
stattest_init	src/unittest/stattestmain.py	/^    from m5.internal.stattest import stattest_init, stattest_run$/;"	i
stattest_run	src/unittest/stattest.cc	/^stattest_run()$/;"	f
stattest_run	src/unittest/stattestmain.py	/^    from m5.internal.stattest import stattest_init, stattest_run$/;"	i
status	src/arch/arm/miscregs.hh	/^        Bitfield<5, 0> status;  \/\/ LPAE$/;"	m	namespace:ArmISA
status	src/arch/x86/interrupts.hh	/^        Bitfield<12> status;$/;"	m	class:X86ISA::Interrupts
status	src/base/debug.hh	/^    bool status() const { return _status; }$/;"	f	class:Debug::SimpleFlag
status	src/cpu/base_dyn_inst.hh	/^    std::bitset<NumStatus> status;$/;"	m	class:BaseDynInst
status	src/cpu/checker/thread_context.hh	/^    Status status() const { return actualTC->status(); }$/;"	f	class:CheckerThreadContext
status	src/cpu/inorder/inorder_dyn_inst.hh	/^    std::bitset<NumStatus> status;$/;"	m	class:InOrderDynInst
status	src/cpu/inorder/thread_context.hh	/^    Status status() const { return thread->status(); }$/;"	f	class:InOrderThreadContext
status	src/cpu/o3/thread_context.hh	/^    virtual Status status() const { return thread->status(); }$/;"	f	class:O3ThreadContext
status	src/cpu/ozone/back_end.hh	/^    Status status;$/;"	m	class:BackEnd
status	src/cpu/ozone/cpu.hh	/^        Status status() const { return thread->status(); }$/;"	f	class:OzoneCPU::OzoneTC
status	src/cpu/ozone/cpu.hh	/^    Status status() const { return _status; }$/;"	f	class:OzoneCPU
status	src/cpu/ozone/front_end.hh	/^    Status status;$/;"	m	class:FrontEnd
status	src/cpu/ozone/inorder_back_end.hh	/^    Status status;$/;"	m	class:InorderBackEnd
status	src/cpu/ozone/lw_back_end.hh	/^    Status status;$/;"	m	class:LWBackEnd
status	src/cpu/simple_thread.hh	/^    Status status() const { return _status; }$/;"	f	class:SimpleThread
status	src/cpu/thread_context.hh	/^    Status status() const { return actualTC->status(); }$/;"	f	class:ProxyThreadContext
status	src/cpu/thread_state.hh	/^    Status status() const { return _status; }$/;"	f	struct:ThreadState
status	src/dev/arm/kmi.hh	/^    StatusReg status;$/;"	m	class:Pl050
status	src/dev/copy_engine_defs.hh	/^    CHANSTS status;$/;"	m	struct:CopyEngineReg::ChanRegs
status	src/dev/i8254xGBe_defs.hh	/^            uint32_t status:20;$/;"	m	struct:iGbReg::RxDesc::__anon70::__anon73
status	src/dev/i8254xGBe_defs.hh	/^            uint8_t status;$/;"	m	struct:iGbReg::RxDesc::__anon70::__anon71
status	src/dev/ide_ctrl.hh	/^            BMIStatusReg status;$/;"	m	struct:IdeController::Channel::BMIRegs
status	src/dev/ide_disk.hh	/^    uint8_t status;$/;"	m	class:IdeDisk
status	src/dev/pcireg.h	/^        uint16_t status;$/;"	m	struct:PCIConfig::__anon80
status	src/dev/uart.hh	/^    int status;$/;"	m	class:Uart
status	src/dev/x86/i8042.hh	/^    Status status;$/;"	m	class:X86ISA::PS2Mouse
status	src/mem/cache/blk.hh	/^    State status;$/;"	m	class:CacheBlk
statusCompleteEvent	src/dev/copy_engine.hh	/^            statusCompleteEvent;$/;"	m	class:CopyEngine::CopyEngineChannel
statusReg	src/dev/x86/i8042.hh	/^    StatusReg statusReg;$/;"	m	class:X86ISA::I8042
stayAtPC	src/cpu/simple/base.hh	/^    bool stayAtPC;$/;"	m	class:BaseSimpleCPU
std	src/doxygen/stl.hh	/^namespace std {$/;"	n
std	src/mem/ruby/common/Address.hh	/^namespace std {$/;"	n
step	src/arch/arm/insts/macromem.hh	/^    uint32_t step;$/;"	m	class:ArmISA::MicroNeonMixOp
step	src/arch/arm/insts/macromem.hh	/^    uint8_t eSize, dataSize, numStructElems, lane, step;$/;"	m	class:ArmISA::MicroNeonMixLaneOp64
step	src/arch/arm/insts/macromem.hh	/^    uint8_t eSize, dataSize, numStructElems, numRegs, step;$/;"	m	class:ArmISA::MicroNeonMixOp64
stepWalk	src/arch/x86/pagetable_walker.cc	/^Walker::WalkerState::stepWalk(PacketPtr &write)$/;"	f	class:X86ISA::Walker::WalkerState
stepping	src/arch/x86/bios/IntelMP.py	/^    stepping = Param.UInt8(0, 'Processor stepping')$/;"	v	class:X86IntelMPProcessor
stick	src/arch/sparc/isa.hh	/^    uint64_t stick;         \/\/ Hardware clock-tick counter$/;"	m	class:SparcISA::ISA
stick_cmpr	src/arch/sparc/isa.hh	/^    uint64_t stick_cmpr;    \/\/ Hardware tick compare registers$/;"	m	class:SparcISA::ISA
stime	src/kern/linux/linux_syscalls.hh	/^    stime = 233,$/;"	e	enum:SystemCalls::__anon87
stl_helpers	src/base/stl_helpers.hh	/^namespace stl_helpers {$/;"	n	namespace:m5
stlb	src/arch/mips/mt_constants.hh	/^    Bitfield<2> stlb;$/;"	m	namespace:MipsISA
stop	src/cpu/kvm/perfevent.cc	/^PerfKvmCounter::stop()$/;"	f	class:PerfKvmCounter
stop	src/unittest/cprintftime.cc	/^volatile int stop = false;$/;"	v
stopOnPCError	src/arch/arm/nativetrace.hh	/^    bool stopOnPCError;$/;"	m	class:Trace::ArmNativeTrace
stopReads	src/mem/dram_ctrl.hh	/^    bool stopReads;$/;"	m	class:DRAMCtrl
stop_on_pc_error	src/arch/arm/ArmNativeTrace.py	/^    stop_on_pc_error = Param.Bool(True,$/;"	v	class:ArmNativeTrace
storage	src/arch/arm/linux/atag.hh	/^    uint32_t *storage;$/;"	m	class:AtagHeader
storage	src/base/statistics.hh	/^    Storage *storage;$/;"	m	class:Stats::Vector2dBase
storage	src/base/statistics.hh	/^    Storage *storage;$/;"	m	class:Stats::VectorBase
storage	src/base/statistics.hh	/^    Storage *storage;$/;"	m	class:Stats::VectorDistBase
storage	src/base/statistics.hh	/^    char storage[sizeof(Storage)] __attribute__ ((aligned (8)));$/;"	m	class:Stats::DistBase
storage	src/base/statistics.hh	/^    char storage[sizeof(Storage)] __attribute__ ((aligned (8)));$/;"	m	class:Stats::ScalarBase
storage	src/base/statistics.hh	/^    char storage[sizeof(Storage)];$/;"	m	class:Stats::SparseHistBase
storageParams	src/base/stats/info.hh	/^    const StorageParams *storageParams;$/;"	m	class:Stats::Info
store	src/arch/mips/faults.hh	/^    bool store;$/;"	m	class:MipsISA::AddressFault
store	src/mem/ruby/profiler/StoreTrace.cc	/^StoreTrace::store(NodeID node)$/;"	f	class:StoreTrace
storeAllDataRegs	src/arch/x86/isa/insts/simd128/integer/save_and_restore_state/save_and_restore_state.py	/^    "".join([storeX87RegTemplate % { "idx" : i, "mode" : "%(mode)s" }$/;"	v
storeBarrier	src/cpu/o3/mem_dep_unit.hh	/^    bool storeBarrier;$/;"	m	class:MemDepUnit
storeBarrierSN	src/cpu/o3/mem_dep_unit.hh	/^    InstSeqNum storeBarrierSN;$/;"	m	class:MemDepUnit
storeCondFailures	src/cpu/thread_state.hh	/^    unsigned storeCondFailures;$/;"	m	struct:ThreadState
storeData	src/cpu/inorder/inorder_dyn_inst.hh	/^    uint64_t storeData;$/;"	m	class:InOrderDynInst
storeEventInfo	src/mem/ruby/common/Consumer.hh	/^    virtual void storeEventInfo(int info) {}$/;"	f	class:Consumer
storeEventInfo	src/mem/ruby/network/simple/PerfectSwitch.cc	/^PerfectSwitch::storeEventInfo(int info)$/;"	f	class:PerfectSwitch
storeFaultInst	src/cpu/ozone/lsq_unit.hh	/^    DynInstPtr storeFaultInst;$/;"	m	class:OzoneLSQ
storeFaultInst	src/cpu/ozone/lw_lsq.hh	/^    DynInstPtr storeFaultInst;$/;"	m	class:OzoneLWLSQ
storeFloat80	src/arch/x86/utility.cc	/^storeFloat80(void *_mem, double value)$/;"	f	namespace:X86ISA
storeHead	src/cpu/o3/lsq_unit.hh	/^    int storeHead;$/;"	m	class:LSQUnit
storeHead	src/cpu/ozone/lsq_unit.hh	/^    int storeHead;$/;"	m	class:OzoneLSQ
storeIdx	src/cpu/ozone/lsq_unit.hh	/^        int storeIdx;$/;"	m	class:OzoneLSQ::StoreCompletionEvent
storeInFlight	src/cpu/o3/lsq_unit.hh	/^    bool storeInFlight;$/;"	m	class:LSQUnit
storeList	src/cpu/o3/store_set.hh	/^    std::map<InstSeqNum, int, ltseqnum> storeList;$/;"	m	class:StoreSet
storePostSend	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::storePostSend(PacketPtr pkt)$/;"	f	class:LSQUnit
storePostSend	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::storePostSend(PacketPtr pkt, DynInstPtr &inst)$/;"	f	class:OzoneLWLSQ
storeQueue	src/cpu/o3/lsq_unit.hh	/^    std::vector<SQEntry> storeQueue;$/;"	m	class:LSQUnit
storeQueue	src/cpu/ozone/lsq_unit.hh	/^    std::vector<SQEntry> storeQueue;$/;"	m	class:OzoneLSQ
storeQueue	src/cpu/ozone/lw_lsq.hh	/^    std::list<SQEntry> storeQueue;$/;"	m	class:OzoneLWLSQ
storeTail	src/cpu/o3/lsq_unit.hh	/^    int storeTail;$/;"	m	class:LSQUnit
storeTail	src/cpu/ozone/lsq_unit.hh	/^    int storeTail;$/;"	m	class:OzoneLSQ
storeTick	src/cpu/o3/dyn_inst.hh	/^    int32_t storeTick;$/;"	m	class:BaseO3DynInst
storeWBIdx	src/cpu/o3/lsq_unit.hh	/^    int storeWBIdx;$/;"	m	class:LSQUnit
storeWBIdx	src/cpu/ozone/lsq_unit.hh	/^    int storeWBIdx;$/;"	m	class:OzoneLSQ
store_set_clear_period	src/cpu/o3/O3CPU.py	/^    store_set_clear_period = Param.Unsigned(250000,$/;"	v	class:DerivO3CPU
stores	src/cpu/o3/lsq_unit.hh	/^    int stores;$/;"	m	class:LSQUnit
stores	src/cpu/ozone/lsq_unit.hh	/^    int stores;$/;"	m	class:OzoneLSQ
stores	src/cpu/ozone/lw_lsq.hh	/^    int stores;$/;"	m	class:OzoneLWLSQ
storesInFlight	src/cpu/ozone/lw_lsq.hh	/^    int storesInFlight;$/;"	m	class:OzoneLWLSQ
storesToWB	src/cpu/o3/lsq_unit.hh	/^    int storesToWB;$/;"	m	class:LSQUnit
storesToWB	src/cpu/ozone/lsq_unit.hh	/^    int storesToWB;$/;"	m	class:OzoneLSQ
storesToWB	src/cpu/ozone/lw_lsq.hh	/^    int storesToWB;$/;"	m	class:OzoneLWLSQ
stq	src/base/cp_annotate.hh	/^        uint16_t stq;$/;"	m	struct:CPA::AnnotateData
str	src/base/statistics.cc	/^Formula::str() const$/;"	f	class:Stats::Formula
str	src/base/statistics.hh	/^    static std::string str() { return "%"; }$/;"	f	struct:Stats::OpString
str	src/base/statistics.hh	/^    static std::string str() { return "*"; }$/;"	f	struct:Stats::OpString
str	src/base/statistics.hh	/^    static std::string str() { return "+"; }$/;"	f	struct:Stats::OpString
str	src/base/statistics.hh	/^    static std::string str() { return "-"; }$/;"	f	struct:Stats::OpString
str	src/base/statistics.hh	/^    static std::string str() { return "\/"; }$/;"	f	struct:Stats::OpString
str	src/base/statistics.hh	/^    std::string str() const { return data->name; }$/;"	f	class:Stats::ScalarStatNode
str	src/base/statistics.hh	/^    std::string str() const { return data->name; }$/;"	f	class:Stats::VectorStatNode
str	src/base/statistics.hh	/^    std::string str() const { return formula.str(); }$/;"	f	class:Stats::FormulaNode
str	src/base/statistics.hh	/^    std::string str() const { return proxy->str(); }$/;"	f	class:Stats::ValueBase
str	src/base/statistics.hh	/^    std::string str() const { return this->s.str(); }$/;"	f	class:Stats::FormulaInfoProxy
str	src/base/statistics.hh	/^    std::string str() const { return to_string(value()); }$/;"	f	class:Stats::ProxyInfo
str	src/base/statistics.hh	/^    std::string str() const { return to_string(vresult[0]); }$/;"	f	class:Stats::ConstNode
str	src/base/statistics.hh	/^    str() const$/;"	f	class:Stats::BinaryNode
str	src/base/statistics.hh	/^    str() const$/;"	f	class:Stats::ConstVectorNode
str	src/base/statistics.hh	/^    str() const$/;"	f	class:Stats::ScalarProxy
str	src/base/statistics.hh	/^    str() const$/;"	f	class:Stats::ScalarProxyNode
str	src/base/statistics.hh	/^    str() const$/;"	f	class:Stats::SumNode
str	src/base/statistics.hh	/^    str() const$/;"	f	class:Stats::UnaryNode
str	src/base/trace.hh	/^    std::string str;$/;"	m	struct:StringWrap
str	src/mem/packet.hh	/^        const std::string str;$/;"	m	struct:MemCmd::CommandInfo
strandStatusReg	src/arch/sparc/isa.hh	/^    uint64_t strandStatusReg;\/\/ Per strand status register$/;"	m	class:SparcISA::ISA
stream	src/base/cprintf.hh	/^    std::ostream &stream;$/;"	m	struct:cp::Print
stream	src/base/stats/text.hh	/^    std::ostream *stream;$/;"	m	class:Stats::Text
stream	src/dev/disk_image.hh	/^    mutable std::fstream stream;$/;"	m	class:RawDiskImage
stream	src/dev/etherdump.hh	/^    std::ostream *stream;$/;"	m	class:EtherDump
stride	src/arch/arm/miscregs.hh	/^        Bitfield<21, 20> stride;$/;"	m	namespace:ArmISA
stride	src/mem/cache/prefetch/stride.hh	/^        int stride;$/;"	m	class:StridePrefetcher::StrideEntry
string	src/arch/isa_parser.py	/^import string$/;"	i
string	src/arch/micro_asm.py	/^import string$/;"	i
string	src/base/cprintf_formats.hh	/^    enum { none, string, integer, character, floating } format;$/;"	e	enum:cp::Format::__anon38
string	src/base/inet.cc	/^EthAddr::string() const$/;"	f	class:Net::EthAddr
string	src/base/inet.cc	/^IpAddress::string() const$/;"	f	class:Net::IpAddress
string	src/base/inet.cc	/^IpNetmask::string() const$/;"	f	class:Net::IpNetmask
string	src/base/inet.cc	/^IpWithPort::string() const$/;"	f	class:Net::IpWithPort
string	src/python/m5/util/code_formatter.py	/^import string$/;"	i
stringFields	src/arch/x86/bios/smbios.hh	/^    bool stringFields;$/;"	m	class:X86ISA::SMBios::SMBiosStructure
stringRE	src/arch/isa_parser.py	/^stringRE = re.compile(r'"([^"\\\\]|\\\\.)*"')$/;"	v
stringToRegister	src/arch/x86/cpuid.cc	/^    stringToRegister(const char *str)$/;"	f	namespace:X86ISA
string_as_T	src/mem/ruby/network/orion/ConfigFile.hh	/^T ConfigFile::string_as_T( const string& s )$/;"	f	class:ConfigFile
string_as_T	src/mem/ruby/network/orion/ConfigFile.hh	/^inline bool ConfigFile::string_as_T<bool>( const string& s )$/;"	f	class:ConfigFile
string_as_T	src/mem/ruby/network/orion/ConfigFile.hh	/^inline string ConfigFile::string_as_T<string>( const string& s )$/;"	f	class:ConfigFile
string_as_T	src/mem/ruby/network/orion/OrionConfig.hh	/^T OrionConfig::string_as_T(const string& str_)$/;"	f	class:OrionConfig
string_as_T	src/mem/ruby/network/orion/OrionConfig.hh	/^inline bool OrionConfig::string_as_T<bool>(const string& str_)$/;"	f	class:OrionConfig
string_as_T	src/mem/ruby/network/orion/OrionConfig.hh	/^inline string OrionConfig::string_as_T<string>(const string& str_)$/;"	f	class:OrionConfig
strings	src/arch/x86/bios/smbios.hh	/^    std::vector<std::string> strings;$/;"	m	class:X86ISA::SMBios::SMBiosStructure
strings	src/unittest/circletest.cc	/^const char *strings[] = {$/;"	v
stripes	src/base/addr_range.hh	/^    uint32_t stripes() const { return ULL(1) << intlvBits; }$/;"	f	class:AddrRange
strptime	src/python/m5/params.py	/^    from time import gmtime, strptime, struct_time, time$/;"	i
struct_time	src/python/m5/params.py	/^    from time import gmtime, strptime, struct_time, time$/;"	i
structures	src/arch/x86/bios/SMBios.py	/^    structures = VectorParam.X86SMBiosSMBiosStructure([], "smbios structures")$/;"	v	class:X86SMBiosSMBiosTable
structures	src/arch/x86/bios/smbios.hh	/^    std::vector<SMBiosStructure *> structures;$/;"	m	class:X86ISA::SMBios::SMBiosTable
sts	src/dev/i8254xGBe_defs.hh	/^    STATUS sts;$/;"	m	struct:iGbReg::Regs
stty	src/kern/linux/linux_syscalls.hh	/^    stty = 234,$/;"	e	enum:SystemCalls::__anon87
su	src/arch/mips/pra_constants.hh	/^    Bitfield<15, 12> su;$/;"	m	namespace:MipsISA
sub128	src/arch/arm/insts/fplib.cc	/^sub128(uint64_t *x0, uint64_t *x1, uint64_t a0, uint64_t a1, uint64_t b0,$/;"	f	namespace:ArmISA
subArchDefined	src/arch/arm/miscregs.hh	/^        Bitfield<29, 0> subArchDefined;$/;"	m	namespace:ArmISA
subBlock	src/cpu/testers/rubytest/RubyTester.hh	/^        SubBlock subBlock;$/;"	m	struct:RubyTester::SenderState
subClassCode	src/dev/pcireg.h	/^        uint8_t subClassCode;$/;"	m	struct:PCIConfig::__anon80
subdesc	src/base/statistics.hh	/^    subdesc(off_type index, const std::string &desc)$/;"	f	class:Stats::DataWrapVec
subdescs	src/base/stats/info.hh	/^    std::vector<std::string> subdescs;$/;"	m	class:Stats::Vector2dInfo
subdescs	src/base/stats/info.hh	/^    std::vector<std::string> subdescs;$/;"	m	class:Stats::VectorDistInfo
subdescs	src/base/stats/info.hh	/^    std::vector<std::string> subdescs;$/;"	m	class:Stats::VectorInfo
subdescs	src/base/stats/text.cc	/^    vector<string> subdescs;$/;"	m	struct:Stats::VectorPrint	file:
submode	src/arch/x86/decoder.hh	/^    X86SubMode submode;$/;"	m	class:X86ISA::Decoder
submode	src/arch/x86/regs/misc.hh	/^        Bitfield<3, 1> submode;$/;"	m	namespace:X86ISA
submode	src/arch/x86/types.hh	/^        Bitfield<2,0> submode;$/;"	m	namespace:X86ISA
subname	src/base/statistics.hh	/^    subname(off_type index, const std::string &name)$/;"	f	class:Stats::DataWrapVec
subnames	src/base/stats/info.hh	/^    std::vector<std::string> subnames;$/;"	m	class:Stats::Vector2dInfo
subnames	src/base/stats/info.hh	/^    std::vector<std::string> subnames;$/;"	m	class:Stats::VectorDistInfo
subnames	src/base/stats/info.hh	/^    std::vector<std::string> subnames;$/;"	m	class:Stats::VectorInfo
subnames	src/base/stats/text.cc	/^    vector<string> subnames;$/;"	m	struct:Stats::VectorPrint	file:
suboption	src/python/m5/util/jobfile.py	/^    def suboption(self, name, desc, **kwargs):$/;"	m	class:Option
subopts	src/python/m5/util/jobfile.py	/^    def subopts(self):$/;"	m	class:Group
subopts	src/python/m5/util/jobfile.py	/^    def subopts(self):$/;"	m	class:Option
subst	src/arch/isa_parser.py	/^    def subst(self, d):$/;"	m	class:Template
substBitOps	src/arch/isa_parser.py	/^def substBitOps(code):$/;"	f
substMungedOpNames	src/arch/isa_parser.py	/^    def substMungedOpNames(self, code):$/;"	m	class:ISAParser
subsys_info	src/kern/tru64/tru64_syscalls.hh	/^        subsys_info = 255,$/;"	e	enum:SystemCalls::__anon102
subsystemID	src/dev/pcireg.h	/^        uint16_t subsystemID;$/;"	m	struct:PCIConfig::__anon80
subsystemVendorID	src/dev/pcireg.h	/^        uint16_t subsystemVendorID;$/;"	m	struct:PCIConfig::__anon80
subtractive_decode	src/arch/x86/bios/IntelMP.py	/^    subtractive_decode = Param.Bool(False,$/;"	v	class:X86IntelMPBusHierarchy
succeededTiming	src/mem/bus.cc	/^BaseBus::Layer<SrcType,DstType>::succeededTiming(Tick busy_time)$/;"	f	class:BaseBus::Layer
success	src/sim/syscallreturn.hh	/^    bool success;$/;"	m	class:SyscallReturn
successful	src/sim/syscallreturn.hh	/^    bool successful() { return success; }$/;"	f	class:SyscallReturn
sum	src/base/inet.hh	/^    uint16_t sum() const { return ip_sum; }$/;"	f	struct:Net::IpHdr
sum	src/base/inet.hh	/^    uint16_t sum() const { return th_sum; }$/;"	f	struct:Net::TcpHdr
sum	src/base/inet.hh	/^    uint16_t sum() const { return uh_sum; }$/;"	f	struct:Net::UdpHdr
sum	src/base/inet.hh	/^    void sum(uint16_t sum) { ip_sum = sum; }$/;"	f	struct:Net::IpHdr
sum	src/base/inet.hh	/^    void sum(uint16_t sum) { th_sum = sum; }$/;"	f	struct:Net::TcpHdr
sum	src/base/inet.hh	/^    void sum(uint16_t sum) { uh_sum = sum; }$/;"	f	struct:Net::UdpHdr
sum	src/base/statistics.hh	/^    Counter sum;$/;"	m	class:Stats::AvgSampleStor
sum	src/base/statistics.hh	/^    Counter sum;$/;"	m	class:Stats::DistStor
sum	src/base/statistics.hh	/^    Counter sum;$/;"	m	class:Stats::HistStor
sum	src/base/statistics.hh	/^    Counter sum;$/;"	m	class:Stats::SampleStor
sum	src/base/statistics.hh	/^sum(Temp val)$/;"	f	namespace:Stats
sum	src/base/stats/info.hh	/^    Counter sum;$/;"	m	struct:Stats::DistData
sun4u	src/arch/sparc/pagetable.hh	/^      sun4u,$/;"	e	enum:SparcISA::PageTableEntry::EntryType
sun4v	src/arch/sparc/pagetable.hh	/^      sun4v,$/;"	e	enum:SparcISA::PageTableEntry::EntryType
supersection	src/arch/arm/table_walker.hh	/^        bool supersection() const$/;"	f	class:ArmISA::TableWalker::L1Descriptor
support_data_reqs	src/mem/ruby/system/Sequencer.py	/^    support_data_reqs = Param.Bool(True, "data cache requests supported")$/;"	v	class:RubyPort
support_inst_reqs	src/mem/ruby/system/Sequencer.py	/^    support_inst_reqs = Param.Bool(True, "inst cache requests supported")$/;"	v	class:RubyPort
support_take_over	src/cpu/BaseCPU.py	/^    def support_take_over(cls):$/;"	f
support_take_over	src/cpu/inorder/InOrderCPU.py	/^    def support_take_over(cls):$/;"	m	class:InOrderCPU
support_take_over	src/cpu/kvm/BaseKvmCPU.py	/^    def support_take_over(cls):$/;"	f
support_take_over	src/cpu/o3/O3CPU.py	/^    def support_take_over(cls):$/;"	m	class:DerivO3CPU
support_take_over	src/cpu/simple/AtomicSimpleCPU.py	/^    def support_take_over(cls):$/;"	m	class:AtomicSimpleCPU
support_take_over	src/cpu/simple/TimingSimpleCPU.py	/^    def support_take_over(cls):$/;"	m	class:TimingSimpleCPU
supportedCPUIDCache	src/cpu/kvm/vm.hh	/^    mutable CPUIDVector supportedCPUIDCache;$/;"	m	class:Kvm
supportedMSRCache	src/cpu/kvm/vm.hh	/^    mutable MSRIndexVector supportedMSRCache;$/;"	m	class:Kvm
supportsRawEnc	src/base/vnc/vncserver.hh	/^    bool supportsRawEnc;$/;"	m	class:VncServer
supportsResizeEnc	src/base/vnc/vncserver.hh	/^    bool supportsResizeEnc;$/;"	m	class:VncServer
suppressFuncError	src/mem/packet.hh	/^    bool suppressFuncError() const  { return flags.isSet(SUPPRESS_FUNC_ERROR); }$/;"	f	class:Packet
suppress_func_warnings	src/cpu/testers/memtest/MemTest.py	/^    suppress_func_warnings = Param.Bool(False,$/;"	v	class:MemTest
suppress_func_warnings	src/cpu/testers/memtest/memtest.hh	/^    bool suppress_func_warnings;$/;"	m	class:MemTest
suspend	src/cpu/checker/thread_context.hh	/^    void suspend(Cycles delay) { actualTC->suspend(delay); }$/;"	f	class:CheckerThreadContext
suspend	src/cpu/inorder/thread_context.cc	/^InOrderThreadContext::suspend(Cycles delay)$/;"	f	class:InOrderThreadContext
suspend	src/cpu/o3/thread_context_impl.hh	/^O3ThreadContext<Impl>::suspend(Cycles delay)$/;"	f	class:O3ThreadContext
suspend	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::OzoneTC::suspend()$/;"	f	class:OzoneCPU::OzoneTC
suspend	src/cpu/simple_thread.cc	/^SimpleThread::suspend()$/;"	f	class:SimpleThread
suspend	src/cpu/thread_context.hh	/^    void suspend(Cycles delay = Cycles(0)) { actualTC->suspend(); }$/;"	f	class:ProxyThreadContext
suspendContext	src/cpu/base.hh	/^    virtual void suspendContext(ThreadID thread_num) {}$/;"	f	class:BaseCPU
suspendContext	src/cpu/inorder/cpu.cc	/^InOrderCPU::suspendContext(ThreadID tid)$/;"	f	class:InOrderCPU
suspendContext	src/cpu/kvm/base.cc	/^BaseKvmCPU::suspendContext(ThreadID thread_num)$/;"	f	class:BaseKvmCPU
suspendContext	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::suspendContext(ThreadID tid)$/;"	f	class:FullO3CPU
suspendContext	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::suspendContext(int thread_num)$/;"	f	class:OzoneCPU
suspendContext	src/cpu/simple/atomic.cc	/^AtomicSimpleCPU::suspendContext(ThreadID thread_num)$/;"	f	class:AtomicSimpleCPU
suspendContext	src/cpu/simple/timing.cc	/^TimingSimpleCPU::suspendContext(ThreadID thread_num)$/;"	f	class:TimingSimpleCPU
suspendThread	src/cpu/inorder/cpu.cc	/^InOrderCPU::suspendThread(ThreadID tid)$/;"	f	class:InOrderCPU
suspendThread	src/cpu/inorder/resource.hh	/^    virtual void suspendThread(ThreadID tid) { }$/;"	f	class:Resource
suspendThread	src/cpu/inorder/resource_pool.cc	/^ResourcePool::suspendThread(ThreadID tid)$/;"	f	class:ResourcePool
suspendThread	src/cpu/inorder/resources/fetch_seq_unit.cc	/^FetchSeqUnit::suspendThread(ThreadID tid)$/;"	f	class:FetchSeqUnit
suspendedThreads	src/cpu/inorder/cpu.hh	/^    std::list<ThreadID> suspendedThreads;$/;"	m	class:InOrderCPU
svme	src/arch/x86/regs/misc.hh	/^        Bitfield<12> svme; \/\/ Secure virtual machine enable$/;"	m	namespace:X86ISA
sw	src/arch/arm/miscregs.hh	/^        Bitfield<10>   sw;      \/\/ SWP\/SWPB enable (ARMv7 only)$/;"	m	namespace:ArmISA
swAq	src/base/cp_annotate.cc	/^CPA::swAq(ThreadContext *tc)$/;"	f	class:CPA
swAq	src/base/cp_annotate.hh	/^    void swAq(ThreadContext *tc)                                  { return; }$/;"	f	class:CPA
swAutoBegin	src/base/cp_annotate.cc	/^CPA::swAutoBegin(ThreadContext *tc, Addr next_pc)$/;"	f	class:CPA
swAutoBegin	src/base/cp_annotate.hh	/^    void swAutoBegin(ThreadContext *tc, Addr next_pc)             { return; }$/;"	f	class:CPA
swBegin	src/base/cp_annotate.cc	/^CPA::swBegin(System *sys, int cpuid, std::string st, uint64_t frame, bool expl,$/;"	f	class:CPA
swDq	src/base/cp_annotate.cc	/^CPA::swDq(ThreadContext *tc)$/;"	f	class:CPA
swDq	src/base/cp_annotate.hh	/^    void swDq(ThreadContext *tc)                                  { return; }$/;"	f	class:CPA
swEnd	src/base/cp_annotate.cc	/^CPA::swEnd(ThreadContext *tc)$/;"	f	class:CPA
swEnd	src/base/cp_annotate.hh	/^    void swEnd(ThreadContext *tc)                                 { return; }$/;"	f	class:CPA
swExpl	src/base/cp_annotate.hh	/^    SwExpl swExpl;$/;"	m	class:CPA
swExplictBegin	src/base/cp_annotate.cc	/^CPA::swExplictBegin(ThreadContext *tc)$/;"	f	class:CPA
swExplictBegin	src/base/cp_annotate.hh	/^    void swExplictBegin(ThreadContext *tc)                        { return; }$/;"	f	class:CPA
swGetId	src/base/cp_annotate.cc	/^CPA::swGetId(ThreadContext *tc)$/;"	f	class:CPA
swGetId	src/base/cp_annotate.hh	/^    uint64_t swGetId(ThreadContext *tc)                         { return 0; }$/;"	f	class:CPA
swIdentify	src/base/cp_annotate.cc	/^CPA::swIdentify(ThreadContext *tc)$/;"	f	class:CPA
swIdentify	src/base/cp_annotate.hh	/^    void swIdentify(ThreadContext *tc)                            { return; }$/;"	f	class:CPA
swLink	src/base/cp_annotate.cc	/^CPA::swLink(ThreadContext *tc)$/;"	f	class:CPA
swLink	src/base/cp_annotate.hh	/^    void swLink(ThreadContext *tc)                                { return; }$/;"	f	class:CPA
swPq	src/base/cp_annotate.cc	/^CPA::swPq(ThreadContext *tc)$/;"	f	class:CPA
swPq	src/base/cp_annotate.hh	/^    void swPq(ThreadContext *tc)                                  { return; }$/;"	f	class:CPA
swQ	src/base/cp_annotate.cc	/^CPA::swQ(ThreadContext *tc)$/;"	f	class:CPA
swQ	src/base/cp_annotate.hh	/^    void swQ(ThreadContext *tc)                                   { return; }$/;"	f	class:CPA
swRq	src/base/cp_annotate.cc	/^CPA::swRq(ThreadContext *tc)$/;"	f	class:CPA
swRq	src/base/cp_annotate.hh	/^    void swRq(ThreadContext *tc)                                  { return; }$/;"	f	class:CPA
swSmBegin	src/base/cp_annotate.cc	/^CPA::swSmBegin(ThreadContext *tc)$/;"	f	class:CPA
swSmBegin	src/base/cp_annotate.hh	/^    void swSmBegin(ThreadContext *tc)                             { return; }$/;"	f	class:CPA
swSmEnd	src/base/cp_annotate.cc	/^CPA::swSmEnd(ThreadContext *tc)$/;"	f	class:CPA
swSmEnd	src/base/cp_annotate.hh	/^    void swSmEnd(ThreadContext *tc)                               { return; }$/;"	f	class:CPA
swSq	src/base/cp_annotate.cc	/^CPA::swSq(ThreadContext *tc)$/;"	f	class:CPA
swSq	src/base/cp_annotate.hh	/^    void swSq(ThreadContext *tc)                                  { return; }$/;"	f	class:CPA
swSyscallLink	src/base/cp_annotate.cc	/^CPA::swSyscallLink(ThreadContext  *tc)$/;"	f	class:CPA
swSyscallLink	src/base/cp_annotate.hh	/^    void swSyscallLink(ThreadContext *tc)                         { return; }$/;"	f	class:CPA
swWe	src/base/cp_annotate.cc	/^CPA::swWe(ThreadContext *tc)$/;"	f	class:CPA
swWe	src/base/cp_annotate.hh	/^    void swWe(ThreadContext *tc)                                  { return; }$/;"	f	class:CPA
swWf	src/base/cp_annotate.cc	/^CPA::swWf(ThreadContext *tc)$/;"	f	class:CPA
swWf	src/base/cp_annotate.hh	/^    void swWf(ThreadContext *tc)                                  { return; }$/;"	f	class:CPA
sw_fw_sync	src/dev/i8254xGBe_defs.hh	/^    uint32_t sw_fw_sync;$/;"	m	struct:iGbReg::Regs
sw_global_arbit_count	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    double sw_local_arbit_count, sw_global_arbit_count;$/;"	m	class:Router_d
sw_local_arbit_count	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    double sw_local_arbit_count, sw_global_arbit_count;$/;"	m	class:Router_d
swap	src/kern/tru64/tru64.hh	/^        size_t  swap;           \/\/!< amount of swap to reserve$/;"	m	struct:Tru64::vm_stack
swap_byte	src/sim/byteswap.hh	/^inline T swap_byte(T x) {$/;"	f
swap_byte	src/sim/byteswap.hh	/^inline Twin32_t swap_byte<Twin32_t>(Twin32_t x)$/;"	f
swap_byte	src/sim/byteswap.hh	/^inline Twin64_t swap_byte<Twin64_t>(Twin64_t x)$/;"	f
swap_byte16	src/sim/byteswap.hh	/^swap_byte16(uint16_t x)$/;"	f
swap_byte32	src/sim/byteswap.hh	/^swap_byte32(uint32_t x)$/;"	f
swap_byte64	src/sim/byteswap.hh	/^swap_byte64(uint64_t x)$/;"	f
swapctl	src/kern/tru64/tru64_syscalls.hh	/^        swapctl = 259,$/;"	e	enum:SystemCalls::__anon102
swapoff	src/kern/linux/linux_syscalls.hh	/^    swapoff = 235,$/;"	e	enum:SystemCalls::__anon87
swapon	src/kern/linux/linux_syscalls.hh	/^    swapon = 236,$/;"	e	enum:SystemCalls::__anon87
swapon	src/kern/tru64/tru64_syscalls.hh	/^        swapon = 199,$/;"	e	enum:SystemCalls::__anon102
swarb_req	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.cc	/^Router_d::swarb_req()$/;"	f	class:Router_d
swig_decl	src/python/m5/SimObject.py	/^    def swig_decl(cls, code):$/;"	m	class:MetaSimObject
swig_decl	src/python/m5/params.py	/^    def swig_decl(cls, code):$/;"	m	class:MetaEnum
swig_decl	src/python/m5/params.py	/^    def swig_decl(self, code):$/;"	m	class:VectorParamDesc
swig_module_name	src/python/m5/params.py	/^    def swig_module_name(self):$/;"	m	class:VectorParamDesc
swig_predecls	src/python/m5/SimObject.py	/^    def swig_predecls(cls, code):$/;"	m	class:MetaSimObject
swig_predecls	src/python/m5/params.py	/^    def swig_predecls(cls, code):$/;"	m	class:AddrRange
swig_predecls	src/python/m5/params.py	/^    def swig_predecls(cls, code):$/;"	m	class:CheckedInt
swig_predecls	src/python/m5/params.py	/^    def swig_predecls(cls, code):$/;"	m	class:Enum
swig_predecls	src/python/m5/params.py	/^    def swig_predecls(cls, code):$/;"	m	class:EthernetAddr
swig_predecls	src/python/m5/params.py	/^    def swig_predecls(cls, code):$/;"	m	class:IpAddress
swig_predecls	src/python/m5/params.py	/^    def swig_predecls(cls, code):$/;"	m	class:IpNetmask
swig_predecls	src/python/m5/params.py	/^    def swig_predecls(cls, code):$/;"	m	class:IpWithPort
swig_predecls	src/python/m5/params.py	/^    def swig_predecls(cls, code):$/;"	m	class:ParamValue
swig_predecls	src/python/m5/params.py	/^    def swig_predecls(cls, code):$/;"	m	class:String
swig_predecls	src/python/m5/params.py	/^    def swig_predecls(cls, code):$/;"	m	class:TickParamValue
swig_predecls	src/python/m5/params.py	/^    def swig_predecls(cls, code):$/;"	m	class:Time
swig_predecls	src/python/m5/params.py	/^    def swig_predecls(self, code):$/;"	m	class:ParamDesc
swig_predecls	src/python/m5/params.py	/^    def swig_predecls(self, code):$/;"	m	class:VectorParamDesc
swio	src/arch/arm/miscregs.hh	/^        Bitfield<1>      swio;$/;"	m	namespace:ArmISA
switchCount	src/cpu/ozone/cpu.hh	/^    int switchCount;$/;"	m	class:OzoneCPU
switchCpus	src/python/m5/simulate.py	/^def switchCpus(system, cpuList, do_drain=True, verbose=True):$/;"	f
switchOut	src/cpu/base.cc	/^BaseCPU::switchOut()$/;"	f	class:BaseCPU
switchOut	src/cpu/checker/cpu_impl.hh	/^Checker<Impl>::switchOut()$/;"	f	class:Checker
switchOut	src/cpu/inorder/cpu.cc	/^InOrderCPU::switchOut()$/;"	f	class:InOrderCPU
switchOut	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::switchOut()$/;"	f	class:PipelineStage
switchOut	src/cpu/kvm/base.cc	/^BaseKvmCPU::switchOut()$/;"	f	class:BaseKvmCPU
switchOut	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::switchOut()$/;"	f	class:FullO3CPU
switchOut	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::switchOut()$/;"	f	class:OzoneCPU
switchOut	src/cpu/ozone/front_end_impl.hh	/^FrontEnd<Impl>::switchOut()$/;"	f	class:FrontEnd
switchOut	src/cpu/ozone/inorder_back_end.hh	/^    void switchOut() { panic("Not implemented!"); }$/;"	f	class:InorderBackEnd
switchOut	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::switchOut()$/;"	f	class:LWBackEnd
switchOut	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::switchOut()$/;"	f	class:OzoneLWLSQ
switchOut	src/cpu/simple/atomic.cc	/^AtomicSimpleCPU::switchOut()$/;"	f	class:AtomicSimpleCPU
switchOut	src/cpu/simple/timing.cc	/^TimingSimpleCPU::switchOut()$/;"	f	class:TimingSimpleCPU
switchPending	src/cpu/ozone/lw_back_end.hh	/^    bool switchPending;$/;"	m	class:LWBackEnd
switchToActive	src/cpu/inorder/cpu.hh	/^    void switchToActive(int stage_idx)$/;"	f	class:InOrderCPU
switchToActive	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::switchToActive()$/;"	f	class:DefaultFetch
switchToInactive	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::switchToInactive()$/;"	f	class:DefaultFetch
switchcpu	src/sim/pseudo_inst.cc	/^switchcpu(ThreadContext *tc)$/;"	f	namespace:PseudoInst
switchedOut	src/cpu/base.hh	/^    bool switchedOut() const { return _switchedOut; }$/;"	f	class:BaseCPU
switchedOut	src/cpu/ozone/front_end.hh	/^    bool switchedOut;$/;"	m	class:FrontEnd
switchedOut	src/cpu/ozone/lw_back_end.hh	/^    bool switchedOut;$/;"	m	class:LWBackEnd
switchedOut	src/cpu/ozone/lw_lsq.hh	/^    bool switchedOut;$/;"	m	class:OzoneLWLSQ
switchedOutBuffer	src/cpu/inorder/pipeline_stage.hh	/^    std::vector<DynInstPtr> switchedOutBuffer;$/;"	m	class:PipelineStage
switchedOutValid	src/cpu/inorder/pipeline_stage.hh	/^    std::vector<bool> switchedOutValid;$/;"	m	class:PipelineStage
switched_out	src/cpu/BaseCPU.py	/^    switched_out = Param.Bool(False,$/;"	v
swpctx	src/arch/alpha/osfpal.hh	/^        swpctx = 0x30,$/;"	e	enum:PAL::__anon3
swpipl	src/arch/alpha/osfpal.hh	/^        swpipl = 0x35,$/;"	e	enum:PAL::__anon3
swpipl	src/kern/kernel_stats.cc	/^Statistics::swpipl(int ipl)$/;"	f	class:Kernel::Statistics
swppal	src/arch/alpha/osfpal.hh	/^        swppal = 0x0a,$/;"	e	enum:PAL::__anon3
swsm	src/dev/i8254xGBe_defs.hh	/^    SWSM swsm;$/;"	m	struct:iGbReg::Regs
swtch	src/kern/tru64/tru64_syscalls.hh	/^        swtch = 60,$/;"	e	enum:SystemCalls::__anon103
swtch_pri	src/kern/tru64/tru64_syscalls.hh	/^        swtch_pri = 59,$/;"	e	enum:SystemCalls::__anon103
swtch_priFunc	src/kern/tru64/tru64.hh	/^    swtch_priFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	class:Tru64
sx	src/arch/mips/pra_constants.hh	/^    Bitfield<6>      sx;$/;"	m	namespace:MipsISA
symNil	src/base/loader/coff_sym.h	/^#define symNil /;"	d
symbol	src/base/cp_annotate.cc	/^    const char *symbol;$/;"	m	struct:CPAIgnoreSymbol	file:
symbolTable	src/base/loader/symtab.hh	/^    STable symbolTable;$/;"	m	class:SymbolTable
symbolfile	src/sim/System.py	/^    symbolfile = Param.String("", "file to get the symbols from")$/;"	v
symlink	src/kern/linux/linux_syscalls.hh	/^    symlink = 237,$/;"	e	enum:SystemCalls::__anon87
symlink	src/kern/tru64/tru64_syscalls.hh	/^        symlink = 57,$/;"	e	enum:SystemCalls::__anon102
symtab	src/cpu/profile.hh	/^    const SymbolTable *symtab;$/;"	m	class:FunctionProfile
symtab	src/mem/slicc/ast/AST.py	/^    def symtab(self):$/;"	m	class:AST
sync	src/kern/linux/linux_syscalls.hh	/^    sync = 238,$/;"	e	enum:SystemCalls::__anon87
sync	src/kern/tru64/tru64_syscalls.hh	/^        sync = 36,$/;"	e	enum:SystemCalls::__anon102
sync2	src/kern/tru64/tru64_syscalls.hh	/^        sync2 = 249,$/;"	e	enum:SystemCalls::__anon102
syncEvent	src/sim/root.hh	/^    EventWrapper<Root, &Root::timeSync> syncEvent;$/;"	m	class:Root
syncKvmState	src/cpu/kvm/base.cc	/^BaseKvmCPU::syncKvmState()$/;"	f	class:BaseKvmCPU
syncThreadContext	src/cpu/kvm/base.cc	/^BaseKvmCPU::syncThreadContext()$/;"	f	class:BaseKvmCPU
syp	src/arch/mips/dt_constants.hh	/^    Bitfield<2,  0>  syp;$/;"	m	namespace:MipsISA
sys	src/arch/arm/ArmTLB.py	/^    sys = Param.System(Parent.any, "system object parameter")$/;"	v	class:ArmTableWalker
sys	src/arch/generic/linux/threadinfo.hh	/^    System *sys;$/;"	m	class:Linux::ThreadInfo
sys	src/arch/isa_parser.py	/^import sys$/;"	i
sys	src/arch/micro_asm.py	/^import sys$/;"	i
sys	src/arch/x86/pagetable_walker.hh	/^        System * sys;$/;"	m	class:X86ISA::Walker
sys	src/cpu/BaseCPU.py	/^import sys$/;"	i
sys	src/cpu/IntrControl.py	/^    sys = Param.System(Parent.any, "the system we are part of")$/;"	v	class:IntrControl
sys	src/cpu/intr_control.hh	/^    System *sys;$/;"	m	class:IntrControl
sys	src/cpu/testers/memtest/MemTest.py	/^    sys = Param.System(Parent.any, "System Parameter")$/;"	v	class:MemTest
sys	src/dev/dma_device.hh	/^    System *sys;$/;"	m	class:DmaPort
sys	src/dev/io_device.hh	/^    System *sys;$/;"	m	class:PioDevice
sys	src/mem/cache/prefetch/Prefetcher.py	/^    sys = Param.System(Parent.any, "System this device belongs to")$/;"	v	class:BasePrefetcher
sys	src/mem/slicc/main.py	/^import sys$/;"	i
sys	src/mem/slicc/parser.py	/^import sys$/;"	i
sys	src/mem/slicc/util.py	/^import sys$/;"	i
sys	src/python/importer.py	/^        import sys$/;"	i
sys	src/python/importer.py	/^import sys$/;"	i
sys	src/python/m5/SimObject.py	/^import sys$/;"	i
sys	src/python/m5/main.py	/^import sys$/;"	i
sys	src/python/m5/options.py	/^import sys$/;"	i
sys	src/python/m5/params.py	/^import sys$/;"	i
sys	src/python/m5/simulate.py	/^import sys$/;"	i
sys	src/python/m5/ticks.py	/^import sys$/;"	i
sys	src/python/m5/util/__init__.py	/^import sys$/;"	i
sys	src/python/m5/util/jobfile.py	/^import sys$/;"	i
sys	src/python/m5/util/terminal.py	/^import sys$/;"	i
sys	src/unittest/genini.py	/^import getopt, os, os.path, sys$/;"	i
sysLock	src/dev/arm/rv_ctrl.hh	/^    SysLockReg sysLock;$/;"	m	class:RealViewCtrl
sysTick	src/arch/sparc/system.hh	/^    Tick sysTick;$/;"	m	class:SparcSystem
sys_getsysinfoFunc	src/arch/mips/linux/process.cc	/^sys_getsysinfoFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	file:
sys_setsysinfoFunc	src/arch/mips/linux/process.cc	/^sys_setsysinfoFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	file:
syscall	src/arch/x86/process.cc	/^I386LiveProcess::syscall(int64_t callnum, ThreadContext *tc)$/;"	f	class:I386LiveProcess
syscall	src/cpu/checker/cpu.hh	/^    void syscall(uint64_t callnum) { }$/;"	f	class:CheckerCPU
syscall	src/cpu/checker/thread_context.hh	/^    void syscall(int64_t callnum)$/;"	f	class:CheckerThreadContext
syscall	src/cpu/inorder/cpu.cc	/^InOrderCPU::syscall(int64_t callnum, ThreadID tid)$/;"	f	class:InOrderCPU
syscall	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::syscall(int64_t callnum)$/;"	f	class:InOrderDynInst
syscall	src/cpu/inorder/thread_context.hh	/^    void syscall(int64_t callnum)$/;"	f	class:InOrderThreadContext
syscall	src/cpu/inorder/thread_state.hh	/^    void syscall(int64_t callnum) { process->syscall(callnum, tc); }$/;"	f	class:InOrderThreadState
syscall	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::syscall(int64_t callnum, ThreadID tid)$/;"	f	class:FullO3CPU
syscall	src/cpu/o3/dyn_inst_impl.hh	/^BaseO3DynInst<Impl>::syscall(int64_t callnum)$/;"	f	class:BaseO3DynInst
syscall	src/cpu/o3/thread_context.hh	/^    virtual void syscall(int64_t callnum)$/;"	f	class:O3ThreadContext
syscall	src/cpu/o3/thread_state.hh	/^    void syscall(int64_t callnum) { process->syscall(callnum, tc); }$/;"	f	struct:O3ThreadState
syscall	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::syscall(uint64_t &callnum)$/;"	f	class:OzoneCPU
syscall	src/cpu/ozone/dyn_inst_impl.hh	/^OzoneDynInst<Impl>::syscall(uint64_t &callnum)$/;"	f	class:OzoneDynInst
syscall	src/cpu/simple/base.hh	/^    syscall(int64_t callnum)$/;"	f	class:BaseSimpleCPU
syscall	src/cpu/simple_thread.hh	/^    void syscall(int64_t callnum)$/;"	f	class:SimpleThread
syscall	src/cpu/thread_context.hh	/^    void syscall(int64_t callnum)$/;"	f	class:ProxyThreadContext
syscall	src/kern/linux/linux_syscalls.hh	/^        syscall = 0,$/;"	e	enum:SystemCalls::__anon87
syscall	src/kern/tru64/tru64_syscalls.hh	/^        syscall = 0,$/;"	e	enum:SystemCalls::__anon102
syscall	src/sim/process.cc	/^LiveProcess::syscall(int64_t callnum, ThreadContext *tc)$/;"	f	class:LiveProcess
syscall32Descs	src/arch/sparc/linux/process.hh	/^    static SyscallDesc syscall32Descs[];$/;"	m	class:SparcISA::SparcLinuxProcess
syscall32Descs	src/arch/sparc/linux/syscalls.cc	/^SyscallDesc SparcLinuxProcess::syscall32Descs[] = {$/;"	m	class:SparcISA::SparcLinuxProcess	file:
syscallContext	src/cpu/inorder/cpu.cc	/^InOrderCPU::syscallContext(Fault fault, ThreadID tid, DynInstPtr inst,$/;"	f	class:InOrderCPU
syscallCsAndSs	src/arch/x86/regs/misc.hh	/^        Bitfield<47,32> syscallCsAndSs;$/;"	m	namespace:X86ISA
syscallDescs	src/arch/alpha/linux/process.cc	/^SyscallDesc AlphaLinuxProcess::syscallDescs[] = {$/;"	m	class:AlphaLinuxProcess	file:
syscallDescs	src/arch/alpha/linux/process.hh	/^    static SyscallDesc syscallDescs[];$/;"	m	class:AlphaISA::AlphaLinuxProcess
syscallDescs	src/arch/alpha/tru64/process.cc	/^SyscallDesc AlphaTru64Process::syscallDescs[] = {$/;"	m	class:AlphaTru64Process	file:
syscallDescs	src/arch/alpha/tru64/process.hh	/^    static SyscallDesc syscallDescs[];$/;"	m	class:AlphaISA::AlphaTru64Process
syscallDescs	src/arch/mips/linux/process.cc	/^SyscallDesc MipsLinuxProcess::syscallDescs[] = {$/;"	m	class:MipsLinuxProcess	file:
syscallDescs	src/arch/mips/linux/process.hh	/^    static SyscallDesc syscallDescs[];$/;"	m	class:MipsLinuxProcess
syscallDescs	src/arch/power/linux/process.cc	/^SyscallDesc PowerLinuxProcess::syscallDescs[] = {$/;"	m	class:PowerLinuxProcess	file:
syscallDescs	src/arch/power/linux/process.hh	/^    static SyscallDesc syscallDescs[];$/;"	m	class:PowerLinuxProcess
syscallDescs	src/arch/sparc/linux/process.hh	/^    static SyscallDesc syscallDescs[];$/;"	m	class:SparcISA::SparcLinuxProcess
syscallDescs	src/arch/sparc/linux/syscalls.cc	/^SyscallDesc SparcLinuxProcess::syscallDescs[] = {$/;"	m	class:SparcISA::SparcLinuxProcess	file:
syscallDescs	src/arch/sparc/solaris/process.cc	/^SyscallDesc SparcSolarisProcess::syscallDescs[] = {$/;"	m	class:SparcSolarisProcess	file:
syscallDescs	src/arch/sparc/solaris/process.hh	/^    static SyscallDesc syscallDescs[];$/;"	m	class:SparcISA::SparcSolarisProcess
syscallDescs	src/arch/x86/linux/process.hh	/^    static SyscallDesc syscallDescs[];$/;"	m	class:X86ISA::I386LinuxProcess
syscallDescs	src/arch/x86/linux/process.hh	/^    static SyscallDesc syscallDescs[];$/;"	m	class:X86ISA::X86_64LinuxProcess
syscallDescs	src/arch/x86/linux/syscalls.cc	/^SyscallDesc I386LinuxProcess::syscallDescs[] = {$/;"	m	class:I386LinuxProcess	file:
syscallDescs	src/arch/x86/linux/syscalls.cc	/^SyscallDesc X86_64LinuxProcess::syscallDescs[] = {$/;"	m	class:X86_64LinuxProcess	file:
syscallDescs	src/arch/x86/process.hh	/^        SyscallDesc *syscallDescs;$/;"	m	class:X86ISA::X86LiveProcess
syscallDescs32	src/arch/arm/linux/process.cc	/^static SyscallDesc syscallDescs32[] = {$/;"	v	file:
syscallDescs64	src/arch/arm/linux/process.cc	/^static SyscallDesc syscallDescs64[] = {$/;"	v	file:
syscallNum	src/cpu/inorder/inorder_dyn_inst.hh	/^    short syscallNum;$/;"	m	class:InOrderDynInst
syscallTables	src/arch/arm/linux/process.hh	/^    std::vector<SyscallTable> syscallTables;$/;"	m	class:ArmLinuxProcessBits
syscall_num	src/cpu/inorder/cpu.hh	/^        short syscall_num;$/;"	m	class:InOrderCPU::CPUEvent
sysctl	src/kern/linux/linux_syscalls.hh	/^    sysctl = 3,$/;"	e	enum:SystemCalls::__anon87
sysfs	src/kern/linux/linux_syscalls.hh	/^    sysfs = 239,$/;"	e	enum:SystemCalls::__anon87
sysfs	src/kern/tru64/tru64_syscalls.hh	/^        sysfs = 254,$/;"	e	enum:SystemCalls::__anon102
sysinfo	src/kern/linux/linux_syscalls.hh	/^    sysinfo = 240,$/;"	e	enum:SystemCalls::__anon87
sysinfo	src/kern/tru64/tru64_syscalls.hh	/^        sysinfo = 241,$/;"	e	enum:SystemCalls::__anon102
sysinfoFunc	src/sim/syscall_emul.hh	/^sysinfoFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
syslog	src/kern/linux/linux_syscalls.hh	/^    syslog = 241,$/;"	e	enum:SystemCalls::__anon87
sysname	src/kern/linux/linux.hh	/^        char sysname[_SYS_NMLN];        \/\/!< System name.$/;"	m	struct:Linux::utsname
sysname	src/kern/operatingsystem.hh	/^        char sysname[_SYS_NMLN];        \/\/!< System name.$/;"	m	struct:OperatingSystem::__anon88
sysname	src/kern/solaris/solaris.hh	/^        char sysname[_SYS_NMLN];        \/\/!< System name.$/;"	m	struct:Solaris::utsname
sysname	src/kern/tru64/tru64.hh	/^        char sysname[_SYS_NMLN];        \/\/!< System name.$/;"	m	struct:Tru64::utsname
sysretCsAndSs	src/arch/x86/regs/misc.hh	/^        Bitfield<63,48> sysretCsAndSs;$/;"	m	namespace:X86ISA
system	src/arch/alpha/AlphaISA.py	/^    system = Param.System(Parent.any, "System this ISA object belongs to")$/;"	v	class:AlphaISA
system	src/arch/alpha/isa.hh	/^        System *system;$/;"	m	class:AlphaISA::ISA
system	src/arch/arm/ArmISA.py	/^    system = Param.System(Parent.any, "System this ISA object belongs to")$/;"	v	class:ArmISA
system	src/arch/arm/isa.hh	/^        ArmSystem *system;$/;"	m	class:ArmISA::ISA
system	src/arch/mips/MipsISA.py	/^    system = Param.System(Parent.any, "System this ISA object belongs to")$/;"	v	class:MipsISA
system	src/arch/x86/X86TLB.py	/^    system = Param.System(Parent.any, "system object")$/;"	v	class:X86PagetableWalker
system	src/arch/x86/regs/misc.hh	/^        Bitfield<15> system;$/;"	m	namespace:X86ISA
system	src/base/remote_gdb.hh	/^    System *system;$/;"	m	class:BaseRemoteGDB
system	src/cpu/BaseCPU.py	/^    system = Param.System(Parent.any, "system object")$/;"	v
system	src/cpu/base.hh	/^    System *system;$/;"	m	class:BaseCPU
system	src/cpu/inorder/cpu.hh	/^    System *system;$/;"	m	class:InOrderCPU
system	src/cpu/kvm/KvmVM.py	/^    system = Param.System(Parent.any, "system object")$/;"	v	class:KvmVM
system	src/cpu/kvm/vm.hh	/^    System *system;$/;"	m	class:KvmVM
system	src/cpu/o3/cpu.hh	/^    System *system;$/;"	m	class:FullO3CPU
system	src/cpu/ozone/cpu.hh	/^    System *system;$/;"	m	class:OzoneCPU
system	src/cpu/simple_thread.hh	/^    System *system;$/;"	m	class:SimpleThread
system	src/cpu/testers/directedtest/RubyDirectedTester.py	/^    system = Param.System(Parent.any, "System we belong to")$/;"	v	class:DirectedGenerator
system	src/cpu/testers/networktest/NetworkTest.py	/^    system = Param.System(Parent.any, "System we belong to")$/;"	v	class:NetworkTest
system	src/cpu/testers/rubytest/RubyTester.py	/^    system = Param.System(Parent.any, "System we belong to")$/;"	v	class:RubyTester
system	src/cpu/testers/traffic_gen/TrafficGen.py	/^    system = Param.System(Parent.any, "System this generator is part of")$/;"	v	class:TrafficGen
system	src/cpu/testers/traffic_gen/traffic_gen.hh	/^    System* system;$/;"	m	class:TrafficGen
system	src/dev/Device.py	/^    system = Param.System(Parent.any, "System this device is part of")$/;"	v	class:PioDevice
system	src/dev/SimpleDisk.py	/^    system = Param.System(Parent.any, "System Pointer")$/;"	v	class:SimpleDisk
system	src/dev/alpha/AlphaBackdoor.py	/^    system = Param.AlphaSystem(Parent.any, "system object")$/;"	v	class:AlphaBackdoor
system	src/dev/alpha/Tsunami.py	/^    system = Param.System(Parent.any, "system")$/;"	v	class:Tsunami
system	src/dev/alpha/backdoor.hh	/^    AlphaSystem *system;$/;"	m	class:AlphaBackdoor
system	src/dev/alpha/tsunami.hh	/^    System *system;$/;"	m	class:Tsunami
system	src/dev/arm/RealView.py	/^    system = Param.System(Parent.any, "system")$/;"	v	class:GenericTimer
system	src/dev/arm/RealView.py	/^    system = Param.System(Parent.any, "system")$/;"	v	class:RealView
system	src/dev/arm/realview.hh	/^    System *system;$/;"	m	class:RealView
system	src/dev/mips/Malta.py	/^    system = Param.System(Parent.any, "system")$/;"	v	class:Malta
system	src/dev/mips/malta.hh	/^    System *system;$/;"	m	class:Malta
system	src/dev/platform.hh	/^    System *system;$/;"	m	class:Platform
system	src/dev/simple_disk.hh	/^    System  *system;$/;"	m	class:SimpleDisk
system	src/dev/sparc/T1000.py	/^    system = Param.System(Parent.any, "system")$/;"	v	class:T1000
system	src/dev/sparc/t1000.hh	/^    System *system;$/;"	m	class:T1000
system	src/dev/x86/Pc.py	/^    system = Param.System(Parent.any, "system")$/;"	v	class:Pc
system	src/dev/x86/pc.hh	/^    System *system;$/;"	m	class:Pc
system	src/mem/Bus.py	/^    system = Param.System(Parent.any, "System that the bus belongs to.")$/;"	v	class:CoherentBus
system	src/mem/CommMonitor.py	/^    system = Param.System(Parent.any, "System that the monitor belongs to.")$/;"	v	class:CommMonitor
system	src/mem/abstract_mem.hh	/^    System* system() const { return _system; }$/;"	f	class:AbstractMemory
system	src/mem/abstract_mem.hh	/^    void system(System *sys) { _system = sys; }$/;"	f	class:AbstractMemory
system	src/mem/cache/BaseCache.py	/^    system = Param.System(Parent.any, "System we belong to")$/;"	v	class:BaseCache
system	src/mem/cache/base.hh	/^    System *system;$/;"	m	class:BaseCache
system	src/mem/cache/prefetch/base.hh	/^    System* system;$/;"	m	class:BasePrefetcher
system	src/mem/coherent_bus.hh	/^    System *system;$/;"	m	class:CoherentBus
system	src/mem/comm_monitor.hh	/^    System *system;$/;"	m	class:CommMonitor
system	src/mem/ruby/system/RubyPort.hh	/^    System* system;$/;"	m	class:RubyPort
system	src/mem/ruby/system/Sequencer.py	/^    system = Param.System(Parent.any, "system object")$/;"	v	class:RubyPort
system	src/sim/Process.py	/^    system = Param.System(Parent.any, "system process will run on")$/;"	v	class:Process
system	src/sim/process.hh	/^    System *system;$/;"	m	class:Process
systemConfigFile	src/mem/DRAMSim2.py	/^    systemConfigFile = Param.String("system.ini.example",$/;"	v	class:DRAMSim2
systemList	src/sim/system.hh	/^    static std::vector<System *> systemList;$/;"	m	class:System
systemPtr	src/cpu/checker/cpu.hh	/^    System *systemPtr;$/;"	m	class:CheckerCPU
system_conf	src/mem/ruby/network/fault_model/FaultModel.hh	/^    struct system_conf$/;"	s	class:FaultModel
system_port	src/sim/System.py	/^    system_port = MasterPort("System port")$/;"	v	class:System
system_rev	src/arch/alpha/AlphaSystem.py	/^    system_rev = 1 << 10$/;"	v	class:FreebsdAlphaSystem
system_rev	src/arch/alpha/AlphaSystem.py	/^    system_rev = 1 << 10$/;"	v	class:LinuxAlphaSystem
system_rev	src/arch/alpha/AlphaSystem.py	/^    system_rev = 2<<1$/;"	v	class:Tru64AlphaSystem
system_rev	src/arch/alpha/AlphaSystem.py	/^    system_rev = Param.UInt64("Revision of system we are emulating")$/;"	v	class:AlphaSystem
system_rev	src/arch/mips/MipsSystem.py	/^    system_rev = 1 << 10$/;"	v	class:BareIronMipsSystem
system_rev	src/arch/mips/MipsSystem.py	/^    system_rev = 1 << 10$/;"	v	class:LinuxMipsSystem
system_rev	src/arch/mips/MipsSystem.py	/^    system_rev = Param.UInt64("Revision of system we are emulating")$/;"	v	class:MipsSystem
system_type	src/arch/alpha/AlphaSystem.py	/^    system_type = 12$/;"	v	class:Tru64AlphaSystem
system_type	src/arch/alpha/AlphaSystem.py	/^    system_type = 34$/;"	v	class:FreebsdAlphaSystem
system_type	src/arch/alpha/AlphaSystem.py	/^    system_type = 34$/;"	v	class:LinuxAlphaSystem
system_type	src/arch/alpha/AlphaSystem.py	/^    system_type = Param.UInt64("Type of system we are emulating")$/;"	v	class:AlphaSystem
system_type	src/arch/mips/MipsSystem.py	/^    system_type = 34$/;"	v	class:BareIronMipsSystem
system_type	src/arch/mips/MipsSystem.py	/^    system_type = 34$/;"	v	class:LinuxMipsSystem
system_type	src/arch/mips/MipsSystem.py	/^    system_type = Param.UInt64("Type of system we are emulating")$/;"	v	class:MipsSystem
t	src/arch/arm/miscregs.hh	/^        Bitfield<5> t;$/;"	m	namespace:ArmISA
t0	src/arch/arm/miscregs.hh	/^        Bitfield<0>  t0;$/;"	m	namespace:ArmISA
t0sz	src/arch/arm/miscregs.hh	/^        Bitfield<2, 0> t0sz;$/;"	m	namespace:ArmISA
t0sz	src/arch/arm/miscregs.hh	/^        Bitfield<3, 0> t0sz;$/;"	m	namespace:ArmISA
t0sz	src/arch/arm/miscregs.hh	/^        Bitfield<5, 0> t0sz;$/;"	m	namespace:ArmISA
t1	src/arch/arm/miscregs.hh	/^        Bitfield<1>  t1;$/;"	m	namespace:ArmISA
t10	src/arch/arm/miscregs.hh	/^        Bitfield<10> t10;$/;"	m	namespace:ArmISA
t11	src/arch/arm/miscregs.hh	/^        Bitfield<11> t11;$/;"	m	namespace:ArmISA
t12	src/arch/arm/miscregs.hh	/^        Bitfield<12> t12;$/;"	m	namespace:ArmISA
t13	src/arch/arm/miscregs.hh	/^        Bitfield<13> t13;$/;"	m	namespace:ArmISA
t15	src/arch/arm/miscregs.hh	/^        Bitfield<15> t15;$/;"	m	namespace:ArmISA
t1sz	src/arch/arm/miscregs.hh	/^        Bitfield<21, 16> t1sz;$/;"	m	namespace:ArmISA
t2	src/arch/arm/miscregs.hh	/^        Bitfield<2>  t2;$/;"	m	namespace:ArmISA
t3	src/arch/arm/miscregs.hh	/^        Bitfield<3>  t3;$/;"	m	namespace:ArmISA
t4	src/arch/arm/miscregs.hh	/^        Bitfield<4>  t4;$/;"	m	namespace:ArmISA
t5	src/arch/arm/miscregs.hh	/^        Bitfield<5>  t5;$/;"	m	namespace:ArmISA
t6	src/arch/arm/miscregs.hh	/^        Bitfield<6>  t6;$/;"	m	namespace:ArmISA
t7	src/arch/arm/miscregs.hh	/^        Bitfield<7>  t7;$/;"	m	namespace:ArmISA
t8	src/arch/arm/miscregs.hh	/^        Bitfield<8>  t8;$/;"	m	namespace:ArmISA
t9	src/arch/arm/miscregs.hh	/^        Bitfield<9>  t9;$/;"	m	namespace:ArmISA
tBURST	src/mem/DRAMCtrl.py	/^    tBURST = '20ns'$/;"	v	class:WideIO_200_x128
tBURST	src/mem/DRAMCtrl.py	/^    tBURST = '5ns'$/;"	v	class:DDR3_1600_x64
tBURST	src/mem/DRAMCtrl.py	/^    tBURST = '5ns'$/;"	v	class:LPDDR3_1600_x32
tBURST	src/mem/DRAMCtrl.py	/^    tBURST = '6ns'$/;"	v	class:DDR3_1333_x64_DRAMSim2
tBURST	src/mem/DRAMCtrl.py	/^    tBURST = '7.5ns'$/;"	v	class:LPDDR2_S4_1066_x32
tBURST	src/mem/DRAMCtrl.py	/^    tBURST = Param.Latency("Burst duration (for DDR burst length \/ 2 cycles)")$/;"	v	class:DRAMCtrl
tBURST	src/mem/dram_ctrl.hh	/^    const Tick tBURST;$/;"	m	class:DRAMCtrl
tCL	src/mem/DRAMCtrl.py	/^    tCL = '13.75ns'$/;"	v	class:DDR3_1600_x64
tCL	src/mem/DRAMCtrl.py	/^    tCL = '15ns'$/;"	v	class:DDR3_1333_x64_DRAMSim2
tCL	src/mem/DRAMCtrl.py	/^    tCL = '15ns'$/;"	v	class:LPDDR2_S4_1066_x32
tCL	src/mem/DRAMCtrl.py	/^    tCL = '15ns'$/;"	v	class:LPDDR3_1600_x32
tCL	src/mem/DRAMCtrl.py	/^    tCL = '18ns'$/;"	v	class:WideIO_200_x128
tCL	src/mem/DRAMCtrl.py	/^    tCL = Param.Latency("CAS latency")$/;"	v	class:DRAMCtrl
tCL	src/mem/dram_ctrl.hh	/^    const Tick tCL;$/;"	m	class:DRAMCtrl
tFaw	src/mem/ruby/system/RubyMemoryControl.py	/^    tFaw = Param.Int(0, "");$/;"	v	class:RubyMemoryControl
tRAS	src/mem/DRAMCtrl.py	/^    tRAS = '35ns'$/;"	v	class:DDR3_1600_x64
tRAS	src/mem/DRAMCtrl.py	/^    tRAS = '36ns'$/;"	v	class:DDR3_1333_x64_DRAMSim2
tRAS	src/mem/DRAMCtrl.py	/^    tRAS = '42ns'$/;"	v	class:LPDDR2_S4_1066_x32
tRAS	src/mem/DRAMCtrl.py	/^    tRAS = '42ns'$/;"	v	class:LPDDR3_1600_x32
tRAS	src/mem/DRAMCtrl.py	/^    tRAS = '42ns'$/;"	v	class:WideIO_200_x128
tRAS	src/mem/DRAMCtrl.py	/^    tRAS = Param.Latency("ACT to PRE delay")$/;"	v	class:DRAMCtrl
tRAS	src/mem/dram_ctrl.hh	/^    const Tick tRAS;$/;"	m	class:DRAMCtrl
tRASDoneAt	src/mem/dram_ctrl.hh	/^        Tick tRASDoneAt;$/;"	m	class:DRAMCtrl::Bank
tRCD	src/mem/DRAMCtrl.py	/^    tRCD = '13.75ns'$/;"	v	class:DDR3_1600_x64
tRCD	src/mem/DRAMCtrl.py	/^    tRCD = '15ns'$/;"	v	class:DDR3_1333_x64_DRAMSim2
tRCD	src/mem/DRAMCtrl.py	/^    tRCD = '15ns'$/;"	v	class:LPDDR2_S4_1066_x32
tRCD	src/mem/DRAMCtrl.py	/^    tRCD = '15ns'$/;"	v	class:LPDDR3_1600_x32
tRCD	src/mem/DRAMCtrl.py	/^    tRCD = '18ns'$/;"	v	class:WideIO_200_x128
tRCD	src/mem/DRAMCtrl.py	/^    tRCD = Param.Latency("RAS to CAS delay")$/;"	v	class:DRAMCtrl
tRCD	src/mem/dram_ctrl.hh	/^    const Tick tRCD;$/;"	m	class:DRAMCtrl
tREFI	src/mem/DRAMCtrl.py	/^    tREFI = '3.9us'$/;"	v	class:LPDDR2_S4_1066_x32
tREFI	src/mem/DRAMCtrl.py	/^    tREFI = '3.9us'$/;"	v	class:LPDDR3_1600_x32
tREFI	src/mem/DRAMCtrl.py	/^    tREFI = '3.9us'$/;"	v	class:WideIO_200_x128
tREFI	src/mem/DRAMCtrl.py	/^    tREFI = '7.8us'$/;"	v	class:DDR3_1333_x64_DRAMSim2
tREFI	src/mem/DRAMCtrl.py	/^    tREFI = '7.8us'$/;"	v	class:DDR3_1600_x64
tREFI	src/mem/DRAMCtrl.py	/^    tREFI = Param.Latency("Refresh command interval")$/;"	v	class:DRAMCtrl
tREFI	src/mem/dram_ctrl.hh	/^    const Tick tREFI;$/;"	m	class:DRAMCtrl
tRFC	src/mem/DRAMCtrl.py	/^    tRFC = '130ns'$/;"	v	class:LPDDR2_S4_1066_x32
tRFC	src/mem/DRAMCtrl.py	/^    tRFC = '130ns'$/;"	v	class:LPDDR3_1600_x32
tRFC	src/mem/DRAMCtrl.py	/^    tRFC = '160ns'$/;"	v	class:DDR3_1333_x64_DRAMSim2
tRFC	src/mem/DRAMCtrl.py	/^    tRFC = '210ns'$/;"	v	class:WideIO_200_x128
tRFC	src/mem/DRAMCtrl.py	/^    tRFC = '300ns'$/;"	v	class:DDR3_1600_x64
tRFC	src/mem/DRAMCtrl.py	/^    tRFC = Param.Latency("Refresh cycle time")$/;"	v	class:DRAMCtrl
tRFC	src/mem/dram_ctrl.hh	/^    const Tick tRFC;$/;"	m	class:DRAMCtrl
tRP	src/mem/DRAMCtrl.py	/^    tRP = '13.75ns'$/;"	v	class:DDR3_1600_x64
tRP	src/mem/DRAMCtrl.py	/^    tRP = '15ns'$/;"	v	class:DDR3_1333_x64_DRAMSim2
tRP	src/mem/DRAMCtrl.py	/^    tRP = '15ns'$/;"	v	class:LPDDR2_S4_1066_x32
tRP	src/mem/DRAMCtrl.py	/^    tRP = '15ns'$/;"	v	class:LPDDR3_1600_x32
tRP	src/mem/DRAMCtrl.py	/^    tRP = '18ns'$/;"	v	class:WideIO_200_x128
tRP	src/mem/DRAMCtrl.py	/^    tRP = Param.Latency("Row precharge time")$/;"	v	class:DRAMCtrl
tRP	src/mem/dram_ctrl.hh	/^    const Tick tRP;$/;"	m	class:DRAMCtrl
tRRD	src/mem/DRAMCtrl.py	/^    tRRD = '10.0ns'$/;"	v	class:LPDDR2_S4_1066_x32
tRRD	src/mem/DRAMCtrl.py	/^    tRRD = '10.0ns'$/;"	v	class:LPDDR3_1600_x32
tRRD	src/mem/DRAMCtrl.py	/^    tRRD = '10.0ns'$/;"	v	class:WideIO_200_x128
tRRD	src/mem/DRAMCtrl.py	/^    tRRD = '6.0ns'$/;"	v	class:DDR3_1333_x64_DRAMSim2
tRRD	src/mem/DRAMCtrl.py	/^    tRRD = '6.25ns'$/;"	v	class:DDR3_1600_x64
tRRD	src/mem/DRAMCtrl.py	/^    tRRD = Param.Latency("ACT to ACT delay")$/;"	v	class:DRAMCtrl
tRRD	src/mem/dram_ctrl.hh	/^    const Tick tRRD;$/;"	m	class:DRAMCtrl
tWTR	src/mem/DRAMCtrl.py	/^    tWTR = '15ns'$/;"	v	class:WideIO_200_x128
tWTR	src/mem/DRAMCtrl.py	/^    tWTR = '7.5ns'$/;"	v	class:DDR3_1333_x64_DRAMSim2
tWTR	src/mem/DRAMCtrl.py	/^    tWTR = '7.5ns'$/;"	v	class:DDR3_1600_x64
tWTR	src/mem/DRAMCtrl.py	/^    tWTR = '7.5ns'$/;"	v	class:LPDDR2_S4_1066_x32
tWTR	src/mem/DRAMCtrl.py	/^    tWTR = '7.5ns'$/;"	v	class:LPDDR3_1600_x32
tWTR	src/mem/DRAMCtrl.py	/^    tWTR = Param.Latency("Write to read switching time")$/;"	v	class:DRAMCtrl
tWTR	src/mem/dram_ctrl.hh	/^    const Tick tWTR;$/;"	m	class:DRAMCtrl
tXAW	src/mem/DRAMCtrl.py	/^    tXAW = '30ns'$/;"	v	class:DDR3_1333_x64_DRAMSim2
tXAW	src/mem/DRAMCtrl.py	/^    tXAW = '40ns'$/;"	v	class:DDR3_1600_x64
tXAW	src/mem/DRAMCtrl.py	/^    tXAW = '50ns'$/;"	v	class:LPDDR2_S4_1066_x32
tXAW	src/mem/DRAMCtrl.py	/^    tXAW = '50ns'$/;"	v	class:LPDDR3_1600_x32
tXAW	src/mem/DRAMCtrl.py	/^    tXAW = '50ns'$/;"	v	class:WideIO_200_x128
tXAW	src/mem/DRAMCtrl.py	/^    tXAW = Param.Latency("X activation window")$/;"	v	class:DRAMCtrl
tXAW	src/mem/dram_ctrl.hh	/^    const Tick tXAW;$/;"	m	class:DRAMCtrl
t_AND	src/mem/slicc/parser.py	/^    t_AND = r'&&'$/;"	v	class:SLICC
t_ANY_COMMENT	src/arch/micro_asm.py	/^def t_ANY_COMMENT(t):$/;"	f
t_ANY_DOT	src/arch/micro_asm.py	/^t_ANY_DOT    = r'\\.'$/;"	v
t_ANY_ID	src/arch/micro_asm.py	/^def t_ANY_ID(t):$/;"	f
t_ANY_LPAREN	src/arch/micro_asm.py	/^t_ANY_LPAREN = r'\\('$/;"	v
t_ANY_MULTILINECOMMENT	src/arch/micro_asm.py	/^def t_ANY_MULTILINECOMMENT(t):$/;"	f
t_ANY_RPAREN	src/arch/micro_asm.py	/^t_ANY_RPAREN = r'\\)'$/;"	v
t_ANY_SEMI	src/arch/micro_asm.py	/^t_ANY_SEMI   = r';'$/;"	v
t_ANY_error	src/arch/micro_asm.py	/^def t_ANY_error(t):$/;"	f
t_ANY_ignore	src/arch/micro_asm.py	/^t_ANY_ignore = ' \\t\\x0c'$/;"	v
t_ASTERISK	src/arch/isa_parser.py	/^    t_ASTERISK         = r'\\*'$/;"	v	class:ISAParser
t_CODELIT	src/arch/isa_parser.py	/^    def t_CODELIT(self, t):$/;"	m	class:ISAParser
t_COLON	src/arch/isa_parser.py	/^    t_COLON            = r':'$/;"	v	class:ISAParser
t_COMMA	src/arch/isa_parser.py	/^    t_COMMA            = r','$/;"	v	class:ISAParser
t_CPPDIRECTIVE	src/arch/isa_parser.py	/^    def t_CPPDIRECTIVE(self, t):$/;"	m	class:ISAParser
t_DASH	src/mem/slicc/parser.py	/^    t_DASH = r'-'$/;"	v	class:SLICC
t_DBLCOLON	src/arch/isa_parser.py	/^    t_DBLCOLON         = r'::'$/;"	v	class:ISAParser
t_DECR	src/mem/slicc/parser.py	/^    t_DECR = r'--'$/;"	v	class:SLICC
t_DOT	src/arch/isa_parser.py	/^    t_DOT              = r'\\.'$/;"	v	class:ISAParser
t_DOT	src/mem/slicc/parser.py	/^    t_DOT = r'\\.'$/;"	v	class:SLICC
t_DOUBLE_COLON	src/mem/slicc/parser.py	/^    t_DOUBLE_COLON = r'::'$/;"	v	class:SLICC
t_ENDFILE	src/arch/isa_parser.py	/^    def t_ENDFILE(self, t):$/;"	m	class:ISAParser
t_FLOATNUMBER	src/mem/slicc/parser.py	/^    def t_FLOATNUMBER(self, t):$/;"	m	class:SLICC
t_GREATER	src/arch/isa_parser.py	/^    t_GREATER          = r'\\>'$/;"	v	class:ISAParser
t_GT	src/mem/slicc/parser.py	/^    t_GT = r'>'$/;"	v	class:SLICC
t_ID	src/arch/isa_parser.py	/^    def t_ID(self, t):$/;"	m	class:ISAParser
t_IDENT	src/mem/slicc/parser.py	/^    def t_IDENT(self, t):$/;"	m	class:SLICC
t_INCR	src/mem/slicc/parser.py	/^    t_INCR = r'\\+\\+'$/;"	v	class:SLICC
t_INITIAL_LBRACE	src/arch/micro_asm.py	/^def t_INITIAL_LBRACE(t):$/;"	f
t_INITIAL_NEWLINE	src/arch/micro_asm.py	/^def t_INITIAL_NEWLINE(t):$/;"	f
t_INTLIT	src/arch/isa_parser.py	/^    def t_INTLIT(self, t):$/;"	m	class:ISAParser
t_LBRACE	src/arch/isa_parser.py	/^    t_LBRACE           = r'\\{'$/;"	v	class:ISAParser
t_LBRACKET	src/arch/isa_parser.py	/^    t_LBRACKET         = r'\\['$/;"	v	class:ISAParser
t_LEFTSHIFT	src/mem/slicc/parser.py	/^    t_LEFTSHIFT = r'<<'$/;"	v	class:SLICC
t_LESS	src/arch/isa_parser.py	/^    t_LESS             = r'\\<'$/;"	v	class:ISAParser
t_LPAREN	src/arch/isa_parser.py	/^    t_LPAREN           = r'\\('$/;"	v	class:ISAParser
t_LT	src/mem/slicc/parser.py	/^    t_LT = r'<'$/;"	v	class:SLICC
t_NEWFILE	src/arch/isa_parser.py	/^    def t_NEWFILE(self, t):$/;"	m	class:ISAParser
t_NEWLINE	src/arch/isa_parser.py	/^    def t_NEWLINE(self, t):$/;"	m	class:ISAParser
t_NOT	src/mem/slicc/parser.py	/^    t_NOT = r'!'$/;"	v	class:SLICC
t_NUMBER	src/mem/slicc/parser.py	/^    def t_NUMBER(self, t):$/;"	m	class:SLICC
t_OR	src/mem/slicc/parser.py	/^    t_OR = r'\\|\\|'$/;"	v	class:SLICC
t_PLUS	src/mem/slicc/parser.py	/^    t_PLUS = r'\\+'$/;"	v	class:SLICC
t_RBRACE	src/arch/isa_parser.py	/^    t_RBRACE           = r'\\}'$/;"	v	class:ISAParser
t_RBRACKET	src/arch/isa_parser.py	/^    t_RBRACKET         = r'\\]'$/;"	v	class:ISAParser
t_RIGHTSHIFT	src/mem/slicc/parser.py	/^    t_RIGHTSHIFT = r'>>'$/;"	v	class:SLICC
t_RPAREN	src/arch/isa_parser.py	/^    t_RPAREN           = r'\\)'$/;"	v	class:ISAParser
t_SEMI	src/arch/isa_parser.py	/^    t_SEMI             = r';'$/;"	v	class:ISAParser
t_SEMI	src/mem/slicc/parser.py	/^    t_SEMI = r';'$/;"	v	class:SLICC
t_SLASH	src/mem/slicc/parser.py	/^    t_SLASH = r'\/'$/;"	v	class:SLICC
t_STAR	src/mem/slicc/parser.py	/^    t_STAR = r'\\*'$/;"	v	class:SLICC
t_STRING1	src/mem/slicc/parser.py	/^    def t_STRING1(self, t):$/;"	m	class:SLICC
t_STRING2	src/mem/slicc/parser.py	/^    def t_STRING2(self, t):$/;"	m	class:SLICC
t_STRLIT	src/arch/isa_parser.py	/^    def t_STRLIT(self, t):$/;"	m	class:ISAParser
t_asm_ID	src/arch/micro_asm.py	/^def t_asm_ID(t):$/;"	f
t_asm_NEWLINE	src/arch/micro_asm.py	/^def t_asm_NEWLINE(t):$/;"	f
t_asm_RBRACE	src/arch/micro_asm.py	/^def t_asm_RBRACE(t):$/;"	f
t_c_comment	src/mem/slicc/parser.py	/^    def t_c_comment(self, t):$/;"	m	class:SLICC
t_comment	src/arch/isa_parser.py	/^    def t_comment(self, t):$/;"	m	class:ISAParser
t_cpp_comment	src/mem/slicc/parser.py	/^    def t_cpp_comment(self, t):$/;"	m	class:SLICC
t_error	src/arch/isa_parser.py	/^    def t_error(self, t):$/;"	m	class:ISAParser
t_error	src/python/m5/util/grammar.py	/^    def t_error(self, t):$/;"	m	class:Grammar
t_ignore	src/arch/isa_parser.py	/^    t_ignore = ' \\t\\x0c'$/;"	v	class:ISAParser
t_ignore	src/mem/slicc/parser.py	/^    t_ignore = '\\t '$/;"	v	class:SLICC
t_newline	src/mem/slicc/parser.py	/^    def t_newline(self, t):$/;"	m	class:SLICC
t_params_COLON	src/arch/micro_asm.py	/^def t_params_COLON(t):$/;"	f
t_params_NEWLINE	src/arch/micro_asm.py	/^def t_params_NEWLINE(t):$/;"	f
t_params_PARAMS	src/arch/micro_asm.py	/^def t_params_PARAMS(t):$/;"	f
t_params_SEMI	src/arch/micro_asm.py	/^def t_params_SEMI(t):$/;"	f
ta	src/arch/mips/pra_constants.hh	/^    Bitfield<19, 16> ta;$/;"	m	namespace:MipsISA
table	src/arch/alpha/tlb.hh	/^    TlbEntry *table;        \/\/ the Page Table$/;"	m	class:AlphaISA::TLB
table	src/arch/arm/tlb.hh	/^    TlbEntry* table;     \/\/ the Page Table$/;"	m	class:ArmISA::TLB
table	src/arch/mips/tlb.hh	/^    MipsISA::PTE *table;        \/\/ the Page Table$/;"	m	class:MipsISA::TLB
table	src/arch/power/tlb.hh	/^    PowerISA::PTE *table;       \/\/ the Page Table$/;"	m	class:PowerISA::TLB
table	src/base/inifile.hh	/^        EntryTable      table;          \/\/\/< Table of entries.$/;"	m	class:IniFile::Section
table	src/base/inifile.hh	/^    SectionTable table;$/;"	m	class:IniFile
table	src/cpu/ozone/rename_table.hh	/^    DynInstPtr table[TheISA::TotalNumRegs];$/;"	m	class:RenameTable
table	src/dev/disk_image.hh	/^    SectorTable *table;$/;"	m	class:CowDiskImage
table	src/kern/tru64/tru64_syscalls.hh	/^        table = 85,$/;"	e	enum:SystemCalls::__anon102
table	src/mem/cache/prefetch/stride.hh	/^    std::list<StrideEntry*> table[Max_Contexts];$/;"	m	class:StridePrefetcher
tableAddr	src/arch/x86/bios/intelmp.hh	/^    uint32_t tableAddr;$/;"	m	class:X86ISA::IntelMP::FloatingPointer
tableAddr	src/arch/x86/bios/smbios.hh	/^            uint32_t tableAddr;$/;"	m	struct:X86ISA::SMBios::SMBiosTable::SMBiosHeader::IntermediateHeader
tableFunc	src/arch/alpha/tru64/process.cc	/^tableFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	file:
tableWalker	src/arch/arm/table_walker.hh	/^        TableWalker *tableWalker;$/;"	m	class:ArmISA::TableWalker::WalkerState
tableWalker	src/arch/arm/tlb.hh	/^    TableWalker *tableWalker;$/;"	m	class:ArmISA::TLB
table_size	src/dev/DiskImage.py	/^    table_size = Param.Int(65536, "initial table size")$/;"	v	class:CowDiskImage
tac	src/arch/arm/miscregs.hh	/^        Bitfield<21>     tac;$/;"	m	namespace:ArmISA
tacr	src/arch/arm/miscregs.hh	/^        Bitfield<21>     tacr;  \/\/ AArch64$/;"	m	namespace:ArmISA
tadv	src/dev/i8254xGBe_defs.hh	/^    TADV tadv;$/;"	m	struct:iGbReg::Regs
tadvEvent	src/dev/i8254xGBe.hh	/^    EventWrapper<IGbE, &IGbE::tadvProcess> tadvEvent;$/;"	m	class:IGbE
tadvProcess	src/dev/i8254xGBe.hh	/^    void tadvProcess() {$/;"	f	class:IGbE
tag	src/arch/alpha/pagetable.hh	/^    Addr tag;               \/\/ virtual page number tag$/;"	m	struct:AlphaISA::TlbEntry
tag	src/arch/arm/linux/atag.hh	/^    uint32_t tag() { return CmdTag; }$/;"	f	class:AtagCmdline
tag	src/arch/arm/linux/atag.hh	/^    uint32_t tag() { return CoreTag; }$/;"	f	class:AtagCore
tag	src/arch/arm/linux/atag.hh	/^    uint32_t tag() { return MemTag; }$/;"	f	class:AtagMem
tag	src/arch/arm/linux/atag.hh	/^    uint32_t tag() { return NoneTag; }$/;"	f	class:AtagNone
tag	src/arch/arm/linux/atag.hh	/^    uint32_t tag() { return RevTag; }$/;"	f	class:AtagRev
tag	src/arch/arm/linux/atag.hh	/^    uint32_t tag() { return SerialTag; }$/;"	f	class:AtagSerial
tag	src/cpu/pred/btb.hh	/^        Addr tag;$/;"	m	struct:DefaultBTB::BTBEntry
tag	src/mem/cache/blk.hh	/^    Addr tag;$/;"	m	class:CacheBlk
tag	src/unittest/refcnttest.cc	/^    tag()$/;"	f	class:__anon106::TestRC
tagAccessLatency	src/mem/ruby/system/Cache.py	/^    tagAccessLatency = Param.Cycles(1, "cycles for a tag array access")$/;"	v	class:RubyCache
tagAccesses	src/mem/cache/tags/base.hh	/^    Stats::Scalar tagAccesses;$/;"	m	class:BaseTags
tagArray	src/mem/ruby/system/CacheMemory.hh	/^    BankedArray tagArray;$/;"	m	class:CacheMemory
tagArrayBanks	src/mem/ruby/system/Cache.py	/^    tagArrayBanks = Param.Int(1, "Number of banks for the tag array")$/;"	v	class:RubyCache
tagBits	src/cpu/pred/btb.hh	/^    unsigned tagBits;$/;"	m	class:DefaultBTB
tagHash	src/mem/cache/tags/fa_lru.hh	/^    hash_t tagHash;$/;"	m	class:FALRU
tagIterator	src/mem/cache/tags/fa_lru.hh	/^    typedef hash_t::const_iterator tagIterator;$/;"	t	class:FALRU
tagMask	src/cpu/pred/btb.hh	/^    unsigned tagMask;$/;"	m	class:DefaultBTB
tagRAMLatency	src/arch/arm/miscregs.hh	/^      Bitfield<8,6>   tagRAMLatency;$/;"	m	namespace:ArmISA
tagRAMSetup	src/arch/arm/miscregs.hh	/^      Bitfield<9>     tagRAMSetup;$/;"	m	namespace:ArmISA
tagRAMSlice	src/arch/arm/miscregs.hh	/^      Bitfield<12>    tagRAMSlice;$/;"	m	namespace:ArmISA
tagShift	src/mem/cache/tags/lru.hh	/^    int tagShift;$/;"	m	class:LRU
tagShiftAmt	src/cpu/pred/btb.hh	/^    unsigned tagShiftAmt;$/;"	m	class:DefaultBTB
tag_access	src/arch/sparc/tlb.hh	/^    uint64_t tag_access;$/;"	m	class:SparcISA::TLB
tags	src/mem/cache/BaseCache.py	/^    tags = Param.BaseTags(LRU(), "Tag Store for LRU caches")$/;"	v	class:BaseCache
tags	src/mem/cache/cache.hh	/^    TagStore *tags;$/;"	m	class:Cache
tags	src/mem/cache/tags/base.hh	/^    BaseTags *tags;$/;"	m	class:BaseTagsCallback
tags	src/mem/cache/tags/base.hh	/^    BaseTags *tags;$/;"	m	class:BaseTagsDumpCallback
tagsInUse	src/mem/cache/tags/base.hh	/^    Stats::Average tagsInUse;$/;"	m	class:BaseTags
tail	src/cpu/o3/rob.hh	/^    InstIt tail;$/;"	m	class:ROB
tail	src/mem/cache/tags/fa_lru.hh	/^    FALRUBlk *tail;$/;"	m	class:FALRU
takeCheckpoint	src/sim/debug.cc	/^takeCheckpoint(Tick when)$/;"	f
takeInt	src/arch/arm/interrupts.cc	/^ArmISA::Interrupts::takeInt(ThreadContext *tc, InterruptTypes int_type) const$/;"	f	class:ArmISA::Interrupts
takeOverFrom	src/arch/alpha/decoder.hh	/^    void takeOverFrom(Decoder * old) {}$/;"	f	class:AlphaISA::Decoder
takeOverFrom	src/arch/arm/decoder.hh	/^    void takeOverFrom(Decoder *old) {}$/;"	f	class:ArmISA::Decoder
takeOverFrom	src/arch/mips/decoder.hh	/^    void takeOverFrom(Decoder *old) {}$/;"	f	class:MipsISA::Decoder
takeOverFrom	src/arch/power/decoder.hh	/^    void takeOverFrom(Decoder *old) {}$/;"	f	class:PowerISA::Decoder
takeOverFrom	src/arch/sparc/decoder.hh	/^    void takeOverFrom(Decoder *old) {}$/;"	f	class:SparcISA::Decoder
takeOverFrom	src/arch/x86/decoder.hh	/^    void takeOverFrom(Decoder *old)$/;"	f	class:X86ISA::Decoder
takeOverFrom	src/cpu/BaseCPU.py	/^    def takeOverFrom(self, old_cpu):$/;"	f
takeOverFrom	src/cpu/base.cc	/^BaseCPU::takeOverFrom(BaseCPU *oldCPU)$/;"	f	class:BaseCPU
takeOverFrom	src/cpu/checker/cpu_impl.hh	/^Checker<Impl>::takeOverFrom(BaseCPU *oldCPU)$/;"	f	class:Checker
takeOverFrom	src/cpu/checker/thread_context.hh	/^    void takeOverFrom(ThreadContext *oldContext)$/;"	f	class:CheckerThreadContext
takeOverFrom	src/cpu/inorder/cpu.cc	/^InOrderCPU::takeOverFrom(BaseCPU *oldCPU)$/;"	f	class:InOrderCPU
takeOverFrom	src/cpu/inorder/first_stage.cc	/^FirstStage::takeOverFrom()$/;"	f	class:FirstStage
takeOverFrom	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::takeOverFrom()$/;"	f	class:PipelineStage
takeOverFrom	src/cpu/inorder/thread_context.cc	/^InOrderThreadContext::takeOverFrom(ThreadContext *old_context)$/;"	f	class:InOrderThreadContext
takeOverFrom	src/cpu/kvm/base.cc	/^BaseKvmCPU::takeOverFrom(BaseCPU *cpu)$/;"	f	class:BaseKvmCPU
takeOverFrom	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::takeOverFrom()$/;"	f	class:DefaultCommit
takeOverFrom	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::takeOverFrom(BaseCPU *oldCPU)$/;"	f	class:FullO3CPU
takeOverFrom	src/cpu/o3/decode.hh	/^    void takeOverFrom() { resetStage(); }$/;"	f	class:DefaultDecode
takeOverFrom	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::takeOverFrom()$/;"	f	class:DefaultFetch
takeOverFrom	src/cpu/o3/fu_pool.hh	/^    void takeOverFrom() {};$/;"	f	class:FUPool
takeOverFrom	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::takeOverFrom()$/;"	f	class:DefaultIEW
takeOverFrom	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::takeOverFrom()$/;"	f	class:InstructionQueue
takeOverFrom	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::takeOverFrom()$/;"	f	class:LSQ
takeOverFrom	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::takeOverFrom()$/;"	f	class:LSQUnit
takeOverFrom	src/cpu/o3/mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::takeOverFrom()$/;"	f	class:MemDepUnit
takeOverFrom	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::takeOverFrom()$/;"	f	class:DefaultRename
takeOverFrom	src/cpu/o3/rob_impl.hh	/^ROB<Impl>::takeOverFrom()$/;"	f	class:ROB
takeOverFrom	src/cpu/o3/thread_context_impl.hh	/^O3ThreadContext<Impl>::takeOverFrom(ThreadContext *old_context)$/;"	f	class:O3ThreadContext
takeOverFrom	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::OzoneTC::takeOverFrom(ThreadContext *old_context)$/;"	f	class:OzoneCPU::OzoneTC
takeOverFrom	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::takeOverFrom(BaseCPU *oldCPU)$/;"	f	class:OzoneCPU
takeOverFrom	src/cpu/ozone/front_end_impl.hh	/^FrontEnd<Impl>::takeOverFrom(ThreadContext *old_tc)$/;"	f	class:FrontEnd
takeOverFrom	src/cpu/ozone/inorder_back_end.hh	/^    void takeOverFrom(ThreadContext *old_tc = NULL) { panic("Not implemented!"); }$/;"	f	class:InorderBackEnd
takeOverFrom	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::takeOverFrom(ThreadContext *old_tc)$/;"	f	class:LWBackEnd
takeOverFrom	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::takeOverFrom(ThreadContext *old_tc)$/;"	f	class:OzoneLWLSQ
takeOverFrom	src/cpu/simple/atomic.cc	/^AtomicSimpleCPU::takeOverFrom(BaseCPU *oldCPU)$/;"	f	class:AtomicSimpleCPU
takeOverFrom	src/cpu/simple/timing.cc	/^TimingSimpleCPU::takeOverFrom(BaseCPU *oldCPU)$/;"	f	class:TimingSimpleCPU
takeOverFrom	src/cpu/simple_thread.cc	/^SimpleThread::takeOverFrom(ThreadContext *oldContext)$/;"	f	class:SimpleThread
takeOverFrom	src/cpu/thread_context.cc	/^takeOverFrom(ThreadContext &ntc, ThreadContext &otc)$/;"	f
takeOverFrom	src/cpu/thread_context.hh	/^    void takeOverFrom(ThreadContext *oldContext)$/;"	f	class:ProxyThreadContext
takenBkpt	src/arch/alpha/remote_gdb.hh	/^    Addr takenBkpt;$/;"	m	class:AlphaISA::RemoteGDB
takenBkpt	src/arch/arm/remote_gdb.hh	/^  Addr takenBkpt;$/;"	m	class:ArmISA::RemoteGDB
takenBkpt	src/arch/mips/remote_gdb.hh	/^        Addr takenBkpt;$/;"	m	class:MipsISA::RemoteGDB
tanar	src/dev/ns_gige.hh	/^    uint32_t    tanar;$/;"	m	struct:dp_regs
taner	src/dev/ns_gige.hh	/^    uint32_t    taner;$/;"	m	struct:dp_regs
tanlpar	src/dev/ns_gige.hh	/^    uint32_t    tanlpar;$/;"	m	struct:dp_regs
tap	src/dev/ethertap.cc	/^    EtherTap *tap;$/;"	m	class:TapEvent	file:
tap	src/dev/ethertap.cc	/^    EtherTap *tap;$/;"	m	class:TapListener	file:
tap	src/dev/ethertap.hh	/^        EtherTap *tap;$/;"	m	class:EtherTap::TxEvent
tap	src/dev/ethertap.hh	/^    EtherTap *tap;$/;"	m	class:EtherTapInt
targTC	src/arch/mips/mt_constants.hh	/^    Bitfield<7,  0>  targTC;$/;"	m	namespace:MipsISA
target	src/cpu/pred/btb.hh	/^        TheISA::PCState target;$/;"	m	struct:DefaultBTB::BTBEntry
targetAddr	src/arch/power/insts/branch.hh	/^    uint32_t targetAddr;$/;"	m	class:PowerISA::BranchNonPCRel
targetAddr	src/arch/power/insts/branch.hh	/^    uint32_t targetAddr;$/;"	m	class:PowerISA::BranchNonPCRelCond
targetCS	src/arch/x86/regs/misc.hh	/^        Bitfield<15, 0> targetCS;$/;"	m	namespace:X86ISA
targetEIP	src/arch/x86/regs/misc.hh	/^        Bitfield<31, 0> targetEIP;$/;"	m	namespace:X86ISA
targetESP	src/arch/x86/regs/misc.hh	/^        Bitfield<31, 0> targetESP;$/;"	m	namespace:X86ISA
targetEip	src/arch/x86/regs/misc.hh	/^        Bitfield<31,0> targetEip;$/;"	m	namespace:X86ISA
targets	src/mem/cache/mshr.hh	/^    TargetList targets;$/;"	m	class:MSHR
tase	src/arch/arm/miscregs.hh	/^        Bitfield<15> tase;$/;"	m	namespace:ArmISA
task	src/arch/alpha/stacktrace.cc	/^ProcessInfo::task(Addr ksp) const$/;"	f	class:AlphaISA::ProcessInfo
task	src/arch/arm/stacktrace.cc	/^    ProcessInfo::task(Addr ksp) const$/;"	f	class:ArmISA::ProcessInfo
task	src/arch/mips/linux/thread_info.hh	/^        Addr_a                  task;$/;"	m	struct:Linux::thread_info
task	src/arch/mips/stacktrace.cc	/^ProcessInfo::task(Addr ksp) const$/;"	f	class:ProcessInfo
task	src/arch/power/stacktrace.cc	/^ProcessInfo::task(Addr ksp) const$/;"	f	class:PowerISA::ProcessInfo
task	src/arch/x86/stacktrace.cc	/^    ProcessInfo::task(Addr ksp) const$/;"	f	class:X86ISA::ProcessInfo
taskFile	src/arch/arm/linux/system.hh	/^    std::ostream* taskFile;$/;"	m	class:LinuxArmSystem
taskId	src/cpu/base.hh	/^    uint32_t taskId() const { return _taskId; }$/;"	f	class:BaseCPU
taskId	src/cpu/base.hh	/^    void taskId(uint32_t id) { _taskId = id; }$/;"	f	class:BaseCPU
taskId	src/mem/request.hh	/^    taskId() const$/;"	f	class:Request
taskId	src/mem/request.hh	/^    taskId(uint32_t id) {$/;"	f	class:Request
taskMap	src/arch/arm/linux/system.hh	/^    std::map<uint32_t, uint32_t> taskMap;$/;"	m	class:LinuxArmSystem
task_id	src/mem/cache/blk.hh	/^    uint32_t task_id;$/;"	m	class:CacheBlk
task_notify	src/kern/tru64/tru64_syscalls.hh	/^        task_notify = 12,$/;"	e	enum:SystemCalls::__anon103
task_off	src/arch/alpha/stacktrace.hh	/^    int task_off;$/;"	m	class:AlphaISA::ProcessInfo
task_off	src/arch/arm/stacktrace.hh	/^    int task_off;$/;"	m	class:ArmISA::ProcessInfo
task_off	src/arch/mips/stacktrace.hh	/^    int task_off;$/;"	m	class:MipsISA::ProcessInfo
task_off	src/arch/power/stacktrace.hh	/^    int task_off;$/;"	m	class:PowerISA::ProcessInfo
task_off	src/arch/x86/stacktrace.hh	/^        int task_off;$/;"	m	class:X86ISA::ProcessInfo
task_self	src/kern/tru64/tru64_syscalls.hh	/^        task_self = 10,$/;"	e	enum:SystemCalls::__anon103
task_struct_size	src/arch/alpha/stacktrace.hh	/^    int task_struct_size;$/;"	m	class:AlphaISA::ProcessInfo
task_struct_size	src/arch/arm/stacktrace.hh	/^    int task_struct_size;$/;"	m	class:ArmISA::ProcessInfo
task_struct_size	src/arch/mips/stacktrace.hh	/^    int task_struct_size;$/;"	m	class:MipsISA::ProcessInfo
task_struct_size	src/arch/power/stacktrace.hh	/^    int task_struct_size;$/;"	m	class:PowerISA::ProcessInfo
task_struct_size	src/arch/x86/stacktrace.hh	/^        int task_struct_size;$/;"	m	class:X86ISA::ProcessInfo
tb	src/arch/mips/dt_constants.hh	/^    Bitfield<27>     tb;$/;"	m	namespace:MipsISA
tba	src/arch/sparc/isa.hh	/^    uint64_t tba;           \/\/ Trap Base Address$/;"	m	class:SparcISA::ISA
tba	src/cpu/m5legion_interface.h	/^    uint64_t tba;$/;"	m	struct:__anon55
tba	src/dev/alpha/tsunami_pchip.hh	/^    uint64_t tba[4];$/;"	m	class:TsunamiPChip
tba	src/dev/mips/malta_pchip.hh	/^    uint64_t tba[4];$/;"	m	class:MaltaPChip
tbe	src/arch/mips/mt_constants.hh	/^    Bitfield<17>     tbe;$/;"	m	namespace:MipsISA
tbi	src/arch/alpha/osfpal.hh	/^        tbi = 0x33,$/;"	e	enum:PAL::__anon3
tbi	src/arch/arm/miscregs.hh	/^        Bitfield<20> tbi;$/;"	m	namespace:ArmISA
tbi	src/arch/mips/dt_constants.hh	/^    Bitfield<4>      tbi;$/;"	m	namespace:MipsISA
tbi0	src/arch/arm/miscregs.hh	/^        Bitfield<37> tbi0;$/;"	m	namespace:ArmISA
tbi1	src/arch/arm/miscregs.hh	/^        Bitfield<38> tbi1;$/;"	m	namespace:ArmISA
tbicr	src/dev/ns_gige.hh	/^    uint32_t    tbicr;$/;"	m	struct:dp_regs
tbir	src/dev/pcireg.h	/^        Bitfield<2,0>   tbir;$/;"	m	struct:MSIXCAP
tbisr	src/dev/ns_gige.hh	/^    uint32_t    tbisr;$/;"	m	struct:dp_regs
tbl_sysinfo	src/kern/tru64/tru64.hh	/^    struct tbl_sysinfo {$/;"	s	class:Tru64
tbu	src/arch/mips/dt_constants.hh	/^    Bitfield<3>      tbu;$/;"	m	namespace:MipsISA
tc	src/arch/alpha/stacktrace.hh	/^    ThreadContext *tc;$/;"	m	class:AlphaISA::ProcessInfo
tc	src/arch/alpha/stacktrace.hh	/^    ThreadContext *tc;$/;"	m	class:AlphaISA::StackTrace
tc	src/arch/arm/stacktrace.hh	/^    ThreadContext *tc;$/;"	m	class:ArmISA::ProcessInfo
tc	src/arch/arm/stacktrace.hh	/^    ThreadContext *tc;$/;"	m	class:ArmISA::StackTrace
tc	src/arch/arm/table_walker.hh	/^        ThreadContext *tc;$/;"	m	class:ArmISA::TableWalker::WalkerState
tc	src/arch/generic/linux/threadinfo.hh	/^    ThreadContext *tc;$/;"	m	class:Linux::ThreadInfo
tc	src/arch/mips/stacktrace.hh	/^    ThreadContext *tc;$/;"	m	class:MipsISA::ProcessInfo
tc	src/arch/mips/stacktrace.hh	/^    ThreadContext *tc;$/;"	m	class:MipsISA::StackTrace
tc	src/arch/power/stacktrace.hh	/^    ThreadContext *tc;$/;"	m	class:PowerISA::ProcessInfo
tc	src/arch/power/stacktrace.hh	/^    ThreadContext *tc;$/;"	m	class:PowerISA::StackTrace
tc	src/arch/x86/pagetable_walker.hh	/^            ThreadContext *tc;$/;"	m	class:X86ISA::Walker::WalkerState
tc	src/arch/x86/stacktrace.hh	/^        ThreadContext *tc;$/;"	m	class:X86ISA::ProcessInfo
tc	src/arch/x86/stacktrace.hh	/^        ThreadContext *tc;$/;"	m	class:X86ISA::StackTrace
tc	src/cpu/checker/cpu.hh	/^    ThreadContext *tc;$/;"	m	class:CheckerCPU
tc	src/cpu/cpuevent.hh	/^    ThreadContext *tc;$/;"	m	class:CpuEvent
tc	src/cpu/inorder/thread_state.hh	/^    ThreadContext *tc;$/;"	m	class:InOrderThreadState
tc	src/cpu/kvm/base.hh	/^    ThreadContext *tc;$/;"	m	class:BaseKvmCPU
tc	src/cpu/o3/thread_state.hh	/^    ThreadContext *tc;$/;"	m	struct:O3ThreadState
tc	src/cpu/ozone/back_end.hh	/^    ThreadContext *tc;$/;"	m	class:BackEnd
tc	src/cpu/ozone/cpu.hh	/^    ThreadContext *tc;$/;"	m	class:OzoneCPU
tc	src/cpu/ozone/front_end.hh	/^    ThreadContext *tc;$/;"	m	class:FrontEnd
tc	src/cpu/ozone/inorder_back_end.hh	/^    ThreadContext *tc;$/;"	m	class:InorderBackEnd
tc	src/cpu/ozone/lw_back_end.hh	/^    ThreadContext *tc;$/;"	m	class:LWBackEnd
tc	src/cpu/ozone/thread_state.hh	/^    ThreadContext *tc;$/;"	m	struct:OzoneThreadState
tc	src/cpu/quiesce_event.hh	/^    ThreadContext *tc;$/;"	m	class:EndQuiesceEvent
tc	src/cpu/simple/base.hh	/^    ThreadContext *tc;$/;"	m	class:BaseSimpleCPU
tc	src/cpu/simple_thread.hh	/^    ProxyThreadContext<SimpleThread> *tc;$/;"	m	class:SimpleThread
tc	src/sim/arguments.hh	/^    ThreadContext *tc;$/;"	m	class:Arguments
tc	src/sim/vptr.hh	/^    ThreadContext *tc;$/;"	m	class:VPtr
tcBase	src/cpu/base_dyn_inst.hh	/^    ThreadContext *tcBase() { return thread->getTC(); }$/;"	f	class:BaseDynInst
tcBase	src/cpu/checker/cpu.hh	/^    ThreadContext *tcBase() { return tc; }$/;"	f	class:CheckerCPU
tcBase	src/cpu/inorder/cpu.hh	/^    ThreadContext *tcBase(ThreadID tid = 0)$/;"	f	class:InOrderCPU
tcBase	src/cpu/inorder/inorder_dyn_inst.hh	/^    ThreadContext *tcBase() { return thread->getTC(); }$/;"	f	class:InOrderDynInst
tcBase	src/cpu/o3/cpu.hh	/^    tcBase(ThreadID tid)$/;"	f	class:FullO3CPU
tcBase	src/cpu/ozone/cpu.hh	/^    ThreadContext *tcBase() { return tc; }$/;"	f	class:OzoneCPU
tcBase	src/cpu/simple/base.hh	/^    ThreadContext *tcBase() { return tc; }$/;"	f	class:BaseSimpleCPU
tcSquash	src/cpu/o3/commit.hh	/^    bool tcSquash[Impl::MaxThreads];$/;"	m	class:DefaultCommit
tcSquash	src/cpu/ozone/back_end.hh	/^    bool tcSquash;$/;"	m	class:BackEnd
tcSquash	src/cpu/ozone/lw_back_end.hh	/^    bool tcSquash;$/;"	m	class:LWBackEnd
tca	src/arch/mips/mt_constants.hh	/^    Bitfield<15>     tca;$/;"	m	namespace:MipsISA
tcnum	src/arch/mips/dt_constants.hh	/^    Bitfield<19, 12> tcnum;$/;"	m	namespace:MipsISA
tcp	src/dev/i8254xGBe_defs.hh	/^inline bool tcp(TxDesc *d)  { assert(isContext(d)); return bits(d->d2, 24,24); }$/;"	f	namespace:iGbReg::TxdOp
tcp0	src/arch/arm/miscregs.hh	/^        Bitfield<0>  tcp0;$/;"	m	namespace:ArmISA
tcp1	src/arch/arm/miscregs.hh	/^        Bitfield<1>  tcp1;$/;"	m	namespace:ArmISA
tcp10	src/arch/arm/miscregs.hh	/^        Bitfield<10> tcp10;$/;"	m	namespace:ArmISA
tcp11	src/arch/arm/miscregs.hh	/^        Bitfield<11> tcp11;$/;"	m	namespace:ArmISA
tcp12	src/arch/arm/miscregs.hh	/^        Bitfield<12> tcp12;$/;"	m	namespace:ArmISA
tcp13	src/arch/arm/miscregs.hh	/^        Bitfield<13> tcp13;$/;"	m	namespace:ArmISA
tcp2	src/arch/arm/miscregs.hh	/^        Bitfield<2>  tcp2;$/;"	m	namespace:ArmISA
tcp3	src/arch/arm/miscregs.hh	/^        Bitfield<3>  tcp3;$/;"	m	namespace:ArmISA
tcp4	src/arch/arm/miscregs.hh	/^        Bitfield<4>  tcp4;$/;"	m	namespace:ArmISA
tcp5	src/arch/arm/miscregs.hh	/^        Bitfield<5>  tcp5;$/;"	m	namespace:ArmISA
tcp6	src/arch/arm/miscregs.hh	/^        Bitfield<6>  tcp6;$/;"	m	namespace:ArmISA
tcp7	src/arch/arm/miscregs.hh	/^        Bitfield<7>  tcp7;$/;"	m	namespace:ArmISA
tcp8	src/arch/arm/miscregs.hh	/^        Bitfield<8>  tcp8;$/;"	m	namespace:ArmISA
tcp9	src/arch/arm/miscregs.hh	/^        Bitfield<9>  tcp9;$/;"	m	namespace:ArmISA
tcpac	src/arch/arm/miscregs.hh	/^        Bitfield<31> tcpac;$/;"	m	namespace:ArmISA
tcs	src/arch/mips/mt_constants.hh	/^    Bitfield<19>     tcs;$/;"	m	namespace:MipsISA
tctl	src/dev/i8254xGBe_defs.hh	/^    TCTL tctl;$/;"	m	struct:iGbReg::Regs
tcu	src/arch/mips/mt_constants.hh	/^    Bitfield<31, 28> tcu;$/;"	m	namespace:MipsISA
tcv	src/arch/mips/dt_constants.hh	/^    Bitfield<20>     tcv;$/;"	m	namespace:MipsISA
tda	src/arch/arm/miscregs.hh	/^        Bitfield<9>    tda;$/;"	m	namespace:ArmISA
tdba	src/dev/i8254xGBe_defs.hh	/^    TDBA tdba;$/;"	m	struct:iGbReg::Regs
tde	src/arch/arm/miscregs.hh	/^        Bitfield<8>    tde;$/;"	m	namespace:ArmISA
tdh	src/dev/i8254xGBe_defs.hh	/^    TDH tdh;$/;"	m	struct:iGbReg::Regs
tdlen	src/dev/i8254xGBe_defs.hh	/^    TDLEN tdlen;$/;"	m	struct:iGbReg::Regs
tdosa	src/arch/arm/miscregs.hh	/^        Bitfield<10>   tdosa;$/;"	m	namespace:ArmISA
tdra	src/arch/arm/miscregs.hh	/^        Bitfield<11>   tdra;$/;"	m	namespace:ArmISA
tds	src/arch/mips/mt_constants.hh	/^    Bitfield<21>     tds;$/;"	m	namespace:MipsISA
tdt	src/dev/i8254xGBe_defs.hh	/^    TDT tdt;$/;"	m	struct:iGbReg::Regs
tdwba	src/dev/i8254xGBe_defs.hh	/^    uint64_t tdwba;$/;"	m	struct:iGbReg::Regs
tdz	src/arch/arm/miscregs.hh	/^        Bitfield<28>     tdz;   \/\/ AArch64$/;"	m	namespace:ArmISA
te	src/arch/arm/miscregs.hh	/^        Bitfield<30>   te;      \/\/ Thumb Exception Enable (AArch32 only)$/;"	m	namespace:ArmISA
te	src/arch/mips/mt_constants.hh	/^    Bitfield<15>     te;$/;"	m	namespace:MipsISA
tebi	src/python/m5/util/convert.py	/^tebi = gibi * 1024$/;"	v
tempBlock	src/mem/cache/cache.hh	/^    BlkType *tempBlock;$/;"	m	class:Cache
temperature_record_format	src/mem/ruby/network/fault_model/FaultModel.hh	/^    enum temperature_record_format$/;"	g	class:FaultModel
temperature_record_temp	src/mem/ruby/network/fault_model/FaultModel.hh	/^        temperature_record_temp,$/;"	e	enum:FaultModel::temperature_record_format
temperature_record_weight	src/mem/ruby/network/fault_model/FaultModel.hh	/^        temperature_record_weight,$/;"	e	enum:FaultModel::temperature_record_format
temperature_weights	src/mem/ruby/network/fault_model/FaultModel.hh	/^    std::vector <int> temperature_weights;$/;"	m	class:FaultModel
temperature_weights_database	src/mem/ruby/network/fault_model/FaultModel.py	/^    temperature_weights_database = VectorParam.Int([$/;"	v	class:FaultModel
tera	src/python/m5/util/convert.py	/^tera = 1.0e12$/;"	v
term	src/dev/terminal.hh	/^        Terminal *term;$/;"	m	class:Terminal::DataEvent
term	src/dev/terminal.hh	/^        Terminal *term;$/;"	m	class:Terminal::ListenEvent
term	src/dev/uart.hh	/^    Terminal *term;$/;"	m	class:Uart
termcap	src/python/m5/util/terminal.py	/^termcap = ColorStrings(cap_string)$/;"	v
terminal	src/dev/Uart.py	/^    terminal = Param.Terminal(Parent.any, "The terminal")$/;"	v	class:Uart
terminal	src/dev/alpha/AlphaBackdoor.py	/^    terminal = Param.Terminal(Parent.any, "The console terminal")$/;"	v	class:AlphaBackdoor
terminal	src/dev/alpha/backdoor.hh	/^    Terminal *terminal;$/;"	m	class:AlphaBackdoor
ternaryOp	src/arch/arm/insts/vfp.cc	/^FpOp::ternaryOp(FPSCR &fpscr, fpType op1, fpType op2, fpType op3,$/;"	f	class:ArmISA::FpOp
tesr	src/dev/ns_gige.hh	/^    uint32_t    tesr;$/;"	m	struct:dp_regs
test	src/cpu/testers/memtest/MemTest.py	/^    test = MasterPort("Port to the memory system to test")$/;"	v	class:MemTest
test	src/cpu/testers/networktest/NetworkTest.py	/^    test = MasterPort("Port to the memory system to test")$/;"	v	class:NetworkTest
test	src/python/m5/util/region.py	/^    def test(left, right):$/;"	f
test1	src/python/m5/util/multidict.py	/^    test1 = multidict()$/;"	v	class:multidict
test2	src/python/m5/util/multidict.py	/^    test2 = multidict(test1)$/;"	v	class:multidict
test3	src/python/m5/util/multidict.py	/^    test3 = multidict(test2)$/;"	v	class:multidict
test4	src/python/m5/util/multidict.py	/^    test4 = multidict(test3)$/;"	v	class:multidict
testAndClearAsyncEvent	src/sim/simulate.cc	/^testAndClearAsyncEvent()$/;"	f	file:
testAndRead	src/mem/ruby/slicc_interface/RubySlicc_Util.hh	/^testAndRead(Address addr, DataBlock& blk, Packet *pkt)$/;"	f
testAndWrite	src/mem/ruby/slicc_interface/RubySlicc_Util.hh	/^testAndWrite(Address addr, DataBlock& blk, Packet *pkt)$/;"	f
testCacheAccess	src/mem/ruby/system/CacheMemory.cc	/^CacheMemory::testCacheAccess(const Address& address, RubyRequestType type,$/;"	f	class:CacheMemory
testCmdAttrib	src/mem/packet.hh	/^    testCmdAttrib(MemCmd::Attribute attrib) const$/;"	f	class:MemCmd
testDrainComplete	src/mem/ruby/system/RubyPort.cc	/^RubyPort::testDrainComplete()$/;"	f	class:RubyPort
testPredicate	src/arch/arm/utility.hh	/^testPredicate(uint32_t nz, uint32_t c, uint32_t v, ConditionCode code)$/;"	f	namespace:ArmISA
testVal	src/unittest/refcnttest.cc	/^    int testVal;$/;"	m	class:__anon106::TestRC	file:
test_termcap	src/python/m5/util/terminal.py	/^def test_termcap(obj):$/;"	f
tester	src/cpu/testers/directedtest/RubyDirectedTester.hh	/^        RubyDirectedTester *tester;$/;"	m	class:RubyDirectedTester::CpuPort
tester	src/cpu/testers/directedtest/RubyDirectedTester.hh	/^        RubyDirectedTester *tester;$/;"	m	class:RubyDirectedTester::DirectedStartEvent
tester	src/cpu/testers/rubytest/RubyTester.hh	/^        RubyTester *tester;$/;"	m	class:RubyTester::CheckStartEvent
tester	src/cpu/testers/rubytest/RubyTester.hh	/^        RubyTester *tester;$/;"	m	class:RubyTester::CpuPort
testfunc	src/unittest/stattest.cc	/^testfunc()$/;"	f
tex_formatter	src/mem/slicc/generate/tex.py	/^class tex_formatter(code_formatter):$/;"	c
texcb	src/arch/arm/table_walker.hh	/^        uint8_t texcb() const$/;"	f	class:ArmISA::TableWalker::L1Descriptor
texcb	src/arch/arm/table_walker.hh	/^        uint8_t texcb() const$/;"	f	class:ArmISA::TableWalker::L2Descriptor
texcb	src/arch/arm/table_walker.hh	/^        virtual uint8_t texcb() const$/;"	f	class:ArmISA::TableWalker::DescriptorBase
text	src/base/loader/object_file.hh	/^    Section text;$/;"	m	class:ObjectFile
textBase	src/base/loader/object_file.hh	/^    Addr textBase() const { return text.baseAddr; }$/;"	f	class:ObjectFile
textSize	src/base/loader/object_file.hh	/^    size_t textSize() const { return text.size; }$/;"	f	class:ObjectFile
text_start	src/arch/alpha/aout_machdep.h	/^    uint64_t    text_start;     \/\/\/< text base address$/;"	m	struct:aout_exechdr
text_start	src/base/loader/exec_ecoff.h	/^        coff_ulong  text_start;$/;"	m	struct:ecoff_aouthdr
tf	src/arch/x86/regs/misc.hh	/^        Bitfield<8> tf; \/\/ Trap Flag$/;"	m	namespace:X86ISA
tfcr	src/arch/mips/dt_constants.hh	/^    Bitfield<3>      tfcr;$/;"	m	namespace:MipsISA
tfp	src/arch/arm/miscregs.hh	/^        Bitfield<10> tfp;  \/\/ AArch64$/;"	m	namespace:ArmISA
tfp	src/arch/arm/miscregs.hh	/^        Bitfield<10> tfp;$/;"	m	namespace:ArmISA
tg0	src/arch/arm/miscregs.hh	/^        Bitfield<14> tg0;$/;"	m	namespace:ArmISA
tg1	src/arch/arm/miscregs.hh	/^        Bitfield<30> tg1;$/;"	m	namespace:ArmISA
tge	src/arch/arm/miscregs.hh	/^        Bitfield<27>     tge;$/;"	m	namespace:ArmISA
tgkill	src/kern/linux/linux_syscalls.hh	/^    tgkill = 242,$/;"	e	enum:SystemCalls::__anon87
tgtFlag	src/kern/operatingsystem.hh	/^    int tgtFlag;        \/\/!< Target system flag value.$/;"	m	struct:OpenFlagTransTable
tgt_iovec	src/arch/arm/linux/linux.hh	/^    struct tgt_iovec {$/;"	s	class:ArmLinux32
tgt_iovec	src/arch/arm/linux/linux.hh	/^    struct tgt_iovec {$/;"	s	class:ArmLinux64
tgt_iovec	src/arch/x86/linux/linux.hh	/^    } tgt_iovec;$/;"	t	class:X86Linux64	typeref:struct:X86Linux64::__anon31
tgt_iovec	src/kern/linux/linux.hh	/^    struct tgt_iovec {$/;"	s	class:Linux
tgt_iovec	src/kern/operatingsystem.hh	/^    } tgt_iovec;$/;"	t	class:OperatingSystem	typeref:struct:OperatingSystem::__anon91
tgt_stat	src/arch/arm/linux/linux.hh	/^    } tgt_stat;$/;"	t	class:ArmLinux32	typeref:struct:ArmLinux32::__anon6
tgt_stat	src/arch/arm/linux/linux.hh	/^    } tgt_stat;$/;"	t	class:ArmLinux64	typeref:struct:ArmLinux64::__anon9
tgt_stat	src/arch/power/linux/linux.hh	/^    } tgt_stat;$/;"	t	class:PowerLinux	typeref:struct:PowerLinux::__anon22
tgt_stat	src/arch/sparc/linux/linux.hh	/^    } tgt_stat;$/;"	t	class:SparcLinux	typeref:struct:SparcLinux::__anon25
tgt_stat	src/kern/linux/linux.hh	/^    } tgt_stat;$/;"	t	class:Linux	typeref:struct:Linux::__anon84
tgt_stat	src/kern/operatingsystem.hh	/^    typedef void tgt_stat;$/;"	t	class:OperatingSystem
tgt_stat	src/kern/solaris/solaris.hh	/^    } tgt_stat;$/;"	t	class:Solaris	typeref:struct:Solaris::__anon93
tgt_stat	src/kern/tru64/tru64.hh	/^    typedef F64_stat tgt_stat;$/;"	t	class:Tru64_F64
tgt_stat	src/kern/tru64/tru64.hh	/^    typedef pre_F64_stat tgt_stat;$/;"	t	class:Tru64_PreF64
tgt_stat64	src/arch/arm/linux/linux.hh	/^    } tgt_stat64;$/;"	t	class:ArmLinux32	typeref:struct:ArmLinux32::__anon7
tgt_stat64	src/arch/arm/linux/linux.hh	/^    } tgt_stat64;$/;"	t	class:ArmLinux64	typeref:struct:ArmLinux64::__anon10
tgt_stat64	src/arch/power/linux/linux.hh	/^    } tgt_stat64;$/;"	t	class:PowerLinux	typeref:struct:PowerLinux::__anon23
tgt_stat64	src/arch/sparc/linux/linux.hh	/^    } tgt_stat64;$/;"	t	class:Sparc32Linux	typeref:struct:Sparc32Linux::__anon27
tgt_stat64	src/arch/x86/linux/linux.hh	/^    } __attribute__((__packed__)) tgt_stat64;$/;"	t	class:X86Linux32	typeref:struct:X86Linux32::__anon33
tgt_stat64	src/arch/x86/linux/linux.hh	/^    } tgt_stat64;$/;"	t	class:X86Linux64	typeref:struct:X86Linux64::__anon30
tgt_stat64	src/kern/linux/linux.hh	/^    } tgt_stat64;$/;"	t	class:Linux	typeref:struct:Linux::__anon85
tgt_stat64	src/kern/operatingsystem.hh	/^    typedef void tgt_stat64;$/;"	t	class:OperatingSystem
tgt_stat64	src/kern/solaris/solaris.hh	/^    } tgt_stat64;$/;"	t	class:Solaris	typeref:struct:Solaris::__anon94
tgt_sysinfo	src/arch/alpha/linux/linux.hh	/^    } tgt_sysinfo;$/;"	t	class:AlphaLinux	typeref:struct:AlphaLinux::__anon2
tgt_sysinfo	src/arch/arm/linux/linux.hh	/^    } tgt_sysinfo;$/;"	t	class:ArmLinux32	typeref:struct:ArmLinux32::__anon8
tgt_sysinfo	src/arch/arm/linux/linux.hh	/^    } tgt_sysinfo;$/;"	t	class:ArmLinux64	typeref:struct:ArmLinux64::__anon11
tgt_sysinfo	src/arch/mips/linux/linux.hh	/^    } tgt_sysinfo;$/;"	t	class:MipsLinux	typeref:struct:MipsLinux::__anon20
tgt_sysinfo	src/arch/sparc/linux/linux.hh	/^    } tgt_sysinfo;   $/;"	t	class:Sparc32Linux	typeref:struct:Sparc32Linux::__anon28
tgt_sysinfo	src/arch/sparc/linux/linux.hh	/^    } tgt_sysinfo;$/;"	t	class:SparcLinux	typeref:struct:SparcLinux::__anon26
tgt_sysinfo	src/arch/x86/linux/linux.hh	/^    } tgt_sysinfo;$/;"	t	class:X86Linux32	typeref:struct:X86Linux32::__anon34
tgt_sysinfo	src/arch/x86/linux/linux.hh	/^   } tgt_sysinfo;$/;"	t	class:X86Linux64	typeref:struct:X86Linux64::__anon32
tgt_timespec	src/kern/solaris/solaris.hh	/^    struct tgt_timespec {$/;"	s	class:Solaris
tgts_per_mshr	src/mem/cache/BaseCache.py	/^    tgts_per_mshr = Param.Int("max number of accesses per MSHR")$/;"	v	class:BaseCache
theAllFlags	src/base/debug.cc	/^AllFlags theAllFlags;$/;"	m	namespace:Debug	file:
thee	src/arch/arm/miscregs.hh	/^        Bitfield<6>    thee;    \/\/ ThumbEE enable$/;"	m	namespace:ArmISA
themode	src/arch/alpha/kernel_stats.hh	/^    cpu_mode themode;$/;"	m	class:AlphaISA::Kernel::Statistics
thiszone	src/dev/etherdump.cc	/^    int32_t thiszone;           \/\/ gmt to local correction$/;"	m	struct:pcap_file_header	file:
thread	src/cpu/base_dyn_inst.hh	/^    ImplState *thread;$/;"	m	class:BaseDynInst
thread	src/cpu/checker/cpu.hh	/^    SimpleThread *thread;$/;"	m	class:CheckerCPU
thread	src/cpu/inorder/cpu.hh	/^    std::vector<Thread *> thread;$/;"	m	class:InOrderCPU
thread	src/cpu/inorder/inorder_dyn_inst.hh	/^    InOrderThreadState *thread;$/;"	m	class:InOrderDynInst
thread	src/cpu/inorder/thread_context.hh	/^    InOrderThreadState *thread;$/;"	m	class:InOrderThreadContext
thread	src/cpu/kvm/base.hh	/^    SimpleThread *thread;$/;"	m	class:BaseKvmCPU
thread	src/cpu/o3/commit.hh	/^    std::vector<Thread *> thread;$/;"	m	class:DefaultCommit
thread	src/cpu/o3/cpu.hh	/^    std::vector<Thread *> thread;$/;"	m	class:FullO3CPU
thread	src/cpu/o3/lsq.hh	/^    LSQUnit *thread;$/;"	m	class:LSQ
thread	src/cpu/o3/thread_context.hh	/^    O3ThreadState<Impl> *thread;$/;"	m	class:O3ThreadContext
thread	src/cpu/ozone/back_end.hh	/^    Thread *thread;$/;"	m	class:BackEnd
thread	src/cpu/ozone/cpu.hh	/^        OzoneThreadState<Impl> *thread;$/;"	m	class:OzoneCPU::OzoneTC
thread	src/cpu/ozone/cpu.hh	/^    OzoneThreadState<Impl> thread;$/;"	m	class:OzoneCPU
thread	src/cpu/ozone/front_end.hh	/^    OzoneThreadState<Impl> *thread;$/;"	m	class:FrontEnd
thread	src/cpu/ozone/inorder_back_end.hh	/^    OzoneThreadState<Impl> *thread;$/;"	m	class:InorderBackEnd
thread	src/cpu/ozone/lw_back_end.hh	/^    Thread *thread;$/;"	m	class:LWBackEnd
thread	src/cpu/simple/base.hh	/^    SimpleThread *thread;$/;"	m	class:BaseSimpleCPU
thread	src/sim/insttracer.hh	/^    ThreadContext *thread;$/;"	m	class:Trace::InstRecord
threadBarrier	src/sim/simulate.cc	/^Barrier *threadBarrier;$/;"	v
threadBase	src/cpu/checker/cpu.hh	/^    SimpleThread *threadBase() { return thread; }$/;"	f	class:CheckerCPU
threadContextDirty	src/cpu/kvm/base.hh	/^    bool threadContextDirty;$/;"	m	class:BaseKvmCPU
threadContexts	src/cpu/base.hh	/^    std::vector<ThreadContext *> threadContexts;$/;"	m	class:BaseCPU
threadContexts	src/sim/system.hh	/^    std::vector<ThreadContext *> threadContexts;$/;"	m	class:System
threadCycles	src/cpu/inorder/cpu.hh	/^    Stats::Vector threadCycles;$/;"	m	class:InOrderCPU
threadEntries	src/cpu/o3/rob.hh	/^    unsigned threadEntries[Impl::MaxThreads];$/;"	m	class:ROB
threadFetched	src/cpu/o3/fetch.hh	/^    ThreadID threadFetched;$/;"	m	class:DefaultFetch
threadId	src/cpu/checker/thread_context.hh	/^    int threadId() const { return actualTC->threadId(); }$/;"	f	class:CheckerThreadContext
threadId	src/cpu/inorder/thread_context.hh	/^    int threadId() const { return thread->threadId(); }$/;"	f	class:InOrderThreadContext
threadId	src/cpu/o3/thread_context.hh	/^    virtual int threadId() const { return thread->threadId(); }$/;"	f	class:O3ThreadContext
threadId	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::OzoneTC::threadId() const$/;"	f	class:OzoneCPU::OzoneTC
threadId	src/cpu/thread_context.hh	/^    int threadId() const { return actualTC->threadId(); }$/;"	f	class:ProxyThreadContext
threadId	src/cpu/thread_state.hh	/^    ThreadID threadId() const { return _threadId; }$/;"	f	struct:ThreadState
threadId	src/mem/request.hh	/^    threadId() const$/;"	f	class:Request
threadMap	src/cpu/o3/cpu.hh	/^    std::map<ThreadID, unsigned> threadMap;$/;"	m	class:FullO3CPU
threadModel	src/cpu/inorder/InOrderCPU.py	/^    threadModel = Param.ThreadModel('SMT', "Multithreading model (SE-MODE only)")$/;"	v	class:InOrderCPU
threadModel	src/cpu/inorder/cpu.hh	/^    ThreadModel threadModel;$/;"	m	class:InOrderCPU
threadNum	src/mem/cache/mshr.hh	/^    ThreadID threadNum;$/;"	m	class:MSHR
threadNumber	src/cpu/base_dyn_inst.hh	/^    ThreadID threadNumber;$/;"	m	class:BaseDynInst
threadNumber	src/cpu/inorder/inorder_dyn_inst.hh	/^    short threadNumber;$/;"	m	class:InOrderDynInst
thread_info	src/arch/mips/linux/thread_info.hh	/^    struct thread_info {$/;"	s	namespace:Linux
thread_info_size	src/arch/alpha/stacktrace.hh	/^    int thread_info_size;$/;"	m	class:AlphaISA::ProcessInfo
thread_info_size	src/arch/arm/stacktrace.hh	/^    int thread_info_size;$/;"	m	class:ArmISA::ProcessInfo
thread_info_size	src/arch/mips/stacktrace.hh	/^    int thread_info_size;$/;"	m	class:MipsISA::ProcessInfo
thread_info_size	src/arch/power/stacktrace.hh	/^    int thread_info_size;$/;"	m	class:PowerISA::ProcessInfo
thread_info_size	src/arch/x86/stacktrace.hh	/^        int thread_info_size;$/;"	m	class:X86ISA::ProcessInfo
thread_loop	src/sim/simulate.cc	/^thread_loop(EventQueue *queue)$/;"	f	file:
thread_reply	src/kern/tru64/tru64_syscalls.hh	/^        thread_reply = 11,$/;"	e	enum:SystemCalls::__anon103
thread_self	src/kern/tru64/tru64_syscalls.hh	/^        thread_self = 13,$/;"	e	enum:SystemCalls::__anon103
thread_switch	src/kern/tru64/tru64_syscalls.hh	/^        thread_switch = 61,$/;"	e	enum:SystemCalls::__anon103
throughput	src/mem/bus.hh	/^    Stats::Formula throughput;$/;"	m	class:BaseBus
thumb	src/arch/arm/types.hh	/^        Bitfield<36>     thumb;$/;"	m	namespace:ArmISA
thumb	src/arch/arm/types.hh	/^        thumb() const$/;"	f	class:ArmISA::PCState
thumb	src/arch/arm/types.hh	/^        thumb(bool val)$/;"	f	class:ArmISA::PCState
thumbPcElrOffset	src/arch/arm/faults.hh	/^        const uint8_t thumbPcElrOffset;$/;"	m	struct:ArmISA::ArmFault::FaultVals
thumbPcElrOffset	src/arch/arm/faults.hh	/^    uint8_t thumbPcElrOffset() { return vals.thumbPcElrOffset; }$/;"	f	class:ArmISA::ArmFaultVals
thumbPcOffset	src/arch/arm/faults.hh	/^        const uint8_t thumbPcOffset;$/;"	m	struct:ArmISA::ArmFault::FaultVals
thumbPcOffset	src/arch/arm/faults.hh	/^    uint8_t thumbPcOffset(bool isHyp) { return isHyp ? vals.thumbPcElrOffset$/;"	f	class:ArmISA::ArmFaultVals
ti	src/arch/mips/pra_constants.hh	/^    Bitfield<30>     ti;$/;"	m	namespace:MipsISA
ti	src/arch/x86/regs/misc.hh	/^        Bitfield<2> ti; \/\/ Table Indicator$/;"	m	namespace:X86ISA
ti	src/base/loader/coff_sym.h	/^    TIR ti;             \/* type information record *\/$/;"	m	union:__anon44
tiNil	src/base/loader/coff_sym.h	/^#define tiNil /;"	d
tick	src/arch/sparc/isa.hh	/^    uint64_t tick;          \/\/ Hardware clock-tick counter$/;"	m	class:SparcISA::ISA
tick	src/cpu/inorder/cpu.cc	/^InOrderCPU::tick()$/;"	f	class:InOrderCPU
tick	src/cpu/inorder/inorder_dyn_inst.hh	/^        Tick tick;$/;"	m	struct:InOrderDynInst::InstResult
tick	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::tick()$/;"	f	class:PipelineStage
tick	src/cpu/kvm/base.cc	/^BaseKvmCPU::tick()$/;"	f	class:BaseKvmCPU
tick	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::tick()$/;"	f	class:DefaultCommit
tick	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::tick()$/;"	f	class:FullO3CPU
tick	src/cpu/o3/decode_impl.hh	/^DefaultDecode<Impl>::tick()$/;"	f	class:DefaultDecode
tick	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::tick()$/;"	f	class:DefaultFetch
tick	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::tick()$/;"	f	class:DefaultIEW
tick	src/cpu/o3/lsq.hh	/^    void tick(ThreadID tid)$/;"	f	class:LSQ
tick	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::tick()$/;"	f	class:LSQ
tick	src/cpu/o3/lsq_unit.hh	/^    void tick() { usedPorts = 0; }$/;"	f	class:LSQUnit
tick	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::tick()$/;"	f	class:DefaultRename
tick	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::tick()$/;"	f	class:BackEnd
tick	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::tick()$/;"	f	class:OzoneCPU
tick	src/cpu/ozone/front_end_impl.hh	/^FrontEnd<Impl>::tick()$/;"	f	class:FrontEnd
tick	src/cpu/ozone/inorder_back_end_impl.hh	/^InorderBackEnd<Impl>::tick()$/;"	f	class:InorderBackEnd
tick	src/cpu/ozone/lsq_unit.hh	/^    void tick() { usedPorts = 0; }$/;"	f	class:OzoneLSQ
tick	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::tick()$/;"	f	class:LWBackEnd
tick	src/cpu/ozone/lw_lsq.hh	/^    void tick() { usedPorts = 0; }$/;"	f	class:OzoneLWLSQ
tick	src/cpu/simple/atomic.cc	/^AtomicSimpleCPU::tick()$/;"	f	class:AtomicSimpleCPU
tick	src/cpu/testers/memtest/memtest.cc	/^MemTest::tick()$/;"	f	class:MemTest
tick	src/cpu/testers/networktest/networktest.cc	/^NetworkTest::tick()$/;"	f	class:NetworkTest
tick	src/cpu/testers/traffic_gen/generators.hh	/^        Tick tick;$/;"	m	struct:TraceGen::TraceElement
tick	src/dev/i8254xGBe.cc	/^IGbE::tick()$/;"	f	class:IGbE
tick	src/mem/bridge.hh	/^        const Tick tick;$/;"	m	class:Bridge::DeferredPacket
tick	src/mem/cache/prefetch/base.hh	/^        Tick tick;      \/\/\/< The tick when the packet is ready to transmit$/;"	m	class:BasePrefetcher::DeferredPacket
tick	src/mem/dramsim2.cc	/^DRAMSim2::tick()$/;"	f	class:DRAMSim2
tick	src/mem/dramsim2_wrapper.cc	/^DRAMSim2Wrapper::tick()$/;"	f	class:DRAMSim2Wrapper
tick	src/mem/packet_queue.hh	/^        Tick tick;      \/\/\/< The tick when the packet is ready to transmit$/;"	m	class:PacketQueue::DeferredPacket
tick	src/mem/simple_mem.hh	/^        const Tick tick;$/;"	m	class:SimpleMemory::DeferredPacket
tick	src/sim/clocked_object.hh	/^    mutable Tick tick;$/;"	m	class:ClockedObject
tickClock	src/dev/mc146818.cc	/^MC146818::tickClock()$/;"	f	class:MC146818
tickCompare	src/arch/sparc/isa.hh	/^    TickCompareEvent *tickCompare;$/;"	m	class:SparcISA::ISA
tickEvent	src/cpu/inorder/cpu.hh	/^    TickEvent tickEvent;$/;"	m	class:InOrderCPU
tickEvent	src/cpu/kvm/base.hh	/^    TickEvent tickEvent;$/;"	m	class:BaseKvmCPU
tickEvent	src/cpu/o3/cpu.hh	/^    TickEvent tickEvent;$/;"	m	class:FullO3CPU
tickEvent	src/cpu/ozone/cpu.hh	/^    TickEvent tickEvent;$/;"	m	class:OzoneCPU
tickEvent	src/cpu/simple/atomic.hh	/^    TickEvent tickEvent;$/;"	m	class:AtomicSimpleCPU
tickEvent	src/cpu/simple/timing.hh	/^        DTickEvent tickEvent;$/;"	m	class:TimingSimpleCPU::DcachePort
tickEvent	src/cpu/simple/timing.hh	/^        ITickEvent tickEvent;$/;"	m	class:TimingSimpleCPU::IcachePort
tickEvent	src/cpu/testers/memtest/memtest.hh	/^    TickEvent tickEvent;$/;"	m	class:MemTest
tickEvent	src/cpu/testers/networktest/networktest.hh	/^    TickEvent tickEvent;$/;"	m	class:NetworkTest
tickEvent	src/dev/i8254xGBe.hh	/^    EventWrapper<IGbE, &IGbE::tick> tickEvent;$/;"	m	class:IGbE
tickEvent	src/dev/mc146818.hh	/^    RTCTickEvent tickEvent;$/;"	m	class:MC146818
tickEvent	src/mem/dramsim2.hh	/^    EventWrapper<DRAMSim2, &DRAMSim2::tick> tickEvent;$/;"	m	class:DRAMSim2
tickInserted	src/mem/cache/blk.hh	/^    Tick tickInserted;$/;"	m	class:CacheBlk
tickOffset	src/cpu/testers/traffic_gen/generators.hh	/^    mutable Tick tickOffset;$/;"	m	class:TraceGen
tickThreadStats	src/cpu/inorder/cpu.cc	/^InOrderCPU::tickThreadStats()$/;"	f	class:InOrderCPU
tick_cmpr	src/arch/sparc/isa.hh	/^    uint64_t tick_cmpr;     \/\/ Hardware tick compare registers$/;"	m	class:SparcISA::ISA
ticks	src/python/m5/params.py	/^import ticks$/;"	i
ticks	src/python/m5/simulate.py	/^import ticks$/;"	i
ticksFromHostCycles	src/cpu/kvm/timer.hh	/^    Tick ticksFromHostCycles(uint64_t cycles) {$/;"	f	class:BaseKvmTimer
ticksFromHostNs	src/cpu/kvm/timer.hh	/^    Tick ticksFromHostNs(uint64_t ns) {$/;"	f	class:BaseKvmTimer
ticksPerByte	src/dev/etherbus.hh	/^    double ticksPerByte;$/;"	m	class:EtherBus
ticksPerByte	src/dev/etherlink.hh	/^        double ticksPerByte;$/;"	m	class:EtherLink::Link
ticksToCycles	src/sim/clocked_object.hh	/^    inline Cycles ticksToCycles(Tick t) const$/;"	f	class:ClockedObject
tid	src/cpu/inorder/cpu.hh	/^        ThreadID tid;$/;"	m	class:InOrderCPU::CPUEvent
tid	src/cpu/inorder/resource.hh	/^    ThreadID tid;$/;"	m	class:ResourceRequest
tid	src/cpu/inorder/resource_pool.hh	/^        ThreadID tid;$/;"	m	class:ResourcePool::ResPoolEvent
tid	src/cpu/o3/commit.hh	/^        ThreadID tid;$/;"	m	class:DefaultCommit::TrapEvent
tid	src/cpu/o3/cpu.hh	/^        ThreadID tid;$/;"	m	class:FullO3CPU::ActivateThreadEvent
tid	src/cpu/o3/cpu.hh	/^        ThreadID tid;$/;"	m	class:FullO3CPU::DeallocateContextEvent
tid	src/cpu/pred/bpred_unit.hh	/^        ThreadID tid;$/;"	m	struct:BPredUnit::PredictorHistory
tid	src/cpu/pred/btb.hh	/^        ThreadID tid;$/;"	m	struct:DefaultBTB::BTBEntry
tid0	src/arch/arm/miscregs.hh	/^        Bitfield<15>     tid0;$/;"	m	namespace:ArmISA
tid1	src/arch/arm/miscregs.hh	/^        Bitfield<16>     tid1;$/;"	m	namespace:ArmISA
tid2	src/arch/arm/miscregs.hh	/^        Bitfield<17>     tid2;$/;"	m	namespace:ArmISA
tid3	src/arch/arm/miscregs.hh	/^        Bitfield<18>     tid3;$/;"	m	namespace:ArmISA
tidcp	src/arch/arm/miscregs.hh	/^        Bitfield<20>     tidcp;$/;"	m	namespace:ArmISA
tids	src/cpu/o3/cpu.hh	/^    std::vector<ThreadID> tids;$/;"	m	class:FullO3CPU
tidv	src/dev/i8254xGBe_defs.hh	/^    TIDV tidv;$/;"	m	struct:iGbReg::Regs
tidvEvent	src/dev/i8254xGBe.hh	/^    EventWrapper<IGbE, &IGbE::tidvProcess> tidvEvent;$/;"	m	class:IGbE
tidvProcess	src/dev/i8254xGBe.hh	/^    void tidvProcess() {$/;"	f	class:IGbE
tim	src/arch/mips/dt_constants.hh	/^    Bitfield<1>      tim;$/;"	m	namespace:MipsISA
time	src/base/cp_annotate.hh	/^        Tick time;$/;"	m	struct:CPA::AnnotateData
time	src/base/time.cc	/^Time::time() const$/;"	f	class:Time
time	src/dev/alpha/Tsunami.py	/^    time = Param.Time('01\/01\/2009',$/;"	v	class:TsunamiIO
time	src/dev/arm/RealView.py	/^    time = Param.Time('01\/01\/2009', "System time to use ('Now' for actual time)")$/;"	v	class:PL031
time	src/dev/mips/Malta.py	/^    time = Param.Time('01\/01\/2009',$/;"	v	class:MaltaIO
time	src/dev/sparc/T1000.py	/^    time = Param.Time('01\/01\/2009', "System time to use ('Now' for real time)")$/;"	v	class:DumbTOD
time	src/dev/x86/Cmos.py	/^    time = Param.Time('01\/01\/2012',$/;"	v	class:Cmos
time	src/kern/linux/linux_syscalls.hh	/^    time = 243,$/;"	e	enum:SystemCalls::__anon87
time	src/mem/request.hh	/^    time() const$/;"	f	class:Request
time	src/mem/request.hh	/^    time(Tick time)$/;"	f	class:Request
time	src/python/m5/params.py	/^    from time import gmtime, strptime, struct_time, time$/;"	i
time	src/python/m5/params.py	/^import time$/;"	i
timeBuffer	src/cpu/inorder/cpu.hh	/^    TimeBuffer<TimeStruct> timeBuffer;$/;"	m	class:InOrderCPU
timeBuffer	src/cpu/inorder/pipeline_stage.hh	/^    TimeBuffer<TimeStruct> *timeBuffer;$/;"	m	class:PipelineStage
timeBuffer	src/cpu/o3/commit.hh	/^    TimeBuffer<TimeStruct> *timeBuffer;$/;"	m	class:DefaultCommit
timeBuffer	src/cpu/o3/cpu.hh	/^    TimeBuffer<TimeStruct> timeBuffer;$/;"	m	class:FullO3CPU
timeBuffer	src/cpu/o3/decode.hh	/^    TimeBuffer<TimeStruct> *timeBuffer;$/;"	m	class:DefaultDecode
timeBuffer	src/cpu/o3/fetch.hh	/^    TimeBuffer<TimeStruct> *timeBuffer;$/;"	m	class:DefaultFetch
timeBuffer	src/cpu/o3/iew.hh	/^    TimeBuffer<TimeStruct> *timeBuffer;$/;"	m	class:DefaultIEW
timeBuffer	src/cpu/o3/inst_queue.hh	/^    TimeBuffer<TimeStruct> *timeBuffer;$/;"	m	class:InstructionQueue
timeBuffer	src/cpu/o3/rename.hh	/^    TimeBuffer<TimeStruct> *timeBuffer;$/;"	m	class:DefaultRename
timeFunc	src/sim/syscall_emul.hh	/^timeFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
timeOfLastRead	src/mem/comm_monitor.hh	/^        Tick timeOfLastRead;$/;"	m	struct:CommMonitor::MonitorStats
timeOfLastReq	src/mem/comm_monitor.hh	/^        Tick timeOfLastReq;$/;"	m	struct:CommMonitor::MonitorStats
timeOfLastWrite	src/mem/comm_monitor.hh	/^        Tick timeOfLastWrite;$/;"	m	struct:CommMonitor::MonitorStats
timeRegWithDecodeEn	src/dev/ide_ctrl.cc	/^static const uint16_t timeRegWithDecodeEn = 0x8000;$/;"	v	file:
timeSync	src/sim/root.cc	/^Root::timeSync()$/;"	f	class:Root
timeSyncEnable	src/sim/root.cc	/^Root::timeSyncEnable(bool en)$/;"	f	class:Root
timeSyncEnabled	src/sim/root.hh	/^    bool timeSyncEnabled() const { return _enabled; }$/;"	f	class:Root
timeSyncPeriod	src/sim/root.cc	/^Root::timeSyncPeriod(Time newPeriod)$/;"	f	class:Root
timeSyncPeriod	src/sim/root.hh	/^    const Time timeSyncPeriod() const { return _period; }$/;"	f	class:Root
timeSyncSpinThreshold	src/sim/root.cc	/^Root::timeSyncSpinThreshold(Time newThreshold)$/;"	f	class:Root
timeSyncSpinThreshold	src/sim/root.hh	/^    const Time timeSyncSpinThreshold() const { return _spinThreshold; }$/;"	f	class:Root
timeVal	src/dev/arm/rtc_pl031.hh	/^    uint32_t timeVal;$/;"	m	class:PL031
time_formats	src/python/m5/params.py	/^time_formats = [ "%a %b %d %H:%M:%S %Z %Y",$/;"	v
time_sync_enable	src/sim/Root.py	/^    time_sync_enable = Param.Bool(False, "whether time syncing is enabled")$/;"	v	class:Root
time_sync_period	src/sim/Root.py	/^    time_sync_period = Param.Clock("100ms", "how often to sync with real time")$/;"	v	class:Root
time_sync_spin_threshold	src/sim/Root.py	/^            Param.Clock("100us", "when less than this much time is left, spin")$/;"	v	class:Root
time_t	src/arch/arm/linux/linux.hh	/^    typedef int32_t time_t;$/;"	t	class:ArmLinux32
time_t	src/arch/arm/linux/linux.hh	/^    typedef int64_t time_t;$/;"	t	class:ArmLinux64
time_t	src/arch/power/linux/linux.hh	/^    typedef int32_t time_t;$/;"	t	class:PowerLinux
time_t	src/kern/linux/linux.hh	/^    typedef int64_t time_t;$/;"	t	class:Linux
time_t	src/kern/solaris/solaris.hh	/^    typedef int64_t time_t;$/;"	t	class:Solaris
time_t	src/kern/tru64/tru64.hh	/^    typedef uint32_t time_t;$/;"	t	class:Tru64
timeout	src/dev/x86/i8042.hh	/^        Bitfield<6> timeout;$/;"	m	class:X86ISA::I8042
timer	src/cpu/kvm/timer.hh	/^    timer_t timer;$/;"	m	class:PosixKvmTimer
timer	src/dev/x86/speaker.hh	/^        Bitfield<5> timer;$/;"	m	class:X86ISA::Speaker
timer	src/dev/x86/speaker.hh	/^    I8254 * timer;$/;"	m	class:X86ISA::Speaker
timer0	src/dev/arm/RealView.py	/^    timer0 = Sp804(int_num0=34, int_num1=34, pio_addr=0x1C110000, clock0='1MHz', clock1='1MHz')$/;"	v	class:VExpress_EMM
timer0	src/dev/arm/RealView.py	/^    timer0 = Sp804(int_num0=36, int_num1=36, pio_addr=0x10011000)$/;"	v	class:RealViewEB
timer0	src/dev/arm/RealView.py	/^    timer0 = Sp804(int_num0=36, int_num1=36, pio_addr=0x10011000)$/;"	v	class:RealViewPBX
timer0	src/dev/arm/timer_sp804.hh	/^    Timer timer0;$/;"	m	class:Sp804
timer1	src/dev/arm/RealView.py	/^    timer1 = Sp804(int_num0=35, int_num1=35, pio_addr=0x1C120000, clock0='1MHz', clock1='1MHz')$/;"	v	class:VExpress_EMM
timer1	src/dev/arm/RealView.py	/^    timer1 = Sp804(int_num0=37, int_num1=37, pio_addr=0x10012000)$/;"	v	class:RealViewEB
timer1	src/dev/arm/RealView.py	/^    timer1 = Sp804(int_num0=37, int_num1=37, pio_addr=0x10012000)$/;"	v	class:RealViewPBX
timer1	src/dev/arm/timer_sp804.hh	/^    Timer timer1;$/;"	m	class:Sp804
timerAtZero	src/dev/arm/timer_cpulocal.cc	/^CpuLocalTimer::Timer::timerAtZero()$/;"	f	class:CpuLocalTimer::Timer
timerControl	src/dev/arm/timer_cpulocal.hh	/^        TimerCtrl timerControl;$/;"	m	class:CpuLocalTimer::Timer
timerData	src/dev/alpha/tsunami_io.hh	/^    uint16_t timerData;$/;"	m	class:TsunamiIO
timerData	src/dev/mips/malta_io.hh	/^    uint16_t timerData;$/;"	m	class:MaltaIO
timerEnable	src/dev/arm/timer_sp804.hh	/^            Bitfield<7>   timerEnable;$/;"	m	class:Sp804::Timer
timerLoadValue	src/dev/arm/timer_cpulocal.hh	/^        uint32_t timerLoadValue;$/;"	m	class:CpuLocalTimer::Timer
timerMode	src/dev/arm/timer_sp804.hh	/^            Bitfield<6>   timerMode;$/;"	m	class:Sp804::Timer
timerPrescale	src/dev/arm/timer_sp804.hh	/^            Bitfield<3,2> timerPrescale;$/;"	m	class:Sp804::Timer
timerSize	src/dev/arm/timer_sp804.hh	/^            Bitfield<1>   timerSize;$/;"	m	class:Sp804::Timer
timerValue	src/dev/arm/generic_timer.hh	/^        uint32_t timerValue() const { return _counterLimit - counterValue(); }$/;"	f	class:GenericTimer::ArchTimer
timerZeroEvent	src/dev/arm/timer_cpulocal.hh	/^        EventWrapper<Timer, &Timer::timerAtZero> timerZeroEvent;$/;"	m	class:CpuLocalTimer::Timer
timer_create	src/kern/linux/linux_syscalls.hh	/^    timer_create = 244,$/;"	e	enum:SystemCalls::__anon87
timer_delete	src/kern/linux/linux_syscalls.hh	/^    timer_delete = 245,$/;"	e	enum:SystemCalls::__anon87
timer_getoverrun	src/kern/linux/linux_syscalls.hh	/^    timer_getoverrun = 246,$/;"	e	enum:SystemCalls::__anon87
timer_gettime	src/kern/linux/linux_syscalls.hh	/^    timer_gettime = 247,$/;"	e	enum:SystemCalls::__anon87
timer_settime	src/kern/linux/linux_syscalls.hh	/^    timer_settime = 248,$/;"	e	enum:SystemCalls::__anon87
times	src/kern/linux/linux_syscalls.hh	/^    times = 249,$/;"	e	enum:SystemCalls::__anon87
timesFunc	src/sim/syscall_emul.hh	/^timesFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
timesIdled	src/cpu/inorder/cpu.hh	/^    Stats::Scalar timesIdled;$/;"	m	class:InOrderCPU
timesIdled	src/cpu/o3/cpu.hh	/^    Stats::Scalar timesIdled;$/;"	m	class:FullO3CPU
timeval	src/arch/arm/linux/linux.hh	/^    struct timeval {$/;"	s	class:ArmLinux32
timeval	src/arch/arm/linux/linux.hh	/^    struct timeval {$/;"	s	class:ArmLinux64
timeval	src/kern/linux/linux.hh	/^    struct timeval {$/;"	s	class:Linux
timeval	src/kern/operatingsystem.hh	/^    } timeval;$/;"	t	class:OperatingSystem	typeref:struct:OperatingSystem::__anon90
timeval	src/kern/tru64/tru64.hh	/^    struct timeval {$/;"	s	class:Tru64
timing	src/arch/arm/stage2_lookup.hh	/^    bool                    timing;$/;"	m	class:ArmISA::Stage2LookUp
timing	src/arch/arm/table_walker.hh	/^        bool timing;$/;"	m	class:ArmISA::TableWalker::WalkerState
timing	src/arch/x86/pagetable_walker.hh	/^            bool timing;$/;"	m	class:X86ISA::Walker::WalkerState
timingFault	src/arch/x86/pagetable_walker.hh	/^            Fault timingFault;$/;"	m	class:X86ISA::Walker::WalkerState
tjdbx	src/arch/arm/miscregs.hh	/^        Bitfield<17> tjdbx;$/;"	m	namespace:ArmISA
tkill	src/kern/linux/linux_syscalls.hh	/^    tkill = 250,$/;"	e	enum:SystemCalls::__anon87
tksu	src/arch/mips/mt_constants.hh	/^    Bitfield<12, 11> tksu;$/;"	m	namespace:MipsISA
tl	src/arch/mips/pra_constants.hh	/^    Bitfield<0>  tl;$/;"	m	namespace:MipsISA
tl	src/arch/mips/pra_constants.hh	/^    Bitfield<23, 20> tl;$/;"	m	namespace:MipsISA
tl	src/arch/sparc/isa.hh	/^    uint8_t tl;             \/\/ Trap Level$/;"	m	class:SparcISA::ISA
tl	src/cpu/m5legion_interface.h	/^    uint8_t tl;$/;"	m	struct:__anon55
tlb	src/arch/arm/ArmTLB.py	/^    tlb = Param.ArmTLB("Stage 1 TLB")$/;"	v	class:ArmStage2MMU
tlb	src/arch/arm/ArmTLB.py	/^    tlb = Parent.dtb$/;"	v	class:ArmStage2DMMU
tlb	src/arch/arm/ArmTLB.py	/^    tlb = Parent.itb$/;"	v	class:ArmStage2IMMU
tlb	src/arch/arm/table_walker.hh	/^    TLB *tlb;$/;"	m	class:ArmISA::TableWalker
tlb	src/arch/sparc/tlb.hh	/^    TlbEntry *tlb;$/;"	m	class:SparcISA::TLB
tlb	src/arch/x86/pagetable_walker.hh	/^        TLB * tlb;$/;"	m	class:X86ISA::Walker
tlb	src/arch/x86/tlb.hh	/^        TlbEntry * tlb;$/;"	m	class:X86ISA::TLB
tlb	src/cpu/inorder/resources/cache_unit.cc	/^CacheUnit::tlb()$/;"	f	class:CacheUnit
tlb	src/cpu/inorder/resources/tlb_unit.cc	/^TLBUnit::tlb()$/;"	f	class:TLBUnit
tlbBlockSeqNum	src/cpu/inorder/resources/cache_unit.hh	/^    InstSeqNum tlbBlockSeqNum[ThePipeline::MaxThreads];$/;"	m	class:CacheUnit
tlbBlocked	src/cpu/inorder/resources/cache_unit.hh	/^    bool tlbBlocked[ThePipeline::MaxThreads];$/;"	m	class:CacheUnit
tlbBlocked	src/cpu/inorder/resources/tlb_unit.hh	/^    bool tlbBlocked[ThePipeline::MaxThreads];$/;"	m	class:TLBUnit
tlbStall	src/cpu/inorder/resources/cache_unit.hh	/^    bool tlbStall;$/;"	m	class:CacheRequest
tlbiALL	src/arch/arm/isa.cc	/^ISA::tlbiALL(ThreadContext *tc, bool secure_lookup, uint8_t target_el)$/;"	f	class:ArmISA::ISA
tlbiALLN	src/arch/arm/isa.cc	/^ISA::tlbiALLN(ThreadContext *tc, bool hyp, uint8_t target_el)$/;"	f	class:ArmISA::ISA
tlbiMVA	src/arch/arm/isa.cc	/^ISA::tlbiMVA(ThreadContext *tc, MiscReg newVal, bool secure_lookup, bool hyp,$/;"	f	class:ArmISA::ISA
tlbiVA	src/arch/arm/isa.cc	/^ISA::tlbiVA(ThreadContext *tc, MiscReg newVal, uint8_t asid, bool secure_lookup,$/;"	f	class:ArmISA::ISA
tlbs	src/arch/mips/mt_constants.hh	/^    Bitfield<29>     tlbs;$/;"	m	namespace:MipsISA
tle	src/arch/sparc/miscregs.hh	/^    Bitfield<8> tle;$/;"	m	namespace:SparcISA
tlsm	src/arch/mips/dt_constants.hh	/^    Bitfield<2>      tlsm;$/;"	m	namespace:MipsISA
tlz	src/arch/sparc/miscregs.hh	/^    Bitfield<0> tlz;$/;"	m	namespace:SparcISA
tm	src/dev/mips/malta_io.hh	/^    struct tm tm;$/;"	m	class:MaltaIO	typeref:struct:MaltaIO::tm
tm	src/python/m5/params.py	/^        from m5.internal.params import tm$/;"	i
tms	src/arch/arm/linux/linux.hh	/^    struct tms {$/;"	s	class:ArmLinux32
tms	src/arch/arm/linux/linux.hh	/^    struct tms {$/;"	s	class:ArmLinux64
tms	src/arch/power/linux/linux.hh	/^    struct tms {$/;"	s	class:PowerLinux
tms	src/kern/linux/linux.hh	/^    struct tms {$/;"	s	class:Linux
tms_cstime	src/arch/arm/linux/linux.hh	/^        int32_t tms_cstime;     \/\/!< system time of children$/;"	m	struct:ArmLinux32::tms
tms_cstime	src/arch/arm/linux/linux.hh	/^        int64_t tms_cstime;     \/\/!< system time of children$/;"	m	struct:ArmLinux64::tms
tms_cstime	src/arch/power/linux/linux.hh	/^        int32_t tms_cstime;     \/\/!< system time of children$/;"	m	struct:PowerLinux::tms
tms_cstime	src/kern/linux/linux.hh	/^        int64_t tms_cstime;     \/\/!< system time of children$/;"	m	struct:Linux::tms
tms_cutime	src/arch/arm/linux/linux.hh	/^        int32_t tms_cutime;     \/\/!< user time of children$/;"	m	struct:ArmLinux32::tms
tms_cutime	src/arch/arm/linux/linux.hh	/^        int64_t tms_cutime;     \/\/!< user time of children$/;"	m	struct:ArmLinux64::tms
tms_cutime	src/arch/power/linux/linux.hh	/^        int32_t tms_cutime;     \/\/!< user time of children$/;"	m	struct:PowerLinux::tms
tms_cutime	src/kern/linux/linux.hh	/^        int64_t tms_cutime;     \/\/!< user time of children$/;"	m	struct:Linux::tms
tms_stime	src/arch/arm/linux/linux.hh	/^        int32_t tms_stime;      \/\/!< system time$/;"	m	struct:ArmLinux32::tms
tms_stime	src/arch/arm/linux/linux.hh	/^        int64_t tms_stime;      \/\/!< system time$/;"	m	struct:ArmLinux64::tms
tms_stime	src/arch/power/linux/linux.hh	/^        int32_t tms_stime;      \/\/!< system time$/;"	m	struct:PowerLinux::tms
tms_stime	src/kern/linux/linux.hh	/^        int64_t tms_stime;      \/\/!< system time$/;"	m	struct:Linux::tms
tms_utime	src/arch/arm/linux/linux.hh	/^        int32_t tms_utime;      \/\/!< user time$/;"	m	struct:ArmLinux32::tms
tms_utime	src/arch/arm/linux/linux.hh	/^        int64_t tms_utime;      \/\/!< user time$/;"	m	struct:ArmLinux64::tms
tms_utime	src/arch/power/linux/linux.hh	/^        int32_t tms_utime;      \/\/!< user time$/;"	m	struct:PowerLinux::tms
tms_utime	src/kern/linux/linux.hh	/^        int64_t tms_utime;      \/\/!< user time$/;"	m	struct:Linux::tms
tmx	src/arch/mips/mt_constants.hh	/^    Bitfield<27>     tmx;$/;"	m	namespace:MipsISA
tnpc	src/arch/sparc/isa.hh	/^    uint64_t tnpc[MaxTL];   \/\/ Trap Next Program Counter (value from$/;"	m	class:SparcISA::ISA
tnpc	src/cpu/m5legion_interface.h	/^    uint64_t tnpc[8];$/;"	m	struct:__anon55
to	src/cpu/testers/traffic_gen/traffic_gen.hh	/^        uint32_t to;$/;"	m	struct:TrafficGen::Transition
to	src/dev/pcireg.h	/^        Bitfield<31,3>  to;$/;"	m	struct:MSIXCAP
to64	src/arch/arm/faults.hh	/^    bool to64;  \/\/ True if the exception is taken in AArch64 state$/;"	m	class:ArmISA::ArmFault
toBeScheduled	src/cpu/ozone/back_end.hh	/^        InstList toBeScheduled;$/;"	m	class:BackEnd::InstQueue
toBool	src/python/m5/util/convert.py	/^def toBool(value):$/;"	f
toCommit	src/cpu/o3/iew.hh	/^    typename TimeBuffer<IEWStruct>::wire toCommit;$/;"	m	class:DefaultIEW
toDecode	src/cpu/o3/fetch.hh	/^    typename TimeBuffer<FetchStruct>::wire toDecode;$/;"	m	class:DefaultFetch
toDecode	src/cpu/o3/rename.hh	/^    typename TimeBuffer<TimeStruct>::wire toDecode;$/;"	m	class:DefaultRename
toEL	src/arch/arm/faults.hh	/^    ExceptionLevel toEL;  \/\/ Target exception level$/;"	m	class:ArmISA::ArmFault
toFetch	src/cpu/o3/decode.hh	/^    typename TimeBuffer<TimeStruct>::wire toFetch;$/;"	m	class:DefaultDecode
toFetch	src/cpu/o3/iew.hh	/^    typename TimeBuffer<TimeStruct>::wire toFetch;$/;"	m	class:DefaultIEW
toFloat	src/python/m5/util/convert.py	/^def toFloat(value):$/;"	f
toFrequency	src/python/m5/util/convert.py	/^def toFrequency(value):$/;"	f
toIEW	src/cpu/o3/commit.hh	/^    typename TimeBuffer<TimeStruct>::wire toIEW;$/;"	m	class:DefaultCommit
toIEW	src/cpu/o3/rename.hh	/^    typename TimeBuffer<RenameStruct>::wire toIEW;$/;"	m	class:DefaultRename
toIEW	src/cpu/ozone/back_end.hh	/^    typename TimeBuffer<CommStruct>::wire toIEW;$/;"	m	class:BackEnd
toIEW	src/cpu/ozone/lw_back_end.hh	/^    typename TimeBuffer<CommStruct>::wire toIEW;$/;"	m	class:LWBackEnd
toIEWIndex	src/cpu/o3/rename.hh	/^    unsigned toIEWIndex;$/;"	m	class:DefaultRename
toInt	src/mem/packet.hh	/^    int toInt() const { return (int)cmd; }$/;"	f	class:MemCmd
toInteger	src/python/m5/util/convert.py	/^def toInteger(value):$/;"	f
toIpAddress	src/python/m5/util/convert.py	/^def toIpAddress(value):$/;"	f
toIpNetmask	src/python/m5/util/convert.py	/^def toIpNetmask(value):$/;"	f
toIpWithPort	src/python/m5/util/convert.py	/^def toIpWithPort(value):$/;"	f
toLatency	src/python/m5/util/convert.py	/^def toLatency(value):$/;"	f
toLookupLevel	src/arch/arm/table_walker.cc	/^TableWalker::toLookupLevel(uint8_t lookup_level_as_int)$/;"	f	class:TableWalker
toMemoryBandwidth	src/python/m5/util/convert.py	/^def toMemoryBandwidth(value):$/;"	f
toMemorySize	src/python/m5/util/convert.py	/^def toMemorySize(value):$/;"	f
toNetworkBandwidth	src/python/m5/util/convert.py	/^def toNetworkBandwidth(value):$/;"	f
toNextStageIndex	src/cpu/inorder/pipeline_stage.hh	/^    unsigned toNextStageIndex;$/;"	m	class:PipelineStage
toPrevStages	src/cpu/inorder/pipeline_stage.hh	/^    TimeBuffer<TimeStruct>::wire toPrevStages;$/;"	m	class:PipelineStage
toRename	src/cpu/o3/decode.hh	/^    typename TimeBuffer<DecodeStruct>::wire toRename;$/;"	m	class:DefaultDecode
toRename	src/cpu/o3/iew.hh	/^    typename TimeBuffer<TimeStruct>::wire toRename;$/;"	m	class:DefaultIEW
toRenameIndex	src/cpu/o3/decode.hh	/^    unsigned toRenameIndex;$/;"	m	class:DefaultDecode
toString	src/mem/packet.hh	/^    const std::string &toString() const { return commandInfo[cmd].str; }$/;"	f	class:MemCmd
toVoltage	src/python/m5/util/convert.py	/^def toVoltage(value):$/;"	f
to_lower	src/base/str.hh	/^to_lower(const std::string &s)$/;"	f
to_number	src/base/str.cc	/^bool to_number<bool>(const string &value, bool &retval)$/;"	f
to_string	src/base/addr_range.hh	/^    std::string to_string() const$/;"	f	class:AddrRange
to_string	src/base/str.hh	/^to_string(const T &value)$/;"	f
todTime	src/dev/sparc/dtod.hh	/^    uint64_t todTime;$/;"	m	class:DumbTOD
tokenize	src/base/str.cc	/^tokenize(vector<string>& v, const string &s, char token, bool ignore)$/;"	f
tokens	src/arch/isa_parser.py	/^    tokens = reserved + ($/;"	v	class:ISAParser
tokens	src/arch/micro_asm.py	/^tokens = reserved + ($/;"	v
tokens	src/base/match.hh	/^    std::vector<std::vector<std::string> > tokens;$/;"	m	class:ObjectMatch
tokens	src/mem/slicc/parser.py	/^    tokens = [ 'EQ', 'NE', 'LT', 'GT', 'LE', 'GE',$/;"	v	class:SLICC
tolerance	src/mem/cache/prefetch/stride.hh	/^        bool tolerance;$/;"	m	class:StridePrefetcher::StrideEntry
tom2	src/arch/x86/regs/misc.hh	/^        Bitfield<21> tom2; \/\/ MtrrTom2En$/;"	m	namespace:X86ISA
top	src/arch/isa_parser.py	/^    def top(self):$/;"	m	class:Stack
top	src/cpu/inorder/resource_sked.cc	/^ResourceSked::top()$/;"	f	class:ResourceSked
top	src/cpu/inorder/resources/inst_buffer.cc	/^InstBuffer::top(ThreadID tid)$/;"	f	class:InstBuffer
top	src/cpu/pred/ras.hh	/^    TheISA::PCState top()$/;"	f	class:ReturnAddrStack
top	src/cpu/profile.hh	/^    ProfileNode top;$/;"	m	class:FunctionProfile
top5	src/arch/x86/types.hh	/^        Bitfield<7,3> top5;$/;"	m	namespace:X86ISA
top6	src/arch/arm/types.hh	/^        Bitfield<7, 2> top6;$/;"	m	namespace:ArmISA
topDW	src/dev/x86/i82094aa.hh	/^        Bitfield<63, 32> topDW;$/;"	m	class:X86ISA::I82094AA
topIdx	src/cpu/pred/ras.hh	/^    unsigned topIdx()$/;"	f	class:ReturnAddrStack
topReserved	src/dev/x86/i82094aa.hh	/^        Bitfield<55, 32> topReserved;$/;"	m	class:X86ISA::I82094AA
topcode10_8	src/arch/arm/types.hh	/^        Bitfield<10, 8>  topcode10_8;$/;"	m	namespace:ArmISA
topcode10_9	src/arch/arm/types.hh	/^        Bitfield<10, 9>  topcode10_9;$/;"	m	namespace:ArmISA
topcode11_8	src/arch/arm/types.hh	/^        Bitfield<11, 8>  topcode11_8;$/;"	m	namespace:ArmISA
topcode11_9	src/arch/arm/types.hh	/^        Bitfield<11, 9>  topcode11_9;$/;"	m	namespace:ArmISA
topcode12_10	src/arch/arm/types.hh	/^        Bitfield<12, 10> topcode12_10;$/;"	m	namespace:ArmISA
topcode12_11	src/arch/arm/types.hh	/^        Bitfield<12, 11> topcode12_11;$/;"	m	namespace:ArmISA
topcode13_11	src/arch/arm/types.hh	/^        Bitfield<13, 11> topcode13_11;$/;"	m	namespace:ArmISA
topcode15_13	src/arch/arm/types.hh	/^        Bitfield<15, 13> topcode15_13;$/;"	m	namespace:ArmISA
topcode3_0	src/arch/arm/types.hh	/^        Bitfield<3, 0>   topcode3_0;$/;"	m	namespace:ArmISA
topcode7	src/arch/arm/types.hh	/^        Bitfield<7>      topcode7;$/;"	m	namespace:ArmISA
topcode7_4	src/arch/arm/types.hh	/^        Bitfield<7, 4>   topcode7_4;$/;"	m	namespace:ArmISA
topcode7_5	src/arch/arm/types.hh	/^        Bitfield<7, 5>   topcode7_5;$/;"	m	namespace:ArmISA
topcode7_6	src/arch/arm/types.hh	/^        Bitfield<7, 6>   topcode7_6;$/;"	m	namespace:ArmISA
topcode9_6	src/arch/arm/types.hh	/^        Bitfield<9,  6>  topcode9_6;$/;"	m	namespace:ArmISA
topology	src/mem/ruby/network/Network.py	/^    topology = Param.String("Not Specified",$/;"	v	class:RubyNetwork
tos	src/base/inet.hh	/^    uint8_t  tos() const { return ip_tos; }$/;"	f	struct:Net::IpHdr
tos	src/cpu/pred/ras.hh	/^    unsigned tos;$/;"	m	class:ReturnAddrStack
totBandwidth	src/dev/etherdevice.hh	/^    Stats::Formula totBandwidth;$/;"	m	class:EtherDevice
totBankLat	src/mem/dram_ctrl.hh	/^    Stats::Scalar totBankLat;$/;"	m	class:DRAMCtrl
totBusLat	src/mem/dram_ctrl.hh	/^    Stats::Scalar totBusLat;$/;"	m	class:DRAMCtrl
totBytes	src/dev/dma_device.hh	/^        const Addr totBytes;$/;"	m	struct:DmaPort::DmaReqState
totBytes	src/dev/etherdevice.hh	/^    Stats::Formula totBytes;$/;"	m	class:EtherDevice
totGap	src/mem/dram_ctrl.hh	/^    Stats::Scalar totGap;$/;"	m	class:DRAMCtrl
totMemAccLat	src/mem/dram_ctrl.hh	/^    Stats::Scalar totMemAccLat;$/;"	m	class:DRAMCtrl
totPacketRate	src/dev/etherdevice.hh	/^    Stats::Formula totPacketRate;$/;"	m	class:EtherDevice
totPackets	src/dev/etherdevice.hh	/^    Stats::Formula totPackets;$/;"	m	class:EtherDevice
totPktSize	src/mem/bus.hh	/^    Stats::Vector2d totPktSize;$/;"	m	class:BaseBus
totQLat	src/mem/dram_ctrl.hh	/^    Stats::Scalar totQLat;$/;"	m	class:DRAMCtrl
total	src/base/statistics.cc	/^Formula::total() const$/;"	f	class:Stats::Formula
total	src/base/statistics.hh	/^    Result total() const { return (*functor)(); }$/;"	f	class:Stats::FunctorProxy
total	src/base/statistics.hh	/^    Result total() const { return *scalar; }$/;"	f	class:Stats::ValueProxy
total	src/base/statistics.hh	/^    Result total() const { return data->result(); };$/;"	f	class:Stats::ScalarStatNode
total	src/base/statistics.hh	/^    Result total() const { return data->total(); };$/;"	f	class:Stats::VectorStatNode
total	src/base/statistics.hh	/^    Result total() const { return formula.total(); }$/;"	f	class:Stats::FormulaNode
total	src/base/statistics.hh	/^    Result total() const { return proxy->total(); };$/;"	f	class:Stats::ValueBase
total	src/base/statistics.hh	/^    Result total() const { return this->s.total(); }$/;"	f	class:Stats::FormulaInfoProxy
total	src/base/statistics.hh	/^    Result total() const { return this->s.total(); }$/;"	f	class:Stats::ScalarInfoProxy
total	src/base/statistics.hh	/^    Result total() const { return this->s.total(); }$/;"	f	class:Stats::VectorInfoProxy
total	src/base/statistics.hh	/^    Result total() const { return vresult[0]; };$/;"	f	class:Stats::ConstNode
total	src/base/statistics.hh	/^    Result total() { return result(); }$/;"	f	class:Stats::ScalarBase
total	src/base/statistics.hh	/^    mutable Result total;$/;"	m	class:Stats::AvgStor
total	src/base/statistics.hh	/^    total() const$/;"	f	class:Stats::BinaryNode
total	src/base/statistics.hh	/^    total() const$/;"	f	class:Stats::ConstVectorNode
total	src/base/statistics.hh	/^    total() const$/;"	f	class:Stats::ScalarProxyNode
total	src/base/statistics.hh	/^    total() const$/;"	f	class:Stats::SumNode
total	src/base/statistics.hh	/^    total() const$/;"	f	class:Stats::UnaryNode
total	src/base/statistics.hh	/^    total() const$/;"	f	class:Stats::VectorBase
total	src/base/statistics.hh	/^    total() const$/;"	f	class:Stats::VectorProxy
total	src/base/stats/info.hh	/^const FlagsType total =         0x0010;$/;"	m	namespace:Stats
total	src/base/stats/text.cc	/^    Result total;$/;"	m	struct:Stats::VectorPrint	file:
totalCommittedInsts	src/cpu/inorder/cpu.hh	/^    Stats::Scalar totalCommittedInsts;$/;"	m	class:InOrderCPU
totalCommittedInsts	src/cpu/o3/cpu.hh	/^    Stats::Scalar totalCommittedInsts;$/;"	m	class:FullO3CPU
totalCpi	src/cpu/inorder/cpu.hh	/^    Stats::Formula totalCpi;$/;"	m	class:InOrderCPU
totalCpi	src/cpu/o3/cpu.hh	/^    Stats::Formula totalCpi;$/;"	m	class:FullO3CPU
totalInstructions	src/cpu/ozone/cpu.hh	/^    virtual Counter totalInstructions() const$/;"	f	class:OzoneCPU
totalInsts	src/cpu/checker/cpu.hh	/^    virtual Counter totalInsts() const$/;"	f	class:CheckerCPU
totalInsts	src/cpu/inorder/cpu.hh	/^    virtual Counter totalInsts() const$/;"	f	class:InOrderCPU
totalInsts	src/cpu/kvm/base.cc	/^BaseKvmCPU::totalInsts() const$/;"	f	class:BaseKvmCPU
totalInsts	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::totalInsts() const$/;"	f	class:FullO3CPU
totalInsts	src/cpu/simple/base.hh	/^    virtual Counter totalInsts() const$/;"	f	class:BaseSimpleCPU
totalIpc	src/cpu/inorder/cpu.hh	/^    Stats::Formula totalIpc;$/;"	m	class:InOrderCPU
totalIpc	src/cpu/o3/cpu.hh	/^    Stats::Formula totalIpc;$/;"	m	class:FullO3CPU
totalNumInsts	src/sim/system.hh	/^    Counter totalNumInsts;$/;"	m	class:System
totalNumPhysRegs	src/cpu/o3/regfile.hh	/^    unsigned totalNumPhysRegs() const { return totalNumRegs; }$/;"	f	class:PhysRegFile
totalNumRegs	src/cpu/o3/regfile.hh	/^    unsigned totalNumRegs;$/;"	m	class:PhysRegFile
totalOps	src/cpu/checker/cpu.hh	/^    virtual Counter totalOps() const$/;"	f	class:CheckerCPU
totalOps	src/cpu/inorder/cpu.hh	/^    virtual Counter totalOps() const$/;"	f	class:InOrderCPU
totalOps	src/cpu/kvm/base.cc	/^BaseKvmCPU::totalOps() const$/;"	f	class:BaseKvmCPU
totalOps	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::totalOps() const$/;"	f	class:FullO3CPU
totalOps	src/cpu/simple/base.hh	/^    virtual Counter totalOps() const$/;"	f	class:BaseSimpleCPU
totalReadBytes	src/mem/comm_monitor.hh	/^        Stats::Scalar totalReadBytes;$/;"	m	struct:CommMonitor::MonitorStats
totalRefs	src/mem/cache/tags/base.hh	/^    Stats::Scalar totalRefs;$/;"	m	class:BaseTags
totalRxDesc	src/dev/etherdevice.hh	/^    Stats::Scalar totalRxDesc;$/;"	m	class:EtherDevice
totalRxIdle	src/dev/etherdevice.hh	/^    Stats::Scalar totalRxIdle;$/;"	m	class:EtherDevice
totalRxOk	src/dev/etherdevice.hh	/^    Stats::Scalar totalRxOk;$/;"	m	class:EtherDevice
totalRxOrn	src/dev/etherdevice.hh	/^    Stats::Scalar totalRxOrn;$/;"	m	class:EtherDevice
totalSize	src/cpu/inorder/inorder_dyn_inst.hh	/^    int totalSize;$/;"	m	class:InOrderDynInst
totalSize	src/mem/physical.hh	/^    uint64_t totalSize() const { return size; }$/;"	f	class:PhysicalMemory
totalSwi	src/dev/etherdevice.hh	/^    Stats::Scalar totalSwi;$/;"	m	class:EtherDevice
totalTxDesc	src/dev/etherdevice.hh	/^    Stats::Scalar totalTxDesc;$/;"	m	class:EtherDevice
totalTxIdle	src/dev/etherdevice.hh	/^    Stats::Scalar totalTxIdle;$/;"	m	class:EtherDevice
totalTxOk	src/dev/etherdevice.hh	/^    Stats::Scalar totalTxOk;$/;"	m	class:EtherDevice
totalVnicDistance	src/dev/sinic.hh	/^    Stats::Scalar totalVnicDistance;$/;"	m	class:Sinic::Device
totalWidth	src/cpu/o3/inst_queue.hh	/^    unsigned totalWidth;$/;"	m	class:InstructionQueue
totalWidth	src/cpu/ozone/inst_queue.hh	/^    unsigned totalWidth;$/;"	m	class:InstQueue
totalWrittenBytes	src/mem/comm_monitor.hh	/^        Stats::Scalar totalWrittenBytes;$/;"	m	struct:CommMonitor::MonitorStats
totalhigh	src/arch/alpha/linux/linux.hh	/^       uint64_t totalhigh; \/* Total high memory size *\/$/;"	m	struct:AlphaLinux::__anon2
totalhigh	src/arch/arm/linux/linux.hh	/^        uint32_t totalhigh; \/* Total high memory size *\/$/;"	m	struct:ArmLinux32::__anon8
totalhigh	src/arch/arm/linux/linux.hh	/^        uint64_t totalhigh; \/* Total high memory size *\/$/;"	m	struct:ArmLinux64::__anon11
totalhigh	src/arch/mips/linux/linux.hh	/^       uint32_t totalhigh; \/* Total high memory size *\/$/;"	m	struct:MipsLinux::__anon20
totalhigh	src/arch/sparc/linux/linux.hh	/^        uint32_t totalhigh; \/* Total high memory size *\/$/;"	m	struct:Sparc32Linux::__anon28
totalhigh	src/arch/sparc/linux/linux.hh	/^        uint64_t totalhigh; \/* Total high memory size *\/$/;"	m	struct:SparcLinux::__anon26
totalhigh	src/arch/x86/linux/linux.hh	/^        uint64_t totalhigh; \/* Total high memory size *\/$/;"	m	struct:X86Linux64::__anon32
totalhigh	src/arch/x86/linux/linux.hh	/^       uint32_t totalhigh; \/* Total high memory size *\/$/;"	m	struct:X86Linux32::__anon34
totalram	src/arch/alpha/linux/linux.hh	/^       uint64_t totalram;  \/* Total usable main memory size *\/$/;"	m	struct:AlphaLinux::__anon2
totalram	src/arch/arm/linux/linux.hh	/^        uint32_t totalram;  \/* Total usable main memory size *\/$/;"	m	struct:ArmLinux32::__anon8
totalram	src/arch/arm/linux/linux.hh	/^        uint64_t totalram;  \/* Total usable main memory size *\/$/;"	m	struct:ArmLinux64::__anon11
totalram	src/arch/mips/linux/linux.hh	/^       uint32_t totalram;  \/* Total usable main memory size *\/$/;"	m	struct:MipsLinux::__anon20
totalram	src/arch/sparc/linux/linux.hh	/^        uint32_t totalram;  \/* Total usable main memory size *\/$/;"	m	struct:Sparc32Linux::__anon28
totalram	src/arch/sparc/linux/linux.hh	/^        uint64_t totalram;  \/* Total usable main memory size *\/$/;"	m	struct:SparcLinux::__anon26
totalram	src/arch/x86/linux/linux.hh	/^        uint64_t totalram;  \/* Total usable main memory size *\/$/;"	m	struct:X86Linux64::__anon32
totalram	src/arch/x86/linux/linux.hh	/^       uint32_t totalram;  \/* Total usable main memory size *\/$/;"	m	struct:X86Linux32::__anon34
totalswap	src/arch/alpha/linux/linux.hh	/^       uint64_t totalswap; \/* Total swap space size *\/$/;"	m	struct:AlphaLinux::__anon2
totalswap	src/arch/arm/linux/linux.hh	/^        uint32_t totalswap; \/* Total swap space size *\/$/;"	m	struct:ArmLinux32::__anon8
totalswap	src/arch/arm/linux/linux.hh	/^        uint64_t totalswap; \/* Total swap space size *\/$/;"	m	struct:ArmLinux64::__anon11
totalswap	src/arch/mips/linux/linux.hh	/^       uint32_t totalswap; \/* Total swap space size *\/$/;"	m	struct:MipsLinux::__anon20
totalswap	src/arch/sparc/linux/linux.hh	/^        uint32_t totalswap; \/* Total swap space size *\/$/;"	m	struct:Sparc32Linux::__anon28
totalswap	src/arch/sparc/linux/linux.hh	/^        uint64_t totalswap; \/* Total swap space size *\/$/;"	m	struct:SparcLinux::__anon26
totalswap	src/arch/x86/linux/linux.hh	/^        uint64_t totalswap; \/* Total swap space size *\/$/;"	m	struct:X86Linux64::__anon32
totalswap	src/arch/x86/linux/linux.hh	/^       uint32_t totalswap; \/* Total swap space size *\/$/;"	m	struct:X86Linux32::__anon34
touch	src/mem/ruby/system/LRUPolicy.hh	/^LRUPolicy::touch(Index set, Index index, Tick time)$/;"	f	class:LRUPolicy
touch	src/mem/ruby/system/PseudoLRUPolicy.hh	/^PseudoLRUPolicy::touch(Index set, Index index, Tick time)$/;"	f	class:PseudoLRUPolicy
tp	src/dev/pcireg.h	/^        Bitfield<5>     tp;$/;"	m	struct:PXCAP
tpc	src/arch/arm/miscregs.hh	/^        Bitfield<23>     tpc;$/;"	m	namespace:ArmISA
tpc	src/arch/sparc/isa.hh	/^    uint64_t tpc[MaxTL];    \/\/ Trap Program Counter (value from$/;"	m	class:SparcISA::ISA
tpc	src/cpu/m5legion_interface.h	/^    uint64_t tpc[8];$/;"	m	struct:__anon55
tphcs	src/dev/pcireg.h	/^        Bitfield<13,12> tphcs;$/;"	m	struct:PXCAP
tpm	src/arch/arm/miscregs.hh	/^        Bitfield<6>    tpm;$/;"	m	namespace:ArmISA
tpmcr	src/arch/arm/miscregs.hh	/^        Bitfield<5>    tpmcr;$/;"	m	namespace:ArmISA
tpr	src/arch/x86/regs/misc.hh	/^        Bitfield<3, 0> tpr; \/\/ Task Priority Register$/;"	m	namespace:X86ISA
tps	src/python/m5/ticks.py	/^tps = 1.0e12         # default to 1 THz (1 Tick == 1 ps)$/;"	v
tps_fixed	src/python/m5/ticks.py	/^tps_fixed = False    # once set to true, can't be changed$/;"	v
tpu	src/arch/arm/miscregs.hh	/^        Bitfield<24>     tpu;$/;"	m	namespace:ArmISA
tq0	src/base/loader/coff_sym.h	/^    unsigned tq0 : 4;$/;"	m	struct:__anon41
tq1	src/base/loader/coff_sym.h	/^    unsigned tq1 : 4;   \/* 6 type qualifiers - tqPtr, etc. *\/$/;"	m	struct:__anon41
tq2	src/base/loader/coff_sym.h	/^    unsigned tq2 : 4;$/;"	m	struct:__anon41
tq3	src/base/loader/coff_sym.h	/^    unsigned tq3 : 4;$/;"	m	struct:__anon41
tq4	src/base/loader/coff_sym.h	/^    unsigned tq4 : 4;$/;"	m	struct:__anon41
tq5	src/base/loader/coff_sym.h	/^    unsigned tq5 : 4;$/;"	m	struct:__anon41
tqArray	src/base/loader/coff_symconst.h	/^#define tqArray /;"	d
tqConst	src/base/loader/coff_symconst.h	/^#define tqConst /;"	d
tqFar	src/base/loader/coff_symconst.h	/^#define tqFar /;"	d
tqMax	src/base/loader/coff_symconst.h	/^#define tqMax /;"	d
tqNil	src/base/loader/coff_symconst.h	/^#define tqNil /;"	d
tqProc	src/base/loader/coff_symconst.h	/^#define tqProc /;"	d
tqPtr	src/base/loader/coff_symconst.h	/^#define tqPtr /;"	d
tqVol	src/base/loader/coff_symconst.h	/^#define tqVol /;"	d
tr0	src/arch/arm/miscregs.hh	/^       Bitfield<1,0> tr0;$/;"	m	namespace:ArmISA
tr1	src/arch/arm/miscregs.hh	/^       Bitfield<3,2> tr1;$/;"	m	namespace:ArmISA
tr2	src/arch/arm/miscregs.hh	/^       Bitfield<5,4> tr2;$/;"	m	namespace:ArmISA
tr3	src/arch/arm/miscregs.hh	/^       Bitfield<7,6> tr3;$/;"	m	namespace:ArmISA
tr4	src/arch/arm/miscregs.hh	/^       Bitfield<9,8> tr4;$/;"	m	namespace:ArmISA
tr5	src/arch/arm/miscregs.hh	/^       Bitfield<11,10> tr5;$/;"	m	namespace:ArmISA
tr6	src/arch/arm/miscregs.hh	/^       Bitfield<13,12> tr6;$/;"	m	namespace:ArmISA
tr7	src/arch/arm/miscregs.hh	/^       Bitfield<15,14> tr7;$/;"	m	namespace:ArmISA
trace	src/arch/alpha/stacktrace.cc	/^StackTrace::trace(ThreadContext *_tc, bool is_call)$/;"	f	class:AlphaISA::StackTrace
trace	src/arch/alpha/stacktrace.hh	/^StackTrace::trace(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:AlphaISA::StackTrace
trace	src/arch/arm/stacktrace.cc	/^    StackTrace::trace(ThreadContext *_tc, bool is_call)$/;"	f	class:ArmISA::StackTrace
trace	src/arch/arm/stacktrace.hh	/^StackTrace::trace(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:ArmISA::StackTrace
trace	src/arch/mips/stacktrace.cc	/^StackTrace::trace(ThreadContext *_tc, bool is_call)$/;"	f	class:StackTrace
trace	src/arch/mips/stacktrace.hh	/^StackTrace::trace(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:MipsISA::StackTrace
trace	src/arch/power/stacktrace.cc	/^StackTrace::trace(ThreadContext *_tc, bool is_call)$/;"	f	class:PowerISA::StackTrace
trace	src/arch/power/stacktrace.hh	/^StackTrace::trace(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:PowerISA::StackTrace
trace	src/arch/sparc/stacktrace.hh	/^    trace(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:SparcISA::StackTrace
trace	src/arch/x86/stacktrace.cc	/^    StackTrace::trace(ThreadContext *_tc, bool is_call)$/;"	f	class:X86ISA::StackTrace
trace	src/arch/x86/stacktrace.hh	/^    StackTrace::trace(ThreadContext *tc, StaticInstPtr inst)$/;"	f	class:X86ISA::StackTrace
trace	src/cpu/profile.hh	/^    TheISA::StackTrace trace;$/;"	m	class:FunctionProfile
trace	src/cpu/testers/traffic_gen/generators.hh	/^        ProtoInputStream trace;$/;"	m	class:TraceGen::InputStream
trace	src/cpu/testers/traffic_gen/generators.hh	/^    InputStream trace;$/;"	m	class:TraceGen
trace	src/python/m5/main.py	/^    import trace$/;"	i
trace	src/sim/eventq.cc	/^Event::trace(const char *action)$/;"	f	class:Event
traceBlockAddr	src/cpu/testers/memtest/memtest.hh	/^    Addr traceBlockAddr;$/;"	m	class:MemTest
traceCommit	src/cpu/o3/probe/simple_trace.cc	/^void SimpleTrace::traceCommit(const O3CPUImpl::DynInstPtr &dynInst)$/;"	f	class:SimpleTrace
traceComplete	src/cpu/testers/traffic_gen/generators.hh	/^    bool traceComplete;$/;"	m	class:TraceGen
traceData	src/cpu/base_dyn_inst.hh	/^    Trace::InstRecord *traceData;$/;"	m	class:BaseDynInst
traceData	src/cpu/inorder/inorder_dyn_inst.hh	/^    Trace::InOrderTraceRecord *traceData;$/;"	m	class:InOrderDynInst
traceData	src/cpu/simple/base.hh	/^    Trace::InstRecord *traceData;$/;"	m	class:BaseSimpleCPU
traceFetch	src/cpu/o3/probe/simple_trace.cc	/^void SimpleTrace::traceFetch(const O3CPUImpl::DynInstPtr &dynInst)$/;"	f	class:SimpleTrace
traceFile	src/mem/DRAMSim2.py	/^    traceFile = Param.String("", "Output file for trace generation")$/;"	v	class:DRAMSim2
traceFunctions	src/cpu/base.hh	/^    void traceFunctions(Addr pc)$/;"	f	class:BaseCPU
traceFunctionsInternal	src/cpu/base.cc	/^BaseCPU::traceFunctionsInternal(Addr pc)$/;"	f	class:BaseCPU
traceInst	src/cpu/exetrace.cc	/^Trace::ExeTracerRecord::traceInst(StaticInstPtr inst, bool ran)$/;"	f	class:Trace::Trace::ExeTracerRecord
traceStream	src/mem/comm_monitor.hh	/^    ProtoOutputStream* traceStream;$/;"	m	class:CommMonitor
trace_addr	src/cpu/testers/memtest/MemTest.py	/^    trace_addr = Param.Addr(0, "address to trace")$/;"	v	class:MemTest
trace_file	src/mem/CommMonitor.py	/^    trace_file = Param.String("", "Packet trace output file")$/;"	v	class:CommMonitor
traceback	src/arch/isa_parser.py	/^import inspect, traceback$/;"	i
traceback	src/arch/micro_asm.py	/^import traceback$/;"	i
traceback	src/python/m5/main.py	/^        import traceback$/;"	i
tracer	src/cpu/BaseCPU.py	/^    tracer = Param.InstTracer(default_tracer, "Instruction tracer")$/;"	v
tracer	src/cpu/base.hh	/^    Trace::InstTracer * tracer;$/;"	m	class:BaseCPU
tracer	src/cpu/inorder/pipeline_stage.hh	/^    Trace::InOrderTrace *tracer;$/;"	m	class:PipelineStage
trackLoadLocked	src/mem/abstract_mem.cc	/^AbstractMemory::trackLoadLocked(PacketPtr pkt)$/;"	f	class:AbstractMemory
trackLoadLocked	src/mem/cache/blk.hh	/^    void trackLoadLocked(PacketPtr pkt)$/;"	f	class:CacheBlk
trafficGen	src/cpu/testers/traffic_gen/traffic_gen.hh	/^        TrafficGen& trafficGen;$/;"	m	class:TrafficGen::TrafficGenPort
trafficType	src/cpu/testers/networktest/networktest.hh	/^    int trafficType;$/;"	m	class:NetworkTest
traffic_type	src/cpu/testers/networktest/NetworkTest.py	/^    traffic_type = Param.Counter(0, "Traffic type: uniform random, tornado, bit complement")$/;"	v	class:NetworkTest
train_misses	src/mem/ruby/structures/RubyPrefetcher.py	/^    train_misses = Param.UInt32(4, "")$/;"	v	class:Prefetcher
tranMethod	src/arch/arm/faults.hh	/^    ArmFault::TranMethod tranMethod;$/;"	m	class:ArmISA::AbortFault
tranType	src/arch/arm/stage2_lookup.hh	/^    TLB::ArmTranslationType tranType;$/;"	m	class:ArmISA::Stage2LookUp
tranType	src/arch/arm/table_walker.hh	/^        TLB::ArmTranslationType tranType;$/;"	m	class:ArmISA::TableWalker::WalkerState
trans	src/mem/slicc/generate/tex.py	/^            trans = sm.get_transition(state, event)$/;"	v
transDist	src/mem/bus.hh	/^    Stats::Vector transDist;$/;"	m	class:BaseBus
transSize	src/dev/arm/hdlcd.hh	/^        size_t transSize;$/;"	m	class:HDLcd::DmaDoneEvent
transState	src/arch/arm/stage2_lookup.hh	/^    TLB::Translation        *transState;$/;"	m	class:ArmISA::Stage2LookUp
transState	src/arch/arm/table_walker.hh	/^        TLB::Translation *transState;$/;"	m	class:ArmISA::TableWalker::WalkerState
transaction_bins	src/mem/CommMonitor.py	/^                                          "count histograms")$/;"	v	class:CommMonitor
transferDone	src/dev/ns_gige.cc	/^NSGigE::transferDone()$/;"	f	class:NSGigE
transferDone	src/dev/sinic.cc	/^Device::transferDone()$/;"	f	class:Sinic::Device
transition	src/cpu/testers/traffic_gen/traffic_gen.cc	/^TrafficGen::transition()$/;"	f	class:TrafficGen
transitionMatrix	src/cpu/testers/traffic_gen/traffic_gen.hh	/^    std::vector<std::vector<double> > transitionMatrix;$/;"	m	class:TrafficGen
transitions_per_cycle	src/mem/ruby/slicc_interface/Controller.py	/^        Param.Int(32, "no. of  SLICC state machine transitions per cycle")$/;"	v	class:RubyController
translate	src/arch/sparc/pagetable.hh	/^    translate(Addr vaddr) const$/;"	f	class:SparcISA::PageTableEntry
translate	src/arch/x86/tlb.cc	/^TLB::translate(RequestPtr req, ThreadContext *tc, Translation *translation,$/;"	f	class:X86ISA::TLB
translate	src/mem/page_table.cc	/^PageTable::translate(Addr vaddr, Addr &paddr)$/;"	f	class:PageTable
translate	src/mem/page_table.cc	/^PageTable::translate(RequestPtr req)$/;"	f	class:PageTable
translate	src/mem/page_table.hh	/^    bool translate(Addr vaddr) { Addr dummy; return translate(vaddr, dummy); }$/;"	f	class:PageTable
translateAtomic	src/arch/alpha/tlb.cc	/^TLB::translateAtomic(RequestPtr req, ThreadContext *tc, Mode mode)$/;"	f	class:AlphaISA::TLB
translateAtomic	src/arch/arm/tlb.cc	/^TLB::translateAtomic(RequestPtr req, ThreadContext *tc, Mode mode,$/;"	f	class:TLB
translateAtomic	src/arch/mips/tlb.cc	/^TLB::translateAtomic(RequestPtr req, ThreadContext *tc, Mode mode)$/;"	f	class:TLB
translateAtomic	src/arch/power/tlb.cc	/^TLB::translateAtomic(RequestPtr req, ThreadContext *tc, Mode mode)$/;"	f	class:TLB
translateAtomic	src/arch/sparc/tlb.cc	/^TLB::translateAtomic(RequestPtr req, ThreadContext *tc, Mode mode)$/;"	f	class:SparcISA::TLB
translateAtomic	src/arch/x86/tlb.cc	/^TLB::translateAtomic(RequestPtr req, ThreadContext *tc, Mode mode)$/;"	f	class:X86ISA::TLB
translateAtomic	src/sim/tlb.cc	/^GenericTLB::translateAtomic(RequestPtr req, ThreadContext *tc, Mode)$/;"	f	class:GenericTLB
translateComplete	src/arch/arm/tlb.cc	/^TLB::translateComplete(RequestPtr req, ThreadContext *tc,$/;"	f	class:TLB
translateData	src/arch/alpha/tlb.cc	/^TLB::translateData(RequestPtr req, ThreadContext *tc, bool write)$/;"	f	class:AlphaISA::TLB
translateData	src/arch/mips/tlb.cc	/^TLB::translateData(RequestPtr req, ThreadContext *tc, bool write)$/;"	f	class:TLB
translateData	src/arch/power/tlb.cc	/^TLB::translateData(RequestPtr req, ThreadContext *tc, bool write)$/;"	f	class:TLB
translateData	src/arch/sparc/tlb.cc	/^TLB::translateData(RequestPtr req, ThreadContext *tc, bool write)$/;"	f	class:SparcISA::TLB
translateDelta	src/mem/request.hh	/^    Tick translateDelta;$/;"	m	class:Request
translateFs	src/arch/arm/tlb.cc	/^TLB::translateFs(RequestPtr req, ThreadContext *tc, Mode mode,$/;"	f	class:TLB
translateFunctional	src/arch/alpha/tlb.cc	/^TLB::translateFunctional(RequestPtr req, ThreadContext *tc, Mode mode)$/;"	f	class:AlphaISA::TLB
translateFunctional	src/arch/arm/tlb.cc	/^TLB::translateFunctional(RequestPtr req, ThreadContext *tc, Mode mode,$/;"	f	class:TLB
translateFunctional	src/arch/arm/tlb.cc	/^TLB::translateFunctional(ThreadContext *tc, Addr va, Addr &pa)$/;"	f	class:TLB
translateFunctional	src/arch/mips/tlb.cc	/^TLB::translateFunctional(RequestPtr req, ThreadContext *tc, Mode mode)$/;"	f	class:TLB
translateFunctional	src/arch/power/tlb.cc	/^TLB::translateFunctional(RequestPtr req, ThreadContext *tc, Mode mode)$/;"	f	class:TLB
translateFunctional	src/arch/sparc/tlb.cc	/^TLB::translateFunctional(RequestPtr req, ThreadContext *tc, Mode mode)$/;"	f	class:SparcISA::TLB
translateFunctional	src/arch/x86/tlb.cc	/^TLB::translateFunctional(RequestPtr req, ThreadContext *tc, Mode mode)$/;"	f	class:X86ISA::TLB
translateInst	src/arch/alpha/tlb.cc	/^TLB::translateInst(RequestPtr req, ThreadContext *tc)$/;"	f	class:AlphaISA::TLB
translateInst	src/arch/mips/tlb.cc	/^TLB::translateInst(RequestPtr req, ThreadContext *tc)$/;"	f	class:TLB
translateInst	src/arch/power/tlb.cc	/^TLB::translateInst(RequestPtr req, ThreadContext *tc)$/;"	f	class:TLB
translateInst	src/arch/sparc/tlb.cc	/^TLB::translateInst(RequestPtr req, ThreadContext *tc)$/;"	f	class:SparcISA::TLB
translateInt	src/arch/x86/tlb.cc	/^TLB::translateInt(RequestPtr req, ThreadContext *tc)$/;"	f	class:X86ISA::TLB
translatePciToDma	src/dev/alpha/tsunami_pchip.cc	/^TsunamiPChip::translatePciToDma(Addr busAddr)$/;"	f	class:TsunamiPChip
translatePciToDma	src/dev/mips/malta_pchip.cc	/^MaltaPChip::translatePciToDma(Addr busAddr)$/;"	f	class:MaltaPChip
translateSe	src/arch/arm/tlb.cc	/^TLB::translateSe(RequestPtr req, ThreadContext *tc, Mode mode,$/;"	f	class:TLB
translateTable	src/arch/arm/isa.hh	/^    enum translateTable {$/;"	g	namespace:ArmISA
translateTiming	src/arch/alpha/tlb.cc	/^TLB::translateTiming(RequestPtr req, ThreadContext *tc,$/;"	f	class:AlphaISA::TLB
translateTiming	src/arch/arm/stage2_mmu.hh	/^        Fault translateTiming(ThreadContext *tc)$/;"	f	class:ArmISA::Stage2MMU::Stage2Translation
translateTiming	src/arch/arm/tlb.cc	/^TLB::translateTiming(RequestPtr req, ThreadContext *tc,$/;"	f	class:TLB
translateTiming	src/arch/mips/tlb.cc	/^TLB::translateTiming(RequestPtr req, ThreadContext *tc,$/;"	f	class:TLB
translateTiming	src/arch/power/tlb.cc	/^TLB::translateTiming(RequestPtr req, ThreadContext *tc,$/;"	f	class:TLB
translateTiming	src/arch/sparc/tlb.cc	/^TLB::translateTiming(RequestPtr req, ThreadContext *tc,$/;"	f	class:SparcISA::TLB
translateTiming	src/arch/x86/tlb.cc	/^TLB::translateTiming(RequestPtr req, ThreadContext *tc,$/;"	f	class:X86ISA::TLB
translateTiming	src/sim/tlb.cc	/^GenericTLB::translateTiming(RequestPtr req, ThreadContext *tc,$/;"	f	class:GenericTLB
translation	src/arch/x86/pagetable_walker.hh	/^            TLB::Translation * translation;$/;"	m	class:X86ISA::Walker::WalkerState
translationCompleted	src/cpu/base_dyn_inst.hh	/^    bool translationCompleted() const { return instFlags[TranslationCompleted]; }$/;"	f	class:BaseDynInst
translationCompleted	src/cpu/base_dyn_inst.hh	/^    void translationCompleted(bool f) { instFlags[TranslationCompleted] = f; }$/;"	f	class:BaseDynInst
translationFault	src/cpu/simple/timing.cc	/^TimingSimpleCPU::translationFault(Fault fault)$/;"	f	class:TimingSimpleCPU
translationStarted	src/cpu/base_dyn_inst.hh	/^    bool translationStarted() const { return instFlags[TranslationStarted]; }$/;"	f	class:BaseDynInst
translationStarted	src/cpu/base_dyn_inst.hh	/^    void translationStarted(bool f) { instFlags[TranslationStarted] = f; }$/;"	f	class:BaseDynInst
transmit	src/dev/etherlink.cc	/^EtherLink::Link::transmit(EthPacketPtr pkt)$/;"	f	class:EtherLink::Link
transmit	src/dev/ns_gige.cc	/^NSGigE::transmit()$/;"	f	class:NSGigE
transmit	src/dev/sinic.cc	/^Device::transmit()$/;"	f	class:Sinic::Device
transmitList	src/dev/dma_device.hh	/^    std::deque<PacketPtr> transmitList;$/;"	m	class:DmaPort
transmitList	src/mem/bridge.hh	/^        std::deque<DeferredPacket> transmitList;$/;"	m	class:Bridge::BridgeMasterPort
transmitList	src/mem/bridge.hh	/^        std::deque<DeferredPacket> transmitList;$/;"	m	class:Bridge::BridgeSlavePort
transmitList	src/mem/packet_queue.hh	/^    DeferredPacketList transmitList;$/;"	m	class:PacketQueue
transmitTime	src/mem/comm_monitor.hh	/^        Tick transmitTime;$/;"	m	class:CommMonitor::CommMonitorSenderState
trap	src/base/remote_gdb.cc	/^BaseRemoteGDB::trap(int type)$/;"	f	class:BaseRemoteGDB
trap	src/cpu/inorder/cpu.cc	/^InOrderCPU::trap(Fault fault, ThreadID tid, DynInstPtr inst)$/;"	f	class:InOrderCPU
trap	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::trap(Fault fault)$/;"	f	class:InOrderDynInst
trap	src/cpu/inorder/resource.hh	/^    virtual void trap(Fault fault, ThreadID tid, DynInstPtr inst) { }$/;"	f	class:Resource
trap	src/cpu/inorder/resource_pool.cc	/^ResourcePool::trap(Fault fault, ThreadID tid, DynInstPtr inst)$/;"	f	class:ResourcePool
trap	src/cpu/inorder/resources/cache_unit.cc	/^CacheUnit::trap(Fault fault, ThreadID tid, DynInstPtr inst)$/;"	f	class:CacheUnit
trap	src/cpu/inorder/resources/fetch_seq_unit.cc	/^FetchSeqUnit::trap(Fault fault, ThreadID tid, DynInstPtr inst)$/;"	f	class:FetchSeqUnit
trap	src/cpu/inorder/resources/fetch_unit.cc	/^FetchUnit::trap(Fault fault, ThreadID tid, DynInstPtr inst)$/;"	f	class:FetchUnit
trap	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::trap(Fault fault, ThreadID tid, StaticInstPtr inst)$/;"	f	class:FullO3CPU
trap	src/cpu/o3/dyn_inst_impl.hh	/^BaseO3DynInst<Impl>::trap(Fault fault)$/;"	f	class:BaseO3DynInst
trap	src/cpu/ozone/dyn_inst_impl.hh	/^OzoneDynInst<Impl>::trap(Fault fault)$/;"	f	class:OzoneDynInst
trapContext	src/cpu/inorder/cpu.cc	/^InOrderCPU::trapContext(Fault fault, ThreadID tid, DynInstPtr inst,$/;"	f	class:InOrderCPU
trapInFlight	src/cpu/o3/commit.hh	/^    bool trapInFlight[Impl::MaxThreads];$/;"	m	class:DefaultCommit
trapLatency	src/cpu/o3/O3CPU.py	/^    trapLatency = Param.Cycles(13, "Trap latency")$/;"	v	class:DerivO3CPU
trapLatency	src/cpu/o3/commit.hh	/^    Cycles trapLatency;$/;"	m	class:DefaultCommit
trapPending	src/cpu/inorder/cpu.hh	/^    bool trapPending[ThePipeline::MaxThreads];$/;"	m	class:InOrderCPU
trapPending	src/cpu/inorder/thread_state.hh	/^    bool trapPending;$/;"	m	class:InOrderThreadState
trapPending	src/cpu/o3/thread_state.hh	/^    bool trapPending;$/;"	m	struct:O3ThreadState
trapPending	src/cpu/ozone/thread_state.hh	/^    bool trapPending;$/;"	m	struct:OzoneThreadState
trapSquash	src/cpu/o3/commit.hh	/^    bool trapSquash[Impl::MaxThreads];$/;"	m	class:DefaultCommit
trapSquash	src/cpu/ozone/lw_back_end.hh	/^    bool trapSquash;$/;"	m	class:LWBackEnd
trapType	src/arch/sparc/faults.hh	/^        const TrapType trapType;$/;"	m	struct:SparcISA::SparcFaultBase::FaultVals
trapType	src/arch/sparc/faults.hh	/^    TrapType trapType() { return SparcFault<T>::trapType() + _n; }$/;"	f	class:SparcISA::EnumeratedFault
trapType	src/arch/sparc/faults.hh	/^    TrapType trapType() { return vals.trapType; }$/;"	f	class:SparcISA::SparcFault
tre	src/arch/arm/miscregs.hh	/^        Bitfield<28>   tre;     \/\/ TEX remap enable (AArch32 only)$/;"	m	namespace:ArmISA
tree	src/arch/sparc/tlb_map.hh	/^    RangeMap tree;$/;"	m	class:SparcISA::TlbMap
tree	src/base/addr_range_map.hh	/^    RangeMap tree;$/;"	m	class:AddrRangeMap
trickBoxCheck	src/arch/arm/tlb.cc	/^TLB::trickBoxCheck(RequestPtr req, Mode mode, TlbEntry::DomainType domain)$/;"	f	class:TLB
trie	src/arch/x86/tlb.hh	/^        TlbEntryTrie trie;$/;"	m	class:X86ISA::TLB
trieHandle	src/arch/x86/pagetable.hh	/^        TlbEntryTrie::Handle trieHandle;$/;"	m	struct:X86ISA::TlbEntry
trigger	src/arch/x86/bios/IntelMP.py	/^    trigger = Param.X86IntelMPTriggerMode('ConformTrigger', 'trigger mode')$/;"	v	class:X86IntelMPIOIntAssignment
trigger	src/arch/x86/bios/IntelMP.py	/^    trigger = Param.X86IntelMPTriggerMode('ConformTrigger', 'trigger mode')$/;"	v	class:X86IntelMPLocalIntAssignment
trigger	src/arch/x86/interrupts.hh	/^        Bitfield<15> trigger;$/;"	m	class:X86ISA::Interrupts
trigger	src/arch/x86/intmessage.hh	/^        Bitfield<21> trigger;$/;"	m	namespace:X86ISA
trigger	src/arch/x86/regs/apic.hh	/^        Bitfield<15> trigger;$/;"	m	namespace:X86ISA
trigger	src/dev/x86/i82094aa.hh	/^        Bitfield<15> trigger;$/;"	m	class:X86ISA::I82094AA
triggerTimerInterrupt	src/arch/x86/interrupts.hh	/^    triggerTimerInterrupt()$/;"	f	class:X86ISA::Interrupts
triggerWrites	src/mem/dram_ctrl.cc	/^DRAMCtrl::triggerWrites()$/;"	f	class:DRAMCtrl
trim	src/mem/ruby/network/orion/ConfigFile.cc	/^void ConfigFile::trim( string& s )$/;"	f	class:ConfigFile
tru64	src/kern/tru64/dump_mbuf.cc	/^namespace tru64 {$/;"	n	file:
tru64	src/kern/tru64/dump_mbuf.hh	/^namespace tru64 {$/;"	n
tru64	src/kern/tru64/mbuf.hh	/^namespace tru64 {$/;"	n
tru64	src/kern/tru64/printf.cc	/^namespace tru64 {$/;"	n	file:
tru64	src/kern/tru64/printf.hh	/^namespace tru64 {$/;"	n
truecolor	src/base/vnc/vncinput.hh	/^        uint8_t truecolor;$/;"	m	struct:VncInput::PixelFormat
truncFP	src/arch/mips/utility.cc	/^truncFP(double val)$/;"	f	namespace:MipsISA
truncPage	src/arch/arm/utility.cc	/^truncPage(Addr addr)$/;"	f	namespace:ArmISA
truncate	src/kern/linux/linux_syscalls.hh	/^    truncate = 251,$/;"	e	enum:SystemCalls::__anon87
truncate	src/kern/tru64/tru64_syscalls.hh	/^        truncate = 129,$/;"	e	enum:SystemCalls::__anon102
truncate64	src/kern/linux/linux_syscalls.hh	/^    truncate64 = 252,$/;"	e	enum:SystemCalls::__anon87
truncate64Func	src/sim/syscall_emul.cc	/^truncate64Func(SyscallDesc *desc, int num,$/;"	f
truncateFunc	src/sim/syscall_emul.cc	/^truncateFunc(SyscallDesc *desc, int num, LiveProcess *p, ThreadContext *tc)$/;"	f
trvm	src/arch/arm/miscregs.hh	/^        Bitfield<30>     trvm;  \/\/ AArch64$/;"	m	namespace:ArmISA
tryAccess	src/mem/ruby/system/BankedArray.cc	/^BankedArray::tryAccess(Index idx)$/;"	f	class:BankedArray
tryAsSimObjectOrVector	src/python/m5/SimObject.py	/^def tryAsSimObjectOrVector(value):$/;"	f
tryCacheAccess	src/mem/ruby/system/CacheMemory.cc	/^CacheMemory::tryCacheAccess(const Address& address, RubyRequestType type,$/;"	f	class:CacheMemory
tryCompleteDrain	src/cpu/simple/atomic.cc	/^AtomicSimpleCPU::tryCompleteDrain()$/;"	f	class:AtomicSimpleCPU
tryCompleteDrain	src/cpu/simple/timing.cc	/^TimingSimpleCPU::tryCompleteDrain()$/;"	f	class:TimingSimpleCPU
tryDrain	src/cpu/kvm/base.cc	/^BaseKvmCPU::tryDrain()$/;"	f	class:BaseKvmCPU
tryDrain	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::tryDrain()$/;"	f	class:FullO3CPU
tryFile	src/base/loader/aout_object.cc	/^AoutObject::tryFile(const string &fname, int fd, size_t len, uint8_t *data)$/;"	f	class:AoutObject
tryFile	src/base/loader/dtb_object.cc	/^DtbObject::tryFile(const std::string &fname, int fd, size_t len, uint8_t *data)$/;"	f	class:DtbObject
tryFile	src/base/loader/ecoff_object.cc	/^EcoffObject::tryFile(const string &fname, int fd, size_t len, uint8_t *data)$/;"	f	class:EcoffObject
tryFile	src/base/loader/elf_object.cc	/^ElfObject::tryFile(const string &fname, int fd, size_t len, uint8_t *data)$/;"	f	class:ElfObject
tryFile	src/base/loader/raw_object.cc	/^RawObject::tryFile(const std::string &fname, int fd, size_t len, uint8_t *data)$/;"	f	class:RawObject
tryMemsetBlob	src/mem/se_translating_port_proxy.cc	/^SETranslatingPortProxy::tryMemsetBlob(Addr addr, uint8_t val, int size) const$/;"	f	class:SETranslatingPortProxy
tryReadBlob	src/mem/se_translating_port_proxy.cc	/^SETranslatingPortProxy::tryReadBlob(Addr addr, uint8_t *p, int size) const$/;"	f	class:SETranslatingPortProxy
tryReadString	src/mem/se_translating_port_proxy.cc	/^SETranslatingPortProxy::tryReadString(std::string &str, Addr addr) const$/;"	f	class:SETranslatingPortProxy
trySendTiming	src/mem/bridge.cc	/^Bridge::BridgeMasterPort::trySendTiming()$/;"	f	class:Bridge::BridgeMasterPort
trySendTiming	src/mem/bridge.cc	/^Bridge::BridgeSlavePort::trySendTiming()$/;"	f	class:Bridge::BridgeSlavePort
trySendTiming	src/mem/packet_queue.cc	/^void PacketQueue::trySendTiming()$/;"	f	class:PacketQueue
trySendTimingReq	src/dev/dma_device.cc	/^DmaPort::trySendTimingReq()$/;"	f	class:DmaPort
tryTiming	src/mem/bus.cc	/^BaseBus::Layer<SrcType,DstType>::tryTiming(SrcType* src_port)$/;"	f	class:BaseBus::Layer
tryWriteBlob	src/mem/se_translating_port_proxy.cc	/^SETranslatingPortProxy::tryWriteBlob(Addr addr, uint8_t *p, int size) const$/;"	f	class:SETranslatingPortProxy
tryWriteString	src/mem/se_translating_port_proxy.cc	/^SETranslatingPortProxy::tryWriteString(Addr addr, const char *str) const$/;"	f	class:SETranslatingPortProxy
ts	src/arch/mips/dt_constants.hh	/^    Bitfield<31>     ts;$/;"	m	namespace:MipsISA
ts	src/arch/mips/pra_constants.hh	/^    Bitfield<21>     ts;$/;"	m	namespace:MipsISA
ts	src/arch/mips/pra_constants.hh	/^    Bitfield<27, 24> ts;$/;"	m	namespace:MipsISA
ts	src/arch/x86/regs/misc.hh	/^        Bitfield<3> ts; \/\/ Task Switched$/;"	m	namespace:X86ISA
ts	src/dev/pcireg.h	/^        Bitfield<10,0>  ts;$/;"	m	struct:MSIXCAP
tsc	src/arch/arm/miscregs.hh	/^        Bitfield<19>     tsc;$/;"	m	namespace:ArmISA
tsd	src/arch/x86/regs/misc.hh	/^        Bitfield<2> tsd; \/\/ Time Stamp Disable$/;"	m	namespace:X86ISA
tse	src/dev/i8254xGBe_defs.hh	/^inline bool tse(TxDesc *d)  {$/;"	f	namespace:iGbReg::TxdOp
tsecr	src/base/inet.hh	/^    uint32_t tsecr() const { return ntohl(opt_data.timestamp[1]); }$/;"	f	struct:Net::TcpOpt
tsize	src/arch/alpha/aout_machdep.h	/^    uint64_t    tsize;          \/\/\/< text segment size$/;"	m	struct:aout_exechdr
tsize	src/base/loader/exec_ecoff.h	/^        coff_ulong  tsize;$/;"	m	struct:ecoff_aouthdr
tsoCopyBytes	src/dev/i8254xGBe.hh	/^        Addr tsoCopyBytes;$/;"	m	class:IGbE::TxDescCache
tsoDescBytesUsed	src/dev/i8254xGBe.hh	/^        Addr tsoDescBytesUsed;$/;"	m	class:IGbE::TxDescCache
tsoHeader	src/dev/i8254xGBe.hh	/^        uint8_t tsoHeader[256];$/;"	m	class:IGbE::TxDescCache
tsoHeaderLen	src/dev/i8254xGBe.hh	/^        Addr tsoHeaderLen;$/;"	m	class:IGbE::TxDescCache
tsoLoadedHeader	src/dev/i8254xGBe.hh	/^        bool tsoLoadedHeader;$/;"	m	class:IGbE::TxDescCache
tsoMss	src/dev/i8254xGBe.hh	/^        Addr tsoMss;$/;"	m	class:IGbE::TxDescCache
tsoPktHasHeader	src/dev/i8254xGBe.hh	/^        bool tsoPktHasHeader;$/;"	m	class:IGbE::TxDescCache
tsoPktPayloadBytes	src/dev/i8254xGBe.hh	/^        Addr tsoPktPayloadBytes;$/;"	m	class:IGbE::TxDescCache
tsoPkts	src/dev/i8254xGBe.hh	/^        int tsoPkts;$/;"	m	class:IGbE::TxDescCache
tsoPrevSeq	src/dev/i8254xGBe.hh	/^        Addr tsoPrevSeq;$/;"	m	class:IGbE::TxDescCache
tsoTotalLen	src/dev/i8254xGBe.hh	/^        Addr tsoTotalLen;$/;"	m	class:IGbE::TxDescCache
tsoUsedLen	src/dev/i8254xGBe.hh	/^        Addr tsoUsedLen;$/;"	m	class:IGbE::TxDescCache
tstate	src/arch/sparc/isa.hh	/^    uint64_t tstate[MaxTL]; \/\/ Trap State$/;"	m	class:SparcISA::ISA
tstate	src/cpu/m5legion_interface.h	/^    uint64_t tstate[8];$/;"	m	struct:__anon55
tsunami	src/dev/alpha/Tsunami.py	/^    tsunami = Param.Tsunami(Parent.any, "Tsunami")$/;"	v	class:TsunamiCChip
tsunami	src/dev/alpha/Tsunami.py	/^    tsunami = Param.Tsunami(Parent.any, "Tsunami")$/;"	v	class:TsunamiIO
tsunami	src/dev/alpha/Tsunami.py	/^    tsunami = Param.Tsunami(Parent.any, "Tsunami")$/;"	v	class:TsunamiPChip
tsunami	src/dev/alpha/tsunami_cchip.hh	/^    Tsunami *tsunami;$/;"	m	class:TsunamiCChip
tsunami	src/dev/alpha/tsunami_io.hh	/^        Tsunami *tsunami;$/;"	m	class:TsunamiIO::RTC
tsunami	src/dev/alpha/tsunami_io.hh	/^    Tsunami *tsunami;$/;"	m	class:TsunamiIO
tsval	src/base/inet.hh	/^    uint32_t tsval() const { return ntohl(opt_data.timestamp[0]); }$/;"	f	struct:Net::TcpOpt
tsw	src/arch/arm/miscregs.hh	/^        Bitfield<22>     tsw;$/;"	m	namespace:ArmISA
tt	src/arch/sparc/isa.hh	/^    uint16_t tt[MaxTL];     \/\/ Trap Type (Type of trap which occured$/;"	m	class:SparcISA::ISA
tt	src/cpu/m5legion_interface.h	/^    uint16_t tt[8];$/;"	m	struct:__anon55
tta	src/arch/arm/miscregs.hh	/^        Bitfield<20> tta;$/;"	m	namespace:ArmISA
tta	src/arch/arm/miscregs.hh	/^        Bitfield<28> tta;  \/\/ AArch64$/;"	m	namespace:ArmISA
ttbcr	src/arch/arm/table_walker.hh	/^        TTBCR ttbcr;$/;"	m	class:ArmISA::TableWalker::WalkerState
ttbcr	src/arch/arm/tlb.hh	/^    TTBCR ttbcr;$/;"	m	class:ArmISA::TLB
ttee	src/arch/arm/miscregs.hh	/^        Bitfield<16> ttee;$/;"	m	namespace:ArmISA
ttl	src/base/inet.hh	/^    uint8_t  ttl() const { return ip_ttl; }$/;"	f	struct:Net::IpHdr
ttlb	src/arch/arm/miscregs.hh	/^        Bitfield<25>     ttlb;$/;"	m	namespace:ArmISA
tty_termcap	src/python/m5/util/terminal.py	/^    tty_termcap = no_termcap$/;"	v
tty_termcap	src/python/m5/util/terminal.py	/^    tty_termcap = termcap$/;"	v
tu	src/arch/mips/pra_constants.hh	/^    Bitfield<30, 28> tu;$/;"	m	namespace:MipsISA
tucse	src/dev/i8254xGBe_defs.hh	/^inline int tucse(TxDesc *d) { assert(isContext(d)); return bits(d->d1,63,48); }$/;"	f	namespace:iGbReg::TxdOp
tucso	src/dev/i8254xGBe_defs.hh	/^inline int tucso(TxDesc *d) { assert(isContext(d)); return bits(d->d1,47,40); }$/;"	f	namespace:iGbReg::TxdOp
tucss	src/dev/i8254xGBe_defs.hh	/^inline int tucss(TxDesc *d) { assert(isContext(d)); return bits(d->d1,39,32); }$/;"	f	namespace:iGbReg::TxdOp
tup	src/arch/mips/dt_constants.hh	/^    Bitfield<1> tup;$/;"	m	namespace:MipsISA
tv_nsec	src/kern/solaris/solaris.hh	/^        int64_t tv_nsec;$/;"	m	struct:Solaris::tgt_timespec
tv_sec	src/arch/arm/linux/linux.hh	/^        int32_t tv_sec;         \/\/!< seconds$/;"	m	struct:ArmLinux32::timeval
tv_sec	src/arch/arm/linux/linux.hh	/^        int64_t tv_sec;         \/\/!< seconds$/;"	m	struct:ArmLinux64::timeval
tv_sec	src/kern/linux/linux.hh	/^        int64_t tv_sec;         \/\/!< seconds$/;"	m	struct:Linux::timeval
tv_sec	src/kern/operatingsystem.hh	/^        int64_t tv_sec;         \/\/!< seconds$/;"	m	struct:OperatingSystem::__anon90
tv_sec	src/kern/solaris/solaris.hh	/^        int64_t tv_sec;$/;"	m	struct:Solaris::tgt_timespec
tv_sec	src/kern/tru64/tru64.hh	/^        uint32_t tv_sec;        \/\/!< seconds$/;"	m	struct:Tru64::timeval
tv_usec	src/arch/arm/linux/linux.hh	/^        int32_t tv_usec;        \/\/!< microseconds$/;"	m	struct:ArmLinux32::timeval
tv_usec	src/arch/arm/linux/linux.hh	/^        int64_t tv_usec;        \/\/!< microseconds$/;"	m	struct:ArmLinux64::timeval
tv_usec	src/kern/linux/linux.hh	/^        int64_t tv_usec;        \/\/!< microseconds$/;"	m	struct:Linux::timeval
tv_usec	src/kern/operatingsystem.hh	/^        int64_t tv_usec;        \/\/!< microseconds$/;"	m	struct:OperatingSystem::__anon90
tv_usec	src/kern/tru64/tru64.hh	/^        uint32_t tv_usec;       \/\/!< microseconds$/;"	m	struct:Tru64::timeval
tvm	src/arch/arm/miscregs.hh	/^        Bitfield<26>     tvm;$/;"	m	namespace:ArmISA
twe	src/arch/arm/miscregs.hh	/^        Bitfield<13> twe;$/;"	m	namespace:ArmISA
twe	src/arch/arm/miscregs.hh	/^        Bitfield<14>     twe;$/;"	m	namespace:ArmISA
tweak	src/arch/micro_asm_test.py	/^    def tweak(self):$/;"	m	class:TestMacroop
twi	src/arch/arm/miscregs.hh	/^        Bitfield<12> twi;$/;"	m	namespace:ArmISA
twi	src/arch/arm/miscregs.hh	/^        Bitfield<13>     twi;$/;"	m	namespace:ArmISA
twoToOne	src/dev/x86/i8042.hh	/^        Bitfield<4> twoToOne;$/;"	m	class:X86ISA::PS2Mouse
two_queue	src/mem/cache/BaseCache.py	/^    two_queue = Param.Bool(False,$/;"	v	class:BaseCache
tx	src/dev/arm/kmi.hh	/^        Bitfield<1> tx;$/;"	m	class:Pl050
txAdvance	src/dev/ns_gige.hh	/^        txAdvance$/;"	e	enum:NSGigE::TxState
txBandwidth	src/dev/etherdevice.hh	/^    Stats::Formula txBandwidth;$/;"	m	class:EtherDevice
txBeginCopy	src/dev/sinic.hh	/^        txBeginCopy,$/;"	e	enum:Sinic::Device::TxState
txBytes	src/dev/etherdevice.hh	/^    Stats::Scalar txBytes;$/;"	m	class:EtherDevice
txComplete	src/dev/etherlink.cc	/^EtherLink::Link::txComplete(EthPacketPtr packet)$/;"	f	class:EtherLink::Link
txCopy	src/dev/sinic.hh	/^        txCopy,$/;"	e	enum:Sinic::Device::TxState
txCopyDone	src/dev/sinic.hh	/^        txCopyDone$/;"	e	enum:Sinic::Device::TxState
txDelay	src/dev/ns_gige.hh	/^    Tick txDelay;$/;"	m	class:NSGigE
txDesc32	src/dev/ns_gige.hh	/^    ns_desc32 txDesc32;$/;"	m	class:NSGigE
txDesc64	src/dev/ns_gige.hh	/^    ns_desc64 txDesc64;$/;"	m	class:NSGigE
txDescCache	src/dev/i8254xGBe.hh	/^    TxDescCache txDescCache;$/;"	m	class:IGbE
txDescCnt	src/dev/ns_gige.hh	/^    uint32_t txDescCnt;$/;"	m	class:NSGigE
txDescRead	src/dev/ns_gige.hh	/^        txDescRead,$/;"	e	enum:NSGigE::TxState
txDescRefr	src/dev/ns_gige.hh	/^        txDescRefr,$/;"	e	enum:NSGigE::TxState
txDescWrite	src/dev/ns_gige.hh	/^        txDescWrite,$/;"	e	enum:NSGigE::TxState
txDmaAddr	src/dev/ns_gige.hh	/^    Addr  txDmaAddr;$/;"	m	class:NSGigE
txDmaAddr	src/dev/sinic.hh	/^    Addr txDmaAddr;$/;"	m	class:Sinic::Device
txDmaData	src/dev/ns_gige.hh	/^    void *txDmaData;$/;"	m	class:NSGigE
txDmaData	src/dev/sinic.hh	/^    uint8_t *txDmaData;$/;"	m	class:Sinic::Device
txDmaDone	src/dev/sinic.cc	/^Device::txDmaDone()$/;"	f	class:Sinic::Device
txDmaEvent	src/dev/sinic.hh	/^    EventWrapper<Device, &Device::txDmaDone> txDmaEvent;$/;"	m	class:Sinic::Device
txDmaFree	src/dev/ns_gige.hh	/^    bool txDmaFree;$/;"	m	class:NSGigE
txDmaLen	src/dev/ns_gige.hh	/^    int   txDmaLen;$/;"	m	class:NSGigE
txDmaLen	src/dev/sinic.hh	/^    int txDmaLen;$/;"	m	class:Sinic::Device
txDmaReadDone	src/dev/ns_gige.cc	/^NSGigE::txDmaReadDone()$/;"	f	class:NSGigE
txDmaReadEvent	src/dev/ns_gige.hh	/^    EventWrapper<NSGigE, &NSGigE::txDmaReadDone> txDmaReadEvent;$/;"	m	class:NSGigE
txDmaState	src/dev/ns_gige.hh	/^    DmaState txDmaState;$/;"	m	class:NSGigE
txDmaWriteDone	src/dev/ns_gige.cc	/^NSGigE::txDmaWriteDone()$/;"	f	class:NSGigE
txDmaWriteEvent	src/dev/ns_gige.hh	/^    EventWrapper<NSGigE, &NSGigE::txDmaWriteDone> txDmaWriteEvent;$/;"	m	class:NSGigE
txDone	src/dev/etherbus.cc	/^EtherBus::txDone()$/;"	f	class:EtherBus
txDone	src/dev/etherlink.cc	/^EtherLink::Link::txDone()$/;"	f	class:EtherLink::Link
txEnable	src/dev/ns_gige.hh	/^    bool txEnable;$/;"	m	class:NSGigE
txEnable	src/dev/sinic.hh	/^    bool txEnable;$/;"	m	class:Sinic::Base
txEvent	src/dev/ethertap.hh	/^    TxEvent txEvent;$/;"	m	class:EtherTap
txEvent	src/dev/ns_gige.hh	/^    TxEvent txEvent;$/;"	m	class:NSGigE
txEvent	src/dev/sinic.hh	/^    TxEvent txEvent;$/;"	m	class:Sinic::Device
txEventTransmit	src/dev/ns_gige.hh	/^    void txEventTransmit()$/;"	f	class:NSGigE
txEventTransmit	src/dev/sinic.hh	/^    void txEventTransmit()$/;"	f	class:Sinic::Device
txFifo	src/dev/i8254xGBe.hh	/^    PacketFifo txFifo;$/;"	m	class:IGbE
txFifo	src/dev/ns_gige.hh	/^    PacketFifo txFifo;$/;"	m	class:NSGigE
txFifo	src/dev/sinic.hh	/^    PacketFifo txFifo;$/;"	m	class:Sinic::Device
txFifoBlock	src/dev/ns_gige.hh	/^        txFifoBlock,$/;"	e	enum:NSGigE::TxState
txFifoBlock	src/dev/sinic.hh	/^        txFifoBlock,$/;"	e	enum:Sinic::Device::TxState
txFifoTick	src/dev/i8254xGBe.hh	/^    bool txFifoTick;$/;"	m	class:IGbE
txFragPtr	src/dev/ns_gige.hh	/^    Addr txFragPtr;$/;"	m	class:NSGigE
txFragRead	src/dev/ns_gige.hh	/^        txFragRead,$/;"	e	enum:NSGigE::TxState
txFull	src/dev/sinic.hh	/^    bool txFull;$/;"	m	class:Sinic::Device
txHalt	src/dev/ns_gige.hh	/^    bool txHalt;$/;"	m	class:NSGigE
txIdle	src/dev/ns_gige.hh	/^        txIdle,$/;"	e	enum:NSGigE::TxState
txIdle	src/dev/sinic.hh	/^        txIdle,$/;"	e	enum:Sinic::Device::TxState
txIntrEvent	src/dev/uart8250.hh	/^    IntrEvent txIntrEvent;$/;"	m	class:Uart8250
txIpChecksums	src/dev/etherdevice.hh	/^    Stats::Scalar txIpChecksums;$/;"	m	class:EtherDevice
txKick	src/dev/ns_gige.cc	/^NSGigE::txKick()$/;"	f	class:NSGigE
txKick	src/dev/sinic.cc	/^Device::txKick()$/;"	f	class:Sinic::Device
txKickEvent	src/dev/ns_gige.hh	/^    TxKickEvent txKickEvent;$/;"	m	class:NSGigE
txKickTick	src/dev/ns_gige.hh	/^    Tick txKickTick;$/;"	m	class:NSGigE
txKickTick	src/dev/sinic.hh	/^    Tick txKickTick;$/;"	m	class:Sinic::Device
txList	src/dev/sinic.hh	/^    VirtualList txList;$/;"	m	class:Sinic::Device
txPacket	src/dev/i8254xGBe.hh	/^    EthPacketPtr txPacket;$/;"	m	class:IGbE
txPacket	src/dev/ns_gige.hh	/^    EthPacketPtr txPacket;$/;"	m	class:NSGigE
txPacket	src/dev/sinic.hh	/^    EthPacketPtr txPacket;$/;"	m	class:Sinic::Device
txPacketBufPtr	src/dev/ns_gige.hh	/^    uint8_t *txPacketBufPtr;$/;"	m	class:NSGigE
txPacketBytes	src/dev/sinic.hh	/^    int txPacketBytes;$/;"	m	class:Sinic::Device
txPacketOffset	src/dev/sinic.hh	/^    int txPacketOffset;$/;"	m	class:Sinic::Device
txPacketRate	src/dev/etherdevice.hh	/^    Stats::Formula txPacketRate;$/;"	m	class:EtherDevice
txPackets	src/dev/etherdevice.hh	/^    Stats::Scalar txPackets;$/;"	m	class:EtherDevice
txReadDelay	src/dev/i8254xGBe.hh	/^    Tick rxWriteDelay, txReadDelay;$/;"	m	class:IGbE
txReset	src/dev/ns_gige.cc	/^NSGigE::txReset()$/;"	f	class:NSGigE
txState	src/dev/ns_gige.hh	/^    TxState txState;$/;"	m	class:NSGigE
txState	src/dev/sinic.hh	/^    TxState txState;$/;"	m	class:Sinic::Device
txStateMachine	src/dev/i8254xGBe.cc	/^IGbE::txStateMachine()$/;"	f	class:IGbE
txTcpChecksums	src/dev/etherdevice.hh	/^    Stats::Scalar txTcpChecksums;$/;"	m	class:EtherDevice
txTick	src/dev/i8254xGBe.hh	/^    bool txTick;$/;"	m	class:IGbE
txUdpChecksums	src/dev/etherdevice.hh	/^    Stats::Scalar txUdpChecksums;$/;"	m	class:EtherDevice
txUnique	src/dev/sinic.hh	/^        Counter txUnique;$/;"	m	struct:Sinic::Device::VirtualReg
txUnique	src/dev/sinic.hh	/^    Counter txUnique;$/;"	m	class:Sinic::Device
txWire	src/dev/i8254xGBe.cc	/^IGbE::txWire()$/;"	f	class:IGbE
txXferLen	src/dev/ns_gige.hh	/^    uint32_t txXferLen;$/;"	m	class:NSGigE
tx_delay	src/dev/Ethernet.py	/^    tx_delay = Param.Latency('1us', "Transmit Delay")$/;"	v	class:EtherDevBase
tx_desc_cache_size	src/dev/Ethernet.py	/^    tx_desc_cache_size = Param.Int(64,$/;"	v	class:IGbE
tx_fifo_high_mark	src/dev/Ethernet.py	/^    tx_fifo_high_mark = Param.MemorySize('384kB', "tx fifo high threshold")$/;"	v	class:Sinic
tx_fifo_size	src/dev/Ethernet.py	/^    tx_fifo_size = Param.MemorySize('384kB', "Size of the tx FIFO")$/;"	v	class:IGbE
tx_fifo_size	src/dev/Ethernet.py	/^    tx_fifo_size = Param.MemorySize('512kB', "max size of tx fifo")$/;"	v	class:EtherDevBase
tx_fifo_threshold	src/dev/Ethernet.py	/^    tx_fifo_threshold = Param.MemorySize('128kB', "tx fifo low threshold")$/;"	v	class:Sinic
tx_max_copy	src/dev/Ethernet.py	/^    tx_max_copy = Param.MemorySize('16kB', "tx max copy")$/;"	v	class:Sinic
tx_read_delay	src/dev/Ethernet.py	/^    tx_read_delay = Param.Latency('0ns', "delay after tx dma read")$/;"	v	class:IGbE
tx_thread	src/dev/Ethernet.py	/^    tx_thread = Param.Bool(False, "dedicated kernel threads for receive")$/;"	v	class:EtherDevBase
txbuf	src/dev/terminal.hh	/^    CircleBuf txbuf;$/;"	m	class:Terminal
txbusy	src/dev/arm/kmi.hh	/^        Bitfield<5> txbusy;$/;"	m	class:Pl050
txcfg	src/dev/ns_gige.hh	/^    uint32_t    txcfg;$/;"	m	struct:dp_regs
txdca_ctl	src/dev/i8254xGBe_defs.hh	/^    TXDCA_CTL txdca_ctl;$/;"	m	struct:iGbReg::Regs
txdctl	src/dev/i8254xGBe_defs.hh	/^    TXDCTL txdctl;$/;"	m	struct:iGbReg::Regs
txdp	src/dev/ns_gige.hh	/^    uint32_t    txdp;$/;"	m	struct:dp_regs
txdp_hi	src/dev/ns_gige.hh	/^    uint32_t    txdp_hi;$/;"	m	struct:dp_regs
txempty	src/dev/arm/kmi.hh	/^        Bitfield<6> txempty;$/;"	m	class:Pl050
txim	src/dev/arm/pl011.hh	/^        Bitfield<5> txim;$/;"	m	class:Pl011
txint	src/dev/etherlink.hh	/^        Interface *txint;$/;"	m	class:EtherLink::Link
txint_enable	src/dev/arm/kmi.hh	/^        Bitfield<3> txint_enable;$/;"	m	class:Pl050
txlink	src/dev/etherlink.hh	/^        Link *txlink;$/;"	m	class:EtherLink::Interface
txsm	src/dev/i8254xGBe_defs.hh	/^inline bool txsm(TxDesc *d)  { return isData(d) && bits(d->d2, 41,41); }$/;"	f	namespace:iGbReg::TxdOp
type	src/arch/alpha/AlphaISA.py	/^    type = 'AlphaISA'$/;"	v	class:AlphaISA
type	src/arch/alpha/AlphaInterrupts.py	/^    type = 'AlphaInterrupts'$/;"	v	class:AlphaInterrupts
type	src/arch/alpha/AlphaSystem.py	/^    type = 'AlphaSystem'$/;"	v	class:AlphaSystem
type	src/arch/alpha/AlphaSystem.py	/^    type = 'FreebsdAlphaSystem'$/;"	v	class:FreebsdAlphaSystem
type	src/arch/alpha/AlphaSystem.py	/^    type = 'LinuxAlphaSystem'$/;"	v	class:LinuxAlphaSystem
type	src/arch/alpha/AlphaSystem.py	/^    type = 'Tru64AlphaSystem'$/;"	v	class:Tru64AlphaSystem
type	src/arch/alpha/AlphaTLB.py	/^    type = 'AlphaTLB'$/;"	v	class:AlphaTLB
type	src/arch/arm/ArmISA.py	/^    type = 'ArmISA'$/;"	v	class:ArmISA
type	src/arch/arm/ArmInterrupts.py	/^    type = 'ArmInterrupts'$/;"	v	class:ArmInterrupts
type	src/arch/arm/ArmNativeTrace.py	/^    type = 'ArmNativeTrace'$/;"	v	class:ArmNativeTrace
type	src/arch/arm/ArmSystem.py	/^    type = 'ArmSystem'$/;"	v	class:ArmSystem
type	src/arch/arm/ArmSystem.py	/^    type = 'LinuxArmSystem'$/;"	v	class:LinuxArmSystem
type	src/arch/arm/ArmTLB.py	/^    type = 'ArmStage2MMU'$/;"	v	class:ArmStage2MMU
type	src/arch/arm/ArmTLB.py	/^    type = 'ArmTLB'$/;"	v	class:ArmTLB
type	src/arch/arm/ArmTLB.py	/^    type = 'ArmTableWalker'$/;"	v	class:ArmTableWalker
type	src/arch/arm/insts/macromem.hh	/^    ArmExtendType type;$/;"	m	class:ArmISA::MicroIntRegXOp
type	src/arch/arm/insts/mem64.hh	/^    ArmExtendType type;$/;"	m	class:ArmISA::MemoryReg64
type	src/arch/arm/table_walker.hh	/^        EntryType type() const$/;"	f	class:ArmISA::TableWalker::L1Descriptor
type	src/arch/arm/table_walker.hh	/^        EntryType type() const$/;"	f	class:ArmISA::TableWalker::LongDescriptor
type	src/arch/mips/MipsISA.py	/^    type = 'MipsISA'$/;"	v	class:MipsISA
type	src/arch/mips/MipsInterrupts.py	/^    type = 'MipsInterrupts'$/;"	v	class:MipsInterrupts
type	src/arch/mips/MipsSystem.py	/^    type = 'BareIronMipsSystem'$/;"	v	class:BareIronMipsSystem
type	src/arch/mips/MipsSystem.py	/^    type = 'LinuxMipsSystem'$/;"	v	class:LinuxMipsSystem
type	src/arch/mips/MipsSystem.py	/^    type = 'MipsSystem'$/;"	v	class:MipsSystem
type	src/arch/mips/MipsTLB.py	/^    type = 'MipsTLB'$/;"	v	class:MipsTLB
type	src/arch/power/PowerISA.py	/^    type = 'PowerISA'$/;"	v	class:PowerISA
type	src/arch/power/PowerInterrupts.py	/^    type = 'PowerInterrupts'$/;"	v	class:PowerInterrupts
type	src/arch/power/PowerTLB.py	/^    type = 'PowerTLB'$/;"	v	class:PowerTLB
type	src/arch/sparc/SparcISA.py	/^    type = 'SparcISA'$/;"	v	class:SparcISA
type	src/arch/sparc/SparcInterrupts.py	/^    type = 'SparcInterrupts'$/;"	v	class:SparcInterrupts
type	src/arch/sparc/SparcNativeTrace.py	/^    type = 'SparcNativeTrace'$/;"	v	class:SparcNativeTrace
type	src/arch/sparc/SparcSystem.py	/^    type = 'SparcSystem'$/;"	v	class:SparcSystem
type	src/arch/sparc/SparcTLB.py	/^    type = 'SparcTLB'$/;"	v	class:SparcTLB
type	src/arch/sparc/pagetable.hh	/^    EntryType type;$/;"	m	class:SparcISA::PageTableEntry
type	src/arch/x86/X86ISA.py	/^    type = 'X86ISA'$/;"	v	class:X86ISA
type	src/arch/x86/X86LocalApic.py	/^    type = 'X86LocalApic'$/;"	v	class:X86LocalApic
type	src/arch/x86/X86NativeTrace.py	/^    type = 'X86NativeTrace'$/;"	v	class:X86NativeTrace
type	src/arch/x86/X86System.py	/^    type = 'LinuxX86System'$/;"	v	class:LinuxX86System
type	src/arch/x86/X86System.py	/^    type = 'X86System'$/;"	v	class:X86System
type	src/arch/x86/X86TLB.py	/^    type = 'X86PagetableWalker'$/;"	v	class:X86PagetableWalker
type	src/arch/x86/X86TLB.py	/^    type = 'X86TLB'$/;"	v	class:X86TLB
type	src/arch/x86/bios/ACPI.py	/^    type = 'X86ACPIRSDP'$/;"	v	class:X86ACPIRSDP
type	src/arch/x86/bios/ACPI.py	/^    type = 'X86ACPIRSDT'$/;"	v	class:X86ACPIRSDT
type	src/arch/x86/bios/ACPI.py	/^    type = 'X86ACPISysDescTable'$/;"	v	class:X86ACPISysDescTable
type	src/arch/x86/bios/ACPI.py	/^    type = 'X86ACPIXSDT'$/;"	v	class:X86ACPIXSDT
type	src/arch/x86/bios/E820.py	/^    type = 'X86E820Entry'$/;"	v	class:X86E820Entry
type	src/arch/x86/bios/E820.py	/^    type = 'X86E820Table'$/;"	v	class:X86E820Table
type	src/arch/x86/bios/IntelMP.py	/^    type = 'X86IntelMPAddrSpaceMapping'$/;"	v	class:X86IntelMPAddrSpaceMapping
type	src/arch/x86/bios/IntelMP.py	/^    type = 'X86IntelMPBaseConfigEntry'$/;"	v	class:X86IntelMPBaseConfigEntry
type	src/arch/x86/bios/IntelMP.py	/^    type = 'X86IntelMPBus'$/;"	v	class:X86IntelMPBus
type	src/arch/x86/bios/IntelMP.py	/^    type = 'X86IntelMPBusHierarchy'$/;"	v	class:X86IntelMPBusHierarchy
type	src/arch/x86/bios/IntelMP.py	/^    type = 'X86IntelMPCompatAddrSpaceMod'$/;"	v	class:X86IntelMPCompatAddrSpaceMod
type	src/arch/x86/bios/IntelMP.py	/^    type = 'X86IntelMPConfigTable'$/;"	v	class:X86IntelMPConfigTable
type	src/arch/x86/bios/IntelMP.py	/^    type = 'X86IntelMPExtConfigEntry'$/;"	v	class:X86IntelMPExtConfigEntry
type	src/arch/x86/bios/IntelMP.py	/^    type = 'X86IntelMPFloatingPointer'$/;"	v	class:X86IntelMPFloatingPointer
type	src/arch/x86/bios/IntelMP.py	/^    type = 'X86IntelMPIOAPIC'$/;"	v	class:X86IntelMPIOAPIC
type	src/arch/x86/bios/IntelMP.py	/^    type = 'X86IntelMPIOIntAssignment'$/;"	v	class:X86IntelMPIOIntAssignment
type	src/arch/x86/bios/IntelMP.py	/^    type = 'X86IntelMPLocalIntAssignment'$/;"	v	class:X86IntelMPLocalIntAssignment
type	src/arch/x86/bios/IntelMP.py	/^    type = 'X86IntelMPProcessor'$/;"	v	class:X86IntelMPProcessor
type	src/arch/x86/bios/SMBios.py	/^    type = 'X86SMBiosBiosInformation'$/;"	v	class:X86SMBiosBiosInformation
type	src/arch/x86/bios/SMBios.py	/^    type = 'X86SMBiosSMBiosStructure'$/;"	v	class:X86SMBiosSMBiosStructure
type	src/arch/x86/bios/SMBios.py	/^    type = 'X86SMBiosSMBiosTable'$/;"	v	class:X86SMBiosSMBiosTable
type	src/arch/x86/bios/e820.hh	/^        uint32_t type;$/;"	m	class:X86ISA::E820Entry
type	src/arch/x86/bios/intelmp.hh	/^    uint8_t type;$/;"	m	class:X86ISA::IntelMP::BaseConfigEntry
type	src/arch/x86/bios/intelmp.hh	/^    uint8_t type;$/;"	m	class:X86ISA::IntelMP::ExtConfigEntry
type	src/arch/x86/bios/smbios.hh	/^    uint8_t type;$/;"	m	class:X86ISA::SMBios::SMBiosStructure
type	src/arch/x86/regs/misc.hh	/^        Bitfield<11, 8> type;$/;"	m	namespace:X86ISA
type	src/arch/x86/regs/misc.hh	/^        Bitfield<43, 40> type;$/;"	m	namespace:X86ISA
type	src/arch/x86/regs/misc.hh	/^        Bitfield<7, 0> type; \/\/ Default memory type$/;"	m	namespace:X86ISA
type	src/arch/x86/regs/misc.hh	/^        Bitfield<7, 0> type; \/\/ Default type$/;"	m	namespace:X86ISA
type	src/base/CPA.py	/^    type = 'CPA'$/;"	v	class:CPA
type	src/base/inet.hh	/^    uint16_t type() const {$/;"	f	struct:Net::EthHdr
type	src/base/inet.hh	/^    uint8_t type() const { return opt_type; }$/;"	f	struct:Net::IpOpt
type	src/base/inet.hh	/^    uint8_t type() const { return opt_type; }$/;"	f	struct:Net::TcpOpt
type	src/base/inet.hh	/^    uint8_t type;$/;"	m	struct:Net::ip6_opt_dstopts
type	src/base/inet.hh	/^    uint8_t type;$/;"	m	struct:Net::ip6_opt_routing_type2
type	src/base/statistics.hh	/^    const DistType type;$/;"	m	struct:Stats::DistParams
type	src/base/stats/info.hh	/^    DistType type;$/;"	m	struct:Stats::DistData
type	src/base/vnc/Vnc.py	/^    type = 'VncInput'$/;"	v	class:VncInput
type	src/base/vnc/Vnc.py	/^    type = 'VncServer'$/;"	v	class:VncServer
type	src/base/vnc/vncinput.hh	/^        uint8_t type;$/;"	m	struct:VncInput::ClientCutTextMessage
type	src/base/vnc/vncinput.hh	/^        uint8_t type;$/;"	m	struct:VncInput::FrameBufferUpdateReq
type	src/base/vnc/vncinput.hh	/^        uint8_t type;$/;"	m	struct:VncInput::KeyEventMessage
type	src/base/vnc/vncinput.hh	/^        uint8_t type;$/;"	m	struct:VncInput::PixelEncodingsMessage
type	src/base/vnc/vncinput.hh	/^        uint8_t type;$/;"	m	struct:VncInput::PixelFormatMessage
type	src/base/vnc/vncinput.hh	/^        uint8_t type;$/;"	m	struct:VncInput::PointerEventMessage
type	src/base/vnc/vncserver.hh	/^        uint8_t type;$/;"	m	struct:VncServer::FrameBufferUpdate
type	src/base/vnc/vncserver.hh	/^        uint8_t type;$/;"	m	struct:VncServer::ServerCutText
type	src/cpu/BaseCPU.py	/^    type = 'BaseCPU'$/;"	v	class:BaseCPU
type	src/cpu/CheckerCPU.py	/^    type = 'CheckerCPU'$/;"	v	class:CheckerCPU
type	src/cpu/DummyChecker.py	/^    type = 'DummyChecker'$/;"	v	class:DummyChecker
type	src/cpu/ExeTracer.py	/^    type = 'ExeTracer'$/;"	v	class:ExeTracer
type	src/cpu/FuncUnit.py	/^    type = 'FUDesc'$/;"	v	class:FUDesc
type	src/cpu/FuncUnit.py	/^    type = 'OpDesc'$/;"	v	class:OpDesc
type	src/cpu/IntelTrace.py	/^    type = 'IntelTrace'$/;"	v	class:IntelTrace
type	src/cpu/IntrControl.py	/^    type = 'IntrControl'$/;"	v	class:IntrControl
type	src/cpu/LegionTrace.py	/^    type = 'LegionTrace'$/;"	v	class:LegionTrace
type	src/cpu/NativeTrace.py	/^    type = 'NativeTrace'$/;"	v	class:NativeTrace
type	src/cpu/inorder/InOrderCPU.py	/^    type = 'InOrderCPU'$/;"	v	class:InOrderCPU
type	src/cpu/inorder/InOrderTrace.py	/^    type = 'InOrderTrace'$/;"	v	class:InOrderTrace
type	src/cpu/inorder/inorder_dyn_inst.hh	/^        ResultType type;$/;"	m	struct:InOrderDynInst::InstResult
type	src/cpu/kvm/ArmKvmCPU.py	/^    type = 'ArmKvmCPU'$/;"	v	class:ArmKvmCPU
type	src/cpu/kvm/BaseKvmCPU.py	/^    type = 'BaseKvmCPU'$/;"	v	class:BaseKvmCPU
type	src/cpu/kvm/KvmVM.py	/^    type = 'KvmVM'$/;"	v	class:KvmVM
type	src/cpu/kvm/X86KvmCPU.py	/^    type = 'X86KvmCPU'$/;"	v	class:X86KvmCPU
type	src/cpu/o3/FUPool.py	/^    type = 'FUPool'$/;"	v	class:FUPool
type	src/cpu/o3/O3CPU.py	/^    type = 'DerivO3CPU'$/;"	v	class:DerivO3CPU
type	src/cpu/o3/O3Checker.py	/^    type = 'O3Checker'$/;"	v	class:O3Checker
type	src/cpu/o3/probe/SimpleTrace.py	/^    type = 'SimpleTrace'$/;"	v	class:SimpleTrace
type	src/cpu/ozone/OzoneCPU.py	/^    type = 'DerivOzoneCPU'$/;"	v	class:DerivOzoneCPU
type	src/cpu/ozone/OzoneChecker.py	/^    type = 'OzoneChecker'$/;"	v	class:OzoneChecker
type	src/cpu/ozone/SimpleOzoneCPU.py	/^    type = 'SimpleOzoneCPU'$/;"	v	class:SimpleOzoneCPU
type	src/cpu/pred/BranchPredictor.py	/^    type = 'BranchPredictor'$/;"	v	class:BranchPredictor
type	src/cpu/simple/AtomicSimpleCPU.py	/^    type = 'AtomicSimpleCPU'$/;"	v	class:AtomicSimpleCPU
type	src/cpu/simple/BaseSimpleCPU.py	/^    type = 'BaseSimpleCPU'$/;"	v	class:BaseSimpleCPU
type	src/cpu/simple/TimingSimpleCPU.py	/^    type = 'TimingSimpleCPU'$/;"	v	class:TimingSimpleCPU
type	src/cpu/testers/directedtest/RubyDirectedTester.py	/^    type = 'DirectedGenerator'$/;"	v	class:DirectedGenerator
type	src/cpu/testers/directedtest/RubyDirectedTester.py	/^    type = 'InvalidateGenerator'$/;"	v	class:InvalidateGenerator
type	src/cpu/testers/directedtest/RubyDirectedTester.py	/^    type = 'RubyDirectedTester'$/;"	v	class:RubyDirectedTester
type	src/cpu/testers/directedtest/RubyDirectedTester.py	/^    type = 'SeriesRequestGenerator'$/;"	v	class:SeriesRequestGenerator
type	src/cpu/testers/memtest/MemTest.py	/^    type = 'MemTest'$/;"	v	class:MemTest
type	src/cpu/testers/networktest/NetworkTest.py	/^    type = 'NetworkTest'$/;"	v	class:NetworkTest
type	src/cpu/testers/rubytest/RubyTester.py	/^    type = 'RubyTester'$/;"	v	class:RubyTester
type	src/cpu/testers/traffic_gen/TrafficGen.py	/^    type = 'TrafficGen'$/;"	v	class:TrafficGen
type	src/dev/BadDevice.py	/^    type = 'BadDevice'$/;"	v	class:BadDevice
type	src/dev/CopyEngine.py	/^    type = 'CopyEngine'$/;"	v	class:CopyEngine
type	src/dev/Device.py	/^    type = 'BasicPioDevice'$/;"	v	class:BasicPioDevice
type	src/dev/Device.py	/^    type = 'DmaDevice'$/;"	v	class:DmaDevice
type	src/dev/Device.py	/^    type = 'IsaFake'$/;"	v	class:IsaFake
type	src/dev/Device.py	/^    type = 'PioDevice'$/;"	v	class:PioDevice
type	src/dev/DiskImage.py	/^    type = 'CowDiskImage'$/;"	v	class:CowDiskImage
type	src/dev/DiskImage.py	/^    type = 'DiskImage'$/;"	v	class:DiskImage
type	src/dev/DiskImage.py	/^    type = 'RawDiskImage'$/;"	v	class:RawDiskImage
type	src/dev/Ethernet.py	/^    type = 'EtherBus'$/;"	v	class:EtherBus
type	src/dev/Ethernet.py	/^    type = 'EtherDevBase'$/;"	v	class:EtherDevBase
type	src/dev/Ethernet.py	/^    type = 'EtherDevice'$/;"	v	class:EtherDevice
type	src/dev/Ethernet.py	/^    type = 'EtherDump'$/;"	v	class:EtherDump
type	src/dev/Ethernet.py	/^    type = 'EtherLink'$/;"	v	class:EtherLink
type	src/dev/Ethernet.py	/^    type = 'EtherObject'$/;"	v	class:EtherObject
type	src/dev/Ethernet.py	/^    type = 'EtherTap'$/;"	v	class:EtherTap
type	src/dev/Ethernet.py	/^    type = 'IGbE'$/;"	v	class:IGbE
type	src/dev/Ethernet.py	/^    type = 'NSGigE'$/;"	v	class:NSGigE
type	src/dev/Ethernet.py	/^    type = 'Sinic'$/;"	v	class:Sinic
type	src/dev/Ide.py	/^    type = 'IdeController'$/;"	v	class:IdeController
type	src/dev/Ide.py	/^    type = 'IdeDisk'$/;"	v	class:IdeDisk
type	src/dev/Pci.py	/^    type = 'PciConfigAll'$/;"	v	class:PciConfigAll
type	src/dev/Pci.py	/^    type = 'PciDevice'$/;"	v	class:PciDevice
type	src/dev/Platform.py	/^    type = 'Platform'$/;"	v	class:Platform
type	src/dev/SimpleDisk.py	/^    type = 'SimpleDisk'$/;"	v	class:SimpleDisk
type	src/dev/Terminal.py	/^    type = 'Terminal'$/;"	v	class:Terminal
type	src/dev/Uart.py	/^    type = 'Uart'$/;"	v	class:Uart
type	src/dev/Uart.py	/^    type = 'Uart8250'$/;"	v	class:Uart8250
type	src/dev/alpha/AlphaBackdoor.py	/^    type = 'AlphaBackdoor'$/;"	v	class:AlphaBackdoor
type	src/dev/alpha/Tsunami.py	/^    type = 'Tsunami'$/;"	v	class:Tsunami
type	src/dev/alpha/Tsunami.py	/^    type = 'TsunamiCChip'$/;"	v	class:TsunamiCChip
type	src/dev/alpha/Tsunami.py	/^    type = 'TsunamiIO'$/;"	v	class:TsunamiIO
type	src/dev/alpha/Tsunami.py	/^    type = 'TsunamiPChip'$/;"	v	class:TsunamiPChip
type	src/dev/arm/Gic.py	/^    type = 'BaseGic'$/;"	v	class:BaseGic
type	src/dev/arm/Gic.py	/^    type = 'Pl390'$/;"	v	class:Pl390
type	src/dev/arm/RealView.py	/^    type = 'A9SCU'$/;"	v	class:A9SCU
type	src/dev/arm/RealView.py	/^    type = 'AmbaDmaDevice'$/;"	v	class:AmbaDmaDevice
type	src/dev/arm/RealView.py	/^    type = 'AmbaFake'$/;"	v	class:AmbaFake
type	src/dev/arm/RealView.py	/^    type = 'AmbaIntDevice'$/;"	v	class:AmbaIntDevice
type	src/dev/arm/RealView.py	/^    type = 'AmbaPioDevice'$/;"	v	class:AmbaPioDevice
type	src/dev/arm/RealView.py	/^    type = 'CpuLocalTimer'$/;"	v	class:CpuLocalTimer
type	src/dev/arm/RealView.py	/^    type = 'GenericTimer'$/;"	v	class:GenericTimer
type	src/dev/arm/RealView.py	/^    type = 'HDLcd'$/;"	v	class:HDLcd
type	src/dev/arm/RealView.py	/^    type = 'PL031'$/;"	v	class:PL031
type	src/dev/arm/RealView.py	/^    type = 'Pl011'$/;"	v	class:Pl011
type	src/dev/arm/RealView.py	/^    type = 'Pl050'$/;"	v	class:Pl050
type	src/dev/arm/RealView.py	/^    type = 'Pl111'$/;"	v	class:Pl111
type	src/dev/arm/RealView.py	/^    type = 'RealView'$/;"	v	class:RealView
type	src/dev/arm/RealView.py	/^    type = 'RealViewCtrl'$/;"	v	class:RealViewCtrl
type	src/dev/arm/RealView.py	/^    type = 'Sp804'$/;"	v	class:Sp804
type	src/dev/arm/RealView.py	/^    type = 'VGic'$/;"	v	class:VGic
type	src/dev/arm/kmi.hh	/^        Bitfield<5> type;$/;"	m	class:Pl050
type	src/dev/mips/Malta.py	/^    type = 'Malta'$/;"	v	class:Malta
type	src/dev/mips/Malta.py	/^    type = 'MaltaCChip'$/;"	v	class:MaltaCChip
type	src/dev/mips/Malta.py	/^    type = 'MaltaIO'$/;"	v	class:MaltaIO
type	src/dev/mips/Malta.py	/^    type = 'MaltaPChip'$/;"	v	class:MaltaPChip
type	src/dev/sparc/T1000.py	/^    type = 'DumbTOD'$/;"	v	class:DumbTOD
type	src/dev/sparc/T1000.py	/^    type = 'Iob'$/;"	v	class:Iob
type	src/dev/sparc/T1000.py	/^    type = 'MmDisk'$/;"	v	class:MmDisk
type	src/dev/sparc/T1000.py	/^    type = 'T1000'$/;"	v	class:T1000
type	src/dev/x86/Cmos.py	/^    type = 'Cmos'$/;"	v	class:Cmos
type	src/dev/x86/I8042.py	/^    type = 'I8042'$/;"	v	class:I8042
type	src/dev/x86/I82094AA.py	/^    type = 'I82094AA'$/;"	v	class:I82094AA
type	src/dev/x86/I8237.py	/^    type = 'I8237'$/;"	v	class:I8237
type	src/dev/x86/I8254.py	/^    type = 'I8254'$/;"	v	class:I8254
type	src/dev/x86/I8259.py	/^    type = 'I8259'$/;"	v	class:I8259
type	src/dev/x86/Pc.py	/^    type = 'Pc'$/;"	v	class:Pc
type	src/dev/x86/PcSpeaker.py	/^    type = 'PcSpeaker'$/;"	v	class:PcSpeaker
type	src/dev/x86/SouthBridge.py	/^    type = 'SouthBridge'$/;"	v	class:SouthBridge
type	src/dev/x86/X86IntPin.py	/^    type = 'X86IntLine'$/;"	v	class:X86IntLine
type	src/dev/x86/X86IntPin.py	/^    type = 'X86IntSinkPin'$/;"	v	class:X86IntSinkPin
type	src/dev/x86/X86IntPin.py	/^    type = 'X86IntSourcePin'$/;"	v	class:X86IntSourcePin
type	src/kern/tru64/tru64.hh	/^        int type;       \/\/!< type$/;"	m	struct:Tru64::nxm_thread_attr
type	src/mem/AbstractMemory.py	/^    type = 'AbstractMemory'$/;"	v	class:AbstractMemory
type	src/mem/AddrMapper.py	/^    type = 'AddrMapper'$/;"	v	class:AddrMapper
type	src/mem/AddrMapper.py	/^    type = 'RangeAddrMapper'$/;"	v	class:RangeAddrMapper
type	src/mem/Bridge.py	/^    type = 'Bridge'$/;"	v	class:Bridge
type	src/mem/Bus.py	/^    type = 'BaseBus'$/;"	v	class:BaseBus
type	src/mem/Bus.py	/^    type = 'CoherentBus'$/;"	v	class:CoherentBus
type	src/mem/Bus.py	/^    type = 'NoncoherentBus'$/;"	v	class:NoncoherentBus
type	src/mem/CommMonitor.py	/^    type = 'CommMonitor'$/;"	v	class:CommMonitor
type	src/mem/DRAMCtrl.py	/^    type = 'DRAMCtrl'$/;"	v	class:DRAMCtrl
type	src/mem/DRAMSim2.py	/^    type = 'DRAMSim2'$/;"	v	class:DRAMSim2
type	src/mem/MemObject.py	/^    type = 'MemObject'$/;"	v	class:MemObject
type	src/mem/SimpleMemory.py	/^    type = 'SimpleMemory'$/;"	v	class:SimpleMemory
type	src/mem/cache/BaseCache.py	/^    type = 'BaseCache'$/;"	v	class:BaseCache
type	src/mem/cache/prefetch/Prefetcher.py	/^    type = 'BasePrefetcher'$/;"	v	class:BasePrefetcher
type	src/mem/cache/prefetch/Prefetcher.py	/^    type = 'GHBPrefetcher'$/;"	v	class:GHBPrefetcher
type	src/mem/cache/prefetch/Prefetcher.py	/^    type = 'StridePrefetcher'$/;"	v	class:StridePrefetcher
type	src/mem/cache/prefetch/Prefetcher.py	/^    type = 'TaggedPrefetcher'$/;"	v	class:TaggedPrefetcher
type	src/mem/cache/tags/Tags.py	/^    type = 'BaseTags'$/;"	v	class:BaseTags
type	src/mem/cache/tags/Tags.py	/^    type = 'FALRU'$/;"	v	class:FALRU
type	src/mem/cache/tags/Tags.py	/^    type = 'LRU'$/;"	v	class:LRU
type	src/mem/ruby/network/BasicLink.py	/^    type = 'BasicExtLink'$/;"	v	class:BasicExtLink
type	src/mem/ruby/network/BasicLink.py	/^    type = 'BasicIntLink'$/;"	v	class:BasicIntLink
type	src/mem/ruby/network/BasicLink.py	/^    type = 'BasicLink'$/;"	v	class:BasicLink
type	src/mem/ruby/network/BasicRouter.py	/^    type = 'BasicRouter'$/;"	v	class:BasicRouter
type	src/mem/ruby/network/Network.py	/^    type = 'RubyNetwork'$/;"	v	class:RubyNetwork
type	src/mem/ruby/network/fault_model/FaultModel.py	/^    type = 'FaultModel'$/;"	v	class:FaultModel
type	src/mem/ruby/network/garnet/BaseGarnetNetwork.py	/^    type = 'BaseGarnetNetwork'$/;"	v	class:BaseGarnetNetwork
type	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.py	/^    type = 'CreditLink_d'$/;"	v	class:CreditLink_d
type	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.py	/^    type = 'GarnetExtLink_d'$/;"	v	class:GarnetExtLink_d
type	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.py	/^    type = 'GarnetIntLink_d'$/;"	v	class:GarnetIntLink_d
type	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.py	/^    type = 'NetworkLink_d'$/;"	v	class:NetworkLink_d
type	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.py	/^    type = 'GarnetNetworkInterface_d'$/;"	v	class:GarnetNetworkInterface_d
type	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.py	/^    type = 'GarnetNetwork_d'$/;"	v	class:GarnetNetwork_d
type	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.py	/^    type = 'GarnetRouter_d'$/;"	v	class:GarnetRouter_d
type	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.py	/^    type = 'GarnetExtLink'$/;"	v	class:GarnetExtLink
type	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.py	/^    type = 'GarnetIntLink'$/;"	v	class:GarnetIntLink
type	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.py	/^    type = 'NetworkLink'$/;"	v	class:NetworkLink
type	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.py	/^    type = 'GarnetNetwork'$/;"	v	class:GarnetNetwork
type	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.py	/^    type = 'GarnetNetworkInterface'$/;"	v	class:GarnetNetworkInterface
type	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.py	/^    type = 'GarnetRouter'$/;"	v	class:GarnetRouter
type	src/mem/ruby/network/simple/SimpleLink.py	/^    type = 'SimpleExtLink'$/;"	v	class:SimpleExtLink
type	src/mem/ruby/network/simple/SimpleLink.py	/^    type = 'SimpleIntLink'$/;"	v	class:SimpleIntLink
type	src/mem/ruby/network/simple/SimpleNetwork.py	/^    type = 'SimpleNetwork'$/;"	v	class:SimpleNetwork
type	src/mem/ruby/network/simple/SimpleNetwork.py	/^    type = 'Switch'$/;"	v	class:Switch
type	src/mem/ruby/slicc_interface/Controller.py	/^    type = 'RubyController'$/;"	v	class:RubyController
type	src/mem/ruby/structures/RubyPrefetcher.py	/^    type = 'Prefetcher'$/;"	v	class:Prefetcher
type	src/mem/ruby/system/Cache.py	/^    type = 'RubyCache'$/;"	v	class:RubyCache
type	src/mem/ruby/system/DirectoryMemory.py	/^    type = 'RubyDirectoryMemory'$/;"	v	class:RubyDirectoryMemory
type	src/mem/ruby/system/MachineID.hh	/^    MachineType type;$/;"	m	struct:MachineID
type	src/mem/ruby/system/MemoryControl.py	/^    type = 'MemoryControl'$/;"	v	class:MemoryControl
type	src/mem/ruby/system/RubyMemoryControl.py	/^    type = 'RubyMemoryControl'$/;"	v	class:RubyMemoryControl
type	src/mem/ruby/system/RubySystem.py	/^    type = 'RubySystem'$/;"	v	class:RubySystem
type	src/mem/ruby/system/Sequencer.py	/^    type = 'DMASequencer'$/;"	v	class:DMASequencer
type	src/mem/ruby/system/Sequencer.py	/^    type = 'RubyPort'$/;"	v	class:RubyPort
type	src/mem/ruby/system/Sequencer.py	/^    type = 'RubyPortProxy'$/;"	v	class:RubyPortProxy
type	src/mem/ruby/system/Sequencer.py	/^    type = 'RubySequencer'$/;"	v	class:RubySequencer
type	src/mem/ruby/system/WireBuffer.py	/^    type = 'RubyWireBuffer'$/;"	v	class:RubyWireBuffer
type	src/mem/slicc/ast/TypeAST.py	/^    def type(self, assert_type=None):$/;"	m	class:TypeAST
type	src/python/m5/SimObject.py	/^    type = 'SimObject'$/;"	v	class:SimObject
type	src/sim/BaseTLB.py	/^    type = 'BaseTLB'$/;"	v	class:BaseTLB
type	src/sim/ClockDomain.py	/^    type = 'ClockDomain'$/;"	v	class:ClockDomain
type	src/sim/ClockDomain.py	/^    type = 'DerivedClockDomain'$/;"	v	class:DerivedClockDomain
type	src/sim/ClockDomain.py	/^    type = 'SrcClockDomain'$/;"	v	class:SrcClockDomain
type	src/sim/ClockedObject.py	/^    type = 'ClockedObject'$/;"	v	class:ClockedObject
type	src/sim/InstTracer.py	/^    type = 'InstTracer'$/;"	v	class:InstTracer
type	src/sim/Process.py	/^    type = 'LiveProcess'$/;"	v	class:LiveProcess
type	src/sim/Process.py	/^    type = 'Process'$/;"	v	class:Process
type	src/sim/Root.py	/^    type = 'Root'$/;"	v	class:Root
type	src/sim/System.py	/^    type = 'System'$/;"	v	class:System
type	src/sim/VoltageDomain.py	/^    type = 'VoltageDomain'$/;"	v	class:VoltageDomain
type	src/sim/probe/Probe.py	/^    type = 'ProbeListenerObject'$/;"	v	class:ProbeListenerObject
typeClass	src/base/inet.hh	/^    uint8_t typeClass() const { return IP_OPT_CLASS(opt_type); }$/;"	f	struct:Net::IpOpt
typeCopied	src/base/inet.hh	/^    uint8_t typeCopied() const { return IP_OPT_COPIED(opt_type); }$/;"	f	struct:Net::IpOpt
typeNumber	src/base/inet.hh	/^    uint8_t typeNumber() const { return IP_OPT_NUMBER(opt_type); }$/;"	f	struct:Net::IpOpt
typeOfSmallest	src/mem/ruby/system/PersistentTable.cc	/^PersistentTable::typeOfSmallest(const Address& address) const$/;"	f	class:PersistentTable
u	src/arch/arm/miscregs.hh	/^        Bitfield<22>   u;       \/\/ Alignment (dropped in ARMv7)$/;"	m	namespace:ArmISA
u	src/arch/mips/dt_constants.hh	/^    Bitfield<21>     u;$/;"	m	namespace:MipsISA
u	src/arch/mips/pra_constants.hh	/^    Bitfield<3>     u;$/;"	m	namespace:MipsISA
u	src/arch/x86/pagetable_walker.cc	/^    Bitfield<2> u;$/;"	m	namespace:X86ISA	file:
uAdvance	src/arch/generic/types.hh	/^    uAdvance()$/;"	f	class:GenericISA::DelaySlotUPCState
uAdvance	src/arch/generic/types.hh	/^    uAdvance()$/;"	f	class:GenericISA::UPCState
uDelaySkipEvent	src/arch/arm/linux/system.hh	/^    Linux::UDelayEvent *uDelaySkipEvent;$/;"	m	class:LinuxArmSystem
uEnd	src/arch/arm/types.hh	/^        uEnd()$/;"	f	class:ArmISA::PCState
uEnd	src/arch/generic/types.hh	/^    uEnd()$/;"	f	class:GenericISA::DelaySlotUPCState
uEnd	src/arch/generic/types.hh	/^    uEnd()$/;"	f	class:GenericISA::UPCState
uEnd	src/arch/x86/types.hh	/^        uEnd()$/;"	f	class:X86ISA::PCState
uSatInt	src/arch/arm/insts/static_inst.hh	/^    uSatInt(int32_t &res, int64_t op, int width)$/;"	f	class:ArmISA::ArmStaticInst
uSaturateOp	src/arch/arm/insts/static_inst.hh	/^    uSaturateOp(uint32_t &res, int64_t op1, int64_t op2, bool sub=false)$/;"	f	class:ArmISA::ArmStaticInst
uadmin	src/kern/tru64/tru64_syscalls.hh	/^        uadmin = 242,$/;"	e	enum:SystemCalls::__anon102
uart	src/dev/alpha/Tsunami.py	/^    uart = Uart8250(pio_addr=0x801fc0003f8)$/;"	v	class:Tsunami
uart	src/dev/arm/RealView.py	/^    uart = Pl011(pio_addr=0x10009000, int_num=44)$/;"	v	class:RealViewEB
uart	src/dev/arm/RealView.py	/^    uart = Pl011(pio_addr=0x10009000, int_num=44)$/;"	v	class:RealViewPBX
uart	src/dev/arm/RealView.py	/^    uart = Pl011(pio_addr=0x1c090000, int_num=37)$/;"	v	class:VExpress_EMM
uart	src/dev/mips/Malta.py	/^    uart = Uart8250(pio_addr=0xBFD003F8)$/;"	v	class:Malta
uart	src/dev/terminal.hh	/^    Uart *uart;$/;"	m	class:Terminal
uart	src/dev/uart8250.hh	/^            Uart8250 *uart;$/;"	m	class:Uart8250::IntrEvent
uart1_fake	src/dev/arm/RealView.py	/^    uart1_fake     = AmbaFake(pio_addr=0x1C0A0000)$/;"	v	class:VExpress_EMM
uart1_fake	src/dev/arm/RealView.py	/^    uart1_fake    = AmbaFake(pio_addr=0x1000a000)$/;"	v	class:RealViewEB
uart1_fake	src/dev/arm/RealView.py	/^    uart1_fake    = AmbaFake(pio_addr=0x1000a000)$/;"	v	class:RealViewPBX
uart2_fake	src/dev/arm/RealView.py	/^    uart2_fake     = AmbaFake(pio_addr=0x1C0B0000)$/;"	v	class:VExpress_EMM
uart2_fake	src/dev/arm/RealView.py	/^    uart2_fake    = AmbaFake(pio_addr=0x1000b000)$/;"	v	class:RealViewEB
uart2_fake	src/dev/arm/RealView.py	/^    uart2_fake    = AmbaFake(pio_addr=0x1000b000)$/;"	v	class:RealViewPBX
uart3_fake	src/dev/arm/RealView.py	/^    uart3_fake     = AmbaFake(pio_addr=0x1C0C0000)$/;"	v	class:VExpress_EMM
uart3_fake	src/dev/arm/RealView.py	/^    uart3_fake    = AmbaFake(pio_addr=0x1000c000)$/;"	v	class:RealViewEB
uart3_fake	src/dev/arm/RealView.py	/^    uart3_fake    = AmbaFake(pio_addr=0x1000c000)$/;"	v	class:RealViewPBX
uc	src/arch/x86/regs/misc.hh	/^        Bitfield<61> uc; \/\/ Uncorrected error$/;"	m	namespace:X86ISA
uci	src/arch/arm/miscregs.hh	/^        Bitfield<26>   uci;     \/\/ Enable EL0 access to DC CVAU, DC CIVAC,$/;"	m	namespace:ArmISA
uct	src/arch/arm/miscregs.hh	/^        Bitfield<15>   uct;     \/\/ Enable EL0 access to CTR_EL0$/;"	m	namespace:ArmISA
udmaControl	src/dev/ide_ctrl.hh	/^    uint8_t udmaControl;$/;"	m	class:IdeController
udmaTiming	src/dev/ide_ctrl.hh	/^    uint16_t udmaTiming;$/;"	m	class:IdeController
ue	src/arch/power/miscregs.hh	/^    Bitfield<6> ue;$/;"	m	namespace:PowerISA
ufc	src/arch/arm/miscregs.hh	/^        Bitfield<3> ufc;$/;"	m	namespace:ArmISA
ufe	src/arch/arm/miscregs.hh	/^        Bitfield<11> ufe;$/;"	m	namespace:ArmISA
ugetrlimit	src/kern/linux/linux_syscalls.hh	/^    ugetrlimit = 253,$/;"	e	enum:SystemCalls::__anon87
uid	src/sim/Process.py	/^    uid = Param.Int(100, 'user id')$/;"	v	class:LiveProcess
uid	src/sim/process.hh	/^    inline uint64_t uid() {return __uid;}$/;"	f	class:LiveProcess
uid_t	src/kern/linux/linux.hh	/^    typedef uint32_t uid_t;$/;"	t	class:Linux
uid_t	src/kern/solaris/solaris.hh	/^    typedef int32_t uid_t;$/;"	t	class:Solaris
uid_t	src/kern/tru64/tru64.hh	/^    typedef uint32_t uid_t;$/;"	t	class:Tru64
uie	src/dev/mc146818.hh	/^        Bitfield<4> uie;       \/\/\/ 1 = enable update-ended interrupt$/;"	m	class:MC146818
uimm	src/arch/power/insts/integer.hh	/^    uint32_t uimm;$/;"	m	class:PowerISA::IntImmOp
uint32_t	src/dev/alpha/access.h	/^typedef unsigned uint32_t;$/;"	t
uint32_t	src/dev/mips/access.h	/^typedef unsigned uint32_t;$/;"	t
uint32_t	src/mem/ruby/network/orion/Type.hh	/^typedef unsigned int uint32_t;$/;"	t
uint64	src/mem/ruby/common/TypeDefines.hh	/^typedef unsigned long long uint64;$/;"	t
uint64_t	src/dev/alpha/access.h	/^typedef unsigned long uint64_t;$/;"	t
uint64_t	src/dev/mips/access.h	/^typedef unsigned long uint64_t;$/;"	t
uint64_ta	src/arch/mips/linux/aligned.hh	/^#define uint64_ta /;"	d
uint64_ta	src/arch/mips/linux/aligned.hh	/^typedef uint64_t uint64_ta __attribute__ ((aligned (8))) ;$/;"	t
uiomove_f	src/kern/tru64/mbuf.hh	/^    Addr        uiomove_f;      \/\/ 0x30$/;"	m	struct:tru64::m_ext
uip	src/dev/mc146818.hh	/^        Bitfield<7> uip;    \/\/\/ 1 = date and time update in progress$/;"	m	class:MC146818
ulimit	src/kern/linux/linux_syscalls.hh	/^    ulimit = 254,$/;"	e	enum:SystemCalls::__anon87
um	src/arch/mips/pra_constants.hh	/^    Bitfield<4>      um;$/;"	m	namespace:MipsISA
uma	src/arch/arm/miscregs.hh	/^        Bitfield<9>    uma;     \/\/ User mask access (AArch64 SCTLR_EL1 only)$/;"	m	namespace:ArmISA
umask	src/kern/linux/linux_syscalls.hh	/^    umask = 255,$/;"	e	enum:SystemCalls::__anon87
umask	src/kern/tru64/tru64_syscalls.hh	/^        umask = 60,$/;"	e	enum:SystemCalls::__anon102
umaskFunc	src/sim/syscall_emul.cc	/^umaskFunc(SyscallDesc *desc, int num, LiveProcess *process, ThreadContext *tc)$/;"	f
umount	src/kern/linux/linux_syscalls.hh	/^    umount = 256,$/;"	e	enum:SystemCalls::__anon87
umount2	src/kern/linux/linux_syscalls.hh	/^    umount2 = 257,$/;"	e	enum:SystemCalls::__anon87
unPostMaintInt	src/dev/arm/vgic.cc	/^VGic::unPostMaintInt(uint32_t cpu)$/;"	f	class:VGic
unPostVInt	src/dev/arm/vgic.cc	/^VGic::unPostVInt(uint32_t cpu)$/;"	f	class:VGic
uname	src/kern/linux/linux_syscalls.hh	/^    uname = 258,$/;"	e	enum:SystemCalls::__anon87
uname	src/kern/tru64/tru64_syscalls.hh	/^        uname = 207,$/;"	e	enum:SystemCalls::__anon102
unameFunc	src/arch/alpha/linux/process.cc	/^unameFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	file:
unameFunc	src/arch/alpha/tru64/process.cc	/^unameFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	file:
unameFunc	src/arch/mips/linux/process.cc	/^unameFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	file:
unameFunc	src/arch/power/linux/process.cc	/^unameFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	file:
unameFunc	src/arch/sparc/linux/syscalls.cc	/^unameFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	namespace:SparcISA
unameFunc	src/arch/sparc/solaris/process.cc	/^unameFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	file:
unameFunc	src/arch/x86/linux/syscalls.cc	/^unameFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	file:
unameFunc32	src/arch/arm/linux/process.cc	/^unameFunc32(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	file:
unameFunc64	src/arch/arm/linux/process.cc	/^unameFunc64(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f	file:
unaryOp	src/arch/arm/insts/vfp.cc	/^FpOp::unaryOp(FPSCR &fpscr, fpType op1, fpType (*func)(fpType),$/;"	f	class:ArmISA::FpOp
unbcdize	src/dev/mc146818.cc	/^unbcdize(uint8_t val)$/;"	f	file:
unbind	src/mem/port.cc	/^MasterPort::unbind()$/;"	f	class:MasterPort
unbind	src/mem/port.cc	/^SlavePort::unbind()$/;"	f	class:SlavePort
unblock	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::unblock(ThreadID tid)$/;"	f	class:PipelineStage
unblock	src/cpu/o3/decode_impl.hh	/^DefaultDecode<Impl>::unblock(ThreadID tid)$/;"	f	class:DefaultDecode
unblock	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::unblock(ThreadID tid)$/;"	f	class:DefaultIEW
unblock	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::unblock(ThreadID tid)$/;"	f	class:DefaultRename
unblock	src/mem/ruby/slicc_interface/AbstractController.cc	/^AbstractController::unblock(Address addr)$/;"	f	class:AbstractController
uncacheAddr	src/cpu/testers/memtest/memtest.hh	/^    Addr uncacheAddr;$/;"	m	class:MemTest
uncacheBit39	src/arch/alpha/tlb.cc	/^bool uncacheBit39 = false;$/;"	m	namespace:AlphaISA	file:
uncacheBit40	src/arch/alpha/tlb.cc	/^bool uncacheBit40 = false;$/;"	m	namespace:AlphaISA	file:
uncacheable	src/arch/x86/pagetable.hh	/^        bool uncacheable;$/;"	m	struct:X86ISA::TlbEntry
uncacheable	src/cpu/base_dyn_inst.hh	/^    bool uncacheable() { return instFlags[IsUncacheable]; }$/;"	f	class:BaseDynInst
uncacheableFlush	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::uncacheableFlush(PacketPtr pkt)$/;"	f	class:Cache
uncached	src/cpu/inorder/comm.hh	/^        bool uncached;$/;"	m	struct:TimeStruct::StageComm
uncached	src/cpu/o3/comm.hh	/^        bool uncached; \/\/ *I$/;"	m	struct:TimeBufStruct::commitComm
uncached	src/cpu/ozone/cpu.hh	/^        bool uncached;$/;"	m	struct:OzoneCPU::CommStruct
uncachedLoad	src/cpu/inorder/comm.hh	/^        ThePipeline::DynInstPtr uncachedLoad;$/;"	m	struct:TimeStruct::StageComm
uncachedLoad	src/cpu/o3/comm.hh	/^        DynInstPtr uncachedLoad; \/\/ *I$/;"	m	struct:TimeBufStruct::commitComm
uncondBranch	src/cpu/pred/2bit_local.cc	/^LocalBP::uncondBranch(void *&bp_history)$/;"	f	class:LocalBP
uncondBranch	src/cpu/pred/tournament.cc	/^TournamentBP::uncondBranch(void * &bp_history)$/;"	f	class:TournamentBP
underReset	src/dev/copy_engine.hh	/^        bool underReset;$/;"	m	class:CopyEngine::CopyEngineChannel
underflow	src/base/statistics.hh	/^    Counter underflow;$/;"	m	class:Stats::DistStor
underflow	src/base/stats/info.hh	/^    Counter underflow;$/;"	m	struct:Stats::DistData
underflow	src/dev/arm/pl111.hh	/^        Bitfield<1> underflow;$/;"	m	class:Pl111
underrun	src/dev/arm/hdlcd.hh	/^        Bitfield<3> underrun;$/;"	m	class:HDLcd
undo	src/cpu/ozone/null_predictor.hh	/^    void undo(BPredInfo &bp_info) { return; }$/;"	f	class:NullPredictor
unescapeParams	src/arch/micro_asm.py	/^    def unescapeParams(mo):$/;"	f	function:t_params_PARAMS
unfair_arbitration	src/mem/ruby/network/fault_model/FaultModel.hh	/^        unfair_arbitration,$/;"	e	enum:FaultModel::fault_type
unflattenMiscReg	src/arch/arm/miscregs.cc	/^unflattenMiscReg(int reg)$/;"	f	namespace:ArmISA
unflattenResultMiscReg	src/arch/arm/miscregs.cc	/^int unflattenResultMiscReg[NUM_MISCREGS];$/;"	m	namespace:ArmISA	file:
unicast	src/base/inet.hh	/^    bool unicast() const { return data[0] == 0x00; }$/;"	f	struct:Net::EthAddr
unimplementedFunc	src/sim/syscall_emul.cc	/^unimplementedFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
uniq	src/arch/alpha/isa.hh	/^        uint64_t uniq;       \/\/ process-unique register$/;"	m	class:AlphaISA::ISA
uniqueFloatRegMap	src/cpu/inorder/resources/use_def.hh	/^    std::map<RegIndex, bool> uniqueFloatRegMap;$/;"	m	class:UseDefUnit
uniqueIntRegMap	src/cpu/inorder/resources/use_def.hh	/^    std::map<RegIndex, bool> uniqueIntRegMap;$/;"	m	class:UseDefUnit
uniqueMiscRegMap	src/cpu/inorder/resources/use_def.hh	/^    std::map<RegIndex, bool> uniqueMiscRegMap;$/;"	m	class:UseDefUnit
uniqueRegsPerSwitch	src/cpu/inorder/resources/use_def.hh	/^    Stats::Average uniqueRegsPerSwitch;$/;"	m	class:UseDefUnit
unitBusy	src/cpu/o3/fu_pool.hh	/^    std::vector<bool> unitBusy;$/;"	m	class:FUPool
unitMask	src/arch/x86/regs/misc.hh	/^        Bitfield<15,8> unitMask;$/;"	m	namespace:X86ISA
unit_filter	src/mem/ruby/structures/RubyPrefetcher.py	/^    unit_filter  = Param.UInt32(8,$/;"	v	class:Prefetcher
unitsToBeFreed	src/cpu/o3/fu_pool.hh	/^    std::vector<int> unitsToBeFreed;$/;"	m	class:FUPool
unknown	src/arch/alpha/stacktrace.hh	/^        unknown = 3$/;"	e	enum:AlphaISA::StackTrace::__anon4
unknown	src/arch/arm/faults.hh	/^    bool unknown;$/;"	m	class:ArmISA::UndefinedInstruction
unknown	src/arch/mips/stacktrace.hh	/^    static const int unknown = 3;$/;"	m	class:MipsISA::StackTrace
unknown	src/arch/power/stacktrace.hh	/^    static const int unknown = 3;$/;"	m	class:PowerISA::StackTrace
unknown	src/arch/x86/stacktrace.hh	/^        static const int unknown = 3;$/;"	m	class:X86ISA::StackTrace
unlink	src/kern/linux/linux_syscalls.hh	/^    unlink = 259,$/;"	e	enum:SystemCalls::__anon87
unlink	src/kern/tru64/tru64_syscalls.hh	/^        unlink = 10,$/;"	e	enum:SystemCalls::__anon102
unlinkFunc	src/sim/syscall_emul.cc	/^unlinkFunc(SyscallDesc *desc, int num, LiveProcess *p, ThreadContext *tc)$/;"	f
unmap	src/mem/page_table.cc	/^PageTable::unmap(Addr vaddr, int64_t size)$/;"	f	class:PageTable
unmaskAll	src/dev/x86/i8259.hh	/^    unmaskAll()$/;"	f	class:X86ISA::I8259
unmount	src/kern/tru64/tru64_syscalls.hh	/^        unmount = 22,$/;"	e	enum:SystemCalls::__anon102
unpackHi	src/arch/mips/remote_gdb.hh	/^        unpackHi(uint64_t val)$/;"	f	class:MipsISA::RemoteGDB
unpackLo	src/arch/mips/remote_gdb.hh	/^        unpackLo(uint64_t val)$/;"	f	class:MipsISA::RemoteGDB
unproxy	src/python/m5/SimObject.py	/^    def unproxy(self, base):$/;"	f
unproxy	src/python/m5/params.py	/^    def unproxy(self, base):$/;"	m	class:EthernetAddr
unproxy	src/python/m5/params.py	/^    def unproxy(self, base):$/;"	m	class:NullSimObject
unproxy	src/python/m5/params.py	/^    def unproxy(self, base):$/;"	m	class:ParamValue
unproxy	src/python/m5/params.py	/^    def unproxy(self, base):$/;"	m	class:VectorParamValue
unproxy	src/python/m5/params.py	/^    def unproxy(self, simobj):$/;"	m	class:PortRef
unproxy	src/python/m5/params.py	/^    def unproxy(self, simobj):$/;"	m	class:VectorPortRef
unproxy	src/python/m5/proxy.py	/^    def unproxy(self, base):$/;"	m	class:BaseProxy
unproxyParams	src/python/m5/SimObject.py	/^    def unproxyParams(self):$/;"	f
unscheduleActivateThreadEvent	src/cpu/o3/cpu.hh	/^    unscheduleActivateThreadEvent(ThreadID tid)$/;"	f	class:FullO3CPU
unscheduleDeallocateContextEvent	src/cpu/o3/cpu.hh	/^    unscheduleDeallocateContextEvent(ThreadID tid)$/;"	f	class:FullO3CPU
unscheduleEvent	src/arch/mips/isa.cc	/^ISA::CP0Event::unscheduleEvent()$/;"	f	class:MipsISA::ISA::CP0Event
unscheduleEvent	src/cpu/inorder/cpu.cc	/^InOrderCPU::CPUEvent::unscheduleEvent()$/;"	f	class:InOrderCPU::CPUEvent
unscheduleEvent	src/cpu/inorder/resource.cc	/^Resource::unscheduleEvent(DynInstPtr inst)$/;"	f	class:Resource
unscheduleEvent	src/cpu/inorder/resource.cc	/^Resource::unscheduleEvent(int slot_idx)$/;"	f	class:Resource
unscheduleEvent	src/cpu/inorder/resource.hh	/^    void unscheduleEvent()$/;"	f	class:ResourceEvent
unscheduleEvent	src/cpu/inorder/resource_pool.9stage.cc	/^ResourcePool::ResPoolEvent::unscheduleEvent()$/;"	f	class:ResourcePool::ResPoolEvent
unscheduleEvent	src/cpu/inorder/resource_pool.9stage.cc	/^ResourcePool::unscheduleEvent(int res_idx, DynInstPtr inst)$/;"	f	class:ResourcePool
unscheduleEvent	src/cpu/inorder/resource_pool.cc	/^ResourcePool::ResPoolEvent::unscheduleEvent()$/;"	f	class:ResourcePool::ResPoolEvent
unscheduleEvent	src/cpu/inorder/resource_pool.cc	/^ResourcePool::unscheduleEvent(int res_idx, DynInstPtr inst)$/;"	f	class:ResourcePool
unscheduleTickEvent	src/cpu/inorder/cpu.hh	/^    void unscheduleTickEvent()$/;"	f	class:InOrderCPU
unscheduleTickEvent	src/cpu/o3/cpu.hh	/^    void unscheduleTickEvent()$/;"	f	class:FullO3CPU
unscheduleTickEvent	src/cpu/ozone/cpu.hh	/^    void unscheduleTickEvent()$/;"	f	class:OzoneCPU
unserialize	src/arch/alpha/interrupts.hh	/^    unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:AlphaISA::Interrupts
unserialize	src/arch/alpha/isa.cc	/^ISA::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:AlphaISA::ISA
unserialize	src/arch/alpha/kernel_stats.cc	/^Statistics::unserialize(Checkpoint *cp, const string &section)$/;"	f	class:AlphaISA::Kernel::Statistics
unserialize	src/arch/alpha/pagetable.cc	/^TlbEntry::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:AlphaISA::TlbEntry
unserialize	src/arch/alpha/tlb.cc	/^TLB::unserialize(Checkpoint *cp, const string &section)$/;"	f	class:AlphaISA::TLB
unserialize	src/arch/arm/interrupts.hh	/^    unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:ArmISA::Interrupts
unserialize	src/arch/arm/isa.hh	/^        void unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:ArmISA::ISA
unserialize	src/arch/arm/pagetable.hh	/^    unserialize(Checkpoint *cp, const std::string &section)$/;"	f	struct:ArmISA::TlbEntry
unserialize	src/arch/arm/pagetable.hh	/^    void unserialize(Checkpoint *cp, const std::string &section)$/;"	f	struct:ArmISA::PTE
unserialize	src/arch/arm/tlb.cc	/^TLB::unserialize(Checkpoint *cp, const string &section)$/;"	f	class:TLB
unserialize	src/arch/arm/types.hh	/^        unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:ArmISA::PCState
unserialize	src/arch/generic/types.hh	/^    unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:GenericISA::DelaySlotPCState
unserialize	src/arch/generic/types.hh	/^    unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:GenericISA::DelaySlotUPCState
unserialize	src/arch/generic/types.hh	/^    unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:GenericISA::PCStateBase
unserialize	src/arch/generic/types.hh	/^    unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:GenericISA::UPCState
unserialize	src/arch/mips/interrupts.hh	/^    unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:MipsISA::Interrupts
unserialize	src/arch/mips/pagetable.cc	/^PTE::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:MipsISA::PTE
unserialize	src/arch/mips/pagetable.hh	/^    void unserialize(Checkpoint *cp, const std::string &section)$/;"	f	struct:MipsISA::TlbEntry
unserialize	src/arch/mips/tlb.cc	/^TLB::unserialize(Checkpoint *cp, const string &section)$/;"	f	class:TLB
unserialize	src/arch/power/pagetable.cc	/^PTE::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:PowerISA::PTE
unserialize	src/arch/power/tlb.cc	/^TLB::unserialize(Checkpoint *cp, const string &section)$/;"	f	class:TLB
unserialize	src/arch/power/tlb.hh	/^    unserialize(Checkpoint *cp, const std::string &section)$/;"	f	struct:PowerISA::TlbEntry
unserialize	src/arch/sparc/interrupts.hh	/^    unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:SparcISA::Interrupts
unserialize	src/arch/sparc/isa.cc	/^ISA::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:SparcISA::ISA
unserialize	src/arch/sparc/pagetable.cc	/^TlbEntry::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:SparcISA::TlbEntry
unserialize	src/arch/sparc/tlb.cc	/^TLB::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:SparcISA::TLB
unserialize	src/arch/x86/interrupts.cc	/^X86ISA::Interrupts::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:X86ISA::Interrupts
unserialize	src/arch/x86/isa.cc	/^ISA::unserialize(Checkpoint * cp, const std::string & section)$/;"	f	class:X86ISA::ISA
unserialize	src/arch/x86/pagetable.cc	/^TlbEntry::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:X86ISA::TlbEntry
unserialize	src/arch/x86/tlb.cc	/^TLB::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:X86ISA::TLB
unserialize	src/arch/x86/types.hh	/^        unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:X86ISA::PCState
unserialize	src/base/cp_annotate.cc	/^CPA::AnnotateData::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:CPA::AnnotateData
unserialize	src/base/cp_annotate.cc	/^CPA::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:CPA
unserialize	src/base/loader/symtab.cc	/^SymbolTable::unserialize(const string &base, Checkpoint *cp,$/;"	f	class:SymbolTable
unserialize	src/base/pollevent.cc	/^PollEvent::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:PollEvent
unserialize	src/base/random.cc	/^Random::unserialize(const string &base, Checkpoint *cp, const string &section)$/;"	f	class:Random
unserialize	src/base/time.cc	/^Time::unserialize(const std::string &base, Checkpoint *cp,$/;"	f	class:Time
unserialize	src/cpu/base.cc	/^BaseCPU::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:BaseCPU
unserialize	src/cpu/checker/cpu.cc	/^CheckerCPU::unserialize(Checkpoint *cp, const string &section)$/;"	f	class:CheckerCPU
unserialize	src/cpu/checker/thread_context.hh	/^    void unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:CheckerThreadContext
unserialize	src/cpu/o3/thread_state.hh	/^    void unserialize(Checkpoint *cp, const std::string &section)$/;"	f	struct:O3ThreadState
unserialize	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::OzoneTC::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:OzoneCPU::OzoneTC
unserialize	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:OzoneCPU
unserialize	src/cpu/simple_thread.cc	/^SimpleThread::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:SimpleThread
unserialize	src/cpu/testers/traffic_gen/traffic_gen.cc	/^TrafficGen::unserialize(Checkpoint* cp, const string& section)$/;"	f	class:TrafficGen
unserialize	src/cpu/thread_context.cc	/^unserialize(ThreadContext &tc, Checkpoint *cp, const std::string &section)$/;"	f
unserialize	src/cpu/thread_state.cc	/^ThreadState::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:ThreadState
unserialize	src/dev/alpha/backdoor.cc	/^AlphaBackdoor::Access::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:AlphaBackdoor::Access
unserialize	src/dev/alpha/backdoor.cc	/^AlphaBackdoor::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:AlphaBackdoor
unserialize	src/dev/alpha/tsunami.cc	/^Tsunami::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:Tsunami
unserialize	src/dev/alpha/tsunami_cchip.cc	/^TsunamiCChip::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:TsunamiCChip
unserialize	src/dev/alpha/tsunami_io.cc	/^TsunamiIO::unserialize(Checkpoint *cp, const string &section)$/;"	f	class:TsunamiIO
unserialize	src/dev/alpha/tsunami_pchip.cc	/^TsunamiPChip::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:TsunamiPChip
unserialize	src/dev/arm/generic_timer.cc	/^GenericTimer::ArchTimer::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:GenericTimer::ArchTimer
unserialize	src/dev/arm/generic_timer.cc	/^GenericTimer::SystemCounter::unserialize(Checkpoint *cp,$/;"	f	class:GenericTimer::SystemCounter
unserialize	src/dev/arm/generic_timer.cc	/^GenericTimer::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:GenericTimer
unserialize	src/dev/arm/gic_pl390.cc	/^Pl390::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:Pl390
unserialize	src/dev/arm/hdlcd.cc	/^HDLcd::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:HDLcd
unserialize	src/dev/arm/kmi.cc	/^Pl050::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:Pl050
unserialize	src/dev/arm/pl011.cc	/^Pl011::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:Pl011
unserialize	src/dev/arm/pl111.cc	/^Pl111::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:Pl111
unserialize	src/dev/arm/rtc_pl031.cc	/^PL031::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:PL031
unserialize	src/dev/arm/rv_ctrl.cc	/^RealViewCtrl::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:RealViewCtrl
unserialize	src/dev/arm/timer_cpulocal.cc	/^CpuLocalTimer::Timer::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:CpuLocalTimer::Timer
unserialize	src/dev/arm/timer_cpulocal.cc	/^CpuLocalTimer::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:CpuLocalTimer
unserialize	src/dev/arm/timer_sp804.cc	/^Sp804::Timer::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:Sp804::Timer
unserialize	src/dev/arm/timer_sp804.cc	/^Sp804::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:Sp804
unserialize	src/dev/arm/vgic.cc	/^void VGic::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:VGic
unserialize	src/dev/copy_engine.cc	/^CopyEngine::CopyEngineChannel::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:CopyEngine::CopyEngineChannel
unserialize	src/dev/copy_engine.cc	/^CopyEngine::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:CopyEngine
unserialize	src/dev/copy_engine_defs.hh	/^    void unserialize(Checkpoint *cp, const std::string &section)$/;"	f	struct:CopyEngineReg::ChanRegs
unserialize	src/dev/copy_engine_defs.hh	/^    void unserialize(Checkpoint *cp, const std::string &section)$/;"	f	struct:CopyEngineReg::Reg
unserialize	src/dev/copy_engine_defs.hh	/^    void unserialize(Checkpoint *cp, const std::string &section)$/;"	f	struct:CopyEngineReg::Regs
unserialize	src/dev/disk_image.cc	/^CowDiskImage::unserialize(Checkpoint *cp, const string &section)$/;"	f	class:CowDiskImage
unserialize	src/dev/etherlink.cc	/^    void unserialize(Checkpoint *cp, const string &section) {}$/;"	f	class:LinkDelayEvent
unserialize	src/dev/etherlink.cc	/^EtherLink::Link::unserialize(const string &base, Checkpoint *cp,$/;"	f	class:EtherLink::Link
unserialize	src/dev/etherlink.cc	/^EtherLink::unserialize(Checkpoint *cp, const string &section)$/;"	f	class:EtherLink
unserialize	src/dev/etherlink.cc	/^LinkDelayEvent::unserialize(Checkpoint *cp, const string &section,$/;"	f	class:LinkDelayEvent
unserialize	src/dev/etherpkt.cc	/^EthPacketData::unserialize(const string &base, Checkpoint *cp,$/;"	f	class:EthPacketData
unserialize	src/dev/ethertap.cc	/^EtherTap::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:EtherTap
unserialize	src/dev/i8254xGBe.cc	/^IGbE::DescCache<T>::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:IGbE::DescCache
unserialize	src/dev/i8254xGBe.cc	/^IGbE::RxDescCache::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:IGbE::RxDescCache
unserialize	src/dev/i8254xGBe.cc	/^IGbE::TxDescCache::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:IGbE::TxDescCache
unserialize	src/dev/i8254xGBe.cc	/^IGbE::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:IGbE
unserialize	src/dev/i8254xGBe_defs.hh	/^        void unserialize(Checkpoint *cp, const std::string &section)$/;"	f	struct:iGbReg::Regs::Reg
unserialize	src/dev/i8254xGBe_defs.hh	/^    void unserialize(Checkpoint *cp, const std::string &section)$/;"	f	struct:iGbReg::Regs
unserialize	src/dev/ide_ctrl.cc	/^IdeController::Channel::unserialize(const std::string &base, Checkpoint *cp,$/;"	f	class:IdeController::Channel
unserialize	src/dev/ide_ctrl.cc	/^IdeController::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:IdeController
unserialize	src/dev/ide_disk.cc	/^IdeDisk::unserialize(Checkpoint *cp, const string &section)$/;"	f	class:IdeDisk
unserialize	src/dev/intel_8254_timer.cc	/^Intel8254Timer::Counter::unserialize(const string &base, Checkpoint *cp,$/;"	f	class:Intel8254Timer::Counter
unserialize	src/dev/intel_8254_timer.cc	/^Intel8254Timer::unserialize(const string &base, Checkpoint *cp,$/;"	f	class:Intel8254Timer
unserialize	src/dev/mc146818.cc	/^MC146818::unserialize(const string &base, Checkpoint *cp,$/;"	f	class:MC146818
unserialize	src/dev/mips/malta.cc	/^Malta::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:Malta
unserialize	src/dev/mips/malta_cchip.cc	/^MaltaCChip::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:MaltaCChip
unserialize	src/dev/mips/malta_io.cc	/^MaltaIO::unserialize(Checkpoint *cp, const string &section)$/;"	f	class:MaltaIO
unserialize	src/dev/mips/malta_pchip.cc	/^MaltaPChip::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:MaltaPChip
unserialize	src/dev/ns_gige.cc	/^NSGigE::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:NSGigE
unserialize	src/dev/pcidev.cc	/^PciDevice::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:PciDevice
unserialize	src/dev/pktfifo.cc	/^PacketFifo::unserialize(const string &base, Checkpoint *cp,$/;"	f	class:PacketFifo
unserialize	src/dev/pktfifo.cc	/^PacketFifoEntry::unserialize(const string &base, Checkpoint *cp,$/;"	f	class:PacketFifoEntry
unserialize	src/dev/sinic.cc	/^Base::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:Sinic::Base
unserialize	src/dev/sinic.cc	/^Device::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:Sinic::Device
unserialize	src/dev/sparc/dtod.cc	/^DumbTOD::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:DumbTOD
unserialize	src/dev/sparc/iob.cc	/^Iob::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:Iob
unserialize	src/dev/uart8250.cc	/^Uart8250::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:Uart8250
unserialize	src/dev/x86/cmos.cc	/^X86ISA::Cmos::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:X86ISA::Cmos
unserialize	src/dev/x86/i8042.cc	/^X86ISA::I8042::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:X86ISA::I8042
unserialize	src/dev/x86/i8042.cc	/^X86ISA::PS2Keyboard::unserialize(const std::string &base, Checkpoint *cp,$/;"	f	class:X86ISA::PS2Keyboard
unserialize	src/dev/x86/i8042.cc	/^X86ISA::PS2Mouse::unserialize(const std::string &base, Checkpoint *cp,$/;"	f	class:X86ISA::PS2Mouse
unserialize	src/dev/x86/i82094aa.cc	/^X86ISA::I82094AA::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:X86ISA::I82094AA
unserialize	src/dev/x86/i8237.cc	/^X86ISA::I8237::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:X86ISA::I8237
unserialize	src/dev/x86/i8254.cc	/^X86ISA::I8254::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:X86ISA::I8254
unserialize	src/dev/x86/i8259.cc	/^X86ISA::I8259::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:X86ISA::I8259
unserialize	src/dev/x86/speaker.cc	/^X86ISA::Speaker::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:X86ISA::Speaker
unserialize	src/kern/kernel_stats.cc	/^Statistics::unserialize(Checkpoint *cp, const string &section)$/;"	f	class:Kernel::Statistics
unserialize	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:Cache
unserialize	src/mem/page_table.cc	/^PageTable::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:PageTable
unserialize	src/mem/physical.cc	/^PhysicalMemory::unserialize(Checkpoint* cp, const string& section)$/;"	f	class:PhysicalMemory
unserialize	src/mem/ruby/system/System.cc	/^RubySystem::unserialize(Checkpoint *cp, const string &section)$/;"	f	class:RubySystem
unserialize	src/sim/eventq.cc	/^Event::unserialize(Checkpoint *cp, const string &section)$/;"	f	class:Event
unserialize	src/sim/eventq.cc	/^Event::unserialize(Checkpoint *cp, const string &section, EventQueue *eventq)$/;"	f	class:Event
unserialize	src/sim/eventq.cc	/^EventQueue::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:EventQueue
unserialize	src/sim/process.cc	/^Process::FdMap::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:Process::FdMap
unserialize	src/sim/process.cc	/^Process::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:Process
unserialize	src/sim/root.cc	/^Root::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:Root
unserialize	src/sim/serialize.cc	/^Globals::unserialize(Checkpoint *cp, const std::string &section)$/;"	f	class:Globals
unserialize	src/sim/serialize.cc	/^Serializable::unserialize(Checkpoint *cp, const string &section)$/;"	f	class:Serializable
unserialize	src/sim/sim_events.cc	/^LocalSimLoopExitEvent::unserialize(Checkpoint *cp, const string &section)$/;"	f	class:LocalSimLoopExitEvent
unserialize	src/sim/sim_events.cc	/^LocalSimLoopExitEvent::unserialize(Checkpoint *cp, const string &section,$/;"	f	class:LocalSimLoopExitEvent
unserialize	src/sim/system.cc	/^System::unserialize(Checkpoint *cp, const string &section)$/;"	f	class:System
unserializeGlobals	src/python/swig/pyobject.hh	/^unserializeGlobals(Checkpoint *cp)$/;"	f
unserializeGlobals	src/sim/serialize.cc	/^Serializable::unserializeGlobals(Checkpoint *cp)$/;"	f	class:Serializable
unserializeStore	src/mem/physical.cc	/^PhysicalMemory::unserializeStore(Checkpoint* cp, const string& section)$/;"	f	class:PhysicalMemory
unserializeSymtab	src/arch/alpha/system.cc	/^AlphaSystem::unserializeSymtab(Checkpoint *cp, const std::string &section)$/;"	f	class:AlphaSystem
unserializeSymtab	src/arch/sparc/system.cc	/^SparcSystem::unserializeSymtab(Checkpoint *cp, const std::string &section)$/;"	f	class:SparcSystem
unserializeSymtab	src/sim/system.hh	/^    virtual void unserializeSymtab(Checkpoint *cp,$/;"	f	class:System
unserializeThread	src/cpu/base.hh	/^    virtual void unserializeThread(Checkpoint *cp, const std::string &section,$/;"	f	class:BaseCPU
unserializeThread	src/cpu/kvm/base.cc	/^BaseKvmCPU::unserializeThread(Checkpoint *cp, const std::string &section,$/;"	f	class:BaseKvmCPU
unserializeThread	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::unserializeThread(Checkpoint *cp, const std::string &section,$/;"	f	class:FullO3CPU
unserializeThread	src/cpu/simple/base.cc	/^BaseSimpleCPU::unserializeThread(Checkpoint *cp, const string &section,$/;"	f	class:BaseSimpleCPU
unset	src/mem/ruby/filters/BlockBloomFilter.cc	/^BlockBloomFilter::unset(const Address& addr)$/;"	f	class:BlockBloomFilter
unset	src/mem/ruby/filters/BulkBloomFilter.cc	/^BulkBloomFilter::unset(const Address& addr)$/;"	f	class:BulkBloomFilter
unset	src/mem/ruby/filters/GenericBloomFilter.cc	/^GenericBloomFilter::unset(const Address& addr)$/;"	f	class:GenericBloomFilter
unset	src/mem/ruby/filters/H3BloomFilter.cc	/^H3BloomFilter::unset(const Address& addr)$/;"	f	class:H3BloomFilter
unset	src/mem/ruby/filters/LSB_CountingBloomFilter.cc	/^LSB_CountingBloomFilter::unset(const Address& addr)$/;"	f	class:LSB_CountingBloomFilter
unset	src/mem/ruby/filters/MultiBitSelBloomFilter.cc	/^MultiBitSelBloomFilter::unset(const Address& addr)$/;"	f	class:MultiBitSelBloomFilter
unset	src/mem/ruby/filters/MultiGrainBloomFilter.cc	/^MultiGrainBloomFilter::unset(const Address& addr)$/;"	f	class:MultiGrainBloomFilter
unset	src/mem/ruby/filters/NonCountingBloomFilter.cc	/^NonCountingBloomFilter::unset(const Address& addr)$/;"	f	class:NonCountingBloomFilter
unset	src/mem/ruby/system/TimerTable.cc	/^TimerTable::unset(const Address& address)$/;"	f	class:TimerTable
unsetMemAddr	src/cpu/inorder/inorder_dyn_inst.hh	/^    void unsetMemAddr()$/;"	f	class:InOrderDynInst
unsetReg	src/cpu/o3/scoreboard.hh	/^    void unsetReg(PhysRegIndex reg_idx)$/;"	f	class:Scoreboard
unsetResStall	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::unsetResStall(ResReqPtr res_req, ThreadID tid)$/;"	f	class:PipelineStage
unsigned	src/python/m5/params.py	/^    unsigned = True$/;"	v	class:Addr
unsigned	src/python/m5/params.py	/^    unsigned = True$/;"	v	class:Cycles
unsigned	src/python/m5/params.py	/^    unsigned = True$/;"	v	class:MemorySize
unsigned	src/python/m5/params.py	/^    unsigned = True$/;"	v	class:MemorySize32
unsignedRSqrtEstimate	src/arch/arm/insts/vfp.cc	/^unsignedRSqrtEstimate(uint32_t op)$/;"	f	namespace:ArmISA
unsignedRecipEstimate	src/arch/arm/insts/vfp.cc	/^unsignedRecipEstimate(uint32_t op)$/;"	f	namespace:ArmISA
untweak	src/arch/micro_asm_test.py	/^    def untweak(self):$/;"	m	class:TestMacroop
unusable	src/arch/x86/regs/misc.hh	/^        Bitfield<2> unusable;$/;"	m	namespace:X86ISA
unused	src/kern/tru64/tru64.hh	/^        uint32_t     unused[3];         \/\/!< future expansion$/;"	m	struct:Tru64::cpu_info
unused0	src/arch/x86/linux/linux.hh	/^        int64_t unused0[3];$/;"	m	struct:X86Linux64::__anon30
unusedCache	src/dev/i8254xGBe.hh	/^        CacheType unusedCache;$/;"	m	class:IGbE::DescCache
unverifiedInst	src/cpu/checker/cpu.hh	/^    DynInstPtr unverifiedInst;$/;"	m	class:Checker
unverifiedMemData	src/cpu/checker/cpu.hh	/^    uint8_t *unverifiedMemData;$/;"	m	class:CheckerCPU
unverifiedReq	src/cpu/checker/cpu.hh	/^    Request *unverifiedReq;$/;"	m	class:CheckerCPU
unverifiedResult	src/cpu/checker/cpu.hh	/^    Result unverifiedResult;$/;"	m	class:CheckerCPU
uops	src/arch/arm/insts/mem.hh	/^    StaticInstPtr *uops;$/;"	m	class:ArmISA::Memory
uops	src/arch/arm/insts/mem.hh	/^    StaticInstPtr *uops;$/;"	m	class:ArmISA::RfeOp
uops	src/arch/arm/insts/mem.hh	/^    StaticInstPtr *uops;$/;"	m	class:ArmISA::SrsOp
uops	src/arch/arm/insts/mem64.hh	/^    StaticInstPtr *uops;$/;"	m	class:ArmISA::Memory64
up	src/arch/arm/insts/macromem.hh	/^    bool up;$/;"	m	class:ArmISA::MicroMemOp
up	src/arch/arm/types.hh	/^            Bitfield<23> up;$/;"	m	namespace:ArmISA
upc	src/arch/generic/types.hh	/^    MicroPC upc() const { return _upc; }$/;"	f	class:GenericISA::DelaySlotUPCState
upc	src/arch/generic/types.hh	/^    MicroPC upc() const { return _upc; }$/;"	f	class:GenericISA::UPCState
upc	src/arch/generic/types.hh	/^    void upc(MicroPC val) { _upc = val; }$/;"	f	class:GenericISA::DelaySlotUPCState
upc	src/arch/generic/types.hh	/^    void upc(MicroPC val) { _upc = val; }$/;"	f	class:GenericISA::UPCState
update	src/arch/arm/nativetrace.cc	/^Trace::ArmNativeTrace::ThreadState::update(NativeTrace *parent)$/;"	f	class:Trace::Trace::ArmNativeTrace::ThreadState
update	src/arch/arm/nativetrace.cc	/^Trace::ArmNativeTrace::ThreadState::update(ThreadContext *tc)$/;"	f	class:Trace::Trace::ArmNativeTrace::ThreadState
update	src/arch/x86/nativetrace.cc	/^X86NativeTrace::ThreadState::update(NativeTrace *parent)$/;"	f	class:Trace::X86NativeTrace::ThreadState
update	src/arch/x86/nativetrace.cc	/^X86NativeTrace::ThreadState::update(ThreadContext *tc)$/;"	f	class:Trace::X86NativeTrace::ThreadState
update	src/base/flags.hh	/^    update(Type flags, Type mask)$/;"	f	class:Flags
update	src/base/stats/text.cc	/^ScalarPrint::update(Result val, Result total)$/;"	f	class:Stats::ScalarPrint
update	src/cpu/decode_cache.hh	/^    update(PageIt recentest)$/;"	f	class:DecodeCache::AddrMap
update	src/cpu/ozone/null_predictor.hh	/^    void update(const InstSeqNum &done_sn, ThreadID tid) { }$/;"	f	class:NullPredictor
update	src/cpu/pred/2bit_local.cc	/^LocalBP::update(Addr branch_addr, bool taken, void *bp_history, bool squashed)$/;"	f	class:LocalBP
update	src/cpu/pred/bpred_unit_impl.hh	/^BPredUnit::update(const InstSeqNum &done_sn, ThreadID tid)$/;"	f	class:BPredUnit
update	src/cpu/pred/btb.cc	/^DefaultBTB::update(Addr instPC, const TheISA::PCState &target, ThreadID tid)$/;"	f	class:DefaultBTB
update	src/cpu/pred/tournament.cc	/^TournamentBP::update(Addr branch_addr, bool taken, void *bp_history,$/;"	f	class:TournamentBP
update	src/cpu/testers/traffic_gen/traffic_gen.cc	/^TrafficGen::update()$/;"	f	class:TrafficGen
update	src/mem/ruby/profiler/AccessTraceForAddress.cc	/^AccessTraceForAddress::update(RubyRequestType type,$/;"	f	class:AccessTraceForAddress
update	src/python/m5/util/jobfile.py	/^    def update(self, obj):$/;"	m	class:Data
update	src/python/m5/util/sorteddict.py	/^    def update(self, *args, **kwargs):$/;"	m	class:SortedDict
update	src/sim/clocked_object.hh	/^    void update() const$/;"	f	class:ClockedObject
updateAfterContextSwitch	src/cpu/inorder/resource.hh	/^    virtual void updateAfterContextSwitch(DynInstPtr inst, ThreadID tid) { }    $/;"	f	class:Resource
updateAfterContextSwitch	src/cpu/inorder/resource_pool.cc	/^ResourcePool::updateAfterContextSwitch(DynInstPtr inst, ThreadID tid)$/;"	f	class:ResourcePool
updateAfterContextSwitch	src/cpu/inorder/resources/fetch_seq_unit.cc	/^FetchSeqUnit::updateAfterContextSwitch(DynInstPtr inst, ThreadID tid)$/;"	f	class:FetchSeqUnit
updateAfterContextSwitch	src/cpu/inorder/resources/use_def.cc	/^UseDefUnit::updateAfterContextSwitch(DynInstPtr inst, ThreadID tid)$/;"	f	class:UseDefUnit
updateAttributes	src/arch/arm/pagetable.hh	/^    updateAttributes()$/;"	f	struct:ArmISA::TlbEntry
updateCP0ReadView	src/arch/mips/isa.hh	/^        void updateCP0ReadView(int misc_reg, ThreadID tid) { }$/;"	f	class:MipsISA::ISA
updateCPU	src/arch/mips/isa.cc	/^ISA::updateCPU(BaseCPU *cpu)$/;"	f	class:MipsISA::ISA
updateCPUID	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::updateCPUID()$/;"	f	class:X86KvmCPU
updateCache	src/arch/alpha/tlb.hh	/^    updateCache(TlbEntry *entry) {$/;"	f	class:AlphaISA::TLB
updateCache	src/mem/page_table.hh	/^    inline void updateCache(Addr vaddr, TheISA::TlbEntry entry)$/;"	f	class:PageTable
updateClockPeriod	src/sim/clock_domain.cc	/^DerivedClockDomain::updateClockPeriod()$/;"	f	class:DerivedClockDomain
updateClockPeriod	src/sim/clocked_object.hh	/^    inline void updateClockPeriod() const$/;"	f	class:ClockedObject
updateComInstStats	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::updateComInstStats(DynInstPtr &inst)$/;"	f	class:DefaultCommit
updateComInstStats	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::updateComInstStats(DynInstPtr &inst)$/;"	f	class:BackEnd
updateComInstStats	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::updateComInstStats(DynInstPtr &inst)$/;"	f	class:LWBackEnd
updateContextSwitchStats	src/cpu/inorder/cpu.cc	/^InOrderCPU::updateContextSwitchStats()$/;"	f	class:InOrderCPU
updateDelayedTicks	src/mem/ruby/slicc_interface/Message.hh	/^    void updateDelayedTicks(Tick curTime)$/;"	f	class:Message
updateEvent	src/cpu/testers/traffic_gen/traffic_gen.hh	/^    EventWrapper<TrafficGen, &TrafficGen::update> updateEvent;$/;"	m	class:TrafficGen
updateEvents	src/sim/stat_control.cc	/^updateEvents()$/;"	f	namespace:Stats
updateExeInstStats	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::updateExeInstStats(DynInstPtr &inst)$/;"	f	class:DefaultIEW
updateExeInstStats	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::updateExeInstStats(DynInstPtr &inst)$/;"	f	class:BackEnd
updateExeInstStats	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::updateExeInstStats(DynInstPtr &inst)$/;"	f	class:LWBackEnd
updateExportContext	src/arch/isa_parser.py	/^    def updateExportContext(self):$/;"	m	class:ISAParser
updateFetchStatus	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::updateFetchStatus()$/;"	f	class:DefaultFetch
updateFreeEntries	src/cpu/ozone/inst_queue.hh	/^    void updateFreeEntries(int num) { freeEntries += num; }$/;"	f	class:InstQueue
updateGlobalHistNotTaken	src/cpu/pred/tournament.cc	/^TournamentBP::updateGlobalHistNotTaken()$/;"	f	class:TournamentBP
updateGlobalHistTaken	src/cpu/pred/tournament.cc	/^TournamentBP::updateGlobalHistTaken()$/;"	f	class:TournamentBP
updateHandyM5Reg	src/arch/x86/isa.cc	/^ISA::updateHandyM5Reg(Efer efer, CR0 cr0,$/;"	f	class:X86ISA::ISA
updateHead	src/cpu/o3/rob_impl.hh	/^ROB<Impl>::updateHead()$/;"	f	class:ROB
updateHead	src/dev/i8254xGBe.hh	/^        virtual void updateHead(long h) { igbe->regs.rdh(h); }$/;"	f	class:IGbE::RxDescCache
updateHead	src/dev/i8254xGBe.hh	/^        virtual void updateHead(long h) { igbe->regs.tdh(h); }$/;"	f	class:IGbE::TxDescCache
updateIRRV	src/arch/x86/interrupts.hh	/^    updateIRRV()$/;"	f	class:X86ISA::Interrupts
updateISRV	src/arch/x86/interrupts.hh	/^    updateISRV()$/;"	f	class:X86ISA::Interrupts
updateIntState	src/dev/arm/gic_pl390.cc	/^Pl390::updateIntState(int hint)$/;"	f	class:Pl390
updateIntState	src/dev/arm/vgic.cc	/^VGic::updateIntState(int ctx_id)$/;"	f	class:VGic
updateIntStatus	src/dev/arm/kmi.cc	/^Pl050::updateIntStatus()$/;"	f	class:Pl050
updateIntrInfo	src/arch/alpha/interrupts.hh	/^    updateIntrInfo(ThreadContext *tc)$/;"	f	class:AlphaISA::Interrupts
updateIntrInfo	src/arch/arm/interrupts.hh	/^    updateIntrInfo(ThreadContext *tc)$/;"	f	class:ArmISA::Interrupts
updateIntrInfo	src/arch/mips/interrupts.cc	/^Interrupts::updateIntrInfo(ThreadContext *tc) const$/;"	f	class:MipsISA::Interrupts
updateIntrInfo	src/arch/power/interrupts.hh	/^    updateIntrInfo(ThreadContext *tc)$/;"	f	class:PowerISA::Interrupts
updateIntrInfo	src/arch/sparc/interrupts.hh	/^    updateIntrInfo(ThreadContext *tc)$/;"	f	class:SparcISA::Interrupts
updateIntrInfo	src/arch/x86/interrupts.cc	/^X86ISA::Interrupts::updateIntrInfo(ThreadContext *tc)$/;"	f	class:X86ISA::Interrupts
updateKvmState	src/cpu/kvm/arm_cpu.cc	/^ArmKvmCPU::updateKvmState()$/;"	f	class:ArmKvmCPU
updateKvmState	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::updateKvmState()$/;"	f	class:X86KvmCPU
updateKvmStateCoProc	src/cpu/kvm/arm_cpu.cc	/^ArmKvmCPU::updateKvmStateCoProc(uint64_t id, bool show_warnings)$/;"	f	class:ArmKvmCPU
updateKvmStateCore	src/cpu/kvm/arm_cpu.cc	/^ArmKvmCPU::updateKvmStateCore()$/;"	f	class:ArmKvmCPU
updateKvmStateFPU	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::updateKvmStateFPU()$/;"	f	class:X86KvmCPU
updateKvmStateFPUCommon	src/cpu/kvm/x86_cpu.cc	/^updateKvmStateFPUCommon(ThreadContext *tc, T &fpu)$/;"	f	file:
updateKvmStateFPULegacy	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::updateKvmStateFPULegacy()$/;"	f	class:X86KvmCPU
updateKvmStateFPUXSave	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::updateKvmStateFPUXSave()$/;"	f	class:X86KvmCPU
updateKvmStateMSRs	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::updateKvmStateMSRs()$/;"	f	class:X86KvmCPU
updateKvmStateMisc	src/cpu/kvm/arm_cpu.cc	/^ArmKvmCPU::updateKvmStateMisc()$/;"	f	class:ArmKvmCPU
updateKvmStateRegs	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::updateKvmStateRegs()$/;"	f	class:X86KvmCPU
updateKvmStateSRegs	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::updateKvmStateSRegs()$/;"	f	class:X86KvmCPU
updateKvmStateVFP	src/cpu/kvm/arm_cpu.cc	/^ArmKvmCPU::updateKvmStateVFP(uint64_t id, bool show_warnings)$/;"	f	class:ArmKvmCPU
updateLSQNextCycle	src/cpu/o3/iew.hh	/^    bool updateLSQNextCycle;$/;"	m	class:DefaultIEW
updateLocalHistNotTaken	src/cpu/pred/tournament.cc	/^TournamentBP::updateLocalHistNotTaken(unsigned local_history_idx)$/;"	f	class:TournamentBP
updateLocalHistTaken	src/cpu/pred/tournament.cc	/^TournamentBP::updateLocalHistTaken(unsigned local_history_idx)$/;"	f	class:TournamentBP
updateMiscReg	src/arch/arm/tlb.cc	/^TLB::updateMiscReg(ThreadContext *tc, ArmTranslationType tranType)$/;"	f	class:TLB
updateMiscRegs	src/cpu/o3/dyn_inst.hh	/^    void updateMiscRegs()$/;"	f	class:BaseO3DynInst
updateNPC	src/arch/x86/decoder.hh	/^    updateNPC(X86ISA::PCState &nextPC)$/;"	f	class:X86ISA::Decoder
updateNext	src/mem/ruby/system/TimerTable.cc	/^TimerTable::updateNext() const$/;"	f	class:TimerTable
updateOffsetState	src/arch/x86/decoder.hh	/^    void updateOffsetState()$/;"	f	class:X86ISA::Decoder
updateOnError	src/cpu/CheckerCPU.py	/^    updateOnError = Param.Bool(False,$/;"	v	class:CheckerCPU
updateOnError	src/cpu/checker/cpu.hh	/^    bool updateOnError;$/;"	m	class:CheckerCPU
updateOnError	src/cpu/ozone/OzoneChecker.py	/^    updateOnError = Param.Bool(False,$/;"	v	class:OzoneChecker
updatePortCache	src/mem/bus.hh	/^    inline void updatePortCache(short id, const AddrRange& range) {$/;"	f	class:BaseBus
updateRegMap	src/arch/arm/isa.hh	/^        updateRegMap(CPSR cpsr)$/;"	f	class:ArmISA::ISA
updateRoute	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.hh	/^    updateRoute(int vc, int outport, Cycles curTime)$/;"	f	class:InputUnit_d
updateRunPri	src/dev/arm/gic_pl390.cc	/^Pl390::updateRunPri()$/;"	f	class:Pl390
updateStatEvents	src/python/m5/simulate.py	/^from m5.internal.stats import updateEvents as updateStatEvents$/;"	i
updateState	src/dev/ide_disk.cc	/^IdeDisk::updateState(DevAction_t action)$/;"	f	class:IdeDisk
updateStatus	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::updateStatus()$/;"	f	class:PipelineStage
updateStatus	src/cpu/o3/commit_impl.hh	/^DefaultCommit<Impl>::updateStatus()$/;"	f	class:DefaultCommit
updateStatus	src/cpu/o3/decode_impl.hh	/^DefaultDecode<Impl>::updateStatus()$/;"	f	class:DefaultDecode
updateStatus	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::updateStatus()$/;"	f	class:DefaultIEW
updateStatus	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::updateStatus()$/;"	f	class:DefaultRename
updateStatus	src/cpu/ozone/front_end_impl.hh	/^FrontEnd<Impl>::updateStatus()$/;"	f	class:FrontEnd
updateStatusView	src/arch/mips/mt.hh	/^updateStatusView(TC *tc)$/;"	f	namespace:MipsISA
updateStructures	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::updateStructures()$/;"	f	class:BackEnd
updateStructures	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::updateStructures()$/;"	f	class:LWBackEnd
updateTCStateCoProc	src/cpu/kvm/arm_cpu.cc	/^ArmKvmCPU::updateTCStateCoProc(uint64_t id, bool show_warnings)$/;"	f	class:ArmKvmCPU
updateTCStateCore	src/cpu/kvm/arm_cpu.cc	/^ArmKvmCPU::updateTCStateCore()$/;"	f	class:ArmKvmCPU
updateTCStateMisc	src/cpu/kvm/arm_cpu.cc	/^ArmKvmCPU::updateTCStateMisc()$/;"	f	class:ArmKvmCPU
updateTCStateVFP	src/cpu/kvm/arm_cpu.cc	/^ArmKvmCPU::updateTCStateVFP(uint64_t id, bool show_warnings)$/;"	f	class:ArmKvmCPU
updateTCStatusView	src/arch/mips/mt.hh	/^updateTCStatusView(TC *tc)$/;"	f	namespace:MipsISA
updateTail	src/cpu/o3/rob_impl.hh	/^ROB<Impl>::updateTail()$/;"	f	class:ROB
updateThisCycle	src/cpu/checker/cpu.hh	/^    bool updateThisCycle;$/;"	m	class:Checker
updateThreadContext	src/cpu/kvm/arm_cpu.cc	/^ArmKvmCPU::updateThreadContext()$/;"	f	class:ArmKvmCPU
updateThreadContext	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::updateThreadContext()$/;"	f	class:X86KvmCPU
updateThreadContextFPU	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::updateThreadContextFPU(const struct kvm_fpu &fpu)$/;"	f	class:X86KvmCPU
updateThreadContextFPUCommon	src/cpu/kvm/x86_cpu.cc	/^updateThreadContextFPUCommon(ThreadContext *tc, const T &fpu)$/;"	f	file:
updateThreadContextMSRs	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::updateThreadContextMSRs()$/;"	f	class:X86KvmCPU
updateThreadContextRegs	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::updateThreadContextRegs(const struct kvm_regs &regs,$/;"	f	class:X86KvmCPU
updateThreadContextSRegs	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::updateThreadContextSRegs(const struct kvm_sregs &sregs)$/;"	f	class:X86KvmCPU
updateThreadContextXSave	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::updateThreadContextXSave(const struct kvm_xsave &kxsave)$/;"	f	class:X86KvmCPU
updateThreadPriority	src/cpu/inorder/cpu.cc	/^InOrderCPU::updateThreadPriority()$/;"	f	class:InOrderCPU
updateThreadPriority	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::updateThreadPriority()$/;"	f	class:FullO3CPU
updateVaddr	src/arch/alpha/pagetable.hh	/^    updateVaddr(Addr new_vaddr)$/;"	f	struct:AlphaISA::TlbEntry
updateVaddr	src/arch/arm/pagetable.hh	/^    updateVaddr(Addr new_vaddr)$/;"	f	struct:ArmISA::TlbEntry
updateVaddr	src/arch/mips/pagetable.hh	/^    updateVaddr(Addr new_vaddr) {}$/;"	f	struct:MipsISA::TlbEntry
updateVaddr	src/arch/power/tlb.hh	/^    updateVaddr(Addr new_vaddr)$/;"	f	struct:PowerISA::TlbEntry
updateVaddr	src/arch/sparc/pagetable.hh	/^    updateVaddr(Addr new_vaddr)$/;"	f	struct:SparcISA::TlbEntry
updateVaddr	src/arch/x86/pagetable.hh	/^        updateVaddr(Addr new_vaddr)$/;"	f	struct:X86ISA::TlbEntry
updateVideoParams	src/dev/arm/hdlcd.cc	/^HDLcd::updateVideoParams(bool unserializing = false)$/;"	f	class:HDLcd
updateVideoParams	src/dev/arm/pl111.cc	/^Pl111::updateVideoParams()$/;"	f	class:Pl111
update_credit	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.hh	/^    update_credit(int in_vc, int credit)$/;"	f	class:InputUnit_d
update_credit	src/mem/ruby/network/garnet/fixed-pipeline/VirtualChannel_d.hh	/^    inline void update_credit(int credit)   { m_credit_count = credit; }$/;"	f	class:VirtualChannel_d
update_data	src/dev/Device.py	/^    update_data = Param.Bool(False, "Update the data that is returned on writes")$/;"	v	class:IsaFake
update_if_needed	src/arch/isa_parser.py	/^    def update_if_needed(self, file, contents):$/;"	m	class:ISAParser
update_incredit	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.cc	/^Router_d::update_incredit(int in_port, int in_vc, int credit)$/;"	f	class:Router_d
update_sw_winner	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.cc	/^Router_d::update_sw_winner(int inport, flit_d *t_flit)$/;"	f	class:Router_d
update_sw_winner	src/mem/ruby/network/garnet/fixed-pipeline/Switch_d.hh	/^    inline void update_sw_winner(int inport, flit_d *t_flit)$/;"	f	class:Switch_d
update_vc	src/mem/ruby/network/garnet/fixed-pipeline/OutputUnit_d.cc	/^OutputUnit_d::update_vc(int vc, int in_port, int in_vc)$/;"	f	class:OutputUnit_d
updatedQueues	src/cpu/o3/iew.hh	/^    bool updatedQueues;$/;"	m	class:DefaultIEW
upper	src/arch/arm/isa.hh	/^            uint32_t upper;$/;"	m	struct:ArmISA::ISA::MiscRegLUTEntry
upperBound	src/base/loader/symtab.hh	/^    upperBound(Addr addr, ATable::const_iterator &iter) const$/;"	f	class:SymbolTable
uppercase	src/base/cprintf_formats.hh	/^    bool uppercase;$/;"	m	struct:cp::Format
uptime	src/arch/alpha/linux/linux.hh	/^       int64_t  uptime;    \/* Seconds since boot *\/$/;"	m	struct:AlphaLinux::__anon2
uptime	src/arch/arm/linux/linux.hh	/^        int32_t  uptime;    \/* Seconds since boot *\/$/;"	m	struct:ArmLinux32::__anon8
uptime	src/arch/arm/linux/linux.hh	/^        int64_t  uptime;    \/* Seconds since boot *\/$/;"	m	struct:ArmLinux64::__anon11
uptime	src/arch/mips/linux/linux.hh	/^       int32_t  uptime;    \/* Seconds since boot *\/$/;"	m	struct:MipsLinux::__anon20
uptime	src/arch/sparc/linux/linux.hh	/^        int32_t  uptime;    \/* Seconds since boot *\/$/;"	m	struct:Sparc32Linux::__anon28
uptime	src/arch/sparc/linux/linux.hh	/^        int64_t  uptime;    \/* Seconds since boot *\/$/;"	m	struct:SparcLinux::__anon26
uptime	src/arch/x86/linux/linux.hh	/^        int64_t  uptime;    \/* Seconds since boot *\/$/;"	m	struct:X86Linux64::__anon32
uptime	src/arch/x86/linux/linux.hh	/^       int32_t  uptime;    \/* Seconds since boot *\/$/;"	m	struct:X86Linux32::__anon34
ura	src/arch/arm/insts/macromem.hh	/^    IntRegIndex ura, urb, urc;$/;"	m	class:ArmISA::MicroSetPCCPSR
ura	src/arch/arm/insts/macromem.hh	/^    RegIndex dest, ura;$/;"	m	class:ArmISA::MicroNeonMemOp
ura	src/arch/arm/insts/macromem.hh	/^    RegIndex ura, urb, urc;$/;"	m	class:ArmISA::MicroIntOp
ura	src/arch/arm/insts/macromem.hh	/^    RegIndex ura, urb, urc;$/;"	m	class:ArmISA::MicroIntRegOp
ura	src/arch/arm/insts/macromem.hh	/^    RegIndex ura, urb, urc;$/;"	m	class:ArmISA::MicroIntRegXOp
ura	src/arch/arm/insts/macromem.hh	/^    RegIndex ura, urb;$/;"	m	class:ArmISA::MicroIntImmOp
ura	src/arch/arm/insts/macromem.hh	/^    RegIndex ura, urb;$/;"	m	class:ArmISA::MicroIntImmXOp
ura	src/arch/arm/insts/macromem.hh	/^    RegIndex ura, urb;$/;"	m	class:ArmISA::MicroIntMov
ura	src/arch/arm/insts/mem.hh	/^    IntRegIndex ura, urb, urc;$/;"	m	class:ArmISA::RfeOp
urb	src/arch/arm/insts/macromem.hh	/^    IntRegIndex ura, urb, urc;$/;"	m	class:ArmISA::MicroSetPCCPSR
urb	src/arch/arm/insts/macromem.hh	/^    RegIndex ura, urb, urc;$/;"	m	class:ArmISA::MicroIntOp
urb	src/arch/arm/insts/macromem.hh	/^    RegIndex ura, urb, urc;$/;"	m	class:ArmISA::MicroIntRegOp
urb	src/arch/arm/insts/macromem.hh	/^    RegIndex ura, urb, urc;$/;"	m	class:ArmISA::MicroIntRegXOp
urb	src/arch/arm/insts/macromem.hh	/^    RegIndex ura, urb;$/;"	m	class:ArmISA::MicroIntImmOp
urb	src/arch/arm/insts/macromem.hh	/^    RegIndex ura, urb;$/;"	m	class:ArmISA::MicroIntImmXOp
urb	src/arch/arm/insts/macromem.hh	/^    RegIndex ura, urb;$/;"	m	class:ArmISA::MicroIntMov
urb	src/arch/arm/insts/mem.hh	/^    IntRegIndex ura, urb, urc;$/;"	m	class:ArmISA::RfeOp
urc	src/arch/arm/insts/macromem.hh	/^    IntRegIndex ura, urb, urc;$/;"	m	class:ArmISA::MicroSetPCCPSR
urc	src/arch/arm/insts/macromem.hh	/^    RegIndex ura, urb, urc;$/;"	m	class:ArmISA::MicroIntOp
urc	src/arch/arm/insts/macromem.hh	/^    RegIndex ura, urb, urc;$/;"	m	class:ArmISA::MicroIntRegOp
urc	src/arch/arm/insts/macromem.hh	/^    RegIndex ura, urb, urc;$/;"	m	class:ArmISA::MicroIntRegXOp
urc	src/arch/arm/insts/mem.hh	/^    IntRegIndex ura, urb, urc;$/;"	m	class:ArmISA::RfeOp
urd	src/dev/pcireg.h	/^        Bitfield<3>     urd;$/;"	m	struct:PXCAP
urp	src/base/inet.hh	/^    uint16_t urp() const { return ntohs(th_urp); }$/;"	f	struct:Net::TcpHdr
urre	src/dev/pcireg.h	/^        Bitfield<3>     urre;$/;"	m	struct:PXCAP
urti	src/arch/alpha/osfpal.hh	/^        urti = 0x92,$/;"	e	enum:PAL::__anon3
us	src/sim/core.cc	/^Tick us;$/;"	m	namespace:SimClock::Int	file:
us	src/sim/core.cc	/^double us;$/;"	m	namespace:SimClock::Float	file:
usage	src/mem/slicc/main.py	/^usage="%prog [options] <files> ... "$/;"	v
usage	src/python/m5/main.py	/^usage="%prog [gem5 options] script.py [script options]"$/;"	v
usage	src/python/m5/options.py	/^    def usage(self, exitcode=None):$/;"	m	class:OptionParser
usage	src/unittest/initest.cc	/^usage()$/;"	f
usage	src/unittest/symtest.cc	/^usage(const char *progname)$/;"	f
usb_fake	src/dev/arm/RealView.py	/^    usb_fake       = IsaFake(pio_addr=0x1B000000, pio_size=0x1ffff)$/;"	v	class:VExpress_EMM
useCoalescedMMIO	src/cpu/kvm/BaseKvmCPU.py	/^    useCoalescedMMIO = Param.Bool(False, "Use coalesced MMIO (EXPERIMENTAL)")$/;"	v
useDefIdx	src/cpu/inorder/resources/use_def.hh	/^        int useDefIdx;$/;"	m	class:UseDefUnit::UseDefRequest
useDefaultRange	src/mem/bus.hh	/^    const bool useDefaultRange;$/;"	m	class:BaseBus
useGzip	src/proto/protoio.hh	/^    bool useGzip;$/;"	m	class:ProtoInputStream
useImm	src/arch/arm/types.hh	/^        Bitfield<25>     useImm;$/;"	m	namespace:ArmISA
useMasterId	src/mem/cache/prefetch/base.hh	/^    const bool useMasterId;$/;"	m	class:BasePrefetcher
usePerfOverflow	src/cpu/kvm/BaseKvmCPU.py	/^    usePerfOverflow = Param.Bool(False, "Use perf event overflow counters (EXPERIMENTAL)")$/;"	v
useTso	src/dev/i8254xGBe.hh	/^        bool useTso;$/;"	m	class:IGbE::TxDescCache
useXSave	src/cpu/kvm/X86KvmCPU.py	/^    useXSave = Param.Bool(True, "Use XSave to synchronize FPU\/SIMD registers")$/;"	v
useXSave	src/cpu/kvm/x86_cpu.hh	/^    bool useXSave;$/;"	m	class:X86KvmCPU
use_default_range	src/mem/Bus.py	/^                                       "the default port")$/;"	v	class:BaseBus
use_map	src/mem/ruby/system/DirectoryMemory.py	/^    use_map = Param.Bool(False, "enable sparse memory")$/;"	v	class:RubyDirectoryMemory
use_master_id	src/mem/cache/prefetch/Prefetcher.py	/^    use_master_id = Param.Bool(True,$/;"	v	class:BasePrefetcher
useable	src/arch/x86/linux/syscalls.cc	/^    Bitfield<6> useable;$/;"	v
usec	src/base/time.hh	/^    long usec() const { return _time.tv_nsec \/ NSEC_PER_USEC; }$/;"	f	class:Time
usec	src/base/time.hh	/^    void usec(long usec) { _time.tv_nsec = usec * NSEC_PER_USEC; }$/;"	f	class:Time
used	src/arch/sparc/pagetable.hh	/^    bool used;$/;"	m	struct:SparcISA::TlbEntry
usedCache	src/dev/i8254xGBe.hh	/^        CacheType usedCache;$/;"	m	class:IGbE::DescCache
usedEntries	src/arch/sparc/tlb.hh	/^    int usedEntries;$/;"	m	class:SparcISA::TLB
usedEntries	src/cpu/pred/ras.hh	/^    unsigned usedEntries;$/;"	m	class:ReturnAddrStack
usedIQ	src/cpu/o3/comm.hh	/^        bool usedIQ;$/;"	m	struct:TimeBufStruct::iewComm
usedLSQ	src/cpu/o3/comm.hh	/^        bool usedLSQ;$/;"	m	struct:TimeBufStruct::iewComm
usedPorts	src/cpu/o3/lsq_unit.hh	/^    int usedPorts;$/;"	m	class:LSQUnit
usedPorts	src/cpu/ozone/lsq_unit.hh	/^    int usedPorts;$/;"	m	class:OzoneLSQ
usedPorts	src/cpu/ozone/lw_lsq.hh	/^    int usedPorts;$/;"	m	class:OzoneLWLSQ
usedRAS	src/cpu/pred/bpred_unit.hh	/^        bool usedRAS;$/;"	m	struct:BPredUnit::PredictorHistory
usedRAS	src/cpu/pred/bpred_unit.hh	/^    Stats::Scalar usedRAS;$/;"	m	class:BPredUnit
usedROB	src/cpu/o3/comm.hh	/^        bool usedROB; \/\/ *R$/;"	m	struct:TimeBufStruct::commitComm
uselib	src/kern/linux/linux_syscalls.hh	/^    uselib = 260,$/;"	e	enum:SystemCalls::__anon87
user	src/arch/alpha/kernel_stats.hh	/^enum cpu_mode { kernel, user, idle, cpu_mode_num };$/;"	e	enum:AlphaISA::Kernel::cpu_mode
user	src/arch/alpha/stacktrace.hh	/^        user = 1,$/;"	e	enum:AlphaISA::StackTrace::__anon4
user	src/arch/arm/kernel_stats.hh	/^enum cpu_mode { hypervisor, kernel, user, idle, cpu_mode_num };$/;"	e	enum:ArmISA::Kernel::cpu_mode
user	src/arch/arm/table_walker.hh	/^        bool user() const$/;"	f	class:ArmISA::TableWalker::LongDescriptor
user	src/arch/mips/kernel_stats.hh	/^enum cpu_mode { kernel, user, idle, cpu_mode_num };$/;"	e	enum:MipsISA::Kernel::cpu_mode
user	src/arch/mips/stacktrace.hh	/^    static const int user = 1;$/;"	m	class:MipsISA::StackTrace
user	src/arch/power/kernel_stats.hh	/^enum cpu_mode { hypervisor, kernel, user, idle, cpu_mode_num };$/;"	e	enum:PowerISA::Kernel::cpu_mode
user	src/arch/power/stacktrace.hh	/^    static const int user = 1;$/;"	m	class:PowerISA::StackTrace
user	src/arch/sparc/kernel_stats.hh	/^enum cpu_mode { hypervisor, kernel, user, idle, cpu_mode_num };$/;"	e	enum:SparcISA::Kernel::cpu_mode
user	src/arch/x86/faults.hh	/^            Bitfield<2> user;$/;"	m	class:X86ISA::PageFault
user	src/arch/x86/kernel_stats.hh	/^    user = ring3,$/;"	e	enum:X86ISA::Kernel::cpu_mode
user	src/arch/x86/pagetable.hh	/^        bool user;$/;"	m	struct:X86ISA::TlbEntry
user	src/arch/x86/stacktrace.hh	/^        static const int user = 1;$/;"	m	class:X86ISA::StackTrace
user1	src/dev/copy_engine_defs.hh	/^    uint64_t user1;$/;"	m	struct:CopyEngineReg::DmaDesc
user2	src/dev/copy_engine_defs.hh	/^    uint64_t user2;$/;"	m	struct:CopyEngineReg::DmaDesc
userApp	src/base/cp_annotate.hh	/^    std::map<std::string, SymbolTable*> userApp;$/;"	m	class:CPA
userTable	src/arch/arm/table_walker.hh	/^        bool userTable;$/;"	m	class:ArmISA::TableWalker::WalkerState
userTable	src/arch/arm/table_walker.hh	/^        uint8_t userTable() const$/;"	f	class:ArmISA::TableWalker::LongDescriptor
user_apps	src/base/CPA.py	/^    user_apps = VectorParam.String([], "List of apps to get symbols for")$/;"	v	class:CPA
username	src/base/userinfo.cc	/^username()$/;"	f
ushared_state	src/kern/tru64/tru64.hh	/^    struct ushared_state {$/;"	s	class:Tru64
using_network_tester	src/mem/ruby/system/Sequencer.py	/^    using_network_tester = Param.Bool(False, "")$/;"	v	class:RubySequencer
using_ruby_tester	src/mem/ruby/system/Sequencer.py	/^    using_ruby_tester = Param.Bool(False, "")$/;"	v	class:RubyPort
usleep_thread	src/kern/tru64/tru64_syscalls.hh	/^        usleep_thread = 251,$/;"	e	enum:SystemCalls::__anon102
usr	src/arch/x86/regs/misc.hh	/^        Bitfield<16> usr; \/\/ User mode$/;"	m	namespace:X86ISA
ustat	src/kern/linux/linux_syscalls.hh	/^    ustat = 261,$/;"	e	enum:SystemCalls::__anon87
uswitch	src/kern/tru64/tru64_syscalls.hh	/^        uswitch = 250,$/;"	e	enum:SystemCalls::__anon102
ut	src/arch/mips/dt_constants.hh	/^    Bitfield<30>     ut;$/;"	m	namespace:MipsISA
utc_adjtime	src/kern/tru64/tru64_syscalls.hh	/^        utc_adjtime = 220,$/;"	e	enum:SystemCalls::__anon102
utc_gettime	src/kern/tru64/tru64_syscalls.hh	/^        utc_gettime = 219,$/;"	e	enum:SystemCalls::__anon102
utcmd	src/dev/i8254xGBe_defs.hh	/^inline int utcmd(TxDesc *d) { assert(isContext(d)); return bits(d->d2,24,31); }$/;"	f	namespace:iGbReg::TxdOp
util	src/mem/slicc/parser.py	/^import slicc.util as util$/;"	i
util	src/python/m5/__init__.py	/^    import util$/;"	i
util	src/python/m5/trace.py	/^import util$/;"	i
util	src/python/m5/util/jobfile.py	/^        import m5.util$/;"	i
utilization	src/cpu/inorder/pipeline_stage.hh	/^    Stats::Formula utilization;$/;"	m	class:PipelineStage
utilization	src/mem/bus.hh	/^        Stats::Formula utilization;$/;"	m	class:BaseBus::Layer
utime	src/kern/linux/linux_syscalls.hh	/^    utime = 262,$/;"	e	enum:SystemCalls::__anon87
utimes	src/kern/linux/linux_syscalls.hh	/^    utimes = 263,$/;"	e	enum:SystemCalls::__anon87
utimes	src/kern/tru64/tru64_syscalls.hh	/^        utimes = 138,$/;"	e	enum:SystemCalls::__anon102
utimesFunc	src/sim/syscall_emul.hh	/^utimesFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
utsname	src/kern/linux/linux.hh	/^    struct utsname {$/;"	s	class:Linux
utsname	src/kern/operatingsystem.hh	/^    } utsname;$/;"	t	class:OperatingSystem	typeref:struct:OperatingSystem::__anon88
utsname	src/kern/solaris/solaris.hh	/^    typedef struct utsname {$/;"	s	class:Solaris
utsname	src/kern/solaris/solaris.hh	/^    } utsname;$/;"	t	class:Solaris	typeref:struct:Solaris::utsname
utsname	src/kern/tru64/tru64.hh	/^    struct utsname {$/;"	s	class:Tru64
uwxn	src/arch/arm/miscregs.hh	/^        Bitfield<20>   uwxn;    \/\/ Unprivileged write permission implies EL1 XN$/;"	m	namespace:ArmISA
ux	src/arch/mips/pra_constants.hh	/^    Bitfield<5>      ux;$/;"	m	namespace:MipsISA
ux	src/arch/power/miscregs.hh	/^    Bitfield<27> ux;$/;"	m	namespace:PowerISA
v	src/arch/arm/miscregs.hh	/^        Bitfield<13>   v;       \/\/ Vectors bit (AArch32 only)$/;"	m	namespace:ArmISA
v	src/arch/arm/miscregs.hh	/^        Bitfield<28> v;$/;"	m	namespace:ArmISA
v	src/arch/mips/pra_constants.hh	/^    Bitfield<1>      v;     \/\/ Valid Bit$/;"	m	namespace:MipsISA
v	src/arch/x86/regs/misc.hh	/^        Bitfield<11> v; \/\/ I\/O register pair enable (valid)$/;"	m	namespace:X86ISA
vIntPosted	src/dev/arm/vgic.hh	/^    bool        vIntPosted[VGIC_CPU_MAX];$/;"	m	class:VGic
v_back_porch	src/dev/arm/hdlcd.hh	/^    TimingReg v_back_porch;         \/**< Vertical back porch width register *\/$/;"	m	class:HDLcd
v_data	src/dev/arm/hdlcd.hh	/^    TimingReg v_data;               \/**< Vertical data width register *\/$/;"	m	class:HDLcd
v_front_porch	src/dev/arm/hdlcd.hh	/^    TimingReg v_front_porch;        \/**< Vertical front porch width register *\/$/;"	m	class:HDLcd
v_sync	src/dev/arm/hdlcd.hh	/^    TimingReg v_sync;               \/**< Vertical sync width register *\/$/;"	m	class:HDLcd
va	src/arch/arm/miscregs.hh	/^        Bitfield<8>      va;$/;"	m	namespace:ArmISA
va	src/arch/sparc/pagetable.hh	/^    Addr va()    const { assert(populated); return bits(entry,41,0); }$/;"	f	class:SparcISA::TteTag
va	src/arch/sparc/pagetable.hh	/^    Addr va;$/;"	m	struct:SparcISA::TlbRange
vaddr	src/arch/alpha/faults.hh	/^    VAddr vaddr;$/;"	m	class:AlphaISA::DtbFault
vaddr	src/arch/arm/table_walker.hh	/^        Addr vaddr;$/;"	m	class:ArmISA::TableWalker::WalkerState
vaddr	src/arch/mips/faults.hh	/^    Addr vaddr;$/;"	m	class:MipsISA::AddressFault
vaddr	src/arch/mips/pra_constants.hh	/^    Bitfield<63, 3> vaddr;$/;"	m	namespace:MipsISA
vaddr	src/arch/sparc/faults.hh	/^    Addr vaddr;$/;"	m	class:SparcISA::FastDataAccessMMUMiss
vaddr	src/arch/sparc/faults.hh	/^    Addr vaddr;$/;"	m	class:SparcISA::FastInstructionAccessMMUMiss
vaddr	src/arch/x86/pagetable.hh	/^        Addr vaddr;$/;"	m	struct:X86ISA::TlbEntry
vaddr	src/mem/page_table.hh	/^        Addr vaddr;$/;"	m	struct:PageTable::cacheElement
vaddr	src/sim/faults.hh	/^    Addr vaddr;$/;"	m	class:GenericAlignmentFault
vaddr	src/sim/faults.hh	/^    Addr vaddr;$/;"	m	class:GenericPageTableFault
vaddr_tainted	src/arch/arm/table_walker.hh	/^        Addr vaddr_tainted;$/;"	m	class:ArmISA::TableWalker::WalkerState
val	src/arch/x86/regs/misc.hh	/^        Bitfield<63> val; \/\/ Valid$/;"	m	namespace:X86ISA
val	src/dev/arm/hdlcd.hh	/^        Bitfield<11,0>  val;$/;"	m	class:HDLcd
val	src/kern/tru64/tru64.hh	/^    typedef struct { int val[2]; } quad;$/;"	m	struct:Tru64::__anon98
valid	src/arch/alpha/pagetable.hh	/^    bool valid() const { return (entry >>  0) & 0x1; }$/;"	f	struct:AlphaISA::PageTableEntry
valid	src/arch/alpha/pagetable.hh	/^    bool valid;             \/\/ valid page table entry$/;"	m	struct:AlphaISA::TlbEntry
valid	src/arch/alpha/stacktrace.hh	/^    bool valid() const { return tc != NULL; }$/;"	f	class:AlphaISA::StackTrace
valid	src/arch/arm/pagetable.hh	/^    bool valid;$/;"	m	struct:ArmISA::TlbEntry
valid	src/arch/arm/stacktrace.hh	/^    bool valid() const { return tc != NULL; }$/;"	f	class:ArmISA::StackTrace
valid	src/arch/mips/stacktrace.hh	/^    bool valid() const { return tc != NULL; }$/;"	f	class:MipsISA::StackTrace
valid	src/arch/power/stacktrace.hh	/^    valid() const$/;"	f	class:PowerISA::StackTrace
valid	src/arch/sparc/pagetable.hh	/^    bool valid() const { assert(populated); return !bits(entry,62,62); }$/;"	f	class:SparcISA::TteTag
valid	src/arch/sparc/pagetable.hh	/^    bool valid() const { return bits(entry4u,63,63) && populated; }$/;"	f	class:SparcISA::PageTableEntry
valid	src/arch/sparc/pagetable.hh	/^    bool valid;$/;"	m	struct:SparcISA::TlbEntry
valid	src/arch/x86/regs/misc.hh	/^        Bitfield<11> valid; \/\/ MTRR pair enable$/;"	m	namespace:X86ISA
valid	src/arch/x86/stacktrace.hh	/^        bool valid() const { return tc != NULL; }$/;"	f	class:X86ISA::StackTrace
valid	src/base/addr_range.hh	/^    bool valid() const { return _start < _end; }$/;"	f	class:AddrRange
valid	src/base/stats/text.cc	/^Text::valid() const$/;"	f	class:Stats::Text
valid	src/cpu/inorder/resource.hh	/^    bool valid;$/;"	m	class:ResourceRequest
valid	src/cpu/inorder/resources/fetch_unit.hh	/^        bool valid;$/;"	m	struct:FetchUnit::FetchBlock
valid	src/cpu/pred/btb.cc	/^DefaultBTB::valid(Addr instPC, ThreadID tid)$/;"	f	class:DefaultBTB
valid	src/cpu/pred/btb.hh	/^        bool valid;$/;"	m	struct:DefaultBTB::BTBEntry
valid	src/cpu/timebuf.hh	/^    void valid(int idx)$/;"	f	class:TimeBuffer
valid	src/mem/bus.hh	/^        bool valid;$/;"	m	struct:BaseBus::PortCache
valid	src/mem/page_table.hh	/^        bool valid;$/;"	m	struct:PageTable::cacheElement
validDataAddr	src/cpu/inorder/cpu.hh	/^    bool validDataAddr(Addr addr) { return true; }$/;"	f	class:InOrderCPU
validDataAddr	src/cpu/o3/cpu.hh	/^    bool validDataAddr(Addr addr) { return true; }$/;"	f	class:FullO3CPU
validInstAddr	src/cpu/inorder/cpu.hh	/^    bool validInstAddr(Addr addr) { return true; }$/;"	f	class:InOrderCPU
validInstAddr	src/cpu/o3/cpu.hh	/^    bool validInstAddr(Addr addr) { return true; }$/;"	f	class:FullO3CPU
validInsts	src/cpu/o3/rename_impl.hh	/^DefaultRename<Impl>::validInsts()$/;"	f	class:DefaultRename
validInstsFromRename	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::validInstsFromRename()$/;"	f	class:DefaultIEW
validLFST	src/cpu/o3/store_set.hh	/^    std::vector<bool> validLFST;$/;"	m	class:StoreSet
validMemAddr	src/cpu/inorder/inorder_dyn_inst.hh	/^    bool validMemAddr()$/;"	f	class:InOrderDynInst
validModes	src/arch/mips/dt_constants.hh	/^    Bitfield<6,  5>  validModes;$/;"	m	namespace:MipsISA
validSSIT	src/cpu/o3/store_set.hh	/^    std::vector<bool> validSSIT;$/;"	m	class:StoreSet
validSyscallNumber	src/kern/linux/linux_syscalls.hh	/^    static bool validSyscallNumber(int num) {$/;"	f	class:SystemCalls
validSyscallNumber	src/kern/tru64/tru64_syscalls.hh	/^    static bool validSyscallNumber(int num) {$/;"	f	class:SystemCalls
validVirtualAddress	src/arch/alpha/tlb.hh	/^    validVirtualAddress(Addr vaddr)$/;"	f	class:AlphaISA::TLB
validVirtualAddress	src/arch/sparc/tlb.cc	/^TLB::validVirtualAddress(Addr va, bool am)$/;"	f	class:SparcISA::TLB
validVirtualNetwork	src/mem/ruby/network/garnet/BaseGarnetNetwork.hh	/^    bool validVirtualNetwork(int vnet) { return m_in_use[vnet]; }$/;"	f	class:BaseGarnetNetwork
validVirtualNetwork	src/mem/ruby/network/simple/SimpleNetwork.hh	/^    bool validVirtualNetwork(int vnet) { return m_in_use[vnet]; }$/;"	f	class:SimpleNetwork
validate	src/cpu/activity.cc	/^ActivityRecorder::validate()$/;"	f	class:ActivityRecorder
validateExecution	src/cpu/checker/cpu_impl.hh	/^Checker<Impl>::validateExecution(DynInstPtr &inst)$/;"	f	class:Checker
validateInst	src/cpu/checker/cpu_impl.hh	/^Checker<Impl>::validateInst(DynInstPtr &inst)$/;"	f	class:Checker
validateStatName	src/base/statistics.cc	/^validateStatName(const string &name)$/;"	f	namespace:Stats
validateState	src/cpu/checker/cpu_impl.hh	/^Checker<Impl>::validateState()$/;"	f	class:Checker
vals	src/arch/arm/faults.cc	/^template<> ArmFault::FaultVals ArmFaultVals<ArmSev>::vals = {$/;"	m	class:ArmISA::ArmFaultVals	file:
vals	src/arch/arm/faults.cc	/^template<> ArmFault::FaultVals ArmFaultVals<DataAbort>::vals = {$/;"	m	class:ArmISA::ArmFaultVals	file:
vals	src/arch/arm/faults.cc	/^template<> ArmFault::FaultVals ArmFaultVals<FastInterrupt>::vals = {$/;"	m	class:ArmISA::ArmFaultVals	file:
vals	src/arch/arm/faults.cc	/^template<> ArmFault::FaultVals ArmFaultVals<FlushPipe>::vals = {$/;"	m	class:ArmISA::ArmFaultVals	file:
vals	src/arch/arm/faults.cc	/^template<> ArmFault::FaultVals ArmFaultVals<HypervisorCall>::vals = {$/;"	m	class:ArmISA::ArmFaultVals	file:
vals	src/arch/arm/faults.cc	/^template<> ArmFault::FaultVals ArmFaultVals<HypervisorTrap>::vals = {$/;"	m	class:ArmISA::ArmFaultVals	file:
vals	src/arch/arm/faults.cc	/^template<> ArmFault::FaultVals ArmFaultVals<IllegalInstSetStateFault>::vals = {$/;"	m	class:ArmISA::ArmFaultVals	file:
vals	src/arch/arm/faults.cc	/^template<> ArmFault::FaultVals ArmFaultVals<Interrupt>::vals = {$/;"	m	class:ArmISA::ArmFaultVals	file:
vals	src/arch/arm/faults.cc	/^template<> ArmFault::FaultVals ArmFaultVals<PCAlignmentFault>::vals = {$/;"	m	class:ArmISA::ArmFaultVals	file:
vals	src/arch/arm/faults.cc	/^template<> ArmFault::FaultVals ArmFaultVals<PrefetchAbort>::vals = {$/;"	m	class:ArmISA::ArmFaultVals	file:
vals	src/arch/arm/faults.cc	/^template<> ArmFault::FaultVals ArmFaultVals<Reset>::vals = {$/;"	m	class:ArmISA::ArmFaultVals	file:
vals	src/arch/arm/faults.cc	/^template<> ArmFault::FaultVals ArmFaultVals<SPAlignmentFault>::vals = {$/;"	m	class:ArmISA::ArmFaultVals	file:
vals	src/arch/arm/faults.cc	/^template<> ArmFault::FaultVals ArmFaultVals<SecureMonitorCall>::vals = {$/;"	m	class:ArmISA::ArmFaultVals	file:
vals	src/arch/arm/faults.cc	/^template<> ArmFault::FaultVals ArmFaultVals<SecureMonitorTrap>::vals = {$/;"	m	class:ArmISA::ArmFaultVals	file:
vals	src/arch/arm/faults.cc	/^template<> ArmFault::FaultVals ArmFaultVals<SupervisorCall>::vals = {$/;"	m	class:ArmISA::ArmFaultVals	file:
vals	src/arch/arm/faults.cc	/^template<> ArmFault::FaultVals ArmFaultVals<SupervisorTrap>::vals = {$/;"	m	class:ArmISA::ArmFaultVals	file:
vals	src/arch/arm/faults.cc	/^template<> ArmFault::FaultVals ArmFaultVals<SystemError>::vals = {$/;"	m	class:ArmISA::ArmFaultVals	file:
vals	src/arch/arm/faults.cc	/^template<> ArmFault::FaultVals ArmFaultVals<UndefinedInstruction>::vals = {$/;"	m	class:ArmISA::ArmFaultVals	file:
vals	src/arch/arm/faults.cc	/^template<> ArmFault::FaultVals ArmFaultVals<VirtualDataAbort>::vals = {$/;"	m	class:ArmISA::ArmFaultVals	file:
vals	src/arch/arm/faults.cc	/^template<> ArmFault::FaultVals ArmFaultVals<VirtualFastInterrupt>::vals = {$/;"	m	class:ArmISA::ArmFaultVals	file:
vals	src/arch/arm/faults.cc	/^template<> ArmFault::FaultVals ArmFaultVals<VirtualInterrupt>::vals = {$/;"	m	class:ArmISA::ArmFaultVals	file:
vals	src/arch/arm/faults.hh	/^    static FaultVals vals;$/;"	m	class:ArmISA::ArmFaultVals
vals	src/arch/mips/faults.cc	/^template <> FaultVals MipsFault<AddressErrorFault>::vals =$/;"	m	class:MipsISA::MipsFault	file:
vals	src/arch/mips/faults.cc	/^template <> FaultVals MipsFault<BreakpointFault>::vals =$/;"	m	class:MipsISA::MipsFault	file:
vals	src/arch/mips/faults.cc	/^template <> FaultVals MipsFault<CoprocessorUnusableFault>::vals =$/;"	m	class:MipsISA::MipsFault	file:
vals	src/arch/mips/faults.cc	/^template <> FaultVals MipsFault<DspStateDisabledFault>::vals =$/;"	m	class:MipsISA::MipsFault	file:
vals	src/arch/mips/faults.cc	/^template <> FaultVals MipsFault<IntegerOverflowFault>::vals =$/;"	m	class:MipsISA::MipsFault	file:
vals	src/arch/mips/faults.cc	/^template <> FaultVals MipsFault<InterruptFault>::vals =$/;"	m	class:MipsISA::MipsFault	file:
vals	src/arch/mips/faults.cc	/^template <> FaultVals MipsFault<MachineCheckFault>::vals =$/;"	m	class:MipsISA::MipsFault	file:
vals	src/arch/mips/faults.cc	/^template <> FaultVals MipsFault<NonMaskableInterrupt>::vals =$/;"	m	class:MipsISA::MipsFault	file:
vals	src/arch/mips/faults.cc	/^template <> FaultVals MipsFault<ReservedInstructionFault>::vals =$/;"	m	class:MipsISA::MipsFault	file:
vals	src/arch/mips/faults.cc	/^template <> FaultVals MipsFault<ResetFault>::vals =$/;"	m	class:MipsISA::MipsFault	file:
vals	src/arch/mips/faults.cc	/^template <> FaultVals MipsFault<SoftResetFault>::vals =$/;"	m	class:MipsISA::MipsFault	file:
vals	src/arch/mips/faults.cc	/^template <> FaultVals MipsFault<SystemCallFault>::vals =$/;"	m	class:MipsISA::MipsFault	file:
vals	src/arch/mips/faults.cc	/^template <> FaultVals MipsFault<ThreadFault>::vals =$/;"	m	class:MipsISA::MipsFault	file:
vals	src/arch/mips/faults.cc	/^template <> FaultVals MipsFault<TlbInvalidFault>::vals =$/;"	m	class:MipsISA::MipsFault	file:
vals	src/arch/mips/faults.cc	/^template <> FaultVals MipsFault<TlbRefillFault>::vals =$/;"	m	class:MipsISA::MipsFault	file:
vals	src/arch/mips/faults.cc	/^template <> FaultVals MipsFault<TrapFault>::vals =$/;"	m	class:MipsISA::MipsFault	file:
vals	src/arch/mips/faults.cc	/^template <> MipsFaultBase::FaultVals MipsFault<TlbModifiedFault>::vals =$/;"	m	class:MipsISA::MipsFault	file:
vals	src/arch/mips/faults.hh	/^    static FaultVals vals;$/;"	m	class:MipsISA::MipsFault
vals	src/arch/sparc/faults.cc	/^    SparcFault<CleanWindow>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<CpuMondo>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<DataAccessError>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<DataAccessException>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<DataAccessProtection>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<DataInvalidTSBEntry>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<DataRealTranslationMiss>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<DevMondo>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<DivisionByZero>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<ExternallyInitiatedReset>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<FastDataAccessMMUMiss>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<FastDataAccessProtection>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<FastInstructionAccessMMUMiss>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<FillNNormal>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<FillNOther>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<FpDisabled>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<FpExceptionIEEE754>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<FpExceptionOther>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<HstickMatch>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<IllegalInstruction>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<InstructionAccessError>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<InstructionAccessException>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<InstructionBreakpoint>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<InstructionInvalidTSBEntry>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<InstructionRealTranslationMiss>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<InternalProcessorError>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<InterruptLevelN>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<InterruptVector>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<LDDFMemAddressNotAligned>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<LDQFMemAddressNotAligned>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<MemAddressNotAligned>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<PAWatchpoint>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<PowerOnReset>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<PrivilegedAction>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<PrivilegedOpcode>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<REDStateException>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<ResumableError>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<STDFMemAddressNotAligned>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<STQFMemAddressNotAligned>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<SoftwareInitiatedReset>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<SpillNNormal>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<SpillNOther>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<StoreError>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<TagOverflow>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<TrapInstruction>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<TrapLevelZero>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<VAWatchpoint>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.cc	/^    SparcFault<WatchDogReset>::vals =$/;"	m	class:SparcISA::SparcFault	file:
vals	src/arch/sparc/faults.hh	/^    static FaultVals vals;$/;"	m	class:SparcISA::SparcFault
vals	src/cpu/FuncUnit.py	/^    vals = ['No_OpClass', 'IntAlu', 'IntMult', 'IntDiv', 'FloatAdd',$/;"	v	class:OpClass
vals	src/cpu/inorder/InOrderCPU.py	/^    vals = ['Single', 'SMT', 'SwitchOnCacheMiss']$/;"	v	class:ThreadModel
vals	src/python/m5/params.py	/^    vals = []$/;"	v	class:Enum
value	src/base/inifile.hh	/^        std::string     value;          \/\/\/< The entry value.$/;"	m	class:IniFile::Entry
value	src/base/loader/coff_sym.h	/^    coff_long   value;          \/* value of symbol *\/$/;"	m	struct:ecoff_sym
value	src/base/loader/coff_sym.h	/^    unsigned value: 24; \/* address where we are moving it to *\/$/;"	m	struct:__anon45
value	src/base/mod_num.hh	/^    T value;$/;"	m	class:ModNum
value	src/base/statistics.hh	/^    Counter value() const { return (*functor)(); }$/;"	f	class:Stats::FunctorProxy
value	src/base/statistics.hh	/^    Counter value() const { return *scalar; }$/;"	f	class:Stats::ValueProxy
value	src/base/statistics.hh	/^    Counter value() const { return current; }$/;"	f	class:Stats::AvgStor
value	src/base/statistics.hh	/^    Counter value() const { return data()->value(); }$/;"	f	class:Stats::ScalarBase
value	src/base/statistics.hh	/^    Counter value() const { return data; }$/;"	f	class:Stats::StatStor
value	src/base/statistics.hh	/^    Counter value() const { return stat.data(index)->value(); }$/;"	f	class:Stats::ScalarProxy
value	src/base/statistics.hh	/^    Counter value() const { return this->s.value(); }$/;"	f	class:Stats::ScalarInfoProxy
value	src/base/statistics.hh	/^    Counter value() { return data()->value(); }$/;"	f	class:Stats::ScalarBase
value	src/base/statistics.hh	/^    Counter value() { return proxy->value(); }$/;"	f	class:Stats::ValueBase
value	src/base/statistics.hh	/^    VCounter &value() const { return cvec; }$/;"	f	class:Stats::FormulaInfoProxy
value	src/base/statistics.hh	/^    value() const$/;"	f	class:Stats::VectorInfoProxy
value	src/base/statistics.hh	/^    value(VCounter &vec) const$/;"	f	class:Stats::VectorBase
value	src/base/stats/text.cc	/^    Result value;$/;"	m	struct:Stats::ScalarPrint	file:
value	src/base/trie.hh	/^        Value *value;$/;"	m	struct:Trie::Node
value	src/dev/arm/generic_timer.hh	/^        uint64_t value() const$/;"	f	class:GenericTimer::SystemCounter
value	src/sim/syscallreturn.hh	/^    uint64_t value() { return retval; }$/;"	f	class:SyscallReturn
value	src/unittest/genini.py	/^                value = 'True'$/;"	v
value	src/unittest/genini.py	/^                value = arg[offset+1:]$/;"	v
valuerange	src/python/m5/util/sorteddict.py	/^    def valuerange(self, *args, **kwargs):$/;"	m	class:SortedDict
values	src/python/m5/debug.py	/^    def values(self):$/;"	m	class:AllFlags
values	src/python/m5/util/multidict.py	/^    def values(self):$/;"	m	class:multidict
values	src/python/m5/util/orderdict.py	/^    def values(self):$/;"	m	class:orderdict
values	src/python/m5/util/smartdict.py	/^    def values(self):$/;"	m	class:SmartDict
values	src/python/m5/util/sorteddict.py	/^    def values(self):$/;"	m	class:SortedDict
var	src/mem/slicc/ast/VarExprAST.py	/^    def var(self):$/;"	m	class:VarExprAST
vbp	src/dev/arm/pl111.hh	/^        Bitfield<31,24> vbp;$/;"	m	class:Pl111
vc	src/base/bitmap.hh	/^    VideoConvert vc;$/;"	m	class:Bitmap
vc	src/base/vnc/vncinput.hh	/^    VideoConvert *vc;$/;"	m	class:VncInput
vc_arbitrate	src/mem/ruby/network/garnet/flexible-pipeline/Router.cc	/^Router::vc_arbitrate()$/;"	f	class:Router
vc_global_arbit_count	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    std::vector<double> vc_global_arbit_count;$/;"	m	class:Router_d
vc_local_arbit_count	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.hh	/^    std::vector<double> vc_local_arbit_count;$/;"	m	class:Router_d
vcarb_req	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.cc	/^Router_d::vcarb_req()$/;"	f	class:Router_d
vcnt	src/arch/x86/regs/misc.hh	/^        Bitfield<7, 0> vcnt; \/\/ Variable-Range Register Count$/;"	m	namespace:X86ISA
vcomp	src/dev/arm/pl111.hh	/^        Bitfield<3> vcomp;$/;"	m	class:Pl111
vcpuAddr	src/dev/arm/vgic.hh	/^    Addr vcpuAddr;$/;"	m	class:VGic
vcpuData	src/dev/arm/vgic.hh	/^    struct vcpuIntData vcpuData[VGIC_CPU_MAX];$/;"	m	class:VGic	typeref:struct:VGic::vcpuIntData
vcpuFD	src/cpu/kvm/base.hh	/^    int vcpuFD;$/;"	m	class:BaseKvmCPU
vcpuID	src/cpu/kvm/base.hh	/^    const long vcpuID;$/;"	m	class:BaseKvmCPU
vcpuIntData	src/dev/arm/vgic.hh	/^    struct vcpuIntData {$/;"	s	class:VGic
vcpuMMapSize	src/cpu/kvm/base.hh	/^    int vcpuMMapSize;$/;"	m	class:BaseKvmCPU
vcpuMMapSize	src/cpu/kvm/vm.hh	/^    int vcpuMMapSize;$/;"	m	class:Kvm
vcpuThread	src/cpu/kvm/base.hh	/^    pthread_t vcpuThread;$/;"	m	class:BaseKvmCPU
vcpu_addr	src/dev/arm/RealView.py	/^    vcpu_addr = Param.Addr(0, "Address for vcpu interfaces")$/;"	v	class:VGic
vcs	src/mem/ruby/network/fault_model/FaultModel.hh	/^        int vcs;$/;"	m	struct:FaultModel::system_conf
vcs_per_vnet	src/mem/ruby/network/garnet/BaseGarnetNetwork.py	/^    vcs_per_vnet = Param.Int(4, "virtual channels per virtual network");$/;"	v	class:BaseGarnetNetwork
vcs_per_vnet	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.py	/^    vcs_per_vnet = Param.Int(Parent.vcs_per_vnet,$/;"	v	class:NetworkLink_d
vcs_per_vnet	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.py	/^    vcs_per_vnet = Param.UInt32(Parent.vcs_per_vnet,$/;"	v	class:GarnetNetworkInterface_d
vcs_per_vnet	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.py	/^    vcs_per_vnet = Param.UInt32(Parent.vcs_per_vnet,$/;"	v	class:GarnetRouter_d
vcs_per_vnet	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.py	/^    vcs_per_vnet = Param.Int(Parent.vcs_per_vnet,$/;"	v	class:NetworkLink
vcs_per_vnet	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.py	/^    vcs_per_vnet = Param.Int(Parent.vcs_per_vnet,$/;"	v	class:GarnetRouter
vcs_per_vnet	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.py	/^    vcs_per_vnet = Param.UInt32(Parent.vcs_per_vnet,$/;"	v	class:GarnetNetworkInterface
vctrl	src/dev/arm/vgic.hh	/^        VCTLR vctrl;$/;"	m	struct:VGic::vcpuIntData
vcvtFpDFpH	src/arch/arm/insts/vfp.cc	/^vcvtFpDFpH(FPSCR &fpscr, bool flush, bool defaultNan,$/;"	f	namespace:ArmISA
vcvtFpFpH	src/arch/arm/insts/vfp.cc	/^vcvtFpFpH(FPSCR &fpscr, bool flush, bool defaultNan,$/;"	f	namespace:ArmISA
vcvtFpHFp	src/arch/arm/insts/vfp.cc	/^vcvtFpHFp(FPSCR &fpscr, bool defaultNan, bool ahp, uint16_t op, bool isDouble)$/;"	f	namespace:ArmISA
vcvtFpHFpD	src/arch/arm/insts/vfp.cc	/^vcvtFpHFpD(FPSCR &fpscr, bool defaultNan, bool ahp, uint16_t op)$/;"	f	namespace:ArmISA
vcvtFpHFpS	src/arch/arm/insts/vfp.cc	/^vcvtFpHFpS(FPSCR &fpscr, bool defaultNan, bool ahp, uint16_t op)$/;"	f	namespace:ArmISA
vcvtFpSFpH	src/arch/arm/insts/vfp.cc	/^vcvtFpSFpH(FPSCR &fpscr, bool flush, bool defaultNan,$/;"	f	namespace:ArmISA
vdr	src/dev/ns_gige.hh	/^    uint32_t    vdr;$/;"	m	struct:dp_regs
ve	src/arch/arm/miscregs.hh	/^        Bitfield<24>   ve;      \/\/ Interrupt Vectors Enable (ARMv7 only)$/;"	m	namespace:ArmISA
ve	src/arch/power/miscregs.hh	/^    Bitfield<8> ve;$/;"	m	namespace:PowerISA
vec	src/base/statistics.hh	/^    mutable VResult vec;$/;"	m	class:Stats::FormulaInfoProxy
vec	src/base/statistics.hh	/^    mutable VResult vec;$/;"	m	class:Stats::FormulaNode
vec	src/base/statistics.hh	/^    mutable VResult vec;$/;"	m	class:Stats::VectorProxy
vec	src/base/stats/text.cc	/^    VResult vec;$/;"	m	struct:Stats::VectorPrint	file:
vecIndex	src/mem/ruby/common/NetDest.hh	/^    vecIndex(MachineID m) const$/;"	f	class:NetDest
vec_ctrl	src/dev/pcireg.h	/^        uint32_t vec_ctrl;$/;"	m	struct:MSIXTable::__anon81
vect	src/arch/alpha/faults.hh	/^    FaultVect vect() {return _vect;}$/;"	f	class:AlphaISA::AlignmentFault
vect	src/arch/alpha/faults.hh	/^    FaultVect vect() {return _vect;}$/;"	f	class:AlphaISA::ArithmeticFault
vect	src/arch/alpha/faults.hh	/^    FaultVect vect() {return _vect;}$/;"	f	class:AlphaISA::DtbAcvFault
vect	src/arch/alpha/faults.hh	/^    FaultVect vect() {return _vect;}$/;"	f	class:AlphaISA::DtbAlignmentFault
vect	src/arch/alpha/faults.hh	/^    FaultVect vect() {return _vect;}$/;"	f	class:AlphaISA::DtbPageFault
vect	src/arch/alpha/faults.hh	/^    FaultVect vect() {return _vect;}$/;"	f	class:AlphaISA::FloatEnableFault
vect	src/arch/alpha/faults.hh	/^    FaultVect vect() {return _vect;}$/;"	f	class:AlphaISA::IntegerOverflowFault
vect	src/arch/alpha/faults.hh	/^    FaultVect vect() {return _vect;}$/;"	f	class:AlphaISA::InterruptFault
vect	src/arch/alpha/faults.hh	/^    FaultVect vect() {return _vect;}$/;"	f	class:AlphaISA::ItbAcvFault
vect	src/arch/alpha/faults.hh	/^    FaultVect vect() {return _vect;}$/;"	f	class:AlphaISA::ItbPageFault
vect	src/arch/alpha/faults.hh	/^    FaultVect vect() {return _vect;}$/;"	f	class:AlphaISA::MachineCheckFault
vect	src/arch/alpha/faults.hh	/^    FaultVect vect() {return _vect;}$/;"	f	class:AlphaISA::NDtbMissFault
vect	src/arch/alpha/faults.hh	/^    FaultVect vect() {return _vect;}$/;"	f	class:AlphaISA::PDtbMissFault
vect	src/arch/alpha/faults.hh	/^    FaultVect vect() {return _vect;}$/;"	f	class:AlphaISA::PalFault
vect	src/arch/alpha/faults.hh	/^    FaultVect vect() {return _vect;}$/;"	f	class:AlphaISA::ResetFault
vect	src/arch/alpha/faults.hh	/^    FaultVect vect() {return _vect;}$/;"	f	class:AlphaISA::UnimplementedOpcodeFault
vect	src/arch/mips/faults.hh	/^    vect(ThreadContext *tc) const$/;"	f	class:MipsISA::MipsFaultBase
vector	src/arch/x86/faults.hh	/^        uint8_t vector;$/;"	m	class:X86ISA::X86FaultBase
vector	src/arch/x86/interrupts.hh	/^        Bitfield<7, 0> vector;$/;"	m	class:X86ISA::Interrupts
vector	src/arch/x86/intmessage.hh	/^        Bitfield<15, 8> vector;$/;"	m	namespace:X86ISA
vector	src/arch/x86/regs/apic.hh	/^        Bitfield<7, 0> vector;$/;"	m	namespace:X86ISA
vector	src/dev/sparc/iob.hh	/^        int vector;$/;"	m	struct:Iob::IntMan
vector	src/dev/x86/i82094aa.hh	/^        Bitfield<7, 0> vector;$/;"	m	class:X86ISA::I82094AA
vector	src/doxygen/stl.hh	/^template <class T> class vector {$/;"	c	namespace:std
vectorOffset	src/dev/x86/i8259.hh	/^    uint8_t vectorOffset;$/;"	m	class:X86ISA::I8259
veic	src/arch/mips/pra_constants.hh	/^    Bitfield<6>  veic;$/;"	m	namespace:MipsISA
vendor	src/arch/x86/bios/SMBios.py	/^    vendor = Param.String("", "vendor name string")$/;"	v	class:X86SMBiosBiosInformation
vendor	src/arch/x86/bios/smbios.hh	/^    uint8_t vendor;$/;"	m	class:X86ISA::SMBios::BiosInformation
vendor	src/dev/pcireg.h	/^        uint16_t vendor;$/;"	m	struct:PCIConfig::__anon80
vendorString	src/arch/x86/cpuid.cc	/^    static const char vendorString[vendorStringSize] = "M5 Simulator";$/;"	m	namespace:X86ISA	file:
vendorStringSize	src/arch/x86/cpuid.cc	/^    static const int vendorStringSize = 13;$/;"	m	namespace:X86ISA	file:
ver	src/dev/pcireg.h	/^        Bitfield<3,0>   ver;$/;"	m	struct:PXCAP
verbosity	src/mem/packet.hh	/^        const int verbosity;$/;"	m	class:Packet::PrintReqState
verify	src/cpu/checker/cpu_impl.hh	/^Checker<Impl>::verify(DynInstPtr &completed_inst)$/;"	f	class:Checker
verify	src/python/m5/params.py	/^    def verify(self):$/;"	m	class:IpNetmask
verify	src/python/m5/params.py	/^    def verify(self):$/;"	m	class:IpWithPort
verifyIp	src/python/m5/params.py	/^    def verifyIp(self):$/;"	m	class:IpAddress
verifyMemoryMode	src/cpu/base.hh	/^    virtual void verifyMemoryMode() const { };$/;"	f	class:BaseCPU
verifyMemoryMode	src/cpu/inorder/cpu.cc	/^InOrderCPU::verifyMemoryMode() const$/;"	f	class:InOrderCPU
verifyMemoryMode	src/cpu/kvm/base.cc	/^BaseKvmCPU::verifyMemoryMode() const$/;"	f	class:BaseKvmCPU
verifyMemoryMode	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::verifyMemoryMode() const$/;"	f	class:FullO3CPU
verifyMemoryMode	src/cpu/simple/atomic.cc	/^AtomicSimpleCPU::verifyMemoryMode() const$/;"	f	class:AtomicSimpleCPU
verifyMemoryMode	src/cpu/simple/timing.cc	/^TimingSimpleCPU::verifyMemoryMode() const$/;"	f	class:TimingSimpleCPU
version	src/arch/x86/bios/IntelMP.py	/^    version = Param.UInt8(0, 'bits 0-7 of the version register')$/;"	v	class:X86IntelMPIOAPIC
version	src/arch/x86/bios/SMBios.py	/^    version = Param.String("", "version string")$/;"	v	class:X86SMBiosBiosInformation
version	src/arch/x86/bios/intelmp.hh	/^    uint8_t version;$/;"	m	class:X86ISA::IntelMP::IOAPIC
version	src/arch/x86/bios/smbios.hh	/^    uint8_t version;$/;"	m	class:X86ISA::SMBios::BiosInformation
version	src/base/cp_annotate.hh	/^        uint64_t version;$/;"	m	struct:CPA::AnnotateHeader
version	src/base/inet.hh	/^    uint8_t  version() const { return ip_v; }$/;"	f	struct:Net::IpHdr
version	src/base/inet.hh	/^    uint8_t version() const { return ip6_vfc; }$/;"	f	struct:Net::Ip6Hdr
version	src/cpu/m5legion_interface.h	/^    uint32_t version;$/;"	m	struct:__anon55
version	src/dev/alpha/access.h	/^    uint32_t    version;                \/\/ 04:$/;"	m	struct:AlphaAccess
version	src/dev/arm/hdlcd.hh	/^    VersionReg version;             \/**< Version register *\/$/;"	m	class:HDLcd
version	src/dev/mips/access.h	/^    uint32_t    version;                \/\/ 08:$/;"	m	struct:MipsAccess
version	src/kern/linux/linux.hh	/^        char version[_SYS_NMLN];        \/\/!< OS version.$/;"	m	struct:Linux::utsname
version	src/kern/operatingsystem.hh	/^        char version[_SYS_NMLN];        \/\/!< OS version.$/;"	m	struct:OperatingSystem::__anon88
version	src/kern/solaris/solaris.hh	/^        char version[_SYS_NMLN];        \/\/!< OS version.$/;"	m	struct:Solaris::utsname
version	src/kern/tru64/tru64.hh	/^        char version[_SYS_NMLN];        \/\/!< OS version.$/;"	m	struct:Tru64::utsname
version	src/kern/tru64/tru64.hh	/^        int version;    \/\/!< version$/;"	m	struct:Tru64::nxm_thread_attr
version	src/mem/ruby/slicc_interface/Controller.py	/^    version = Param.Int("")$/;"	v	class:RubyController
version	src/mem/ruby/system/DirectoryMemory.py	/^    version = Param.Int(0, "")$/;"	v	class:RubyDirectoryMemory
version	src/mem/ruby/system/MemoryControl.py	/^    version = Param.Int("");$/;"	v	class:MemoryControl
version	src/mem/ruby/system/RubyMemoryControl.py	/^    version = Param.Int("");$/;"	v	class:RubyMemoryControl
version	src/mem/ruby/system/Sequencer.py	/^    version = Param.Int(0, "")$/;"	v	class:RubyPort
version	src/mem/slicc/main.py	/^version="%prog v0.4"$/;"	v
version	src/python/m5/main.py	/^version="%prog 2.0"$/;"	v
version_major	src/dev/arm/hdlcd.hh	/^        Bitfield<15,8>  version_major;$/;"	m	class:HDLcd
version_major	src/dev/etherdump.cc	/^    uint16_t version_major;$/;"	m	struct:pcap_file_header	file:
version_minor	src/dev/arm/hdlcd.hh	/^        Bitfield<7,0>   version_minor;$/;"	m	class:HDLcd
version_minor	src/dev/etherdump.cc	/^    uint16_t version_minor;$/;"	m	struct:pcap_file_header	file:
vf	src/arch/arm/miscregs.hh	/^        Bitfield<6>      vf;$/;"	m	namespace:ArmISA
vfork	src/kern/linux/linux_syscalls.hh	/^    vfork = 264,$/;"	e	enum:SystemCalls::__anon87
vfork	src/kern/tru64/tru64_syscalls.hh	/^        vfork = 66,$/;"	e	enum:SystemCalls::__anon102
vfp	src/dev/arm/pl111.hh	/^        Bitfield<23,16> vfp;$/;"	m	class:Pl111
vfpExceptionTrapping	src/arch/arm/miscregs.hh	/^        Bitfield<15, 12> vfpExceptionTrapping;$/;"	m	namespace:ArmISA
vfpFlushToZero	src/arch/arm/insts/vfp.hh	/^vfpFlushToZero(FPSCR &fpscr, fpType &op)$/;"	f	namespace:ArmISA
vfpFlushToZero	src/arch/arm/insts/vfp.hh	/^vfpFlushToZero(FPSCR &fpscr, fpType &op1, fpType &op2)$/;"	f	namespace:ArmISA
vfpFpToFixed	src/arch/arm/insts/vfp.hh	/^vfpFpToFixed(T val, bool isSigned, uint8_t width, uint8_t imm, bool$/;"	f	namespace:ArmISA
vfpHalfPrecision	src/arch/arm/miscregs.hh	/^        Bitfield<27, 24> vfpHalfPrecision;$/;"	m	namespace:ArmISA
vfpNeon64Enabled	src/arch/arm/utility.hh	/^vfpNeon64Enabled(CPACR cpacr, ExceptionLevel el)$/;"	f	namespace:ArmISA
vfpNeonEnabled	src/arch/arm/utility.cc	/^vfpNeonEnabled(uint32_t &seq, HCPTR hcptr, NSACR nsacr, CPACR cpacr, CPSR cpsr,$/;"	f	namespace:ArmISA
vfpSFixedToFpD	src/arch/arm/insts/vfp.cc	/^vfpSFixedToFpD(bool flush, bool defaultNan,$/;"	f	namespace:ArmISA
vfpSFixedToFpS	src/arch/arm/insts/vfp.cc	/^vfpSFixedToFpS(bool flush, bool defaultNan,$/;"	f	namespace:ArmISA
vfpUFixedToFpD	src/arch/arm/insts/vfp.cc	/^vfpUFixedToFpD(bool flush, bool defaultNan,$/;"	f	namespace:ArmISA
vfpUFixedToFpS	src/arch/arm/insts/vfp.cc	/^vfpUFixedToFpS(bool flush, bool defaultNan,$/;"	f	namespace:ArmISA
vfp_modified_imm	src/arch/arm/insts/pred_inst.hh	/^vfp_modified_imm(uint8_t data, bool wide)$/;"	f	namespace:ArmISA
vgettimeofdayOffset	src/arch/x86/process.hh	/^            Addr vgettimeofdayOffset;$/;"	m	class:X86ISA::X86_64LiveProcess::VSyscallPage
vgic	src/dev/arm/RealView.py	/^    vgic   = VGic(vcpu_addr=0x2c006000, hv_addr=0x2c004000, ppint=25)$/;"	v	class:VExpress_EMM
vhangup	src/kern/linux/linux_syscalls.hh	/^    vhangup = 265,$/;"	e	enum:SystemCalls::__anon87
vi	src/arch/arm/miscregs.hh	/^        Bitfield<7>      vi;$/;"	m	namespace:ArmISA
vi	src/arch/mips/pra_constants.hh	/^    Bitfield<3>      vi;$/;"	m	namespace:MipsISA
videoHeight	src/base/vnc/vncinput.hh	/^    uint16_t videoHeight() const { return _videoHeight; }$/;"	f	class:VncInput
videoMode	src/base/vnc/vncinput.hh	/^    VideoConvert::Mode videoMode;$/;"	m	class:VncInput
videoWidth	src/base/vnc/vncinput.hh	/^    uint16_t videoWidth() const { return _videoWidth; }$/;"	f	class:VncInput
vif	src/arch/x86/regs/misc.hh	/^        Bitfield<19> vif; \/\/ Virtual Interrupt Flag$/;"	m	namespace:X86ISA
vint	src/arch/mips/pra_constants.hh	/^    Bitfield<5>  vint;$/;"	m	namespace:MipsISA
violation	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::violation(DynInstPtr &store,$/;"	f	class:InstructionQueue
violation	src/cpu/o3/lsq.hh	/^    bool violation(ThreadID tid)$/;"	f	class:LSQ
violation	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::violation()$/;"	f	class:LSQ
violation	src/cpu/o3/lsq_unit.hh	/^    bool violation() { return memDepViolator; }$/;"	f	class:LSQUnit
violation	src/cpu/o3/mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::violation(DynInstPtr &store_inst,$/;"	f	class:MemDepUnit
violation	src/cpu/o3/store_set.cc	/^StoreSet::violation(Addr store_PC, Addr load_PC)$/;"	f	class:StoreSet
violation	src/cpu/ozone/back_end.hh	/^        void violation(DynInstPtr &inst, DynInstPtr &violation) { }$/;"	f	class:BackEnd::InstQueue
violation	src/cpu/ozone/lsq_unit.hh	/^    bool violation() { return memDepViolator; }$/;"	f	class:OzoneLSQ
violation	src/cpu/ozone/lw_lsq.hh	/^    bool violation() { return memDepViolator; }$/;"	f	class:OzoneLWLSQ
vip	src/arch/x86/regs/misc.hh	/^        Bitfield<20> vip; \/\/ Virtual Interrupt Pending$/;"	m	namespace:X86ISA
virtProcNumber	src/cpu/inorder/inorder_dyn_inst.hh	/^    short virtProcNumber;$/;"	m	class:InOrderDynInst
virtProxy	src/arch/alpha/system.hh	/^    FSTranslatingPortProxy virtProxy;$/;"	m	class:AlphaSystem
virtProxy	src/cpu/thread_state.hh	/^    FSTranslatingPortProxy *virtProxy;$/;"	m	struct:ThreadState
virt_nets	src/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.py	/^    virt_nets = Param.Int(Parent.number_of_virtual_networks,$/;"	v	class:NetworkLink_d
virt_nets	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.py	/^    virt_nets = Param.UInt32(Parent.number_of_virtual_networks,$/;"	v	class:GarnetNetworkInterface_d
virt_nets	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.py	/^    virt_nets = Param.UInt32(Parent.number_of_virtual_networks,$/;"	v	class:GarnetRouter_d
virt_nets	src/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.py	/^    virt_nets = Param.Int(Parent.number_of_virtual_networks,$/;"	v	class:NetworkLink
virt_nets	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.py	/^    virt_nets = Param.Int(Parent.number_of_virtual_networks,$/;"	v	class:GarnetRouter
virt_nets	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.py	/^    virt_nets = Param.UInt32(Parent.number_of_virtual_networks,$/;"	v	class:GarnetNetworkInterface
virt_nets	src/mem/ruby/network/simple/SimpleNetwork.py	/^    virt_nets = Param.Int(Parent.number_of_virtual_networks,$/;"	v	class:Switch
virtualDisplayBuffer	src/dev/arm/hdlcd.hh	/^    uint8_t *virtualDisplayBuffer;$/;"	m	class:HDLcd
virtualRegs	src/dev/sinic.hh	/^    VirtualRegs virtualRegs;$/;"	m	class:Sinic::Device
virtual_addr	src/dev/Ethernet.py	/^    virtual_addr = Param.Bool(False, "Virtual addressing")$/;"	v	class:Sinic
virtual_count	src/dev/Ethernet.py	/^    virtual_count = Param.UInt32(1, "Virtualized SINIC")$/;"	v	class:Sinic
virtvalid	src/arch/arm/vtophys.cc	/^ArmISA::virtvalid(ThreadContext *tc, Addr vaddr)$/;"	f	class:ArmISA
visit	src/base/statistics.hh	/^    visit(Output &visitor)$/;"	f	class:Stats::InfoProxy
visit	src/base/statistics.hh	/^    void visit(Output &visitor) { visitor.visit(*this); }$/;"	f	class:Stats::ProxyInfo
visit	src/base/stats/text.cc	/^Text::visit(const DistInfo &info)$/;"	f	class:Stats::Text
visit	src/base/stats/text.cc	/^Text::visit(const FormulaInfo &info)$/;"	f	class:Stats::Text
visit	src/base/stats/text.cc	/^Text::visit(const ScalarInfo &info)$/;"	f	class:Stats::Text
visit	src/base/stats/text.cc	/^Text::visit(const SparseHistInfo &info)$/;"	f	class:Stats::Text
visit	src/base/stats/text.cc	/^Text::visit(const Vector2dInfo &info)$/;"	f	class:Stats::Text
visit	src/base/stats/text.cc	/^Text::visit(const VectorDistInfo &info)$/;"	f	class:Stats::Text
visit	src/base/stats/text.cc	/^Text::visit(const VectorInfo &info)$/;"	f	class:Stats::Text
visitor	src/mem/cache/blk.hh	/^    visitorPtr visitor;$/;"	m	class:CacheBlkVisitorWrapper
visitorPtr	src/mem/cache/blk.hh	/^    typedef bool (T::*visitorPtr)(BlkType &blk);$/;"	t	class:CacheBlkVisitorWrapper
vlan	src/dev/i8254xGBe_defs.hh	/^            uint16_t vlan;$/;"	m	struct:iGbReg::RxDesc::__anon70::__anon71
vlanId	src/base/inet.hh	/^    uint16_t vlanId() const {$/;"	f	struct:Net::EthHdr
vlan_tag	src/dev/i8254xGBe_defs.hh	/^            uint16_t vlan_tag;$/;"	m	struct:iGbReg::RxDesc::__anon70::__anon73
vle	src/dev/i8254xGBe_defs.hh	/^inline bool vle(TxDesc *d)  { assert(isLegacy(d) || isData(d)); return bits(d->d2, 30,30); }$/;"	f	namespace:iGbReg::TxdOp
vm	src/arch/arm/miscregs.hh	/^        Bitfield<0>      vm;$/;"	m	namespace:ArmISA
vm	src/arch/x86/regs/misc.hh	/^        Bitfield<17> vm; \/\/ Virtual-8086 Mode$/;"	m	namespace:X86ISA
vm	src/cpu/kvm/base.hh	/^    KvmVM &vm;$/;"	m	class:BaseKvmCPU
vm86	src/kern/linux/linux_syscalls.hh	/^    vm86 = 266,$/;"	e	enum:SystemCalls::__anon87
vm86old	src/kern/linux/linux_syscalls.hh	/^    vm86old = 267,$/;"	e	enum:SystemCalls::__anon87
vmFD	src/cpu/kvm/vm.hh	/^    const int vmFD;$/;"	m	class:KvmVM
vm_stack	src/kern/tru64/tru64.hh	/^    struct vm_stack {$/;"	s	class:Tru64
vme	src/arch/x86/regs/misc.hh	/^        Bitfield<0> vme; \/\/ Virtual-8086 Mode Extensions$/;"	m	namespace:X86ISA
vmid	src/arch/arm/pagetable.hh	/^    uint8_t vmid;           \/\/ Virtual machine Identifier$/;"	m	struct:ArmISA::TlbEntry
vmid	src/arch/arm/table_walker.hh	/^        uint8_t vmid;$/;"	m	class:ArmISA::TableWalker::WalkerState
vmid	src/arch/arm/tlb.hh	/^    uint8_t vmid;$/;"	m	class:ArmISA::TLB
vnc	src/dev/arm/RealView.py	/^    vnc   = Param.VncInput(Parent.any, "Vnc server for remote frame buffer display")$/;"	v	class:Pl111
vnc	src/dev/arm/RealView.py	/^    vnc = Param.VncInput(Parent.any, "Vnc server for remote frame buffer "$/;"	v	class:HDLcd
vnc	src/dev/arm/RealView.py	/^    vnc = Param.VncInput(Parent.any, "Vnc server for remote frame buffer display")$/;"	v	class:Pl050
vnc	src/dev/arm/hdlcd.hh	/^    VncInput *vnc;$/;"	m	class:HDLcd
vnc	src/dev/arm/kmi.hh	/^    VncInput *vnc;$/;"	m	class:Pl050
vnc	src/dev/arm/pl111.hh	/^    VncInput *vnc;$/;"	m	class:Pl111
vncVersion	src/base/vnc/vncserver.hh	/^    const char* vncVersion() const$/;"	f	class:VncServer
vncserver	src/base/vnc/vncserver.hh	/^        VncServer *vncserver;$/;"	m	class:VncServer::DataEvent
vncserver	src/base/vnc/vncserver.hh	/^        VncServer *vncserver;$/;"	m	class:VncServer::ListenEvent
vnet	src/mem/ruby/slicc_interface/NetworkMessage.hh	/^    int vnet;$/;"	m	class:NetworkMessage
voltage	src/sim/VoltageDomain.py	/^    voltage = Param.Voltage('1V', "Operational voltage")$/;"	v	class:VoltageDomain
voltage	src/sim/clock_domain.cc	/^ClockDomain::voltage() const$/;"	f	class:ClockDomain
voltage	src/sim/voltage_domain.cc	/^VoltageDomain::voltage(double voltage)$/;"	f	class:VoltageDomain
voltage	src/sim/voltage_domain.hh	/^    inline double voltage() const { return _voltage; }$/;"	f	class:VoltageDomain
voltageDomain	src/sim/clock_domain.hh	/^    inline VoltageDomain *voltageDomain() const { return _voltageDomain; }$/;"	f	class:ClockDomain
voltage_domain	src/sim/ClockDomain.py	/^    voltage_domain = Param.VoltageDomain("Voltage domain")$/;"	v	class:SrcClockDomain
vpa	src/arch/mips/mt_constants.hh	/^    Bitfield<0>      vpa;$/;"	m	namespace:MipsISA
vpc	src/arch/mips/mt_constants.hh	/^    Bitfield<1> vpc;$/;"	m	namespace:MipsISA
vpe	src/cpu/inorder/cpu.hh	/^        unsigned vpe;$/;"	m	class:InOrderCPU::CPUEvent
vpn	src/arch/alpha/pagetable.hh	/^    Addr vpn() const { return (addr & ImplMask) >> PageShift; }$/;"	f	struct:AlphaISA::VAddr
vpn	src/arch/arm/pagetable.hh	/^    Addr vpn;               \/\/ Virtual Page Number$/;"	m	struct:ArmISA::TlbEntry
vpn	src/arch/mips/faults.hh	/^    Addr vpn;$/;"	m	class:MipsISA::TlbFault
vpn	src/arch/power/pagetable.hh	/^    vpn() const$/;"	f	struct:PowerISA::VAddr
vpn2	src/arch/mips/pra_constants.hh	/^    Bitfield<39, 13> vpn2;$/;"	m	namespace:MipsISA
vpn2x	src/arch/mips/pra_constants.hh	/^    Bitfield<12, 11> vpn2x;$/;"	m	namespace:MipsISA
vram	src/dev/arm/RealView.py	/^    vram           = SimpleMemory(range = AddrRange(0x18000000, size='32MB'),$/;"	v	class:VExpress_EMM
vrcr	src/dev/ns_gige.hh	/^    uint32_t    vrcr;$/;"	m	struct:dp_regs
vresult	src/base/statistics.hh	/^    VResult vresult;$/;"	m	class:Stats::ConstNode
vresult	src/base/statistics.hh	/^    VResult vresult;$/;"	m	class:Stats::ConstVectorNode
vresult	src/base/statistics.hh	/^    mutable VResult vresult;$/;"	m	class:Stats::BinaryNode
vresult	src/base/statistics.hh	/^    mutable VResult vresult;$/;"	m	class:Stats::ScalarProxyNode
vresult	src/base/statistics.hh	/^    mutable VResult vresult;$/;"	m	class:Stats::ScalarStatNode
vresult	src/base/statistics.hh	/^    mutable VResult vresult;$/;"	m	class:Stats::SumNode
vresult	src/base/statistics.hh	/^    mutable VResult vresult;$/;"	m	class:Stats::UnaryNode
vs	src/arch/mips/pra_constants.hh	/^    Bitfield<9,  5>  vs;$/;"	m	namespace:MipsISA
vs	src/dev/pcireg.h	/^        Bitfield<2,0>   vs;$/;"	m	struct:PMCAP
vse	src/arch/arm/miscregs.hh	/^        Bitfield<8>      vse;   \/\/ AArch64$/;"	m	namespace:ArmISA
vserver	src/kern/linux/linux_syscalls.hh	/^    vserver = 268,$/;"	e	enum:SystemCalls::__anon87
vstamp	src/arch/alpha/aout_machdep.h	/^    uint16_t    vstamp;         \/\/\/< version stamp?$/;"	m	struct:aout_exechdr
vstamp	src/base/loader/coff_sym.h	/^    coff_short  vstamp;         \/* version stamp *\/$/;"	m	struct:ecoff_symhdr
vstamp	src/base/loader/exec_ecoff.h	/^        coff_ushort vstamp;$/;"	m	struct:ecoff_aouthdr
vsw	src/dev/arm/pl111.hh	/^        Bitfield<15,10> vsw;$/;"	m	class:Pl111
vsync	src/dev/arm/hdlcd.hh	/^        Bitfield<2> vsync;$/;"	m	class:HDLcd
vsync_polarity	src/dev/arm/hdlcd.hh	/^        Bitfield<0>    vsync_polarity;$/;"	m	class:HDLcd
vsyscallOffset	src/arch/x86/process.hh	/^            Addr vsyscallOffset;$/;"	m	class:X86ISA::I386LiveProcess::VSyscallPage
vsyscallPage	src/arch/x86/process.hh	/^        VSyscallPage vsyscallPage;$/;"	m	class:X86ISA::I386LiveProcess
vsyscallPage	src/arch/x86/process.hh	/^        VSyscallPage vsyscallPage;$/;"	m	class:X86ISA::X86_64LiveProcess
vsysexitOffset	src/arch/x86/process.hh	/^            Addr vsysexitOffset;$/;"	m	class:X86ISA::I386LiveProcess::VSyscallPage
vtcr	src/arch/arm/table_walker.hh	/^        VTCR_t vtcr;$/;"	m	class:ArmISA::TableWalker::WalkerState
vtcr	src/dev/ns_gige.hh	/^    uint32_t    vtcr;$/;"	m	struct:dp_regs
vtimeOffset	src/arch/x86/process.hh	/^            Addr vtimeOffset;$/;"	m	class:X86ISA::X86_64LiveProcess::VSyscallPage
vtophys	src/arch/alpha/vtophys.cc	/^vtophys(Addr vaddr)$/;"	f	namespace:AlphaISA
vtophys	src/arch/alpha/vtophys.cc	/^vtophys(ThreadContext *tc, Addr addr)$/;"	f	namespace:AlphaISA
vtophys	src/arch/arm/vtophys.cc	/^ArmISA::vtophys(Addr vaddr)$/;"	f	class:ArmISA
vtophys	src/arch/arm/vtophys.cc	/^ArmISA::vtophys(ThreadContext *tc, Addr addr)$/;"	f	class:ArmISA
vtophys	src/arch/mips/vtophys.cc	/^MipsISA::vtophys(Addr vaddr)$/;"	f	class:MipsISA
vtophys	src/arch/mips/vtophys.cc	/^MipsISA::vtophys(ThreadContext *tc, Addr addr)$/;"	f	class:MipsISA
vtophys	src/arch/power/vtophys.cc	/^PowerISA::vtophys(Addr vaddr)$/;"	f	class:PowerISA
vtophys	src/arch/power/vtophys.cc	/^PowerISA::vtophys(ThreadContext *tc, Addr addr)$/;"	f	class:PowerISA
vtophys	src/arch/sparc/vtophys.cc	/^vtophys(Addr vaddr)$/;"	f	namespace:SparcISA
vtophys	src/arch/sparc/vtophys.cc	/^vtophys(ThreadContext *tc, Addr addr)$/;"	f	namespace:SparcISA
vtophys	src/arch/x86/vtophys.cc	/^    vtophys(Addr vaddr)$/;"	f	namespace:X86ISA
vtophys	src/arch/x86/vtophys.cc	/^    vtophys(ThreadContext *tc, Addr vaddr)$/;"	f	namespace:X86ISA
vx	src/arch/power/miscregs.hh	/^    Bitfield<29> vx;$/;"	m	namespace:PowerISA
vxcvi	src/arch/power/miscregs.hh	/^    Bitfield<9> vxcvi;$/;"	m	namespace:PowerISA
vxidi	src/arch/power/miscregs.hh	/^    Bitfield<22> vxidi;$/;"	m	namespace:PowerISA
vximz	src/arch/power/miscregs.hh	/^    Bitfield<20> vximz;$/;"	m	namespace:PowerISA
vxisi	src/arch/power/miscregs.hh	/^    Bitfield<23> vxisi;$/;"	m	namespace:PowerISA
vxsnan	src/arch/power/miscregs.hh	/^    Bitfield<24> vxsnan;$/;"	m	namespace:PowerISA
vxsqrt	src/arch/power/miscregs.hh	/^    Bitfield<10> vxsqrt;$/;"	m	namespace:PowerISA
vxvc	src/arch/power/miscregs.hh	/^    Bitfield<19> vxvc;$/;"	m	namespace:PowerISA
vxzdz	src/arch/power/miscregs.hh	/^    Bitfield<21> vxzdz;$/;"	m	namespace:PowerISA
w	src/arch/mips/pra_constants.hh	/^    Bitfield<0>      w;$/;"	m	namespace:MipsISA
w	src/arch/mips/pra_constants.hh	/^    Bitfield<0>     w;$/;"	m	namespace:MipsISA
w	src/arch/mips/pra_constants.hh	/^    Bitfield<30>    w;$/;"	m	namespace:MipsISA
w	src/arch/x86/pagetable_walker.cc	/^    Bitfield<1> w;$/;"	m	namespace:X86ISA	file:
w	src/arch/x86/regs/misc.hh	/^            Bitfield<41> w; \/\/ Writable$/;"	m	namespace:X86ISA
w	src/arch/x86/types.hh	/^        Bitfield<3> w;$/;"	m	namespace:X86ISA
wait	src/base/barrier.hh	/^    wait()$/;"	f	class:Barrier
wait	src/kern/tru64/tru64.hh	/^        uint64_t wait;          \/\/!< Wait time$/;"	m	struct:Tru64::tbl_sysinfo
wait4	src/kern/linux/linux_syscalls.hh	/^    wait4 = 269,$/;"	e	enum:SystemCalls::__anon87
wait4	src/kern/tru64/tru64_syscalls.hh	/^        wait4 = 7,$/;"	e	enum:SystemCalls::__anon102
waitChan	src/sim/process.hh	/^        Addr waitChan;$/;"	m	struct:Process::WaitRec
waitList	src/sim/process.hh	/^    std::list<WaitRec> waitList;$/;"	m	class:Process
waitid	src/kern/tru64/tru64_syscalls.hh	/^        waitid = 236,$/;"	e	enum:SystemCalls::__anon102
waitingContext	src/sim/process.hh	/^        ThreadContext *waitingContext;$/;"	m	struct:Process::WaitRec
waitingForLayer	src/mem/bus.hh	/^        std::deque<SrcType*> waitingForLayer;$/;"	m	class:BaseBus::Layer
waitingForPeer	src/mem/bus.hh	/^        SrcType* waitingForPeer;$/;"	m	class:BaseBus::Layer
waitingInsts	src/cpu/ozone/lw_back_end.hh	/^    int waitingInsts;$/;"	m	class:LWBackEnd
waitingList	src/cpu/ozone/lw_back_end.hh	/^    std::list<DynInstPtr> waitingList;$/;"	m	class:LWBackEnd
waitingMemOps	src/cpu/ozone/lw_back_end.hh	/^    std::set<InstSeqNum> waitingMemOps;$/;"	m	class:LWBackEnd
waitingOnRetry	src/mem/packet_queue.hh	/^    bool waitingOnRetry;$/;"	m	class:PacketQueue
waitpid	src/kern/linux/linux_syscalls.hh	/^    waitpid = 270,$/;"	e	enum:SystemCalls::__anon87
wakeCPU	src/cpu/inorder/cpu.cc	/^InOrderCPU::wakeCPU()$/;"	f	class:InOrderCPU
wakeCPU	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::wakeCPU()$/;"	f	class:FullO3CPU
wakeCPU	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::wakeCPU()$/;"	f	class:DefaultIEW
wakeCPU	src/sim/pseudo_inst.cc	/^wakeCPU(ThreadContext *tc, uint64_t cpuid)$/;"	f	namespace:PseudoInst
wakeDependents	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::wakeDependents(DynInstPtr &inst)$/;"	f	class:DefaultIEW
wakeDependents	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::wakeDependents(DynInstPtr &completed_inst)$/;"	f	class:InstructionQueue
wakeDependents	src/cpu/o3/mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::wakeDependents(DynInstPtr &inst)$/;"	f	class:MemDepUnit
wakeDependents	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::InstQueue::wakeDependents(DynInstPtr &inst)$/;"	f	class:BackEnd::InstQueue
wakeDependents	src/cpu/ozone/dyn_inst_impl.hh	/^OzoneDynInst<Impl>::wakeDependents()$/;"	f	class:OzoneDynInst
wakeDependents	src/cpu/ozone/inst_queue_impl.hh	/^InstQueue<Impl>::wakeDependents(DynInstPtr &completed_inst)$/;"	f	class:InstQueue
wakeDependents	src/cpu/ozone/lw_back_end_impl.hh	/^LWBackEnd<Impl>::wakeDependents(DynInstPtr &inst, bool memory_deps)$/;"	f	class:LWBackEnd
wakeFromQuiesce	src/cpu/o3/fetch_impl.hh	/^DefaultFetch<Impl>::wakeFromQuiesce()$/;"	f	class:DefaultFetch
wakeFromQuiesce	src/cpu/ozone/front_end_impl.hh	/^FrontEnd<Impl>::wakeFromQuiesce()$/;"	f	class:FrontEnd
wakeMemDependents	src/cpu/ozone/dyn_inst_impl.hh	/^OzoneDynInst<Impl>::wakeMemDependents()$/;"	f	class:OzoneDynInst
wakeUpAllBuffers	src/mem/ruby/slicc_interface/AbstractController.cc	/^AbstractController::wakeUpAllBuffers()$/;"	f	class:AbstractController
wakeUpAllBuffers	src/mem/ruby/slicc_interface/AbstractController.cc	/^AbstractController::wakeUpAllBuffers(Address addr)$/;"	f	class:AbstractController
wakeUpBuffers	src/mem/ruby/slicc_interface/AbstractController.cc	/^AbstractController::wakeUpBuffers(Address addr)$/;"	f	class:AbstractController
wakeup	src/arch/null/cpu_dummy.hh	/^    static void wakeup() { ; }$/;"	f	class:BaseCPU
wakeup	src/cpu/checker/cpu.hh	/^    void wakeup() { }$/;"	f	class:CheckerCPU
wakeup	src/cpu/inorder/cpu.cc	/^InOrderCPU::wakeup()$/;"	f	class:InOrderCPU
wakeup	src/cpu/kvm/base.cc	/^BaseKvmCPU::wakeup()$/;"	f	class:BaseKvmCPU
wakeup	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::wakeup()$/;"	f	class:FullO3CPU
wakeup	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::wakeup()$/;"	f	class:OzoneCPU
wakeup	src/cpu/simple/base.cc	/^BaseSimpleCPU::wakeup()$/;"	f	class:BaseSimpleCPU
wakeup	src/cpu/testers/directedtest/RubyDirectedTester.cc	/^RubyDirectedTester::wakeup()$/;"	f	class:RubyDirectedTester
wakeup	src/cpu/testers/rubytest/RubyTester.cc	/^RubyTester::wakeup()$/;"	f	class:RubyTester
wakeup	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.cc	/^InputUnit_d::wakeup()$/;"	f	class:InputUnit_d
wakeup	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.cc	/^NetworkInterface_d::wakeup()$/;"	f	class:NetworkInterface_d
wakeup	src/mem/ruby/network/garnet/fixed-pipeline/NetworkLink_d.cc	/^NetworkLink_d::wakeup()$/;"	f	class:NetworkLink_d
wakeup	src/mem/ruby/network/garnet/fixed-pipeline/OutputUnit_d.cc	/^OutputUnit_d::wakeup()$/;"	f	class:OutputUnit_d
wakeup	src/mem/ruby/network/garnet/fixed-pipeline/SWallocator_d.cc	/^SWallocator_d::wakeup()$/;"	f	class:SWallocator_d
wakeup	src/mem/ruby/network/garnet/fixed-pipeline/Switch_d.cc	/^Switch_d::wakeup()$/;"	f	class:Switch_d
wakeup	src/mem/ruby/network/garnet/fixed-pipeline/VCallocator_d.cc	/^VCallocator_d::wakeup()$/;"	f	class:VCallocator_d
wakeup	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.cc	/^NetworkInterface::wakeup()$/;"	f	class:NetworkInterface
wakeup	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.cc	/^NetworkLink::wakeup()$/;"	f	class:NetworkLink
wakeup	src/mem/ruby/network/garnet/flexible-pipeline/Router.cc	/^Router::wakeup()$/;"	f	class:Router
wakeup	src/mem/ruby/network/garnet/flexible-pipeline/VCarbiter.cc	/^VCarbiter::wakeup()$/;"	f	class:VCarbiter
wakeup	src/mem/ruby/network/simple/PerfectSwitch.cc	/^PerfectSwitch::wakeup()$/;"	f	class:PerfectSwitch
wakeup	src/mem/ruby/network/simple/Throttle.cc	/^Throttle::wakeup()$/;"	f	class:Throttle
wakeup	src/mem/ruby/system/RubyMemoryControl.cc	/^RubyMemoryControl::wakeup()$/;"	f	class:RubyMemoryControl
wakeup	src/mem/ruby/system/Sequencer.cc	/^Sequencer::wakeup()$/;"	f	class:Sequencer
wakeup	src/mem/ruby/system/WireBuffer.cc	/^WireBuffer::wakeup()$/;"	f	class:WireBuffer
wakeupEvents	src/cpu/kvm/perfevent.hh	/^    PerfKvmCounterConfig &wakeupEvents(uint32_t events) {$/;"	f	class:PerfKvmCounterConfig
wakeup_frequency	src/cpu/testers/rubytest/RubyTester.py	/^    wakeup_frequency = Param.Int(10, "number of cycles between wakeups")$/;"	v	class:RubyTester
walk	src/arch/arm/table_walker.cc	/^TableWalker::walk(RequestPtr _req, ThreadContext *_tc, uint16_t _asid,$/;"	f	class:TableWalker
walkTrickBoxCheck	src/arch/arm/tlb.cc	/^TLB::walkTrickBoxCheck(Addr pa, bool is_secure, Addr va, Addr sz, bool is_exec,$/;"	f	class:TLB
walker	src/arch/arm/ArmTLB.py	/^    walker = ArmStage2TableWalker()$/;"	v	class:ArmStage2TLB
walker	src/arch/arm/ArmTLB.py	/^    walker = Param.ArmTableWalker(ArmTableWalker(), "HW Table walker")$/;"	v	class:ArmTLB
walker	src/arch/x86/X86TLB.py	/^            X86PagetableWalker(), "page table walker")$/;"	v	class:X86TLB
walker	src/arch/x86/pagetable_walker.hh	/^            Walker *walker;$/;"	m	class:X86ISA::Walker::WalkerPort
walker	src/arch/x86/pagetable_walker.hh	/^            Walker *walker;$/;"	m	class:X86ISA::Walker::WalkerState
walker	src/arch/x86/tlb.hh	/^        Walker * walker;$/;"	m	class:X86ISA::TLB
want_hack	src/base/misc.cc	/^bool want_hack = true;$/;"	v
want_info	src/base/misc.cc	/^bool want_info = true;$/;"	v
warmedUp	src/mem/cache/tags/base.hh	/^    bool warmedUp;$/;"	m	class:BaseTags
warmupBound	src/mem/cache/tags/base.hh	/^    int warmupBound;$/;"	m	class:BaseTags
warmupCycle	src/mem/cache/tags/base.hh	/^    Stats::Scalar warmupCycle;$/;"	m	class:BaseTags
warn	src/base/misc.hh	/^#define warn(/;"	d
warn	src/python/m5/ticks.py	/^from m5.util import warn$/;"	i
warn	src/python/m5/util/__init__.py	/^def warn(fmt, *args):$/;"	f
warn	src/python/m5/util/dot_writer.py	/^from m5.util import warn$/;"	i
warnOnlyOnLoadError	src/cpu/CheckerCPU.py	/^    warnOnlyOnLoadError = Param.Bool(True,$/;"	v	class:CheckerCPU
warnOnlyOnLoadError	src/cpu/checker/cpu.hh	/^    bool warnOnlyOnLoadError;$/;"	m	class:CheckerCPU
warnOnlyOnLoadError	src/cpu/ozone/OzoneChecker.py	/^    warnOnlyOnLoadError = Param.Bool(False,$/;"	v	class:OzoneChecker
warn_access	src/dev/Device.py	/^    warn_access = Param.String("", "String to print when device is accessed")$/;"	v	class:IsaFake
warn_once	src/base/misc.hh	/^#define warn_once(/;"	d
warn_verbose	src/base/misc.cc	/^bool warn_verbose = false;$/;"	v
warning	src/mem/slicc/ast/AST.py	/^    def warning(self, message, *args):$/;"	m	class:AST
warning	src/mem/slicc/symbols/Symbol.py	/^    def warning(self, message, *args):$/;"	m	class:Symbol
warning	src/mem/slicc/util.py	/^    def warning(self, message, *args):$/;"	m	class:Location
wasCall	src/cpu/pred/bpred_unit.hh	/^        bool wasCall;$/;"	m	struct:BPredUnit::PredictorHistory
wasMicro	src/cpu/legiontrace.cc	/^static bool wasMicro = false;$/;"	v	file:
wasPrefetched	src/mem/cache/blk.hh	/^    bool wasPrefetched() const$/;"	f	class:CacheBlk
wasReturn	src/cpu/pred/bpred_unit.hh	/^        bool wasReturn;$/;"	m	struct:BPredUnit::PredictorHistory
wasStarted	src/arch/x86/pagetable_walker.cc	/^Walker::WalkerState::wasStarted()$/;"	f	class:X86ISA::Walker::WalkerState
watchdogAtZero	src/dev/arm/timer_cpulocal.cc	/^CpuLocalTimer::Timer::watchdogAtZero()$/;"	f	class:CpuLocalTimer::Timer
watchdogControl	src/dev/arm/timer_cpulocal.hh	/^        WatchdogCtrl watchdogControl;$/;"	m	class:CpuLocalTimer::Timer
watchdogDisableReg	src/dev/arm/timer_cpulocal.hh	/^        uint32_t watchdogDisableReg;$/;"	m	class:CpuLocalTimer::Timer
watchdogLoadValue	src/dev/arm/timer_cpulocal.hh	/^        uint32_t watchdogLoadValue;$/;"	m	class:CpuLocalTimer::Timer
watchdogMode	src/dev/arm/timer_cpulocal.hh	/^            Bitfield<3>   watchdogMode;$/;"	m	class:CpuLocalTimer::Timer
watchdogZeroEvent	src/dev/arm/timer_cpulocal.hh	/^        EventWrapper<Timer, &Timer::watchdogAtZero> watchdogZeroEvent;$/;"	m	class:CpuLocalTimer::Timer
watchdog_fake	src/dev/arm/RealView.py	/^    watchdog_fake  = AmbaFake(pio_addr=0x1C0F0000)$/;"	v	class:VExpress_EMM
watchdog_fake	src/dev/arm/RealView.py	/^    watchdog_fake = AmbaFake(pio_addr=0x10010000)$/;"	v	class:RealViewEB
watchdog_fake	src/dev/arm/RealView.py	/^    watchdog_fake = AmbaFake(pio_addr=0x10010000)$/;"	v	class:RealViewPBX
waterMark	src/dev/arm/pl111.hh	/^    int waterMark;$/;"	m	class:Pl111
watermark	src/dev/arm/pl111.hh	/^        Bitfield<16> watermark;$/;"	m	class:Pl111
wb	src/arch/arm/insts/macromem.hh	/^    bool wb, replicate;$/;"	m	class:ArmISA::VldSingleOp64
wb	src/arch/arm/insts/macromem.hh	/^    bool wb, replicate;$/;"	m	class:ArmISA::VstSingleOp64
wb	src/arch/arm/insts/macromem.hh	/^    bool wb;$/;"	m	class:ArmISA::VldMultOp64
wb	src/arch/arm/insts/macromem.hh	/^    bool wb;$/;"	m	class:ArmISA::VstMultOp64
wb	src/arch/arm/insts/mem.hh	/^    bool wb;$/;"	m	class:ArmISA::RfeOp
wb	src/arch/arm/insts/mem.hh	/^    bool wb;$/;"	m	class:ArmISA::SrsOp
wbAlignment	src/dev/i8254xGBe.hh	/^        Addr wbAlignment;$/;"	m	class:IGbE::DescCache
wbBuf	src/dev/i8254xGBe.hh	/^        T *wbBuf;$/;"	m	class:IGbE::DescCache
wbCompDelay	src/dev/i8254xGBe.hh	/^    Tick fetchCompDelay, wbCompDelay;$/;"	m	class:IGbE
wbComplete	src/dev/i8254xGBe.cc	/^IGbE::DescCache<T>::wbComplete()$/;"	f	class:IGbE::DescCache
wbCycle	src/cpu/o3/iew.hh	/^    unsigned wbCycle;$/;"	m	class:DefaultIEW
wbCycle	src/cpu/ozone/back_end.hh	/^    unsigned wbCycle;$/;"	m	class:BackEnd
wbCycle	src/cpu/ozone/lw_back_end.hh	/^    unsigned wbCycle;$/;"	m	class:LWBackEnd
wbDelay	src/dev/i8254xGBe.hh	/^    Tick fetchDelay, wbDelay;$/;"	m	class:IGbE
wbDelayEvent	src/dev/i8254xGBe.hh	/^        EventWrapper<DescCache, &DescCache::writeback1> wbDelayEvent;$/;"	m	class:IGbE::DescCache
wbDepth	src/cpu/o3/O3CPU.py	/^    wbDepth = Param.Unsigned(1, "Writeback depth")$/;"	v	class:DerivO3CPU
wbEvent	src/cpu/ozone/lsq_unit.hh	/^        Event *wbEvent;$/;"	m	class:OzoneLSQ::StoreCompletionEvent
wbEvent	src/dev/i8254xGBe.hh	/^        EventWrapper<DescCache, &DescCache::wbComplete> wbEvent;$/;"	m	class:IGbE::DescCache
wbFanout	src/cpu/o3/iew.hh	/^    Stats::Formula wbFanout;$/;"	m	class:DefaultIEW
wbFanout	src/cpu/ozone/lw_back_end.hh	/^    Stats::Formula wbFanout;$/;"	m	class:LWBackEnd
wbList	src/cpu/o3/iew.hh	/^    std::set<InstSeqNum> wbList;$/;"	m	class:DefaultIEW
wbMasterId	src/mem/request.hh	/^    static const MasterID wbMasterId = 0;$/;"	m	class:Request
wbMax	src/cpu/o3/iew.hh	/^    unsigned wbMax;$/;"	m	class:DefaultIEW
wbNumInst	src/cpu/o3/iew.hh	/^    unsigned wbNumInst;$/;"	m	class:DefaultIEW
wbNumInst	src/cpu/ozone/back_end.hh	/^    unsigned wbNumInst;$/;"	m	class:BackEnd
wbNumInst	src/cpu/ozone/lw_back_end.hh	/^    unsigned wbNumInst;$/;"	m	class:LWBackEnd
wbOut	src/dev/i8254xGBe.hh	/^        int wbOut;$/;"	m	class:IGbE::DescCache
wbOutstanding	src/cpu/o3/iew.hh	/^    int wbOutstanding;$/;"	m	class:DefaultIEW
wbPenalized	src/cpu/o3/iew.hh	/^    Stats::Vector wbPenalized;$/;"	m	class:DefaultIEW
wbPenalized	src/cpu/ozone/lw_back_end.hh	/^    Stats::Vector wbPenalized;$/;"	m	class:LWBackEnd
wbPenalizedRate	src/cpu/o3/iew.hh	/^    Stats::Formula wbPenalizedRate;$/;"	m	class:DefaultIEW
wbPenalizedRate	src/cpu/ozone/lw_back_end.hh	/^    Stats::Formula wbPenalizedRate;$/;"	m	class:LWBackEnd
wbRate	src/cpu/o3/iew.hh	/^    Stats::Formula wbRate;$/;"	m	class:DefaultIEW
wbRate	src/cpu/ozone/lw_back_end.hh	/^    Stats::Formula wbRate;$/;"	m	class:LWBackEnd
wbStatus	src/cpu/o3/iew.hh	/^    StageStatus wbStatus;$/;"	m	class:DefaultIEW
wbWidth	src/cpu/o3/O3CPU.py	/^    wbWidth = Param.Unsigned(8, "Writeback width")$/;"	v	class:DerivO3CPU
wbWidth	src/cpu/o3/iew.hh	/^    unsigned wbWidth;$/;"	m	class:DefaultIEW
wbWidth	src/cpu/ozone/back_end.hh	/^    int wbWidth;$/;"	m	class:BackEnd
wbWidth	src/cpu/ozone/lw_back_end.hh	/^    int wbWidth;$/;"	m	class:LWBackEnd
wbWidth	src/cpu/ozone/simple_params.hh	/^    int wbWidth;$/;"	m	class:SimpleParams
wb_comp_delay	src/dev/Ethernet.py	/^    wb_comp_delay = Param.Latency('10ns', "delay after desc wb occurs")$/;"	v	class:IGbE
wb_delay	src/dev/Ethernet.py	/^    wb_delay = Param.Latency('10ns', "delay before desc writeback occurs")$/;"	v	class:IGbE
wb_fanout	src/cpu/ozone/back_end.hh	/^    Stats::Formula wb_fanout;$/;"	m	class:BackEnd
wb_penalized	src/cpu/ozone/back_end.hh	/^    Stats::Vector wb_penalized;$/;"	m	class:BackEnd
wb_penalized_rate	src/cpu/ozone/back_end.hh	/^    Stats::Formula wb_penalized_rate;$/;"	m	class:BackEnd
wb_rate	src/cpu/ozone/back_end.hh	/^    Stats::Formula wb_rate;$/;"	m	class:BackEnd
wc	src/arch/x86/regs/misc.hh	/^        Bitfield<10> wc; \/\/ Write-Combining$/;"	m	namespace:X86ISA
wcsr	src/dev/ns_gige.hh	/^    uint32_t    wcsr;$/;"	m	struct:dp_regs
wday	src/dev/mc146818.hh	/^            uint8_t wday;$/;"	m	struct:MC146818::__anon78::__anon79
weakext	src/base/loader/coff_sym.h	/^    unsigned weakext:1; \/* symbol is weak external *\/$/;"	m	struct:ecoff_extsym
weight	src/mem/ruby/network/BasicLink.py	/^    weight = Param.Int(1, "used to restrict routing in shortest path analysis")$/;"	v	class:BasicLink
whami	src/arch/alpha/osfpal.hh	/^        whami = 0x3c,$/;"	e	enum:PAL::__anon3
when	src/sim/eventq.hh	/^    Tick when() const { return _when; }$/;"	f	class:Event
when	src/sim/global_event.hh	/^    Tick when() const$/;"	f	class:BaseGlobalEvent
when	src/sim/insttracer.hh	/^    Tick when;$/;"	m	class:Trace::InstRecord
whenCreated	src/sim/eventq.hh	/^    Tick whenCreated;   \/\/!< time created$/;"	m	class:Event
whenReady	src/mem/cache/blk.hh	/^    Tick whenReady;$/;"	m	class:CacheBlk
whenScheduled	src/sim/eventq.hh	/^    Tick whenScheduled; \/\/!< time scheduled$/;"	m	class:Event
wide	src/arch/arm/insts/vfp.hh	/^    bool wide;$/;"	m	class:ArmISA::VfpMacroOp
width	src/arch/arm/miscregs.hh	/^        Bitfield<4> width;      \/\/ AArch64$/;"	m	namespace:ArmISA
width	src/arch/arm/types.hh	/^        Bitfield<4> width;$/;"	m	namespace:ArmISA
width	src/base/bitmap.hh	/^    uint16_t width;$/;"	m	class:Bitmap
width	src/base/cprintf_formats.hh	/^    int width;$/;"	m	struct:cp::Format
width	src/base/loader/coff_sym.h	/^    coff_int    width;          \/* width for non-default sized struc fields *\/$/;"	m	union:__anon44
width	src/base/vnc/convert.hh	/^    int width;$/;"	m	class:VideoConvert
width	src/base/vnc/vncinput.hh	/^        uint16_t width;$/;"	m	struct:VncInput::FrameBufferUpdateReq
width	src/base/vnc/vncserver.hh	/^        uint16_t width;$/;"	m	struct:VncServer::FrameBufferRect
width	src/cpu/inorder/resource.hh	/^    int width;$/;"	m	class:Resource
width	src/cpu/ozone/OzoneCPU.py	/^    width = Param.Unsigned("Width")$/;"	v	class:DerivOzoneCPU
width	src/cpu/ozone/SimpleOzoneCPU.py	/^    width = Param.Unsigned("Width")$/;"	v	class:SimpleOzoneCPU
width	src/cpu/ozone/back_end.hh	/^        int width;$/;"	m	class:BackEnd::InstQueue
width	src/cpu/ozone/back_end.hh	/^    int width;$/;"	m	class:BackEnd
width	src/cpu/ozone/cpu.hh	/^        int width;$/;"	m	struct:OzoneCPU::TickEvent
width	src/cpu/ozone/front_end.hh	/^    int width;$/;"	m	class:FrontEnd
width	src/cpu/ozone/inorder_back_end.hh	/^    int width;$/;"	m	class:InorderBackEnd
width	src/cpu/ozone/lw_back_end.hh	/^    int width;$/;"	m	class:LWBackEnd
width	src/cpu/ozone/simple_params.hh	/^    unsigned width;$/;"	m	class:SimpleParams
width	src/cpu/simple/AtomicSimpleCPU.py	/^    width = Param.Int(1, "CPU width")$/;"	v	class:AtomicSimpleCPU
width	src/cpu/simple/atomic.hh	/^    const int width;$/;"	m	class:AtomicSimpleCPU
width	src/dev/arm/hdlcd.hh	/^    inline size_t width() const {$/;"	f	class:HDLcd
width	src/dev/arm/pl111.hh	/^    uint16_t width;$/;"	m	class:Pl111
width	src/mem/Bus.py	/^    width = Param.Unsigned(8, "bus width (bytes)")$/;"	v	class:BaseBus
width	src/mem/bus.hh	/^    const uint32_t width;$/;"	m	class:BaseBus
willChangePC	src/cpu/checker/cpu.hh	/^    bool willChangePC;$/;"	m	class:CheckerCPU
willWB	src/cpu/o3/lsq.hh	/^    bool willWB(ThreadID tid)$/;"	f	class:LSQ
willWB	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::willWB()$/;"	f	class:LSQ
willWB	src/cpu/o3/lsq_unit.hh	/^    bool willWB() { return storeQueue[storeWBIdx].canWB &&$/;"	f	class:LSQUnit
willWB	src/cpu/ozone/lsq_unit.hh	/^    bool willWB() { return storeQueue[storeWBIdx].canWB &&$/;"	f	class:OzoneLSQ
willWB	src/cpu/ozone/lw_lsq.hh	/^    bool willWB() { return storeQueue.back().canWB &&$/;"	f	class:OzoneLWLSQ
win	src/base/inet.hh	/^    uint16_t win() const { return ntohs(th_win); }$/;"	f	struct:Net::TcpHdr
wire	src/cpu/timebuf.hh	/^        wire()$/;"	f	class:TimeBuffer::wire
wire	src/cpu/timebuf.hh	/^        wire(TimeBuffer<T> *buf, int i)$/;"	f	class:TimeBuffer::wire
wire	src/cpu/timebuf.hh	/^        wire(const wire &i)$/;"	f	class:TimeBuffer::wire
wire	src/cpu/timebuf.hh	/^    class wire$/;"	c	class:TimeBuffer
wired	src/arch/mips/pra_constants.hh	/^    Bitfield<30, 0> wired;$/;"	m	namespace:MipsISA
wnr	src/arch/arm/miscregs.hh	/^        Bitfield<11> wnr;$/;"	m	namespace:ArmISA
workItemBegin	src/cpu/base.hh	/^    inline void workItemBegin() { numWorkItemsStarted++; }$/;"	f	class:BaseCPU
workItemBegin	src/sim/system.hh	/^    inline void workItemBegin(uint32_t tid, uint32_t workid)$/;"	f	class:System
workItemEnd	src/cpu/base.hh	/^    inline void workItemEnd() { numWorkItemsCompleted++; }$/;"	f	class:BaseCPU
workItemEnd	src/sim/system.cc	/^System::workItemEnd(uint32_t tid, uint32_t workid)$/;"	f	class:System
workItemStats	src/sim/system.hh	/^    std::map<uint32_t, Stats::Histogram*> workItemStats;$/;"	m	class:System
workItemsBegin	src/sim/system.hh	/^    uint64_t workItemsBegin;$/;"	m	class:System
workItemsEnd	src/sim/system.hh	/^    uint64_t workItemsEnd;$/;"	m	class:System
work_begin_ckpt_count	src/sim/System.py	/^    work_begin_ckpt_count = Param.Counter(0,$/;"	v
work_begin_cpu_id_exit	src/sim/System.py	/^    work_begin_cpu_id_exit = Param.Int(-1,$/;"	v
work_begin_exit_count	src/sim/System.py	/^    work_begin_exit_count = Param.Counter(0,$/;"	v
work_cpus_ckpt_count	src/sim/System.py	/^    work_cpus_ckpt_count = Param.Counter(0,$/;"	v
work_end_ckpt_count	src/sim/System.py	/^    work_end_ckpt_count = Param.Counter(0,$/;"	v
work_end_exit_count	src/sim/System.py	/^    work_end_exit_count = Param.Counter(0,$/;"	v
work_item_id	src/sim/System.py	/^    work_item_id = Param.Int(-1, "specific work item id")$/;"	v
workbegin	src/sim/pseudo_inst.cc	/^workbegin(ThreadContext *tc, uint64_t workid, uint64_t threadid)$/;"	f	namespace:PseudoInst
workend	src/sim/pseudo_inst.cc	/^workend(ThreadContext *tc, uint64_t workid, uint64_t threadid)$/;"	f	namespace:PseudoInst
workload	src/cpu/BaseCPU.py	/^    workload = VectorParam.Process([], "processes to run")$/;"	v
workload	src/cpu/checker/cpu.hh	/^    std::vector<Process*> workload;$/;"	m	class:CheckerCPU
workload	src/cpu/ozone/simple_params.hh	/^    std::vector<Process *> workload;$/;"	m	class:SimpleParams
wp	src/arch/mips/pra_constants.hh	/^    Bitfield<22>     wp;$/;"	m	namespace:MipsISA
wp	src/arch/x86/regs/misc.hh	/^        Bitfield<16> wp; \/\/ Write Protect$/;"	m	namespace:X86ISA
wr	src/arch/mips/pra_constants.hh	/^    Bitfield<3>      wr;$/;"	m	namespace:MipsISA
wr	src/arch/x86/regs/misc.hh	/^        Bitfield<3> wr; \/\/ WrMem Enable$/;"	m	namespace:X86ISA
wrPerTurnAround	src/mem/dram_ctrl.hh	/^    Stats::Histogram wrPerTurnAround;$/;"	m	class:DRAMCtrl
wrQLenPdf	src/mem/dram_ctrl.hh	/^    Stats::Vector wrQLenPdf;$/;"	m	class:DRAMCtrl
wrapInstObjParams	src/arch/isa_parser.py	/^        def wrapInstObjParams(*args):$/;"	f	function:ISAParser.updateExportContext
wrap_decode_block	src/arch/isa_parser.py	/^    def wrap_decode_block(self, pre, post = ''):$/;"	m	class:GenCode
wrappedFileStream	src/proto/protoio.hh	/^    google::protobuf::io::IstreamInputStream* wrappedFileStream;$/;"	m	class:ProtoInputStream
wrappedFileStream	src/proto/protoio.hh	/^    google::protobuf::io::OstreamOutputStream* wrappedFileStream;$/;"	m	class:ProtoOutputStream
wrapper	src/mem/dramsim2.hh	/^    DRAMSim2Wrapper wrapper;$/;"	m	class:DRAMSim2
wrent	src/arch/alpha/osfpal.hh	/^        wrent = 0x34,$/;"	e	enum:PAL::__anon3
wrfen	src/arch/alpha/osfpal.hh	/^        wrfen = 0x2b,$/;"	e	enum:PAL::__anon3
wripir	src/arch/alpha/osfpal.hh	/^        wripir = 0x0d,$/;"	e	enum:PAL::__anon3
writable	src/arch/sparc/pagetable.hh	/^    bool writable() const { assert(populated); return bits(entry4u,1,1); }$/;"	f	class:SparcISA::PageTableEntry
writable	src/arch/x86/pagetable.hh	/^        bool writable;$/;"	m	struct:X86ISA::TlbEntry
writable	src/arch/x86/regs/misc.hh	/^        Bitfield<12> writable;$/;"	m	namespace:X86ISA
write	src/arch/alpha/remote_gdb.cc	/^RemoteGDB::write(Addr vaddr, size_t size, const char *data)$/;"	f	class:RemoteGDB
write	src/arch/arm/faults.hh	/^    bool write;$/;"	m	class:ArmISA::AbortFault
write	src/arch/arm/remote_gdb.cc	/^RemoteGDB::write(Addr vaddr, size_t size, const char *data)$/;"	f	class:RemoteGDB
write	src/arch/x86/faults.hh	/^            Bitfield<1> write;$/;"	m	class:X86ISA::PageFault
write	src/arch/x86/interrupts.cc	/^X86ISA::Interrupts::write(PacketPtr pkt)$/;"	f	class:X86ISA::Interrupts
write	src/base/bitmap.cc	/^Bitmap::write(std::ostream *bmp) const$/;"	f	class:Bitmap
write	src/base/circlebuf.cc	/^CircleBuf::write(char b)$/;"	f	class:CircleBuf
write	src/base/circlebuf.cc	/^CircleBuf::write(const char *b)$/;"	f	class:CircleBuf
write	src/base/circlebuf.cc	/^CircleBuf::write(const char *b, int len)$/;"	f	class:CircleBuf
write	src/base/remote_gdb.cc	/^BaseRemoteGDB::write(Addr vaddr, size_t size, const char *data)$/;"	f	class:BaseRemoteGDB
write	src/base/remote_gdb.hh	/^BaseRemoteGDB::write(Addr addr, T data)$/;"	f	class:BaseRemoteGDB
write	src/base/vnc/vncserver.cc	/^VncServer::write(T* val)$/;"	f	class:VncServer
write	src/base/vnc/vncserver.cc	/^VncServer::write(const char* str)$/;"	f	class:VncServer
write	src/base/vnc/vncserver.cc	/^VncServer::write(const uint8_t *buf, size_t len)$/;"	f	class:VncServer
write	src/cpu/inorder/cpu.cc	/^InOrderCPU::write(DynInstPtr inst, uint8_t *data, unsigned size,$/;"	f	class:InOrderCPU
write	src/cpu/inorder/resources/cache_unit.cc	/^CacheUnit::write(DynInstPtr inst, uint8_t *data, unsigned size,$/;"	f	class:CacheUnit
write	src/cpu/o3/cpu.hh	/^    Fault write(RequestPtr &req, RequestPtr &sreqLow, RequestPtr &sreqHigh,$/;"	f	class:FullO3CPU
write	src/cpu/o3/lsq.hh	/^LSQ<Impl>::write(RequestPtr req, RequestPtr sreqLow, RequestPtr sreqHigh,$/;"	f	class:LSQ
write	src/cpu/o3/lsq_unit.hh	/^LSQUnit<Impl>::write(Request *req, Request *sreqLow, Request *sreqHigh,$/;"	f	class:LSQUnit
write	src/cpu/ozone/back_end.hh	/^BackEnd<Impl>::write(RequestPtr req, T &data, int store_idx)$/;"	f	class:BackEnd
write	src/cpu/ozone/cpu.hh	/^    Fault write(Request *req, T &data, int store_idx)$/;"	f	class:OzoneCPU
write	src/cpu/ozone/inorder_back_end.hh	/^InorderBackEnd<Impl>::write(MemReqPtr &req, T &data, int store_idx)$/;"	f	class:InorderBackEnd
write	src/cpu/ozone/inorder_back_end.hh	/^InorderBackEnd<Impl>::write(T data, Addr addr, unsigned flags, uint64_t *res)$/;"	f	class:InorderBackEnd
write	src/cpu/ozone/lsq_unit.hh	/^OzoneLSQ<Impl>::write(MemReqPtr &req, T &data, int store_idx)$/;"	f	class:OzoneLSQ
write	src/cpu/ozone/lw_back_end.hh	/^LWBackEnd<Impl>::write(RequestPtr req, T &data, int store_idx)$/;"	f	class:LWBackEnd
write	src/cpu/ozone/lw_lsq.hh	/^OzoneLWLSQ<Impl>::write(RequestPtr req, T &data, int store_idx)$/;"	f	class:OzoneLWLSQ
write	src/dev/alpha/backdoor.cc	/^AlphaBackdoor::write(PacketPtr pkt)$/;"	f	class:AlphaBackdoor
write	src/dev/alpha/tsunami_cchip.cc	/^TsunamiCChip::write(PacketPtr pkt)$/;"	f	class:TsunamiCChip
write	src/dev/alpha/tsunami_io.cc	/^TsunamiIO::write(PacketPtr pkt)$/;"	f	class:TsunamiIO
write	src/dev/alpha/tsunami_pchip.cc	/^TsunamiPChip::write(PacketPtr pkt)$/;"	f	class:TsunamiPChip
write	src/dev/arm/a9scu.cc	/^A9SCU::write(PacketPtr pkt)$/;"	f	class:A9SCU
write	src/dev/arm/amba_fake.cc	/^AmbaFake::write(PacketPtr pkt)$/;"	f	class:AmbaFake
write	src/dev/arm/gic_pl390.cc	/^Pl390::write(PacketPtr pkt)$/;"	f	class:Pl390
write	src/dev/arm/hdlcd.cc	/^HDLcd::write(PacketPtr pkt)$/;"	f	class:HDLcd
write	src/dev/arm/kmi.cc	/^Pl050::write(PacketPtr pkt)$/;"	f	class:Pl050
write	src/dev/arm/pl011.cc	/^Pl011::write(PacketPtr pkt)$/;"	f	class:Pl011
write	src/dev/arm/pl111.cc	/^Pl111::write(PacketPtr pkt)$/;"	f	class:Pl111
write	src/dev/arm/rtc_pl031.cc	/^PL031::write(PacketPtr pkt)$/;"	f	class:PL031
write	src/dev/arm/rv_ctrl.cc	/^RealViewCtrl::write(PacketPtr pkt)$/;"	f	class:RealViewCtrl
write	src/dev/arm/timer_cpulocal.cc	/^CpuLocalTimer::Timer::write(PacketPtr pkt, Addr daddr)$/;"	f	class:CpuLocalTimer::Timer
write	src/dev/arm/timer_cpulocal.cc	/^CpuLocalTimer::write(PacketPtr pkt)$/;"	f	class:CpuLocalTimer
write	src/dev/arm/timer_sp804.cc	/^Sp804::Timer::write(PacketPtr pkt, Addr daddr)$/;"	f	class:Sp804::Timer
write	src/dev/arm/timer_sp804.cc	/^Sp804::write(PacketPtr pkt)$/;"	f	class:Sp804
write	src/dev/arm/vgic.cc	/^VGic::write(PacketPtr pkt)$/;"	f	class:VGic
write	src/dev/baddev.cc	/^BadDevice::write(PacketPtr pkt)$/;"	f	class:BadDevice
write	src/dev/copy_engine.cc	/^CopyEngine::write(PacketPtr pkt)$/;"	f	class:CopyEngine
write	src/dev/copy_engine.hh	/^        virtual Tick write(PacketPtr pkt)$/;"	f	class:CopyEngine::CopyEngineChannel
write	src/dev/disk_image.cc	/^CowDiskImage::write(const uint8_t *data, std::streampos offset)$/;"	f	class:CowDiskImage
write	src/dev/disk_image.cc	/^RawDiskImage::write(const uint8_t *data, std::streampos offset)$/;"	f	class:RawDiskImage
write	src/dev/i8254xGBe.cc	/^IGbE::write(PacketPtr pkt)$/;"	f	class:IGbE
write	src/dev/ide_ctrl.cc	/^IdeController::write(PacketPtr pkt)$/;"	f	class:IdeController
write	src/dev/intel_8254_timer.cc	/^Intel8254Timer::Counter::write(const uint8_t data)$/;"	f	class:Intel8254Timer::Counter
write	src/dev/isa_fake.cc	/^IsaFake::write(PacketPtr pkt)$/;"	f	class:IsaFake
write	src/dev/mips/malta_cchip.cc	/^MaltaCChip::write(PacketPtr pkt)$/;"	f	class:MaltaCChip
write	src/dev/mips/malta_io.cc	/^MaltaIO::write(PacketPtr pkt)$/;"	f	class:MaltaIO
write	src/dev/mips/malta_pchip.cc	/^MaltaPChip::write(PacketPtr pkt)$/;"	f	class:MaltaPChip
write	src/dev/ns_gige.cc	/^NSGigE::write(PacketPtr pkt)$/;"	f	class:NSGigE
write	src/dev/pciconfigall.cc	/^PciConfigAll::write(PacketPtr pkt)$/;"	f	class:PciConfigAll
write	src/dev/simple_disk.cc	/^SimpleDisk::write(Addr addr, baddr_t block, int count)$/;"	f	class:SimpleDisk
write	src/dev/sinic.cc	/^Device::write(PacketPtr pkt)$/;"	f	class:Sinic::Device
write	src/dev/sinicreg.hh	/^    bool write;$/;"	m	struct:Sinic::Regs::Info
write	src/dev/sparc/dtod.cc	/^DumbTOD::write(PacketPtr pkt)$/;"	f	class:DumbTOD
write	src/dev/sparc/iob.cc	/^Iob::write(PacketPtr pkt)$/;"	f	class:Iob
write	src/dev/sparc/mm_disk.cc	/^MmDisk::write(PacketPtr pkt)$/;"	f	class:MmDisk
write	src/dev/terminal.cc	/^Terminal::write(const uint8_t *buf, size_t len)$/;"	f	class:Terminal
write	src/dev/terminal.hh	/^    void write(uint8_t c) { write(&c, 1); }$/;"	f	class:Terminal
write	src/dev/uart8250.cc	/^Uart8250::write(PacketPtr pkt)$/;"	f	class:Uart8250
write	src/dev/x86/cmos.cc	/^X86ISA::Cmos::write(PacketPtr pkt)$/;"	f	class:X86ISA::Cmos
write	src/dev/x86/i8042.cc	/^X86ISA::I8042::write(PacketPtr pkt)$/;"	f	class:X86ISA::I8042
write	src/dev/x86/i82094aa.cc	/^X86ISA::I82094AA::write(PacketPtr pkt)$/;"	f	class:X86ISA::I82094AA
write	src/dev/x86/i8237.cc	/^X86ISA::I8237::write(PacketPtr pkt)$/;"	f	class:X86ISA::I8237
write	src/dev/x86/i8254.cc	/^X86ISA::I8254::write(PacketPtr pkt)$/;"	f	class:X86ISA::I8254
write	src/dev/x86/i8259.cc	/^X86ISA::I8259::write(PacketPtr pkt)$/;"	f	class:X86ISA::I8259
write	src/dev/x86/speaker.cc	/^X86ISA::Speaker::write(PacketPtr pkt)$/;"	f	class:X86ISA::Speaker
write	src/kern/linux/linux_syscalls.hh	/^    write = 271,$/;"	e	enum:SystemCalls::__anon87
write	src/kern/tru64/tru64_syscalls.hh	/^        write = 4,$/;"	e	enum:SystemCalls::__anon102
write	src/mem/port_proxy.hh	/^PortProxy::write(Addr address, T data) const$/;"	f	class:PortProxy
write	src/mem/ruby/system/DMASequencer.hh	/^    bool write;$/;"	m	struct:DMARequest
write	src/mem/ruby/system/MemoryVector.hh	/^MemoryVector::write(const Address & paddr, uint8_t *data, int len)$/;"	f	class:MemoryVector
write	src/proto/protoio.cc	/^ProtoOutputStream::write(const Message& msg)$/;"	f	class:ProtoOutputStream
write	src/python/m5/util/code_formatter.py	/^    def write(self, *args):$/;"	m	class:code_formatter
writeAccesses	src/arch/arm/tlb.hh	/^    Stats::Formula writeAccesses;$/;"	m	class:ArmISA::TLB
writeAddrDist	src/mem/comm_monitor.hh	/^        Stats::SparseHistogram writeAddrDist;$/;"	m	struct:CommMonitor::MonitorStats
writeAddrMask	src/mem/comm_monitor.hh	/^    Addr writeAddrMask;$/;"	m	class:CommMonitor
writeBandwidthHist	src/mem/comm_monitor.hh	/^        Stats::Histogram writeBandwidthHist;$/;"	m	struct:CommMonitor::MonitorStats
writeBit	src/mem/ruby/filters/BlockBloomFilter.cc	/^BlockBloomFilter::writeBit(const int index, const int value)$/;"	f	class:BlockBloomFilter
writeBit	src/mem/ruby/filters/BulkBloomFilter.cc	/^BulkBloomFilter::writeBit(const int index, const int value)$/;"	f	class:BulkBloomFilter
writeBit	src/mem/ruby/filters/GenericBloomFilter.cc	/^GenericBloomFilter::writeBit(const int index, const int value)$/;"	f	class:GenericBloomFilter
writeBit	src/mem/ruby/filters/H3BloomFilter.cc	/^H3BloomFilter::writeBit(const int index, const int value)$/;"	f	class:H3BloomFilter
writeBit	src/mem/ruby/filters/LSB_CountingBloomFilter.cc	/^LSB_CountingBloomFilter::writeBit(const int index, const int value)$/;"	f	class:LSB_CountingBloomFilter
writeBit	src/mem/ruby/filters/MultiBitSelBloomFilter.cc	/^MultiBitSelBloomFilter::writeBit(const int index, const int value)$/;"	f	class:MultiBitSelBloomFilter
writeBit	src/mem/ruby/filters/MultiGrainBloomFilter.cc	/^MultiGrainBloomFilter::writeBit(const int index, const int value)$/;"	f	class:MultiGrainBloomFilter
writeBit	src/mem/ruby/filters/NonCountingBloomFilter.cc	/^NonCountingBloomFilter::writeBit(const int index, const int value)$/;"	f	class:NonCountingBloomFilter
writeBlob	src/mem/fs_translating_port_proxy.cc	/^FSTranslatingPortProxy::writeBlob(Addr addr, uint8_t *p, int size) const$/;"	f	class:FSTranslatingPortProxy
writeBlob	src/mem/port_proxy.hh	/^    virtual void writeBlob(Addr addr, uint8_t* p, int size) const$/;"	f	class:PortProxy
writeBlob	src/mem/se_translating_port_proxy.cc	/^SETranslatingPortProxy::writeBlob(Addr addr, uint8_t *p, int size) const$/;"	f	class:SETranslatingPortProxy
writeBuffer	src/mem/cache/base.hh	/^    MSHRQueue writeBuffer;$/;"	m	class:BaseCache
writeBufferSize	src/mem/dram_ctrl.hh	/^    const uint32_t writeBufferSize;$/;"	m	class:DRAMCtrl
writeBurstLengthHist	src/mem/comm_monitor.hh	/^        Stats::Histogram writeBurstLengthHist;$/;"	m	struct:CommMonitor::MonitorStats
writeBursts	src/mem/dram_ctrl.hh	/^    Stats::Scalar writeBursts;$/;"	m	class:DRAMCtrl
writeByte	src/mem/ruby/common/SubBlock.hh	/^    void writeByte(uint8_t data) { setByte(0, data); }$/;"	f	class:SubBlock
writeCallback	src/mem/ruby/system/Sequencer.cc	/^Sequencer::writeCallback(const Address& address, DataBlock& data,$/;"	f	class:Sequencer
writeCodeFiles	src/mem/slicc/parser.py	/^    def writeCodeFiles(self, code_path, includes):$/;"	m	class:SLICC
writeCodeFiles	src/mem/slicc/symbols/Func.py	/^    def writeCodeFiles(self, path, includes):$/;"	m	class:Func
writeCodeFiles	src/mem/slicc/symbols/StateMachine.py	/^    def writeCodeFiles(self, path, includes):$/;"	m	class:StateMachine
writeCodeFiles	src/mem/slicc/symbols/SymbolTable.py	/^    def writeCodeFiles(self, path, includes):$/;"	m	class:SymbolTable
writeCodeFiles	src/mem/slicc/symbols/Type.py	/^    def writeCodeFiles(self, path, includes):$/;"	m	class:Type
writeCodeFiles	src/mem/slicc/symbols/Var.py	/^    def writeCodeFiles(self, path, includes):$/;"	m	class:Var
writeCommand	src/dev/ide_disk.cc	/^IdeDisk::writeCommand(const Addr offset, int size, const uint8_t *data)$/;"	f	class:IdeDisk
writeComplete	src/mem/dramsim2.cc	/^void DRAMSim2::writeComplete(unsigned id, uint64_t addr, uint64_t cycle)$/;"	f	class:DRAMSim2
writeCompleteEvent	src/dev/copy_engine.hh	/^            writeCompleteEvent;$/;"	m	class:CopyEngine::CopyEngineChannel
writeCompletionStatus	src/dev/copy_engine.cc	/^CopyEngine::CopyEngineChannel::writeCompletionStatus()$/;"	f	class:CopyEngine::CopyEngineChannel
writeCompressedTrace	src/mem/ruby/system/System.cc	/^RubySystem::writeCompressedTrace(uint8_t *raw_data, string filename,$/;"	f	class:RubySystem
writeConfig	src/dev/i8254xGBe.cc	/^IGbE::writeConfig(PacketPtr pkt)$/;"	f	class:IGbE
writeConfig	src/dev/ide_ctrl.cc	/^IdeController::writeConfig(PacketPtr pkt)$/;"	f	class:IdeController
writeConfig	src/dev/ns_gige.cc	/^NSGigE::writeConfig(PacketPtr pkt)$/;"	f	class:NSGigE
writeConfig	src/dev/pcidev.cc	/^PciDevice::writeConfig(PacketPtr pkt)$/;"	f	class:PciDevice
writeControl	src/dev/ide_disk.cc	/^IdeDisk::writeControl(const Addr offset, int size, const uint8_t *data)$/;"	f	class:IdeDisk
writeControl	src/dev/intel_8254_timer.cc	/^Intel8254Timer::writeControl(const CtrlReg data)$/;"	f	class:Intel8254Timer
writeControl	src/dev/x86/i8254.hh	/^    writeControl(uint8_t val)$/;"	f	class:X86ISA::I8254
writeCopyBytes	src/dev/copy_engine.cc	/^CopyEngine::CopyEngineChannel::writeCopyBytes()$/;"	f	class:CopyEngine::CopyEngineChannel
writeCopyBytesComplete	src/dev/copy_engine.cc	/^CopyEngine::CopyEngineChannel::writeCopyBytesComplete()$/;"	f	class:CopyEngine::CopyEngineChannel
writeCounter	src/dev/intel_8254_timer.hh	/^    writeCounter(unsigned int num, const uint8_t data)$/;"	f	class:Intel8254Timer
writeCounter	src/dev/x86/i8254.hh	/^    writeCounter(unsigned int num, const uint8_t data)$/;"	f	class:X86ISA::I8254
writeCpu	src/dev/arm/gic_pl390.cc	/^Pl390::writeCpu(PacketPtr pkt)$/;"	f	class:Pl390
writeCtrl	src/dev/arm/vgic.cc	/^VGic::writeCtrl(PacketPtr pkt)$/;"	f	class:VGic
writeDSPControl	src/arch/mips/dsp.cc	/^MipsISA::writeDSPControl(uint32_t *dspctl, uint32_t value, uint32_t mask)$/;"	f	class:MipsISA
writeData	src/dev/mc146818.cc	/^MC146818::writeData(const uint8_t addr, const uint8_t data)$/;"	f	class:MC146818
writeData	src/dev/x86/i8042.cc	/^X86ISA::I8042::writeData(uint8_t newData, bool mouse)$/;"	f	class:X86ISA::I8042
writeData	src/mem/packet.hh	/^    writeData(uint8_t *p)$/;"	f	class:Packet
writeDataToBlock	src/mem/packet.hh	/^    writeDataToBlock(uint8_t *blk_data, int blkSize)$/;"	f	class:Packet
writeDisk	src/dev/ide_disk.cc	/^IdeDisk::writeDisk(uint32_t sector, uint8_t *data)$/;"	f	class:IdeDisk
writeDistributor	src/dev/arm/gic_pl390.cc	/^Pl390::writeDistributor(PacketPtr pkt)$/;"	f	class:Pl390
writeEvent	src/mem/dram_ctrl.hh	/^    EventWrapper<DRAMCtrl, &DRAMCtrl::processWriteEvent> writeEvent;$/;"	m	class:DRAMCtrl
writeFunc	src/sim/syscall_emul.cc	/^writeFunc(SyscallDesc *desc, int num, LiveProcess *p, ThreadContext *tc)$/;"	f
writeHTMLFiles	src/mem/slicc/parser.py	/^    def writeHTMLFiles(self, html_path):$/;"	m	class:SLICC
writeHTMLFiles	src/mem/slicc/symbols/StateMachine.py	/^    def writeHTMLFiles(self, path):$/;"	m	class:StateMachine
writeHTMLFiles	src/mem/slicc/symbols/Symbol.py	/^    def writeHTMLFiles(self, path):$/;"	m	class:Symbol
writeHTMLFiles	src/mem/slicc/symbols/SymbolTable.py	/^    def writeHTMLFiles(self, path):$/;"	m	class:SymbolTable
writeHighThreshold	src/mem/dram_ctrl.hh	/^    const uint32_t writeHighThreshold;$/;"	m	class:DRAMCtrl
writeHits	src/arch/arm/tlb.hh	/^    mutable Stats::Scalar writeHits;$/;"	m	class:ArmISA::TLB
writeHtoG	src/mem/port_proxy.hh	/^PortProxy::writeHtoG(Addr address, T data) const$/;"	f	class:PortProxy
writeIob	src/dev/sparc/iob.cc	/^Iob::writeIob(PacketPtr pkt)$/;"	f	class:Iob
writeJBus	src/dev/sparc/iob.cc	/^Iob::writeJBus(PacketPtr pkt)$/;"	f	class:Iob
writeLatencyHist	src/mem/comm_monitor.hh	/^        Stats::Histogram writeLatencyHist;$/;"	m	struct:CommMonitor::MonitorStats
writeLowThreshold	src/mem/dram_ctrl.hh	/^    const uint32_t writeLowThreshold;$/;"	m	class:DRAMCtrl
writeMem	src/cpu/base_dyn_inst.hh	/^BaseDynInst<Impl>::writeMem(uint8_t *data, unsigned size,$/;"	f	class:BaseDynInst
writeMem	src/cpu/checker/cpu.cc	/^CheckerCPU::writeMem(uint8_t *data, unsigned size,$/;"	f	class:CheckerCPU
writeMem	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::writeMem(uint8_t *data, unsigned size,$/;"	f	class:InOrderDynInst
writeMem	src/cpu/simple/atomic.cc	/^AtomicSimpleCPU::writeMem(uint8_t *data, unsigned size,$/;"	f	class:AtomicSimpleCPU
writeMem	src/cpu/simple/timing.cc	/^TimingSimpleCPU::writeMem(uint8_t *data, unsigned size,$/;"	f	class:TimingSimpleCPU
writeMemAtomic	src/arch/generic/memhelpers.hh	/^writeMemAtomic(XC *xc, Trace::InstRecord *traceData, const MemT &mem,$/;"	f
writeMemAtomic	src/arch/x86/memhelpers.hh	/^writeMemAtomic(XC *xc, Trace::InstRecord *traceData, uint64_t mem,$/;"	f	namespace:X86ISA
writeMemTiming	src/arch/generic/memhelpers.hh	/^writeMemTiming(XC *xc, Trace::InstRecord *traceData, MemT mem, Addr addr,$/;"	f
writeMemTiming	src/arch/x86/memhelpers.hh	/^writeMemTiming(XC *xc, Trace::InstRecord *traceData, uint64_t mem,$/;"	f	namespace:X86ISA
writeMisses	src/arch/arm/tlb.hh	/^    mutable Stats::Scalar writeMisses;$/;"	m	class:ArmISA::TLB
writeMsix	src/dev/arm/gic_pl390.cc	/^Pl390::writeMsix(PacketPtr pkt)$/;"	f	class:Pl390
writeOK	src/mem/abstract_mem.hh	/^    bool writeOK(PacketPtr pkt) {$/;"	f	class:AbstractMemory
writeOut	src/arch/x86/bios/intelmp.cc	/^X86ISA::IntelMP::AddrSpaceMapping::writeOut($/;"	f	class:X86ISA::IntelMP::AddrSpaceMapping
writeOut	src/arch/x86/bios/intelmp.cc	/^X86ISA::IntelMP::BaseConfigEntry::writeOut(PortProxy& proxy,$/;"	f	class:X86ISA::IntelMP::BaseConfigEntry
writeOut	src/arch/x86/bios/intelmp.cc	/^X86ISA::IntelMP::Bus::writeOut($/;"	f	class:X86ISA::IntelMP::Bus
writeOut	src/arch/x86/bios/intelmp.cc	/^X86ISA::IntelMP::BusHierarchy::writeOut($/;"	f	class:X86ISA::IntelMP::BusHierarchy
writeOut	src/arch/x86/bios/intelmp.cc	/^X86ISA::IntelMP::CompatAddrSpaceMod::writeOut($/;"	f	class:X86ISA::IntelMP::CompatAddrSpaceMod
writeOut	src/arch/x86/bios/intelmp.cc	/^X86ISA::IntelMP::ConfigTable::writeOut(PortProxy& proxy, Addr addr)$/;"	f	class:X86ISA::IntelMP::ConfigTable
writeOut	src/arch/x86/bios/intelmp.cc	/^X86ISA::IntelMP::ExtConfigEntry::writeOut(PortProxy& proxy,$/;"	f	class:X86ISA::IntelMP::ExtConfigEntry
writeOut	src/arch/x86/bios/intelmp.cc	/^X86ISA::IntelMP::FloatingPointer::writeOut(PortProxy& proxy, Addr addr)$/;"	f	class:X86ISA::IntelMP::FloatingPointer
writeOut	src/arch/x86/bios/intelmp.cc	/^X86ISA::IntelMP::IOAPIC::writeOut($/;"	f	class:X86ISA::IntelMP::IOAPIC
writeOut	src/arch/x86/bios/intelmp.cc	/^X86ISA::IntelMP::IntAssignment::writeOut($/;"	f	class:X86ISA::IntelMP::IntAssignment
writeOut	src/arch/x86/bios/intelmp.cc	/^X86ISA::IntelMP::Processor::writeOut($/;"	f	class:X86ISA::IntelMP::Processor
writeOut	src/arch/x86/bios/smbios.cc	/^X86ISA::SMBios::BiosInformation::writeOut(PortProxy& proxy, Addr addr)$/;"	f	class:X86ISA::SMBios::BiosInformation
writeOut	src/arch/x86/bios/smbios.cc	/^X86ISA::SMBios::SMBiosStructure::writeOut(PortProxy& proxy, Addr addr)$/;"	f	class:X86ISA::SMBios::SMBiosStructure
writeOut	src/arch/x86/bios/smbios.cc	/^X86ISA::SMBios::SMBiosTable::writeOut(PortProxy& proxy, Addr addr,$/;"	f	class:X86ISA::SMBios::SMBiosTable
writeOutField	src/arch/x86/bios/intelmp.cc	/^writeOutField(PortProxy& proxy, Addr addr, T val)$/;"	f
writeOutMPTable	src/arch/x86/system.cc	/^X86System::writeOutMPTable(Addr fp,$/;"	f	class:X86System
writeOutSMBiosTable	src/arch/x86/system.cc	/^X86System::writeOutSMBiosTable(Addr header,$/;"	f	class:X86System
writeOutString	src/arch/x86/bios/intelmp.cc	/^writeOutString(PortProxy& proxy, Addr addr, string str, int length)$/;"	f
writeOutStrings	src/arch/x86/bios/smbios.cc	/^X86ISA::SMBios::SMBiosStructure::writeOutStrings($/;"	f	class:X86ISA::SMBios::SMBiosStructure
writePacket	src/dev/i8254xGBe.cc	/^IGbE::RxDescCache::writePacket(EthPacketPtr packet, int pkt_offset)$/;"	f	class:IGbE::RxDescCache
writePktSize	src/mem/dram_ctrl.hh	/^    Stats::Vector writePktSize;$/;"	m	class:DRAMCtrl
writePorts	src/cpu/testers/rubytest/RubyTester.hh	/^    std::vector<MasterPort*> writePorts;$/;"	m	class:RubyTester
writeQueue	src/mem/dram_ctrl.hh	/^    std::deque<DRAMPacket*> writeQueue;$/;"	m	class:DRAMCtrl
writeQueueFull	src/mem/dram_ctrl.cc	/^DRAMCtrl::writeQueueFull(unsigned int neededEntries) const$/;"	f	class:DRAMCtrl
writeReg	src/dev/x86/i82094aa.cc	/^X86ISA::I82094AA::writeReg(uint8_t offset, uint32_t value)$/;"	f	class:X86ISA::I82094AA
writeRegister	src/dev/x86/cmos.cc	/^X86ISA::Cmos::writeRegister(uint8_t reg, uint8_t val)$/;"	f	class:X86ISA::Cmos
writeReqs	src/mem/dram_ctrl.hh	/^    Stats::Scalar writeReqs;$/;"	m	class:DRAMCtrl
writeRowHitRate	src/mem/dram_ctrl.hh	/^    Stats::Formula writeRowHitRate;$/;"	m	class:DRAMCtrl
writeRowHits	src/mem/dram_ctrl.hh	/^    Stats::Scalar writeRowHits;$/;"	m	class:DRAMCtrl
writeSfsr	src/arch/sparc/tlb.cc	/^TLB::writeSfsr(Addr a, bool write, ContextType ct,$/;"	f	class:SparcISA::TLB
writeSfsr	src/arch/sparc/tlb.cc	/^TLB::writeSfsr(bool write, ContextType ct, bool se, FaultTypes ft, int asi)$/;"	f	class:SparcISA::TLB
writeStatusComplete	src/dev/copy_engine.cc	/^CopyEngine::CopyEngineChannel::writeStatusComplete()$/;"	f	class:CopyEngine::CopyEngineChannel
writeString	src/mem/se_translating_port_proxy.cc	/^SETranslatingPortProxy::writeString(Addr addr, const char *str) const$/;"	f	class:SETranslatingPortProxy
writeTagAccess	src/arch/sparc/tlb.cc	/^TLB::writeTagAccess(Addr va, int context)$/;"	f	class:SparcISA::TLB
writeTo	src/arch/x86/bios/e820.cc	/^void X86ISA::E820Table::writeTo(PortProxy& proxy, Addr countAddr, Addr addr)$/;"	f	class:X86ISA::E820Table
writeTrans	src/mem/comm_monitor.hh	/^        unsigned int writeTrans;$/;"	m	struct:CommMonitor::MonitorStats
writeTransHist	src/mem/comm_monitor.hh	/^        Stats::Histogram writeTransHist;$/;"	m	struct:CommMonitor::MonitorStats
writeVCpu	src/dev/arm/vgic.cc	/^VGic::writeVCpu(PacketPtr pkt)$/;"	f	class:VGic
writeVal	src/arch/x86/bios/e820.cc	/^void writeVal(T val, PortProxy& proxy, Addr &addr)$/;"	f
writeVecElem	src/arch/arm/insts/neon64_mem.hh	/^writeVecElem(VReg *dest, XReg src, int index, int eSize)$/;"	f	namespace:ArmISA
write_accesses	src/arch/alpha/tlb.hh	/^    mutable Stats::Scalar write_accesses;$/;"	m	class:AlphaISA::TLB
write_accesses	src/arch/mips/tlb.hh	/^    mutable Stats::Scalar write_accesses;$/;"	m	class:MipsISA::TLB
write_accesses	src/arch/power/tlb.hh	/^    mutable Stats::Scalar write_accesses;$/;"	m	class:PowerISA::TLB
write_acv	src/arch/alpha/tlb.hh	/^    mutable Stats::Scalar write_acv;$/;"	m	class:AlphaISA::TLB
write_acv	src/arch/mips/tlb.hh	/^    mutable Stats::Scalar write_acv;$/;"	m	class:MipsISA::TLB
write_acv	src/arch/power/tlb.hh	/^    mutable Stats::Scalar write_acv;$/;"	m	class:PowerISA::TLB
write_addr_mask	src/mem/CommMonitor.py	/^    write_addr_mask = Param.Addr(MaxAddr, "Address mask for write address")$/;"	v	class:CommMonitor
write_buffer_size	src/mem/DRAMCtrl.py	/^    write_buffer_size = Param.Unsigned(64, "Number of write queue entries")$/;"	v	class:DRAMCtrl
write_buffers	src/mem/cache/BaseCache.py	/^    write_buffers = Param.Int(8, "number of write buffers")$/;"	v	class:BaseCache
write_byte	src/dev/intel_8254_timer.hh	/^        uint8_t read_byte, write_byte;$/;"	m	class:Intel8254Timer::Counter
write_high_thresh_perc	src/mem/DRAMCtrl.py	/^    write_high_thresh_perc = Param.Percent(85, "Threshold to force writes")$/;"	v	class:DRAMCtrl
write_hits	src/arch/alpha/tlb.hh	/^    mutable Stats::Scalar write_hits;$/;"	m	class:AlphaISA::TLB
write_hits	src/arch/mips/tlb.hh	/^    mutable Stats::Scalar write_hits;$/;"	m	class:MipsISA::TLB
write_hits	src/arch/power/tlb.hh	/^    mutable Stats::Scalar write_hits;$/;"	m	class:PowerISA::TLB
write_low_thresh_perc	src/mem/DRAMCtrl.py	/^    write_low_thresh_perc = Param.Percent(50, "Threshold to start writes")$/;"	v	class:DRAMCtrl
write_misses	src/arch/alpha/tlb.hh	/^    mutable Stats::Scalar write_misses;$/;"	m	class:AlphaISA::TLB
write_misses	src/arch/mips/tlb.hh	/^    mutable Stats::Scalar write_misses;$/;"	m	class:MipsISA::TLB
write_misses	src/arch/power/tlb.hh	/^    mutable Stats::Scalar write_misses;$/;"	m	class:PowerISA::TLB
writeback	src/arch/arm/types.hh	/^            Bitfield<21> writeback;$/;"	m	namespace:ArmISA
writeback	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::writeback(DynInstPtr &inst, PacketPtr pkt)$/;"	f	class:LSQUnit
writeback	src/cpu/ozone/back_end.hh	/^    std::list<DynInstPtr> writeback;$/;"	m	class:BackEnd
writeback	src/cpu/ozone/lw_back_end.hh	/^    std::list<DynInstPtr> writeback;$/;"	m	class:LWBackEnd
writeback	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::writeback(DynInstPtr &inst, PacketPtr pkt)$/;"	f	class:OzoneLWLSQ
writeback	src/dev/disk_image.cc	/^CowDiskImage::writeback()$/;"	f	class:CowDiskImage
writeback	src/dev/i8254xGBe.cc	/^IGbE::DescCache<T>::writeback(Addr aMask)$/;"	f	class:IGbE::DescCache
writeback1	src/dev/i8254xGBe.cc	/^IGbE::DescCache<T>::writeback1()$/;"	f	class:IGbE::DescCache
writebackBlk	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::writebackBlk(BlkType *blk)$/;"	f	class:Cache
writebackCount	src/cpu/o3/iew.hh	/^    Stats::Vector writebackCount;$/;"	m	class:DefaultIEW
writebackCount	src/cpu/ozone/lw_back_end.hh	/^    Stats::Vector writebackCount;$/;"	m	class:LWBackEnd
writebackInsts	src/cpu/o3/iew_impl.hh	/^DefaultIEW<Impl>::writebackInsts()$/;"	f	class:DefaultIEW
writebackInsts	src/cpu/ozone/back_end_impl.hh	/^BackEnd<Impl>::writebackInsts()$/;"	f	class:BackEnd
writebackPendingStore	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::writebackPendingStore()$/;"	f	class:LSQUnit
writebackStores	src/cpu/o3/lsq_impl.hh	/^LSQ<Impl>::writebackStores()$/;"	f	class:LSQ
writebackStores	src/cpu/o3/lsq_unit_impl.hh	/^LSQUnit<Impl>::writebackStores()$/;"	f	class:LSQUnit
writebackStores	src/cpu/ozone/lsq_unit_impl.hh	/^OzoneLSQ<Impl>::writebackStores()$/;"	f	class:OzoneLSQ
writebackStores	src/cpu/ozone/lw_lsq_impl.hh	/^OzoneLWLSQ<Impl>::writebackStores()$/;"	f	class:OzoneLWLSQ
writebackVisitor	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::writebackVisitor(BlkType &blk)$/;"	f	class:Cache
writeback_count	src/cpu/ozone/back_end.hh	/^    Stats::Vector writeback_count;$/;"	m	class:BackEnd
writebacks	src/mem/cache/base.hh	/^    Stats::Vector writebacks;$/;"	m	class:BaseCache
writefile	src/sim/pseudo_inst.cc	/^writefile(ThreadContext *tc, Addr vaddr, uint64_t len, uint64_t offset,$/;"	f	namespace:PseudoInst
writes	src/arch/x86/pagetable_walker.hh	/^            std::vector<PacketPtr> writes;$/;"	m	class:X86ISA::Walker::WalkerState
writesThisTime	src/mem/dram_ctrl.hh	/^    uint32_t writesThisTime;$/;"	m	class:DRAMCtrl
writev	src/kern/linux/linux_syscalls.hh	/^    writev = 272,$/;"	e	enum:SystemCalls::__anon87
writev	src/kern/tru64/tru64_syscalls.hh	/^        writev = 121,$/;"	e	enum:SystemCalls::__anon102
writevFunc	src/sim/syscall_emul.hh	/^writevFunc(SyscallDesc *desc, int callnum, LiveProcess *process,$/;"	f
writtenBytes	src/mem/comm_monitor.hh	/^        unsigned int writtenBytes;$/;"	m	struct:CommMonitor::MonitorStats
wrkgp	src/arch/alpha/osfpal.hh	/^        wrkgp = 0x37,$/;"	e	enum:PAL::__anon3
wrmces	src/arch/alpha/osfpal.hh	/^        wrmces = 0x11,$/;"	e	enum:PAL::__anon3
wroteToTimeBuffer	src/cpu/inorder/pipeline_stage.hh	/^    bool wroteToTimeBuffer;$/;"	m	class:PipelineStage
wroteToTimeBuffer	src/cpu/o3/commit.hh	/^    bool wroteToTimeBuffer;$/;"	m	class:DefaultCommit
wroteToTimeBuffer	src/cpu/o3/decode.hh	/^    bool wroteToTimeBuffer;$/;"	m	class:DefaultDecode
wroteToTimeBuffer	src/cpu/o3/fetch.hh	/^    bool wroteToTimeBuffer;$/;"	m	class:DefaultFetch
wroteToTimeBuffer	src/cpu/o3/iew.hh	/^    bool wroteToTimeBuffer;$/;"	m	class:DefaultIEW
wroteToTimeBuffer	src/cpu/o3/rename.hh	/^    bool wroteToTimeBuffer;$/;"	m	class:DefaultRename
wrperfmon	src/arch/alpha/osfpal.hh	/^        wrperfmon = 0x39,$/;"	e	enum:PAL::__anon3
wrunique	src/arch/alpha/osfpal.hh	/^        wrunique = 0x9f,$/;"	e	enum:PAL::__anon3
wrusp	src/arch/alpha/osfpal.hh	/^        wrusp = 0x38,$/;"	e	enum:PAL::__anon3
wrval	src/arch/alpha/osfpal.hh	/^        wrval = 0x31,$/;"	e	enum:PAL::__anon3
wrvptptr	src/arch/alpha/osfpal.hh	/^        wrvptptr = 0x2d,$/;"	e	enum:PAL::__anon3
wsba	src/dev/alpha/tsunami_pchip.hh	/^    uint64_t wsba[4];$/;"	m	class:TsunamiPChip
wsba	src/dev/mips/malta_pchip.hh	/^    uint64_t wsba[4];$/;"	m	class:MaltaPChip
wscale	src/base/inet.hh	/^    uint8_t wscale() const { return opt_data.wscale; }$/;"	f	struct:Net::TcpOpt
wsm	src/dev/alpha/tsunami_pchip.hh	/^    uint64_t wsm[4];$/;"	m	class:TsunamiPChip
wsm	src/dev/mips/malta_pchip.hh	/^    uint64_t wsm[4];$/;"	m	class:MaltaPChip
wtint	src/arch/alpha/osfpal.hh	/^        wtint = 0x3e,$/;"	e	enum:PAL::__anon3
wxn	src/arch/arm/miscregs.hh	/^        Bitfield<19>   wxn;     \/\/ Write permission implies XN$/;"	m	namespace:ArmISA
x	src/arch/x86/types.hh	/^        Bitfield<1> x;$/;"	m	namespace:X86ISA
x	src/base/statistics.hh	/^    size_type x;$/;"	m	class:Stats::Vector2dBase
x	src/base/stats/info.hh	/^    size_type x;$/;"	m	class:Stats::Vector2dInfo
x	src/base/vnc/vncinput.hh	/^        uint16_t x;$/;"	m	struct:VncInput::FrameBufferUpdateReq
x	src/base/vnc/vncinput.hh	/^        uint16_t x;$/;"	m	struct:VncInput::PointerEventMessage
x	src/base/vnc/vncserver.hh	/^        uint16_t x;$/;"	m	struct:VncServer::FrameBufferRect
x	src/python/m5/util/attrdict.py	/^    x = attrdict()$/;"	v
x	src/python/m5/util/attrdict.py	/^    x = multiattrdict()$/;"	v
x	src/python/m5/util/code_formatter.py	/^    x = "this is a test"$/;"	v	class:code_formatter
x	src/python/m5/util/region.py	/^    x = Regions(*((i, i + 1) for i in xrange(0,30,2)))$/;"	v
x86IOAddress	src/arch/x86/x86_traits.hh	/^    x86IOAddress(const uint32_t port)$/;"	f	namespace:X86ISA
x86IOAddress	src/dev/x86/Pc.py	/^def x86IOAddress(port):$/;"	f
x86IOAddress	src/dev/x86/SouthBridge.py	/^def x86IOAddress(port):$/;"	f
x86InterruptAddress	src/arch/x86/x86_traits.hh	/^    x86InterruptAddress(const uint8_t id, const uint16_t addr)$/;"	f	namespace:X86ISA
x86LocalAPICAddress	src/arch/x86/x86_traits.hh	/^    x86LocalAPICAddress(const uint8_t id, const uint16_t addr)$/;"	f	namespace:X86ISA
x86PciConfigAddress	src/arch/x86/x86_traits.hh	/^    x86PciConfigAddress(const uint32_t addr)$/;"	f	namespace:X86ISA
xOverflow	src/dev/ps2.hh	/^    Bitfield<6> xOverflow;$/;"	m	namespace:Ps2
xSign	src/dev/ps2.hh	/^    Bitfield<4> xSign;$/;"	m	namespace:Ps2
xc	src/cpu/translation.hh	/^    ExecContextPtr xc;$/;"	m	class:DataTranslation
xe	src/arch/power/miscregs.hh	/^    Bitfield<4> xe;$/;"	m	namespace:PowerISA
xferCap	src/dev/copy_engine_defs.hh	/^    uint8_t xferCap;$/;"	m	struct:CopyEngineReg::Regs
xmm	src/arch/x86/nativetrace.hh	/^        uint64_t xmm[32];$/;"	m	struct:Trace::X86NativeTrace::ThreadState
xmm	src/cpu/kvm/x86_cpu.cc	/^    uint8_t xmm[16][16];$/;"	m	struct:FXSave	file:
xn	src/arch/arm/pagetable.hh	/^    bool xn;                \/\/ Execute Never$/;"	m	struct:ArmISA::TlbEntry
xn	src/arch/arm/table_walker.hh	/^        bool xn() const$/;"	f	class:ArmISA::TableWalker::L1Descriptor
xn	src/arch/arm/table_walker.hh	/^        bool xn() const$/;"	f	class:ArmISA::TableWalker::L2Descriptor
xn	src/arch/arm/table_walker.hh	/^        bool xn() const$/;"	f	class:ArmISA::TableWalker::LongDescriptor
xnTable	src/arch/arm/table_walker.hh	/^        bool xnTable() const$/;"	f	class:ArmISA::TableWalker::LongDescriptor
xnTable	src/arch/arm/table_walker.hh	/^        bool xnTable;$/;"	m	class:ArmISA::TableWalker::WalkerState
xp	src/arch/arm/miscregs.hh	/^        Bitfield<23>   xp;      \/\/ Extended page table enable (dropped in ARMv7)$/;"	m	namespace:ArmISA
xre	src/arch/alpha/pagetable.hh	/^    uint8_t xre;            \/\/ read permissions - VMEM_PERM_* mask$/;"	m	struct:AlphaISA::TlbEntry
xsdt	src/arch/x86/bios/ACPI.py	/^    xsdt = Param.X86ACPIXSDT(X86ACPIXSDT(),$/;"	v	class:X86ACPIRSDP
xsdt	src/arch/x86/bios/acpi.hh	/^    XSDT * xsdt;$/;"	m	class:X86ISA::ACPI::RSDP
xtc	src/arch/mips/mt_constants.hh	/^    Bitfield<28, 21> xtc;$/;"	m	namespace:MipsISA
xwe	src/arch/alpha/pagetable.hh	/^    uint8_t xwe;            \/\/ write permissions - VMEM_PERM_* mask$/;"	m	struct:AlphaISA::TlbEntry
xx	src/arch/power/miscregs.hh	/^    Bitfield<25> xx;$/;"	m	namespace:PowerISA
y	src/base/statistics.hh	/^    size_type y;$/;"	m	class:Stats::Vector2dBase
y	src/base/stats/info.hh	/^    size_type y;$/;"	m	class:Stats::Vector2dInfo
y	src/base/vnc/vncinput.hh	/^        uint16_t y;$/;"	m	struct:VncInput::FrameBufferUpdateReq
y	src/base/vnc/vncinput.hh	/^        uint16_t y;$/;"	m	struct:VncInput::PointerEventMessage
y	src/base/vnc/vncserver.hh	/^        uint16_t y;$/;"	m	struct:VncServer::FrameBufferRect
y	src/cpu/m5legion_interface.h	/^    uint64_t y;$/;"	m	struct:__anon55
y	src/python/m5/util/code_formatter.py	/^    y = code_formatter()$/;"	v	class:code_formatter
y	src/python/m5/util/region.py	/^    y = Regions(*((i, i + 4) for i in xrange(0,30,5)))$/;"	v
yOverflow	src/dev/ps2.hh	/^    Bitfield<7> yOverflow;$/;"	m	namespace:Ps2
ySign	src/dev/ps2.hh	/^    Bitfield<5> ySign;$/;"	m	namespace:Ps2
y_subnames	src/base/stats/info.hh	/^    std::vector<std::string> y_subnames;$/;"	m	class:Stats::Vector2dInfo
yacc	src/arch/micro_asm.py	/^from ply import yacc$/;"	i
yacc	src/python/m5/util/grammar.py	/^import ply.yacc$/;"	i
year	src/dev/mc146818.hh	/^            uint8_t year;$/;"	m	struct:MC146818::__anon78::__anon79
year_is_bcd	src/dev/alpha/Tsunami.py	/^    year_is_bcd = Param.Bool(False,$/;"	v	class:TsunamiIO
year_is_bcd	src/dev/mips/Malta.py	/^    year_is_bcd = Param.Bool(False,$/;"	v	class:MaltaIO
yieldThread	src/arch/mips/mt.hh	/^yieldThread(TC *tc, Fault &fault, int src_reg, uint32_t yield_mask)$/;"	f	namespace:MipsISA
youngestSN	src/cpu/checker/cpu.hh	/^    InstSeqNum youngestSN;$/;"	m	class:CheckerCPU
youngestSeqNum	src/cpu/o3/commit.hh	/^    InstSeqNum youngestSeqNum[Impl::MaxThreads];$/;"	m	class:DefaultCommit
ysi	src/arch/mips/mt_constants.hh	/^    Bitfield<21>     ysi;$/;"	m	namespace:MipsISA
ysize	src/kern/tru64/tru64.hh	/^        size_t  ysize;          \/\/!< yellow zone size$/;"	m	struct:Tru64::vm_stack
ysubname	src/base/statistics.hh	/^    ysubname(off_type i) const$/;"	f	class:Stats::DataWrapVec2d
ysubname	src/base/statistics.hh	/^    ysubname(off_type index, const std::string &subname)$/;"	f	class:Stats::DataWrapVec2d
ysubnames	src/base/statistics.hh	/^    ysubnames(const char **names)$/;"	f	class:Stats::DataWrapVec2d
z	src/arch/arm/miscregs.hh	/^        Bitfield<11>   z;       \/\/ Branch prediction enable (ARMv7 only)$/;"	m	namespace:ArmISA
z	src/arch/arm/miscregs.hh	/^        Bitfield<30> z;$/;"	m	namespace:ArmISA
z	src/python/m5/util/region.py	/^    z = Region(6,7)$/;"	v
ze	src/arch/power/miscregs.hh	/^    Bitfield<5> ze;$/;"	m	namespace:PowerISA
zero	src/base/statistics.cc	/^Formula::zero() const$/;"	f	class:Stats::Formula
zero	src/base/statistics.hh	/^    bool zero() const { return data == Counter(); }$/;"	f	class:Stats::StatStor
zero	src/base/statistics.hh	/^    bool zero() const { return data()->zero(); }$/;"	f	class:Stats::DistBase
zero	src/base/statistics.hh	/^    bool zero() const { return data()->zero(); }$/;"	f	class:Stats::SparseHistBase
zero	src/base/statistics.hh	/^    bool zero() const { return proxy->zero(); }$/;"	f	class:Stats::ValueBase
zero	src/base/statistics.hh	/^    bool zero() const { return s.zero(); }$/;"	f	class:Stats::InfoProxy
zero	src/base/statistics.hh	/^    bool zero() const { return samples == Counter(); }$/;"	f	class:Stats::SampleStor
zero	src/base/statistics.hh	/^    bool zero() const { return sum == Counter(); }$/;"	f	class:Stats::AvgSampleStor
zero	src/base/statistics.hh	/^    bool zero() const { return total == 0.0; }$/;"	f	class:Stats::AvgStor
zero	src/base/statistics.hh	/^    bool zero() const { return true; }$/;"	f	class:Stats::InfoAccess
zero	src/base/statistics.hh	/^    bool zero() const { return value() == 0; }$/;"	f	class:Stats::ProxyInfo
zero	src/base/statistics.hh	/^    bool zero() { return result() == 0.0; }$/;"	f	class:Stats::ScalarBase
zero	src/base/statistics.hh	/^    zero() const$/;"	f	class:Stats::DistProxy
zero	src/base/statistics.hh	/^    zero() const$/;"	f	class:Stats::DistStor
zero	src/base/statistics.hh	/^    zero() const$/;"	f	class:Stats::HistStor
zero	src/base/statistics.hh	/^    zero() const$/;"	f	class:Stats::SparseHistStor
zero	src/base/statistics.hh	/^    zero() const$/;"	f	class:Stats::Vector2dBase
zero	src/base/statistics.hh	/^    zero() const$/;"	f	class:Stats::VectorBase
zero	src/base/statistics.hh	/^    zero() const$/;"	f	class:Stats::VectorDistBase
zero	src/cpu/timebuf.hh	/^    wire zero()$/;"	f	class:TimeBuffer
zeroCopyStream	src/proto/protoio.hh	/^    google::protobuf::io::ZeroCopyInputStream* zeroCopyStream;$/;"	m	class:ProtoInputStream
zeroCopyStream	src/proto/protoio.hh	/^    google::protobuf::io::ZeroCopyOutputStream* zeroCopyStream;$/;"	m	class:ProtoOutputStream
zeroEvent	src/dev/arm/timer_sp804.hh	/^        EventWrapper<Timer, &Timer::counterAtZero> zeroEvent;$/;"	m	class:Sp804::Timer
zeroReg	src/cpu/o3/rename_map.hh	/^    RegIndex zeroReg;$/;"	m	class:SimpleRenameMap
zeroRegIdx	src/cpu/o3/scoreboard.hh	/^    PhysRegIndex zeroRegIdx;$/;"	m	class:Scoreboard
zeroRegisters	src/arch/alpha/ev5.cc	/^zeroRegisters(CPU *cpu)$/;"	f	namespace:AlphaISA
zeroRegisters	src/arch/mips/utility.cc	/^zeroRegisters(CPU *cpu)$/;"	f	namespace:MipsISA
zero_copy	src/dev/Ethernet.py	/^    zero_copy = Param.Bool(False, "Zero copy receive")$/;"	v	class:Sinic
zero_copy_size	src/dev/Ethernet.py	/^    zero_copy_size = Param.UInt32(64, "Bytes to copy if below threshold")$/;"	v	class:Sinic
zero_copy_threshold	src/dev/Ethernet.py	/^    zero_copy_threshold = Param.UInt32(256,$/;"	v	class:Sinic
zero_fill_64	src/cpu/ozone/cpu.hh	/^    void zero_fill_64(Addr addr) {$/;"	f	class:OzoneCPU
zero_fill_64	src/cpu/simple/base.hh	/^    void zero_fill_64(Addr addr) {$/;"	f	class:BaseSimpleCPU
zero_time	src/mem/ruby/slicc_interface/RubySlicc_Util.hh	/^inline Cycles zero_time() { return Cycles(0); }$/;"	f
zf	src/arch/x86/regs/misc.hh	/^        Bitfield<6> zf; \/\/ Zero Flag$/;"	m	namespace:X86ISA
zf	src/arch/x86/regs/misc.hh	/^        Bitfield<6> zf;$/;"	m	namespace:X86ISA
zlen	src/sim/init.hh	/^    int zlen;$/;"	m	struct:EmbeddedPython
zx	src/arch/power/miscregs.hh	/^    Bitfield<26> zx;$/;"	m	namespace:PowerISA
~AbstractBloomFilter	src/mem/ruby/filters/AbstractBloomFilter.hh	/^    virtual ~AbstractBloomFilter() {};$/;"	f	class:AbstractBloomFilter
~AbstractCacheEntry	src/mem/ruby/slicc_interface/AbstractCacheEntry.cc	/^AbstractCacheEntry::~AbstractCacheEntry()$/;"	f	class:AbstractCacheEntry
~AbstractEntry	src/mem/ruby/slicc_interface/AbstractEntry.cc	/^AbstractEntry::~AbstractEntry()$/;"	f	class:AbstractEntry
~AbstractMemory	src/mem/abstract_mem.hh	/^    virtual ~AbstractMemory() {}$/;"	f	class:AbstractMemory
~AbstractReplacementPolicy	src/mem/ruby/system/AbstractReplacementPolicy.hh	/^AbstractReplacementPolicy::~AbstractReplacementPolicy()$/;"	f	class:AbstractReplacementPolicy
~AccessTraceForAddress	src/mem/ruby/profiler/AccessTraceForAddress.cc	/^AccessTraceForAddress::~AccessTraceForAddress()$/;"	f	class:AccessTraceForAddress
~ActivityRecorder	src/cpu/activity.cc	/^ActivityRecorder::~ActivityRecorder()$/;"	f	class:ActivityRecorder
~AddrMapper	src/mem/addr_mapper.hh	/^    virtual ~AddrMapper() { }$/;"	f	class:AddrMapper
~AddrMapperSenderState	src/mem/addr_mapper.hh	/^        ~AddrMapperSenderState() { }$/;"	f	class:AddrMapper::AddrMapperSenderState
~AddressProfiler	src/mem/ruby/profiler/AddressProfiler.cc	/^AddressProfiler::~AddressProfiler()$/;"	f	class:AddressProfiler
~AlphaSystem	src/arch/alpha/system.cc	/^AlphaSystem::~AlphaSystem()$/;"	f	class:AlphaSystem
~AmpUnit	src/mem/ruby/network/orion/Buffer/AmpUnit.cc	/^AmpUnit::~AmpUnit()$/;"	f	class:AmpUnit
~AoutObject	src/base/loader/aout_object.hh	/^    virtual ~AoutObject() {}$/;"	f	class:AoutObject
~Arbiter	src/mem/ruby/network/orion/Allocator/Arbiter.cc	/^Arbiter::~Arbiter()$/;"	f	class:Arbiter
~Arguments	src/sim/arguments.hh	/^    ~Arguments() {}$/;"	f	class:Arguments
~ArmKvmCPU	src/cpu/kvm/arm_cpu.cc	/^ArmKvmCPU::~ArmKvmCPU()$/;"	f	class:ArmKvmCPU
~ArmSystem	src/arch/arm/system.cc	/^ArmSystem::~ArmSystem()$/;"	f	class:ArmSystem
~AtagHeader	src/arch/arm/linux/atag.hh	/^    virtual ~AtagHeader()$/;"	f	class:AtagHeader
~AtomicSimpleCPU	src/cpu/simple/atomic.cc	/^AtomicSimpleCPU::~AtomicSimpleCPU()$/;"	f	class:AtomicSimpleCPU
~BPHistory	src/cpu/pred/tournament.hh	/^        ~BPHistory()$/;"	f	struct:TournamentBP::BPHistory
~BareIronMipsSystem	src/arch/mips/bare_iron/system.cc	/^BareIronMipsSystem::~BareIronMipsSystem()$/;"	f	class:BareIronMipsSystem
~BarrierEvent	src/sim/global_event.cc	/^BaseGlobalEvent::BarrierEvent::~BarrierEvent()$/;"	f	class:BaseGlobalEvent::BarrierEvent
~BaseBufferArg	src/sim/syscall_emul.hh	/^    virtual ~BaseBufferArg() { delete [] bufPtr; }$/;"	f	class:BaseBufferArg
~BaseBus	src/mem/bus.cc	/^BaseBus::~BaseBus()$/;"	f	class:BaseBus
~BaseCPU	src/cpu/base.cc	/^BaseCPU::~BaseCPU()$/;"	f	class:BaseCPU
~BaseCache	src/mem/cache/base.hh	/^    ~BaseCache() {}$/;"	f	class:BaseCache
~BaseDynInst	src/cpu/base_dyn_inst_impl.hh	/^BaseDynInst<Impl>::~BaseDynInst()$/;"	f	class:BaseDynInst
~BaseGen	src/cpu/testers/traffic_gen/generators.hh	/^    virtual ~BaseGen() { }$/;"	f	class:BaseGen
~BaseGic	src/dev/arm/base_gic.cc	/^BaseGic::~BaseGic()$/;"	f	class:BaseGic
~BaseGlobalEvent	src/sim/global_event.cc	/^BaseGlobalEvent::~BaseGlobalEvent()$/;"	f	class:BaseGlobalEvent
~BaseKvmCPU	src/cpu/kvm/base.cc	/^BaseKvmCPU::~BaseKvmCPU()$/;"	f	class:BaseKvmCPU
~BaseKvmTimer	src/cpu/kvm/timer.hh	/^    virtual ~BaseKvmTimer() {};$/;"	f	class:BaseKvmTimer
~BaseMasterPort	src/mem/port.cc	/^BaseMasterPort::~BaseMasterPort()$/;"	f	class:BaseMasterPort
~BaseO3DynInst	src/cpu/o3/dyn_inst_impl.hh	/^template <class Impl>BaseO3DynInst<Impl>::~BaseO3DynInst()$/;"	f	class:BaseO3DynInst
~BasePrefetcher	src/mem/cache/prefetch/base.hh	/^    virtual ~BasePrefetcher() {}$/;"	f	class:BasePrefetcher
~BaseRemoteGDB	src/arch/null/remote_gdb.hh	/^    virtual ~BaseRemoteGDB() {}$/;"	f	class:BaseRemoteGDB
~BaseRemoteGDB	src/base/remote_gdb.cc	/^BaseRemoteGDB::~BaseRemoteGDB()$/;"	f	class:BaseRemoteGDB
~BaseSimpleCPU	src/cpu/simple/base.cc	/^BaseSimpleCPU::~BaseSimpleCPU()$/;"	f	class:BaseSimpleCPU
~BaseSlavePort	src/mem/port.cc	/^BaseSlavePort::~BaseSlavePort()$/;"	f	class:BaseSlavePort
~BaseTags	src/mem/cache/tags/base.hh	/^    virtual ~BaseTags() {}$/;"	f	class:BaseTags
~BitlineUnit	src/mem/ruby/network/orion/Buffer/BitlineUnit.cc	/^BitlineUnit::~BitlineUnit()$/;"	f	class:BitlineUnit
~Bitmap	src/base/bitmap.cc	/^Bitmap::~Bitmap() {$/;"	f	class:Bitmap
~BlockBloomFilter	src/mem/ruby/filters/BlockBloomFilter.cc	/^BlockBloomFilter::~BlockBloomFilter()$/;"	f	class:BlockBloomFilter
~Buffer	src/mem/ruby/network/orion/Buffer/Buffer.cc	/^Buffer::~Buffer()$/;"	f	class:Buffer
~BulkBloomFilter	src/mem/ruby/filters/BulkBloomFilter.cc	/^BulkBloomFilter::~BulkBloomFilter()$/;"	f	class:BulkBloomFilter
~Cache	src/mem/cache/cache_impl.hh	/^Cache<TagStore>::~Cache()$/;"	f	class:Cache
~CacheBlkPrintWrapper	src/mem/cache/blk.hh	/^    virtual ~CacheBlkPrintWrapper() {}$/;"	f	class:CacheBlkPrintWrapper
~CacheMemory	src/mem/ruby/system/CacheMemory.cc	/^CacheMemory::~CacheMemory()$/;"	f	class:CacheMemory
~CacheRecorder	src/mem/ruby/recorder/CacheRecorder.cc	/^CacheRecorder::~CacheRecorder()$/;"	f	class:CacheRecorder
~CacheRequest	src/cpu/inorder/resources/cache_unit.hh	/^    virtual ~CacheRequest()$/;"	f	class:CacheRequest
~CacheUnitEvent	src/cpu/inorder/resources/cache_unit.hh	/^    virtual ~CacheUnitEvent() {}$/;"	f	class:CacheUnitEvent
~Callback	src/base/callback.hh	/^    virtual ~Callback() {}$/;"	f	class:Callback
~CallbackQueue	src/base/callback.cc	/^CallbackQueue::~CallbackQueue()$/;"	f	class:CallbackQueue
~Channel	src/dev/ide_ctrl.cc	/^IdeController::Channel::~Channel()$/;"	f	class:IdeController::Channel
~CheckTable	src/cpu/testers/rubytest/CheckTable.cc	/^CheckTable::~CheckTable()$/;"	f	class:CheckTable
~CheckerCPU	src/cpu/checker/cpu.cc	/^CheckerCPU::~CheckerCPU()$/;"	f	class:CheckerCPU
~Checkpoint	src/sim/serialize.cc	/^Checkpoint::~Checkpoint()$/;"	f	class:Checkpoint
~CircleBuf	src/base/circlebuf.cc	/^CircleBuf::~CircleBuf()$/;"	f	class:CircleBuf
~Clock	src/mem/ruby/network/orion/Clock.cc	/^Clock::~Clock()$/;"	f	class:Clock
~ClockedObject	src/sim/clocked_object.hh	/^    virtual ~ClockedObject() { }$/;"	f	class:ClockedObject
~CoherentBus	src/mem/coherent_bus.cc	/^CoherentBus::~CoherentBus()$/;"	f	class:CoherentBus
~CommMonitor	src/mem/comm_monitor.hh	/^    ~CommMonitor() {}$/;"	f	class:CommMonitor
~CommMonitorSenderState	src/mem/comm_monitor.hh	/^        ~CommMonitorSenderState() { }$/;"	f	class:CommMonitor::CommMonitorSenderState
~Consumer	src/mem/ruby/common/Consumer.hh	/^    ~Consumer()$/;"	f	class:Consumer
~CopyEngine	src/dev/copy_engine.cc	/^CopyEngine::~CopyEngine()$/;"	f	class:CopyEngine
~CopyEngineChannel	src/dev/copy_engine.cc	/^CopyEngine::CopyEngineChannel::~CopyEngineChannel()$/;"	f	class:CopyEngine::CopyEngineChannel
~CowDiskImage	src/dev/disk_image.cc	/^CowDiskImage::~CowDiskImage()$/;"	f	class:CowDiskImage
~CpuEvent	src/cpu/cpuevent.cc	/^CpuEvent::~CpuEvent()$/;"	f	class:CpuEvent
~Crossbar	src/mem/ruby/network/orion/Crossbar/Crossbar.cc	/^Crossbar::~Crossbar()$/;"	f	class:Crossbar
~DRAMSim2Wrapper	src/mem/dramsim2_wrapper.cc	/^DRAMSim2Wrapper::~DRAMSim2Wrapper()$/;"	f	class:DRAMSim2Wrapper
~Data	src/sim/arguments.cc	/^Arguments::Data::~Data()$/;"	f	class:Arguments::Data
~DataBlock	src/mem/ruby/common/DataBlock.hh	/^    ~DataBlock()$/;"	f	class:DataBlock
~DecoderUnit	src/mem/ruby/network/orion/Buffer/DecoderUnit.cc	/^DecoderUnit::~DecoderUnit()$/;"	f	class:DecoderUnit
~DependencyGraph	src/cpu/o3/dep_graph.hh	/^DependencyGraph<DynInstPtr>::~DependencyGraph()$/;"	f	class:DependencyGraph
~DescCache	src/dev/i8254xGBe.cc	/^IGbE::DescCache<T>::~DescCache()$/;"	f	class:IGbE::DescCache
~Device	src/dev/sinic.cc	/^Device::~Device()$/;"	f	class:Sinic::Device
~DirectedGenerator	src/cpu/testers/directedtest/DirectedGenerator.hh	/^    virtual ~DirectedGenerator() {}$/;"	f	class:DirectedGenerator
~DirectoryMemory	src/mem/ruby/system/DirectoryMemory.cc	/^DirectoryMemory::~DirectoryMemory()$/;"	f	class:DirectoryMemory
~DiskImage	src/dev/disk_image.hh	/^    virtual ~DiskImage() {}$/;"	f	class:DiskImage
~DmaDevice	src/dev/dma_device.hh	/^    virtual ~DmaDevice() { }$/;"	f	class:DmaDevice
~DrainManager	src/sim/drain.cc	/^DrainManager::~DrainManager()$/;"	f	class:DrainManager
~Drainable	src/sim/drain.cc	/^Drainable::~Drainable()$/;"	f	class:Drainable
~DtbObject	src/base/loader/dtb_object.cc	/^DtbObject::~DtbObject()$/;"	f	class:DtbObject
~EAList	src/cpu/ozone/ea_list.hh	/^    ~EAList() { }$/;"	f	class:EAList
~EcoffObject	src/base/loader/ecoff_object.hh	/^    virtual ~EcoffObject() {}$/;"	f	class:EcoffObject
~ElfObject	src/base/loader/elf_object.hh	/^    virtual ~ElfObject() {}$/;"	f	class:ElfObject
~EthPacketData	src/dev/etherpkt.hh	/^    ~EthPacketData() { if (data) delete [] data; }$/;"	f	class:EthPacketData
~EtherBus	src/dev/etherbus.hh	/^    virtual ~EtherBus() {}$/;"	f	class:EtherBus
~EtherInt	src/dev/etherint.hh	/^    virtual ~EtherInt() {}$/;"	f	class:EtherInt
~EtherLink	src/dev/etherlink.cc	/^EtherLink::~EtherLink()$/;"	f	class:EtherLink
~EtherTap	src/dev/ethertap.cc	/^EtherTap::~EtherTap()$/;"	f	class:EtherTap
~Event	src/sim/eventq.cc	/^Event::~Event()$/;"	f	class:Event
~FALRU	src/mem/cache/tags/fa_lru.cc	/^FALRU::~FALRU()$/;"	f	class:FALRU
~FSTranslatingPortProxy	src/mem/fs_translating_port_proxy.cc	/^FSTranslatingPortProxy::~FSTranslatingPortProxy()$/;"	f	class:FSTranslatingPortProxy
~FUPool	src/cpu/o3/fu_pool.cc	/^FUPool::~FUPool()$/;"	f	class:FUPool
~FetchSeqEvent	src/cpu/inorder/resources/fetch_seq_unit.hh	/^        ~FetchSeqEvent() {}$/;"	f	class:FetchSeqUnit::FetchSeqEvent
~FetchSeqUnit	src/cpu/inorder/resources/fetch_seq_unit.cc	/^FetchSeqUnit::~FetchSeqUnit()$/;"	f	class:FetchSeqUnit
~FetchUnit	src/cpu/inorder/resources/fetch_unit.cc	/^FetchUnit::~FetchUnit()$/;"	f	class:FetchUnit
~Flag	src/base/debug.cc	/^Flag::~Flag()$/;"	f	class:Debug::Flag
~FlipFlop	src/mem/ruby/network/orion/FlipFlop.cc	/^FlipFlop::~FlipFlop()$/;"	f	class:FlipFlop
~FreebsdAlphaSystem	src/arch/alpha/freebsd/system.cc	/^FreebsdAlphaSystem::~FreebsdAlphaSystem()$/;"	f	class:FreebsdAlphaSystem
~FullO3CPU	src/cpu/o3/cpu.cc	/^FullO3CPU<Impl>::~FullO3CPU()$/;"	f	class:FullO3CPU
~FunctionProfile	src/cpu/profile.cc	/^FunctionProfile::~FunctionProfile()$/;"	f	class:FunctionProfile
~GDBListener	src/base/remote_gdb.cc	/^GDBListener::~GDBListener()$/;"	f	class:GDBListener
~GHBPrefetcher	src/mem/cache/prefetch/ghb.hh	/^    ~GHBPrefetcher() {}$/;"	f	class:GHBPrefetcher
~GarnetNetwork	src/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.cc	/^GarnetNetwork::~GarnetNetwork()$/;"	f	class:GarnetNetwork
~GarnetNetwork_d	src/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.cc	/^GarnetNetwork_d::~GarnetNetwork_d()$/;"	f	class:GarnetNetwork_d
~GdbRegCache	src/base/remote_gdb.hh	/^        ~GdbRegCache()$/;"	f	class:BaseRemoteGDB::GdbRegCache
~GenericBloomFilter	src/mem/ruby/filters/GenericBloomFilter.cc	/^GenericBloomFilter::~GenericBloomFilter()$/;"	f	class:GenericBloomFilter
~H3BloomFilter	src/mem/ruby/filters/H3BloomFilter.cc	/^H3BloomFilter::~H3BloomFilter()$/;"	f	class:H3BloomFilter
~HDLcd	src/dev/arm/hdlcd.cc	/^HDLcd::~HDLcd()$/;"	f	class:HDLcd
~HexFile	src/base/loader/hex_file.cc	/^HexFile::~HexFile()$/;"	f	class:HexFile
~Histogram	src/mem/ruby/common/Histogram.cc	/^Histogram::~Histogram()$/;"	f	class:Histogram
~IGbE	src/dev/i8254xGBe.cc	/^IGbE::~IGbE()$/;"	f	class:IGbE
~IdeDisk	src/dev/ide_disk.cc	/^IdeDisk::~IdeDisk()$/;"	f	class:IdeDisk
~InOrderCPU	src/cpu/inorder/cpu.cc	/^InOrderCPU::~InOrderCPU()$/;"	f	class:InOrderCPU
~InOrderDynInst	src/cpu/inorder/inorder_dyn_inst.cc	/^InOrderDynInst::~InOrderDynInst()$/;"	f	class:InOrderDynInst
~Info	src/base/statistics.cc	/^Info::~Info()$/;"	f	class:Stats::Info
~IniFile	src/base/inifile.cc	/^IniFile::~IniFile()$/;"	f	class:IniFile
~InputUnit_d	src/mem/ruby/network/garnet/fixed-pipeline/InputUnit_d.cc	/^InputUnit_d::~InputUnit_d()$/;"	f	class:InputUnit_d
~InstQueue	src/cpu/ozone/inst_queue_impl.hh	/^InstQueue<Impl>::~InstQueue()$/;"	f	class:InstQueue
~InstRecord	src/sim/insttracer.hh	/^    virtual ~InstRecord() { }$/;"	f	class:Trace::InstRecord
~InstTracer	src/sim/insttracer.hh	/^    virtual ~InstTracer()$/;"	f	class:Trace::InstTracer
~InstructionQueue	src/cpu/o3/inst_queue_impl.hh	/^InstructionQueue<Impl>::~InstructionQueue()$/;"	f	class:InstructionQueue
~IntDevice	src/dev/x86/intdev.hh	/^    virtual ~IntDevice()$/;"	f	class:X86ISA::IntDevice
~Intel8254Timer	src/dev/intel_8254_timer.hh	/^    ~Intel8254Timer()$/;"	f	class:Intel8254Timer
~InvalidateGenerator	src/cpu/testers/directedtest/InvalidateGenerator.cc	/^InvalidateGenerator::~InvalidateGenerator()$/;"	f	class:InvalidateGenerator
~Kvm	src/cpu/kvm/vm.cc	/^Kvm::~Kvm()$/;"	f	class:Kvm
~KvmVM	src/cpu/kvm/vm.cc	/^KvmVM::~KvmVM()$/;"	f	class:KvmVM
~LRU	src/mem/cache/tags/lru.cc	/^LRU::~LRU()$/;"	f	class:LRU
~LRUPolicy	src/mem/ruby/system/LRUPolicy.hh	/^LRUPolicy::~LRUPolicy()$/;"	f	class:LRUPolicy
~LSB_CountingBloomFilter	src/mem/ruby/filters/LSB_CountingBloomFilter.cc	/^LSB_CountingBloomFilter::~LSB_CountingBloomFilter()$/;"	f	class:LSB_CountingBloomFilter
~LSQ	src/cpu/o3/lsq.hh	/^    ~LSQ() {$/;"	f	class:LSQ
~Link	src/dev/etherlink.hh	/^        ~Link() {}$/;"	f	class:EtherLink::Link
~LinuxAlphaSystem	src/arch/alpha/linux/system.cc	/^LinuxAlphaSystem::~LinuxAlphaSystem()$/;"	f	class:LinuxAlphaSystem
~LinuxArmSystem	src/arch/arm/linux/system.cc	/^LinuxArmSystem::~LinuxArmSystem()$/;"	f	class:LinuxArmSystem
~LinuxMipsSystem	src/arch/mips/linux/system.cc	/^LinuxMipsSystem::~LinuxMipsSystem()$/;"	f	class:LinuxMipsSystem
~LinuxX86System	src/arch/x86/linux/system.cc	/^LinuxX86System::~LinuxX86System()$/;"	f	class:LinuxX86System
~ListenSocket	src/base/socket.cc	/^ListenSocket::~ListenSocket()$/;"	f	class:ListenSocket
~MC146818	src/dev/mc146818.cc	/^MC146818::~MC146818()$/;"	f	class:MC146818
~MDUEvent	src/cpu/inorder/resources/mult_div_unit.hh	/^    ~MDUEvent() { }$/;"	f	class:MDUEvent
~MacroopBase	src/arch/x86/insts/macroop.hh	/^    ~MacroopBase()$/;"	f	class:X86ISA::MacroopBase
~MasterPacketQueue	src/mem/packet_queue.hh	/^    virtual ~MasterPacketQueue() { }$/;"	f	class:MasterPacketQueue
~MasterPort	src/mem/port.cc	/^MasterPort::~MasterPort()$/;"	f	class:MasterPort
~MatrixArbiter	src/mem/ruby/network/orion/Allocator/MatrixArbiter.cc	/^MatrixArbiter::~MatrixArbiter()$/;"	f	class:MatrixArbiter
~MatrixCrossbar	src/mem/ruby/network/orion/Crossbar/MatrixCrossbar.cc	/^MatrixCrossbar::~MatrixCrossbar()$/;"	f	class:MatrixCrossbar
~MemCntrlProfiler	src/mem/ruby/profiler/MemCntrlProfiler.cc	/^MemCntrlProfiler::~MemCntrlProfiler()$/;"	f	class:MemCntrlProfiler
~MemDepEntry	src/cpu/o3/mem_dep_unit.hh	/^        ~MemDepEntry()$/;"	f	class:MemDepUnit::MemDepEntry
~MemDepUnit	src/cpu/inorder/resources/mem_dep_unit.hh	/^    virtual ~MemDepUnit() {}$/;"	f	class:MemDepUnit
~MemDepUnit	src/cpu/o3/mem_dep_unit_impl.hh	/^MemDepUnit<MemDepPred, Impl>::~MemDepUnit()$/;"	f	class:MemDepUnit
~MemUnit	src/mem/ruby/network/orion/Buffer/MemUnit.cc	/^MemUnit::~MemUnit()$/;"	f	class:MemUnit
~Memory	src/arch/arm/insts/mem.hh	/^    ~Memory()$/;"	f	class:ArmISA::Memory
~Memory64	src/arch/arm/insts/mem64.hh	/^    ~Memory64()$/;"	f	class:ArmISA::Memory64
~MemoryControl	src/mem/ruby/system/MemoryControl.cc	/^MemoryControl::~MemoryControl() {};$/;"	f	class:MemoryControl
~MemoryVector	src/mem/ruby/system/MemoryVector.hh	/^MemoryVector::~MemoryVector()$/;"	f	class:MemoryVector
~Message	src/mem/ruby/slicc_interface/Message.hh	/^    virtual ~Message() { }$/;"	f	class:Message
~MessageMasterPort	src/mem/mport.hh	/^    virtual ~MessageMasterPort()$/;"	f	class:MessageMasterPort
~MessageSlavePort	src/mem/mport.hh	/^    virtual ~MessageSlavePort()$/;"	f	class:MessageSlavePort
~MicrocodeRom	src/arch/x86/microcode_rom.hh	/^        ~MicrocodeRom()$/;"	f	class:X86ISAInst::MicrocodeRom
~MipsSystem	src/arch/mips/system.cc	/^MipsSystem::~MipsSystem()$/;"	f	class:MipsSystem
~MultiBitSelBloomFilter	src/mem/ruby/filters/MultiBitSelBloomFilter.cc	/^MultiBitSelBloomFilter::~MultiBitSelBloomFilter()$/;"	f	class:MultiBitSelBloomFilter
~MultiGrainBloomFilter	src/mem/ruby/filters/MultiGrainBloomFilter.cc	/^MultiGrainBloomFilter::~MultiGrainBloomFilter()$/;"	f	class:MultiGrainBloomFilter
~MultreeCrossbar	src/mem/ruby/network/orion/Crossbar/MultreeCrossbar.cc	/^MultreeCrossbar::~MultreeCrossbar()$/;"	f	class:MultreeCrossbar
~NSGigE	src/dev/ns_gige.cc	/^NSGigE::~NSGigE()$/;"	f	class:NSGigE
~NativeTrace	src/cpu/nativetrace.hh	/^    virtual ~NativeTrace() {}$/;"	f	class:Trace::NativeTrace
~NetDest	src/mem/ruby/common/NetDest.hh	/^    ~NetDest()$/;"	f	class:NetDest
~Network	src/mem/ruby/network/Network.hh	/^    virtual ~Network() {}$/;"	f	class:Network
~NetworkInterface	src/mem/ruby/network/garnet/flexible-pipeline/NetworkInterface.cc	/^NetworkInterface::~NetworkInterface()$/;"	f	class:NetworkInterface
~NetworkInterface_d	src/mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.cc	/^NetworkInterface_d::~NetworkInterface_d()$/;"	f	class:NetworkInterface_d
~NetworkLink	src/mem/ruby/network/garnet/flexible-pipeline/NetworkLink.cc	/^NetworkLink::~NetworkLink()$/;"	f	class:NetworkLink
~NetworkLink_d	src/mem/ruby/network/garnet/fixed-pipeline/NetworkLink_d.cc	/^NetworkLink_d::~NetworkLink_d()$/;"	f	class:NetworkLink_d
~NetworkMessage	src/mem/ruby/slicc_interface/NetworkMessage.hh	/^    virtual ~NetworkMessage() { }$/;"	f	class:NetworkMessage
~NonCountingBloomFilter	src/mem/ruby/filters/NonCountingBloomFilter.cc	/^NonCountingBloomFilter::~NonCountingBloomFilter()$/;"	f	class:NonCountingBloomFilter
~NoncoherentBus	src/mem/noncoherent_bus.cc	/^NoncoherentBus::~NoncoherentBus()$/;"	f	class:NoncoherentBus
~ObjectFile	src/base/loader/object_file.cc	/^ObjectFile::~ObjectFile()$/;"	f	class:ObjectFile
~OrionConfig	src/mem/ruby/network/orion/OrionConfig.cc	/^OrionConfig::~OrionConfig()$/;"	f	class:OrionConfig
~OrionLink	src/mem/ruby/network/orion/OrionLink.cc	/^OrionLink::~OrionLink()$/;"	f	class:OrionLink
~OrionRouter	src/mem/ruby/network/orion/OrionRouter.cc	/^OrionRouter::~OrionRouter()$/;"	f	class:OrionRouter
~OutdrvUnit	src/mem/ruby/network/orion/Buffer/OutdrvUnit.cc	/^OutdrvUnit::~OutdrvUnit()$/;"	f	class:OutdrvUnit
~Output	src/base/stats/output.hh	/^    virtual ~Output() {}$/;"	f	struct:Stats::Output
~OutputDirectory	src/base/output.cc	/^OutputDirectory::~OutputDirectory()$/;"	f	class:OutputDirectory
~OutputUnit_d	src/mem/ruby/network/garnet/fixed-pipeline/OutputUnit_d.cc	/^OutputUnit_d::~OutputUnit_d()$/;"	f	class:OutputUnit_d
~OzoneCPU	src/cpu/ozone/cpu_impl.hh	/^OzoneCPU<Impl>::~OzoneCPU()$/;"	f	class:OzoneCPU
~OzoneDynInst	src/cpu/ozone/dyn_inst_impl.hh	/^OzoneDynInst<Impl>::~OzoneDynInst()$/;"	f	class:OzoneDynInst
~PCEvent	src/cpu/pc_event.hh	/^    virtual ~PCEvent() { if (queue) remove(); }$/;"	f	class:PCEvent
~PCEventQueue	src/cpu/pc_event.cc	/^PCEventQueue::~PCEventQueue()$/;"	f	class:PCEventQueue
~PS2Device	src/dev/x86/i8042.hh	/^    virtual ~PS2Device()$/;"	f	class:X86ISA::PS2Device
~Packet	src/mem/packet.hh	/^    ~Packet()$/;"	f	class:Packet
~PacketFifo	src/dev/pktfifo.hh	/^    virtual ~PacketFifo() {}$/;"	f	class:PacketFifo
~PacketQueue	src/mem/packet_queue.cc	/^PacketQueue::~PacketQueue()$/;"	f	class:PacketQueue
~PageTable	src/mem/page_table.cc	/^PageTable::~PageTable()$/;"	f	class:PageTable
~PerfKvmCounter	src/cpu/kvm/perfevent.cc	/^PerfKvmCounter::~PerfKvmCounter()$/;"	f	class:PerfKvmCounter
~PerfKvmCounterConfig	src/cpu/kvm/perfevent.cc	/^PerfKvmCounterConfig::~PerfKvmCounterConfig()$/;"	f	class:PerfKvmCounterConfig
~PerfKvmTimer	src/cpu/kvm/timer.cc	/^PerfKvmTimer::~PerfKvmTimer()$/;"	f	class:PerfKvmTimer
~PerfectSwitch	src/mem/ruby/network/simple/PerfectSwitch.cc	/^PerfectSwitch::~PerfectSwitch()$/;"	f	class:PerfectSwitch
~PersistentTable	src/mem/ruby/system/PersistentTable.cc	/^PersistentTable::~PersistentTable()$/;"	f	class:PersistentTable
~PhysRegFile	src/cpu/o3/regfile.hh	/^    ~PhysRegFile() {}$/;"	f	class:PhysRegFile
~PhysicalMemory	src/mem/physical.cc	/^PhysicalMemory::~PhysicalMemory()$/;"	f	class:PhysicalMemory
~PioDevice	src/dev/io_device.cc	/^PioDevice::~PioDevice()$/;"	f	class:PioDevice
~PipelineStage	src/cpu/inorder/pipeline_stage.cc	/^PipelineStage::~PipelineStage()$/;"	f	class:PipelineStage
~Pl111	src/dev/arm/pl111.cc	/^Pl111::~Pl111()$/;"	f	class:Pl111
~Platform	src/dev/platform.cc	/^Platform::~Platform()$/;"	f	class:Platform
~PollEvent	src/base/pollevent.cc	/^PollEvent::~PollEvent()$/;"	f	class:PollEvent
~PollQueue	src/base/pollevent.cc	/^PollQueue::~PollQueue()$/;"	f	class:PollQueue
~Port	src/mem/port.cc	/^Port::~Port()$/;"	f	class:Port
~PortProxy	src/mem/port_proxy.hh	/^    virtual ~PortProxy() { }$/;"	f	class:PortProxy
~PosixKvmTimer	src/cpu/kvm/timer.cc	/^PosixKvmTimer::~PosixKvmTimer()$/;"	f	class:PosixKvmTimer
~PrechargeUnit	src/mem/ruby/network/orion/Buffer/PrechargeUnit.cc	/^PrechargeUnit::~PrechargeUnit()$/;"	f	class:PrechargeUnit
~PredMacroOp	src/arch/arm/insts/pred_inst.hh	/^    ~PredMacroOp()$/;"	f	class:ArmISA::PredMacroOp
~Prefetcher	src/mem/ruby/structures/Prefetcher.cc	/^Prefetcher::~Prefetcher()$/;"	f	class:Prefetcher
~Print	src/base/cprintf.cc	/^Print::~Print()$/;"	f	class:cp::Print
~PrintReqState	src/mem/packet.cc	/^Packet::PrintReqState::~PrintReqState()$/;"	f	class:Packet::PrintReqState
~Printable	src/base/printable.hh	/^    virtual ~Printable() {}$/;"	f	class:Printable
~ProbeListener	src/sim/probe/probe.hh	/^    virtual ~ProbeListener() {}$/;"	f	class:ProbeListener
~ProbeListenerObject	src/sim/probe/probe.cc	/^ProbeListenerObject::~ProbeListenerObject()$/;"	f	class:ProbeListenerObject
~ProbeManager	src/sim/probe/probe.hh	/^    virtual ~ProbeManager() {}$/;"	f	class:ProbeManager
~ProbePoint	src/sim/probe/probe.hh	/^    virtual ~ProbePoint() {}$/;"	f	class:ProbePoint
~Profiler	src/mem/ruby/profiler/Profiler.cc	/^Profiler::~Profiler()$/;"	f	class:Profiler
~ProtoInputStream	src/proto/protoio.cc	/^ProtoInputStream::~ProtoInputStream()$/;"	f	class:ProtoInputStream
~ProtoOutputStream	src/proto/protoio.cc	/^ProtoOutputStream::~ProtoOutputStream()$/;"	f	class:ProtoOutputStream
~PseudoLRUPolicy	src/mem/ruby/system/PseudoLRUPolicy.hh	/^PseudoLRUPolicy::~PseudoLRUPolicy()$/;"	f	class:PseudoLRUPolicy
~PythonEvent	src/python/swig/pyevent.cc	/^PythonEvent::~PythonEvent()$/;"	f	class:PythonEvent
~QueuedMasterPort	src/mem/qport.hh	/^    virtual ~QueuedMasterPort() { }$/;"	f	class:QueuedMasterPort
~QueuedSlavePort	src/mem/qport.hh	/^    virtual ~QueuedSlavePort() { }$/;"	f	class:QueuedSlavePort
~RRArbiter	src/mem/ruby/network/orion/Allocator/RRArbiter.cc	/^RRArbiter::~RRArbiter()$/;"	f	class:RRArbiter
~Random	src/base/random.cc	/^Random::~Random()$/;"	f	class:Random
~RangeAddrMapper	src/mem/addr_mapper.hh	/^    ~RangeAddrMapper() { }$/;"	f	class:RangeAddrMapper
~RawDiskImage	src/dev/disk_image.cc	/^RawDiskImage::~RawDiskImage()$/;"	f	class:RawDiskImage
~RawObject	src/base/loader/raw_object.hh	/^    virtual ~RawObject() {}$/;"	f	class:RawObject
~RefCounted	src/base/refcnt.hh	/^    virtual ~RefCounted() {}$/;"	f	class:RefCounted
~RefCountingPtr	src/base/refcnt.hh	/^    ~RefCountingPtr() { del(); }$/;"	f	class:RefCountingPtr
~RegDepMap	src/cpu/inorder/reg_dep_map.cc	/^RegDepMap::~RegDepMap()$/;"	f	class:RegDepMap
~Register	src/mem/ruby/network/orion/Buffer/Register.cc	/^Register::~Register()$/;"	f	class:Register
~Request	src/mem/request.hh	/^    ~Request() {}$/;"	f	class:Request
~Resource	src/cpu/inorder/resource.cc	/^Resource::~Resource()$/;"	f	class:Resource
~ResourceEvent	src/cpu/inorder/resource.hh	/^    virtual ~ResourceEvent() { }$/;"	f	class:ResourceEvent
~ResourcePool	src/cpu/inorder/resource_pool.cc	/^ResourcePool::~ResourcePool()$/;"	f	class:ResourcePool
~ResourceRequest	src/cpu/inorder/resource.cc	/^ResourceRequest::~ResourceRequest()$/;"	f	class:ResourceRequest
~RfeOp	src/arch/arm/insts/mem.hh	/^    ~RfeOp()$/;"	f	class:ArmISA::RfeOp
~Router	src/mem/ruby/network/garnet/flexible-pipeline/Router.cc	/^Router::~Router()$/;"	f	class:Router
~Router_d	src/mem/ruby/network/garnet/fixed-pipeline/Router_d.cc	/^Router_d::~Router_d()$/;"	f	class:Router_d
~RubyDirectedTester	src/cpu/testers/directedtest/RubyDirectedTester.cc	/^RubyDirectedTester::~RubyDirectedTester()$/;"	f	class:RubyDirectedTester
~RubyMemoryControl	src/mem/ruby/system/RubyMemoryControl.cc	/^RubyMemoryControl::~RubyMemoryControl()$/;"	f	class:RubyMemoryControl
~RubyPort	src/mem/ruby/system/RubyPort.hh	/^    virtual ~RubyPort() {}$/;"	f	class:RubyPort
~RubyPortProxy	src/mem/ruby/system/RubyPortProxy.cc	/^RubyPortProxy::~RubyPortProxy()$/;"	f	class:RubyPortProxy
~RubyStatsCallback	src/mem/ruby/system/System.hh	/^    virtual ~RubyStatsCallback() {}$/;"	f	class:RubyStatsCallback
~RubySystem	src/mem/ruby/system/System.cc	/^RubySystem::~RubySystem()$/;"	f	class:RubySystem
~RubyTester	src/cpu/testers/rubytest/RubyTester.cc	/^RubyTester::~RubyTester()$/;"	f	class:RubyTester
~SETranslatingPortProxy	src/mem/se_translating_port_proxy.cc	/^SETranslatingPortProxy::~SETranslatingPortProxy()$/;"	f	class:SETranslatingPortProxy
~SMBiosStructure	src/arch/x86/bios/smbios.hh	/^    ~SMBiosStructure()$/;"	f	class:X86ISA::SMBios::SMBiosStructure
~SQEntry	src/cpu/o3/lsq_unit.hh	/^        ~SQEntry()$/;"	f	struct:LSQUnit::SQEntry
~SRAM	src/mem/ruby/network/orion/Buffer/SRAM.cc	/^SRAM::~SRAM()$/;"	f	class:SRAM
~SWAllocator	src/mem/ruby/network/orion/Allocator/SWAllocator.cc	/^SWAllocator::~SWAllocator()$/;"	f	class:SWAllocator
~ScheduleEntry	src/cpu/inorder/pipeline_traits.5stage.hh	/^        virtual ~ScheduleEntry(){}$/;"	f	struct:ThePipeline::ScheduleEntry
~ScheduleEntry	src/cpu/inorder/pipeline_traits.9stage.hh	/^        virtual ~ScheduleEntry(){}$/;"	f	struct:ThePipeline::ScheduleEntry
~ScheduleEntry	src/cpu/inorder/pipeline_traits.9stage.smt2.hh	/^        virtual ~ScheduleEntry(){}$/;"	f	struct:ThePipeline::ScheduleEntry
~Scoreboard	src/cpu/o3/scoreboard.hh	/^    ~Scoreboard() {}$/;"	f	class:Scoreboard
~SenderState	src/mem/packet.hh	/^        virtual ~SenderState() {}$/;"	f	struct:Packet::SenderState
~Sequencer	src/mem/ruby/system/Sequencer.cc	/^Sequencer::~Sequencer()$/;"	f	class:Sequencer
~Serializable	src/sim/serialize.cc	/^Serializable::~Serializable()$/;"	f	class:Serializable
~SerializableBuilder	src/sim/serialize.hh	/^    virtual ~SerializableBuilder() {}$/;"	f	class:SerializableBuilder
~SeriesRequestGenerator	src/cpu/testers/directedtest/SeriesRequestGenerator.cc	/^SeriesRequestGenerator::~SeriesRequestGenerator()$/;"	f	class:SeriesRequestGenerator
~Set	src/mem/ruby/common/Set.cc	/^Set::~Set()$/;"	f	class:Set
~SimObject	src/sim/sim_object.hh	/^    virtual ~SimObject() {}$/;"	f	class:SimObject
~SimpleDisk	src/dev/simple_disk.cc	/^SimpleDisk::~SimpleDisk()$/;"	f	class:SimpleDisk
~SimpleNetwork	src/mem/ruby/network/simple/SimpleNetwork.cc	/^SimpleNetwork::~SimpleNetwork()$/;"	f	class:SimpleNetwork
~SimpleRenameMap	src/cpu/o3/rename_map.hh	/^    ~SimpleRenameMap() {};$/;"	f	class:SimpleRenameMap
~SimpleThread	src/cpu/simple_thread.cc	/^SimpleThread::~SimpleThread()$/;"	f	class:SimpleThread
~SimpleTimingPort	src/mem/tport.hh	/^    virtual ~SimpleTimingPort() { }$/;"	f	class:SimpleTimingPort
~SlavePacketQueue	src/mem/packet_queue.hh	/^    virtual ~SlavePacketQueue() { }$/;"	f	class:SlavePacketQueue
~SlavePort	src/mem/port.cc	/^SlavePort::~SlavePort()$/;"	f	class:SlavePort
~SparcSystem	src/arch/sparc/system.cc	/^SparcSystem::~SparcSystem()$/;"	f	class:SparcSystem
~SparseMemory	src/mem/ruby/system/SparseMemory.cc	/^SparseMemory::~SparseMemory()$/;"	f	class:SparseMemory
~SrsOp	src/arch/arm/insts/mem.hh	/^    ~SrsOp()$/;"	f	class:ArmISA::SrsOp
~StackTrace	src/arch/alpha/stacktrace.cc	/^StackTrace::~StackTrace()$/;"	f	class:AlphaISA::StackTrace
~StackTrace	src/arch/arm/stacktrace.cc	/^    StackTrace::~StackTrace()$/;"	f	class:ArmISA::StackTrace
~StackTrace	src/arch/mips/stacktrace.cc	/^StackTrace::~StackTrace()$/;"	f	class:StackTrace
~StackTrace	src/arch/power/stacktrace.cc	/^StackTrace::~StackTrace()$/;"	f	class:PowerISA::StackTrace
~StackTrace	src/arch/x86/stacktrace.cc	/^    StackTrace::~StackTrace()$/;"	f	class:X86ISA::StackTrace
~StaticInst	src/cpu/static_inst.cc	/^StaticInst::~StaticInst()$/;"	f	class:StaticInst
~Statistics	src/kern/kernel_stats.hh	/^    virtual ~Statistics() {}$/;"	f	class:Kernel::Statistics
~StatsCallback	src/mem/ruby/network/Network.hh	/^        virtual ~StatsCallback() {}$/;"	f	class:Network::StatsCallback
~StatsCallback	src/mem/ruby/slicc_interface/AbstractController.hh	/^        virtual ~StatsCallback() {}$/;"	f	class:AbstractController::StatsCallback
~StorageParams	src/base/statistics.cc	/^StorageParams::~StorageParams()$/;"	f	class:Stats::StorageParams
~StoreSet	src/cpu/o3/store_set.cc	/^StoreSet::~StoreSet()$/;"	f	class:StoreSet
~StoreTrace	src/mem/ruby/profiler/StoreTrace.cc	/^StoreTrace::~StoreTrace()$/;"	f	class:StoreTrace
~StridePrefetcher	src/mem/cache/prefetch/stride.hh	/^    ~StridePrefetcher() {}$/;"	f	class:StridePrefetcher
~SubBlock	src/mem/ruby/common/SubBlock.hh	/^    ~SubBlock() { }$/;"	f	class:SubBlock
~Switch	src/mem/ruby/network/simple/Switch.cc	/^Switch::~Switch()$/;"	f	class:Switch
~Switch_d	src/mem/ruby/network/garnet/fixed-pipeline/Switch_d.cc	/^Switch_d::~Switch_d()$/;"	f	class:Switch_d
~SymbolTable	src/base/loader/symtab.hh	/^    ~SymbolTable() {}$/;"	f	class:SymbolTable
~SyscallReturn	src/sim/syscallreturn.hh	/^    ~SyscallReturn() {}$/;"	f	class:SyscallReturn
~System	src/sim/system.cc	/^System::~System()$/;"	f	class:System
~TLB	src/arch/alpha/tlb.cc	/^TLB::~TLB()$/;"	f	class:AlphaISA::TLB
~TLB	src/arch/arm/tlb.cc	/^TLB::~TLB()$/;"	f	class:TLB
~TLB	src/arch/mips/tlb.cc	/^TLB::~TLB()$/;"	f	class:TLB
~TLB	src/arch/power/tlb.cc	/^TLB::~TLB()$/;"	f	class:TLB
~TLBUnit	src/cpu/inorder/resources/tlb_unit.hh	/^    virtual ~TLBUnit() {}$/;"	f	class:TLBUnit
~TLBUnitEvent	src/cpu/inorder/resources/tlb_unit.hh	/^    virtual ~TLBUnitEvent() {}$/;"	f	class:TLBUnitEvent
~TableWalker	src/arch/arm/table_walker.cc	/^TableWalker::~TableWalker()$/;"	f	class:TableWalker
~TaggedPrefetcher	src/mem/cache/prefetch/tagged.hh	/^    ~TaggedPrefetcher() {}$/;"	f	class:TaggedPrefetcher
~TapListener	src/dev/ethertap.cc	/^    ~TapListener() { if (event) delete event; }$/;"	f	class:TapListener
~TechParameter	src/mem/ruby/network/orion/TechParameter.cc	/^TechParameter::~TechParameter()$/;"	f	class:TechParameter
~Terminal	src/dev/terminal.cc	/^Terminal::~Terminal()$/;"	f	class:Terminal
~TestRC	src/unittest/refcnttest.cc	/^    ~TestRC()$/;"	f	class:__anon106::TestRC
~Text	src/base/stats/text.cc	/^Text::~Text()$/;"	f	class:Stats::Text
~ThreadContext	src/cpu/thread_context.hh	/^    virtual ~ThreadContext() { };$/;"	f	class:ThreadContext
~ThreadInfo	src/arch/generic/linux/threadinfo.hh	/^    ~ThreadInfo()$/;"	f	class:Linux::ThreadInfo
~ThreadState	src/cpu/thread_state.cc	/^ThreadState::~ThreadState()$/;"	f	class:ThreadState
~Throttle	src/mem/ruby/network/simple/Throttle.hh	/^    ~Throttle() {}$/;"	f	class:Throttle
~TimeBuffer	src/cpu/timebuf.hh	/^    ~TimeBuffer()$/;"	f	class:TimeBuffer
~TimingSimpleCPU	src/cpu/simple/timing.cc	/^TimingSimpleCPU::~TimingSimpleCPU()$/;"	f	class:TimingSimpleCPU
~TrafficGen	src/cpu/testers/traffic_gen/traffic_gen.hh	/^    ~TrafficGen() {}$/;"	f	class:TrafficGen
~Translation	src/sim/tlb.hh	/^        virtual ~Translation()$/;"	f	class:BaseTLB::Translation
~Tru64AlphaSystem	src/arch/alpha/tru64/system.cc	/^Tru64AlphaSystem::~Tru64AlphaSystem()$/;"	f	class:Tru64AlphaSystem
~UnifiedRenameMap	src/cpu/o3/rename_map.hh	/^    ~UnifiedRenameMap() {};$/;"	f	class:UnifiedRenameMap
~VCAllocator	src/mem/ruby/network/orion/Allocator/VCAllocator.cc	/^VCAllocator::~VCAllocator()$/;"	f	class:VCAllocator
~VCarbiter	src/mem/ruby/network/garnet/flexible-pipeline/VCarbiter.hh	/^    ~VCarbiter() {}$/;"	f	class:VCarbiter
~VPtr	src/sim/vptr.hh	/^    ~VPtr()$/;"	f	class:VPtr
~ValueBase	src/base/statistics.hh	/^    ~ValueBase() { if (proxy) delete proxy; }$/;"	f	class:Stats::ValueBase
~Vector2dBase	src/base/statistics.hh	/^    ~Vector2dBase()$/;"	f	class:Stats::Vector2dBase
~VectorBase	src/base/statistics.hh	/^    ~VectorBase()$/;"	f	class:Stats::VectorBase
~VectorDistBase	src/base/statistics.hh	/^    ~VectorDistBase()$/;"	f	class:Stats::VectorDistBase
~VideoConvert	src/base/vnc/convert.cc	/^VideoConvert::~VideoConvert()$/;"	f	class:VideoConvert
~VirtualChannel_d	src/mem/ruby/network/garnet/fixed-pipeline/VirtualChannel_d.cc	/^VirtualChannel_d::~VirtualChannel_d()$/;"	f	class:VirtualChannel_d
~VncServer	src/base/vnc/vncserver.cc	/^VncServer::~VncServer()$/;"	f	class:VncServer
~Wire	src/mem/ruby/network/orion/Wire.cc	/^Wire::~Wire()$/;"	f	class:Wire
~WireBuffer	src/mem/ruby/system/WireBuffer.cc	/^WireBuffer::~WireBuffer()$/;"	f	class:WireBuffer
~WordlineUnit	src/mem/ruby/network/orion/Buffer/WordlineUnit.cc	/^WordlineUnit::~WordlineUnit()$/;"	f	class:WordlineUnit
~X86KvmCPU	src/cpu/kvm/x86_cpu.cc	/^X86KvmCPU::~X86KvmCPU()$/;"	f	class:X86KvmCPU
~X86System	src/arch/x86/system.cc	/^X86System::~X86System()$/;"	f	class:X86System
